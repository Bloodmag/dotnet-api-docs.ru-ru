<Type Name="ControlDesigner" FullName="System.Web.UI.Design.ControlDesigner">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8c5c896260ea14833069ad421931890bd2df308f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30591308" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ControlDesigner : System.Web.UI.Design.HtmlControlDesigner" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ControlDesigner extends System.Web.UI.Design.HtmlControlDesigner" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ControlDesigner" />
  <TypeSignature Language="VB.NET" Value="Public Class ControlDesigner&#xA;Inherits HtmlControlDesigner" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlDesigner : System::Web::UI::Design::HtmlControlDesigner" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Design.HtmlControlDesigner</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет базовый класс конструктора элементов управления для расширения поведения серверного веб-элемента управления в режиме конструктора.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ControlDesigner> Класс предоставляет класс конструктора базового элемента управления, который унаследован и расширен для обеспечения поддержки во время разработки для элемента управления в узле разработки, такие как [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)].  
  
 Объектную модель для работы с отрисовкой во время разработки усовершенствована по сравнению с предыдущими версиями благодаря следующие новые базовые классы для предоставления доступа к упрощенной объектной модели:  
  
-   <xref:System.Web.UI.Design.ControlDesigner>, которая не является новым, но была значительно улучшена.  
  
-   <xref:System.Web.UI.Design.ContainerControlDesigner>.  
  
-   <xref:System.Web.UI.Design.WebControls.CompositeControlDesigner>.  
  
## <a name="automatic-formatting"></a>Автоматическое форматирование  
 Можно создавать различные автоматические и предварительно определенные форматы, которые могут упростить процесс для разработчиков страниц, которые применяют сложные изменения стилей для пользовательских серверных элементов управления. Например <xref:System.Web.UI.Design.WebControls.TableDesigner> управления, который является производным от <xref:System.Web.UI.Design.ControlDesigner> класса, предоставляет множество форматов, автоматическое для выбора. Для реализации и обеспечения автоматического форматирования в пользовательских элементов управления, используйте следующие возможности:  
  
-   Свойство <xref:System.Web.UI.Design.ControlDesigner.AutoFormats%2A>.  
  
-   метод <xref:System.Web.UI.Design.ControlDesigner.OnAutoFormatApplied%2A>;  
  
-   класс <xref:System.Web.UI.Design.DesignerAutoFormat>;  
  
-   класс <xref:System.Web.UI.Design.DesignerAutoFormatStyle>;  
  
## <a name="action-lists-smart-tags"></a>Списки действий (смарт-тегов)  
 Списки действий — это меню из важных или широко используемых задач, которые разработчик страниц, используется элемент управления можно выполнять в во время разработки пользовательский интерфейс (UI), такие как [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)]. Например представления времени разработки элемента управления может предоставить меню доступных задач. В нем содержится задача автоматического форматирования элемента управления. Дополнительные сведения о списках, запустите с помощью следующих средств:  
  
-   Свойство <xref:System.Web.UI.Design.ControlDesigner.ActionLists%2A>.  
  
-   класс <xref:System.ComponentModel.Design.DesignerActionList>;  
  
-   метод <xref:System.ComponentModel.Design.DesignerActionList.GetSortedActionItems%2A>;  
  
-   класс <xref:System.ComponentModel.Design.DesignerActionListCollection>;  
  
-   класс <xref:System.ComponentModel.Design.DesignerActionMethodItem>;  
  
-   класс <xref:System.ComponentModel.Design.DesignerActionPropertyItem>;  
  
## <a name="control-designer-regions"></a>Области конструктора элементов управления  
 Области — это области, изменяемые в представлении времени разработки элемента управления. Эта функция предоставляет возможность точного редактирования содержимого шаблона, внутренние элементы управления и свойств во время разработки. Вы можете создавать элементы управления в области конструктора элементов управления или элементов можно использовать для перетаскивания элементов управления в области. Области управляются с помощью следующих средств:  
  
-   метод <xref:System.Web.UI.Design.ControlDesigner.OnClick%2A>;  
  
-   класс <xref:System.Web.UI.Design.DesignerRegion>;  
  
-   класс <xref:System.Web.UI.Design.EditableDesignerRegion>;  
  
-   метод <xref:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent%2A>;  
  
-   метод <xref:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent%2A>;  
  
## <a name="templates"></a>Шаблоны  
 Модель для создания пользовательского интерфейса для редактирования во время разработки шаблонных элементов управления, таких как <xref:System.Web.UI.WebControls.GridView> контроля, была значительно улучшена из более ранних версий. Можно создавать сложные пользовательские элементы управления, которые включают шаблоны для различных частей элемента управления и конструктора пользовательского элемента управления может помочь разработчикам страниц, изменяющим шаблоны с помощью следующих средств:  
  
-   Свойство <xref:System.Web.UI.Design.ControlDesigner.TemplateGroups%2A>.  
  
-   Свойство <xref:System.Web.UI.Design.ControlDesigner.InTemplateMode%2A>.  
  
-   класс <xref:System.Web.UI.Design.TemplateGroup>;  
  
## <a name="design-time-rendering"></a>Отрисовка во время разработки  
 <xref:System.Web.UI.Design.ControlDesigner> Класс содержит следующие методы для поддержки разработки отрисовки элемента управления веб-сервером. Большинство этих методов, которые как в более ранних версиях.  
  
-   метод <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A>;  
  
-   метод <xref:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml%2A>;  
  
-   метод <xref:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml%2A>;  
  
-   метод <xref:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml%2A>;  
  
-   метод <xref:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml%2A>;  
  
   
  
## Examples  
 В следующем примере кода демонстрируется создание простого конструктора класса, производного от <xref:System.Web.UI.Design.ControlDesigner> класса. Этот конструктор элементов управления поддерживает пользовательское `TextControl` класса и предоставляет команду, чтобы изменить размер элемента управления во время разработки. Конструктор элементов управления, связанный с элементом управления, указав конструктор элементов управления в <xref:System.ComponentModel.DesignerAttribute> объявления объекта на `TextControl` класса. Ключ для сохранения изменений свойства из конструктора элементов управления для HTML-разметка находится в `ToggleTextSize` метод пользовательской `ActionList` класса.  
  
 Чтобы выполнить этот пример, добавьте ссылку на сборку System.Design.dll и компиляции кода.  
  
 [!code-csharp[ControlDesignerSample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlDesignerSample/cs/TextControlDesigner.cs#1)]
 [!code-vb[ControlDesignerSample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlDesignerSample/vb/TextControlDesigner.vb#1)]  
[!code-aspx-csharp[ControlDesignerSample#8](~/samples/snippets/csharp/VS_Snippets_WebNet/ControlDesignerSample/cs/TextControlDesigner.aspx#8)]
[!code-aspx-vb[ControlDesignerSample#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ControlDesignerSample/vb/TextControlDesigner.aspx#8)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.TemplateGroup" />
    <altmember cref="T:System.Web.UI.Design.DesignerAutoFormat" />
    <altmember cref="T:System.ComponentModel.Design.DesignerActionList" />
    <altmember cref="T:System.Web.UI.Design.DesignerRegion" />
    <altmember cref="T:System.Web.UI.Design.ContainerControlDesigner" />
    <altmember cref="T:System.Web.UI.Design.WebControls.CompositeControlDesigner" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ControlDesigner ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ControlDesigner();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.Design.ControlDesigner" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActionLists">
      <MemberSignature Language="C#" Value="public override System.ComponentModel.Design.DesignerActionListCollection ActionLists { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.Design.DesignerActionListCollection ActionLists" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.ActionLists" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ActionLists As DesignerActionListCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::Design::DesignerActionListCollection ^ ActionLists { System::ComponentModel::Design::DesignerActionListCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.Design.DesignerActionListCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает коллекцию списков действий для конструктора элементов управления.</summary>
        <value>Объект <see cref="T:System.ComponentModel.Design.DesignerActionListCollection" />, содержащий элементы <see cref="T:System.ComponentModel.Design.DesignerActionList" /> для конструктора элементов управления.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как для создания простого составного элемента управления с <xref:System.Web.UI.WebControls.Label> и <xref:System.Web.UI.WebControls.TextBox> управления вместе со свойствами для задания свойств текста на обоих внутренних элементов управления, а также <xref:System.Web.UI.WebControls.WebControl.Width%2A> и <xref:System.Web.UI.WebControls.WebControl.BackColor%2A> свойства <xref:System.Web.UI.WebControls.TextBox> элемента управления. Связанный класс элемента управления конструктора создает три <xref:System.ComponentModel.Design.DesignerActionMethodItem> команд, каждая из которых задает два свойства элемента управления и может быть выполнен откат с помощью функции отмены узла конструктора.  
  
 [!code-csharp[DesignerInvokeTransactedChange#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerInvokeTransactedChange/CS/InvokeTransactedChangeSample.cs#1)]
 [!code-vb[DesignerInvokeTransactedChange#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerInvokeTransactedChange/VB/InvokeTransactedChangeSample.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Чтобы добавить меню списка действий в пользовательский элемент управления в режиме конструктора, необходимо переопределить конструктор пользовательских элементов управления <see cref="P:System.Web.UI.Design.ControlDesigner.ActionLists" /> свойство для возврата класс пользовательского элемента управления, который является производным от <see cref="T:System.ComponentModel.Design.DesignerActionList" /> класса.</para>
        </block>
        <altmember cref="T:System.ComponentModel.Design.DesignerActionListCollection" />
      </Docs>
    </Member>
    <Member MemberName="AllowResize">
      <MemberSignature Language="C#" Value="public virtual bool AllowResize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowResize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.AllowResize" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllowResize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowResize { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, можно ли изменять размер элемента управления в среде времени разработки.</summary>
        <value>
          Значение <see langword="true" />, если размеры элемента управления можно изменять; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как переопределить <xref:System.Web.UI.Design.ControlDesigner.AllowResize%2A> свойству в классе конструктора пользовательского элемента управления.  
  
 Данный пример кода является частью большего примера, приведенного для <xref:System.Web.UI.Design.ControlDesigner.TemplateGroups%2A> свойства.  
  
 [!code-csharp[DesignerTemplateGroupSample#3](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerTemplateGroupSample/CS/TemplateGroupsSample.cs#3)]
 [!code-vb[DesignerTemplateGroupSample#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerTemplateGroupSample/VB/TemplateGroupsSample.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Используйте <see cref="P:System.Web.UI.Design.ControlDesigner.AllowResize" /> свойство в производных классах для включения или отключения разработчики страниц из изменение размеров элемента управления в узле разработки.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="AutoFormats">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Design.DesignerAutoFormatCollection AutoFormats { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Design.DesignerAutoFormatCollection AutoFormats" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.AutoFormats" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AutoFormats As DesignerAutoFormatCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::Design::DesignerAutoFormatCollection ^ AutoFormats { System::Web::UI::Design::DesignerAutoFormatCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.DesignerAutoFormatCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию предварительно определенных схем автоматического форматирования, которые будут отображаться в диалоговом окне **Автоформат** для связанного элемента управления во время разработки.</summary>
        <value>Объект <see cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />, содержащий предварительно определенные схемы для элемента управления.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Полный серверный элемент управления включает не только управлять, но также, возможно, соответствующий класс элемента управления конструктора, производный от <xref:System.Web.UI.Design.ControlDesigner> класса и форматирования класс, который является производным от <xref:System.Web.UI.Design.DesignerAutoFormat> класса. <xref:System.Web.UI.Design.ControlDesigner.AutoFormats%2A> Свойство является коллекцией экземпляров <xref:System.Web.UI.Design.DesignerAutoFormat> класса. Рабочий пример автоматического форматирования в [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], в разделе <xref:System.Web.UI.WebControls.Calendar>.  
  
   
  
## Examples  
 В следующем примере кода показано, как реализовать <xref:System.Web.UI.Design.ControlDesigner.AutoFormats%2A> свойства конструктора пользовательского элемента управления. Реализует конструктора производного элемента управления <xref:System.Web.UI.Design.ControlDesigner.AutoFormats%2A> свойство путем добавления трех экземпляров пользовательский формат автоматическое, являются производными от <xref:System.Web.UI.Design.DesignerAutoFormat> класса.  
  
 [!code-csharp[DesignerAutoFormat#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerAutoFormat/CS/DesignerAutoFormat.cs#1)]
 [!code-vb[DesignerAutoFormat#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerAutoFormat/VB/DesignerAutoFormat.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Элементы управления, которые автоматически предоставляют возможность автоформатирования задача получения списка и контекстные команды для их форматы. При использовании автоматического форматы используйте <see cref="P:System.Web.UI.Design.ControlDesigner.ViewControl" /> свойство для задания свойств в функции обратного вызова.</para>
        </block>
        <altmember cref="T:System.Web.UI.Design.DesignerAutoFormat" />
        <altmember cref="T:System.Web.UI.Design.DesignerAutoFormatCollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateErrorDesignTimeHtml">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Создает разметку HTML для отображения сообщения об ошибке во время разработки.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateErrorDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected string CreateErrorDesignTimeHtml (string errorMessage);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string CreateErrorDesignTimeHtml(string errorMessage) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateErrorDesignTimeHtml (errorMessage As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ CreateErrorDesignTimeHtml(System::String ^ errorMessage);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorMessage" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="errorMessage">Сообщение об ошибке для включения в создаваемую разметку HTML.</param>
        <summary>Создает разметку HTML для отображения указанного сообщения об ошибке во время разработки.</summary>
        <returns>Строка разметки HTML, содержащая указываемое сообщение об ошибке.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml%2A> метод для создания разметки HTML для отображения сообщения об ошибке для элемента управления во время разработки. Значение `errorMessage` указывает локализованную строку, которая отображается для пользовательского элемента управления во время разработки.  
  
 <xref:System.Web.UI.Design.ControlDesigner> Реализации класса <xref:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml%2A> метод возвращает таблицу с двумя строками следующим образом:  
  
-   Первая строка содержит имя типа и имени сайта для <xref:System.ComponentModel.Design.ComponentDesigner.Component%2A> свойство <xref:System.Web.UI.Design.ControlDesigner> объекта.  
  
-   Вторая строка содержит строку сообщения для ошибок на входе.  
  
 Для создания HTML-разметку для сообщение об ошибке с связанные исключения, используйте <xref:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml%28System.String%2CSystem.Exception%29> перегрузки. Чтобы создать HTML-разметку для исключения без указания локализованного сообщения об ошибке, используйте <xref:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml%2A> метод.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String)" /> Перегрузка функционально эквивалентен вызову <see cref="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String,System.Exception)" /> метод с e, равным <see langword="null" />.</para>
        </block>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" />
      </Docs>
    </Member>
    <Member MemberName="CreateErrorDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected string CreateErrorDesignTimeHtml (string errorMessage, Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string CreateErrorDesignTimeHtml(string errorMessage, class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateErrorDesignTimeHtml (errorMessage As String, e As Exception) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ CreateErrorDesignTimeHtml(System::String ^ errorMessage, Exception ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorMessage" Type="System.String" />
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="errorMessage">Сообщение об ошибке для включения в создаваемую строку HTML.</param>
        <param name="e">Исключение для вставки в создаваемую строку HTML.</param>
        <summary>Создает разметку HTML для отображения во время разработки указанного сообщения об ошибке, вызванной исключением.</summary>
        <returns>Разметка HTML, содержащая указанные значения параметров <paramref name="errorMessage" /> и <paramref name="e" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml%2A> метод, чтобы обеспечить простой разметки HTML, который можно использовать для отображения сообщение об исключении и сведения для элемента управления во время разработки. Значение `errorMessage` указывает локализованную строку, которая отображается для пользовательского элемента управления во время разработки.  
  
 <xref:System.Web.UI.Design.ControlDesigner> Реализации класса <xref:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml%2A> метод возвращает таблицу с двумя строками следующим образом:  
  
-   Первая строка содержит имя типа и имени сайта для <xref:System.ComponentModel.Design.ComponentDesigner.Component%2A> свойство <xref:System.Web.UI.Design.ControlDesigner> объекта.  
  
-   Во второй строке содержится сообщение ошибок на входе и <xref:System.Exception.Message%2A> строки исключения.  
  
 Чтобы создать разметку HTML для сообщения об ошибке без указания исключения, используйте <xref:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml%28System.String%29> перегрузки. Чтобы создать HTML-разметку для исключения без указания локализованного сообщения об ошибке, используйте <xref:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml%2A> метод.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml(System.String,System.Exception)" /> Метод следует вызывать из <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetViewRendering" /> или <see cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" /> метод при возникновении исключения.</para>
        </block>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreatePlaceHolderDesignTimeHtml">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Предоставляет простое прямоугольное представление местозаполнителя, в котором выводится тип и идентификатор элемента управления.</summary>
        <block subset="none" type="overrides">
          <para>Распространенный шаблон проектирования — попытаться получить разметки HTML с помощью связанного элемента управления, а затем вызвать ошибку при обнаружении <see cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" /> метод. Если разметка не возвращается с помощью элемента управления, вызовите <see cref="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml" /> метод, который вызывается, если не переопределен для предоставления определенных разметки <see cref="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml" /> метод, который должен содержать сведения о типе и идентификатор элемента управления.</para>
        </block>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreatePlaceHolderDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected string CreatePlaceHolderDesignTimeHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string CreatePlaceHolderDesignTimeHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreatePlaceHolderDesignTimeHtml () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ CreatePlaceHolderDesignTimeHtml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Предоставляет простое прямоугольное представление местозаполнителя, в котором выводится тип и идентификатор элемента управления.</summary>
        <returns>Строка, содержащая разметку HTML времени разработки, хранящая основные сведения об элементе управления.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Распространенный шаблон проектирования — попытаться получить разметки HTML с помощью связанного элемента управления, а затем вызвать ошибку при обнаружении <see cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" /> метод. Если разметка не возвращается с помощью элемента управления, вызовите <see cref="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml" /> метод, который вызывается, если не переопределен для предоставления определенных разметки <see cref="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml" /> метод, который должен содержать сведения о типе и идентификатор элемента управления.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreatePlaceHolderDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected string CreatePlaceHolderDesignTimeHtml (string instruction);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance string CreatePlaceHolderDesignTimeHtml(string instruction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreatePlaceHolderDesignTimeHtml (instruction As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::String ^ CreatePlaceHolderDesignTimeHtml(System::String ^ instruction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instruction" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="instruction">Строка, содержащая текст и разметку для добавления в выходной поток HTML.</param>
        <summary>Предоставляет простое прямоугольное представление местозаполнителя, в котором выводится тип и идентификатор элемента управления, а также дополнительно указанные инструкции или сведения.</summary>
        <returns>Строка, содержащая разметку HTML времени разработки, хранящая сведения об элементе управления.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как переопределить <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> метод конструктора шаблонного элемента управления. Строка передается как `instruction` параметр в вызове <xref:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml%2A> метод, который обеспечивает разметки HTML во время разработки.  
  
 Данный пример кода является частью большего примера, приведенного для <xref:System.Web.UI.Design.ControlDesigner.TemplateGroups%2A> свойства.  
  
 [!code-csharp[DesignerTemplateGroupSample#4](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerTemplateGroupSample/CS/TemplateGroupsSample.cs#4)]
 [!code-vb[DesignerTemplateGroupSample#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerTemplateGroupSample/VB/TemplateGroupsSample.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Распространенный шаблон проектирования — попытаться получить разметки HTML с помощью связанного элемента управления, а затем вызвать ошибку при обнаружении <see cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" /> метод. Если разметка не возвращается с помощью элемента управления, вызовите <see cref="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml" /> метод, который вызывается, если не переопределен для предоставления определенных разметки <see cref="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml" /> метод, который должен содержать сведения о типе и идентификатор элемента управления.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateViewControl">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.Control CreateViewControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.Control CreateViewControl() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.CreateViewControl" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateViewControl () As Control" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::Control ^ CreateViewControl();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает копию связанного элемента управления для просмотра или отрисовки в рабочей области конструирования.</summary>
        <returns>Серверный веб-элемент управления.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBindingsEnabled">
      <MemberSignature Language="C#" Value="protected virtual bool DataBindingsEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DataBindingsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.DataBindingsEnabled" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property DataBindingsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool DataBindingsEnabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, поддерживается ли привязка данных областью, содержащей элемент управления.</summary>
        <value>
          <see langword="true" />, если контейнер элемента управления поддерживает привязку данных; в противном случае — <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Design.EditableDesignerRegion.SupportsDataBinding" />
      </Docs>
    </Member>
    <Member MemberName="DesignerState">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Design.ControlDesignerState DesignerState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Design.ControlDesignerState DesignerState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.DesignerState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property DesignerState As ControlDesignerState" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::Design::ControlDesignerState ^ DesignerState { System::Web::UI::Design::ControlDesignerState ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ControlDesignerState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает объект, используемый для сохранения данных сопоставленного элемента управления во время разработки.</summary>
        <value>Свойство <see cref="P:System.Web.UI.Design.ControlDesigner.DesignerState" />, реализующее класс <see cref="T:System.Collections.IDictionary" /> и использующее объект <see cref="T:System.ComponentModel.Design.IComponentDesignerStateService" /> для сохранения данных состояния сопоставленного элемента управления во время разработки.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значения для <xref:System.Web.UI.Design.ControlDesigner.DesignerState%2A> свойства сохраняются даже в том случае, если пользователь переключается из режима конструктора в режим исходного кода или перезагружает документ, или после закрытия и открытия узле разработки.  
  
 Можно получить и задать значения в возвращенном объекте, как это делается в IDictionary объектов со значениями, автоматически сохраняется.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeElementView">
      <MemberSignature Language="C#" Value="protected object DesignTimeElementView { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DesignTimeElementView" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.DesignTimeElementView" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property DesignTimeElementView As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Object ^ DesignTimeElementView { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Error: This property can no longer be referenced, and is included to support existing compiled applications. The design-time element view architecture is no longer used. http://go.microsoft.com/fwlink/?linkid=14202", true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает объект элемента управления представлением для конструктора элементов управления.</summary>
        <value>
          <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Web.UI.Design.ControlDesigner.DesignTimeElementView%2A> Свойство является устаревшим и отсутствует замена для функции.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DesignTimeHtmlRequiresLoadComplete">
      <MemberSignature Language="C#" Value="public virtual bool DesignTimeHtmlRequiresLoadComplete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DesignTimeHtmlRequiresLoadComplete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.DesignTimeHtmlRequiresLoadComplete" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DesignTimeHtmlRequiresLoadComplete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DesignTimeHtmlRequiresLoadComplete { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is SetViewFlags(ViewFlags.DesignTimeHtmlRequiresLoadComplete, true). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, должна ли быть завершена загрузка основным приложением разработки до вызова метода <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" />.</summary>
        <value>
          Значение <see langword="true" />, если загрузка должна быть завершена до вызова метода <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" />, в противном случае — <see langword="false" />. Значение по умолчанию: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализация по умолчанию <xref:System.Web.UI.Design.ControlDesigner.DesignTimeHtmlRequiresLoadComplete%2A> возвращает `false`.  
  
> [!NOTE]
>  Свойство <xref:System.Web.UI.Design.ControlDesigner.DesignTimeHtmlRequiresLoadComplete%2A> является устаревшим. Используйте <xref:System.Web.UI.Design.ControlDesigner.SetViewFlags%2A> метод функциональные возможности конструктора эквивалентный элемент управления.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ViewFlags" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.SetViewFlags(System.Web.UI.Design.ViewFlags,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Drawing.Rectangle GetBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Drawing.Rectangle GetBounds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetBounds" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBounds () As Rectangle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Drawing::Rectangle GetBounds();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Rectangle</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Получает координаты прямоугольника, представляющего границы элемента управления, когда он отображается в рабочей области конструирования.</summary>
        <returns>Объект <see cref="T:System.Drawing.Rectangle" />, представляющий границы элемента управления в рабочей области конструирования относительно элемента управления (а не документа).</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Design.IControlDesignerView.GetBounds(System.Web.UI.Design.DesignerRegion)" />
        <altmember cref="M:System.Web.UI.Design.DesignerRegion.GetBounds" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetDesignTimeHtml">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Получает HTML-разметку, используемую для представления элемента управления во время разработки.</summary>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetDesignTimeHtml">
      <MemberSignature Language="C#" Value="public virtual string GetDesignTimeHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetDesignTimeHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDesignTimeHtml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetDesignTimeHtml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Получает HTML-разметку, используемую для представления элемента управления во время разработки.</summary>
        <returns>HTML-разметка, используемая для представления элемента управления во время разработки.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как переопределить <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> метод конструктора пользовательского элемента управления. Если свойство "Text" для связанного элемента управления является пустым, <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> вызовы метода <xref:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml%2A> метод. В противном случае <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> метод создает и отображает элемент управления гиперссылки.  
  
 [!code-csharp[System.Web.UI.Design.ControlDesigner_Example#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.ControlDesigner_Example/CS/SimpleControlDesigner.cs#5)]
 [!code-vb[System.Web.UI.Design.ControlDesigner_Example#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.ControlDesigner_Example/VB/simplecontroldesigner.vb#5)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Если создается пользовательский контейнерный элемент управления, убедитесь, что отрисовки элемента управления и всех дочерних элементов управления во время разработки, независимо от того, следует ли <see cref="P:System.Web.UI.Control.Visible" /> свойству <see langword="true" /> или <see langword="false" />.</para>
        </block>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" />
      </Docs>
    </Member>
    <Member MemberName="GetDesignTimeHtml">
      <MemberSignature Language="C#" Value="public virtual string GetDesignTimeHtml (System.Web.UI.Design.DesignerRegionCollection regions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetDesignTimeHtml(class System.Web.UI.Design.DesignerRegionCollection regions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml(System.Web.UI.Design.DesignerRegionCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetDesignTimeHtml (regions As DesignerRegionCollection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetDesignTimeHtml(System::Web::UI::Design::DesignerRegionCollection ^ regions);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regions" Type="System.Web.UI.Design.DesignerRegionCollection" />
      </Parameters>
      <Docs>
        <param name="regions">Коллекция областей конструктора элементов управления для связанного элемента управления.</param>
        <summary>Получает разметку HTML для отображения элемента управления и заполняет коллекцию текущими областями конструктора элемента управления.</summary>
        <returns>Разметка HTML времени разработки для связанного элемента управления, включающая все области конструктора элементов управления.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Основное приложение вызывает конструктор <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> метод для получения разметки HTML во время разработки и текущий список элемента управления области конструктора. Коллекция DesignerRegionCollection узел разработки можно запросить разметки для каждой области конструктора элемента управления для редактирования.  
  
 <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> Метод предоставляется конструктор производного элемента управления, такие как <xref:System.Web.UI.Design.WebControls.GridViewDesigner> класс, от которого необходимо обработать содержимое области перед вызовом <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> метод.  
  
   
  
## Examples  
 В следующем примере кода показано, как создать с помощью разметки HTML <xref:System.Web.UI.Design.DesignerRegionCollection> коллекции.  
  
 [!code-csharp[SimpleMultiRegionControlDesigner#5](~/samples/snippets/csharp/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/CS/SimpleMultiRegionControlDesigner.cs#5)]
 [!code-vb[SimpleMultiRegionControlDesigner#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/VB/SimpleMultiRegionControlDesigner.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.WebControls.GridViewDesigner" />
      </Docs>
    </Member>
    <Member MemberName="GetDesignTimeResourceProviderFactory">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Design.DesignTimeResourceProviderFactory GetDesignTimeResourceProviderFactory (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.Design.DesignTimeResourceProviderFactory GetDesignTimeResourceProviderFactory(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetDesignTimeResourceProviderFactory(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetDesignTimeResourceProviderFactory (serviceProvider As IServiceProvider) As DesignTimeResourceProviderFactory" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::Design::DesignTimeResourceProviderFactory ^ GetDesignTimeResourceProviderFactory(IServiceProvider ^ serviceProvider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.DesignTimeResourceProviderFactory</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">Объект <see cref="T:System.IServiceProvider" />, который может извлечь глобальную и локальную службы.</param>
        <summary>Возвращает соответствующую фабрику поставщиков ресурсов в зависимости от параметров глобализации в файле конфигурации веб-сайта.</summary>
        <returns>Объект <see cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" />, если определены соответствующие параметры в файле конфигурации; а противном случае — <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Фабрика поставщиков ресурсов создает поставщиков ресурсов и модули записи ресурсов, в зависимости от текущих параметров в разделе system.web/globalization файла конфигурации (Machine.config или Web.config файлы, глобальных и локальных ресурсов ). Если никакие параметры глобализации не найдены, `serviceProvider` параметр используется для создания <xref:System.Web.UI.Design.DesignTimeResourceProviderFactory> объекта с помощью реализации по умолчанию для узла конструктора.  
  
 Как правило, разработчики элементов управления не будет переопределять <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeResourceProviderFactory%2A> метод.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.DesignTimeResourceProviderFactory" />
        <altmember cref="T:System.Web.Compilation.ResourceProviderFactory" />
        <altmember cref="T:System.Web.Compilation.IResourceProvider" />
        <altmember cref="T:System.IServiceProvider" />
      </Docs>
    </Member>
    <Member MemberName="GetEditableDesignerRegionContent">
      <MemberSignature Language="C#" Value="public virtual string GetEditableDesignerRegionContent (System.Web.UI.Design.EditableDesignerRegion region);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetEditableDesignerRegionContent(class System.Web.UI.Design.EditableDesignerRegion region) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetEditableDesignerRegionContent (region As EditableDesignerRegion) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetEditableDesignerRegionContent(System::Web::UI::Design::EditableDesignerRegion ^ region);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Web.UI.Design.EditableDesignerRegion" />
      </Parameters>
      <Docs>
        <param name="region">Объект <see cref="T:System.Web.UI.Design.EditableDesignerRegion" />, содержимое которого возвращается.</param>
        <summary>Возвращает содержимое редактируемой области представления времени разработки связанного элемента управления.</summary>
        <returns>Сохраненное содержимое области, если конструктор элементов управления поддерживает редактируемые области; в противном случае — пустая строка ("").</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализация по умолчанию <xref:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent%2A> метод возвращает пустую строку (»»).  
  
 Классы, производные от <xref:System.Web.UI.Design.ControlDesigner> класс может поддерживать, основанный на области редактирования в области конструктора и переопределить <xref:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent%2A> метод для получения содержимого для указанной области.  
  
   
  
## Examples  
 В следующем примере кода показано, как получить ссылку на узле разработки, а затем использовать эту ссылку для создания <xref:System.Web.UI.Design.ControlParser> объект, который создает HTML-разметку для `region` и ее содержимое.  
  
 [!code-csharp[SimpleMultiRegionControlDesigner#6](~/samples/snippets/csharp/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/CS/SimpleMultiRegionControlDesigner.cs#6)]
 [!code-vb[SimpleMultiRegionControlDesigner#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/VB/SimpleMultiRegionControlDesigner.vb#6)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetEmptyDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected virtual string GetEmptyDesignTimeHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetEmptyDesignTimeHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetEmptyDesignTimeHtml () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetEmptyDesignTimeHtml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает разметку HTML, используемую для представления северного веб-элемента управления во время разработки, у которого не будет визуального представления во время выполнения.</summary>
        <returns>Разметка HTML, используемая для представления элемента управления во время разработки, для которого нет другого способа получить визуальное представление. По умолчанию это прямоугольник, содержащий тип и идентификатор компонента.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поведение по умолчанию <xref:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml%2A> имеет метод для возврата строки, содержащее имя компонента. <xref:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml%2A> Метод должен вызываться в реализации <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> способа, если нет разметки HTML во время разработки.  
  
   
  
## Examples  
 В следующем примере кода показано, как переопределить <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> метод конструктора пользовательского элемента управления. Если `Text` свойств связанного элемента управления является пустым, <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> вызовы метода <xref:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml%2A> метод. В противном случае <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> метод создает и отображает `Hyperlink` элемента управления.  
  
 [!code-csharp[System.Web.UI.Design.ControlDesigner_Example#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.ControlDesigner_Example/CS/SimpleControlDesigner.cs#5)]
 [!code-vb[System.Web.UI.Design.ControlDesigner_Example#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.ControlDesigner_Example/VB/simplecontroldesigner.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" />
        <altmember cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" />
      </Docs>
    </Member>
    <Member MemberName="GetErrorDesignTimeHtml">
      <MemberSignature Language="C#" Value="protected virtual string GetErrorDesignTimeHtml (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetErrorDesignTimeHtml(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetErrorDesignTimeHtml (e As Exception) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetErrorDesignTimeHtml(Exception ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">Произошедшее исключение.</param>
        <summary>Получает HTML-разметку, которая предоставляет сведения об указанном исключении.</summary>
        <returns>HTML-разметка времени разработки для указанного исключения.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml%2A> Метод обычно вызывается, если исключение <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> метод.  
  
   
  
## Examples  
 В следующем примере кода показано, как для создания HTML-разметка времени разработки для элемента управления, когда происходит ошибка и вызвать <xref:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml%2A> метод.  
  
 [!code-csharp[System.Web.UI.Design.WebControls.LoginDesigner#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginDesigner/CS/LoginDesigner.cs#2)]
 [!code-vb[System.Web.UI.Design.WebControls.LoginDesigner#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.WebControls.LoginDesigner/VB/LoginDesigner.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Распространенный шаблон проектирования — попытаться получить разметки HTML с помощью связанного элемента управления, а затем вызвать ошибку при обнаружении <see cref="M:System.Web.UI.Design.ControlDesigner.GetErrorDesignTimeHtml(System.Exception)" /> метод. Если разметка не возвращается с помощью элемента управления, вызовите <see cref="M:System.Web.UI.Design.ControlDesigner.GetEmptyDesignTimeHtml" /> метод, который вызывается, если не переопределен для предоставления определенных разметки <see cref="M:System.Web.UI.Design.ControlDesigner.CreatePlaceHolderDesignTimeHtml" /> метод, который должен содержать сведения о типе и идентификатор элемента управления.</para>
        </block>
        <altmember cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" />
        <altmember cref="Overload:System.Web.UI.Design.ControlDesigner.CreateErrorDesignTimeHtml" />
      </Docs>
    </Member>
    <Member MemberName="GetPersistenceContent">
      <MemberSignature Language="C#" Value="public virtual string GetPersistenceContent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPersistenceContent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetPersistenceContent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPersistenceContent () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetPersistenceContent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Получает сохраненную внутреннюю разметку HTML элемента управления во время разработки.</summary>
        <returns>Строка, представляющая сохраненную внутреннюю разметку HTML для сопоставленного элемента управления. Значение по умолчанию: <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Переопределить <see cref="M:System.Web.UI.Design.ControlDesigner.GetPersistenceContent" /> метод для предоставления обычной обработки внутреннего содержимого сохраняемости для узла конструктора.</para>
        </block>
        <altmember cref="T:System.Web.UI.Design.ControlPersister" />
      </Docs>
    </Member>
    <Member MemberName="GetPersistInnerHtml">
      <MemberSignature Language="C#" Value="public virtual string GetPersistInnerHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetPersistInnerHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetPersistInnerHtml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetPersistInnerHtml () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetPersistInnerHtml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is GetPersistenceContent(). http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Получает сохраненную внутреннюю разметку HTML элемента управления.</summary>
        <returns>Сохраненная внутренняя разметка HTML элемента управления.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Web.UI.Design.ControlDesigner.GetPersistInnerHtml%2A> Метод является устаревшим. Используйте <xref:System.Web.UI.Design.ControlDesigner.GetPersistenceContent%2A> метод функциональные возможности конструктора эквивалентный элемент управления.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.Tag" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetViewRendering">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Получает объект, содержащий разметку времени разработки для содержимого и областей сопоставленного элемента управления.</summary>
        <altmember cref="T:System.Web.UI.Design.ViewRendering" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetViewRendering">
      <MemberSignature Language="C#" Value="public System.Web.UI.Design.ViewRendering GetViewRendering ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.Design.ViewRendering GetViewRendering() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetViewRendering" />
      <MemberSignature Language="VB.NET" Value="Public Function GetViewRendering () As ViewRendering" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::Design::ViewRendering ^ GetViewRendering();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ViewRendering</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Получает объект, содержащий разметку времени разработки для содержимого и областей сопоставленного элемента управления.</summary>
        <returns>Объект <see cref="T:System.Web.UI.Design.ViewRendering" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.Design.ViewRendering" />
      </Docs>
    </Member>
    <Member MemberName="GetViewRendering">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Design.ViewRendering GetViewRendering (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.Design.ViewRendering GetViewRendering(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetViewRendering(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::Design::ViewRendering ^ GetViewRendering(System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ViewRendering</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">Объект <see cref="T:System.Web.UI.Control" />.</param>
        <summary>Получает объект, содержащий разметку времени разработки для содержимого и областей указанного элемента управления.</summary>
        <returns>Объект <see cref="T:System.Web.UI.Design.ViewRendering" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.Design.ViewRendering" />
      </Docs>
    </Member>
    <Member MemberName="GetViewRendering">
      <MemberSignature Language="C#" Value="public static System.Web.UI.Design.ViewRendering GetViewRendering (System.Web.UI.Design.ControlDesigner designer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.UI.Design.ViewRendering GetViewRendering(class System.Web.UI.Design.ControlDesigner designer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.GetViewRendering(System.Web.UI.Design.ControlDesigner)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetViewRendering (designer As ControlDesigner) As ViewRendering" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::UI::Design::ViewRendering ^ GetViewRendering(System::Web::UI::Design::ControlDesigner ^ designer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.ViewRendering</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="designer" Type="System.Web.UI.Design.ControlDesigner" />
      </Parameters>
      <Docs>
        <param name="designer">Конструктор элементов управления, производный от класса <see cref="T:System.Web.UI.Design.ControlDesigner" />.</param>
        <summary>Получает объект, содержащий разметку времени разработки для содержимого и областей сопоставленного элемента управления для указанного конструктора элементов управления.</summary>
        <returns>Объект <see cref="T:System.Web.UI.Design.ViewRendering" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.Design.ViewRendering" />
      </Docs>
    </Member>
    <Member MemberName="HidePropertiesInTemplateMode">
      <MemberSignature Language="C#" Value="protected internal virtual bool HidePropertiesInTemplateMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HidePropertiesInTemplateMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.HidePropertiesInTemplateMode" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property HidePropertiesInTemplateMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool HidePropertiesInTemplateMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, скрыты ли свойства сопоставленного элемента управления, когда он находится в режиме шаблона.</summary>
        <value>
          <see langword="true" />, если свойства сопоставленного элемента управления скрыты, когда он находится в режиме шаблона; в противном случае — <see langword="false" />. Значение по умолчанию: <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство идентификатора никогда не скрываются. <xref:System.Web.UI.Design.ControlDesigner.PreFilterProperties%2A> Использует метод <xref:System.Web.UI.Design.ControlDesigner.HidePropertiesInTemplateMode%2A> свойство для определения свойств, отличных от свойства ID, должны ли быть скрыты из сетки свойств когда она находится в режиме редактирования шаблонов.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public virtual string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.ID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает строку идентификатора элемента управления.</summary>
        <value>Строка идентификатора элемента управления.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ControlDesigner.ID%2A> Свойство используется внутренне в конструкторе элементов управления, а также для взаимодействия с помощью окна «Свойства». <xref:System.Web.UI.Design.ControlDesigner.ID%2A> Времени выполнения затеняет свойство <xref:System.Web.UI.Control.ID%2A> свойство.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ID" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override void Initialize (System.ComponentModel.IComponent component);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Initialize(class System.ComponentModel.IComponent component) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.Initialize(System.ComponentModel.IComponent)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Initialize (component As IComponent)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Initialize(System::ComponentModel::IComponent ^ component);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
      </Parameters>
      <Docs>
        <param name="component">Создаваемый элемент управления.</param>
        <summary>Инициализирует конструктор элементов управления и загружает указанный компонент.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ControlDesigner.Initialize%2A> Метод вызывается методом узле разработки, выполните следующие действия:  
  
-   Загрузите конструктор элементов управления с компонентом для разработки.  
  
-   Настроить представление в элементе управления с помощью <xref:System.Web.UI.Design.ControlDesigner.SetViewFlags%2A> метод.  
  
-   Убедитесь, что правильный тип связанного элемента управления.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование класса элемента управления и класс конструктора элементов управления, переопределять <xref:System.Web.UI.Design.ControlDesigner.Initialize%2A> метод для инициализации внутренних переменных.  
  
 [!code-csharp[System.Web.UI.Design.ControlDesigner_Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.ControlDesigner_Example/CS/SimpleControlDesigner.cs#1)]
 [!code-vb[System.Web.UI.Design.ControlDesigner_Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.ControlDesigner_Example/VB/simplecontroldesigner.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.Design.IDesigner" />
      </Docs>
    </Member>
    <Member MemberName="InTemplateMode">
      <MemberSignature Language="C#" Value="protected bool InTemplateMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InTemplateMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.InTemplateMode" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property InTemplateMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool InTemplateMode { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>получает значение, указывающее, находится ли элемент управления в режиме просмотра или редактирования шаблона в основном приложении разработки. Свойство <see cref="P:System.Web.UI.Design.ControlDesigner.InTemplateMode" /> доступно только для чтения.</summary>
        <value>
          <see langword="true" />, если элемент управления находится в режиме просмотра или редактирования шаблона; а противном случае — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Серверный элемент управления находится в режиме шаблона, если только для чтения шаблон просматривается или редактируемый шаблон редактируется в узле разработки, такие как [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)].  
  
 <xref:System.Web.UI.Design.ControlDesigner> Класс предоставляет значение по умолчанию <xref:System.Web.UI.Design.ViewEventHandler> объект для обновления <xref:System.Web.UI.Design.ControlDesigner.InTemplateMode%2A> значение при изменении режима шаблона для связанного элемента управления. Пользовательские конструкторы, которые являются производными от <xref:System.Web.UI.Design.TemplatedControlDesigner> класс может переопределить <xref:System.Web.UI.Design.TemplatedControlDesigner.OnTemplateModeChanged%2A> метод, чтобы выполнить дополнительную обработку при изменения режима для элемента управления в узле разработки редактирования шаблонов.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.TemplatedControlDesigner" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.TemplateGroups" />
        <altmember cref="M:System.Web.UI.Design.TemplatedControlDesigner.OnTemplateModeChanged" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Invalidate">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Делает недействительным элемент управления, отображаемый в рабочей области конструирования, и инициирует вызов метода <see cref="M:System.Web.UI.Design.ControlDesigner.OnPaint(System.Windows.Forms.PaintEventArgs)" /> основным приложением разработки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызов <xref:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml%2A> метод также вызывает <xref:System.Web.UI.Design.ControlDesigner.Invalidate%2A> метод.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.OnPaint(System.Windows.Forms.PaintEventArgs)" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.Invalidate" />
      <MemberSignature Language="VB.NET" Value="Public Sub Invalidate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Делает недействительной целую область элемента управления, отображаемого в рабочей области конструирования, и сигнализирует конструктору элементов управления о необходимости перерисовки элемента управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы включить конструктор элементов управления для обработки события paint, используйте <xref:System.Web.UI.Design.ControlDesigner.SetViewFlags%2A> метод в <xref:System.Web.UI.Design.ControlDesigner.Initialize%2A> метод.  
  
 <xref:System.Web.UI.Design.ControlDesigner.Invalidate%2A> Метод предоставляет узел разработки с возможность заставить конструктор элементов управления для перерисовки элемента управления. По сути, это то же самое, что и вызов метода <xref:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml%2A> метода, так как вызывает перерисовку элемента управления целиком.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invalidate">
      <MemberSignature Language="C#" Value="public void Invalidate (System.Drawing.Rectangle rectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Invalidate(valuetype System.Drawing.Rectangle rectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.Invalidate(System.Drawing.Rectangle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Invalidate(System::Drawing::Rectangle rectangle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="rectangle" Type="System.Drawing.Rectangle" />
      </Parameters>
      <Docs>
        <param name="rectangle">Объект <see cref="T:System.Drawing.Rectangle" />, представляющий область, которую требуется сделать недействительной, отсчет ведется относительно левого верхнего угла элемента управления.</param>
        <summary>Делает недействительной указанную область элемента управления, отображаемого в рабочей области конструирования, и сигнализирует конструктору элемента управления о необходимости перерисовки элемента управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы включить конструктор элементов управления для обработки события paint, используйте <xref:System.Web.UI.Design.ControlDesigner.SetViewFlags%2A> метод в <xref:System.Web.UI.Design.ControlDesigner.Initialize%2A> метод.  
  
 <xref:System.Web.UI.Design.ControlDesigner.Invalidate%2A> Метод предоставляет узел разработки с возможность заставить конструктор элементов управления для перерисовки определенной части элемента управления.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InvokeTransactedChange">
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Используя указанные параметры, заключает набор изменений в транзакцию, что позволяет их откатить как единое целое с помощью функции отмены, предусмотренной в основном приложении разработки.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InvokeTransactedChange">
      <MemberSignature Language="C#" Value="public static void InvokeTransactedChange (System.ComponentModel.IComponent component, System.Web.UI.Design.TransactedChangeCallback callback, object context, string description);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InvokeTransactedChange(class System.ComponentModel.IComponent component, class System.Web.UI.Design.TransactedChangeCallback callback, object context, string description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange(System.ComponentModel.IComponent,System.Web.UI.Design.TransactedChangeCallback,System.Object,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InvokeTransactedChange (component As IComponent, callback As TransactedChangeCallback, context As Object, description As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InvokeTransactedChange(System::ComponentModel::IComponent ^ component, System::Web::UI::Design::TransactedChangeCallback ^ callback, System::Object ^ context, System::String ^ description);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="callback" Type="System.Web.UI.Design.TransactedChangeCallback" />
        <Parameter Name="context" Type="System.Object" />
        <Parameter Name="description" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="component">Элемент управления, сопоставленный с конструктором элементов управления.</param>
        <param name="callback">Объект <see cref="T:System.Web.UI.Design.TransactedChangeCallback" />, представляющий функцию для вызова в конструкторе элементов управления в качестве части транзакции.</param>
        <param name="context">Объект, содержащий аргумент для обратного вызова.</param>
        <param name="description">Описание последствий разрешения завершения транзакции, которое используется в основном приложении разработки для предоставления пользователю возможности отменить транзакцию.</param>
        <summary>Используя указанные параметры, заключает набор изменений в транзакцию, что позволяет их откатить как единое целое с помощью функции отмены, предусмотренной в основном приложении разработки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализация <xref:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange%2A> метод уведомляет узел разработки, которое определяется <xref:System.Web.UI.Control.Site%2A> свойство `component`, который изменений, происходящих в связанный элемент управления и если это изменение не отменено узел разработки вызывает указанный `callback` с использованием указанного `context`, а затем уведомляет узел разработки, что изменение выполнено.  
  
 Если узел разработки или связанного элемента управления создается статический `Canceled` поле исключение <xref:System.ComponentModel.Design.CheckoutException> исключение, транзакция отменяется без вызова `callback`.  
  
   
  
## Examples  
 В следующем примере кода показано, как для создания простого составного элемента управления с <xref:System.Web.UI.WebControls.Label> и <xref:System.Web.UI.WebControls.TextBox> управления вместе со свойствами, чтобы задать текст метки, а также <xref:System.Web.UI.WebControls.TextBox.Text%2A>, <xref:System.Web.UI.WebControls.WebControl.Width%2A>, и <xref:System.Web.UI.WebControls.WebControl.BackColor%2A> свойства <xref:System.Web.UI.WebControls.TextBox> элемента управления. Связанный класс элемента управления конструктора создает три <xref:System.ComponentModel.Design.DesignerActionMethodItem> команд, каждая из которых задает два свойства элемента управления. С помощью <xref:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange%2A> метод, можно использовать функцию отмены узле разработки, например [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], откат каждой завершенной транзакции как единое целое.  
  
 [!code-csharp[DesignerInvokeTransactedChange#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerInvokeTransactedChange/CS/InvokeTransactedChangeSample.cs#1)]
 [!code-vb[DesignerInvokeTransactedChange#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerInvokeTransactedChange/VB/InvokeTransactedChangeSample.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="component" /> имеет значение <see langword="null" />.  
  
 - или -  
  
 Свойство <paramref name="callback" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.Design.CheckoutException" />
        <altmember cref="T:System.Web.UI.Design.TransactedChangeCallback" />
      </Docs>
    </Member>
    <Member MemberName="InvokeTransactedChange">
      <MemberSignature Language="C#" Value="public static void InvokeTransactedChange (System.ComponentModel.IComponent component, System.Web.UI.Design.TransactedChangeCallback callback, object context, string description, System.ComponentModel.MemberDescriptor member);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InvokeTransactedChange(class System.ComponentModel.IComponent component, class System.Web.UI.Design.TransactedChangeCallback callback, object context, string description, class System.ComponentModel.MemberDescriptor member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange(System.ComponentModel.IComponent,System.Web.UI.Design.TransactedChangeCallback,System.Object,System.String,System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InvokeTransactedChange (component As IComponent, callback As TransactedChangeCallback, context As Object, description As String, member As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InvokeTransactedChange(System::ComponentModel::IComponent ^ component, System::Web::UI::Design::TransactedChangeCallback ^ callback, System::Object ^ context, System::String ^ description, System::ComponentModel::MemberDescriptor ^ member);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="callback" Type="System.Web.UI.Design.TransactedChangeCallback" />
        <Parameter Name="context" Type="System.Object" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="component">Элемент управления, сопоставленный с конструктором элементов управления.</param>
        <param name="callback">Объект <see cref="T:System.Web.UI.Design.TransactedChangeCallback" />, представляющий функцию для вызова в конструкторе элементов управления в качестве части транзакции.</param>
        <param name="context">Объект, содержащий аргумент для обратного вызова.</param>
        <param name="description">Описание последствий разрешения завершения транзакции, которое используется в основном приложении разработки для предоставления пользователю возможности отменить транзакцию.</param>
        <param name="member">Объект <see cref="T:System.ComponentModel.MemberDescriptor" /> (обычно <see cref="T:System.ComponentModel.EventDescriptor" /> или <see cref="T:System.ComponentModel.PropertyDescriptor" />), который описывает элемент сопоставленного элемента управления, вызываемого как часть транзакции.</param>
        <summary>Используя указанные параметры, заключает набор изменений в транзакцию, что позволяет их откатить как единое целое с помощью функции отмены, предусмотренной в основном приложении разработки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализация <xref:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange%2A> метод уведомляет узел разработки, которое определяется <xref:System.Web.UI.Control.Site%2A> свойство `component`, который происходит изменение в указанном `member` (свойство или метод) связанного элемента управления и, если изменение не отменено узлом разработки, вызывает заданный `callback` с использованием указанного `context` в качестве аргумента, а затем уведомляет узел разработки, что изменение завершен.  
  
 Если узел разработки или связанного элемента управления создается статический `Canceled` поле исключение <xref:System.ComponentModel.Design.CheckoutException> исключение, транзакция отменяется без вызова `callback`.  
  
   
  
## Examples  
 Пример кода см. в разделе <xref:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange%28System.ComponentModel.IComponent%2CSystem.Web.UI.Design.TransactedChangeCallback%2CSystem.Object%2CSystem.String%29>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="component" /> имеет значение <see langword="null" />.  
  
 - или -  
  
 Свойство <paramref name="callback" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.Web.UI.Design.TransactedChangeCallback" />
      </Docs>
    </Member>
    <Member MemberName="InvokeTransactedChange">
      <MemberSignature Language="C#" Value="public static void InvokeTransactedChange (IServiceProvider serviceProvider, System.ComponentModel.IComponent component, System.Web.UI.Design.TransactedChangeCallback callback, object context, string description, System.ComponentModel.MemberDescriptor member);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void InvokeTransactedChange(class System.IServiceProvider serviceProvider, class System.ComponentModel.IComponent component, class System.Web.UI.Design.TransactedChangeCallback callback, object context, string description, class System.ComponentModel.MemberDescriptor member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange(System.IServiceProvider,System.ComponentModel.IComponent,System.Web.UI.Design.TransactedChangeCallback,System.Object,System.String,System.ComponentModel.MemberDescriptor)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub InvokeTransactedChange (serviceProvider As IServiceProvider, component As IComponent, callback As TransactedChangeCallback, context As Object, description As String, member As MemberDescriptor)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void InvokeTransactedChange(IServiceProvider ^ serviceProvider, System::ComponentModel::IComponent ^ component, System::Web::UI::Design::TransactedChangeCallback ^ callback, System::Object ^ context, System::String ^ description, System::ComponentModel::MemberDescriptor ^ member);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
        <Parameter Name="component" Type="System.ComponentModel.IComponent" />
        <Parameter Name="callback" Type="System.Web.UI.Design.TransactedChangeCallback" />
        <Parameter Name="context" Type="System.Object" />
        <Parameter Name="description" Type="System.String" />
        <Parameter Name="member" Type="System.ComponentModel.MemberDescriptor" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">Объект <see cref="T:System.IServiceProvider" />, представляющий основное приложение разработки, предоставляющий службы конструктора элементов управления для сопоставленного элемента управления.</param>
        <param name="component">Элемент управления, сопоставленный с конструктором элементов управления.</param>
        <param name="callback">Объект <see cref="T:System.Web.UI.Design.TransactedChangeCallback" />, представляющий функцию для вызова в конструкторе элементов управления в качестве части транзакции.</param>
        <param name="context">Объект, содержащий аргумент для обратного вызова.</param>
        <param name="description">Описание последствий разрешения завершения транзакции, которое используется в основном приложении разработки для предоставления пользователю возможности отменить транзакцию.</param>
        <param name="member">Объект <see cref="T:System.ComponentModel.MemberDescriptor" /> (обычно <see cref="T:System.ComponentModel.EventDescriptor" /> или <see cref="T:System.ComponentModel.PropertyDescriptor" />), который описывает элемент сопоставленного элемента управления, вызываемого как часть транзакции.</param>
        <summary>Используя указанные параметры, заключает набор изменений в транзакцию, что позволяет их откатить как единое целое с помощью функции отмены, предусмотренной в основном приложении разработки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализация <xref:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange%2A> метод уведомляет узел разработки, которое представляется `serviceProvider`, который происходит изменение в указанном `member` (свойство или метод) связанного элемента управления и, если это изменение не отменено по Разработка узла, вызывает заданный `callback` с использованием указанного `context` в качестве аргумента, а затем уведомляет узел разработки, что изменение выполнено.  
  
 Если узел разработки или связанного элемента управления создается статический `Canceled` поле исключение <xref:System.ComponentModel.Design.CheckoutException> исключение, транзакция отменяется без вызова `callback`.  
  
   
  
## Examples  
 Пример кода см. в разделе <xref:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange%2A>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="component" /> имеет значение <see langword="null" />.  
  
 - или -  
  
 Свойство <paramref name="callback" /> имеет значение <see langword="null" />.  
  
 - или -  
  
 Свойство <paramref name="serviceProvider" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="T:System.IServiceProvider" />
        <altmember cref="T:System.ComponentModel.EventDescriptor" />
        <altmember cref="T:System.ComponentModel.PropertyDescriptor" />
        <altmember cref="T:System.Web.UI.Design.TransactedChangeCallback" />
      </Docs>
    </Member>
    <Member MemberName="IsDirty">
      <MemberSignature Language="C#" Value="public bool IsDirty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.IsDirty" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDirty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirty { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is to use Tag.SetDirty() and Tag.IsDirty. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее наличие отметки об изменении серверного веб-элемента управления.</summary>
        <value>
          <see langword="true" />, если серверный веб-элемент управления был изменен с момента его последней загрузки или сохранения; в противном случае — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  Свойство <xref:System.Web.UI.Design.ControlDesigner.IsDirty%2A> является устаревшим. Используйте <xref:System.Web.UI.Design.IControlDesignerTag.IsDirty%2A> свойство и <xref:System.Web.UI.Design.IControlDesignerTag.SetDirty%2A> метод <xref:System.Web.UI.Design.ControlDesigner.Tag%2A> свойство функциональные возможности конструктора эквивалентный элемент управления.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.IControlDesignerTag.IsDirty" />
        <altmember cref="M:System.Web.UI.Design.IControlDesignerTag.SetDirty(System.Boolean)" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.Tag" />
      </Docs>
    </Member>
    <Member MemberName="IsPropertyBound">
      <MemberSignature Language="C#" Value="public bool IsPropertyBound (string propName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsPropertyBound(string propName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.IsPropertyBound(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsPropertyBound (propName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsPropertyBound(System::String ^ propName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is DataBindings.Contains(string). The DataBindings collection allows more control of the databindings associated with the control. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propName">Свойство, для которого требуется проверить наличие привязки данных.</param>
        <summary>Получает значение, указывающее, является ли указанное свойство сопоставленного элемента управления привязанным к данным.</summary>
        <returns>
          <see langword="true" />, если свойство привязано к данным; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Web.UI.Design.ControlDesigner.IsPropertyBound%2A> Метод является устаревшим. Используйте <xref:System.Web.UI.DataBindingCollection.Contains%2A> метод <xref:System.Web.UI.Design.HtmlControlDesigner.DataBindings%2A> свойство функциональные возможности конструктора эквивалентный элемент управления.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataBindingCollection.Contains(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Localize">
      <MemberSignature Language="C#" Value="public void Localize (System.Web.UI.Design.IDesignTimeResourceWriter resourceWriter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Localize(class System.Web.UI.Design.IDesignTimeResourceWriter resourceWriter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.Localize(System.Web.UI.Design.IDesignTimeResourceWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Localize (resourceWriter As IDesignTimeResourceWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Localize(System::Web::UI::Design::IDesignTimeResourceWriter ^ resourceWriter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceWriter" Type="System.Web.UI.Design.IDesignTimeResourceWriter" />
      </Parameters>
      <Docs>
        <param name="resourceWriter">Объект, производный от объекта <see cref="T:System.Web.UI.Design.IDesignTimeResourceWriter" />, используемый для записи ресурсов в поток ответов времени разработки.</param>
        <summary>Использует предоставленный модуль записи ресурсов для сохранения локализуемых свойств сопоставленного элемента управления в ресурсе основного приложения разработки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ControlDesigner.Localize%2A> Метод вызывается методом узле разработки для создания записей ресурсов для каждого свойства, которое помечается <xref:System.ComponentModel.LocalizableAttribute> объект и все свойства, использовать явное выражение ресурса в качестве значения.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnAutoFormatApplied">
      <MemberSignature Language="C#" Value="public virtual void OnAutoFormatApplied (System.Web.UI.Design.DesignerAutoFormat appliedAutoFormat);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnAutoFormatApplied(class System.Web.UI.Design.DesignerAutoFormat appliedAutoFormat) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.OnAutoFormatApplied(System.Web.UI.Design.DesignerAutoFormat)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnAutoFormatApplied (appliedAutoFormat As DesignerAutoFormat)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnAutoFormatApplied(System::Web::UI::Design::DesignerAutoFormat ^ appliedAutoFormat);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appliedAutoFormat" Type="System.Web.UI.Design.DesignerAutoFormat" />
      </Parameters>
      <Docs>
        <param name="appliedAutoFormat">Объект <see cref="T:System.Web.UI.Design.DesignerAutoFormat" />, определяющий стиль.</param>
        <summary>Вызывается, когда предварительно определенная схема автоматического форматирования применяется к сопоставленному элементу управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ControlDesigner.OnAutoFormatApplied%2A> Метод вызывается после <xref:System.Web.UI.Design.DesignerAutoFormat> применен объект стандартных форматов для связанного элемента управления. Объект <xref:System.Web.UI.Design.DesignerAutoFormat> объект определяет параметров автоматического форматирования схемы имя и стиля, применяемые к элементу управления.  
  
 Классы, производные от <xref:System.Web.UI.Design.ControlDesigner> класса переопределение <xref:System.Web.UI.Design.ControlDesigner.OnAutoFormatApplied%2A> метод для дополнительной обработки при применении схемы автоматического форматирования для связанного элемента управления.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.DesignerAutoFormatStyle" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.AutoFormats" />
        <altmember cref="T:System.Web.UI.Design.DesignerAutoFormat" />
      </Docs>
    </Member>
    <Member MemberName="OnBindingsCollectionChanged">
      <MemberSignature Language="C#" Value="protected override void OnBindingsCollectionChanged (string propName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBindingsCollectionChanged(string propName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.OnBindingsCollectionChanged(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBindingsCollectionChanged (propName As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBindingsCollectionChanged(System::String ^ propName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is to handle the Changed event on the DataBindings collection. The DataBindings collection allows more control of the databindings associated with the control. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propName">Свойство, для которого проверяется наличие изменений в коллекции привязки данных.</param>
        <summary>Вызывается при изменении коллекции привязки данных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ControlDesigner.OnBindingsCollectionChanged%2A> Метод вызывается при изменении коллекции связывания данных внешним вызывающим оператором.  
  
> [!NOTE]
>  <xref:System.Web.UI.Design.ControlDesigner.OnBindingsCollectionChanged%2A> Метод является устаревшим. Используйте <xref:System.Web.UI.DataBindingCollection.Changed> события <xref:System.Web.UI.Design.HtmlControlDesigner.DataBindings%2A> коллекции для функциональные возможности конструктора эквивалентный элемент управления.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.DataBindingCollection.Changed" />
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick (System.Web.UI.Design.DesignerRegionMouseEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick(class System.Web.UI.Design.DesignerRegionMouseEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.OnClick(System.Web.UI.Design.DesignerRegionMouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick (e As DesignerRegionMouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick(System::Web::UI::Design::DesignerRegionMouseEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.Design.DesignerRegionMouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.Design.DesignerRegionMouseEventArgs" />, указывающий расположение и, возможно, область конструктора элементов управления, где пользователь выполняет щелчок.</param>
        <summary>Вызывается основным приложением разработки, когда пользователь во время разработки щелкает сопоставленный элемент управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.IControlDesignerView.ViewEvent> Событие узле разработки для определенных действий в элемент управления в рабочей области конструирования. Например событие возникает при следующих условиях:  
  
-   Пользователь щелкает элемент управления.  
  
-   Рисование элемента управления конструктора в рабочей области конструирования.  
  
-   Пользователь вводит или выходит из режима для элемента управления редактирования шаблонов.  
  
 <xref:System.Web.UI.Design.ControlDesigner> Класс предоставляет делегат по умолчанию для обработки <xref:System.Web.UI.Design.IControlDesignerView.ViewEvent?displayProperty=nameWithType> событий. Классы, производные от <xref:System.Web.UI.Design.ControlDesigner> переопределить <xref:System.Web.UI.Design.ControlDesigner.OnClick%2A> метод для обработки событий, которые вызываются, когда пользователь щелкает элемент управления.  
  
 <xref:System.Web.UI.Design.ControlDesigner.OnClick%2A> Метод позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 Реализация по умолчанию <xref:System.Web.UI.Design.ControlDesigner.OnClick%2A> метод возвращается без выполнения обработки.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать обработчик для <xref:System.Web.UI.Design.ControlDesigner.OnClick%2A> события в активную область элемента управления и использования <xref:System.Web.UI.Design.DesignerRegionMouseEventArgs> объект для идентификации области, которая выбирается.  
  
 Данный пример кода является частью большего примера кода для <xref:System.Web.UI.Design.EditableDesignerRegion> класса.  
  
 [!code-csharp[SimpleMultiRegionControlDesigner#4](~/samples/snippets/csharp/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/CS/SimpleMultiRegionControlDesigner.cs#4)]
 [!code-vb[SimpleMultiRegionControlDesigner#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/VB/SimpleMultiRegionControlDesigner.vb#4)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Переопределить <see cref="M:System.Web.UI.Design.ControlDesigner.OnClick(System.Web.UI.Design.DesignerRegionMouseEventArgs)" /> метод в класс, производный от <see cref="T:System.Web.UI.Design.ControlDesigner" /> классе позволяет обработать во время разработки выберите события в элементе управления. Если <paramref name="e" /> является не null, выбранной области, если таковые имеются, указанные в <see cref="P:System.Web.UI.Design.DesignerRegionMouseEventArgs.Region" /> свойство.</para>
        </block>
        <altmember cref="T:System.Web.UI.Design.ViewEventHandler" />
        <altmember cref="T:System.Web.UI.Design.DesignerRegionMouseEventArgs" />
        <altmember cref="T:System.Web.UI.Design.DesignerRegion" />
      </Docs>
    </Member>
    <Member MemberName="OnComponentChanged">
      <MemberSignature Language="C#" Value="public virtual void OnComponentChanged (object sender, System.ComponentModel.Design.ComponentChangedEventArgs ce);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnComponentChanged(object sender, class System.ComponentModel.Design.ComponentChangedEventArgs ce) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnComponentChanged (sender As Object, ce As ComponentChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnComponentChanged(System::Object ^ sender, System::ComponentModel::Design::ComponentChangedEventArgs ^ ce);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="ce" Type="System.ComponentModel.Design.ComponentChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Источник события.</param>
        <param name="ce">Объект <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />, содержащий данные события.</param>
        <summary>Вызывается при изменении сопоставленного элемента управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ControlDesigner.OnComponentChanged%2A> Метод вызывается при изменении свойства в связанном элементе управления. Она позволяет разработчикам выполнять какой-либо обработки, который может потребоваться после изменения свойства. Вызов <xref:System.Web.UI.Design.ControlDesigner.OnComponentChanged%2A> узле разработки для вызова вызывает метод <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> метод. Базовая реализация <xref:System.Web.UI.Design.ControlDesigner.OnComponentChanged%2A> метод также поддерживает элемент управления в разметке страницы.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Переопределить <see cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" /> метод, чтобы реализовать дополнительную обработку перед сохранением элемента управления и перед обновлением разметки HTML во время разработки.  
  
 При переопределении метода <see cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" /> метод в производном классе, убедитесь в том, вызывать <see cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" /> метод базового класса, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnComponentChanging">
      <MemberSignature Language="C#" Value="public virtual void OnComponentChanging (object sender, System.ComponentModel.Design.ComponentChangingEventArgs ce);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnComponentChanging(object sender, class System.ComponentModel.Design.ComponentChangingEventArgs ce) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.OnComponentChanging(System.Object,System.ComponentModel.Design.ComponentChangingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnComponentChanging (sender As Object, ce As ComponentChangingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnComponentChanging(System::Object ^ sender, System::ComponentModel::Design::ComponentChangingEventArgs ^ ce);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="ce" Type="System.ComponentModel.Design.ComponentChangingEventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">Объект, являющийся источником события.</param>
        <param name="ce">Объект <see cref="T:System.ComponentModel.Design.ComponentChangedEventArgs" />, содержащий данные события.</param>
        <summary>Предоставляет метод, обрабатывающий событие <see cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanging" /> для сопоставленного элемента управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда либо <xref:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange%2A> или <xref:System.Web.UI.Design.ControlDesigner.Localize%2A> вызывается метод, <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanging> событие происходит перед внесением изменений для связанного элемента управления. После завершения изменения <xref:System.Web.UI.Design.ControlDesigner.OnComponentChanged%2A> происходит метод.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.Design.ControlDesigner.InvokeTransactedChange" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.Localize(System.Web.UI.Design.IDesignTimeResourceWriter)" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanging(System.Object,System.ComponentModel.Design.ComponentChangingEventArgs)" />
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnControlResize">
      <MemberSignature Language="C#" Value="protected virtual void OnControlResize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnControlResize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.OnControlResize" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnControlResize ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnControlResize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is OnComponentChanged(). OnComponentChanged is called when any property of the control is changed. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Вызывается, когда изменяется размер сопоставленного серверного веб-элемента управления в основном приложении разработки во время разработки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <xref:System.Web.UI.Design.ControlDesigner.OnControlResize%2A> Метод является устаревшим. Используйте <xref:System.Web.UI.Design.ControlDesigner.OnComponentChanged%2A> метод функциональные возможности конструктора эквивалентный элемент управления.  
  
 <xref:System.Web.UI.Design.ControlDesigner.OnControlResize%2A> Метод обычно вызывается средой во время разработки при действие пользователя приводит связанного управления веб-сервером для изменения размера. <xref:System.Web.UI.Design.ControlDesigner.OnControlResize%2A> Метод может вызываться несколько раз во время процесса изменения размера для отображения новых размеров элемента управления до завершения изменения размеров. Свойства ширины и высоты элемента управления обновляются до <xref:System.Web.UI.Design.ControlDesigner.OnControlResize%2A> вызывается метод.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.Tag" />
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected virtual void OnPaint (System.Windows.Forms.PaintEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPaint (e As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPaint(System::Windows::Forms::PaintEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.PaintEventArgs" />, указывающий графику и границы, используемые для прорисовки элемента управления.</param>
        <summary>Вызывается, когда конструктор элементов управления прорисовывает сопоставленный элемент управления в рабочей области конструирования, если значением поля <see cref="F:System.Web.UI.Design.ViewFlags.CustomPaint" /> является <see langword="true" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.IControlDesignerView.ViewEvent> Событие узле разработки для определенных действий в элемент управления в рабочей области конструирования. Например событие возникает при следующих условиях:  
  
-   Пользователь щелкает элемент управления.  
  
-   Конструктор узла запросов HTML-разметка для отрисовки связанного элемента управления в рабочей области конструирования.  
  
-   Пользователь вводит или выходит из режима для элемента управления редактирования шаблонов.  
  
 <xref:System.Web.UI.Design.ControlDesigner> Класс предоставляет делегат по умолчанию для обработки <xref:System.Web.UI.Design.IControlDesignerView.ViewEvent?displayProperty=nameWithType> событий. Классы, производные от <xref:System.Web.UI.Design.ControlDesigner> следует задать <xref:System.Web.UI.Design.ViewFlags.CustomPaint?displayProperty=nameWithType> значение и Переопределите <xref:System.Web.UI.Design.ControlDesigner.OnPaint%2A> метод для обработки событий, которые возникают, когда узел разработки Рисует элемент управления в рабочей области конструирования.  
  
 <xref:System.Web.UI.Design.ControlDesigner.OnPaint%2A> Метод позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 Реализация по умолчанию <xref:System.Web.UI.Design.ControlDesigner.OnPaint%2A> метод возвращается без выполнения обработки.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Переопределить <see cref="M:System.Web.UI.Design.ControlDesigner.OnPaint(System.Windows.Forms.PaintEventArgs)" /> метод в класс, производный от <see cref="T:System.Web.UI.Design.ControlDesigner" /> класса для обработки события paint для элемента управления в рабочей области конструирования. Тем не менее, это событие возникает только в том случае, если <see cref="F:System.Web.UI.Design.ViewFlags.CustomPaint" /> было указано значение <see cref="M:System.Web.UI.Design.ControlDesigner.SetViewFlags(System.Web.UI.Design.ViewFlags,System.Boolean)" /> метод.</para>
        </block>
        <altmember cref="F:System.Web.UI.Design.ViewFlags.CustomPaint" />
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.SetViewFlags(System.Web.UI.Design.ViewFlags,System.Boolean)" />
        <altmember cref="T:System.Web.UI.Design.ViewEventHandler" />
        <altmember cref="T:System.Web.UI.Design.IControlDesignerView" />
      </Docs>
    </Member>
    <Member MemberName="PreFilterProperties">
      <MemberSignature Language="C#" Value="protected override void PreFilterProperties (System.Collections.IDictionary properties);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void PreFilterProperties(class System.Collections.IDictionary properties) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub PreFilterProperties (properties As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void PreFilterProperties(System::Collections::IDictionary ^ properties);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="properties" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="properties">Свойства класса компонента.</param>
        <summary>Добавляет свойства в сетку свойств в основном приложении разработки во время разработки или удаляет их из этой сетки либо предоставляет новые свойства времени разработки, которые могут соответствовать свойствам сопоставленного элемента управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 С <xref:System.Web.UI.Design.ControlDesigner.PreFilterProperties%2A> метод, можно добавить элементы в словарь свойств, предоставляемых через конструктор элементов управления <xref:System.ComponentModel.TypeDescriptor> объекта.  
  
 Ключи в словаре свойств являются именами свойств. Объекты имеют тип <xref:System.ComponentModel.PropertyDescriptor>.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Можно непосредственно изменить словарь, который доступен с помощью свойства параметра, или оставить ее без изменений. При переопределении <see cref="M:System.Web.UI.Design.ControlDesigner.PreFilterProperties(System.Collections.IDictionary)" /> метода, перед выполнением фильтрации необходимо вызвать базовую реализацию.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RaiseResizeEvent">
      <MemberSignature Language="C#" Value="public void RaiseResizeEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RaiseResizeEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.RaiseResizeEvent" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseResizeEvent ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseResizeEvent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("Use of this method is not recommended because resizing is handled by the OnComponentChanged() method. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Вызывает событие <see cref="M:System.Web.UI.Design.ControlDesigner.OnControlResize" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ControlDesigner.RaiseResizeEvent%2A> Метод является устаревшим, и замены для этой функции нет.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.OnComponentChanged(System.Object,System.ComponentModel.Design.ComponentChangedEventArgs)" />
        <altmember cref="M:System.ComponentModel.Design.ComponentDesigner.RaiseComponentChanged(System.ComponentModel.MemberDescriptor,System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is to inherit from ContainerControlDesigner instead and to use an EditableDesignerRegion. Regions allow for better control of the content in the designer. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, доступны ли только для чтения свойства элемента управления во время разработки.</summary>
        <value>
          <see langword="true" />, если свойства элемента управления во время разработки доступны только для чтения; в противном случае — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ControlDesigner> Класс доступен только для чтения, по своей природе. Чтение и запись функции предоставляются путем добавления <xref:System.Web.UI.Design.DesignerRegion> объекта или с помощью базовых классов, таких как <xref:System.Web.UI.Design.ContainerControlDesigner> класса.  
  
> [!NOTE]
>  Свойство <xref:System.Web.UI.Design.ControlDesigner.ReadOnly%2A> является устаревшим. Являются производными от <xref:System.Web.UI.Design.ContainerControlDesigner> класса, к которому можно добавить редактируемые области конструктора или из <xref:System.Web.UI.Design.TemplatedControlDesigner> объекта, к которому можно создать редактируемые области конструктора в шаблонах.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ControlDesigner" />
        <altmember cref="T:System.Web.UI.Design.ContainerControlDesigner" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClone">
      <MemberSignature Language="C#" Value="public void RegisterClone (object original, object clone);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClone(object original, object clone) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.RegisterClone(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterClone (original As Object, clone As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClone(System::Object ^ original, System::Object ^ clone);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="original" Type="System.Object" />
        <Parameter Name="clone" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="original">Элемент управления, сопоставленный с конструктором элементов управления.</param>
        <param name="clone">Клонированная копия сопоставленного элемента управления.</param>
        <summary>Регистрирует внутренние данные в клонированном элементе управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Каждый раз, когда элемент будет клонирована, возможно, некоторые внутренние структуры данных, таких как `meta:` атрибуты, которые должны быть включены в клонированный элемент управления конструктора элементов управления. Разработчик может добавить `meta:` атрибуты в разметку элемента управления и что нет способа не существует причин, для элемента управления отличить эти теги, которые могут быть. Таким образом, если конструктор элементов управления предоставляет способ редактирования сложных свойств или форматов перед применением изменений к странице, можно создать клон элемента управления, передать это исходный элемент управления и клона <xref:System.Web.UI.Design.ControlDesigner.RegisterClone%2A> метода, а затем, после изменения к тегу, сохраняются все `meta:` атрибуты также сохраняются.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Параметр <paramref name="original" /> имеет значение null.  
  
 - или -  
  
 Параметр <paramref name="clone" /> имеет значение null.</exception>
      </Docs>
    </Member>
    <Member MemberName="RootDesigner">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Design.WebFormsRootDesigner RootDesigner { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Design.WebFormsRootDesigner RootDesigner" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.RootDesigner" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property RootDesigner As WebFormsRootDesigner" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::Design::WebFormsRootDesigner ^ RootDesigner { System::Web::UI::Design::WebFormsRootDesigner ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.WebFormsRootDesigner</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает конструктор элементов управления для страницы веб-форм, содержащей сопоставленный элемент управления.</summary>
        <value>Объект <see cref="T:System.Web.UI.Design.WebFormsRootDesigner" />, который может быть использован во время разработки для доступа к компонентам на странице веб-форм, содержащей элемент управления.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ControlDesigner.RootDesigner%2A> Свойство представляет конструктор элементов управления для страницы Web Forms, который содержит элемент управления. Используйте <xref:System.Web.UI.Design.ControlDesigner.RootDesigner%2A> свойство для доступа и управления страницу веб-форм во время разработки.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.WebFormsRootDesigner" />
      </Docs>
    </Member>
    <Member MemberName="SetEditableDesignerRegionContent">
      <MemberSignature Language="C#" Value="public virtual void SetEditableDesignerRegionContent (System.Web.UI.Design.EditableDesignerRegion region, string content);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetEditableDesignerRegionContent(class System.Web.UI.Design.EditableDesignerRegion region, string content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetEditableDesignerRegionContent (region As EditableDesignerRegion, content As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetEditableDesignerRegionContent(System::Web::UI::Design::EditableDesignerRegion ^ region, System::String ^ content);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Web.UI.Design.EditableDesignerRegion" />
        <Parameter Name="content" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="region">Редактируемая область конструктора, содержащаяся в элементе управления.</param>
        <param name="content">Содержимое, которое требуется присвоить редактируемой области разработки.</param>
        <summary>Указывает содержимое редактируемой области элемента управления во время разработки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Классы, производные от <xref:System.Web.UI.Design.ControlDesigner> класс может поддерживать, основанный на области редактирования в области конструктора и переопределить <xref:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent%2A> метод, чтобы задать содержимое для заданной области.  
  
   
  
## Examples  
 В следующем примере кода показано, как получить ссылку на узле разработки, а затем использовать эту ссылку для создания <xref:System.Web.UI.Design.ControlParser> объекта, который включает `content` в экземпляр <xref:System.Web.UI.ITemplate> интерфейс и назначит <xref:System.Web.UI.ITemplate> экземпляр соответствующее представление.  
  
 [!code-csharp[SimpleMultiRegionControlDesigner#7](~/samples/snippets/csharp/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/CS/SimpleMultiRegionControlDesigner.cs#7)]
 [!code-vb[SimpleMultiRegionControlDesigner#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/VB/SimpleMultiRegionControlDesigner.vb#7)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ControlDesigner.GetEditableDesignerRegionContent(System.Web.UI.Design.EditableDesignerRegion)" />
        <altmember cref="T:System.Web.UI.Design.EditableDesignerRegion" />
      </Docs>
    </Member>
    <Member MemberName="SetRegionContent">
      <MemberSignature Language="C#" Value="protected void SetRegionContent (System.Web.UI.Design.EditableDesignerRegion region, string content);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetRegionContent(class System.Web.UI.Design.EditableDesignerRegion region, string content) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.SetRegionContent(System.Web.UI.Design.EditableDesignerRegion,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetRegionContent (region As EditableDesignerRegion, content As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetRegionContent(System::Web::UI::Design::EditableDesignerRegion ^ region, System::String ^ content);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="region" Type="System.Web.UI.Design.EditableDesignerRegion" />
        <Parameter Name="content" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="region">Редактируемая область конструктора, содержащаяся в представлении времени разработки элемента управления.</param>
        <param name="content">Содержимое, которое требуется присвоить редактируемой области разработки.</param>
        <summary>Указывает содержимое редактируемой области в представлении времени разработки элемента управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Как правило <xref:System.Web.UI.Design.ControlDesigner.SetRegionContent%2A> метод не переопределен в производном конструкторы. Базовый класс вызывает узле разработки для вызова <xref:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent%2A> метод для региона. Переопределить <xref:System.Web.UI.Design.ControlDesigner.SetRegionContent%2A> пользовательских данных является обязательным для элемента управления перед вызовом метода <xref:System.Web.UI.Design.ControlDesigner.SetEditableDesignerRegionContent%2A> метод.  
  
 Используйте <xref:System.Web.UI.Design.ControlDesigner.SetRegionContent%2A> метод, чтобы вставить HTML-разметку в области элемента управления.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.IControlDesignerView.SupportsRegions" />
        <altmember cref="Overload:System.Web.UI.Design.ControlDesigner.GetViewRendering" />
      </Docs>
    </Member>
    <Member MemberName="SetViewFlags">
      <MemberSignature Language="C#" Value="protected void SetViewFlags (System.Web.UI.Design.ViewFlags viewFlags, bool setFlag);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetViewFlags(valuetype System.Web.UI.Design.ViewFlags viewFlags, bool setFlag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.SetViewFlags(System.Web.UI.Design.ViewFlags,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetViewFlags(System::Web::UI::Design::ViewFlags viewFlags, bool setFlag);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewFlags" Type="System.Web.UI.Design.ViewFlags" />
        <Parameter Name="setFlag" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="viewFlags">Значение <see cref="T:System.Web.UI.Design.ViewFlags" />.</param>
        <param name="setFlag">
          <see langword="true" />, чтобы установить флаг, <see langword="false" />. чтобы удалить флаг.</param>
        <summary>Назначает указанное битовое перечисление <see cref="T:System.Web.UI.Design.ViewFlags" /> указанному значению флага.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Существует несколько флагов, которые могут быть установлены. Например, использовать <xref:System.Web.UI.Design.ControlDesigner.SetViewFlags%2A> метод, чтобы задать <xref:System.Web.UI.Design.ViewFlags.DesignTimeHtmlRequiresLoadComplete> текущего значения <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> свойство для конструктора элементов управления, вместо устаревшего <xref:System.Web.UI.Design.ControlDesigner.DesignTimeHtmlRequiresLoadComplete%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.Design.ControlDesigner.SetViewFlags%2A> метод для указания, что шаблон находится в режиме правки.  
  
 [!code-csharp[DesignerTemplateGroupSample#5](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerTemplateGroupSample/CS/TemplateGroupsSample.cs#5)]
 [!code-vb[DesignerTemplateGroupSample#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerTemplateGroupSample/VB/TemplateGroupsSample.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.ViewControl" />
        <altmember cref="T:System.Web.UI.Design.ViewFlags" />
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="protected System.Web.UI.Design.IControlDesignerTag Tag { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Design.IControlDesignerTag Tag" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.Tag" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Tag As IControlDesignerTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::Design::IControlDesignerTag ^ Tag { System::Web::UI::Design::IControlDesignerTag ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.IControlDesignerTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает объект, представляющей элемент разметки HTML для сопоставленного элемента управления.</summary>
        <value>Объект <see cref="T:System.Web.UI.Design.IControlDesignerTag" />, представляющей элемент разметки HTML для сопоставленного элемента управления.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Как правило <xref:System.Web.UI.Design.ControlDesigner.Tag%2A> свойство используется только для обмена данными между приложением разработки и конструктор элементов управления и не используется разработчиками элементов управления.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.IControlDesignerTag" />
      </Docs>
    </Member>
    <Member MemberName="TemplateGroups">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.Design.TemplateGroupCollection TemplateGroups { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Design.TemplateGroupCollection TemplateGroups" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.TemplateGroups" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TemplateGroups As TemplateGroupCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::Design::TemplateGroupCollection ^ TemplateGroups { System::Web::UI::Design::TemplateGroupCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Design.TemplateGroupCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает коллекцию групп шаблонов, каждая из которых содержит одно или несколько определений шаблонов.</summary>
        <value>Коллекция объектов <see cref="T:System.Web.UI.Design.TemplateGroup" />. Значение по умолчанию — пустой объект <see cref="T:System.Web.UI.Design.TemplateGroupCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как создать класс конструктора элементов управления, который является производным от <xref:System.Web.UI.Design.ControlDesigner> класса. Этот конструктор элементов управления поддерживает элемент управления с четырьмя возможными шаблонами.  
  
 Чтобы провести эксперимент, скомпилировать код, а затем, в структуре разместить такие как [!INCLUDE[vsprvslong](~/includes/vsprvslong-md.md)], откройте страницу в представлении конструктора. Выберите элемент управления, щелкните список действий, чтобы выбрать шаблон для изменения и затем использовать функцию перетаскивания и вставки для перемещения элементов управления в шаблон.  
  
 [!code-csharp[DesignerTemplateGroupSample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DesignerTemplateGroupSample/CS/TemplateGroupsSample.cs#1)]
 [!code-vb[DesignerTemplateGroupSample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerTemplateGroupSample/VB/TemplateGroupsSample.vb#1)]  
[!code-aspx-vb[DesignerTemplateGroupSample#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DesignerTemplateGroupSample/VB/TemplateGroupsSample.aspx#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Вы можете изменить <see cref="P:System.Web.UI.Design.ControlDesigner.TemplateGroups" /> коллекции напрямую, или оставить его без изменений. При переопределении <see cref="P:System.Web.UI.Design.ControlDesigner.TemplateGroups" /> свойство, вызвать базовую реализацию, перед добавлением в коллекцию групп шаблонов.</para>
        </block>
        <altmember cref="T:System.Web.UI.Design.TemplateGroup" />
        <altmember cref="T:System.Web.UI.Design.TemplateDefinition" />
        <altmember cref="T:System.Web.UI.Design.TemplatedControlDesigner" />
      </Docs>
    </Member>
    <Member MemberName="UpdateDesignTimeHtml">
      <MemberSignature Language="C#" Value="public virtual void UpdateDesignTimeHtml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateDesignTimeHtml() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateDesignTimeHtml ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UpdateDesignTimeHtml();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Обновляет разметку HTML времени разработки для сопоставленного серверного веб-элемента управления посредством вызова метода <see cref="Overload:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml%2A> Метод называется узлом разработки, чтобы обновить Отображение связанного сервера веб-элемента управления во время разработки, например, если элемент управления был изменен. Кроме того, можно вызвать конструктор элементов управления <xref:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml%2A> метод после изменения значения элемента управления для обновления отображения элемента управления.  
  
> [!NOTE]
>  При вызове <xref:System.ComponentModel.Design.IComponentChangeService.ComponentChanged> событий или с помощью <xref:System.ComponentModel.PropertyDescriptor> объект для задания свойств, <xref:System.ComponentModel.Design.IComponentChangeService> интерфейс вызовы <xref:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml%2A> способ.  
  
   
  
## Examples  
 В следующем примере кода показано, как реагировать на `Click` событие в конструкторе элементов управления для изменения фокуса между областями в элементе управления с поддержкой нескольких регионов и использовать <xref:System.Web.UI.Design.ControlDesigner.UpdateDesignTimeHtml%2A> метод обновления внешнего вида элемента управления в узле разработки.  
  
 Данный пример кода является частью большего примера для <xref:System.Web.UI.Design.EditableDesignerRegion> класса.  
  
 [!code-csharp[SimpleMultiRegionControlDesigner#4](~/samples/snippets/csharp/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/CS/SimpleMultiRegionControlDesigner.cs#4)]
 [!code-vb[SimpleMultiRegionControlDesigner#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/SimpleMultiRegionControlDesigner/VB/SimpleMultiRegionControlDesigner.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.ComponentModel.Design.IComponentChangeService.ComponentChanged" />
      </Docs>
    </Member>
    <Member MemberName="UsePreviewControl">
      <MemberSignature Language="C#" Value="protected virtual bool UsePreviewControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UsePreviewControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property UsePreviewControl As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool UsePreviewControl { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, использует ли конструктор элементов управления временный элемент управления "Предварительный просмотр" для создания разметки HTML во время разработки.</summary>
        <value>
          Значение <see langword="true" />, если конструктор элементов управления использует временную копию элемента управления для предварительного просмотра во время разработки; значение <see langword="false" />, если конструктор элементов управления использует свойство <see cref="P:System.ComponentModel.Design.ComponentDesigner.Component" /> для элемента управления, содержащегося в конструкторе элементов управления.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Web.UI.Design.ControlDesigner.UsePreviewControl%2A> свойство `true`, <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> свойство возвращает временную копию элемента управления. Изменения временного элемента управления не сохраняются в документе.  
  
 Если <xref:System.Web.UI.Design.ControlDesigner.UsePreviewControl%2A> свойство `false`, <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> свойство возвращает экземпляр <xref:System.ComponentModel.Design.ComponentDesigner.Component%2A> свойства для элемента управления. Сохраняются изменения в экземпляр элемента управления.  
  
 <xref:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl%2A> В <xref:System.Web.UI.Design.SupportsPreviewControlAttribute> объект используется для задания значения <xref:System.Web.UI.Design.ControlDesigner.UsePreviewControl%2A> свойство. Таким образом <xref:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl%2A> параметр определяет тип элемента управления, который возвращается <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> свойство в базовом классе <xref:System.Web.UI.Design.ControlDesigner> класса. Если <xref:System.Web.UI.Design.SupportsPreviewControlAttribute> не указан в объявлении конструктора элемента управления <xref:System.Web.UI.Design.ControlDesigner> поведение объекта эквивалентно <xref:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl%2A> свойство как `false`.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Пользовательские конструкторы, которые являются производными от <see cref="T:System.Web.UI.Design.ControlDesigner" /> класс может переопределить <see cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" /> свойство и игнорировать <see cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" /> объекта. Как правило чтобы указать, что <see cref="P:System.Web.UI.Design.ControlDesigner.ViewControl" /> свойство всегда возвращает временную копию элемента управления, переопределите <see cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" /> свойство всегда возвращает <see langword="true" />. Чтобы указать, что <see cref="P:System.Web.UI.Design.ControlDesigner.ViewControl" /> свойство всегда возвращает экземпляр элемента управления, переопределите <see cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" /> свойство всегда возвращает <see langword="false" />. Например <see cref="T:System.Web.UI.Design.WebControls.PreviewControlDesigner" /> класс является производным от <see cref="T:System.Web.UI.Design.ControlDesigner" /> и всегда возвращает <see langword="true" /> для <see cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" /> свойства.</para>
        </block>
        <altmember cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.ViewControl" />
        <altmember cref="Overload:System.Web.UI.Design.ControlDesigner.GetViewRendering" />
        <altmember cref="T:System.Web.UI.Design.WebControls.PreviewControlDesigner" />
      </Docs>
    </Member>
    <Member MemberName="ViewControl">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control ViewControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control ViewControl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.ViewControl" />
      <MemberSignature Language="VB.NET" Value="Public Property ViewControl As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ ViewControl { System::Web::UI::Control ^ get(); void set(System::Web::UI::Control ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает серверный веб-элемент управления, который может быть использован для предварительного просмотра разметки HTML времени разработки.</summary>
        <value>Объект <see cref="T:System.Web.UI.Control" />, используемый базовым классом для формирования разметки HTML времени разработки.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> Используется свойством <xref:System.Web.UI.Design.ControlDesigner.UsePreviewControl%2A> свойство для определения возвращаемого значения.  
  
 Если <xref:System.Web.UI.Design.ControlDesigner.UsePreviewControl%2A> свойство `true`, <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> свойство возвращает временную копию элемента управления. Изменения временного элемента управления не сохраняются.  
  
 Если <xref:System.Web.UI.Design.ControlDesigner.UsePreviewControl%2A> свойство `false`, <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> свойство возвращает экземпляр <xref:System.ComponentModel.Design.ComponentDesigner.Component%2A> свойства для элемента управления. Сохраняются изменения в экземпляр элемента управления.  
  
 <xref:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl%2A> В <xref:System.Web.UI.Design.SupportsPreviewControlAttribute> объект используется для задания значения <xref:System.Web.UI.Design.ControlDesigner.UsePreviewControl%2A> свойство. Таким образом <xref:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl%2A> параметр определяет тип элемента управления, который возвращается <xref:System.Web.UI.Design.ControlDesigner.ViewControl%2A> свойство в базовом классе <xref:System.Web.UI.Design.ControlDesigner> класса. Если <xref:System.Web.UI.Design.SupportsPreviewControlAttribute> не указан в объявлении конструктора элемента управления <xref:System.Web.UI.Design.ControlDesigner> поведение объекта эквивалентно <xref:System.Web.UI.Design.SupportsPreviewControlAttribute.SupportsPreviewControl%2A> свойство как `false`.  
  
   
  
## Examples  
 В следующем примере кода показано, как пометить конструктор элементов управления с <xref:System.Web.UI.Design.SupportsPreviewControlAttribute> атрибута. В примере является производным элемента управления из <xref:System.Web.UI.WebControls.Label> класса и связывает элемент управления с реализацией конструктора пользовательского элемента управления. Объявление конструктора класса элемента управления помечается `SupportsPreviewControl` атрибуту присвоено значение `true`. Конструктор элемента управления переопределяет <xref:System.Web.UI.Design.ControlDesigner.GetDesignTimeHtml%2A> метода, а затем отображает <xref:System.Web.UI.WebControls.Label.Text%2A> свойству элемента управления курсивом во время разработки.  
  
 [!code-csharp[System.Web.UI.Design.SupportsPreviewControlAttribute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.Design.SupportsPreviewControlAttribute/CS/supportspreviewdesigner.cs#1)]
 [!code-vb[System.Web.UI.Design.SupportsPreviewControlAttribute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.Design.SupportsPreviewControlAttribute/VB/supportspreviewdesigner.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.SupportsPreviewControlAttribute" />
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" />
        <altmember cref="Overload:System.Web.UI.Design.ControlDesigner.GetViewRendering" />
        <altmember cref="T:System.Web.UI.Design.WebControls.PreviewControlDesigner" />
      </Docs>
    </Member>
    <Member MemberName="ViewControlCreated">
      <MemberSignature Language="C#" Value="public virtual bool ViewControlCreated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ViewControlCreated" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.ViewControlCreated" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ViewControlCreated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ViewControlCreated { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, создан ли элемент управления <see langword="View" /> для отображения в рабочей области конструирования.</summary>
        <value>
          <see langword="true" />, если элемент управления создан для просмотра в рабочей области конструирования; в противном случае — <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Design.ControlDesigner.UsePreviewControl" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="protected virtual bool Visible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ControlDesigner.Visible" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool Visible { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, является ли элемент управления видимым во время разработки.</summary>
        <value>
          Значение <see langword="true" /> во всех случаях.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>