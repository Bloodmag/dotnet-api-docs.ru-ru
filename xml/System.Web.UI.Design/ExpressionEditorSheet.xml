<Type Name="ExpressionEditorSheet" FullName="System.Web.UI.Design.ExpressionEditorSheet">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="996b1d4c6fc4fc427cbcd8f4d454f07c7e3b21ac" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37541081" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ExpressionEditorSheet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExpressionEditorSheet extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ExpressionEditorSheet" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExpressionEditorSheet" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionEditorSheet abstract" />
  <TypeSignature Language="F#" Value="type ExpressionEditorSheet = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="81bb5-101">Представляет таблицу редактора времени разработки для настраиваемого выражения.</span>
      <span class="sxs-lookup">
        <span data-stu-id="81bb5-101">Represents a design-time editor sheet for a custom expression.</span>
      </span>
      <span data-ttu-id="81bb5-102">Этот класс должен наследоваться.</span>
      <span class="sxs-lookup">
        <span data-stu-id="81bb5-102">This class must be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81bb5-103">Таблицу редактора настраиваемых выражений позволяет разработчику задать свойства настраиваемого выражения во время разработки.</span><span class="sxs-lookup"><span data-stu-id="81bb5-103">A custom expression editor sheet lets a developer set properties on a custom expression at design-time.</span></span> <span data-ttu-id="81bb5-104">Значения свойств элементов управления можно задать с помощью строк выражений; строки выражений вычисляются во время выполнения построителем выражений, а также во время разработки с помощью редактора выражений.</span><span class="sxs-lookup"><span data-stu-id="81bb5-104">Control property values can be set using expression strings; the expression strings are evaluated at run time by an expression builder and at design time by an expression editor.</span></span>  
  
 <span data-ttu-id="81bb5-105">При просмотре <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> свойства для элемента управления в сетке свойств времени разработки, визуальный конструктор отображает диалоговое окно для задания выражений, которые предоставляют значение для свойства элемента управления.</span><span class="sxs-lookup"><span data-stu-id="81bb5-105">When you browse the <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> property for a control in the design-time properties grid, the visual designer displays a dialog box to set expressions that provide the value for a control property.</span></span> <span data-ttu-id="81bb5-106">Можно выбрать тип выражения, на основе списка префиксов выражений.</span><span class="sxs-lookup"><span data-stu-id="81bb5-106">You can select the expression type based on a list of expression prefixes.</span></span> <span data-ttu-id="81bb5-107">При выборе префикс выражения из списка визуальный конструктор использует связанный <xref:System.Web.UI.Design.ExpressionEditor> и <xref:System.Web.UI.Design.ExpressionEditorSheet> объекты оценить и преобразовать строку выражения, основанные на синтаксис для этого типа выражения.</span><span class="sxs-lookup"><span data-stu-id="81bb5-107">When you select an expression prefix from the list, the visual designer uses the associated <xref:System.Web.UI.Design.ExpressionEditor> and <xref:System.Web.UI.Design.ExpressionEditorSheet> objects to evaluate and convert the expression string based on the syntax for that type of expression.</span></span> <span data-ttu-id="81bb5-108">Визуальный конструктор использует свойства таблицы редактора выражений запрашивать один или несколько строк, объединяемых в строка настраиваемого выражения.</span><span class="sxs-lookup"><span data-stu-id="81bb5-108">The visual designer uses expression editor sheet properties to prompt for one or more strings that combine into the custom expression string.</span></span>  
  
 <span data-ttu-id="81bb5-109">Как правило, чтобы указать новый тип выражения во время разработки, определения префикса уникальное выражение и предоставлять пользовательскую <xref:System.Web.Compilation.ExpressionBuilder> и <xref:System.Web.UI.Design.ExpressionEditor> реализаций.</span><span class="sxs-lookup"><span data-stu-id="81bb5-109">Typically, to supply a new expression type at design time, you define a unique expression prefix and provide custom <xref:System.Web.Compilation.ExpressionBuilder> and <xref:System.Web.UI.Design.ExpressionEditor> implementations.</span></span> <span data-ttu-id="81bb5-110">При необходимости можно указать пользовательское <xref:System.Web.UI.Design.ExpressionEditorSheet> реализация, которая определяет свойства, которые используются для создания выражения.</span><span class="sxs-lookup"><span data-stu-id="81bb5-110">Optionally, you can provide a custom <xref:System.Web.UI.Design.ExpressionEditorSheet> implementation that defines properties that are used to form the expression.</span></span> <span data-ttu-id="81bb5-111">Должен быть сопоставлен с префиксом выражения expression builder и редактор выражений, применить <xref:System.Web.Compilation.ExpressionEditorAttribute> атрибут и <xref:System.Web.Compilation.ExpressionPrefixAttribute> для настраиваемого атрибута <xref:System.Web.Configuration.ExpressionBuilder> класса, а затем настройте префикс выражения для expression builder в `expressionBuilders` элемент в файл веб-конфигурации.</span><span class="sxs-lookup"><span data-stu-id="81bb5-111">To associate an expression prefix with an expression builder and an expression editor, apply the <xref:System.Web.Compilation.ExpressionEditorAttribute> attribute and an <xref:System.Web.Compilation.ExpressionPrefixAttribute> attribute to the custom <xref:System.Web.Configuration.ExpressionBuilder> class, and then configure the expression prefix for an expression builder in the `expressionBuilders` element in the Web configuration file.</span></span>  
  
 <span data-ttu-id="81bb5-112">Реализация по умолчанию <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> метод возвращает таблицу простой редактор, который использует одну входную строку для создания выражения.</span><span class="sxs-lookup"><span data-stu-id="81bb5-112">The default implementation of the <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> method returns a basic editor sheet, which uses a single input string to form the expression.</span></span> <span data-ttu-id="81bb5-113">Редакторы пользовательских выражений, которые являются производными от <xref:System.Web.UI.Design.ExpressionEditor> можно переопределить <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> метод для возврата пользовательского редактора реализация таблицы.</span><span class="sxs-lookup"><span data-stu-id="81bb5-113">Custom expression editors that are derived from the <xref:System.Web.UI.Design.ExpressionEditor> can override the <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> method to return a custom editor sheet implementation.</span></span> <span data-ttu-id="81bb5-114">Как правило Настраиваемая таблица редактора содержит несколько свойств, которые используются для создания строки выражения.</span><span class="sxs-lookup"><span data-stu-id="81bb5-114">Typically, a custom editor sheet contains multiple properties that are used to build the expression string.</span></span> <span data-ttu-id="81bb5-115"><xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> Метод возвращает результирующую строку выражения на основе свойств текущего выражения.</span><span class="sxs-lookup"><span data-stu-id="81bb5-115">The <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> method returns the resulting expression string based on the current expression properties.</span></span>  
  
 <span data-ttu-id="81bb5-116">Например <xref:System.Web.UI.Design.ResourceExpressionEditor> класс является производным от <xref:System.Web.UI.Design.ExpressionEditor> класса, который предоставляет реализацию для оценки и связывание является ссылкой на ресурс строки со свойством элемента управления во время разработки.</span><span class="sxs-lookup"><span data-stu-id="81bb5-116">For example, the <xref:System.Web.UI.Design.ResourceExpressionEditor> class derives from the <xref:System.Web.UI.Design.ExpressionEditor> class and provides an implementation for evaluating and associating a resource string reference with a control property at design time.</span></span> <span data-ttu-id="81bb5-117"><xref:System.Web.Compilation.ResourceExpressionBuilder> Класс связывается с префикс выражения `Resources` и <xref:System.Web.UI.Design.ResourceExpressionEditor> реализации.</span><span class="sxs-lookup"><span data-stu-id="81bb5-117">The <xref:System.Web.Compilation.ResourceExpressionBuilder> class is associated with the expression prefix `Resources` and the <xref:System.Web.UI.Design.ResourceExpressionEditor> implementation.</span></span> <span data-ttu-id="81bb5-118"><xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A> Возвращает метод <xref:System.Web.UI.Design.ResourceExpressionEditorSheet>, который определяет отдельные свойства, которые образуют выражение со ссылкой на ресурс.</span><span class="sxs-lookup"><span data-stu-id="81bb5-118">The <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A> method returns a <xref:System.Web.UI.Design.ResourceExpressionEditorSheet>, which defines the individual properties that form a resource reference expression.</span></span>  
  
 <span data-ttu-id="81bb5-119">При наследовании от <xref:System.Web.UI.Design.ExpressionEditorSheet> класса, необходимо переопределить следующие члены:</span><span class="sxs-lookup"><span data-stu-id="81bb5-119">When you inherit from the <xref:System.Web.UI.Design.ExpressionEditorSheet> class, you must override the following members:</span></span>  
  
-   <span data-ttu-id="81bb5-120"><xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> Метод для возврата пользовательского редактора реализация таблицы.</span><span class="sxs-lookup"><span data-stu-id="81bb5-120">The <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> method to return a custom editor sheet implementation.</span></span>  
  
-   <span data-ttu-id="81bb5-121"><xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> Конструктор, чтобы реализовать пользовательские действия инициализации для реализации лист редактора выражений.</span><span class="sxs-lookup"><span data-stu-id="81bb5-121">The <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> constructor to implement custom initialization actions for your expression editor sheet implementation.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="81bb5-122">
        <para>Производные таблицу редактора настраиваемых выражений из <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> , если вы определяете новый тип выражения для значений свойств элемента управления, и вы хотите создать строку выражения на основе нескольких значений свойств выражения. Реализация производного класса должен содержать следующее:-открытое свойство для каждого уникального значения в строке выражения, которое можно задать во время разработки.  -Реализация <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> метод, который формирует строка настраиваемого выражения с значениями свойств таблицы редактора.  (Необязательно) реализация конструктора, задает начальные значения редактора листа свойств.  Класс редактора связанные пользовательское выражение создает экземпляр класса лист производном редактора в <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> метод, инициализирует этот экземпляр с текущий набор строк выражений для свойства элемента управления и возвращает экземпляр в визуальный конструктор. Визуальный конструктор, можно задать выражение свойства, а затем вызывает <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> метод строку выражения из значениями свойств таблицы входного выражения.</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="81bb5-122">
          <para>Derive a custom expression editor sheet from the <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> class, if you are defining a new expression type for control property values and you want to build the expression string based on multiple expression property values. A derived class implementation should contain the following:  -   A public property for each distinct value in the expression string that can be set at design time.  -   An implementation of the <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> method that forms the custom expression string from the editor sheet property values.  -   Optionally, a constructor implementation that sets the initial values of the editor sheet properties.  The associated custom expression editor class creates an instance of the derived editor sheet in the <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> method, initializes that instance with the current expression string set for the control property, and returns the instance to the visual designer. The visual designer allows you to set the expression sheet properties, and then calls the <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> method to form the expression string from the input expression sheet property values.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
    <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
    <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpressionEditorSheet (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExpressionEditorSheet(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.Design.ExpressionEditorSheet : IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditorSheet" Usage="new System.Web.UI.Design.ExpressionEditorSheet serviceProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">
          <span data-ttu-id="81bb5-123">Реализация поставщика службы, предоставленная узелом конструктора, используемым для получения дополнительных служб времени разработки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81bb5-123">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81bb5-124">Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81bb5-124">Initializes a new instance of the <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81bb5-125">Так как <xref:System.Web.UI.Design.ExpressionEditorSheet> класс является абстрактным, не удается создать экземпляр <xref:System.Web.UI.Design.ExpressionEditorSheet> напрямую с помощью <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> конструктор.</span><span class="sxs-lookup"><span data-stu-id="81bb5-125">Because the <xref:System.Web.UI.Design.ExpressionEditorSheet> class is abstract, you cannot create an instance of an <xref:System.Web.UI.Design.ExpressionEditorSheet> directly using the <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="81bb5-126">
            <para>При наследовании от <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> класса, переопределить <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> конструктор, чтобы реализовать пользовательские действия инициализации для реализации лист редактора выражений.  Например, класс листа редактора пользовательских выражений, реализующий дополнительное выражение свойства можно определить значения по умолчанию для свойств выражения в <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> конструктор. Класс листа редактора настраиваемых выражений можно определить дополнительные перегрузки открытого конструктора, использующие значения входных параметров, чтобы задать начальные значения для свойств выражения.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="81bb5-126">
              <para>When deriving from the <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> class, override the <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> constructor to implement custom initialization actions for your expression editor sheet implementation.  For example, a custom expression editor sheet class that implements additional expression properties can define the default values for the expression properties in the <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> constructor. A custom expression editor sheet class can define additional public constructor overloads that use input parameter values to set the initial values for the expression properties.</para>
            </span>
          </span>
        </block>
        <altmember cref="Overload:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor" />
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="GetExpression">
      <MemberSignature Language="C#" Value="public abstract string GetExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetExpression() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetExpression () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetExpression();" />
      <MemberSignature Language="F#" Value="abstract member GetExpression : unit -&gt; string" Usage="expressionEditorSheet.GetExpression " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="81bb5-127">При переопределении в производном классе возвращает строку выражения, сформированную значениями свойств таблицы редактора выражений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81bb5-127">When overridden in a derived class, returns the expression string that is formed by the expression editor sheet property values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="81bb5-128">Строка настраиваемого выражения для текущих значений свойств.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81bb5-128">The custom expression string for the current property values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81bb5-129">Таблицу редактора настраиваемых выражений содержит параметры разработки для нескольких выражений свойств, которые объединяются для создания строки выражения.</span><span class="sxs-lookup"><span data-stu-id="81bb5-129">A custom expression editor sheet contains design-time settings for multiple expression properties, which are combined to form an expression string.</span></span> <span data-ttu-id="81bb5-130">Значения свойств элементов управления можно задать с помощью строк выражений; строки выражений вычисляются во время выполнения построителем выражений.</span><span class="sxs-lookup"><span data-stu-id="81bb5-130">Control property values can be set using expression strings; the expression strings are evaluated at run time by an expression builder.</span></span>  
  
 <span data-ttu-id="81bb5-131"><xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> Метод возвращает строку выражения, который создается из текущих свойств выражения.</span><span class="sxs-lookup"><span data-stu-id="81bb5-131">The <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> method returns an expression string that is built from the current expression properties.</span></span> <span data-ttu-id="81bb5-132">Визуальный конструктор, можно задать выражение свойства, а затем вызывает <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> метод, чтобы получить строку выражения и задать значение свойства элемента управления.</span><span class="sxs-lookup"><span data-stu-id="81bb5-132">The visual designer allows you to set the expression sheet properties, and then calls the <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> method to get the expression string and set the control property value.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="81bb5-133">
            <para>Производные таблицу редактора настраиваемых выражений из <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> , если вы определяете новый тип выражения для значений свойств элемента управления, и вы хотите создать строку выражения на основе нескольких значений свойств выражения. Реализация производного класса должен содержать следующее:-открытое свойство для каждого уникального значения в строке выражения, которое можно задать во время разработки.  -Реализация <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> метод, который формирует строка настраиваемого выражения с значениями свойств таблицы редактора.  (Необязательно) реализация конструктора, задает начальные значения редактора листа свойств.  Класс редактора связанные пользовательское выражение создает экземпляр класса лист производном редактора в <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> метод, инициализирует этот экземпляр с текущий набор строк выражений для свойства элемента управления и возвращает экземпляр визуального элемента конструктор. Визуальный конструктор, можно задать выражение свойства, а затем вызывает <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> метод строку выражения из значениями свойств таблицы входного выражения.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="81bb5-133">
              <para>Derive a custom expression editor sheet from the <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> class, if you are defining a new expression type for control property values and you want to build the expression string based on multiple expression property values. A derived class implementation should contain the following:  -   A public property for each distinct value in the expression string that can be set at design time.  -   An implementation of the <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> method that forms the custom expression string from the editor sheet property values.  -   Optionally, a constructor implementation that sets the initial values of the editor sheet properties.  The associated custom expression editor class creates an instance of the derived editor sheet in the <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> method, initializes that instance with the current expression string set for the control property, and then returns the instance to the visual designer. The visual designer allows you to set the expression sheet properties, and then calls the <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> method to form the expression string from the input expression sheet property values.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public virtual bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ExpressionEditorSheet.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsValid : bool" Usage="System.Web.UI.Design.ExpressionEditorSheet.IsValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81bb5-134">Возвращает значение, указывающее, допустима ли строка выражения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81bb5-134">Gets a value that indicates whether the expression string is valid.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81bb5-135">Значение <see langword="true" />, если строка выражения допустима; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81bb5-135">
              <see langword="true" />, if the expression string is valid; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81bb5-136">Базовая реализация всегда возвращает значение `true`.</span><span class="sxs-lookup"><span data-stu-id="81bb5-136">This base implementation always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="ServiceProvider">
      <MemberSignature Language="C#" Value="public IServiceProvider ServiceProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IServiceProvider ServiceProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceProvider As IServiceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IServiceProvider ^ ServiceProvider { IServiceProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceProvider : IServiceProvider" Usage="System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81bb5-137">Получает реализацию поставщика служб, используемую таблицей редактора выражений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81bb5-137">Gets the service provider implementation that is used by the expression editor sheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81bb5-138">Интерфейс <see cref="T:System.IServiceProvider" />, обычно предоставляемый узелом разработки, который может использоваться для получения дополнительных служб времени разработки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="81bb5-138">An <see cref="T:System.IServiceProvider" />, typically provided by the design host, that can be used to obtain additional design-time services.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81bb5-139">Используйте <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> конструктор, чтобы задать <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> внедрению таблицу редактора пользовательских выражений.</span><span class="sxs-lookup"><span data-stu-id="81bb5-139">Use the <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> constructor to set the <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> implementation for a custom expression editor sheet.</span></span>  
  
 <span data-ttu-id="81bb5-140"><xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> Свойство может использоваться для доступа к службам, которые предоставляются хост-узелом конструктора.</span><span class="sxs-lookup"><span data-stu-id="81bb5-140">The <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> property can be used to access services that are provided by the designer host.</span></span> <span data-ttu-id="81bb5-141">Например, вызвать <xref:System.IServiceProvider.GetService%2A> метод с <xref:System.Web.UI.Design.IWebApplication> интерфейс для доступа к элементам проекта, документов или сведений о файле конфигурации, которые обеспечиваются через визуальный конструктор.</span><span class="sxs-lookup"><span data-stu-id="81bb5-141">For example, call the <xref:System.IServiceProvider.GetService%2A> method with the <xref:System.Web.UI.Design.IWebApplication> interface to access project items, documents, or configuration file details that are provided through the visual designer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" />
      </Docs>
    </Member>
  </Members>
</Type>