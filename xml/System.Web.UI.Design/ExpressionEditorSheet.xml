<Type Name="ExpressionEditorSheet" FullName="System.Web.UI.Design.ExpressionEditorSheet">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9d987e9f0ffaf7b1818b7d646845498696df77f9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36589985" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ExpressionEditorSheet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExpressionEditorSheet extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ExpressionEditorSheet" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExpressionEditorSheet" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionEditorSheet abstract" />
  <TypeSignature Language="F#" Value="type ExpressionEditorSheet = class" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет таблицу редактора времени разработки для настраиваемого выражения. Этот класс должен наследоваться.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Таблицу редактора пользовательских выражений позволяет разработчику задать свойства настраиваемого выражения во время разработки. Значения свойств элементов управления можно задать с помощью строк выражений. строки выражений вычисляются во время выполнения построителем выражений и во время разработки с помощью редактора выражений.  
  
 При просмотре <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> свойства для элемента управления в таблице свойств времени разработки, визуальный конструктор отображает диалоговое окно для задания выражений, задающих значения для свойства элемента управления. Можно выбрать тип выражения, на основе списка префиксов выражений. При выборе префикс выражения в списке визуальный конструктор использует связанный <xref:System.Web.UI.Design.ExpressionEditor> и <xref:System.Web.UI.Design.ExpressionEditorSheet> объекты для оценки и преобразовать строку выражения, основанные на синтаксис для этого типа выражения. Визуальный конструктор использует свойства таблицы редактора выражений для запроса для одного или нескольких строк, объединяемых в строку настраиваемого выражения.  
  
 Как правило, чтобы указать новый тип выражения во время разработки, определения префикса уникальное выражение и предоставить пользовательские <xref:System.Web.Compilation.ExpressionBuilder> и <xref:System.Web.UI.Design.ExpressionEditor> реализации. При необходимости можно предоставить пользовательский <xref:System.Web.UI.Design.ExpressionEditorSheet> реализацию, которая определяет свойства, которые используются для создания выражения. Чтобы связать префикс выражения с построитель выражений и редактор выражений, примените <xref:System.Web.Compilation.ExpressionEditorAttribute> атрибута и <xref:System.Web.Compilation.ExpressionPrefixAttribute> для настраиваемого атрибута <xref:System.Web.Configuration.ExpressionBuilder> класса, а затем настройте префикс выражения для построитель выражений в `expressionBuilders` элемент в файл веб-конфигурации.  
  
 Реализация по умолчанию <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> метод возвращает таблицу базового редактора, который использует одну входную строку для создания выражения. Редакторы пользовательских выражений, которые являются производными от <xref:System.Web.UI.Design.ExpressionEditor> можно переопределить <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> метода для возвращения пользовательского редактора реализация таблицы. Как правило Настраиваемая таблица редактора содержит несколько свойств, которые используются для создания строки выражения. <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> Метод возвращает результирующую строку выражения на основе текущего выражения свойств.  
  
 Например <xref:System.Web.UI.Design.ResourceExpressionEditor> класс является производным от <xref:System.Web.UI.Design.ExpressionEditor> класса и предоставляет реализацию для оценки и связывание ссылки на строку ресурса со свойством элемента управления во время разработки. <xref:System.Web.Compilation.ResourceExpressionBuilder> Класс связывается с префикс выражения `Resources` и <xref:System.Web.UI.Design.ResourceExpressionEditor> реализации. <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A> Возвращает метод <xref:System.Web.UI.Design.ResourceExpressionEditorSheet>, который определяет отдельные свойства, которые образуют выражение со ссылкой на ресурс.  
  
 При наследовании от <xref:System.Web.UI.Design.ExpressionEditorSheet> класса, необходимо переопределить следующие члены:  
  
-   <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> Метод для возврата пользовательского редактора реализация таблицы.  
  
-   <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> Конструктор, чтобы реализовать настраиваемые операции инициализации для реализации лист редактора выражений.  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Производные таблицы редактора пользовательских выражений, из <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> класса, если при определении нового типа выражения для значения свойств элементов управления, и вы хотите создать строку выражения на основе нескольких выражений значений свойств. Реализация производного класса должен содержать следующее:-открытое свойство для каждого уникального значения в строке выражения, можно задать во время разработки.  -Реализация <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> метода, которая формирует строку настраиваемого выражения с значениями свойств таблицы редактора.  (Необязательно) реализация конструктора, задает начальные значения редактора листа свойств.  Класс редактора пользовательских выражений, связанных создается экземпляр таблицы производном редактора в <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> метод, инициализирует его с текущей строки выражения задать для свойства элемента управления и возвращает экземпляр в визуальный конструктор. Визуальный конструктор позволяет задавать свойства стилей выражение, а затем вызывает <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> метод для составления выражений строки из входного выражения значениями свойств таблицы.</para>
    </block>
    <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
    <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
    <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpressionEditorSheet (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExpressionEditorSheet(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.Design.ExpressionEditorSheet : IServiceProvider -&gt; System.Web.UI.Design.ExpressionEditorSheet" Usage="new System.Web.UI.Design.ExpressionEditorSheet serviceProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">Реализация поставщика службы, предоставленная узелом конструктора, используемым для получения дополнительных служб времени разработки.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поскольку <xref:System.Web.UI.Design.ExpressionEditorSheet> класс является абстрактным, не удается создать экземпляр <xref:System.Web.UI.Design.ExpressionEditorSheet> напрямую с помощью <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> конструктор.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При наследовании от <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> класса и переопределить методы <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> конструктор, чтобы реализовать настраиваемые операции инициализации для реализации лист редактора выражений.  Например, класс листа редактора пользовательских выражений, реализующий дополнительное выражение свойства можно определить значения по умолчанию для свойства выражения в <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> конструктора. Класс листа редактора пользовательских выражений можно определить дополнительные перегрузки открытого конструктора, использующие значения входных параметров для задания начальных значений свойств выражения.</para>
        </block>
        <altmember cref="Overload:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor" />
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="GetExpression">
      <MemberSignature Language="C#" Value="public abstract string GetExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetExpression() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetExpression () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetExpression();" />
      <MemberSignature Language="F#" Value="abstract member GetExpression : unit -&gt; string" Usage="expressionEditorSheet.GetExpression " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>При переопределении в производном классе возвращает строку выражения, сформированную значениями свойств таблицы редактора выражений.</summary>
        <returns>Строка настраиваемого выражения для текущих значений свойств.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Таблицу редактора пользовательских выражений содержит параметры во время разработки для нескольких свойств выражений, объединяемых для создания строки выражения. Значения свойств элементов управления можно задать с помощью строк выражений. строки выражений вычисляются во время выполнения построителем выражений.  
  
 <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> Метод возвращает строку выражения, которая создается из текущих свойств выражения. Визуальный конструктор позволяет задавать свойства стилей выражение, а затем вызывает <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> метод получает строковое выражение и задает значение свойства элемента управления.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Производные таблицы редактора пользовательских выражений, из <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> класса, если при определении нового типа выражения для значения свойств элементов управления, и вы хотите создать строку выражения на основе нескольких выражений значений свойств. Реализация производного класса должен содержать следующее:-открытое свойство для каждого уникального значения в строке выражения, можно задать во время разработки.  -Реализация <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> метода, которая формирует строку настраиваемого выражения с значениями свойств таблицы редактора.  (Необязательно) реализация конструктора, задает начальные значения редактора листа свойств.  Класс редактора пользовательских выражений, связанных создается экземпляр таблицы производном редактора в <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> метода, инициализирует этот экземпляр с текущей строки выражения задать для свойства элемента управления и возвращает экземпляр визуального элемента конструктор. Визуальный конструктор позволяет задавать свойства стилей выражение, а затем вызывает <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> метод для составления выражений строки из входного выражения значениями свойств таблицы.</para>
        </block>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public virtual bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ExpressionEditorSheet.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsValid { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsValid : bool" Usage="System.Web.UI.Design.ExpressionEditorSheet.IsValid" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, допустима ли строка выражения.</summary>
        <value>Значение <see langword="true" />, если строка выражения допустима; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Базовая реализация всегда возвращает значение `true`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="ServiceProvider">
      <MemberSignature Language="C#" Value="public IServiceProvider ServiceProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IServiceProvider ServiceProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceProvider As IServiceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IServiceProvider ^ ServiceProvider { IServiceProvider ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ServiceProvider : IServiceProvider" Usage="System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает реализацию поставщика служб, используемую таблицей редактора выражений.</summary>
        <value>Интерфейс <see cref="T:System.IServiceProvider" />, обычно предоставляемый узелом разработки, который может использоваться для получения дополнительных служб времени разработки.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> конструкторе, чтобы задать <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> реализацию таблицу редактора пользовательских выражений.  
  
 <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> Свойство может использоваться для доступа к службам, предоставляемым узлом конструктора. Например, вызов <xref:System.IServiceProvider.GetService%2A> метод с <xref:System.Web.UI.Design.IWebApplication> интерфейс для доступа к элементам проекта, документы или сведений о файле конфигурации, которые предоставляются с помощью конструктора visual.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" />
      </Docs>
    </Member>
  </Members>
</Type>