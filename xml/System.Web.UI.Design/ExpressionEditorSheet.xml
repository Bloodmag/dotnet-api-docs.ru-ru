<Type Name="ExpressionEditorSheet" FullName="System.Web.UI.Design.ExpressionEditorSheet">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="00a92c41d6071763aeacc5cf80675a148295e317" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30589398" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ExpressionEditorSheet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExpressionEditorSheet extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.Design.ExpressionEditorSheet" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExpressionEditorSheet" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionEditorSheet abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Design</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="fe41c-101">Представляет таблицу редактора времени разработки для настраиваемого выражения.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fe41c-101">Represents a design-time editor sheet for a custom expression.</span>
      </span>
      <span data-ttu-id="fe41c-102">Этот класс должен наследоваться.</span>
      <span class="sxs-lookup">
        <span data-stu-id="fe41c-102">This class must be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe41c-103">Таблицу редактора пользовательских выражений позволяет разработчику задать свойства настраиваемого выражения во время разработки.</span><span class="sxs-lookup"><span data-stu-id="fe41c-103">A custom expression editor sheet lets a developer set properties on a custom expression at design-time.</span></span> <span data-ttu-id="fe41c-104">Значения свойств элементов управления можно задать с помощью строк выражений. строки выражений вычисляются во время выполнения построителем выражений и во время разработки с помощью редактора выражений.</span><span class="sxs-lookup"><span data-stu-id="fe41c-104">Control property values can be set using expression strings; the expression strings are evaluated at run time by an expression builder and at design time by an expression editor.</span></span>  
  
 <span data-ttu-id="fe41c-105">При просмотре <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> свойства для элемента управления в таблице свойств времени разработки, визуальный конструктор отображает диалоговое окно для задания выражений, задающих значения для свойства элемента управления.</span><span class="sxs-lookup"><span data-stu-id="fe41c-105">When you browse the <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> property for a control in the design-time properties grid, the visual designer displays a dialog box to set expressions that provide the value for a control property.</span></span> <span data-ttu-id="fe41c-106">Можно выбрать тип выражения, на основе списка префиксов выражений.</span><span class="sxs-lookup"><span data-stu-id="fe41c-106">You can select the expression type based on a list of expression prefixes.</span></span> <span data-ttu-id="fe41c-107">При выборе префикс выражения в списке визуальный конструктор использует связанный <xref:System.Web.UI.Design.ExpressionEditor> и <xref:System.Web.UI.Design.ExpressionEditorSheet> объекты для оценки и преобразовать строку выражения, основанные на синтаксис для этого типа выражения.</span><span class="sxs-lookup"><span data-stu-id="fe41c-107">When you select an expression prefix from the list, the visual designer uses the associated <xref:System.Web.UI.Design.ExpressionEditor> and <xref:System.Web.UI.Design.ExpressionEditorSheet> objects to evaluate and convert the expression string based on the syntax for that type of expression.</span></span> <span data-ttu-id="fe41c-108">Визуальный конструктор использует свойства таблицы редактора выражений для запроса для одного или нескольких строк, объединяемых в строку настраиваемого выражения.</span><span class="sxs-lookup"><span data-stu-id="fe41c-108">The visual designer uses expression editor sheet properties to prompt for one or more strings that combine into the custom expression string.</span></span>  
  
 <span data-ttu-id="fe41c-109">Как правило, чтобы указать новый тип выражения во время разработки, определения префикса уникальное выражение и предоставить пользовательские <xref:System.Web.Compilation.ExpressionBuilder> и <xref:System.Web.UI.Design.ExpressionEditor> реализации.</span><span class="sxs-lookup"><span data-stu-id="fe41c-109">Typically, to supply a new expression type at design time, you define a unique expression prefix and provide custom <xref:System.Web.Compilation.ExpressionBuilder> and <xref:System.Web.UI.Design.ExpressionEditor> implementations.</span></span> <span data-ttu-id="fe41c-110">При необходимости можно предоставить пользовательский <xref:System.Web.UI.Design.ExpressionEditorSheet> реализацию, которая определяет свойства, которые используются для создания выражения.</span><span class="sxs-lookup"><span data-stu-id="fe41c-110">Optionally, you can provide a custom <xref:System.Web.UI.Design.ExpressionEditorSheet> implementation that defines properties that are used to form the expression.</span></span> <span data-ttu-id="fe41c-111">Чтобы связать префикс выражения с построитель выражений и редактор выражений, примените <xref:System.Web.Compilation.ExpressionEditorAttribute> атрибута и <xref:System.Web.Compilation.ExpressionPrefixAttribute> для настраиваемого атрибута <xref:System.Web.Configuration.ExpressionBuilder> класса, а затем настройте префикс выражения для построитель выражений в `expressionBuilders` элемент в файл веб-конфигурации.</span><span class="sxs-lookup"><span data-stu-id="fe41c-111">To associate an expression prefix with an expression builder and an expression editor, apply the <xref:System.Web.Compilation.ExpressionEditorAttribute> attribute and an <xref:System.Web.Compilation.ExpressionPrefixAttribute> attribute to the custom <xref:System.Web.Configuration.ExpressionBuilder> class, and then configure the expression prefix for an expression builder in the `expressionBuilders` element in the Web configuration file.</span></span>  
  
 <span data-ttu-id="fe41c-112">Реализация по умолчанию <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> метод возвращает таблицу базового редактора, который использует одну входную строку для создания выражения.</span><span class="sxs-lookup"><span data-stu-id="fe41c-112">The default implementation of the <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> method returns a basic editor sheet, which uses a single input string to form the expression.</span></span> <span data-ttu-id="fe41c-113">Редакторы пользовательских выражений, которые являются производными от <xref:System.Web.UI.Design.ExpressionEditor> можно переопределить <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> метода для возвращения пользовательского редактора реализация таблицы.</span><span class="sxs-lookup"><span data-stu-id="fe41c-113">Custom expression editors that are derived from the <xref:System.Web.UI.Design.ExpressionEditor> can override the <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> method to return a custom editor sheet implementation.</span></span> <span data-ttu-id="fe41c-114">Как правило Настраиваемая таблица редактора содержит несколько свойств, которые используются для создания строки выражения.</span><span class="sxs-lookup"><span data-stu-id="fe41c-114">Typically, a custom editor sheet contains multiple properties that are used to build the expression string.</span></span> <span data-ttu-id="fe41c-115"><xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> Метод возвращает результирующую строку выражения на основе текущего выражения свойств.</span><span class="sxs-lookup"><span data-stu-id="fe41c-115">The <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> method returns the resulting expression string based on the current expression properties.</span></span>  
  
 <span data-ttu-id="fe41c-116">Например <xref:System.Web.UI.Design.ResourceExpressionEditor> класс является производным от <xref:System.Web.UI.Design.ExpressionEditor> класса и предоставляет реализацию для оценки и связывание ссылки на строку ресурса со свойством элемента управления во время разработки.</span><span class="sxs-lookup"><span data-stu-id="fe41c-116">For example, the <xref:System.Web.UI.Design.ResourceExpressionEditor> class derives from the <xref:System.Web.UI.Design.ExpressionEditor> class and provides an implementation for evaluating and associating a resource string reference with a control property at design time.</span></span> <span data-ttu-id="fe41c-117"><xref:System.Web.Compilation.ResourceExpressionBuilder> Класс связывается с префикс выражения `Resources` и <xref:System.Web.UI.Design.ResourceExpressionEditor> реализации.</span><span class="sxs-lookup"><span data-stu-id="fe41c-117">The <xref:System.Web.Compilation.ResourceExpressionBuilder> class is associated with the expression prefix `Resources` and the <xref:System.Web.UI.Design.ResourceExpressionEditor> implementation.</span></span> <span data-ttu-id="fe41c-118"><xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A> Возвращает метод <xref:System.Web.UI.Design.ResourceExpressionEditorSheet>, который определяет отдельные свойства, которые образуют выражение со ссылкой на ресурс.</span><span class="sxs-lookup"><span data-stu-id="fe41c-118">The <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A> method returns a <xref:System.Web.UI.Design.ResourceExpressionEditorSheet>, which defines the individual properties that form a resource reference expression.</span></span>  
  
 <span data-ttu-id="fe41c-119">При наследовании от <xref:System.Web.UI.Design.ExpressionEditorSheet> класса, необходимо переопределить следующие члены:</span><span class="sxs-lookup"><span data-stu-id="fe41c-119">When you inherit from the <xref:System.Web.UI.Design.ExpressionEditorSheet> class, you must override the following members:</span></span>  
  
-   <span data-ttu-id="fe41c-120"><xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> Метод для возврата пользовательского редактора реализация таблицы.</span><span class="sxs-lookup"><span data-stu-id="fe41c-120">The <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> method to return a custom editor sheet implementation.</span></span>  
  
-   <span data-ttu-id="fe41c-121"><xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> Конструктор, чтобы реализовать настраиваемые операции инициализации для реализации лист редактора выражений.</span><span class="sxs-lookup"><span data-stu-id="fe41c-121">The <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> constructor to implement custom initialization actions for your expression editor sheet implementation.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="fe41c-122">Производные таблицы редактора пользовательских выражений, из <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> класса, если при определении нового типа выражения для значения свойств элементов управления, и вы хотите создать строку выражения на основе нескольких выражений значений свойств.</span>
        <span class="sxs-lookup">
          <span data-stu-id="fe41c-122">Derive a custom expression editor sheet from the <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> class, if you are defining a new expression type for control property values and you want to build the expression string based on multiple expression property values.</span>
        </span>
        <span data-ttu-id="fe41c-123">Реализация производного класса должна содержать следующие элементы:</span>
        <span class="sxs-lookup">
          <span data-stu-id="fe41c-123">A derived class implementation should contain the following:</span>
        </span>  
  
-   <span data-ttu-id="fe41c-124">Открытое свойство для каждого уникального значения в строке выражения, можно задать во время разработки.</span><span class="sxs-lookup"><span data-stu-id="fe41c-124">A public property for each distinct value in the expression string that can be set at design time.</span></span>  
  
-   <span data-ttu-id="fe41c-125">Реализация <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> метода, которая формирует строку настраиваемого выражения с значениями свойств таблицы редактора.</span><span class="sxs-lookup"><span data-stu-id="fe41c-125">An implementation of the <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> method that forms the custom expression string from the editor sheet property values.</span></span>  
  
-   <span data-ttu-id="fe41c-126">Кроме того реализация конструктора, задает начальные значения редактора листа свойств.</span><span class="sxs-lookup"><span data-stu-id="fe41c-126">Optionally, a constructor implementation that sets the initial values of the editor sheet properties.</span></span><span data-ttu-id="fe41c-127">Класс редактора пользовательских выражений, связанных создается экземпляр таблицы производном редактора в <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> метод, инициализирует его с текущей строки выражения задать для свойства элемента управления и возвращает экземпляр в визуальный конструктор.</span><span class="sxs-lookup"><span data-stu-id="fe41c-127">The associated custom expression editor class creates an instance of the derived editor sheet in the <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> method, initializes that instance with the current expression string set for the control property, and returns the instance to the visual designer.</span></span><span data-ttu-id="fe41c-128">Визуальный конструктор позволяет задавать свойства стилей выражение, а затем вызывает <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> метод для составления выражений строки из входного выражения значениями свойств таблицы.</span><span class="sxs-lookup"><span data-stu-id="fe41c-128">The visual designer allows you to set the expression sheet properties, and then calls the <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> method to form the expression string from the input expression sheet property values.</span></span></para>
    </block>
    <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
    <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
    <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpressionEditorSheet (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExpressionEditorSheet(IServiceProvider ^ serviceProvider);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">
          <span data-ttu-id="fe41c-129">Реализация поставщика службы, предоставленная узелом конструктора, используемым для получения дополнительных служб времени разработки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe41c-129">A service provider implementation supplied by the designer host, used to obtain additional design-time services.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="fe41c-130">Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe41c-130">Initializes a new instance of the <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe41c-131">Поскольку <xref:System.Web.UI.Design.ExpressionEditorSheet> класс является абстрактным, не удается создать экземпляр <xref:System.Web.UI.Design.ExpressionEditorSheet> напрямую с помощью <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> конструктор.</span><span class="sxs-lookup"><span data-stu-id="fe41c-131">Because the <xref:System.Web.UI.Design.ExpressionEditorSheet> class is abstract, you cannot create an instance of an <xref:System.Web.UI.Design.ExpressionEditorSheet> directly using the <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="fe41c-132">При наследовании от <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> класса и переопределить методы <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> конструктор, чтобы реализовать настраиваемые операции инициализации для реализации лист редактора выражений.</span>
            <span class="sxs-lookup">
              <span data-stu-id="fe41c-132">When deriving from the <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> class, override the <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> constructor to implement custom initialization actions for your expression editor sheet implementation.</span>
            </span>
            <span data-ttu-id="fe41c-133">Например, класс листа редактора пользовательских выражений, реализующий дополнительное выражение свойства можно определить значения по умолчанию для свойства выражения в <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> конструктора.</span>
            <span class="sxs-lookup">
              <span data-stu-id="fe41c-133">For example, a custom expression editor sheet class that implements additional expression properties can define the default values for the expression properties in the <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" /> constructor.</span>
            </span>
            <span data-ttu-id="fe41c-134">Класс листа редактора пользовательских выражений можно определить дополнительные перегрузки открытого конструктора, использующие значения входных параметров для задания начальных значений свойств выражения.</span>
            <span class="sxs-lookup">
              <span data-stu-id="fe41c-134">A custom expression editor sheet class can define additional public constructor overloads that use input parameter values to set the initial values for the expression properties.</span>
            </span>
          </para>
        </block>
        <altmember cref="Overload:System.Web.UI.Design.ExpressionEditor.GetExpressionEditor" />
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="GetExpression">
      <MemberSignature Language="C#" Value="public abstract string GetExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetExpression() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetExpression () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::String ^ GetExpression();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="fe41c-135">При переопределении в производном классе возвращает строку выражения, сформированную значениями свойств таблицы редактора выражений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe41c-135">When overridden in a derived class, returns the expression string that is formed by the expression editor sheet property values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="fe41c-136">Строка настраиваемого выражения для текущих значений свойств.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe41c-136">The custom expression string for the current property values.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe41c-137">Таблицу редактора пользовательских выражений содержит параметры во время разработки для нескольких свойств выражений, объединяемых для создания строки выражения.</span><span class="sxs-lookup"><span data-stu-id="fe41c-137">A custom expression editor sheet contains design-time settings for multiple expression properties, which are combined to form an expression string.</span></span> <span data-ttu-id="fe41c-138">Значения свойств элементов управления можно задать с помощью строк выражений. строки выражений вычисляются во время выполнения построителем выражений.</span><span class="sxs-lookup"><span data-stu-id="fe41c-138">Control property values can be set using expression strings; the expression strings are evaluated at run time by an expression builder.</span></span>  
  
 <span data-ttu-id="fe41c-139"><xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> Метод возвращает строку выражения, которая создается из текущих свойств выражения.</span><span class="sxs-lookup"><span data-stu-id="fe41c-139">The <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> method returns an expression string that is built from the current expression properties.</span></span> <span data-ttu-id="fe41c-140">Визуальный конструктор позволяет задавать свойства стилей выражение, а затем вызывает <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> метод получает строковое выражение и задает значение свойства элемента управления.</span><span class="sxs-lookup"><span data-stu-id="fe41c-140">The visual designer allows you to set the expression sheet properties, and then calls the <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A> method to get the expression string and set the control property value.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="fe41c-141">Производные таблицы редактора пользовательских выражений, из <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> класса, если при определении нового типа выражения для значения свойств элементов управления, и вы хотите создать строку выражения на основе нескольких выражений значений свойств.</span>
            <span class="sxs-lookup">
              <span data-stu-id="fe41c-141">Derive a custom expression editor sheet from the <see cref="T:System.Web.UI.Design.ExpressionEditorSheet" /> class, if you are defining a new expression type for control property values and you want to build the expression string based on multiple expression property values.</span>
            </span>
            <span data-ttu-id="fe41c-142">Реализация производного класса должна содержать следующие элементы:</span>
            <span class="sxs-lookup">
              <span data-stu-id="fe41c-142">A derived class implementation should contain the following:</span>
            </span>  
  
-   <span data-ttu-id="fe41c-143">Открытое свойство для каждого уникального значения в строке выражения, можно задать во время разработки.</span><span class="sxs-lookup"><span data-stu-id="fe41c-143">A public property for each distinct value in the expression string that can be set at design time.</span></span>  
  
-   <span data-ttu-id="fe41c-144">Реализация <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> метода, которая формирует строку настраиваемого выражения с значениями свойств таблицы редактора.</span><span class="sxs-lookup"><span data-stu-id="fe41c-144">An implementation of the <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> method that forms the custom expression string from the editor sheet property values.</span></span>  
  
-   <span data-ttu-id="fe41c-145">Кроме того реализация конструктора, задает начальные значения редактора листа свойств.</span><span class="sxs-lookup"><span data-stu-id="fe41c-145">Optionally, a constructor implementation that sets the initial values of the editor sheet properties.</span></span><span data-ttu-id="fe41c-146">Класс редактора пользовательских выражений, связанных создается экземпляр таблицы производном редактора в <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> метода, инициализирует этот экземпляр с текущей строки выражения задать для свойства элемента управления и возвращает экземпляр визуального элемента конструктор.</span><span class="sxs-lookup"><span data-stu-id="fe41c-146">The associated custom expression editor class creates an instance of the derived editor sheet in the <see cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" /> method, initializes that instance with the current expression string set for the control property, and then returns the instance to the visual designer.</span></span><span data-ttu-id="fe41c-147">Визуальный конструктор позволяет задавать свойства стилей выражение, а затем вызывает <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> метод для составления выражений строки из входного выражения значениями свойств таблицы.</span><span class="sxs-lookup"><span data-stu-id="fe41c-147">The visual designer allows you to set the expression sheet properties, and then calls the <see cref="M:System.Web.UI.Design.ExpressionEditorSheet.GetExpression" /> method to form the expression string from the input expression sheet property values.</span></span></para>
        </block>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public virtual bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ExpressionEditorSheet.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsValid { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe41c-148">Возвращает значение, указывающее, допустима ли строка выражения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe41c-148">Gets a value that indicates whether the expression string is valid.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe41c-149">Значение <see langword="true" />, если строка выражения допустима; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe41c-149">
              <see langword="true" />, if the expression string is valid; otherwise <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe41c-150">Базовая реализация всегда возвращает значение `true`.</span><span class="sxs-lookup"><span data-stu-id="fe41c-150">This base implementation always returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="T:System.Web.UI.Design.ResourceExpressionEditorSheet" />
      </Docs>
    </Member>
    <Member MemberName="ServiceProvider">
      <MemberSignature Language="C#" Value="public IServiceProvider ServiceProvider { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IServiceProvider ServiceProvider" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ServiceProvider As IServiceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IServiceProvider ^ ServiceProvider { IServiceProvider ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Design</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="fe41c-151">Получает реализацию поставщика служб, используемую таблицей редактора выражений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe41c-151">Gets the service provider implementation that is used by the expression editor sheet.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="fe41c-152">Интерфейс <see cref="T:System.IServiceProvider" />, обычно предоставляемый узелом разработки, который может использоваться для получения дополнительных служб времени разработки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="fe41c-152">An <see cref="T:System.IServiceProvider" />, typically provided by the design host, that can be used to obtain additional design-time services.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fe41c-153">Используйте <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> конструкторе, чтобы задать <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> реализацию таблицу редактора пользовательских выражений.</span><span class="sxs-lookup"><span data-stu-id="fe41c-153">Use the <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A> constructor to set the <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> implementation for a custom expression editor sheet.</span></span>  
  
 <span data-ttu-id="fe41c-154"><xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> Свойство может использоваться для доступа к службам, предоставляемым узлом конструктора.</span><span class="sxs-lookup"><span data-stu-id="fe41c-154">The <xref:System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider%2A> property can be used to access services that are provided by the designer host.</span></span> <span data-ttu-id="fe41c-155">Например, вызов <xref:System.IServiceProvider.GetService%2A> метод с <xref:System.Web.UI.Design.IWebApplication> интерфейс для доступа к элементам проекта, документы или сведений о файле конфигурации, которые предоставляются с помощью конструктора visual.</span><span class="sxs-lookup"><span data-stu-id="fe41c-155">For example, call the <xref:System.IServiceProvider.GetService%2A> method with the <xref:System.Web.UI.Design.IWebApplication> interface to access project items, documents, or configuration file details that are provided through the visual designer.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet(System.String,System.IServiceProvider)" />
        <altmember cref="M:System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)" />
      </Docs>
    </Member>
  </Members>
</Type>