<Type Name="HtmlForm" FullName="System.Web.UI.HtmlControls.HtmlForm">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a9269c871537e84afc2061b0e882b63e40aa2716" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30590958" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HtmlForm : System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlForm extends System.Web.UI.HtmlControls.HtmlContainerControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlForm" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlForm&#xA;Inherits HtmlContainerControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlForm : System::Web::UI::HtmlControls::HtmlContainerControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlContainerControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Обеспечивает программный доступ к элементу HTML <see langword="&lt;form&gt;" /> на сервере.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm> Управления является контейнером для серверных элементов управления на страницу Web Forms. Все серверные элементы управления, передается на сервер должны находиться между открывающим и закрывающим тегами элемента <xref:System.Web.UI.HtmlControls.HtmlForm> элемента управления.  
  
> [!NOTE]
>  ASP.NET позволяет только один <xref:System.Web.UI.HtmlControls.HtmlForm> управления активен на страницу Web Forms. Если имеется более одного активного <xref:System.Web.UI.HtmlControls.HtmlForm> управления на страницу Web Forms общеязыковая среда выполнения создаст исключение <xref:System.Web.HttpException?displayProperty=nameWithType> исключение при запросе страницы. Однако, можно использовать <xref:System.Web.UI.WebControls.MultiView> управления where каждого <xref:System.Web.UI.WebControls.View> объект содержит одно <xref:System.Web.UI.HtmlControls.HtmlForm> управления, так как только один <xref:System.Web.UI.WebControls.View> активен в любой момент времени.  
  
 Можно управлять поведением <xref:System.Web.UI.HtmlControls.HtmlForm> управления путем задания его свойств. Чтобы указать тип кодировки для данных формы, задать <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> свойства. Метод (`GET` или `POST`), используемый обозревателем для отправки данных формы на сервер для обработки задается путем присвоения <xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A> свойство.  
  
> [!CAUTION]
>  По умолчанию свойство <xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A> имеет значение `POST`. Можно изменить значение этого свойства равным `GET`, но это может нарушить встроенное состояние и службы, предоставляемые платформой страницы ASP.NET обратной передачи.  
  
 Можно настроить элементы управления, реализующие <xref:System.Web.UI.WebControls.IButtonControl> интерфейс для отправки на страницу другой целевой объект. Это называется межстраничной. Дополнительные сведения см. в разделе [учета кросс-страницы в веб-форм ASP.NET](http://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b).  
  
 Список начальных значений свойств для экземпляра <xref:System.Web.UI.HtmlControls.HtmlForm>, в разделе <xref:System.Web.UI.HtmlControls.HtmlForm.%23ctor%2A> конструктор.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.HtmlControls.HtmlForm> класса для создания простой формы.  
  
 [!code-aspx-csharp[HtmlForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm/CS/htmlformcs.aspx#1)]
 [!code-aspx-vb[HtmlForm#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm/VB/htmlformvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlContainerControl" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
    <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Method" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlForm ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlForm();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор используется для создания и инициализации нового экземпляра <xref:System.Web.UI.HtmlControls.HtmlForm> класса.  
  
 В следующей таблице показаны исходное значение свойства для экземпляра <xref:System.Web.UI.HtmlControls.HtmlForm>.  
  
|Свойство.|Начальное значение|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlControl.TagName%2A>|Символьная строка «форма».|  
  
   
  
## Examples  
 В следующем примере кода показано, как создать новый экземпляр <xref:System.Web.UI.HtmlControls.HtmlForm> управления и поместите его на веб-странице.  
  
 [!code-aspx-csharp[HtmlFormCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlFormCtor/CS/htmlformctorcs.aspx#1)]
 [!code-aspx-vb[HtmlFormCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlFormCtor/VB/htmlformctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlControl.TagName" />
      </Docs>
    </Member>
    <Member MemberName="Action">
      <MemberSignature Language="C#" Value="public string Action { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Action" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Action" />
      <MemberSignature Language="VB.NET" Value="Public Property Action As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Action { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает атрибут действия HTML-формы.</summary>
        <value>Атрибут действия HTML-формы. Значение по умолчанию — <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Использовать <xref:System.Web.UI.HtmlControls.HtmlForm.Action%2A> свойства при перезаписи URL-адрес исходного запроса, но вы хотите сохранить исходный URL-адрес для атрибут действия формы HTML. Задать <xref:System.Web.UI.HtmlControls.HtmlForm.Action%2A> значение URL-адреса, чтобы сохранить свойства.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.HttpContext.RewritePath(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ClientID">
      <MemberSignature Language="C#" Value="public override string ClientID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.ClientID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ClientID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ClientID { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает идентификатор элемента управления, созданный [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] для элемента управления <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</summary>
        <value>Идентификатор элемента управления, созданный [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] для <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> элемента управления.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для предотвращения конфликтов имен при подготовке к просмотру несколько экземпляров элемента управления, [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] автоматически создает уникальный <xref:System.Web.UI.HtmlControls.HtmlForm.ClientID%2A> значение для каждого элемента управления на странице. Дополнительные сведения см. в описании свойства <xref:System.Web.UI.Control.ClientID%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает новую коллекцию <see cref="T:System.Web.UI.ControlCollection" /> для элемента управления <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</summary>
        <returns>Коллекция <see cref="T:System.Web.UI.ControlCollection" />, содержащая дочерние серверные элементы управления для элемента управления <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="DefaultButton">
      <MemberSignature Language="C#" Value="public string DefaultButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultButton As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultButton { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает дочерний элемент управления, принадлежащий элементу управления <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />, который вызывает обратную передачу данных, когда нажимается клавиша ENTER.</summary>
        <value>Свойство <see cref="P:System.Web.UI.Control.ID" /> элемента управления "кнопка" для отображения в виде кнопки по умолчанию при загрузке объекта <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />. Значением по умолчанию является пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> Свойство позволяет указать, что пользователи могут вызывать обратную передачу, нажав клавишу ВВОД в элементе управления вводом в форме (например, текстовое поле). Можно указать как кнопка по умолчанию любой элемент управления, производный от <xref:System.Web.UI.WebControls.IButtonControl> интерфейс за исключением <xref:System.Web.UI.WebControls.LinkButton> элемента управления. Если элемент управления, на который ссылается <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> свойство не является производным от <xref:System.Web.UI.WebControls.IButtonControl>, <xref:System.InvalidOperationException> исключения.  
  
 Если используются главные страницы и установить <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> свойство из страницы содержимого, используйте <xref:System.Web.UI.Control.UniqueID%2A> свойство <xref:System.Web.UI.WebControls.IButtonControl> кнопки. Дополнительные сведения о главных страницах см. в разделе [главных страниц ASP.NET](http://msdn.microsoft.com/library/4e53eedf-8304-4e7a-aed1-691a2623b28b).  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> Свойство может не вызывает обратную передачу в следующих сценариях:  
  
-   Нажмите клавишу ВВОД, когда фокус находится вне элементов управления вводом в форме. Запустить действие обратной передачи по умолчанию не обязательно.  
  
-   При нажатии клавиши ВВОД, когда фокус находится внутри многострочного текстового поля. Многострочное текстовое поле ожидаемое поведение при том, что нажатие клавиши ВВОД создает новую строку в текстовом поле. В некоторых браузерах при нажатии клавиши ВВОД внутри многострочного текстового поля переключается обратную передачу. В этом случае если требуется ввод, чтобы создать новую строку, вместо этого, можно присоединить функцию JavaScript для элемента управления вводом. Сценарий должен перехватывать нажатие клавиши ENTER и останавливать обратную передачу. Например, можно использовать <xref:System.Web.UI.WebControls.WebControl.Attributes%2A> коллекцию свойств для добавления клиентского скрипта для `onKeyPress` события.  
  
-   Указание <xref:System.Web.UI.WebControls.LinkButton> управления как кнопку по умолчанию. Только <xref:System.Web.UI.WebControls.Button> и <xref:System.Web.UI.WebControls.ImageButton> поддерживаются элементы управления.  
  
-   Изменение <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> программными средствами во время асинхронной обратной передачи. Асинхронные обратные передачи можно включить на странице путем добавления одного или нескольких <xref:System.Web.UI.UpdatePanel> элементов управления на страницу. Дополнительные сведения см. в разделе [Обзор элемента управления UpdatePanel](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) и [частичной отрисовке](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).  
  
   
  
## Examples  
 Следующий пример показывает, как задать <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> свойства элемента управления по умолчанию, который вызывает обратную передачу.  
  
 [!code-aspx-csharp[HtmlForm.DefaultButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.DefaultButton/CS/htmlform.defaultbuttoncs.aspx#1)]
 [!code-aspx-vb[HtmlForm.DefaultButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.DefaultButton/VB/htmlform.defaultbuttonvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Элемент управления, упоминаемый как "кнопка", не принадлежит типу <see cref="T:System.Web.UI.WebControls.IButtonControl" />.</exception>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
      </Docs>
    </Member>
    <Member MemberName="DefaultFocus">
      <MemberSignature Language="C#" Value="public string DefaultFocus { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultFocus" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultFocus As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultFocus { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает на форме элемент управления для отображения в качестве элемента управления с фокусом ввода при загрузке элемента управления <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</summary>
        <value>Свойство <see cref="P:System.Web.UI.Control.ClientID" /> элемента управления на форме, чтобы отобразить в качестве элемента управления с фокусом ввода при загрузке элемента управления <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />. Значением по умолчанию является пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> свойство для доступа к элементу управления в формы для отображения в виде элемента управления с входными данными фокус, если <xref:System.Web.UI.HtmlControls.HtmlForm> загрузить элемент управления. Элементы управления, которые могут быть выбраны отображаются с визуальным средством, указывающее на то, что они имеют фокус. Например <xref:System.Web.UI.WebControls.TextBox> элемент управления с фокусом отображается с точкой вставки, расположенной внутри объекта.  
  
 Элемент управления с фокусом можно также задать с помощью <xref:System.Web.UI.Control.Focus%2A> или <xref:System.Web.UI.Page.SetFocus%2A> методы. Эти методы имеют приоритет над <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> свойство. Если любой из этих методов вызываются задать элемент управления с фокус, значение <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> свойство игнорируется.  
  
   
  
## Examples  
 В следующем примере кода показано, как задать <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> свойство для отображения указанного элемента управления в форме, как элемент управления с фокусом ввода при загрузке формы. При `Form1` изменениями, обратите внимание, что курсор расположен в `TextBox1`, означающее, `TextBox1` — это элемент управления с фокусом.  
  
 [!code-aspx-csharp[HtmlForm.DefaultButton#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.DefaultButton/CS/htmlform.defaultbuttoncs.aspx#1)]
 [!code-aspx-vb[HtmlForm.DefaultButton#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.DefaultButton/VB/htmlform.defaultbuttonvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
        <altmember cref="P:System.Web.UI.Control.ID" />
        <altmember cref="M:System.Web.UI.Control.Focus" />
        <altmember cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="Enctype">
      <MemberSignature Language="C#" Value="public string Enctype { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Enctype" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
      <MemberSignature Language="VB.NET" Value="Public Property Enctype As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Enctype { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает тип кодировки, используемой браузером при отправке данных формы на сервер.</summary>
        <value>Строка, содержащая тип кодировки. По умолчанию свойство содержит пустую строку (""), показывающую, что в браузере используется тип содержимого по умолчанию.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> свойство для указания типа кодировки, браузер использует для отправки данных на сервер.  
  
 Ниже приведены распространенные типы кодировки.  
  
|Тип кодировки|Описание:|  
|-------------------|-----------------|  
|application/x-www-form-urlencoded|Данные формы кодируются как пары имя значение. Это стандартный формат кодировки.|  
|данные multipart/формы|Данные формы кодируются как сообщение с отдельными частями для каждого элемента управления на странице.|  
|text/plain.|Данные формы кодируются в виде обычного текста, без каких- либо символы форматирования элемента управления.|  
  
 Дополнительные сведения о типах см. в разделе [World Wide Web Consortium (W3C веб-сайт](http://go.microsoft.com/fwlink/?linkid=37125).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.HtmlControls.HtmlForm.Enctype%2A> свойство для указания типа кодировки, браузер использует для отправки данных на сервер.  
  
 [!code-aspx-csharp[HtmlForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm/CS/htmlformcs.aspx#1)]
 [!code-aspx-vb[HtmlForm#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm/VB/htmlformvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Method" />
      </Docs>
    </Member>
    <Member MemberName="Method">
      <MemberSignature Language="C#" Value="public string Method { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Method" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Method" />
      <MemberSignature Language="VB.NET" Value="Public Property Method As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Method { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, показывающее, как браузер отправляет данные формы на сервер для обработки.</summary>
        <value>Строка, показывающая, как браузер отправляет данные формы на сервер. Значение по умолчанию — <see langword="POST" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте это свойство, чтобы указать, как браузер отправляет данные формы на сервер для обработки. Две общие методы, поддерживаемые всеми браузерами, `GET` и `POST`.  
  
> [!CAUTION]
>  Можно переопределить значение по умолчанию для данного свойства и использовать `GET` вместо метода `POST`. Тем не менее поскольку `GET` запросы ограничены объемом данных они могут включать, с помощью `GET` метод может в некоторых случаях причиной возможности управления обратной передачи и состояния, предоставляемые страниц ASP.NET к сбою.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.HtmlControls.HtmlForm.Method%2A> свойство, чтобы указать, что данные формы передаются на сервер.  
  
 [!code-aspx-csharp[HtmlForm#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm/CS/htmlformcs.aspx#1)]
 [!code-aspx-vb[HtmlForm#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm/VB/htmlformvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Enctype" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает имя идентификатора для элемента управления <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</summary>
        <value>Строка, содержащая имя идентификатора для элемента управления <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> свойства, чтобы определить имя уникального идентификатора для <xref:System.Web.UI.HtmlControls.HtmlForm> элемента управления. В данном случае получение это свойство возвращает значение <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> свойства. Однако задание свойства присваивает значение свойству. Задание свойства не присвоить значение этому свойству из-за <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> свойство должно иметь то же значение, что <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> свойство.  
  
> [!NOTE]
>  `name` Атрибут не является совместимой с XHTML атрибутом и не визуализируется ASP.NET вне зависимости от `xhtmlConformance` параметр.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.UniqueID" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Создает событие <see cref="E:System.Web.UI.Control.Init" /> элемента управления <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 После получения сообщения от <xref:System.Web.UI.HtmlControls.HtmlForm.OnInit%2A> метода, элемент управления должен выполнить инициализацию, необходимые для создания и настройки экземпляра. На этом этапе жизненного цикла серверного элемента управления состояние представления элемента управления не заполняется. Кроме того другие серверные элементы управления недоступны при вызове этого метода, даже если он является потомком или родителем для данного элемента управления. Другие серверные элементы управления не обязательно будет создана и готова для доступа.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Web.UI.WebControls.GridView.OnInit%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.OnInit%2A> Метод используется преимущественно разработчиками элементов управления расширения функциональности служб <xref:System.Web.UI.HtmlControls.HtmlForm> элемента управления.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" /> метод в производном классе, необходимо вызвать метод базового класса <see cref="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие. Кроме того, вызов базового класса <see cref="M:System.Web.UI.HtmlControls.HtmlForm.OnInit(System.EventArgs)" /> метод гарантирует, что <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> управления установлена должным образом как веб-страницу формы и состояния просмотра страницы сохраняется.</para>
        </block>
        <altmember cref="M:System.Web.UI.Page.RegisterViewStateHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Создает событие <see cref="E:System.Web.UI.Control.PreRender" /> элемента управления <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.OnPreRender%2A> Метод вызывается непосредственно перед отрисовкой <xref:System.Web.UI.HtmlControls.HtmlForm> элемента управления. Если <xref:System.Web.UI.Page.SmartNavigation%2A?displayProperty=nameWithType> свойству `true`, <xref:System.Web.UI.HtmlControls.HtmlForm.OnPreRender%2A> метод регистрирует ссылку на файл скрипта смарт-навигации, чтобы она возвращает к просмотру.  
  
> [!NOTE]
>  <xref:System.Web.UI.Page.SmartNavigation%2A?displayProperty=nameWithType> Свойство рекомендуется к использованию в ASP.NET версии 2.0.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.SmartNavigation" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (output As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="output">Объект <see cref="T:System.Web.UI.HtmlTextWriter" />, получающий преобразованное содержимое.</param>
        <summary>Выполняет визуализацию элемента управления <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> в указанный объект <see cref="T:System.Web.UI.HtmlTextWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.Render%2A> Метод выводит HTML- `<iframe>` элемент Если <xref:System.Web.UI.Page.SmartNavigation%2A> свойству `true`. <xref:System.Web.UI.HtmlControls.HtmlForm.Render%2A> Метод вызывает базовый <xref:System.Web.UI.Control.Render%2A> метод.  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.Render%2A> Метод используется преимущественно разработчиками элементов управления расширения функциональности служб <xref:System.Web.UI.HtmlControls.HtmlForm> элемента управления.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Элемент управления <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> не визуализируется без ссылки на экземпляр <see cref="T:System.Web.UI.Page" />.</exception>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)" /> метод в производном классе, необходимо вызвать метод базового класса <see cref="M:System.Web.UI.HtmlControls.HtmlForm.Render(System.Web.UI.HtmlTextWriter)" /> метод, чтобы <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> дочерние элементы управления отображаются правильно.</para>
        </block>
        <altmember cref="T:System.Web.HttpException" />
        <altmember cref="P:System.Web.UI.Page.SmartNavigation" />
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Объект <see cref="T:System.Web.UI.HtmlTextWriter" />, получающий преобразованное содержимое.</param>
        <summary>Преобразует для просмотра атрибуты элемента управления <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> в указанный объект <see cref="T:System.Web.UI.HtmlTextWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes%2A> Использует метод <xref:System.Web.UI.HtmlTextWriter.IsValidFormAttribute%2A> метод для проверки <xref:System.Web.UI.HtmlControls.HtmlForm> атрибуты элемента управления, чтобы убедиться, что их отображение в открывающем теге элемента `<form>` HTML-элемента.  
  
 Кроме того <xref:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes%2A> метод отрисовывает `method`, `action`, и `onsubmit` атрибуты <xref:System.Web.UI.HtmlControls.HtmlForm> элемента управления. Если задан идентификатор элемента управления <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultButton%2A> не реализует свойство <xref:System.Web.UI.WebControls.IButtonControl> интерфейс, <xref:System.InvalidOperationException> исключения.  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes%2A> Метод используется преимущественно разработчиками элементов управления расширения функциональности служб <xref:System.Web.UI.HtmlControls.HtmlForm> элемента управления.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Идентификатор (ID) элемента управления, заданный в свойстве <see cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />, не относится к типу <see cref="T:System.Web.UI.WebControls.IButtonControl" />.</exception>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" /> метод в производном классе, необходимо вызвать метод базового класса <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderAttributes(System.Web.UI.HtmlTextWriter)" /> метод, чтобы <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> правильно отображаются атрибуты элемента управления.</para>
        </block>
        <altmember cref="M:System.Web.UI.HtmlControls.HtmlControl.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.IsValidFormAttribute(System.String)" />
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultButton" />
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
        <altmember cref="T:System.InvalidOperationException" />
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected internal override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Объект <see cref="T:System.Web.UI.HtmlTextWriter" />, получающий преобразованное содержимое.</param>
        <summary>Визуализирует дочерние элементы управления, относящиеся к элементу управления <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlForm.RenderChildren%2A> Метод отображает скрипт клиента в убедитесь, что фокус ввода браузера на элементе управления, указанном в <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> свойство.  
  
> [!NOTE]
>  Элемент управления, определяемое <xref:System.Web.UI.Page.SetFocus%2A?displayProperty=nameWithType> имеет приоритет над управления, указанный в <xref:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus%2A> свойство.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Веб-страница имеет несколько тегов <see langword="&lt;form&gt;" />, принадлежащих серверной стороне.</exception>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)" /> метод в производном классе, необходимо вызвать метод базового класса <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderChildren(System.Web.UI.HtmlTextWriter)" /> метод, чтобы <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> дочерние элементы управления отображаются правильно.</para>
        </block>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.DefaultFocus" />
        <altmember cref="M:System.Web.UI.Page.SetFocus(System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.Control.Focus" />
      </Docs>
    </Member>
    <Member MemberName="RenderControl">
      <MemberSignature Language="C#" Value="public override void RenderControl (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderControl(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlForm.RenderControl(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderControl (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderControl(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Объект <see cref="T:System.Web.UI.HtmlTextWriter" />, получающий содержимое элемента управления формы.</param>
        <summary>Выполняет визуализацию элемента управления <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> в указанный объект <see cref="T:System.Web.UI.HtmlTextWriter" />.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Web.UI.HtmlControls.HtmlForm.RenderControl(System.Web.UI.HtmlTextWriter)" /> метод в производном классе, необходимо вызвать метод базового класса <see cref="M:System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)" /> метод, чтобы <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> элемент управления отрисовывается правильно.</para>
        </block>
        <altmember cref="P:System.Web.UI.Control.DesignMode" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SubmitDisabledControls">
      <MemberSignature Language="C#" Value="public virtual bool SubmitDisabledControls { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SubmitDisabledControls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SubmitDisabledControls As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SubmitDisabledControls { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает логическое значение, показывающее, инициируется ли принудительно отправка значений элементов управления, отключенных на клиенте, которая позволяет им сохранить свои значения после передачи страницы обратно на сервер.</summary>
        <value>
          Значение <see langword="true" />, если элементы управления, отключенные на клиенте, принуждаются к отправке своих значений; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> свойство, чтобы указать, следует ли принудительно отключен на стороне клиента для отправки их значений, при обратной передаче страницы элементов управления. Это позволяет отключенные элементы управления сохранить свои значения после передачи страницы обратно на сервер. Когда <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> свойству `false`, элементы управления в форме, которые были отключены с помощью скрипта клиента не будет отправлена на сервер при очередном обратной передаче страницы. В результате любые значения, хранящиеся в отключенных элементах управления будут потеряны. Чтобы разрешить отключенные элементы управления сохранить свои значения после передачи страницы обратно на сервер, установить <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> свойства `true`.  
  
   
  
## Examples  
 В следующем примере кода показано, как задать <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> свойства в форме к `true` для элементов управления, отключена клиентского скрипта для поддержания их значения после передачи страницы обратно на сервер. В этом примере, если задать <xref:System.Web.UI.HtmlControls.HtmlForm.SubmitDisabledControls%2A> свойства `false` и нажмите кнопку **обратную** кнопка, текст в текстовом поле HTML потеряны и больше не установлен флажок «HTML».  
  
 [!code-aspx-csharp[HtmlForm.SubmitDisabledControls#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.SubmitDisabledControls/CS/htmlform.submitdisabledcontrolscs.aspx#1)]
 [!code-aspx-vb[HtmlForm.SubmitDisabledControls#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.SubmitDisabledControls/VB/htmlform.submitdisabledcontrolsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает фрейм или окно, в котором производится отрисовка информации, переданной на сервер.</summary>
        <value>Окно или фрейм браузера, в котором отображается информация, переданная на сервер. По умолчанию значение содержит пустую строку (""), которая обновляет окно или фрейм, устанавливая в них фокус.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> свойство для указания целевого окна или фрейма, который отображает результаты сведений, отправляется на сервер. Перенаправление сведений, отправленных на сервер — это сложная задача. Не рекомендуется использовать это свойство только для обратной.  
  
> [!NOTE]
>  <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> Свойство готовится к просмотру как `target` атрибута. `target` Атрибут `form` элементы не допускается в XHTML 1.1. Таким образом, если отображенной разметки должны соответствовать стандартам XHTML или должны соответствовать стандартам специальных возможностей, не устанавливайте <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> свойство. Дополнительные сведения см. в разделе [стандартам XHTML в Visual Studio и ASP.NET](http://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97) и [специальных возможностей в Visual Studio и ASP.NET](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13).  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> Значение должно начинаться с буквы в диапазоне от A до Z (без учета регистра), за исключением следующих специальных значений, который начинается с символа подчеркивания.  
  
|Целевое значение|Описание:|  
|------------------|-----------------|  
|`_blank`|Отображает содержимое в новом окне без фреймов.|  
|`_parent`|Отрисовывает содержимое в непосредственно родительском элементе набора фреймов.|  
|`_search`|Отображает содержимое в панели поиска.|  
|`_self`|Отображает содержимое во фрейме с фокусировкой.|  
|`_top`|Отображает содержимое в окне без фреймов.|  
  
> [!NOTE]
>  Чтобы выяснить, поддерживается ли значение `_search`, следует обратиться к документации браузера.  Например, Microsoft Internet Explorer 5.0 или более поздней версии поддерживает целевое значение `_search`.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.HtmlControls.HtmlForm.Target%2A> свойство, чтобы указать в новом окне без рамки для отображения сведений, переданных на сервер.  
  
 [!code-aspx-csharp[HtmlFormTarget#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlFormTarget/CS/htmlformtargetcs.aspx#1)]
 [!code-aspx-vb[HtmlFormTarget#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlFormTarget/VB/htmlformtargetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UniqueID">
      <MemberSignature Language="C#" Value="public override string UniqueID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniqueID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.HtmlControls.HtmlForm.UniqueID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property UniqueID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UniqueID { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает уникальный программный идентификатор, назначенный элементу управления <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</summary>
        <value>Уникальный программный идентификатор, назначенный элементу управления <see cref="T:System.Web.UI.HtmlControls.HtmlForm" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> свойства, чтобы получить уникальный программный идентификатор, назначенный <xref:System.Web.UI.HtmlControls.HtmlForm> элемента управления. Это свойство переопределяет базовую реализацию, чтобы вернуть постоянное значение, если элемент управления содержится в <xref:System.Web.UI.INamingContainer>-реализованный объект, отличный от страницы, например серверного элемента управления. Если контейнер именования является страницей значение <xref:System.Web.UI.HtmlControls.HtmlForm> элемента управления <xref:System.Web.UI.Control.ID%2A> возвращается свойство.  
  
 <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> Свойство и <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> свойство всегда возвращает то же значение. Это полезно, когда <xref:System.Web.UI.HtmlControls.HtmlForm> элемент управления отрисовывается в браузере, который требует <xref:System.Web.UI.HtmlControls.HtmlForm> элемента управления <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> и <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> свойства должны совпадать. Чтобы сохранить эти свойства синхронизации <xref:System.Web.UI.HtmlControls.HtmlForm.Name%2A> свойство всегда возвращает значение <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> свойства.  
  
> [!NOTE]
>  `name` Атрибут не является атрибутом, совместимых с XHTML и по умолчанию не визуализируется ASP.NET.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.HtmlControls.HtmlForm.UniqueID%2A> извлекаемого уникальный идентификатор для свойства <xref:System.Web.UI.HtmlControls.HtmlForm> элемента управления.  
  
 [!code-aspx-csharp[HtmlForm.UniqueID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HtmlForm.UniqueID/CS/htmlform.uniqueidcs.aspx#1)]
 [!code-aspx-vb[HtmlForm.UniqueID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HtmlForm.UniqueID/VB/htmlform.uniqueidvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.HtmlControls.HtmlForm.Name" />
      </Docs>
    </Member>
  </Members>
</Type>