<Type Name="HtmlInputPassword" FullName="System.Web.UI.HtmlControls.HtmlInputPassword">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ace2c6372b83f28c4046e9e30fb277fecac31a78" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36389327" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HtmlInputPassword : System.Web.UI.HtmlControls.HtmlInputText" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit HtmlInputPassword extends System.Web.UI.HtmlControls.HtmlInputText implements class System.Web.UI.IPostBackDataHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HtmlControls.HtmlInputPassword" />
  <TypeSignature Language="VB.NET" Value="Public Class HtmlInputPassword&#xA;Inherits HtmlInputText" />
  <TypeSignature Language="C++ CLI" Value="public ref class HtmlInputPassword : System::Web::UI::HtmlControls::HtmlInputText" />
  <TypeSignature Language="F#" Value="type HtmlInputPassword = class&#xA;    inherit HtmlInputText&#xA;    interface IPostBackDataHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HtmlControls.HtmlInputText</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ServerChange")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ValidationProperty("Value")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Обеспечивает программный доступ к элементу HTML <see langword="&lt;input type= password&gt;" /> на сервере.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlInputPassword> Класс является производным от <xref:System.Web.UI.HtmlControls.HtmlInputText> класса и используется для создания одной строки текстовое поле, пользователь может ввести пароль. При использовании <xref:System.Web.UI.HtmlControls.HtmlInputPassword> управления <xref:System.Web.UI.HtmlControls.HtmlInputText.Value%2A> свойство публикуется на сервере каждый раз при отправке формы. <xref:System.Web.UI.HtmlControls.HtmlInputText.Value%2A> Свойство <xref:System.Web.UI.HtmlControls.HtmlInputPassword> управления не сохраняется в состоянии представления.  
  
 <xref:System.Web.UI.HtmlControls.HtmlInputText.MaxLength%2A> Свойство определяет максимальное число символов, которые могут быть введены в текстовом поле. <xref:System.Web.UI.HtmlControls.HtmlInputText.Size%2A> Свойство позволяет задать ширину текстового поля. Используйте <xref:System.Web.UI.HtmlControls.HtmlInputText.Value%2A> свойство для определения значения, введенного в текстовом поле. <xref:System.Web.UI.HtmlControls.HtmlInputPassword> Управления предоставляет <xref:System.Web.UI.HtmlControls.HtmlInputText.ServerChange> событие, которое возникает, когда <xref:System.Web.UI.HtmlControls.HtmlInputText.Value%2A> свойство изменяет значения между отправками на сервер. Это позволяет создать обработчик событий, выполняющий настраиваемый набор инструкций при каждом возникновении события.  
  
> [!NOTE]
>  <xref:System.Web.UI.HtmlControls.HtmlInputPassword> Управления не предоставляет встроенные возможности отправлять обратно на сервер. Необходимо предоставить другой элемент управления на веб-странице, которая поддерживает отправку на сервер, например <xref:System.Web.UI.HtmlControls.HtmlButton> или <xref:System.Web.UI.HtmlControls.HtmlInputSubmit> элемента управления.  
  
 Список начальных значений свойств для экземпляра <xref:System.Web.UI.HtmlControls.HtmlInputPassword>, в разделе <xref:System.Web.UI.HtmlControls.HtmlInputPassword.%23ctor%2A> конструктор.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование `<input type=text>`, `<input type=password>`, и `<input type=submit>` HTML-элементы управления декларативно на страницу Web Forms.  
  
 [!code-aspx-csharp[System.Web.UI.HtmlControls.HtmlInput_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInput_1/CS/htmlinputcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.HtmlControls.HtmlInput_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInput_1/VB/htmlinputvb.aspx#1)]  
  
 В следующем примере кода показано, как добавить те же элементы управления HTML программным образом во время вызова `Page_Load` метод.  
  
 [!code-aspx-csharp[System.Web.UI.HtmlControls.HtmlInput_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInput_2/CS/htmlinput2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.HtmlControls.HtmlInput_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInput_2/VB/htmlinput2vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlInputText" />
    <altmember cref="T:System.Web.UI.HtmlControls.HtmlTextArea" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HtmlInputPassword ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputPassword.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HtmlInputPassword();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.HtmlControls.HtmlInputPassword" />, используя значения по умолчанию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор используется для создания и инициализации нового экземпляра <xref:System.Web.UI.HtmlControls.HtmlInputPassword> управления, используя значения по умолчанию. Он создает `password` типа элемента управления текстового поля.  
  
 В следующей таблице показаны исходное значение свойства для экземпляра <xref:System.Web.UI.HtmlControls.HtmlInputPassword>.  
  
|Свойство.|Начальное значение|  
|--------------|-------------------|  
|<xref:System.Web.UI.HtmlControls.HtmlInputControl.Type%2A>|Символьная строка «пароль».|  
  
   
  
## Examples  
 В следующем примере кода показано, как программным способом добавить <xref:System.Web.UI.HtmlControls.HtmlInputText>, <xref:System.Web.UI.HtmlControls.HtmlInputPassword>, и <xref:System.Web.UI.HtmlControls.HtmlInputSubmit> элементы управления на страницу Web Forms, с помощью конструкторы по умолчанию для создания экрана простого имени входа.  
  
 [!code-aspx-csharp[System.Web.UI.HtmlControls.HtmlInput_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInput_2/CS/htmlinput2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.HtmlControls.HtmlInput_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.HtmlControls.HtmlInput_2/VB/htmlinput2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderAttributes">
      <MemberSignature Language="C#" Value="protected override void RenderAttributes (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RenderAttributes(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HtmlControls.HtmlInputPassword.RenderAttributes(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RenderAttributes (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RenderAttributes(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderAttributes : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="htmlInputPassword.RenderAttributes writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Объект <see cref="T:System.Web.UI.HtmlTextWriter" />, получающий преобразованное содержимое.</param>
        <summary>Отображает атрибуты элемента управления <see cref="T:System.Web.UI.HtmlControls.HtmlInputPassword" /> в указанный объект <see cref="T:System.Web.UI.HtmlTextWriter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HtmlControls.HtmlInputPassword.RenderAttributes%2A> Метод удаляет `Value` атрибута из коллекции состояния представления для предотвращения готовится к просмотру, а затем вызывает базовый класс <xref:System.Web.UI.HtmlControls.HtmlInputControl.RenderAttributes%2A> метод.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>