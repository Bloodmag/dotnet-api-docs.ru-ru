<Type Name="RangeExpression" FullName="System.Web.UI.WebControls.Expressions.RangeExpression">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="304c6959db0b0c08df8343a425d16181e0c17b65" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30589678" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RangeExpression : System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RangeExpression extends System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Expressions.RangeExpression" />
  <TypeSignature Language="VB.NET" Value="Public Class RangeExpression&#xA;Inherits ParameterDataSourceExpression" />
  <TypeSignature Language="C++ CLI" Value="public ref class RangeExpression : System::Web::UI::WebControls::Expressions::ParameterDataSourceExpression" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет способ определить, является ли значение больше или меньше указанного значения, или находится ли значение между двумя заданными значениями.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.QueryExtender> Управления предоставляет возможность фильтрации данных в веб-страницы с помощью классов в <xref:System.Web.UI.WebControls.Expressions> пространства имен. Эти классы содержат <xref:System.Web.UI.WebControls.Expressions.RangeExpression> класса.  
  
 <xref:System.Web.UI.WebControls.Expressions.RangeExpression> Класс выполняет столбцом данных с помощью пары значений, которые определяют диапазон. Вы используете <xref:System.Web.UI.WebControls.Expressions.RangeExpression.DataField%2A> свойство, чтобы указать столбец для поиска. Вы используете <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType%2A> свойство, чтобы указать, следует ли включить или исключить минимальным в поиск результатов, и использовать <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A> свойство, чтобы указать, следует ли включить или исключить максимальное значение. Максимальное и минимальное значения указываются в [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] элементов управления и значений может быть передан <xref:System.Web.UI.WebControls.QueryExtender> управления в качестве параметров <xref:System.Web.UI.WebControls.ControlParameter> элементов управления. Как правило, результаты отображаются в элементе управления с привязкой к данным.  
  
   
  
## Examples  
 В следующем примере показано, как для поиска в таблице Products базы данных AdventureWorks для продуктов, Цена по прейскуранту в диапазоне, который указан в столбце ListPrice `FromTextBox` и `ToTextBox` текстовые поля. Фильтр включает минимальное значение, но исключает максимальное значение в результатах. Результаты отображаются в <xref:System.Web.UI.WebControls.Label> элемента управления.  
  
 Данный пример кода является частью большего примера, приведенного в [Пошаговое руководство: фильтрация данных в веб-страницы с помощью декларативного синтаксиса](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.InvalidOperationException">Значение свойства <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.DataField" /> — <see langword="null" />.</exception>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RangeExpression ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.RangeExpression.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RangeExpression();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.Expressions.RangeExpression" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.RangeExpression.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает поле, используемое для сравнения.</summary>
        <value>Поле, используемое для сравнения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Выражение диапазона ищет поля данных для указанного диапазона.  
  
   
  
## Examples  
 Приведенный ниже показано, как для поиска в таблице Products базы данных AdventureWorks для продуктов, Цена по прейскуранту в диапазоне, который указан в столбце по прейскуранту `FromTextBox` и `ToTextBox` текстовые поля.  
  
 Данный пример кода является частью большего примера, приведенного в [Пошаговое руководство: фильтрация данных в веб-страницы с помощью декларативного синтаксиса](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
```  
<asp:RangeExpression DataField="ListPrice"    
    MinType="Inclusive" MaxType="Exclusive">  
  <asp:ControlParameter ControlID="FromTextBox" />  
  <asp:ControlParameter ControlID="ToTextBox" />  
</asp:RangeExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetQueryable">
      <MemberSignature Language="C#" Value="public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Linq.IQueryable GetQueryable(class System.Linq.IQueryable source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Expressions.RangeExpression.GetQueryable(System.Linq.IQueryable)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetQueryable (source As IQueryable) As IQueryable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Linq::IQueryable ^ GetQueryable(System::Linq::IQueryable ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Linq.IQueryable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Linq.IQueryable" />
      </Parameters>
      <Docs>
        <param name="source">Объект, используемый для сравнения.</param>
        <summary>Получает объект <see cref="T:System.Linq.IQueryable" />, по которому было выполнено сравнение диапазонов.</summary>
        <returns>Экземпляр объекта, к которому было применено выражение <see cref="T:System.Linq.IQueryable" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод использует указанный <xref:System.Linq.IQueryable> объекта, для вычисления выражения.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Значение свойства <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.DataField" /> — <see langword="null" />.  
  
 - или -  
  
 Для свойств <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MinType" /> и <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType" /> задается значение <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" />.  
  
 - или -  
  
 Для свойств <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MinType" /> или <see cref="P:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType" /> не заданы значения <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" />, и коллекция параметров пуста.</exception>
      </Docs>
    </Member>
    <Member MemberName="MaxType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Expressions.RangeType MaxType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Expressions.RangeType MaxType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxType As RangeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Expressions::RangeType MaxType { System::Web::UI::WebControls::Expressions::RangeType get(); void set(System::Web::UI::WebControls::Expressions::RangeType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Expressions.RangeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает максимальное значение диапазона.</summary>
        <value>Тип сравнения, используемый с максимальным значением. Значение по умолчанию — <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" />, указывающее, что максимальное сравнение не выполнено.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Допустимые значения для этого свойства — <xref:System.Web.UI.WebControls.Expressions.RangeType.Inclusive>, <xref:System.Web.UI.WebControls.Expressions.RangeType.Exclusive>, и <xref:System.Web.UI.WebControls.Expressions.RangeType.None>.  
  
 Когда <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A> равно <xref:System.Web.UI.WebControls.Expressions.RangeType.Inclusive>, максимальное значение диапазона, включается в результаты поиска. Это эквивалентно выполнению > = операция. Если значение свойства <xref:System.Web.UI.WebControls.Expressions.RangeType.Exclusive> поле, оно эквивалентно > или < операция. Если значение свойства <xref:System.Web.UI.WebControls.Expressions.RangeType.None>, отсутствие ограничений на диапазоне.  
  
   
  
## Examples  
 Следующий пример показывает, как включить минимальное значение, которое указано в диапазоне и как исключить максимальное значение. Минимальное и максимальное значения вводятся в текстовых полях. Данный пример кода является частью большего примера, приведенного в [Пошаговое руководство: фильтрация данных в веб-страницы с помощью декларативного синтаксиса](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
```  
<asp:RangeExpression DataField="ListPrice"    
    MinType="Inclusive" MaxType="Exclusive">  
  <asp:ControlParameter ControlID="FromTextBox" />  
  <asp:ControlParameter ControlID="ToTextBox" />  
</asp:RangeExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Expressions.RangeType MinType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Expressions.RangeType MinType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Expressions.RangeExpression.MinType" />
      <MemberSignature Language="VB.NET" Value="Public Property MinType As RangeType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Expressions::RangeType MinType { System::Web::UI::WebControls::Expressions::RangeType get(); void set(System::Web::UI::WebControls::Expressions::RangeType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Expressions.RangeType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает минимальное значение диапазона.</summary>
        <value>Тип сравнения, используемый с минимальным значением. Значение по умолчанию — <see cref="F:System.Web.UI.WebControls.Expressions.RangeType.None" />, указывающее, что минимальное сравнение не выполнено.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Допустимые значения для этого свойства — <xref:System.Web.UI.WebControls.Expressions.RangeType.Inclusive>, <xref:System.Web.UI.WebControls.Expressions.RangeType.Exclusive>, и <xref:System.Web.UI.WebControls.Expressions.RangeType.None>.  
  
 Когда <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType%2A> или <xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A> свойству <xref:System.Web.UI.WebControls.Expressions.RangeType.Inclusive>, минимальное и максимальное значение диапазона, включается в результаты поиска. Это эквивалентно выполнению > = или \<= операция. <xref:System.Web.UI.WebControls.Expressions.RangeType.Exclusive> Эквивалентно > или < операция и <xref:System.Web.UI.WebControls.Expressions.RangeType.None> налагает ограничения на диапазоне.  
  
   
  
## Examples  
 Следующий пример показывает, как включить минимальное значение, которое указано в диапазоне и как исключить максимальное значение. Минимальное и максимальное значения вводятся в текстовых полях. Данный пример кода является частью большего примера, приведенного в [Пошаговое руководство: фильтрация данных в веб-страницы с помощью декларативного синтаксиса](http://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f).  
  
```  
<asp:RangeExpression DataField="ListPrice"    
    MinType="Inclusive" MaxType="Exclusive">  
  <asp:ControlParameter ControlID="FromTextBox" />  
  <asp:ControlParameter ControlID="ToTextBox" />  
</asp:RangeExpression>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>