<Type Name="CatalogPartCollection" FullName="System.Web.UI.WebControls.WebParts.CatalogPartCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3f9af9e5c3c599dc7361a00f5a361c951105bbaa" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36386194" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class CatalogPartCollection : System.Collections.ReadOnlyCollectionBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit CatalogPartCollection extends System.Collections.ReadOnlyCollectionBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class CatalogPartCollection&#xA;Inherits ReadOnlyCollectionBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CatalogPartCollection sealed : System::Collections::ReadOnlyCollectionBase" />
  <TypeSignature Language="F#" Value="type CatalogPartCollection = class&#xA;    inherit ReadOnlyCollectionBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.ReadOnlyCollectionBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Содержит коллекцию элементов управления <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />, предоставляющих каталоги серверных веб-элементов управления, которые пользователь может добавить на веб-страницу. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> Класс является коллекцией только для чтения из <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементы управления, обычно используемые <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> зоны, чтобы отслеживать набор <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементов управления, содержащихся в зоне.  
  
 Когда веб-странице переходит в режим каталога, зона создает новую <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> объект, состоящий из <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементов управления. Каждый <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элемент управления в коллекции может содержать ссылки на ноль или более веб-сервера управления, которые отображаются в форме каталога доступных серверных элементов управления.  
  
 Можно создать <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> коллекцию элементов управления для использования собственных программном коде, если, например, необходимо выполнить некоторую операцию массового набора <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементов управления. Несмотря на то что <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> объект доступен только для чтения, можно внести программные изменения в базовых элементов управления, ссылка в коллекции.  
  
   
  
## Examples  
 В следующем примере кода показано несколько способов применения <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> класса. Состоит из четырех частей, в этом примере кода:  
  
-   Пользовательский элемент управления, позволяющий изменять режимы отображения на веб-странице.  
  
-   Класс для пользовательского <xref:System.Web.UI.WebControls.WebParts.WebPart> управления с именем `TextDisplayWebPart`, который ссылается на веб-странице и содержится в одном из <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементов управления.  
  
-   Веб-страницы, на который ссылается на `TextDisplayWebPart` управления, содержащий <xref:System.Web.UI.WebControls.WebParts.CatalogZone> управления с помощью двух <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементов из элемента управления веб-частей, задайте объявленный в зоне, а также содержит код, управляемые событиями, для создания и управления <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> объекта.  
  
-   Описание принципов работы в примере кода при его загрузке в браузере.  
  
 Первая часть примера кода — пользовательский элемент управления. Исходный код для пользовательского элемента управления взят из другого раздела. Для работы этого примера кода, вам необходимо получить ASCX-файл пользовательского элемента управления с [Пошаговое руководство: изменение режимов отображения веб-частей страницы](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0) раздела и поместите файл в той же папке на ASPX-страницу в этом примере кода.  
  
 Вторая часть примера кода — `TextDisplayWebPart` элемента управления. Для выполнения примера кода необходимо скомпилировать этот исходный код. Можно выполнить явную компиляцию и поместить результирующую сборку в папку Bin веб-сайта или в глобальном кэше сборок. Кроме того можно поместить исходный код в папку App_Code веб-узла, где он будет динамически компилироваться во время выполнения. Пошаговое обоих методов компиляции см. в разделе [Пошаговое руководство: разработка и с помощью элемента управления пользовательского](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08). Обратите внимание, что элемент управления имеет свойство с именем `ContentText`; это свойство содержит значение, которое пользователь вводит в текстовом поле.  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/textdisplaywebpart.cs#3)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/textdisplaywebpart.vb#3)]  
  
 Третья часть примера кода — веб-страница. Обратите внимание, что `<asp:catalogzone>` элемент страницы содержит объявление двух <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементов управления. Эти элементы управления становятся частью пользовательской <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> объект, который создается при `Button1_Click` выполнения метода. <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> Содержит элемент управления веб-сервера управления, которые были ранее закрыты пользователем во время выполнения. Элементы управления в <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> обратно на страницу можно добавить элемент управления. <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> Содержит объявление пользовательский элемент управления `TextDisplayWebPart` управления. Если страница находится в режиме каталога, пользователь может добавлять `TextDisplayWebPart` на страницу элемент управления, чтобы его можно использовать в обычном режиме.  
  
 [!code-aspx-csharp[WebParts_CatalogPartCollection_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#1)]
 [!code-aspx-vb[WebParts_CatalogPartCollection_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#1)]  
  
 При загрузке страницы в браузере, ее можно переключить в режим каталога, выбрав **каталога** в **режим отображения** раскрывающемся списке элемента управления. Можно добавить пользовательские <xref:System.Web.UI.WebControls.WebParts.WebPart> , установив флажок рядом с ней и нажав кнопку на страницу элемент управления **добавить**. Нажмите кнопку **закрыть** для возврата страницы в режим просмотра. В элементе управления вы только что добавили, если щелкнуть меню команд (стрелка вниз, отображается в заголовке окна) и нажмите кнопку **закрыть**, удаляется со страницы и добавляется в элемент управления <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> управления. Вернитесь в режим каталога и нажмите кнопку **каталог страницы** ссылку, чтобы просмотреть содержимое <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> элемента управления. Обратите внимание, сейчас закрытия элемента управления появится там. Щелкнув **свойства отображения CatalogPart** кнопку обращается к <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> и отображает свойства определенные свойства, содержащегося <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементов управления.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> Области, содержащей <xref:System.Web.UI.WebControls.WebParts.CatalogPart> управления обычно находится элемент управления, который создает <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> объекта с использованием <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts%2A> метод. Однако можно также создать свои собственные <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> объектов для других целей программный.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogPartCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogPartCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый пустой экземпляр класса <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> Конструктор инициализирует пустой экземпляр <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> класса. Эта перегрузка конструктора используется внутренними механизмами <xref:System.Web.UI.WebControls.WebParts.CatalogZone> класса в его <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> метод для создания пустой объект коллекции. Зоны, затем создает экземпляры всех <xref:System.Web.UI.WebControls.WebParts.CatalogPart> объявлены в шаблоне зоны дочерних элементов управления и использует внутренний метод коллекции для добавления их.  
  
 Не используйте эту перегрузку <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> конструктор, чтобы создать новый экземпляр <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> и добавьте <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементов управления к нему. Необходимо использовать один из других перегрузок для <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> конструктор вместо него.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogPartCollection (System.Collections.ICollection catalogParts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.ICollection catalogParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (catalogParts As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogPartCollection(System::Collections::ICollection ^ catalogParts);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebParts.CatalogPartCollection : System.Collections.ICollection -&gt; System.Web.UI.WebControls.WebParts.CatalogPartCollection" Usage="new System.Web.UI.WebControls.WebParts.CatalogPartCollection catalogParts" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="catalogParts" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="catalogParts">
          <see cref="T:System.Collections.ICollection" />, состоящая из элементов управления <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />. </param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />, передавая в него коллекцию <see cref="T:System.Collections.ICollection" /> элементов управления <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> Конструктор инициализирует новый экземпляр класса <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> класс и передает в коллекции <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементов управления. Это одна перегрузка <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> конструктор, который можно использовать для создания нового <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> и добавьте <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементов управления к нему.  
  
 Несмотря на то что <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> экземпляра, созданный конструктором доступно только для чтения, можно получить доступ лица <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементы управления в коллекции программными средствами и вызывать их свойства и методы.  
  
 Одним из типичных сценариев использования этого конструктора бы, если вы хотите выполнить пакетной операции для всего набора <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементов управления, таких как изменение содержимого, внешнего вида или положение группу связанных элементов.  
  
   
  
## Examples  
 В следующем примере кода показано, как можно создать пользовательский <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection>и выполнять пакетную операцию для изменения отдельных <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементы управления в коллекции, даже если она доступна только для чтения. Полный код, необходимый для запуска этого примера, см в разделе примеров <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> класс обзорной статье.  
  
 Код в `Button1_Click` метод создает <xref:System.Collections.ArrayList> , добавляет два <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементы управления на странице на объект, а затем создает новый <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> с помощью <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.%23ctor%2A> конструктор. Здесь также показано, как сделать пакет изменений в базовом <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементов управления, даже если сама коллекция только для чтения. Код выполняет цикл по коллекции, обновление <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A> свойство каждого элемента управления.  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#2)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#2)]  
  
 При загрузке страницы в браузере, ее можно переключить в режим каталога, выбрав **каталога** в **режим отображения** раскрывающемся списке элемента управления. Щелкнув **свойства отображения CatalogPart** кнопку обращается к <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> и отображает свойства определенные свойства, содержащегося <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементов управления. Кроме того Если наведите указатель мыши на текст заголовка в пределах границы <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> элемента управления, вы увидите новый текст описания, который был добавлен в элемент управления при нажатии кнопки (описание появляется в подсказке). Если щелкнуть **каталог страницы** ссылку, чтобы отобразить <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> элемента управления, вы найдете он также имеет Обновленное описание.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogPartCollection (System.Web.UI.WebControls.WebParts.CatalogPartCollection existingCatalogParts, System.Collections.ICollection catalogParts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.WebParts.CatalogPartCollection existingCatalogParts, class System.Collections.ICollection catalogParts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.#ctor(System.Web.UI.WebControls.WebParts.CatalogPartCollection,System.Collections.ICollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (existingCatalogParts As CatalogPartCollection, catalogParts As ICollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogPartCollection(System::Web::UI::WebControls::WebParts::CatalogPartCollection ^ existingCatalogParts, System::Collections::ICollection ^ catalogParts);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebParts.CatalogPartCollection : System.Web.UI.WebControls.WebParts.CatalogPartCollection * System.Collections.ICollection -&gt; System.Web.UI.WebControls.WebParts.CatalogPartCollection" Usage="new System.Web.UI.WebControls.WebParts.CatalogPartCollection (existingCatalogParts, catalogParts)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="existingCatalogParts" Type="System.Web.UI.WebControls.WebParts.CatalogPartCollection" />
        <Parameter Name="catalogParts" Type="System.Collections.ICollection" />
      </Parameters>
      <Docs>
        <param name="existingCatalogParts">Коллекция <see cref="T:System.Collections.ICollection" /> элементов управления <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />, существующих в зоне.</param>
        <param name="catalogParts">Коллекция <see cref="T:System.Collections.ICollection" /> дополнительных элементов управления <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />. </param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />, передавая коллекцию <see cref="T:System.Collections.ICollection" /> элементов управления <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />, существующих в зоне, и дополнительную коллекцию элементов управления.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.UI.WebControls.WebParts.CatalogPart catalogPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.UI.WebControls.WebParts.CatalogPart catalogPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains(System.Web.UI.WebControls.WebParts.CatalogPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Web::UI::WebControls::WebParts::CatalogPart ^ catalogPart);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Web.UI.WebControls.WebParts.CatalogPart -&gt; bool" Usage="catalogPartCollection.Contains catalogPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalogPart" Type="System.Web.UI.WebControls.WebParts.CatalogPart" />
      </Parameters>
      <Docs>
        <param name="catalogPart">Объект <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />, наличие которого проверяется в коллекции.</param>
        <summary>Возвращает значение, показывающее, существует ли конкретный элемент управления в коллекции.</summary>
        <returns>Логическое значение, указывающее на наличие или отсутствие конкретного элемента управления в коллекции.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains%2A> Метод позволяет определить, является ли определенный <xref:System.Web.UI.WebControls.WebParts.CatalogPart> объект является частью <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> объекта.  
  
   
  
## Examples  
 В следующем примере кода показано, как определить ли конкретный <xref:System.Web.UI.WebControls.WebParts.CatalogPart> управления входит в состав <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> объекта. Полный код, необходимый для запуска этого примера, см в разделе примеров <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> класс обзорной статье.  
  
 Код в `Button1_Click` метод создает новый <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> объект с именем `myParts`. Метод использует <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains%2A> метод, чтобы определить, является ли `PageCatalogPart1` управления существует и если да, возвращает элемент управления и изменяет значение свойства.  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#2)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#2)]  
  
 При загрузке страницы в браузере, ее можно переключить в режим каталога, выбрав **каталога** в **режим отображения** раскрывающемся списке элемента управления. Добавить пользовательский <xref:System.Web.UI.WebControls.WebParts.WebPart> , установив флажок рядом с ней и нажав кнопку на страницу элемент управления **добавить**. Нажмите кнопку **закрыть** для возврата страницы в режим просмотра. В элементе управления вы только что добавили, если щелкнуть меню команд (стрелка вниз, отображается в заголовке окна) и нажмите кнопку **закрыть**, удаляется со страницы и добавляется в элемент управления <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> управления. Вернитесь в режим каталога и нажмите кнопку **каталог страницы** ссылку, чтобы просмотреть содержимое <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> элемента управления. Обратите внимание, что закрытый элемент управления добавлен к нему. Щелкнув **свойства отображения CatalogPart** кнопку обращается к <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> и отображает свойства определенные свойства, содержащегося <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементов управления. Установите флажок рядом с сервером управления, содержащегося в <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> управлять, щелкните **добавить** добавьте его обратно на страницу, и нажмите кнопку **закрыть** для возврата страницы в режим просмотра. Щелкните меню команд еще раз для элемента управления и обратите внимание, что теперь в нем отсутствует команда закрытия. Оно было удалено с помощью кода в `Button1_Click` метод, когда оно используется <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Contains%2A> метод для проверки наличия `PageCatalogPart1`и задайте его <xref:System.Web.UI.WebControls.WebParts.WebPart.AllowClose%2A> свойства `false`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IList.Contains(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.UI.WebControls.WebParts.CatalogPart[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.UI.WebControls.WebParts.CatalogPart[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo(System.Web.UI.WebControls.WebParts.CatalogPart[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As CatalogPart(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Web::UI::WebControls::WebParts::CatalogPart ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Web.UI.WebControls.WebParts.CatalogPart[] * int -&gt; unit" Usage="catalogPartCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Web.UI.WebControls.WebParts.CatalogPart[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Массив объектов <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />, в котором должна содержаться копируемая коллекция.</param>
        <param name="index">Позиция в массиве, начиная с которой в нем будет размещаться содержимое коллекции.</param>
        <summary>Копирует коллекцию в массив объектов <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.CopyTo%2A> Метод полезен, когда требуется собрать пользовательских массив, который может содержать <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементы управления в <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> объекта или подмножество этих элементов управления.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Empty">
      <MemberSignature Language="C#" Value="public static readonly System.Web.UI.WebControls.WebParts.CatalogPartCollection Empty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Web.UI.WebControls.WebParts.CatalogPartCollection Empty" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Empty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Empty As CatalogPartCollection " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Web::UI::WebControls::WebParts::CatalogPartCollection ^ Empty;" />
      <MemberSignature Language="F#" Value=" staticval mutable Empty : System.Web.UI.WebControls.WebParts.CatalogPartCollection" Usage="System.Web.UI.WebControls.WebParts.CatalogPartCollection.Empty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPartCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Ссылается на статический, пустой и доступный только для чтения экземпляр коллекции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Статичный, доступный только для чтения, пустой экземпляр <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> позволяет сократить использование памяти в случаях, когда требуется экземпляр пустой коллекции для возврата из метода правильный тип объекта или сравнить экземпляр с другим объектом, но необходимо добавить членов в экземпляр.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.UI.WebControls.WebParts.CatalogPart catalogPart);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.UI.WebControls.WebParts.CatalogPart catalogPart) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf(System.Web.UI.WebControls.WebParts.CatalogPart)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Web::UI::WebControls::WebParts::CatalogPart ^ catalogPart);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Web.UI.WebControls.WebParts.CatalogPart -&gt; int" Usage="catalogPartCollection.IndexOf catalogPart" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="catalogPart" Type="System.Web.UI.WebControls.WebParts.CatalogPart" />
      </Parameters>
      <Docs>
        <param name="catalogPart">Объект <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />, являющийся членом коллекции.</param>
        <summary>Возвращает позицию конкретного элемента коллекции.</summary>
        <returns>Объект <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />, являющийся элементом коллекции <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf%2A> Метод полезен, если имеется несколько <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементов управления на веб-странице и требуется найти конкретного элемента управления в коллекции.  
  
   
  
## Examples  
 В следующем примере кода показано, как определить положение элемента в <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> коллекции с помощью его <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf%2A> свойство. Полный код, необходимый для запуска этого примера, см в разделе примеров <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> класс обзорной статье.  
  
 Код в `Button1_Click` метод создает новый <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> объект с именем `myParts`. Этот метод использует <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf%2A> свойство для получения позиции <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> управления, а затем изменяет значение свойства элемента управления.  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#2)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#2)]  
  
 После загрузки страницы в браузере, ее можно переключить в режим каталога, выбрав **каталога** в **режим отображения** раскрывающемся списке элемента управления. Щелкнув **свойства отображения CatalogPart** кнопку обращается к <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> и отображает свойства определенные свойства, содержащегося <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементов управления. Нажмите кнопку **каталог страницы** ссылку, чтобы отобразить содержимое <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> элемента управления. Обратите внимание, что он имеет только заголовок и без границы, так как его <xref:System.Web.UI.WebControls.WebParts.WebPart.ChromeType%2A> значение свойства было изменено на <xref:System.Web.UI.WebControls.WebParts.PartChromeType.TitleOnly> в код, который используется <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.IndexOf%2A> свойства элемента управления.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Collections.IList.IndexOf(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает определенный элемент коллекции по его позиции или по уникальному идентификатору.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.CatalogPart this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.CatalogPart Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As CatalogPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::CatalogPart ^ default[int] { System::Web::UI::WebControls::WebParts::CatalogPart ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.UI.WebControls.WebParts.CatalogPart" Usage="System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Индекс некоторой точки <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> в коллекции.</param>
        <summary>Получает или задает элемент коллекции по его позиции в коллекции.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />, которое содержится в коллекции по указанному индексу.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> Индексатор позволяет обращаться к базовой <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементы управления в <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> объекта по индексу и измените их значения свойства или вызвать методы.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется способ доступа к члену <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> объекта с помощью индексов. Полный код, необходимый для запуска этого примера, см в разделе примеров <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> класс обзорной статье.  
  
 Код в `Button1_Click` метод создает новый <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> объект с именем `myParts`. Обратите внимание, что метод использует <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> индексатор для извлечения информации из первого элемента в коллекции.  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#2)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#2)]  
  
 При загрузке страницы в браузере, ее можно переключить в режим каталога, выбрав **каталога** в **режим отображения** раскрывающемся списке элемента управления. Щелкнув **свойства отображения CatalogPart** кнопку обращается к <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> и отображает свойства определенные свойства, содержащегося <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементов управления. Число доступных серверных элементов управления в пределах <xref:System.Web.UI.WebControls.WebParts.PageCatalogPart> управления осуществляется при помощи <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> индексатора в `Button1_Click` метод.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WebParts.CatalogPart this[string id] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WebParts.CatalogPart Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(id As String) As CatalogPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WebParts::CatalogPart ^ default[System::String ^] { System::Web::UI::WebControls::WebParts::CatalogPart ^ get(System::String ^ id); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Web.UI.WebControls.WebParts.CatalogPart" Usage="System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">Уникальный идентификатор для заданного объекта <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> в коллекции.</param>
        <summary>Возвращает элемент коллекции по уникальному строковому идентификатору.</summary>
        <value>Первое <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> в коллекции, у которого идентификатор равен значению <paramref name="id" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> Индексатор позволяет обращаться к базовой <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементы управления в <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> объекта с помощью идентификатора строки. Несмотря на то что <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> объект доступен только для чтения, можно изменить значения свойств или вызывать методы в базовых элементов управления, использованным индексатора.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется способ доступа к члену <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> с помощью его строковым значением идентификатора. Полный код, необходимый для запуска этого примера, см в разделе примеров <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> класс обзорной статье.  
  
 Код в `Button1_Click` метод создает новый <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> объект с именем `myParts`. Этот метод использует <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> индексатор для получения сведений о <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> управления, который является второй элемент коллекции.  
  
 [!code-csharp[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/CS/catalogpartcollectioncs.aspx#2)]
 [!code-vb[WebParts_CatalogPartCollection_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogPartCollection_Overview/VB/catalogpartcollectionvb.aspx#2)]  
  
 При загрузке страницы в браузере, ее можно переключить в режим каталога, выбрав **каталога** в **режим отображения** раскрывающемся списке элемента управления. Щелкнув **свойства отображения CatalogPart** кнопку обращается к <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection> и отображает свойства определенные свойства, содержащегося <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементов управления. Число доступных серверных элементов управления в пределах <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart> управления осуществляется при помощи <xref:System.Web.UI.WebControls.WebParts.CatalogPartCollection.Item%2A> индексатора в `Button1_Click` метод.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>