<Type Name="CatalogZone" FullName="System.Web.UI.WebControls.WebParts.CatalogZone">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="37e85f2a562ac9e4c866a8070ae59f8dd1633f5d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36585578" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CatalogZone : System.Web.UI.WebControls.WebParts.CatalogZoneBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CatalogZone extends System.Web.UI.WebControls.WebParts.CatalogZoneBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.CatalogZone" />
  <TypeSignature Language="VB.NET" Value="Public Class CatalogZone&#xA;Inherits CatalogZoneBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class CatalogZone : System::Web::UI::WebControls::WebParts::CatalogZoneBase" />
  <TypeSignature Language="F#" Value="type CatalogZone = class&#xA;    inherit CatalogZoneBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.CatalogZoneBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WebParts.CatalogZoneDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Служит основным элементом управления в наборе элементов управления веб-частей для размещения элементов управления <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> на веб-странице.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В наборе элементов управления веб-частей зоны — это область веб-страницы, содержащей элементы управления веб-частей. Созданный элемент управления зоны, который является типом зоны веб-частей из <xref:System.Web.UI.WebControls.CompositeControl> должен содержать другие элементы управления. Основные функции зоны, для размещения элементов управления, содержащихся в нем и для предоставления единый пользовательский интерфейс (UI) для этих элементов управления. Общие сведения о зонах, и как они используются в приложениях веб-частей см. в базе <xref:System.Web.UI.WebControls.WebParts.WebZone> класса, и [Обзор Web части элемента управления задайте](http://msdn.microsoft.com/library/ff0149e4-695a-401a-8cda-53df6d7d2668).  
  
 Это ключевой компонент управления веб-частей — они конечные пользователи могут изменять (или персонализировать) веб-страницы в соответствии с их предпочтениями и сохранять их персональные параметры для будущих сеансов браузера. Один из аспектов изменения страниц веб-частей включает возможность добавления <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления или других серверные элементы управления веб-странице. <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Элемент управления предоставляет список или каталога элементов управления, которые пользователи могут добавлять на страницу.  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Элемент управления является одним из фундаментальных элементов управления в наборе элементов управления веб-частей. Он является производным от <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> класса и большая часть его поведение наследуется от этого класса. <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Класс фактически добавляет к базовому классу шаблон зоны представляет собой реализацию из <xref:System.Web.UI.ITemplate> интерфейса. Шаблон зоны позволяет разработчикам добавлять декларативно <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементов управления в зону в постоянном формате страницы.  
  
> [!IMPORTANT]
>  Объект <xref:System.Web.UI.WebControls.WebParts.CatalogZone> зона может содержать только <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементов управления и наоборот, <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементы управления могут находиться только в зонах, которые являются производными от <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> класса, такие как <xref:System.Web.UI.WebControls.WebParts.CatalogZone>.  
  
 Объект <xref:System.Web.UI.WebControls.WebParts.CatalogZone> элемент управления становится видимым, только когда пользователь переходит на веб-страницу в режим отображения каталога (<xref:System.Web.UI.WebControls.WebParts.WebPartManager.CatalogDisplayMode>). Каталог может содержать несколько типов <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементов управления. Каждый <xref:System.Web.UI.WebControls.WebParts.CatalogPart> управления — это тип контейнера, содержащего серверных элементов управления, которые пользователи могут добавлять на страницу. <xref:System.Web.UI.WebControls.WebParts.CatalogPart> Элементов управления, зависят от откуда поступают серверные элементы управления, которые они содержат. В следующей таблице перечислены <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементов управления, предоставляемых в наборе элементов управления веб-частей, для каждого элемента управления, какой тип сервера он контролируется содержит.  
  
|Элемент управления|Описание:|  
|-------------|-----------------|  
|<xref:System.Web.UI.WebControls.WebParts.PageCatalogPart>|Содержит ссылки на элементы управления, которые были закрыты на странице. Эти элементы управления могут повторно открыть (вернуть на страницу) пользователей.|  
|<xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart>|Содержит ссылки на элементы управления, которые объявлены в каталог веб-частей в разметке веб-страницы. Эти элементы управления можно добавить на веб-страницу пользователями.|  
|<xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>|Предоставляет пользовательский Интерфейс для пользователя по передаче файла определения (XML-файла с. Расширение веб-части и указанный формат, который содержит сведения о состоянии) для элемента управления в каталог, чтобы элемент управления можно добавить на веб-страницу.|  
  
 Поскольку <xref:System.Web.UI.WebControls.WebParts.CatalogZone> класс добавляет шаблон зоны поведение базового класса, он имеет несколько членов. <xref:System.Web.UI.WebControls.WebParts.CatalogZone.%23ctor%2A> Конструктор является конструктором по умолчанию; с его помощью можно инициализировать новый экземпляр <xref:System.Web.UI.WebControls.WebParts.CatalogZone> класса. <xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A> Свойство Возвращает или задает ссылку на <xref:System.Web.UI.ITemplate> объект, который содержит элементы управления для зоны. <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> Метод является критическим. Он переопределяет базовый метод, чтобы создать коллекцию всех <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементов управления, содержащихся в шаблоне зоны.  
  
> [!NOTE]
>  Кнопки в <xref:System.Web.UI.WebControls.WebParts.CatalogZone> пользовательского интерфейса требуются скриптов на стороне клиента для правильной работы. Если сценарии отключены в браузере, пользователь не сможет выполнять действия через <xref:System.Web.UI.WebControls.WebParts.CatalogZone> пользовательского интерфейса.  
  
## <a name="accessibility"></a>Специальные возможности  
 Разметка, по умолчанию для этого элемента управления может не соответствовать стандартам специальных возможностей, таким как веб-содержимого 1.0 (WCAG) с приоритетом 1. Дополнительные сведения о поддержке специальных возможностей для этого элемента управления см. в разделе [элементов управления ASP.NET и специальные возможности](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
   
  
## Examples  
 В следующем примере кода показано использование декларативного и программного <xref:System.Web.UI.WebControls.WebParts.CatalogZone> элемента управления. В примере кода состоит из четырех частей:  
  
-   Пользовательский элемент управления, позволяющий изменять режимы отображения на веб-странице.  
  
-   Файл с исходным кодом для пользовательской <xref:System.Web.UI.WebControls.WebParts.CatalogZone> управления, а пользовательский <xref:System.Web.UI.WebControls.WebParts.WebPart> элемент управления, который импортируется в каталоге и добавлен к веб-странице.  
  
-   Веб-страницы, объявляющий этот пользовательский элемент управления и пользовательский <xref:System.Web.UI.WebControls.WebParts.CatalogZone> элемента управления.  
  
-   Пояснения по запуску этого примера.  
  
 Первая часть данный пример кода является пользовательский элемент управления, позволяющий пользователям изменять режимы отображения на веб-странице. Сведения о режимах отображения и описание исходного кода в этом элементе управления, см. в разделе [Пошаговое руководство: изменение режима отображения страницы](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_CatalogZone_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/displaymodemenucs.ascx#7)]
 [!code-aspx-vb[WebParts_CatalogZone_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/displaymodemenuvb.ascx#7)]  
  
 Во второй части примера кода содержит код для пользовательского <xref:System.Web.UI.WebControls.WebParts.CatalogZone> и <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления. Код для <xref:System.Web.UI.WebControls.WebParts.CatalogZone> управления показано, как наследовать от <xref:System.Web.UI.WebControls.WebParts.CatalogZone> и настройте его свойства, установив некоторые по умолчанию значения свойств в конструкторе. Исходного кода также показано, как создать настраиваемый <xref:System.Web.UI.WebControls.WebParts.WebPart> класс с именем `TextDisplayWebPart`. Это элемент управления, связанный с. Файл описания веб-части, который будет импортирован в рамках этого примера кода. После импорта файла описания с помощью <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> управления на веб-странице, можно будет добавить `TextDisplayWebPart` страницу, полностью предварительно настроен как указано в файле описания элемента управления.  
  
 Для выполнения примера кода необходимо скомпилировать этот исходный код. Можно выполнить явную компиляцию и поместить результирующую сборку в папку Bin веб-сайта или в глобальном кэше сборок. Кроме того можно поместить исходный код в папку App_Code веб-узла, где он будет динамически компилироваться во время выполнения. Данный пример кода использует динамической компиляции, поэтому если вы хотите запустить пример таким образом, имя файла исходного кода и добавить его в подпапку App_Code корневой каталог веб-приложения. Пошаговое обоих методов компиляции см. в разделе [Пошаговое руководство: разработка и с помощью элемента управления пользовательского](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_CatalogZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/catalogSamples.cs#1)]
 [!code-vb[WebParts_CatalogZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/catalogSamples.vb#1)]  
  
 Третья часть кода примера является веб-страницы, которая содержит элементы управления. Он содержит `Register` директив для пользовательского элемента управления, а другой для исходного файла с пользовательскими элементами управления. Обратите внимание, что во второй директиве не указывается имя сборки, так как пример не использует сборку, с которой исходный код помещается во вложенную папку App_Code используется динамическая компиляция. Объявляет веб-странице <xref:System.Web.UI.WebControls.WebParts.WebPartZone> управления и в его дочерних `<zonetemplate>` элемент, он объявляет <xref:System.Web.UI.WebControls.BulletedList> элемента управления. Это стандартный элемент управления, она будет доступна полная функциональность веб-частей во время выполнения, так как <xref:System.Web.UI.WebControls.WebParts.WebPartManager> управления помещен любой серверный элемент управления в качестве оболочки для <xref:System.Web.UI.WebControls.WebParts.WebPartZone> с <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> объекта, чтобы другие серверные элементы управления могут участвовать в веб- Части приложения. Также объявляется в этой зоне является пользовательский <xref:System.Web.UI.WebControls.WebParts.WebPart> управления с именем `TextDisplayWebPart`. Обратите внимание, что этот элемент управления имеет атрибут `ExportMode="All"` объявлен. Это позволяет экспортировать. Файл описания веб-части, который содержит значения свойств элемента управления, который может быть импортирован другими пользователями, чтобы добавить предварительно настроенный элемент управления на другие веб-страницы.  
  
> [!NOTE]
>  Чтобы пользователи приложения веб-частей, чтобы экспортировать файл описания для <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления, необходимо также включить функцию экспорта веб-приложения путем добавления `enableExport="true"` атрибут `<webParts>` элемент (который является потомком `<system.web>`элемент) в файле Web.config. Экспорт отключен по умолчанию, поэтому если вы еще не активировано для приложения, измените файл Web.config и сделайте это сейчас.  
  
 Веб-страница также объявляет пользовательское <xref:System.Web.UI.WebControls.WebParts.CatalogZone> управления и в нем, `<zonetemplate>` элемент, содержащий <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемента управления. Пользователь будет использовать для импорта этого элемента управления во время выполнения. Файл описания веб-части для пользовательского <xref:System.Web.UI.WebControls.WebParts.WebPart> элемента управления.  
  
 [!code-aspx-csharp[WebParts_CatalogZone_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/catalogzonecs.aspx#2)]
 [!code-aspx-vb[WebParts_CatalogZone_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/catalogzonevb.aspx#2)]  
  
 Теперь можно запустите в примере кода. Загрузите веб-страницу в браузере. Первый шаг заключается в экспорте. Файл описания веб-части для `TextDisplayWebPart` элемента управления. Щелкните меню команд для пользовательского элемента управления (представленным стрелку вниз в заголовке окна) и нажмите кнопку **Экспорт**. Следуйте инструкциям, чтобы сохранить файл описания для элемента управления. Открыть. Описание веб-части файла в редакторе и измените значение свойства текста заголовка. Найти `<property>` элемент, имеющий атрибут `name="Title"`и измените текст заголовка, который содержится между открывающим и закрывающим `<property>` тегов. Теперь закройте веб-страницу и измените исходный код страницы в редакторе. Удалить `<aspSample:TextDisplayWebPart>` управления элемент объявления, а затем сохраните и закройте файл.  
  
 Загрузите веб-страницы в браузере. `TextDisplayWebPart` Управления не отображается, поскольку он был удален. Используйте **режим отображения** управления раскрывающегося списка и выберите **каталога** для переключения страницы в режим каталога. Обратите внимание, что пользовательский <xref:System.Web.UI.WebControls.WebParts.CatalogZone> управления появится вместе с <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемента управления. Нажмите кнопку **Обзор** кнопку, чтобы найти. Файл описания веб-части, экспортированный для `TextDisplayWebPart` элемента управления. Можно щелкнуть **отправить**, установите флажок рядом с импортированного элемента управления и нажмите кнопку **добавить** Добавление на страницу. Нажмите кнопку **закрыть каталога** для возврата страницы в обычный режим просмотра. Импортированный элемент должен появиться на странице и заголовок, который отображается в заголовке окна элемента управления должен быть добавлен для текста заголовка. Файл описания веб-части.  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Web.AspNetHostingPermission">для работы в размещенной на сервере среде. Значение запроса: <see cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand" />; значение разрешения: <see cref="F:System.Web.AspNetHostingPermissionLevel.Minimal" />.</permission>
    <block subset="none" type="overrides">
      <para>Вы можете создавать настраиваемые <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> классов, если требуется больший контроль над визуализации и поведение пользовательского интерфейса каталога. Если необходимо предоставить пользователям элемента управления с возможностью добавления <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> управляет декларативно, а затем могут наследовать непосредственно из <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> класса. Если вы хотите включить декларативно Добавление элементов управления, простейшим способом будет наследовать <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> класса, так как она обеспечивает необходимый шаблон зоны.  При наследовании от <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> , можно переопределить <see cref="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts" /> метод и использовать метод, чтобы добавить пользовательские <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> элементы управления <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" />, если требуется больший программный контроль над Добавление пользовательских <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> элементов управления в зону .</para>
    </block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CatalogZone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZone.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CatalogZone();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поскольку <xref:System.Web.UI.WebControls.WebParts.CatalogZone> управления реализует шаблон зоны, обычно используется декларативным образом и редко требуется создать новый экземпляр класса с помощью <xref:System.Web.UI.WebControls.WebParts.CatalogZone.%23ctor%2A> конструктор. Тем не менее если используется наследование от <xref:System.Web.UI.WebControls.WebParts.CatalogZone> класс, чтобы создать пользовательскую зону, можно использовать конструктор для инициализации некоторые значения свойств и настроить его внешний вид.  
  
   
  
## Examples  
 В следующем примере кода показано программное использование <xref:System.Web.UI.WebControls.WebParts.CatalogZone.%23ctor%2A> конструктор в пользовательском <xref:System.Web.UI.WebControls.WebParts.CatalogZone> элемента управления. Конструктор используется для инициализации некоторые значения свойств по умолчанию для элемента управления. В следующем коде показан пользовательский <xref:System.Web.UI.WebControls.WebParts.CatalogZone> классом с конструктором, объявленные в верхней. Полный код и инструкции, необходимые для установки и запуска этого примера, см. в разделе в <xref:System.Web.UI.WebControls.WebParts.CatalogZone> Общие сведения о классе.  
  
 [!code-csharp[WebParts_CatalogZone_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/CS/catalogSamples.cs#1)]
 [!code-vb[WebParts_CatalogZone_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_CatalogZone_Overview/VB/catalogSamples.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCatalogParts">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.WebParts.CatalogPartCollection CreateCatalogParts ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.WebParts.CatalogPartCollection CreateCatalogParts() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateCatalogParts () As CatalogPartCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::WebParts::CatalogPartCollection ^ CreateCatalogParts();" />
      <MemberSignature Language="F#" Value="override this.CreateCatalogParts : unit -&gt; System.Web.UI.WebControls.WebParts.CatalogPartCollection" Usage="catalogZone.CreateCatalogParts " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.CatalogPartCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает экземпляр каждого типа <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" />, объявленного в зоне.</summary>
        <returns>Объект <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPartCollection" /> со ссылками на все элементы управления <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> в зоне.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> — Критический метод потому, что когда пользователь переключает страницу в режим отображения каталога, этот метод создает все <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементов управления, которые составляют каталога веб-частей.  
  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> Метод в <xref:System.Web.UI.WebControls.WebParts.CatalogZone> классов, предоставляемых с веб-частями набор элементов управления можно создать серверный элемент управления, наследуемый от <xref:System.Web.UI.WebControls.WebParts.CatalogPart> класса. Таким образом, при создании пользовательской <xref:System.Web.UI.WebControls.WebParts.CatalogPart> управления и объявить его на странице с <xref:System.Web.UI.WebControls.WebParts.CatalogZone> элемента управления, этот метод создает элемент управления, когда пользователь переключает страницу в режим каталога.  
  
 Тем не менее, для какой-либо причине может потребоваться контроль над <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> метод. Вы можете создать только определенные <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементов управления. Предположим, например, создать набор настраиваемых <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементов управления, которые имеют согласованного внешнего вида и принадлежат одного продукта или организации. Если требуется, чтобы разработчики страниц ограничивается с помощью этих пользовательских элементов управления в каталоге, то должен быть производным от <xref:System.Web.UI.WebControls.WebParts.CatalogZone> класса и переопределить методы <xref:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts%2A> метода и разрешить метод для создания того же типа, что и пользовательские элементы управления только элементы управления.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Текущий элемент управления <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> не имеет идентификатора.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZoneBase.CreateCatalogParts" />
      </Docs>
    </Member>
    <Member MemberName="ZoneTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ZoneTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ZoneTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ZoneTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ZoneTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ZoneTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.WebParts.CatalogZone))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateInstance(System.Web.UI.TemplateInstance.Single)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает шаблон, в котором будут содержаться дочерние элементы управления для элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> в формате сохранения страницы.</summary>
        <value>Объект <see cref="T:System.Web.UI.ITemplate" />, выступающий в качестве контейнера для дочерних элементов управления в зоне.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A> Свойство ссылается на шаблон типа <xref:System.Web.UI.ITemplate> , используемый для хранения <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементов управления в зоне. Шаблон зоны позволяют разработчикам объявлять <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементов управления, которые они хотят использовать в постоянном формате, а не создавать все элементы управления программным образом.  
  
 Метод доступа set для <xref:System.Web.UI.WebControls.WebParts.CatalogZone.ZoneTemplate%2A> вызовы свойство <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase.InvalidateCatalogParts%2A> метод, который обеспечивает коллекцию <xref:System.Web.UI.WebControls.WebParts.CatalogPart> элементов управления, которые объявлены в шаблоне зоны на странице для обновления. Это обеспечивает сохранение текущего всякий раз, когда пользователь изменяет элементы управления, фактически объявленные в шаблоне, на странице коллекции элементов управления ссылается зоны.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Если вы хотите создать настраиваемый <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZone" /> зоны, но вы планируете создать <see cref="T:System.Web.UI.WebControls.WebParts.CatalogPart" /> элементы управления программными средствами, а не позволяет разработчикам объявлять их, вам не требуется зон поддержка шаблонов, и могут наследовать непосредственно из <see cref="T:System.Web.UI.WebControls.WebParts.CatalogZoneBase" /> класс.</para>
        </block>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="M:System.Web.UI.WebControls.WebParts.CatalogZone.CreateCatalogParts" />
      </Docs>
    </Member>
  </Members>
</Type>