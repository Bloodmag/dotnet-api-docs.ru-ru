<Type Name="ConnectionPoint" FullName="System.Web.UI.WebControls.WebParts.ConnectionPoint">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1c9d88a6c241a950566c01496d5804d56c63813f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30590828" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ConnectionPoint" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ConnectionPoint extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ConnectionPoint" />
  <TypeSignature Language="C++ CLI" Value="public ref class ConnectionPoint abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Служит в качестве базового класса для определения объектов точек подключения, которые позволяют элементу управления получателя и элементу управления поставщика в связи веб-частей обмениваться данными.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Каждое подключение веб-частей состоит из двух серверных элементов управления, совместное использование данных: один элемент управления является потребителем, другой поставщик. Описание основных компонентов подключения веб-частей и самого объекта связи см. в разделе <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> Общие сведения о классе. Каждый веб-частей необходимы точки подключения. Поставщик и управления получателя должны иметь по крайней мере один определенный <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> (каждый из них может иметь несколько точек подключения) объект, который содержит сведения о как элемент управления может подключиться к другому элементу управления и типа данных его можно использовать совместно. В текущем подключении поставщика имеет собственный тип объекта точки подключения (производный от базового <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> класса), <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> потребитель и экземпляр имеет собственный объект <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> экземпляра.  
  
 Чтобы создать точки подключения поставщика, разработчики должны добавить метод обратного вызова для поставщика, который будет возвращен экземпляр реализованного интерфейса потребителю. Их необходимо пометить метод обратного вызова в исходный код с `ConnectionProvider` атрибута code (см. <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> класса). Аналогичным образом, чтобы создать точки подключения потребителя, разработчики должны добавить метод получателя, который получает экземпляр интерфейса и их необходимо пометить `ConnectionConsumer` атрибутов (см. <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> класса).  
  
 Если разработчик создает соединения с веб-страницы, они могут создаваться как статические или динамические связи. Статические подключения объявляются в разметке веб-страницы. При объявлении статического соединения разработчиков можно указать, какие точки подключения используются для потребителя и поставщика путем присвоения значений для `ProviderConnectionPointID` и `ConsumerConnectionPointID` атрибуты `<asp:webpartconnection>` тега элемента. Этот подход особенно полезен в тех случаях, если существует несколько точек подключения, определенные в элементах управления потребителя и поставщика, так как он позволяет статическая связь может определить, какие точки подключения для подключения.  
  
 Динамические подключения создаются программно код разработчика или пользователя через пользовательский интерфейс (UI), предоставляемые <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> элемента управления. Для создания подключения в коде, разработчики должны получить экземпляр <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> путем вызова метода <xref:System.Web.UI.WebControls.WebParts.WebPartManager.ConnectWebParts%2A> метод <xref:System.Web.UI.WebControls.WebParts.WebPartManager> элемента управления. Прежде чем они могут вызывать этот метод, разработчики должны иметь ссылки на потребителя и поставщика серверных элементов управления и их соответствующие объекты точек подключения. Для получения ссылок на точки подключения для поставщика и управления получателя, сначала вызовите разработчики <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetProviderConnectionPoints%2A> и <xref:System.Web.UI.WebControls.WebParts.WebPartManager.GetConsumerConnectionPoints%2A> методы <xref:System.Web.UI.WebControls.WebParts.WebPartManager> элемента управления. Эти методы возвращают соответствующее соединение точка объекты, которые в свою очередь может быть передан в метод для создания соединения.  
  
 Если поставщика и потребителя объекты точки подключения и работы с тем же типом интерфейса, они совместимы и могут образовывать прямое подключение, общий доступ к данным. Если они не работают с тем же типом интерфейса <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> объект должен использоваться для преобразования экземпляр интерфейса от поставщика в тип, который потребитель может работать с.  
  
 Абстрактный <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> класс предоставляет базовые сведения о точек подключения, которые являются общими для элементов управления потребителя и поставщика. Эти сведения содержатся в нескольких свойствах. <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> Указывает, может ли точка подключения участвовать в несколько соединений одновременно. По умолчанию точки подключения поставщика могут участвовать в нескольких связях и точки подключения потребителя не может. <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> Свойство указывает тип серверного элемента управления, связанных с точкой подключения. Обратите внимание, что не только <xref:System.Web.UI.WebControls.WebParts.WebPart> создавать элементы управления подключений; любой серверный элемент управления, элемент управления ASP.NET, пользовательский элемент управления или пользовательский элемент управления можно включить, чтобы участвовать в соединениях, помещенного в <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> зоны. <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> Свойство содержит понятное имя для точки подключения, который может отображаться в пользовательском Интерфейсе для оказания помощи пользователям, создающими подключений. <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> Служит в качестве строковый идентификатор для самого объекта точки подключения. <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> Свойство указывает, какой тип экземпляр интерфейса понимает точки подключения. Ли к заданной точке подключения предоставляет или потребляет экземпляр этого интерфейса определяются тем, является ли <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> или <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> объекта.  
  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> Класса есть один метод. <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> Метод возвращает значение типа Boolean, показывающего, является в настоящее время может участвовать в подключениях к точке подключения.  
  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> Класс также содержит одно открытое поле <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID>. Это поле содержит значение, используемое для идентификации точку подключения по умолчанию в соединении.  
  
> [!NOTE]
>  Атрибуты для задания точки подключения, методы имеют только один обязательный параметр `displayName`, поэтому можно создать атрибут точки подключения по умолчанию без указания его идентификатора. В таких случаях <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> поле предоставляет базовое значение для использования.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется создание соединения веб-частей, которое содержит обязательные <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> объектов. Поскольку <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> класс является абстрактным базовым классом, экземпляры его дочернего класса--<xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> и <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint>--являются фактические объекты, используемые для создания подключения.  
  
 Пример состоит из четырех частей.  
  
-   Режим отображения пользовательского элемента управления, позволяющий изменить веб-частей на странице.  
  
-   Исходный код для интерфейса, а два <xref:System.Web.UI.WebControls.WebParts.WebPart> управляет роль поставщика и потребителя, для подключения.  
  
-   Веб-страницы, все элементы управления ведущего приложения и выполнения примера кода.  
  
-   Объяснение, как запустить пример страницы.  
  
 Первая часть данный пример кода является пользовательский элемент управления, позволяющий пользователям изменять режимы отображения на веб-странице. Сохраните следующий исходный код в ASCX-файл, задав для него имя файла, который назначен `Src` атрибут `Register` директив данного пользовательского элемента управления, который находится в верхней размещения веб-страницы. Сведения о режимах отображения и описание исходного кода в этом элементе управления, см. в разделе [Пошаговое руководство: изменение режима отображения страницы](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/displaymodemenucs.ascx#6)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/DisplayModeMenuVB.ascx#6)]  
  
 Во второй части примера кода приведен исходный код для интерфейса и элементов управления. Исходный файл содержит простой интерфейс с именем `IZipCode`. Имеется также <xref:System.Web.UI.WebControls.WebParts.WebPart> класс с именем `ZipCodeWebPart` , реализующий интерфейс и выступает в роли управления поставщика. Его `ProvideIZipCode` метод является методом обратного вызова, реализующий единственный член этого интерфейса. Метод просто возвращает экземпляр интерфейса. Обратите внимание, что метод помечен атрибутом `ConnectionProvider` в метаданных атрибутом. Это механизм идентификации метода в качестве метода обратного вызова для точки подключения поставщика. Другой <xref:System.Web.UI.WebControls.WebParts.WebPart> класс называется `WeatherWebPart`, и он действует как потребитель соединения. Этот класс содержит метод с именем `GetZipCode` , возвращает экземпляр `IZipCode` интерфейс из элемента управления поставщика. Обратите внимание, что этот метод помечен как метод точки подключения потребителя с `ConnectionConsumer` в метаданных атрибутом. Это механизм идентификации метода точки подключения в элементе управления получателя.  
  
 Для выполнения примера кода необходимо скомпилировать этот исходный код. Можно выполнить явную компиляцию и поместить результирующую сборку в папку Bin веб-сайта или в глобальном кэше сборок. Кроме того можно поместить исходный код в папку App_Code веб-узла, где он будет динамически компилироваться во время выполнения. Данный пример кода использует динамической компиляции. Пошаговое руководство по компиляции см. в разделе [Пошаговое руководство: разработка и с помощью элемента управления пользовательского](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_ConnectionPoint_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/ZipCodeComponent.cs#2)]
 [!code-vb[WebParts_ConnectionPoint_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/ZipCodeComponent.vb#2)]  
  
 Третья часть примера кода — веб-страница. В верхней, `Register` директивы для регистрации пользовательских элементов управления, которые образуют связь, а пользовательский элемент управления, позволяющий пользователю изменять режимы отображения на странице. Само соединение создается декларативно в `<staticconnections>` элемента на странице. Можно также создать соединения программным образом. код, выполняющий, содержится в `Button1_Click` метод. Независимо от подключения создается декларативно или программно, точки подключения всегда необходимо указать поставщика и потребителя. `Button2_Click` Метод обращается к <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> объектов для поставщика и потребителя, а также записывает некоторые значения свойств метки на странице.  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 После загрузки страницы в браузере, щелкните **сведений о точке подключения** кнопки. Отображаются сведения о точках подключения поставщика и потребителя, установленных в декларативной связи. Затем используйте **режим отображения** раскрывающийся элемент управления, чтобы переключить страницу в режиме подключения. В меню команд для одного из <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления (представленным стрелкой вниз в строке заголовка), щелкните команду подключения. Автоматически создать подключение появится пользовательский Интерфейс, `<asp:connectionszone>` управления объявлен на странице. Нажмите кнопку **Disconnect** кнопку, чтобы завершить существующую связь. Используйте **режим отображения** управления для возврата страницы в режим просмотра. Далее щелкните **динамическое подключение** кнопку, чтобы создать подключение программным образом. Нажмите кнопку **Connection Point Details** кнопку, чтобы указать сведения об объектах соединения двух точек.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
  </Docs>
  <Members>
    <Member MemberName="AllowsMultipleConnections">
      <MemberSignature Language="C#" Value="public bool AllowsMultipleConnections { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowsMultipleConnections" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowsMultipleConnections As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowsMultipleConnections { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, которое показывает, поддерживает ли точка подключения несколько одновременных связей.</summary>
        <value>
          Значение <see langword="true" />, если точка подключения поддерживает несколько связей. В противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> объекты имеют свои <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> присвоено значение свойства `true` (по <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> класса), так как элемент управления веб-части, значение по умолчанию позволяет точки подключения поставщика для создания подключений нескольким получателям.  
  
 Напротив <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> объекты имеют их <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> присвоено значение свойства `false` (по <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> класса), так как элемент управления веб-части, значение по умолчанию позволяет соединения с потребителем точки для подключения только к одному поставщику в время.  
  
 Можно изменить поведение по умолчанию, касающиеся несколько подключений, назначив разные значения для <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute.AllowsMultipleConnections%2A?displayProperty=nameWithType> свойства (поставщики) или <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute.AllowsMultipleConnections%2A?displayProperty=nameWithType> свойство (для потребителей) по двум <xref:System.Attribute> классы, используемые для атрибутов соединения. При включении точки подключения потребителя для подключения к нескольким поставщикам, в то же время, код приходится иметь дело с любой результирующей проблемы синхронизации.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> свойство на обоих <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> и <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> объектов. Данный пример кода показывает только веб-страницы, которая содержит код для доступа к свойству; Полный код, необходимый для запуска этого примера, см в разделе примеров <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> Общие сведения о классе.  
  
 Код в `Button2_Click` метод доступа, веб-страницы <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.AllowsMultipleConnections%2A> свойства на каждой точке подключения объектов и записывает каждое значение метки. Выполните код, нажав кнопку **сведений о точке подключения** кнопку после загрузки страницы в браузере.  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="ControlType">
      <MemberSignature Language="C#" Value="public Type ControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ControlType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ControlType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает тип <see cref="T:System.Type" /> серверного элемента управления, с которым сопоставлена точка подключения.</summary>
        <value>Объект <see cref="T:System.Type" />, представляющий тип элемента управления.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> чаще всего свойство <xref:System.Web.UI.WebControls.WebParts.WebPart> типа. Однако поскольку любой тип пользовательского элемента управления или серверный элемент управления может участвовать в подключениях, если правильно включен и помещен в <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> зоны, <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> свойства такого типа другой сервер управления также может возвращать.  
  
 Когда серверные элементы управления, которые не являются <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления, помещаются в <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> зоны, они помещаются с <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> объекта во время выполнения, поэтому они могут работать как <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления и участвовать в соединениях. Но если такие элементы управления присутствуют в подключениях <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> не возвращает значение свойства <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> ввода; он возвращает тип <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> управления дочернего объекта, который представляет тип элемента управления сервером или пользовательской.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> свойство на обоих <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> и <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> объектов. Данный пример кода показывает только веб-страницы, которая содержит код для доступа к свойству; Полный код, необходимый для запуска этого примера, см в разделе примеров <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> Общие сведения о классе.  
  
 Код в `Button2_Click` метод доступа, веб-страницы <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ControlType%2A> свойства на каждой точке подключения объектов и записывает каждое значение метки. Выполните код, нажав кнопку **сведений о точке подключения** кнопку после загрузки страницы в браузере.  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
    <Member MemberName="DefaultID">
      <MemberSignature Language="C#" Value="public static readonly string DefaultID;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string DefaultID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DefaultID As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ DefaultID;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет строку, по которой определяется точка подключения по умолчанию в коллекции точек подключения, сопоставленных с серверным элементом управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При создании точки подключения можно указать идентификатор для точки подключения в исходном коде поставщик или потребитель <xref:System.Web.UI.WebControls.WebParts.WebPart> управлять с помощью <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> или <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> атрибута. Однако при добавлении атрибута к точке подключения в исходном коде `ID` параметр является необязательным. Если идентификатор не указан в атрибуте, <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> поле предоставляет строку, которая используется для определения точки подключения по умолчанию.  
  
 Если в элементе управления поставщика или получателя определены несколько точек подключения, необходимо указать идентификатор для каждой точки подключения, чтобы можно было различить точки подключения, при создании подключений.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="DisplayName">
      <MemberSignature Language="C#" Value="public string DisplayName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает строку, которая служит в качестве понятного отображаемого имени, представляющего точку подключения в пользовательском интерфейсе.</summary>
        <value>Строка, содержащая понятное отображаемое имя для объекта <see cref="T:System.Web.UI.WebControls.WebParts.ConnectionPoint" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы создать связь веб-частей, поставщика и потребителя элементы управления для подключения необходимо каждый из которых задает по крайней мере одной точки подключения, метод, который позволяет им взаимодействовать и совместно использовать данные. Чтобы определить такие методы точки подключения, разработчик задает атрибут выбранных методов. В поставщике `ConnectionProvider` атрибут имеет значение выбранного метода обратного вызова и потребителя, `ConnectionConsumer` атрибут задан для метода, который получает экземпляр интерфейса, который содержит данные от поставщика. Для обеих этих атрибутов, имеет один параметр, который всегда является обязательным, независимо от того, какую перегрузку объявлен для создания атрибута, `displayName` параметра. Разработчику необходимо назначить строку для использования в качестве понятное отображаемое имя для точки подключения, и эта строка становится значением <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> свойство.  
  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> Значение свойства отображается в пользовательском Интерфейсе веб-страницы при создании соединения. Например, если <xref:System.Web.UI.WebControls.WebParts.ConnectionsZone> элемент управления добавлен на страницу, он создает пользовательский Интерфейс для пользователей для создания подключений между элементами управления. После пользователь переключает страницу в режим отображения подключения и щелкает команду подключения <xref:System.Web.UI.WebControls.WebParts.WebPart> управления появится пользовательский Интерфейс подключения. Каждый элемент управления, которые могут участвовать в соединениях отображается в пользовательском Интерфейсе и сразу после каждого элемента является элементом управления раскрывающегося списка, который отображает понятные имена точек подключения, доступных. Пользователи должны выбрать по крайней мере одну точку подключения для подключения. Значения, отображаемые в списке точек подключения извлекаются из <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> свойство. Если разработчики создавать настраиваемый пользовательский Интерфейс для создания подключений, они могут использовать <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DisplayName%2A> свойство аналогичным образом для предоставления понятное имя, которое представляет точку подключения.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute" />
        <altmember cref="T:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute" />
      </Docs>
    </Member>
    <Member MemberName="GetEnabled">
      <MemberSignature Language="C#" Value="public virtual bool GetEnabled (System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool GetEnabled(class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled(System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool GetEnabled(System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="control">Элемент <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> или другой серверный элемент управления, сопоставленный с точкой подключения.</param>
        <summary>Возвращает значение, которое показывает, может ли точка подключения участвовать в связях.</summary>
        <returns>
          Значение <see langword="true" />, если элемент управления может создать точку подключения для участия в связи. В противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> Метод в базовом классе <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> класса всегда возвращает `true`, но производные классы могут переопределять метод для возврата `true` или `false` в различные моменты времени, на основании состояния `control`.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> метод на обоих <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> и <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> объектов. Данный пример кода показывает только веб-страницы, которая содержит код для доступа к свойству; Полный код, необходимый для запуска этого примера, см в разделе примеров <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> Общие сведения о классе.  
  
 Код в `Button2_Click` метод доступа, веб-страницы <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.GetEnabled%2A> метод для каждой точки подключения объектов и записывает каждое значение метки. Выполните код, нажав кнопку **сведений о точке подключения** кнопку после загрузки страницы в браузере.  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public string ID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ID { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает строку, содержащую идентификатор для точки подключения.</summary>
        <value>Строка, содержащая идентификатор для точки подключения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если разработчик объявляет <xref:System.Web.UI.WebControls.WebParts.ConnectionConsumerAttribute> или <xref:System.Web.UI.WebControls.WebParts.ConnectionProviderAttribute> атрибута в методе в исходном коде элемента управления, чтобы метод можно использовать в качестве точки подключения не требуется объявлять `ID` параметра для атрибута точки подключения. Единственным обязательным атрибутом является `displayName` параметра. По умолчанию присваивается идентификатор точки подключения, используя значение из <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID> поля.  
  
 Если имеется только один метод в элементе управления, используемого в качестве точки подключения, нет необходимости задать идентификатор для точки подключения. Если существует несколько методов, в качестве точек подключения указано, необходимо указать идентификатор для каждого из них; в противном случае будет создано исключение. Назначая идентификатор для каждой точки подключения, можно также упростить можно указать, какая точка подключения для использования при объявлении подключения в веб-страницы или создать их в коде.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> свойство на обоих <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> и <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> объектов. Данный пример кода показывает только веб-страницы, которая содержит код для доступа к свойству; Полный код, необходимый для запуска этого примера, см в разделе примеров <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> Общие сведения о классе.  
  
 Код в `Button2_Click` метод доступа, веб-страницы <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.ID%2A> свойства на каждой точке подключения объектов и записывает каждое значение метки. Выполните код, нажав кнопку **сведений о точке подключения** кнопку после загрузки страницы в браузере.  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.WebParts.ConnectionPoint.DefaultID" />
      </Docs>
    </Member>
    <Member MemberName="InterfaceType">
      <MemberSignature Language="C#" Value="public Type InterfaceType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type InterfaceType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InterfaceType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ InterfaceType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает тип интерфейса, используемого точкой подключения.</summary>
        <value>Объект <see cref="T:System.Type" />, соответствующий типу интерфейса, предоставляемого или получаемого элементом управления.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> Свойство указывает, какой тип интерфейса использует точки подключения. Это может помочь определить необходимость совместимость и возможность создания подключения двух элементов управления. Если точка подключения поставщика <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> отличается от точки подключения потребителя <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A>, то два элемента управления несовместимы (что означает, что они не может подключаться напрямую без преобразователя) и <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> объекта должен использовать для установления соединения.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> свойство на обоих <xref:System.Web.UI.WebControls.WebParts.ProviderConnectionPoint> и <xref:System.Web.UI.WebControls.WebParts.ConsumerConnectionPoint> объектов. Данный пример кода показывает только веб-страницы, которая содержит код для доступа к свойству; Полный код, необходимый для запуска этого примера, см в разделе примеров <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint> Общие сведения о классе.  
  
 Код в `Button2_Click` метод доступа, веб-страницы <xref:System.Web.UI.WebControls.WebParts.ConnectionPoint.InterfaceType%2A> свойства на каждой точке подключения объектов и записывает каждое значение метки. Выполните код, нажав кнопку **сведений о точке подключения** кнопку после загрузки страницы в браузере.  
  
 [!code-aspx-csharp[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/CS/connectionPointCS.aspx#1)]
 [!code-aspx-vb[WebParts_ConnectionPoint_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ConnectionPoint_Overview/VB/connectionPointVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Type" />
      </Docs>
    </Member>
  </Members>
</Type>