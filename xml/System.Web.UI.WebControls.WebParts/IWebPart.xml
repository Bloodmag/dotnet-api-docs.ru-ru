<Type Name="IWebPart" FullName="System.Web.UI.WebControls.WebParts.IWebPart">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d29e166efbc895113e6216456e2e895fbfe256f3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30590988" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IWebPart" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebPart" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IWebPart" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebPart" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWebPart" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Определяет общие свойства пользовательского интерфейса, используемые элементами управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> ASP.NET.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.IWebPart> Интерфейс предоставляет несколько свойств пользовательского интерфейса, которые улучшения удобства работы с <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления. При создании элементов управления, которые являются производными от базового <xref:System.Web.UI.WebControls.WebParts.WebPart> класса, вы получаете реализация все свойства в <xref:System.Web.UI.WebControls.WebParts.IWebPart> интерфейс, так как <xref:System.Web.UI.WebControls.WebParts.WebPart> базовый класс реализует этот интерфейс.  
  
 Можно использовать существующие пользовательские элементы управления, элементы управления ASP.NET или пользовательских серверных элементов управления, которые не наследуются от <xref:System.Web.UI.WebControls.WebParts.WebPart> класс как часть приложения веб-частей, и они могут использовать эти свойства пользовательского интерфейса для объявления <xref:System.Web.UI.WebControls.WebParts.IWebPart> интерфейса. Если поместить существующие серверные элементы управления в <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> зоны, во время выполнения, они помещаются с <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> объекта. Поскольку <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> класс наследует от <xref:System.Web.UI.WebControls.WebParts.WebPart> базового класса позволяет выполнять существующие серверные элементы управления как true <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления и добавляет их свойства <xref:System.Web.UI.WebControls.WebParts.IWebPart> интерфейса.  
  
 Если поместить серверных элементов управления, которые не являются <xref:System.Web.UI.WebControls.WebParts.WebPart> элементы управления в зонах, они могут использовать <xref:System.Web.UI.WebControls.WebParts.IWebPart> свойства во время выполнения и можно также объявить значения этих свойств для серверных элементов управления в разметке страницы (в постоянном формате страницы). Тем не менее, поскольку эти свойства доступны только для серверных элементов управления во время выполнения, во время разработки кодирования такие компоненты, как IntelliSense не распознают <xref:System.Web.UI.WebControls.WebParts.IWebPart> свойства, объявленные на серверных элементов управления. Объявленные свойства для этих элементов управления по-прежнему работать, если время загрузки страницы, но Microsoft Visual Studio не распознает свойства как допустимый во время разработки. Если вы хотите добавить <xref:System.Web.UI.WebControls.WebParts.IWebPart> свойства для существующего сервера и пользовательские элементы управления, чтобы улучшить взаимодействие с пользователем во время разработки, можно реализовать <xref:System.Web.UI.WebControls.WebParts.IWebPart> интерфейса в серверном элементе управления.  
  
 Возможно, основной причиной для реализации <xref:System.Web.UI.WebControls.WebParts.IWebPart> — интерфейс для элементов управления, которые не поддерживают использование свойств expando (пользовательский). Свойств expando представляют собой строки, которые можно добавить в класс динамически как свойство, с помощью параметра <xref:System.Web.UI.IAttributeAccessor> интерфейса. Элементы управления, реализующие этот интерфейс, включая <xref:System.Web.UI.WebControls.WebControl> класс и его дочерние элементы можно использовать пользовательские свойства. Таким образом, все элементы управления сервера ASP.NET, пользовательские элементы управления, производных от них, пользовательских элементов управления, и <xref:System.Web.UI.WebControls.WebParts.WebPart> элементы управления поддерживают использование свойств expando. Однако пользовательские элементы управления, которые наследуют непосредственно от базового <xref:System.Web.UI.Control> класса не поддерживают свойства expando. Таким образом Если объявить эти элементы управления в пределах <xref:System.Web.UI.WebControls.WebParts.WebPartZone>, вы не сможете объявлять распространенные <xref:System.Web.UI.WebControls.WebParts.IWebPart> свойства элементов управления, свойств, таких как <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> и <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A>. Если вы хотите использовать эти свойства с такими элементами управления, необходимо реализовать <xref:System.Web.UI.WebControls.WebParts.IWebPart> интерфейса.  
  
   
  
## Examples  
 В следующем примере кода показано, как реализовать <xref:System.Web.UI.WebControls.WebParts.IWebPart> интерфейса в пользовательском элементе управления. Это простой реализации, которая как минимум показан способ реализации свойства.  
  
 Первой части в примере кода показан пользовательский элемент управления. Пользовательский элемент управления реализует все свойства <xref:System.Web.UI.WebControls.WebParts.IWebPart> интерфейса, а также два дополнительных общих свойства связанные с элементами управления в пользовательском интерфейсе. Используйте две пользовательские свойства каждого `Personalizable` атрибутом, который предоставляет значения в эти свойства сохраняются между сеансами браузера. Обратите внимание, что в базе <xref:System.Web.UI.WebControls.WebParts.WebPart> реализации класса, все свойства <xref:System.Web.UI.WebControls.WebParts.IWebPart> интерфейса реализуются как настраиваемые, хотя это не в этом примере кода.  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#2)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#2)]  
  
 Во второй части в примере кода показано, веб-страницы, на котором размещается пользовательский элемент управления. На странице имеются <xref:System.Web.UI.WebControls.WebParts.WebPartZone> управления в пользовательский элемент управления, который есть ссылка. Обратите внимание, что некоторые <xref:System.Web.UI.WebControls.WebParts.IWebPart> интерфейса свойств устанавливаются значения декларативно в разметке для пользовательского элемента управления, что позволяет вести себя и выглядеть <xref:System.Web.UI.WebControls.WebParts.WebPart> управления во время разработки и во время выполнения. При загрузке страницы в браузере, используйте пользовательский Интерфейс на странице для демонстрации возможности программным путем изменения значения реализованный <xref:System.Web.UI.WebControls.WebParts.IWebPart> свойства во время выполнения. При изменении значения свойства не указаны на странице изменения, но становятся видимыми в исходный код страницы ( <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> свойства), или хранятся данные состояния приложения ( <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> свойство).  
  
> [!IMPORTANT]
>  В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Обычно необходимо реализовать <see cref="T:System.Web.UI.WebControls.WebParts.IWebPart" /> интерфейс, либо на пользовательских <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> элементов управления или сервер управляет, так как базовый <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> уже реализует интерфейс. Настраиваемый <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> элементов управления и других серверных элементов управления, которые помещаются в <see cref="T:System.Web.UI.WebControls.WebParts.WebPartZoneBase" /> зон, можно использовать все <see cref="T:System.Web.UI.WebControls.WebParts.IWebPart" /> свойства.  
  
 Основной причиной для реализации <see cref="T:System.Web.UI.WebControls.WebParts.IWebPart" /> интерфейс самостоятельно, будет ли в пользовательском <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> элемента управления или другого серверного элемента управления, если вы хотите изменить реализацию по умолчанию. Например может потребоваться предоставить значения по умолчанию для некоторых свойств. Другая причина для реализации интерфейса пользователя или сервера управления в — так, что будут расширены возможности разработки для работы с этими свойствами в элементе управления.</para>
    </block>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPart" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.GenericWebPart" />
  </Docs>
  <Members>
    <Member MemberName="CatalogIconImageUrl">
      <MemberSignature Language="C#" Value="public string CatalogIconImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CatalogIconImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property CatalogIconImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CatalogIconImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает URL-адрес для изображения, представляющего элемент управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> в каталоге элементов управления.</summary>
        <value>Строка, представляющая URL-адрес для изображения, которое используется для представления элемента управления в каталоге. Значением по умолчанию является пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Приложения веб-частей часто содержат каталог (или список) элементов управления, которые пользователи могут добавлять на страницу. <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> Свойство элемента управления содержит URL-адрес изображения, которое представляет элемент управления, когда он появится в каталоге.  
  
   
  
## Examples  
 В следующем примере кода показано использование декларативного и программного <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> свойство. Полный исходный код для примера находится в разделе примеров <xref:System.Web.UI.WebControls.WebParts.IWebPart> Общие сведения о классе.  
  
 В первой части примера кода показывается, как пользовательский элемент управления реализует <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> свойство.  
  
 [!code-csharp[WebParts_IWebPart_Overview#8](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#8)]
 [!code-vb[WebParts_IWebPart_Overview#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#8)]  
  
 Во второй части примера кода демонстрируется использование метода в пользовательском элементе управления, который программно задает значение <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> свойства, когда пользователь выбирает соответствующее имя свойства с помощью переключателей на странице, задает новое значение в текстовом поле и затем нажимает **обновление** кнопки.  
  
> [!IMPORTANT]
>  В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 В третьей части в примере кода показано, как пользователю контролировать, реализующий <xref:System.Web.UI.WebControls.WebParts.IWebPart> ссылается на интерфейс <xref:System.Web.UI.WebControls.WebParts.WebPartZone> управления и как <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> задано декларативно в элементе управления. Обратите внимание, что так как отсутствует каталог веб-частей ASP.NET, входящий в состав примера, не отображается фактический влияние этого свойства.  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.CatalogIconImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает краткий текст, описывающий функции элемента управления для использования в подсказке и в каталогах серверных элементов управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <value>Строка, кратко описывающая функции элемента управления. Значением по умолчанию является пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> Значение свойства обычно используется как строку описания для элемента управления в каталогах, содержащих списки <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления и в качестве всплывающей подсказки в заголовке окна элемента управления. Содержимое свойства отображается в подсказке при наведении указателя мыши на текст заголовка в заголовке окна элемента управления.  
  
   
  
## Examples  
 В следующем примере кода показано использование декларативного и программного <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> свойство. Полный исходный код для примера находится в разделе примеров <xref:System.Web.UI.WebControls.WebParts.IWebPart> Общие сведения о классе.  
  
 В первой части примера кода показывается, как пользовательский элемент управления реализует <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> свойство.  
  
 [!code-csharp[WebParts_IWebPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#3)]
 [!code-vb[WebParts_IWebPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#3)]  
  
 Во второй части примера кода демонстрируется использование метода в пользовательском элементе управления, который программно задает значение <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> свойства, когда пользователь выбирает соответствующее имя свойства с помощью переключателей на странице, задает новое значение в текстовом поле и затем нажимает **обновление** кнопки.  
  
> [!IMPORTANT]
>  В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 В третьей части в примере кода показано, как пользователю контролировать, реализующий <xref:System.Web.UI.WebControls.WebParts.IWebPart> ссылается на интерфейс <xref:System.Web.UI.WebControls.WebParts.WebPartZone> управления и как <xref:System.Web.UI.WebControls.WebParts.IWebPart.Description%2A> задано декларативно в элементе управления. Обратите внимание, что вы увидите значение этого свойства, наведя указатель мыши на текст заголовка в заголовке окна элемента управления, после загрузки страницы в браузере. Также можно поэкспериментировать с изменением значения свойства программным образом во время выполнения, загрузки веб-страницы и изменить значение свойства с помощью предоставленного пользовательский интерфейс (UI).  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Description" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Description" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Description" />
      </Docs>
    </Member>
    <Member MemberName="Subtitle">
      <MemberSignature Language="C#" Value="public string Subtitle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Subtitle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Subtitle As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Subtitle { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает строку, которая объединены со значением свойства <see cref="P:System.Web.UI.WebControls.WebParts.IWebPart.Title" /> для формирования полного заголовка для элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <value>Строка, служащая подзаголовком для элемента управления. Значением по умолчанию является пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A> Свойство используется для возврата строки подзаголовок по умолчанию для <xref:System.Web.UI.WebControls.WebParts.WebPart> элемент управления, который добавляется для заголовка элемента управления в строке заголовка.  
  
 Если указать значение по умолчанию для <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A> свойства в элементе управления, который реализует <xref:System.Web.UI.WebControls.WebParts.IWebPart> интерфейса веб-частей, набор элементов управления автоматически добавляет его к значению <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> свойства элемента управления во время выполнения.  
  
   
  
## Examples  
 В следующем примере кода показано использование декларативного и программного <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A> свойство. Полный исходный код для примера находится в разделе примеров <xref:System.Web.UI.WebControls.WebParts.IWebPart> Общие сведения о классе.  
  
 В первой части примера кода показывается, как пользовательский элемент управления реализует <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A> свойство. Обратите внимание, что свойство доступно только для чтения и должен использоваться для предоставления подзаголовка, который добавляется к основному заголовку элемента управления.  
  
 [!code-csharp[WebParts_IWebPart_Overview#5](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#5)]
 [!code-vb[WebParts_IWebPart_Overview#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#5)]  
  
 Во второй части в примере кода показано, как пользователю контролировать, реализующий <xref:System.Web.UI.WebControls.WebParts.IWebPart> ссылается на интерфейс <xref:System.Web.UI.WebControls.WebParts.WebPartZone> управления и как доступные для записи свойства из <xref:System.Web.UI.WebControls.WebParts.IWebPart> заданы декларативно в элементе управления. После загрузки страницы в браузере, обратите внимание, что значение по умолчанию <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A> свойства, которое было задано в коде реализации пользовательского элемента управления, добавляется к заголовку в заголовке окна элемента управления.  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Subtitle" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Subtitle" />
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает название элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <value>Строка, содержащая заголовок элемента управления. Значением по умолчанию является пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Текст заголовка отображается в заголовке окна элемента управления задается <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> свойство.  
  
 Если не указать заголовок для элемента управления, элемент управления веб-частей, автоматически вычисляет строку по умолчанию для использования в качестве заголовка. Дополнительные сведения см. в разделе <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>. Кроме того существует возможность предоставления подзаголовка, который добавляется в строку заголовка. Дополнительные сведения см. в разделе <xref:System.Web.UI.WebControls.WebParts.IWebPart.Subtitle%2A>.  
  
   
  
## Examples  
 В следующем примере кода показано использование декларативного и программного <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> свойство. Полный исходный код для примера находится в разделе примеров <xref:System.Web.UI.WebControls.WebParts.IWebPart> Общие сведения о классе.  
  
 В первой части примера кода показывается, как пользовательский элемент управления реализует <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> свойство.  
  
 [!code-csharp[WebParts_IWebPart_Overview#4](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#4)]
 [!code-vb[WebParts_IWebPart_Overview#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#4)]  
  
 Во второй части примера кода демонстрируется использование метода в пользовательском элементе управления, который программно задает значение <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> свойства, когда пользователь выбирает соответствующее имя свойства с помощью переключателей на странице, задает новое значение в текстовом поле и затем нажимает **обновление** кнопки.  
  
> [!IMPORTANT]
>  В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 В третьей части в примере кода показано, как пользователю контролировать, реализующий <xref:System.Web.UI.WebControls.WebParts.IWebPart> ссылается на интерфейс <xref:System.Web.UI.WebControls.WebParts.WebPartZone> управления и как <xref:System.Web.UI.WebControls.WebParts.IWebPart.Title%2A> задано декларативно в элементе управления.  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.Part.Title" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.Title" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.Title" />
      </Docs>
    </Member>
    <Member MemberName="TitleIconImageUrl">
      <MemberSignature Language="C#" Value="public string TitleIconImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TitleIconImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleIconImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TitleIconImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает URL-адрес изображения, которое используется для представления элемента управления веб-частей в собственном заголовке окна элемента управления.</summary>
        <value>Строка, представляющая URL-адрес изображения. Значением по умолчанию является пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> Свойство позволяет связать значок с <xref:System.Web.UI.WebControls.WebParts.WebPart> элемента управления. Значок отображается в заголовке окна элемента управления собственные. Для обеспечения тематической согласованности разработчики приложений может потребоваться сделать этот значок показанный на изображении, представляющая элемент управления в каталоге элементов управления веб-частей (изображения, на которые ссылается <xref:System.Web.UI.WebControls.WebParts.IWebPart.CatalogIconImageUrl%2A> свойство).  
  
 Реализованное в наборе элементов управления веб-частей <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> свойство является настраиваемым пользователями, чтобы изменить изображение или значок, отображаемый в заголовке окна элемента управления.  
  
   
  
## Examples  
 В следующем примере кода показано использование декларативного и программного <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> свойство. Полный исходный код для примера находится в разделе примеров <xref:System.Web.UI.WebControls.WebParts.IWebPart> Общие сведения о классе.  
  
 В первой части примера кода показывается, как пользовательский элемент управления реализует <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> свойство.  
  
 [!code-csharp[WebParts_IWebPart_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#6)]
 [!code-vb[WebParts_IWebPart_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#6)]  
  
 Во второй части примера кода демонстрируется использование метода в пользовательском элементе управления, который программно задает значение <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> свойства, когда пользователь выбирает соответствующее имя свойства с помощью переключателей на странице, задает новое значение в текстовом поле и затем нажимает **обновление** кнопки.  
  
> [!IMPORTANT]
>  В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 В третьей части в примере кода показано, как пользователю контролировать, реализующий <xref:System.Web.UI.WebControls.WebParts.IWebPart> ссылается на интерфейс <xref:System.Web.UI.WebControls.WebParts.WebPartZone> управления и как <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleIconImageUrl%2A> задано декларативно в элементе управления. Обратите внимание, что если URL-адрес для реального изображения не указано, заполнитель для значка отображается в строке заголовка.  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.TitleIconImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleIconImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="TitleUrl">
      <MemberSignature Language="C#" Value="public string TitleUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TitleUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TitleUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает URL-адрес для дополнительных сведений об элементе управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <value>Строка, представляющая URL-адреса для дополнительных сведений об элементе управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />. Значением по умолчанию является пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При назначении URL-адрес <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> свойство, заголовок элемента управления становится ссылку. Это свойство служит для предоставления удобный способ для конечных пользователей для доступа к дополнительным сведениям об элементе управления. Дополнительные сведения о может предоставлять информацию об авторском праве, контактные данные, сведения об авторе элемента управления или Сводка назначения элемента управления.  
  
> [!NOTE]
>  Как правило, нет смысла использовать <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> свойство для связывания содержимого справки. Лучший способ указать ссылку на справку для элемента управления является использование <xref:System.Web.UI.WebControls.WebParts.WebPart.HelpUrl%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода показано использование декларативного и программного <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> свойство. Полный исходный код для примера находится в разделе примеров <xref:System.Web.UI.WebControls.WebParts.IWebPart> Общие сведения о классе.  
  
 В первой части примера кода показывается, как пользовательский элемент управления реализует <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> свойство.  
  
 [!code-csharp[WebParts_IWebPart_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#7)]
 [!code-vb[WebParts_IWebPart_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#7)]  
  
 Во второй части примера кода демонстрируется использование метода в пользовательском элементе управления, который программно задает значение <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> свойства, когда пользователь выбирает соответствующее имя свойства с помощью переключателей на странице, задает новое значение в текстовом поле и затем нажимает **обновление** кнопки.  
  
> [!IMPORTANT]
>  В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-csharp[WebParts_IWebPart_Overview#9](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountusercontrolcs.ascx#9)]
 [!code-vb[WebParts_IWebPart_Overview#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountusercontrolvb.ascx#9)]  
  
 В третьей части в примере кода показано, как пользователю контролировать, реализующий <xref:System.Web.UI.WebControls.WebParts.IWebPart> ссылается на интерфейс <xref:System.Web.UI.WebControls.WebParts.WebPartZone> управления и как <xref:System.Web.UI.WebControls.WebParts.IWebPart.TitleUrl%2A> задано декларативно в элементе управления. Обратите внимание, что если не предоставить URL-адрес реальной страницы, а пользователь щелкает ссылку в заголовке окна, появится сообщение об ошибке.  
  
 [!code-aspx-csharp[WebParts_IWebPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPart_Overview/CS/accountuchostcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPart_Overview/VB/accountuchostvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebParts.WebPart.TitleUrl" />
        <altmember cref="P:System.Web.UI.WebControls.WebParts.GenericWebPart.TitleUrl" />
      </Docs>
    </Member>
  </Members>
</Type>