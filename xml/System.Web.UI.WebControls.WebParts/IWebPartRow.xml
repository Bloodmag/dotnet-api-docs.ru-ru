<Type Name="IWebPartRow" FullName="System.Web.UI.WebControls.WebParts.IWebPartRow">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fbdb5d69c96c8933ecd32de254fc3a7f8b9ae967" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36385404" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IWebPartRow" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWebPartRow" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.IWebPartRow" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWebPartRow" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWebPartRow" />
  <TypeSignature Language="F#" Value="type IWebPartRow = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Определяет интерфейс поставщика для связи двух серверных элементов управления с использованием одного поля данных.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот интерфейс предназначен для использования с подключениями к веб-части. Соединение веб-частей, двух серверных элементов управления, которые находятся в <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> зоны установления соединения и совместное использование данных с одного элемента управления, выступающего в качестве потребителя и элемент управления, выступающий в роли поставщика. Механизм для совместного использования данных в соединении веб-частей является экземпляр интерфейса, который поставщик предоставляет объекту-получателю с помощью метода обратного вызова. Для подключения потребителя и поставщика и обсудить с тем же типом интерфейса для совместного использования данных. Если потребитель не распознает тип интерфейса, отправленного поставщиком, существует возможность подключения элементов управления с помощью преобразователя ( <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> объекта), преобразует экземпляр интерфейса, отправленный поставщиком, в тип, который потребитель распознает. Дополнительные сведения о разделе <xref:System.Web.UI.WebControls.WebParts.WebPartConnection> и [Общие сведения о подключениях веб частей](http://msdn.microsoft.com/library/d98cfd0f-ebd6-4871-89d5-abbd2cdef67b).  
  
 <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> Интерфейс является интерфейсом поставщика с помощью элемента управления веб-частей задать в качестве стандартного интерфейса для создания связей на основе строки данных. Можно также создавать пользовательские интерфейсы для использования с подключениями к веб-части, но многих управляемых данными веб-приложений, это полезно для создания соединений с учетом с общим полем (Дополнительные сведения см. в разделе <xref:System.Web.UI.WebControls.WebParts.IWebPartField> интерфейса), таблица (Дополнительные сведения см. в разделе <xref:System.Web.UI.WebControls.WebParts.IWebPartTable> интерфейс) или строки из источника данных. В обычного соединения <xref:System.Web.UI.WebControls.WebParts.WebPart> управления действовать как поставщик должен реализовать <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> интерфейс, а также указать экземпляр интерфейса потребителям в специальный метод обратного вызова. Например, поставщик может реализовать <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> интерфейс для строки, которая относится к пользователю в таблице сведения пользователя. Другой <xref:System.Web.UI.WebControls.WebParts.WebPart> элемента управления, действующего в качестве объекта-получателя будет определять особый метод для получения экземпляра интерфейса и может затем извлекать пользовательские данные, использовать его для поиска дополнительной информации об учетных записях пользователя и отображения всех сведений об на странице этого пользователя.  
  
 <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> Интерфейс имеет два предоставленных членов. <xref:System.Web.UI.WebControls.WebParts.IWebPartRow.Schema%2A> Свойство возвращает сведений о строке данных, содержащийся в схеме <xref:System.ComponentModel.PropertyDescriptorCollection> объекта. <xref:System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData%2A> Метод объявляет метод, который использует реализации (например, элемент управления поставщика) для извлечения данных в строке экземпляр интерфейса при вызове метода обратного вызова.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется создание статического соединения между двумя элементами управления с помощью <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> интерфейса. В примере кода состоит из трех частей:  
  
-   Исходный код для двух пользовательских <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления, которые могут образовывать соединения с помощью <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> интерфейса с одним элементом управления, выступающего в качестве поставщика, а другой как получатель.  
  
-   Веб-страница, на которой размещены элементы управления и объявляется статическая связь в постоянном формате.  
  
-   Описание того, что происходит при выполнении примера кода.  
  
 Первая часть примера кода приведен исходный код для двух пользовательских элементов управления. Сначала приведен код для поставщика, который реализует <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> интерфейса. Для простоты в примере поставщик создает таблицу с данными, а не подключение к базе данных. `GetConnectionInterface` Метод служит в качестве точки подключения поставщика, метод обратного вызова, который возвращает экземпляр интерфейса потребителю. Как и для потребителя, он получает экземпляр интерфейса от поставщика в методе с именем `SetConnectionInterface`, которые отмечены с `ConnectionConsumer` атрибута. После получения экземпляр интерфейса, потребителя, в его `OnPreRender` метода вызывает реализацию <xref:System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData%2A> метод в поставщике, чтобы получить данные и записать его на странице.  
  
 Для выполнения примера кода необходимо скомпилировать этот исходный код. Можно выполнить явную компиляцию и поместить результирующую сборку в папку Bin веб-сайта или в глобальном кэше сборок. Кроме того можно поместить исходный код в папку App_Code веб-узла, где он будет динамически компилироваться во время выполнения. Данный пример кода использует динамической компиляции. Пошаговое руководство по компиляции см. в разделе [Пошаговое руководство: разработка и с помощью элемента управления пользовательского](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_IWebPartRow_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartRow_Overview/CS/IRowSamples.cs#2)]
 [!code-vb[WebParts_IWebPartRow_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartRow_Overview/VB/IRowSamples.vb#2)]  
  
 Вторая часть примера кода — веб-страницы, который объявляет статическая связь и размещены элементы управления. В верхней части страницы приведен `Register` директивы, объявляющий пространство имен исходного кода, содержащегося в каталоге App_Code. Подключение объявляется с помощью `<asp:webpartconnection>` элемента. Пользовательские элементы управления потребителя и поставщика, объявляются в `<zonetemplate>` элемент в пределах `<asp:webpartzone>` элемент, необходимый для их иметь возможность подключения (они должны находиться в пределах зоны, наследующий от <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> класса).  
  
 [!code-aspx-csharp[WebParts_IWebPartRow_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartRow_Overview/CS/defaultcs.aspx#1)]
 [!code-aspx-vb[WebParts_IWebPartRow_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartRow_Overview/VB/defaultvb.aspx#1)]  
  
 Загрузите страницу в браузере. Элемент управления потребителя отображает данные из указанной строки, обеспечивающую доступность через экземпляр поставщика <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> интерфейса.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.WebPartConnection" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebPartField" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.IWebPartTable" />
  </Docs>
  <Members>
    <Member MemberName="GetRowData">
      <MemberSignature Language="C#" Value="public void GetRowData (System.Web.UI.WebControls.WebParts.RowCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetRowData(class System.Web.UI.WebControls.WebParts.RowCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData(System.Web.UI.WebControls.WebParts.RowCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetRowData (callback As RowCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetRowData(System::Web::UI::WebControls::WebParts::RowCallback ^ callback);" />
      <MemberSignature Language="F#" Value="abstract member GetRowData : System.Web.UI.WebControls.WebParts.RowCallback -&gt; unit" Usage="iWebPartRow.GetRowData callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.UI.WebControls.WebParts.RowCallback" />
      </Parameters>
      <Docs>
        <param name="callback">Делегат <see cref="T:System.Web.UI.WebControls.WebParts.RowCallback" />, содержащий адрес метода, который получает данные.</param>
        <summary>Возвращает данные для строки, которая используется интерфейсом в качестве основы для связи между двумя элементами управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте этот метод для получения значений строк данных, передаваемых по интерфейсу. Поставщик реализует этот метод, а потребитель вызывает его в момент, когда он готов к обработке или визуализации данных.  
  
   
  
## Examples  
 В следующем примере кода показано, реализации и использовании <xref:System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData%2A> метода. Полный пример показан в обзоре класса <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> интерфейса. Реализует поставщик управления <xref:System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData%2A> метод, возвращение значения из конкретной строки в таблице данных. Потребитель вызывает метод управления <xref:System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData%2A> метода в его `OnPreRender` метода, чтобы страницы могут быть записаны значения данных.  
  
 [!code-csharp[WebParts_IWebPartRow_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartRow_Overview/CS/IRowSamples.cs#2)]
 [!code-vb[WebParts_IWebPartRow_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartRow_Overview/VB/IRowSamples.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Schema">
      <MemberSignature Language="C#" Value="public System.ComponentModel.PropertyDescriptorCollection Schema { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptorCollection Schema" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.IWebPartRow.Schema" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Schema As PropertyDescriptorCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::PropertyDescriptorCollection ^ Schema { System::ComponentModel::PropertyDescriptorCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Schema : System.ComponentModel.PropertyDescriptorCollection" Usage="System.Web.UI.WebControls.WebParts.IWebPartRow.Schema" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptorCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает данные схемы для строки данных, которая используется для совместного использования данных между двумя элементами управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />.</summary>
        <value>Объект <see cref="T:System.ComponentModel.PropertyDescriptorCollection" />, описывающий данные.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство предоставляет сведения о свойстве для данных. С помощью <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> интерфейса в соединении, получение <xref:System.ComponentModel.PropertyDescriptorCollection> объекта, который ссылается <xref:System.Web.UI.WebControls.WebParts.IWebPartRow.Schema%2A> свойство. Контракт указывает, что вызов `Schema[n].GetValue(RowData)` возвращает значение *n*столбцов в строке. Необходимо использовать <xref:System.Web.UI.WebControls.WebParts.IWebPartRow.Schema%2A> свойство для получения значений в строке.  
  
   
  
## Examples  
 В следующем примере кода показано, реализации и использовании <xref:System.Web.UI.WebControls.WebParts.IWebPartRow.Schema%2A> свойство. Полный пример показан в обзоре класса <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> интерфейса. Реализует поставщик управления <xref:System.Web.UI.WebControls.WebParts.IWebPartRow.Schema%2A> свойство. Затем потребитель элемента управления, в его `RenderContents` метод, запросы <xref:System.Web.UI.WebControls.WebParts.IWebPartRow.Schema%2A> свойство, чтобы получить сведения о строке, как он записывает данные строк на страницу.  
  
 [!code-csharp[WebParts_IWebPartRow_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_IWebPartRow_Overview/CS/IRowSamples.cs#2)]
 [!code-vb[WebParts_IWebPartRow_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_IWebPartRow_Overview/VB/IRowSamples.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.PropertyDescriptorCollection" />
      </Docs>
    </Member>
  </Members>
</Type>