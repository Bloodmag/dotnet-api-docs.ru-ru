<Type Name="ImportCatalogPart" FullName="System.Web.UI.WebControls.WebParts.ImportCatalogPart">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e60f977d3d6771beaef772d23c2c80d4825bd9b9" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36385913" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ImportCatalogPart : System.Web.UI.WebControls.WebParts.CatalogPart" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ImportCatalogPart extends System.Web.UI.WebControls.WebParts.CatalogPart" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ImportCatalogPart&#xA;Inherits CatalogPart" />
  <TypeSignature Language="C++ CLI" Value="public ref class ImportCatalogPart sealed : System::Web::UI::WebControls::WebParts::CatalogPart" />
  <TypeSignature Language="F#" Value="type ImportCatalogPart = class&#xA;    inherit CatalogPart" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebParts.CatalogPart</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Импортирует файл описания для элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> (или другого серверного элемента управления ASP.NET, используемого как элемент управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />), чтобы пользователи могли добавлять на веб-страницу элементы управления с предопределенными установками. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Управления позволяет пользователям импортировать файл описания, описываются параметры на <xref:System.Web.UI.WebControls.WebParts.WebPart> управления или серверный элемент управления, пользователю необходимо добавить <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> зоны.  
  
 После пользователь импортирует файл описания <xref:System.Web.UI.WebControls.WebParts.WebPart> в элемент управления, указанный в файле <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемента управления и пользователь может добавить элемент управления на страницу.  
  
 Имя файла описания не совпадает с самого элемента управления. Это XML-файл, который заканчивается. Расширение веб-части и содержит пары имя/значение — в основном значения свойств —, описывающие состояние элемента управления. Имя файла описания создается согласно указанному формату XML, как описано в разделе [файлы описание элемента управления веб-частями](http://msdn.microsoft.com/library/480992e4-8fc7-43f8-bffc-ae97bbdfe5b8).  
  
 Для управления, на который ссылается файл описания может быть либо скомпилирован в сборку, или он может быть определен в ASCX-файл пользовательского элемента управления. В любом случае элемент управления, ссылка в импортированном файле описания должен существовать на веб-сервере, на котором размещена страницы, который пытается импортировать элемент управления. Файл описания ссылается на элемент управления имя и сборку (или файл), содержащий элемент управления, и файл описания, содержащий параметры, влияющие на значения свойств, внешний вид и поведение элемента управления.  
  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Управления пользователи могут использовать общие параметры для элементов управления. Сложный элемент управления может иметь много свойств и параметров. Например, в узле выдающего в большой компании настраиваемый <xref:System.Web.UI.WebControls.WebParts.WebPart> управления может содержать несколько свойств, которые содержат значения, относящиеся к среде пользователей, например их подключения к базе данных, информация о подразделениях и т. д. Элемент управления также может содержать несколько свойств, которые влияют на его внешний вид. Один пользователь может персонализировать элемент управления на определенном сайте и добиться его нормальной работы, экспортировать файл описания для элемента управления, а затем предоставлять описание файла с другими пользователями, которые могут импортировать файл, чтобы добавить элемент управления полностью настроенный других интрасети сайты, которые они могут персонализировать. Пока скомпилированная сборка или файл пользовательского элемента управления, содержащего элемент управления существует на веб-сервере, на котором размещается их сайт, пользователи могут добавлять элемент управления на другие веб-сайты.  
  
 Представляет собой механизм, с помощью которого пользователи импортировать файл описания (и поэтому его связанный сервер управления) в веб-страницу <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемента управления, который разработчик страницы необходимо добавить на веб-страницу. Когда пользователь переключает страницу в режим отображения каталога, <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемент управления, и пользователь может использовать этот элемент управления, чтобы перейти к. Файл описания веб-части, соответствующий серверного элемента управления, который нужно импортировать. Пользовательский Интерфейс и инструкциями <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемента управления, пользователь может добавить необходимый серверный элемент управления на веб-страницу, внешний вид и свойства полностью настроена как указано в импортированном файле описания.  
  
 Прежде чем <xref:System.Web.UI.WebControls.WebParts.WebPart> можно импортировать файл описания для элемента управления, пользователь должен сначала создать (Экспорт) файл на основе существующего <xref:System.Web.UI.WebControls.WebParts.WebPart> элемента управления. Можно экспортировать файл описания для элемента управления, если выполняются следующие условия:  
  
-   Элемент управления имеет свойства, помеченные `Personalizable` атрибута.  
  
-   Файл Web.config содержит `enableExport` присвоено значение атрибута `true` на `<webParts>` элемент.  
  
-   Разработчик устанавливает значение <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> свойства элемента управления значение, отличное от значения по умолчанию из <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.None>, которое не допускает экспортирования. Если <xref:System.Web.UI.WebControls.WebParts.WebPart.ExportMode%2A> имеет значение <xref:System.Web.UI.WebControls.WebParts.WebPartExportMode.NonSensitiveData>, любое свойство, которое содержит <xref:System.Web.UI.WebControls.WebParts.PersonalizableAttribute.IsSensitive%2A> параметр с `Personalizable` атрибута не экспортируются, когда пользователь экспортирует файл описания. Это позволяет разработчикам элемента управления для предотвращения конфиденциальные данные, такие как строки соединения, экспортируемых в определенных ситуациях.  
  
 Пользователь может экспортировать элемент управления, который был включен для экспорта, щелкнув команду Экспорт, которая отображается в меню команд элемента управления и следуйте инструкциям для сохранения. Файл описания веб-части для элемента управления. Другие пользователи могут затем импортировать этот файл для конфигурирования собственных экземпляров элемента управления.  
  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Класс содержит несколько свойств. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> Свойство содержит текст инструкции для пользователей при просмотре найдите файл описания. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> Свойство содержит текст, который служит в качестве метки для импортированного элемента управления, как оно отображается в <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемента управления. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> Содержит текст, который отображается, если ошибка возникает, когда выполняется импорт описание элемента управления. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> Свойство переопределяет базовое свойство, чтобы назначить заголовок по умолчанию для <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> управление, если разработчик не назначает заголовок. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> Свойство содержит текст для кнопки, пользователь нажимает кнопку, чтобы отправить файл описания и <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> свойство содержит инструкции по в процессе загрузки.  
  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Класс также содержит несколько методов уникальным. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> Метод извлекает <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> объекта для каждого <xref:System.Web.UI.WebControls.WebParts.WebPart> управления из каталога, который позволяет <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемента управления для отображения сведений о каждом элементе управления сервера без необходимости создавать его экземпляр. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> Метод возвращает экземпляр конкретной <xref:System.Web.UI.WebControls.WebParts.WebPart> элемента управления, на основе описания, переданного методу.  
  
 Существуют некоторые специфические угрозы, связанные с использованием <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемента управления. Примером является возможность импортирования вредоносных данных в веб-приложения через файлы описания, используемые для импорта. Если кто-то разместил вредоносный код скрипта в качестве значения строкового свойства в файле описания, затем этот скрипт потенциально может быть выполнен, если пользователь импортирует файл описания и добавляет серверного элемента управления на веб-страницу. Чтобы свести к минимуму риск импортирования файлов описания с вредоносными данными, серверные элементы управления со строковыми свойствами должны обязательно кодировать данные свойства. Еще один риск связан с импортированием типов через файлы описания (см. [файлы описание элемента управления веб-частями](http://msdn.microsoft.com/library/480992e4-8fc7-43f8-bffc-ae97bbdfe5b8)). Пользователь-злоумышленник может отправлять запросы на загрузку многочисленных сборок в <xref:System.AppDomain>, что может привести к использованию чрезмерного объема памяти.  
  
 Чтобы избежать рисков, связанных с импортом, можно отключить функцию полностью, не с помощью функции импорта или <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемента управления. Или можно ограничить, какие пользователи имеют доступ к элементу управления. Это можно сделать программно, используя управление ролями (см. [управление ролями с помощью авторизации](http://msdn.microsoft.com/library/01954ce4-39a2-487f-8153-a69f6f6f3195)). Например при загрузке страницы, можно проверить ли пользователь в определенные роли, например роль администратора. Если пользователь входит в роль, то можно программно добавить <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> для этого пользователя на страницу элемент управления. Может также использовать декларативный подход, чтобы ограничить набор пользователей, которые можно использовать <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемента управления.  На веб-странице, который содержит каталог, можно поместить два <xref:System.Web.UI.WebControls.WebParts.CatalogZone> элементов управления: один для пользователей, которые можно импортировать и один для тех, кто не может. Содержит зоны для пользователей, которые можно импортировать <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемента управления. Сама зона может быть размещен в <xref:System.Web.UI.WebControls.LoginView> элемента управления, который позволяет ограничить использование элемента управления в зоне, чтобы только те, прошедшие проверку подлинности пользователей или ролей, указанных вами.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> управления декларативно и программно на веб-странице. Пример состоит из четырех частей.  
  
-   Пользовательский элемент управления, позволяющий изменять режимы отображения на веб-странице.  
  
-   Веб-страницы, содержащий <xref:System.Web.UI.WebControls.WebParts.CatalogZone> управления и <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемента управления.  
  
-   Файл исходного кода, который содержит две пользовательские <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления.  
  
-   Пояснения к работе примера при загрузке страницы в браузере.  
  
 Первая часть данный пример кода является пользовательский элемент управления, позволяющий пользователям изменять режимы отображения на веб-странице. Следует поместить следующий исходный код в файл с именем Displaymodemenucs.ascx или Displaymodemenuvb.ascx (в зависимости от того, какой язык используется). Сведения о режимах отображения и описание исходного кода в этом элементе управления, см. в разделе [Пошаговое руководство: изменение режима отображения страницы](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/DisplayModeMenuVB.ascx#7)]  
  
 Вторая часть примера кода — это веб-страницы. В верхней части страницы могут быть две `register` директивы: для пользовательского элемента управления и для скомпилированных компонента, содержащего две пользовательские <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления. Обратите внимание, что страница имеет декларативную ссылку <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемента управления, вложенные в соответствующей иерархии декларативных элементов. Обратите внимание, что некоторые значения свойств, назначенные декларативно на `<asp:importcatalogpart>` элемент. Кроме того `Button1_Click` метод обновляет количество значений свойств на <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемента управления.  
  
 На странице <xref:System.Web.UI.WebControls.WebParts.WebPartZone> управления, две пользовательские <xref:System.Web.UI.WebControls.WebParts.WebPart> объявленные элементы управления. `<aspSample:userinfowebpart>` Управления имеет `exportmode="all"` атрибут на нем. Этот атрибут необходим, чтобы пользователи могли экспортировать файл описания для элемента управления, который может быть импортирован другими пользователями, которым требуется импортировать элемент управления с помощью файла описания.  
  
> [!NOTE]
>  Чтобы пользователи приложения веб-частей, чтобы экспортировать файл описания для <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления, необходимо также включить функцию экспорта веб-приложения путем добавления `enableExport="true"` атрибут `<webParts>` элемент (который является потомком `<system.web>`элемент) в файле Web.config. Экспорт отключен по умолчанию, поэтому если вы еще не включена для приложения, измените файл Web.config и сделайте это сейчас.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#1)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#1)]  
  
 Третья часть примера кода приведен исходный код для двух <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления. Обратите внимание, что некоторые свойства для этих элементов управления будут отмечены `WebBrowsable` атрибута. Это позволяет <xref:System.Web.UI.WebControls.WebParts.PropertyGridEditorPart> элемента управления динамически создает пользовательский интерфейс (UI), пользователь может изменить эти свойства, если элементы управления находятся в режиме редактирования. Эти свойства также помечены с `WebDisplayName` атрибут, чтобы указать текст метки, появляющейся рядом с каждым элементом управления в пользовательский Интерфейс редактирования. Для выполнения примера кода необходимо скомпилировать этот исходный код. Можно выполнить явную компиляцию и поместить результирующую сборку в папку Bin веб-сайта или в глобальном кэше сборок. Кроме того можно поместить исходный код в папку App_Code веб-узла, где он будет динамически компилироваться во время выполнения. Данный пример кода использует динамической компиляции. Пошаговое обоих методов компиляции см. в разделе [Пошаговое руководство: разработка и с помощью элемента управления пользовательского](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 Пользовательский элемент управления с именем `TextDisplayWebPart` имеется ссылка на веб-странице с `<aspSample:TextDisplayWebPart>` элемента. Другой элемент управления, вызывается `UserInfoWebPart`, также объявляется на веб-странице изначально, хотя он более поздней версии, чтобы продемонстрировать возможность импортировать файл описания для элемента управления будет удален.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/userinfowebpart.vb#6)]  
  
 Теперь можно запустите в примере кода. Загрузите веб-страницу в браузере. Первым шагом является изменение `UserInfoWebPart` элемента управления. Используйте **режим отображения** управления раскрывающегося списка и выберите **изменить** для переключения страницы в режим редактирования. Щелкните меню команд `UserInfoWebPart` управления (стрелка вниз в заголовке окна), а затем щелкните **изменить**. Когда появится пользовательский Интерфейс редактирования, несколько элементов управления редактированием отображаются под `UserInfoWebPart` элемент управления, который можно использовать для редактирования значений полей. Изменение некоторых полей, щелкните **ОК**, а затем с помощью **режим отображения** раскрывающийся список для возврата страницы в режим просмотра.  
  
 Второй шаг — для экспорта. Файл описания веб-части для `UserInfoWebPart` элемента управления. Щелкните меню команд для пользовательского элемента управления (представленным стрелку вниз в заголовке окна) и нажмите кнопку **Экспорт**. Следуйте инструкциям, чтобы сохранить. Файл описания веб-части для элемента управления. Теперь закройте веб-страницу и измените исходный код страницы в редакторе. Удалить `<aspSample:userinfowebpart>` управления элемент объявления, а затем сохраните и закройте файл. (Этот шаг, чтобы имитировать пользователя, который еще не выполняется `UserInfoWebPart` элемента управления можно импортировать на страницу).  
  
 Загрузите веб-страницы в браузере. `UserInfoWebPart` Управления не отображается, поскольку он был удален. Используйте **режим отображения** управления раскрывающегося списка и выберите **каталога** для переключения страницы в режим каталога. В <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> управлять, щелкните **Обзор** кнопку и перейдите к. Веб-части файла был создан, а затем щелкните **отправить** кнопки. Ссылку на элемент управления отображаться флажок рядом с ним. Установите флажок, а затем нажмите кнопку **добавить** Добавление элемента управления на страницу.  
  
 Хотя в этом представлении страницы, нажмите кнопку **ImportCatalogPart обновление** кнопки в нижней части страницы, чтобы увидеть эффект программное обновление значения свойства на <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемента управления. После нажатия кнопки, контролирует изменение различных свойств в пользовательском Интерфейсе.  
  
 Наконец, нажмите кнопку **закрыть** для выхода из режима каталога и вернуть страницу в режиме просмотра. `UserInfoWebPart` Элемент управления должен появиться на странице, содержащий значения, которые он имел во экспортированный ранее.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WebParts.PageCatalogPart" />
    <altmember cref="T:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ImportCatalogPart ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ImportCatalogPart();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.%23ctor%2A> Конструктор является значение по умолчанию, конструктор не объявлена в <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> класса и поэтому не специальные действия выполняются при создании нового экземпляра класса. Платформа .NET Framework использует конструктор для создания экземпляра класса.  
  
 Обычно не требуется использовать <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.%23ctor%2A> конструктор программными средствами в собственном коде. Предполагаемое использование элемента управления — для разработчиков страниц добавить его на страницу декларативно во время разработки.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BrowseHelpText">
      <MemberSignature Language="C#" Value="public string BrowseHelpText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BrowseHelpText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText" />
      <MemberSignature Language="VB.NET" Value="Public Property BrowseHelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BrowseHelpText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BrowseHelpText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает текстовое сообщение, сообщающее пользователям о необходимости поиска расположения файла описания.</summary>
        <value>Строка, содержащая текст сообщения. Используемым по умолчанию значением является соответствующее языку и региональным стандартам сообщение, которое предоставляет платформа .NET Framework.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> Свойство дает пользователям краткий обзор прежде всего, их необходимо сделать в процессе добавления импортированный элемент: укажите расположение файла описания, введя в пути или перейти к файлу. Типичная причина для изменения значения этого свойства — Если у вас есть особые инструкции для пользователей, например определенную сетевую папку, к которой они должны Обзор, чтобы найти файл описания.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> свойство декларативно и программно. Полный текст кода и инструкции, необходимые для запуска этого примера, см. в разделе примеров <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Общие сведения о классе.  
  
 Обратите внимание, что в следующем фрагменте кода <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> декларативно устанавливается значение для элемента управления.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 В этом разделе кода <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> программным образом присваивается значение свойства.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 При загрузке страницы в браузере, можно использовать **режим отображения** управления раскрывающегося списка, чтобы выбрать **режим каталога** и переключения страницы в режим каталога. На странице в режиме каталога и отправить файл описания Обратите внимание различные текстовые строки, отображается в пользовательском интерфейсе (UI) для <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемента управления. При нажатии кнопки **передать файл описание** кнопку текст для нескольких свойств в пользовательский Интерфейс изменяется, включая текст для <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.BrowseHelpText%2A> свойства.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : unit -&gt; unit" Usage="importCatalogPart.CreateChildControls " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultButton">
      <MemberSignature Language="C#" Value="public override string DefaultButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.DefaultButton" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DefaultButton As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DefaultButton { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultButton : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.DefaultButton" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает, какая кнопка в интерфейсе пользователя обрабатывается как кнопка по умолчанию, получающая фокус во время отрисовки формы, содержащей кнопку. Это свойство не предназначено для непосредственного вызова из кода разработчика страницы.</summary>
        <value>Строка, содержащая идентификатор объекта <see cref="T:System.Web.UI.WebControls.Button" />, которая получает фокус по умолчании в элементе управления <see cref="T:System.Web.UI.WebControls.Panel" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Код для этого свойства переопределяет базовое свойство наследуется от <xref:System.Web.UI.WebControls.Panel> класс, чтобы скрыть свойство от разработчиков и защитить его от применения тем. На то, что он является открытым, это свойство используется внутри элемента управления веб-частей для отрисовки данного элемента управления по умолчанию и не предназначен для использования разработчиками страниц.  
  
 Значение для данного свойства нельзя задать с помощью тем или тем таблиц стилей. Дополнительные сведения см. в разделе <xref:System.Web.UI.ThemeableAttribute> и [ASP.NET тем и обложек](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Panel.DefaultButton" />
      </Docs>
    </Member>
    <Member MemberName="GetAvailableWebPartDescriptions">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection GetAvailableWebPartDescriptions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection GetAvailableWebPartDescriptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetAvailableWebPartDescriptions () As WebPartDescriptionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::WebControls::WebParts::WebPartDescriptionCollection ^ GetAvailableWebPartDescriptions();" />
      <MemberSignature Language="F#" Value="override this.GetAvailableWebPartDescriptions : unit -&gt; System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection" Usage="importCatalogPart.GetAvailableWebPartDescriptions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает коллекцию описаний доступных элементов управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" /> в каталоге.</summary>
        <returns>Коллекция <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescriptionCollection" />, содержащая объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" /> для каждого элемента управления в каталоге.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> Метод предоставляет реализацию абстрактного метода базового класса, объявленных в <xref:System.Web.UI.WebControls.WebParts.CatalogPart> класса. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> Метод возвращает сведения об описании для каждого элемента управления в каталоге. Обратите внимание, что в случае использования <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> контроля, может существовать только один сервер управления в каталоге одновременно, несмотря на то, что метод будет работать при наличии нескольких элементов управления.  
  
 Объект <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> объект — это объект, содержащий основные сведения о <xref:System.Web.UI.WebControls.WebParts.WebPart> управления, включая его идентификатор ссылки на объект в элементе управления и значений несколько важных свойств, которые наследуются от <xref:System.Web.UI.WebControls.WebParts.Part> класса, такие как <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A> и <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A>.  
  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> Метод повышает производительность. При создании каталога требуются сведения о каждом элементе управления, содержащихся в нем, включая название, описание, значок (если он существует) и идентификатор. Вместо того, чтобы создать экземпляр каждого элемента управления для получения этих сведений <xref:System.Web.UI.WebControls.WebParts.CatalogZoneBase> зоны, создается каталог вызовы <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> метода, а вызов возвращает только сведения об описании для элемента управления, а не экземпляр элемент управления.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> метода на веб-странице. Пример состоит из четырех частей.  
  
-   Пользовательский элемент управления, позволяющий изменять режимы отображения на веб-странице.  
  
-   Веб-страницы, содержащий <xref:System.Web.UI.WebControls.WebParts.CatalogZone> управления и <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> управления, а также код, использующий <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> метод.  
  
-   Файл исходного кода, который содержит две пользовательские <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления.  
  
-   Пояснения к работе примера при загрузке страницы в браузере.  
  
 Первая часть данный пример кода является пользовательский элемент управления, позволяющий пользователям изменять режимы отображения на веб-странице. Следует поместить следующий исходный код в файл с именем Displaymodemenucs.ascx или Displaymodemenuvb.ascx (в зависимости от того, какой язык используется). Сведения о режимах отображения и описание исходного кода в этом элементе управления, см. в разделе [Пошаговое руководство: изменение режима отображения страницы](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/DisplayModeMenuVB.ascx#7)]  
  
 Вторая часть примера кода — это веб-страницы. В верхней части страницы могут быть две `register` директивы: для пользовательского элемента управления и для скомпилированных компонента, содержащего две пользовательские <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления. Оба эти элемента управления указываются декларативно в разметке страницы. Для декларативных ссылок на <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления (начинающиеся с `aspSample` префикс), обратите внимание, что каждый `exportMode="all"` атрибут добавляется к нему. Этот атрибут позволяет экспортировать. Файл описания веб-части для элемента управления, который будет использоваться в последующих шага для импорта элемента управления на страницу.  
  
> [!NOTE]
>  Чтобы пользователи приложения веб-частей, чтобы экспортировать файл описания для <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления, необходимо также включить функцию экспорта веб-приложения путем добавления `enableExport="true"` атрибут `<webParts>` элемент (который является потомком `<system.web>`элемент) в файле Web.config. Экспорт отключен по умолчанию, поэтому если вы еще не включена для приложения, измените файл Web.config и сделайте это сейчас.  
  
 Веб-страница также имеет декларативную ссылку <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемента управления, вложенные в соответствующей иерархии декларативных элементов. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> Метод вызывается из кода `Button1_Click` метод.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/ImportCatalogPart_GetCS.aspx#1)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/ImportCatalogPart_GetVB.aspx#1)]  
  
 Третья часть примера кода приведен исходный код для двух <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления. Для выполнения примера кода необходимо скомпилировать этот исходный код. Можно выполнить явную компиляцию и поместить результирующую сборку в папку Bin веб-сайта или в глобальном кэше сборок. Кроме того можно поместить исходный код в папку App_Code веб-узла, где он будет динамически компилироваться во время выполнения. Данный пример кода использует динамической компиляции. Пошаговое обоих методов компиляции см. в разделе [Пошаговое руководство: разработка и с помощью элемента управления пользовательского](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/userinfowebpart.vb#6)]  
  
 Теперь можно запустите в примере кода. Загрузите веб-страницу в браузере. Первым шагом является экспорта. Файл описания веб-части для каждого <xref:System.Web.UI.WebControls.WebParts.WebPart> управления (для `TextDisplayWebPart` и `UserInfoWebPart` управления). Для каждого элемента управления, щелкните меню команд для элемента управления (представленным стрелку вниз в заголовке окна) и нажмите кнопку **Экспорт**. Следуйте инструкциям, чтобы сохранить. Файл описания веб-части для элемента управления. После экспорта файл описания для каждого элемента управления, закрыть страницу и измените исходный код страницы в редакторе. Удалить `<aspSample:userinfowebpart>` и `<aspSample:textdisplaywebpart>` объявление элементы управления, затем сохраните и закройте файл. (Выполняется этот шаг, чтобы имитировать пользователя, который не содержит эти элементы управления, поэтому можно импортировать элементы управления на страницу).  
  
 Загрузите веб-страницы в браузере. Используйте **режим отображения** управления раскрывающегося списка и выберите **каталога** для переключения страницы в режим каталога. В <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> управлять, щелкните **Обзор** кнопку, перейдите в. Файлы веб-части, вы создали, выберите один, а затем нажмите кнопку **отправить** кнопки. Ссылку на элемент управления отображаться флажок рядом с ним. Установите флажок, а затем нажмите кнопку **добавить** Добавление элемента управления на страницу. Повторите этот процесс для другого элемента управления.  
  
 Хотя в этом представлении страницы, нажмите кнопку **получить описание веб-части** кнопки в нижней части страницы, чтобы увидеть эффект программном доступе к <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> объекта в данный момент загрузить описание элемента управления <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемента управления. Метод, используемый для доступа к подробных сведений, найден в `Button1_Click` источника страницы, в противном случае <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions%2A> метод. Метка под кнопкой отображает основные сведения об элементе управления.  
  
 После добавления первого элемента управления, повторите процесс, чтобы добавить второй элемент управления на страницу. Наконец, нажмите кнопку **закрыть** для выхода из режима каталога и вернуть страницу в режиме просмотра. Оба элемента управления должен появиться на странице, содержащий значения, которые они имели при экспортирования файлов описания.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)" />
      </Docs>
    </Member>
    <Member MemberName="GetWebPart">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.WebParts.WebPart GetWebPart (System.Web.UI.WebControls.WebParts.WebPartDescription description);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.WebControls.WebParts.WebPart GetWebPart(class System.Web.UI.WebControls.WebParts.WebPartDescription description) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart(System.Web.UI.WebControls.WebParts.WebPartDescription)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetWebPart (description As WebPartDescription) As WebPart" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::WebControls::WebParts::WebPart ^ GetWebPart(System::Web::UI::WebControls::WebParts::WebPartDescription ^ description);" />
      <MemberSignature Language="F#" Value="override this.GetWebPart : System.Web.UI.WebControls.WebParts.WebPartDescription -&gt; System.Web.UI.WebControls.WebParts.WebPart" Usage="importCatalogPart.GetWebPart description" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WebParts.WebPart</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="description" Type="System.Web.UI.WebControls.WebParts.WebPartDescription" />
      </Parameters>
      <Docs>
        <param name="description">Объект <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" />, содержащий сведения об элементе управления.</param>
        <summary>Возвращает ссылку на элемент управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />, основанный на значениях в описании, передаваемом в метод.</summary>
        <returns>Элемент управления <see cref="T:System.Web.UI.WebControls.WebParts.WebPart" />, описание которого совпадает со значениями в параметре <paramref name="description" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> Метод возвращает ссылку на <xref:System.Web.UI.WebControls.WebParts.WebPart> управления которого описания элементов соответствуют значениям <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> объект, переданный в метод. Как правило, этот метод используется вместе с <xref:System.Web.UI.WebControls.WebParts.DeclarativeCatalogPart.GetAvailableWebPartDescriptions%2A> метод, который используется для получения описания элементов управления в каталоге. Отдельные <xref:System.Web.UI.WebControls.WebParts.WebPart> затем можно извлечь или обрабатываться при необходимости путем передачи отдельных элементов управления <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> объектов <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> метод.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> метода на веб-странице. Пример состоит из четырех частей.  
  
-   Пользовательский элемент управления, позволяющий изменять режимы отображения на веб-странице.  
  
-   Веб-страницы, содержащий <xref:System.Web.UI.WebControls.WebParts.CatalogZone> управления и <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> управления, а также код, использующий <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> метод.  
  
-   Файл исходного кода, который содержит две пользовательские <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления.  
  
-   Пояснения к работе примера при загрузке страницы в браузере.  
  
 Первая часть данный пример кода является пользовательский элемент управления, позволяющий пользователям изменять режимы отображения на веб-странице. Следует поместить следующий исходный код в файл с именем Displaymodemenucs.ascx или Displaymodemenuvb.ascx (в зависимости от того, какой язык используется). Сведения о режимах отображения и описание исходного кода в этом элементе управления, см. в разделе [Пошаговое руководство: изменение режима отображения страницы](http://msdn.microsoft.com/library/24e42f74-82dc-4c13-8574-130398985fc0).  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/DisplayModeMenuCS.ascx#7)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/DisplayModeMenuVB.ascx#7)]  
  
 Вторая часть примера кода — это веб-страницы. В верхней части страницы могут быть две `register` директивы: для пользовательского элемента управления и для скомпилированных компонента, содержащего две пользовательские <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления. Оба эти элемента управления указываются декларативно в разметке страницы. Для декларативных ссылок на <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления (начинающиеся с `aspSample` префикс), обратите внимание, что каждый `exportMode="all"` атрибут добавляется к нему. Этот атрибут позволяет экспортировать. Файл описания веб-части для элемента управления, который будет использоваться в последующих шага для импорта элемента управления на страницу.  
  
> [!NOTE]
>  Чтобы пользователи приложения веб-частей, чтобы экспортировать файл описания для <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления, необходимо также включить функцию экспорта веб-приложения путем добавления `enableExport="true"` атрибут `<webParts>` элемент (который является потомком `<system.web>`элемент) в файле Web.config. Экспорт отключен по умолчанию, поэтому если вы еще не включена для приложения, измените файл Web.config и сделайте это сейчас.  
  
 Веб-страница также имеет декларативную ссылку <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемента управления, вложенные в соответствующей иерархии декларативных элементов. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> Метод вызывается из кода `Button2_Click` метод.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/ImportCatalogPart_GetCS.aspx#1)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Get#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/ImportCatalogPart_GetVB.aspx#1)]  
  
 Третья часть примера кода приведен исходный код для двух <xref:System.Web.UI.WebControls.WebParts.WebPart> элементов управления. Для выполнения примера кода необходимо скомпилировать этот исходный код. Можно выполнить явную компиляцию и поместить результирующую сборку в папку Bin веб-сайта или в глобальном кэше сборок. Кроме того можно поместить исходный код в папку App_Code веб-узла, где он будет динамически компилироваться во время выполнения. Данный пример кода использует динамической компиляции. Пошаговое обоих методов компиляции см. в разделе [Пошаговое руководство: разработка и с помощью элемента управления пользовательского](http://msdn.microsoft.com/library/6d90782a-a1a4-45a6-b2d4-cf6362b83b08).  
  
 [!code-csharp[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/CS/userinfowebpart.cs#6)]
 [!code-vb[WebParts_ImportCatalogPart_Get#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Get/VB/userinfowebpart.vb#6)]  
  
 Теперь можно запустите в примере кода. Загрузите веб-страницу в браузере. Первым шагом является экспорта. Файл описания веб-части для каждого <xref:System.Web.UI.WebControls.WebParts.WebPart> управления (для `TextDisplayWebPart` и `UserInfoWebPart` управления). Для каждого элемента управления, щелкните меню команд для элемента управления (представленным стрелку вниз в заголовке окна) и нажмите кнопку **Экспорт**. Следуйте инструкциям, чтобы сохранить. Файл описания веб-части для элемента управления. После экспорта файл описания для каждого элемента управления, закрыть страницу и измените исходный код страницы в редакторе. Удалить `<aspSample:userinfowebpart>` и `<aspSample:textdisplaywebpart>` объявление элементы управления, затем сохраните и закройте файл. (Выполняется этот шаг, чтобы имитировать пользователя, который не содержит эти элементы управления, поэтому можно импортировать элементы управления на страницу).  
  
 Загрузите веб-страницы в браузере. Используйте **режим отображения** управления раскрывающегося списка и выберите **каталога** для переключения страницы в режим каталога. В <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> управлять, щелкните **Обзор** кнопку, перейдите в. Файлы веб-части, вы создали, выберите один, а затем нажмите кнопку **отправить** кнопки. Ссылку на элемент управления отображаться флажок рядом с ним. Теперь, когда описание элемента управления загружается в <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> управлять, щелкните **GetWebPart используйте** кнопки в нижней части страницы. Это позволит проверить результат многократного вызова <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> метода и передачи в описание элемента управления, загруженных в данный момент <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемента управления. Обратите внимание, что связанный серверный элемент управления добавляется немедленно веб-страницу, без участия пользователя нажмите кнопку **добавить** кнопки. <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetWebPart%2A> Метод, который вызывается в `Button2_Click` исходный код страницы, метод возвращает <xref:System.Web.UI.WebControls.WebParts.WebPart> элемента управления, связанного с текущим описанием, загруженных в <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемента управления. Далее <xref:System.Web.UI.WebControls.WebParts.WebPartManager.AddWebPart%2A> вызывается метод и <xref:System.Web.UI.WebControls.WebParts.WebPart> элемент управления добавляется непосредственно на страницу. Это показывает, как добавить элемент управления программными средствами с <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> управления без вмешательства пользователя.  
  
 После добавления первого элемента управления, повторите процесс, чтобы добавить второй элемент управления на страницу. Наконец, нажмите кнопку **закрыть** для выхода из режима каталога и вернуть страницу в режиме просмотра. Оба элемента управления должен появиться на странице, содержащий значения, которые они имели при экспортирования файлов описания.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Свойство <paramref name="description" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="description" /> не является доступным значением <see cref="T:System.Web.UI.WebControls.WebParts.WebPartDescription" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.GetAvailableWebPartDescriptions" />
      </Docs>
    </Member>
    <Member MemberName="ImportedPartLabelText">
      <MemberSignature Language="C#" Value="public string ImportedPartLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImportedPartLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText" />
      <MemberSignature Language="VB.NET" Value="Public Property ImportedPartLabelText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImportedPartLabelText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImportedPartLabelText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает текст, отображаемый после импортирования пользователем файла описания, для представления или описания импортированного элемента управления в каталоге импортируемых элементов управления.</summary>
        <value>Строка, содержащая текст метки. Используемым по умолчанию значением является соответствующее языку и региональным стандартам сообщение, которое предоставляет платформа .NET Framework.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> Свойство обычно используется для коротких, общие метку, описание элемента управления, содержащихся в <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемента управления.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> свойство декларативно и программно. Полный текст кода и инструкции, необходимые для запуска этого примера, см. в разделе примеров <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Общие сведения о классе.  
  
 Обратите внимание, что в следующем фрагменте кода <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> декларативно устанавливается значение для элемента управления.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 В этом разделе кода <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> программным образом присваивается значение свойства.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 При загрузке страницы в браузере, можно использовать **режим отображения** управления раскрывающегося списка, чтобы выбрать **режим каталога** и переключения страницы в режим каталога. На странице в режиме каталога и отправить файл описания Обратите внимание различные текстовые строки, отображается в пользовательском интерфейсе (UI) для <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемента управления. При нажатии кнопки **передать файл описание** кнопку текст для нескольких свойств в пользовательский Интерфейс изменяется, включая текст для <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.ImportedPartLabelText%2A> свойства.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="importCatalogPart.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="importCatalogPart.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PartImportErrorLabelText">
      <MemberSignature Language="C#" Value="public string PartImportErrorLabelText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PartImportErrorLabelText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText" />
      <MemberSignature Language="VB.NET" Value="Public Property PartImportErrorLabelText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PartImportErrorLabelText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PartImportErrorLabelText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает сообщение об ошибке, отображаемое, если происходит ошибка во время процесса импортирования.</summary>
        <value>Строка, содержащая текст метки. Используемым по умолчанию значением является соответствующее языку и региональным стандартам сообщение, которое предоставляет платформа .NET Framework.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> Свойство полезно для уведомления пользователей, если некоторые проблемы или ошибка возникает, когда страница пытается импортировать файл описания.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> свойство декларативно и программно. Полный текст кода и инструкции, необходимые для запуска этого примера, см. в разделе примеров <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Общие сведения о классе.  
  
 Обратите внимание, что в следующем фрагменте кода <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> декларативно устанавливается значение для элемента управления.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 В этом разделе кода <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> программным образом присваивается значение свойства.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 При загрузке страницы в браузере, можно использовать **режим отображения** управления раскрывающегося списка, чтобы выбрать **режим каталога** и переключения страницы в режим каталога. На странице в режиме каталога и отправить файл описания Обратите внимание различные текстовые строки, отображается в пользовательском интерфейсе (UI) для <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемента управления. При нажатии кнопки **передать файл описание** кнопку текст для нескольких свойств в пользовательский Интерфейс изменяется, включая текст для <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.PartImportErrorLabelText%2A> свойства.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="importCatalogPart.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="importCatalogPart.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebParts.ImportCatalogPart.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="importCatalogPart.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public override string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает название, появляющееся в заголовке окна элемента управления <see cref="T:System.Web.UI.WebControls.WebParts.ImportCatalogPart" />.</summary>
        <value>Строка, используемая в качестве заголовка элемента управления. Значением по умолчанию является вычисляемое имя элемента управления, которое предоставляет набор элементов управления веб-частей.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> Значение свойства отображается в строке заголовка <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> управления, когда элемент управления является видимым в режиме каталога. При объявлении элемента управления на странице можно задать значение для свойства с помощью `Title` атрибута. Если не нужно вводить значение для заголовка, значение по умолчанию, зависящая от языка и региональных параметров используется для описания типа, этот элемент управления позволяет пользователям редактировать свойства.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> свойство декларативно и программно. Полный текст кода и инструкции, необходимые для запуска этого примера, см. в разделе примеров <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Общие сведения о классе.  
  
 Обратите внимание, что в следующем фрагменте кода <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> декларативно устанавливается значение для элемента управления.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 В этом разделе кода <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> программным образом присваивается значение свойства.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 При загрузке страницы в браузере, можно использовать **режим отображения** управления раскрывающегося списка, чтобы выбрать **режим каталога** и переключения страницы в режим каталога. На странице в режиме каталога и отправить файл описания Обратите внимание различные текстовые строки, отображается в пользовательском интерфейсе (UI) для <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемента управления. При нажатии кнопки **передать файл описание** кнопку текст для нескольких свойств в пользовательский Интерфейс изменяется, включая текст для <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.Title%2A> свойства.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadButtonText">
      <MemberSignature Language="C#" Value="public string UploadButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UploadButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText" />
      <MemberSignature Language="VB.NET" Value="Public Property UploadButtonText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UploadButtonText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UploadButtonText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает текст для элемента управления <see cref="T:System.Web.UI.WebControls.Button" />, который запускает отправку файла описания.</summary>
        <value>Строка, используемая в качестве текста для <see cref="T:System.Web.UI.WebControls.Button" />. Используемым по умолчанию значением является соответствующая языку и региональным параметрам строка, которую предоставляет набор элементов управления веб-частей.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> Свойство предоставляет текст для <xref:System.Web.UI.WebControls.Button> элемента управления, который инициирует процесс передачи. Если для этого свойства или назначить настраиваемый текст <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> свойства, текст должно было ясно, что пользователь отправляет файл описания. Текст должен сказать, или не означает, что процесс отправки выполняет отправку самого элемента управления.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> свойство декларативно и программно. Полный текст кода и инструкции, необходимые для запуска этого примера, см. в разделе примеров <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Общие сведения о классе.  
  
 Обратите внимание, что в следующем фрагменте кода <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> декларативно устанавливается значение для элемента управления.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 В этом разделе кода <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> программным образом присваивается значение свойства.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 При загрузке страницы в браузере, можно использовать **режим отображения** управления раскрывающегося списка, чтобы выбрать **режим каталога** и переключения страницы в режим каталога. На странице в режиме каталога и отправить файл описания Обратите внимание различные текстовые строки, отображается в пользовательском интерфейсе (UI) для <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемента управления. При нажатии кнопки **передать файл описание** кнопку текст для нескольких свойств в пользовательский Интерфейс изменяется, включая текст для <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> свойства.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UploadHelpText">
      <MemberSignature Language="C#" Value="public string UploadHelpText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UploadHelpText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText" />
      <MemberSignature Language="VB.NET" Value="Public Property UploadHelpText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UploadHelpText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UploadHelpText : string with get, set" Usage="System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает текст сообщения, информирующего пользователя о том, как отправлять файл описания.</summary>
        <value>Строка, используемая в качестве инструкций для пользователя по отправке файла описания. Используемым по умолчанию значением является соответствующая языку и региональным параметрам строка, которую предоставляет набор элементов управления веб-частей.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> Свойство предоставляет краткие предложения или фразы инструкции для пользователей, с просьбой нажать кнопку, чтобы отправить файл описания. Если для этого свойства или назначить настраиваемый текст <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadButtonText%2A> свойства, текст должно было ясно, что пользователь отправляет файл описания. Текст должен сказать, или не означает, что процесс отправки выполняет отправку самого элемента управления.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> свойство декларативно и программно. Полный текст кода и инструкции, необходимые для запуска этого примера, см. в разделе примеров <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Общие сведения о классе.  
  
 Обратите внимание, что в следующем фрагменте кода <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> декларативно устанавливается значение для элемента управления.  
  
 [!code-aspx-csharp[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#2)]
 [!code-aspx-vb[WebParts_ImportCatalogPart_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#2)]  
  
 В этом разделе кода <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> программным образом присваивается значение свойства.  
  
 [!code-csharp[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/csharp/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/CS/ImportCatalogPartOverviewCS.aspx#3)]
 [!code-vb[WebParts_ImportCatalogPart_Overview#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebParts_ImportCatalogPart_Overview/VB/ImportCatalogPartOverviewVB.aspx#3)]  
  
 При загрузке страницы в браузере, можно использовать **режим отображения** управления раскрывающегося списка, чтобы выбрать **режим каталога** и переключения страницы в режим каталога. На странице в режиме каталога и отправить файл описания Обратите внимание различные текстовые строки, отображается в пользовательском интерфейсе (UI) для <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> элемента управления. При нажатии кнопки **передать файл описание** кнопку текст для нескольких свойств в пользовательский Интерфейс изменяется, включая текст для <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart.UploadHelpText%2A> свойства.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>