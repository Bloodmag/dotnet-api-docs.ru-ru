<Type Name="ButtonField" FullName="System.Web.UI.WebControls.ButtonField">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="62976260b8581f986cbd7d719a652a3576a46648" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30599708" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ButtonField : System.Web.UI.WebControls.ButtonFieldBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ButtonField extends System.Web.UI.WebControls.ButtonFieldBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ButtonField" />
  <TypeSignature Language="VB.NET" Value="Public Class ButtonField&#xA;Inherits ButtonFieldBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ButtonField : System::Web::UI::WebControls::ButtonFieldBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.ButtonFieldBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет поле, которое отображается как кнопка в элементе управления с привязкой к данным.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField> Класс используется элементами управления с привязкой к данным (например, <xref:System.Web.UI.WebControls.GridView> и <xref:System.Web.UI.WebControls.DetailsView>) для отображения кнопки для каждой записи, которая отображается. <xref:System.Web.UI.WebControls.ButtonField> Объект отображается по-разному в зависимости от того, в котором используется элемент управления с привязкой к данным. Например <xref:System.Web.UI.WebControls.GridView> управлять отображением <xref:System.Web.UI.WebControls.ButtonField> объект как столбцы, пока <xref:System.Web.UI.WebControls.DetailsView> элемент управления отображает его в виде строки.  
  
 Нажатие кнопки в кнопочном поле вызывает событие команды родительского элемента управления с привязкой к данным. Чтобы обеспечить пользовательские процедуры для выполнения при нажатии кнопки, предоставляя обработчик событий для события команды.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView> Управления вызывает <xref:System.Web.UI.WebControls.GridView.RowCommand> события, пока <xref:System.Web.UI.WebControls.DetailsView> управления вызывает <xref:System.Web.UI.WebControls.DetailsView.ItemCommand> событий.  
  
 Чтобы определить индекс записи, которая вызывает событие команды, используйте <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> свойство аргумента события, передаваемый командного события для элемента управления с привязкой к данным. <xref:System.Web.UI.WebControls.ButtonField> Класс автоматически заполняет <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> свойство со значением соответствующий индекс.  
  
 Чтобы указать тип кнопки для отображения, используйте <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> свойство. При отображении ссылку или кнопки, используйте <xref:System.Web.UI.WebControls.ButtonField.Text%2A> свойство, чтобы указать заголовок, отображаемый на кнопках.  
  
> [!NOTE]
>  Если задать <xref:System.Web.UI.WebControls.ButtonField.Text%2A> свойство, все кнопки в <xref:System.Web.UI.WebControls.ButtonField> совместно использовать тот же заголовок.  
  
 Кроме того, можно привязать <xref:System.Web.UI.WebControls.ButtonField> объекта к полю в источнике данных. Это позволяет отображать различные заголовки для кнопок в <xref:System.Web.UI.WebControls.ButtonField> объекта. Для подписей кнопок используются значения, которые находятся в указанном поле. Задать <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> привязываемого свойства <xref:System.Web.UI.WebControls.ButtonField> объекта к полю в источнике данных.  
  
 При отображении кнопки с изображением, используйте <xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A> свойство, чтобы указать изображение, отображаемое для кнопок в <xref:System.Web.UI.WebControls.ButtonField> объекта.  
  
> [!NOTE]
>  Все кнопки в <xref:System.Web.UI.WebControls.ButtonField> тот же образ использовать объект.  
  
 Можно скрыть <xref:System.Web.UI.WebControls.ButtonField> объекта из элемента управления с привязкой к данным, задав <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> свойства `false`.  
  
 <xref:System.Web.UI.WebControls.ButtonField> Позволяет настраивать его верхний и нижний колонтитулы разделов. Чтобы отобразить заголовок в разделе верхнего или нижнего колонтитула, задайте <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> или <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> свойства, соответственно. Вместо отображения текста в заголовке, можно отобразить изображение, задав <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> свойство. Чтобы скрыть верхний колонтитул в <xref:System.Web.UI.WebControls.ButtonField> , задайте <xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A> свойства `false`.  
  
> [!NOTE]
>  Некоторые элементы управления с привязкой к данным (такие как <xref:System.Web.UI.WebControls.GridView> управления) можно отобразить или скрыть весь верхний колонтитул только элемента управления. Эти элементы управления с привязкой к данным не поддерживают <xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A> свойства для отдельных кнопок поля. Чтобы показать или скрыть верхний колонтитул целиком элемента управления с привязкой к данным (при наличии), используйте `ShowHeader` свойство элемента управления.  
  
 Также можно настроить внешний вид <xref:System.Web.UI.WebControls.ButtonField> объекта (цвет шрифта, цвет фона и т. д.), задав свойства стиля для разных частей поля. В следующей таблице перечислены различных свойств стиля.  
  
|Свойство стиля|Параметры стиля для|  
|--------------------|----------------------------|  
|<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|Веб-сервер дочерние элементы управления <xref:System.Web.UI.WebControls.ButtonField>.|  
|<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|Раздела нижнего колонтитула <xref:System.Web.UI.WebControls.ButtonField>.|  
|<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|Раздел заголовка <xref:System.Web.UI.WebControls.ButtonField>.|  
|<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|Данные элементы в <xref:System.Web.UI.WebControls.ButtonField>.|  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.ButtonField> объекта, чтобы отобразить столбец кнопок в <xref:System.Web.UI.WebControls.GridView> элемента управления.  
  
 [!code-aspx-csharp[ButtonField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonField/CS/buttonfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonField/VB/buttonfieldvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
    <altmember cref="E:System.Web.UI.WebControls.GridView.RowCommand" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.ShowHeader" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemCommand" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.Rows" />
    <altmember cref="T:System.Web.UI.WebControls.BoundField" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonFieldBase" />
    <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandField" />
    <altmember cref="T:System.Web.UI.WebControls.DataControlField" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonFieldBase.ButtonType" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextField" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonField.ImageUrl" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonField.Text" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.Visible" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ButtonField ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ButtonField();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.ButtonField" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.ButtonField.%23ctor%2A> конструктор для инициализации нового экземпляра <xref:System.Web.UI.WebControls.ButtonField> класса. Этот конструктор обычно используется при добавлении полей в динамически созданный элемент управления с привязкой к данным.  
  
 Чтобы добавить <xref:System.Web.UI.WebControls.ButtonField> динамически объекта к элементу управления с привязкой к данным, создайте новый <xref:System.Web.UI.WebControls.ButtonField> , задать его свойства и затем добавить его в коллекцию полей для элемента управления с привязкой к данным. Например, если вы используете <xref:System.Web.UI.WebControls.GridView> управления, добавьте <xref:System.Web.UI.WebControls.ButtonField> объект <xref:System.Web.UI.WebControls.GridView.Columns%2A> коллекции.  
  
> [!NOTE]
>  Хотя можно добавить поля динамически к элементу управления с привязкой к данным полей должен быть объявлять статически и затем отображены или скрыты, в соответствии с потребностями. Статическое объявление всех полей уменьшает размер состояния представления для родительского элемента управления с привязкой к данным.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать конструктор M:System.Web.UI.WebControls.ButtonField.#ctor добавление <xref:System.Web.UI.WebControls.ButtonField> динамически до объекта <xref:System.Web.UI.WebControls.GridView> элемента управления.  
  
 [!code-aspx-csharp[ButtonFieldCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldCtor/CS/buttonfieldctorcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldCtor/VB/buttonfieldctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
      </Docs>
    </Member>
    <Member MemberName="CommandName">
      <MemberSignature Language="C#" Value="public virtual string CommandName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.CommandName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CommandName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CommandName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает строку, представляющую действие, выполняемое при нажатии кнопки в объекте <see cref="T:System.Web.UI.WebControls.ButtonField" />.</summary>
        <value>Имя действия, выполняемого при нажатии на кнопку в <see cref="T:System.Web.UI.WebControls.ButtonField" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.ButtonField.CommandName%2A> свойство, чтобы связать имя команды, такие как `"Add"` или `"Remove"`, с помощью кнопок в <xref:System.Web.UI.WebControls.ButtonField> объекта. Можно задать <xref:System.Web.UI.WebControls.ButtonField.CommandName%2A> свойства любая строка, которая определяет действие, выполняемое при нажатии кнопки. Можно затем программно определить имя команды в обработчике событий и выполнить соответствующие действия.  
  
> [!NOTE]
>  Все кнопки в <xref:System.Web.UI.WebControls.ButtonField> объекта имеют одинаковые имена команд.  
  
 Элементы управления с привязкой к данным распознают определенные имена команд и автоматически создавать и обрабатывать события, предназначенные для управления. Распознаются следующие имена команд:  
  
-   `"Cancel"`  
  
-   `"Delete"`  
  
-   `"Edit"`  
  
-   `"Insert"`  
  
-   `"New"`  
  
-   `"Page"`  
  
-   `"Select"`  
  
-   `"Sort"`  
  
-   `"Update"`  
  
 Чтобы вызвать разбиения на страницы, установите <xref:System.Web.UI.WebControls.ButtonField.CommandName%2A> для `"Page"` и <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> содержащегося <xref:System.Web.UI.WebControls.Button> управления `"First"`, `"Last"`, `"Prev"`, `"Next"`, или номер страницы. Однако, поскольку <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> для <xref:System.Web.UI.WebControls.ButtonField> элемент управления всегда является целочисленный индекс строки, <xref:System.Web.UI.WebControls.ButtonField> управления не подходит для вызова разбиения на страницы. Аналогичным образом, хотя можно вызвать, сортировку, установив <xref:System.Web.UI.WebControls.ButtonField.CommandName%2A> для `"Sort"`, <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> свойство <xref:System.Web.UI.WebControls.ButtonField> элемент управления всегда является целочисленный индекс строки. По этой причине <xref:System.Web.UI.WebControls.ButtonField> управления не подходит для вызова сортировки. Для пользовательских команд имена, такие как `"Add"` и `"Remove"`, необходимо написать код события, проверьте имя команды и выполнять какие-либо настраиваемые действия. Дополнительные сведения см. в разделе <xref:System.Web.UI.WebControls.DataControlCommands>.  
  
> [!NOTE]
>  Не все имена команд распознаются каждые элементами управления с привязкой к данным. Например `"New"` не распознается <xref:System.Web.UI.WebControls.GridView> управления и `"Select"` не распознается <xref:System.Web.UI.WebControls.DetailsView> элемента управления.  
  
 Значение этого свойства хранится в состоянии представления.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.ButtonField.CommandName%2A> свойство, чтобы указать имя команды для кнопки в <xref:System.Web.UI.WebControls.ButtonField> объекта <xref:System.Web.UI.WebControls.GridView> элемента управления.  
  
 [!code-aspx-csharp[ButtonField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonField/CS/buttonfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonField/VB/buttonfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CopyProperties(class System.Web.UI.WebControls.DataControlField newField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CopyProperties (newField As DataControlField)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CopyProperties(System::Web::UI::WebControls::DataControlField ^ newField);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newField" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <param name="newField">Объект <see cref="T:System.Web.UI.WebControls.DataControlField" />, в который копируются свойства текущего <see cref="T:System.Web.UI.WebControls.ButtonField" />.</param>
        <summary>Копирует свойства текущего объекта <see cref="T:System.Web.UI.WebControls.ButtonField" /> в указанный объект <see cref="T:System.Web.UI.WebControls.DataControlField" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties%2A> — Вспомогательный метод, который используется <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> метод, чтобы скопировать все свойства текущего <xref:System.Web.UI.WebControls.ButtonFieldBase>-объекта, производного <xref:System.Web.UI.WebControls.DataControlField> объект, который был создан с <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> метод.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> метод в производном классе, вызов <see cref="M:System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)" /> метод базового класса, чтобы убедиться, что копируются все свойства объекта.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.DataControlField CreateField ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.DataControlField CreateField() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.CreateField" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateField () As DataControlField" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::DataControlField ^ CreateField();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает и возвращает новый экземпляр класса <see cref="T:System.Web.UI.WebControls.ButtonField" />.</summary>
        <returns>Новый экземпляр класса <see cref="T:System.Web.UI.WebControls.ButtonField" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField.CreateField%2A> — Вспомогательный метод, который используется <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A> метод базового класса, чтобы создать пустой <xref:System.Web.UI.WebControls.ButtonField> объекта, в который следует скопировать свойства текущего <xref:System.Web.UI.WebControls.ButtonField>-производного объекта.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Переопределить <see cref="M:System.Web.UI.WebControls.ButtonField.CreateField" /> метод возвращает новый экземпляр производного класса. Не вызывайте <see cref="M:System.Web.UI.WebControls.ButtonField.CreateField" /> метод базового класса.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      </Docs>
    </Member>
    <Member MemberName="DataTextField">
      <MemberSignature Language="C#" Value="public virtual string DataTextField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.DataTextField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataTextField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataTextField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя поля данных, значение которого привязывается к свойству <see cref="P:System.Web.UI.WebControls.Button.Text" /> элемента управления <see cref="T:System.Web.UI.WebControls.Button" />, генерируемого объектом <see cref="T:System.Web.UI.WebControls.ButtonField" />.</summary>
        <value>Имя поля, которое требуется привязать к объекту <see cref="T:System.Web.UI.WebControls.ButtonField" />. По умолчанию используется пустая строка (""), указывающая, что свойство <see cref="P:System.Web.UI.WebControls.ButtonField.DataTextField" /> не задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> свойство <xref:System.Web.UI.WebControls.ButtonField> , присваивается значение <xref:System.Web.UI.WebControls.ButtonType.Button> или <xref:System.Web.UI.WebControls.ButtonType.Link> , используйте <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> свойство, чтобы указать имя поля для привязки к <xref:System.Web.UI.WebControls.ButtonField> объекта. Значения поля отображаются как текст для кнопок в <xref:System.Web.UI.WebControls.ButtonField> объекта. При необходимости можно форматировать текст, задав <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A> свойство.  
  
 Вместо использования <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> привязываемого свойства <xref:System.Web.UI.WebControls.ButtonField> объекта в поле из источника данных, можно использовать <xref:System.Web.UI.WebControls.ButtonField.Text%2A> свойство для отображения статического текста в тексте кнопки в <xref:System.Web.UI.WebControls.ButtonField> объекта. Когда <xref:System.Web.UI.WebControls.ButtonField.Text%2A> свойство используется, все кнопки используют тот же заголовок.  
  
> [!NOTE]
>  Если <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> и <xref:System.Web.UI.WebControls.ButtonField.Text%2A> заданы оба свойства, <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> имеет приоритет.  
  
 Значение этого свойства хранится в состоянии представления.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> свойство для указания поля для отображения в <xref:System.Web.UI.WebControls.ButtonField> столбец <xref:System.Web.UI.WebControls.GridView> элемента управления.  
  
 [!code-aspx-csharp[ButtonFieldDataTextField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldDataTextField/CS/buttonfielddatatextfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldDataTextField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldDataTextField/VB/buttonfielddatatextfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.Text" />
      </Docs>
    </Member>
    <Member MemberName="DataTextFormatString">
      <MemberSignature Language="C#" Value="public virtual string DataTextFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataTextFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataTextFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает строку, определяющую формат отображения значения поля.</summary>
        <value>Строка, определяющая формат отображения значения поля. По умолчанию это пустая строка (""), указывающая на неприменение к значению поля специального форматирования.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A> свойство, чтобы указать пользовательский формат отображения для значений, которые отображаются в <xref:System.Web.UI.WebControls.ButtonField> объекта. Если <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A> свойство не задано, значение для поля отображается без форматирования.  
  
> [!NOTE]
>  Строка форматирования применяется только тогда, когда <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> свойству.  
  
 Строка формата может быть любая символьная строка и обычно имеется заполнитель для значения поля. Например, в строке формата `"Item Value: {0}"`, `{0}` заполнителя заменяется значение для поля, когда она появится в <xref:System.Web.UI.WebControls.ButtonField> объекта. Остальная часть строки формата отображается как обычный текст.  
  
> [!NOTE]
>  Если строка формата не содержит заполнитель, значение поля из источника данных не включается в отображаемый текст.  
  
 Заполнитель состоит из двух частей, разделенных точкой с запятой и заключены в фигурные скобки в форме { `A` : `Bxx` }. Значение перед двоеточием (`A` в примере) указывает индекс значения поля в список параметров (с нуля).  
  
> [!NOTE]
>  Это `A` параметр является частью синтаксиса формата. Поскольку имеется только одно поле в каждой ячейке, это значение можно задать только значение 0.  
  
 Двоеточие и значения после него являются необязательными. Символ после двоеточия (`B` в примере) задает формат отображения значения. В следующей таблице перечислены распространенные форматы.  
  
|Символ форматирования|Описание:|  
|----------------------|-----------------|  
|`C`|Отображает числовые значения в формате валюты.|  
|`D`|Отображает числовые значения в десятичном формате.|  
|`E`|Отображает числовые значения в экспоненциальном формате (экспоненциальное).|  
|`F`|Отображает числовые значения в фиксированном формате.|  
|`G`|Отображает числовые значения в общем формате.|  
|`N`|Отображает числовые значения в числовой формат.|  
|`X`|Отображает числовые значения в шестнадцатеричном формате.|  
  
> [!NOTE]
>  За исключением `X`, формат символов не учитывается регистр. `X` Символ формата отображает шестнадцатеричные символы в случае, если указано.  
  
 Значение, следующее за символом форматирования (`xx` в примере) указывает количество значащих цифр или десятичных разрядов. Например, строка формата `"{0:F2}"` отображает число с фиксированной запятой с двумя десятичными разрядами.  
  
 Дополнительные сведения о форматировании строк см. в статье [Общие сведения о форматировании](~/docs/standard/base-types/formatting-types.md).  
  
 Значение этого свойства хранится в состоянии представления.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A> свойство, чтобы указать пользовательский формат отображения значения поля.  
  
 [!code-aspx-csharp[ButtonFieldDataTextField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldDataTextField/CS/buttonfielddatatextfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldDataTextField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldDataTextField/VB/buttonfielddatatextfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatDataTextValue">
      <MemberSignature Language="C#" Value="protected virtual string FormatDataTextValue (object dataTextValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string FormatDataTextValue(object dataTextValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.FormatDataTextValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FormatDataTextValue (dataTextValue As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ FormatDataTextValue(System::Object ^ dataTextValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTextValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataTextValue">Значение поля для форматирования.</param>
        <summary>Форматирует указанное значение поля для ячейки в объекте <see cref="T:System.Web.UI.WebControls.ButtonField" />.</summary>
        <returns>Значение поля преобразуется в формат, заданный свойством <see cref="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" /> property.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField.FormatDataTextValue%2A> — Вспомогательный метод, который используется для преобразования значения поля в формат, который задается параметром <xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A> свойство.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При расширении <see cref="T:System.Web.UI.WebControls.ButtonField" /> , можно переопределить <see cref="M:System.Web.UI.WebControls.ButtonField.FormatDataTextValue(System.Object)" /> метод для выполнения настраиваемой форматирования.</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="ImageUrl">
      <MemberSignature Language="C#" Value="public virtual string ImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.ImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает изображение для всех кнопок в объекте <see cref="T:System.Web.UI.WebControls.ButtonField" />.</summary>
        <value>Путь к изображению, отображаемому в элементе управления <see cref="T:System.Web.UI.WebControls.ButtonField" />. По умолчанию используется пустая строка (""), указывающая, что свойство <see cref="P:System.Web.UI.WebControls.ButtonField.ImageUrl" /> не задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> свойство <xref:System.Web.UI.WebControls.ButtonField> , присваивается значение <xref:System.Web.UI.WebControls.ButtonType.Image> , используйте <xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A> свойство, чтобы указать изображение, отображаемое для каждой кнопки. Этот образ может быть в любом графическом формате (.jpg, .gif, .bmp и т. д.), при условии, что браузер клиента поддерживает этот формат.  
  
 Значение этого свойства хранится в состоянии представления.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A> свойство, чтобы указать изображение, отображаемое для каждой кнопки в <xref:System.Web.UI.WebControls.ButtonField> объекта. Для этого примера кода для отображения необходимо предоставить свой собственный образ.  
  
 [!code-aspx-csharp[ButtonFieldImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldImageUrl/CS/buttonfieldimageurlcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldImageUrl/VB/buttonfieldimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override bool Initialize (bool sortingEnabled, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Initialize(bool sortingEnabled, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.Initialize(System.Boolean,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Initialize(bool sortingEnabled, System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortingEnabled" Type="System.Boolean" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="sortingEnabled">
          Значение <see langword="true" /> для включения сортировки; в противном случае — значение <see langword="false" />.</param>
        <param name="control">Элемент управления данными, владеющий <see cref="T:System.Web.UI.WebControls.ButtonField" />.</param>
        <summary>Инициализирует текущий объект <see cref="T:System.Web.UI.WebControls.ButtonField" />.</summary>
        <returns>
          <see langword="false" />, указывающее, что элемент управления не должен выполнять повторную привязку к данным.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField.Initialize%2A> Метод вызывается элементом управления данных, с которым <xref:System.Web.UI.WebControls.ButtonField> связан объект для выполнения инициализации базовым объектом для экземпляров поля, прежде чем когда-либо поле добавляется в коллекцию строк. Данные элементы управления, такие как <xref:System.Web.UI.WebControls.DetailsView> и <xref:System.Web.UI.WebControls.GridView>, вызовите <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> метод в их `CreateChildControls` методы раньше других методов, таких как `CreateRow`, вызывается для создания определенных строк с данными.  
  
 Вызовите <xref:System.Web.UI.WebControls.ButtonField.Initialize%2A> метод при создании пользовательского элемента управления с привязкой к данным, использующий <xref:System.Web.UI.WebControls.TableCell> объектов для выполнения основных инициализации для <xref:System.Web.UI.WebControls.ButtonField> объекта. Реализуйте этот метод, если ваш <xref:System.Web.UI.WebControls.ButtonField>-производного типа требуется инициализация объекта перед его заполняет <xref:System.Web.UI.WebControls.TableCell> объектов с данными или элементы управления в <xref:System.Web.UI.WebControls.ButtonField.InitializeCell%2A> метод.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Необходимо переопределить <see cref="M:System.Web.UI.WebControls.ButtonField.Initialize(System.Boolean,System.Web.UI.Control)" /> метода и возврата <see langword="true" />, если поле требует привязки данных при обратной передаче в порядке для поля, для правильной работы.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.ButtonField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlCellType cellType, valuetype System.Web.UI.WebControls.DataControlRowState rowState, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As DataControlFieldCell, cellType As DataControlCellType, rowState As DataControlRowState, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlCellType cellType, System::Web::UI::WebControls::DataControlRowState rowState, int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="cellType" Type="System.Web.UI.WebControls.DataControlCellType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cell">Объект <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" /> для инициализации.</param>
        <param name="cellType">Значение <see cref="T:System.Web.UI.WebControls.DataControlCellType" />, указывающее тип строки (нижний колонтитул, верхний колонтитул или данные).</param>
        <param name="rowState">Одно из значений перечисления <see cref="T:System.Web.UI.WebControls.DataControlRowState" />.</param>
        <param name="rowIndex">Начинающийся с нуля индекс строки.</param>
        <summary>Инициализирует указанный объект <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" /> заданным состоянием строки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField.InitializeCell%2A> Метод создает тип кнопки, который задается параметром <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> свойство и добавляет его в <xref:System.Web.UI.Control.Controls%2A> коллекцию <xref:System.Web.UI.WebControls.DataControlFieldCell> объекта. <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> Свойство <xref:System.Web.UI.WebControls.Button> задано для элемента управления `rowIndex`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает статическую подпись, отображаемую для всех кнопок объекта <see cref="T:System.Web.UI.WebControls.ButtonField" />.</summary>
        <value>Подпись, отображаемая в элементе управления <see cref="T:System.Web.UI.WebControls.ButtonField" />. Значение по умолчанию — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда <xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A> свойство <xref:System.Web.UI.WebControls.ButtonField> , присваивается значение <xref:System.Web.UI.WebControls.ButtonType.Button> или <xref:System.Web.UI.WebControls.ButtonType.Link> , используйте <xref:System.Web.UI.WebControls.ButtonField.Text%2A> свойство для отображения статического текста для заголовка кнопок в <xref:System.Web.UI.WebControls.ButtonField>. Все кнопки используют тот же заголовок.  
  
 Вместо использования <xref:System.Web.UI.WebControls.ButtonField.Text%2A> свойство для отображения статического текста в <xref:System.Web.UI.WebControls.ButtonField> объекта, можно использовать <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> привязываемого свойства <xref:System.Web.UI.WebControls.ButtonField> к полю в источнике данных. Затем значения поля отображаются как заголовка кнопок.  
  
> [!NOTE]
>  Если <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> и <xref:System.Web.UI.WebControls.ButtonField.Text%2A> заданы оба свойства, <xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A> имеет приоритет.  
  
 Значение этого свойства хранится в состоянии представления.  
  
 Значение этого свойства, если задано, можно автоматически сохраняются в файл ресурсов с помощью средств конструктора. Дополнительные сведения см. в разделе <xref:System.ComponentModel.LocalizableAttribute> и [глобализации и локализации](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.ButtonField.Text%2A> свойство, чтобы указать заголовок, отображаемый для каждой кнопки в <xref:System.Web.UI.WebControls.ButtonField> объекта.  
  
 [!code-aspx-csharp[ButtonField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonField/CS/buttonfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonField/VB/buttonfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextField" />
      </Docs>
    </Member>
    <Member MemberName="ValidateSupportsCallback">
      <MemberSignature Language="C#" Value="public override void ValidateSupportsCallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ValidateSupportsCallback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ValidateSupportsCallback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ValidateSupportsCallback();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Определяет, поддерживают ли элементы управления, содержащиеся в объекте <see cref="T:System.Web.UI.WebControls.ButtonField" /> обратные вызовы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback%2A> — Вспомогательный метод, который используется для определения, является ли элементы управления, которые содержатся в <xref:System.Web.UI.WebControls.ButtonField> объекта поддержки обратных вызовов. Этот метод реализуется как пустой (метод, который содержит код) для указания, что обратные вызовы поддерживаются.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback%2A> Метод используется преимущественно разработчиками элементов управления.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Классы, производные от <see cref="T:System.Web.UI.WebControls.BoundField" /> класс может переопределить <see cref="M:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback" /> метод для указания, поддерживает ли элементы управления, содержащиеся в поле обратных вызовов. Чтобы показать, что обратные вызовы поддерживаются, реализуйте <see cref="M:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback" /> метод как пустой метод, который не вызывает исключение; в противном случае исключение с пояснением, почему обратные вызовы не поддерживаются.</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>