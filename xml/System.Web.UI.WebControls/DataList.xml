<Type Name="DataList" FullName="System.Web.UI.WebControls.DataList">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="041224a48dd300e1b8e409f1e0e4752a60760caa" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36384348" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DataList : System.Web.UI.WebControls.BaseDataList, System.Web.UI.INamingContainer, System.Web.UI.WebControls.IRepeatInfoUser" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataList extends System.Web.UI.WebControls.BaseDataList implements class System.Web.UI.INamingContainer, class System.Web.UI.WebControls.IRepeatInfoUser" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.DataList" />
  <TypeSignature Language="VB.NET" Value="Public Class DataList&#xA;Inherits BaseDataList&#xA;Implements INamingContainer, IRepeatInfoUser" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataList : System::Web::UI::WebControls::BaseDataList, System::Web::UI::INamingContainer, System::Web::UI::WebControls::IRepeatInfoUser" />
  <TypeSignature Language="F#" Value="type DataList = class&#xA;    inherit BaseDataList&#xA;    interface INamingContainer&#xA;    interface IRepeatInfoUser" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseDataList</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IRepeatInfoUser</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.DataListDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataListComponentEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.ComponentEditor))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Элемент управления "Список" с привязкой к данным, в котором элементы отображаются с помощью шаблонов.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В этом разделе.  
  
-   [Введение](#introduction)  
  
-   [Шаблоны](#templates)  
  
-   [Настройка внешнего вида элемента управления DataList](#customizing_the_appearance_of_the_datalist_control)  
  
-   [Направление отображения и макета](#display_direction_and_layout)  
  
-   [Безопасность](#security)  
  
-   [Декларативный синтаксис](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Вступление  
 Используйте <xref:System.Web.UI.WebControls.DataList> списка связанных элементов управления для отображения данных, определить шаблон. <xref:System.Web.UI.WebControls.DataList> Элемент управления поддерживает выбор и изменение.  
  
<a name="templates"></a>   
## <a name="templates"></a>Шаблоны  
 Содержимое <xref:System.Web.UI.WebControls.DataList> управления можно управлять с помощью шаблонов. В следующей таблице перечислены поддерживаемые шаблоны.  
  
|Имя шаблона|Описание:|  
|-------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A>|Если определен, предоставляет содержимое и формат изменяемых записей <xref:System.Web.UI.WebControls.DataList>. Если не определен, `ItemTemplate` используется.|  
|<xref:System.Web.UI.WebControls.DataList.EditItemTemplate%2A>|Если определен, предоставляет содержимое и формат для элемента в редактируемый в настоящий момент <xref:System.Web.UI.WebControls.DataList>. Если не определен, `ItemTemplate` используется.|  
|<xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A>|Если определен, предоставляет содержимое и формат раздела нижнего колонтитула <xref:System.Web.UI.WebControls.DataList>. Если не определен, нижний колонтитул не отображается.|  
|<xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A>|Если определен, предоставляет содержимое и формат раздела верхнего колонтитула <xref:System.Web.UI.WebControls.DataList>. Если не определен, заголовок не отображается.|  
|<xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A>|Обязательный шаблон, предоставляющий содержимое и формат для элементов в <xref:System.Web.UI.WebControls.DataList>.|  
|<xref:System.Web.UI.WebControls.DataList.SelectedItemTemplate%2A>|Если определен, предоставляет содержимое и формат для выбранного элемента в <xref:System.Web.UI.WebControls.DataList>. Если не определен, <xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A> используется.|  
|<xref:System.Web.UI.WebControls.DataList.SeparatorTemplate%2A>|Если определен, предоставляет содержимое и формат разделители между его элементами <xref:System.Web.UI.WebControls.DataList>. Если не определен, разделитель не отображается.|  
  
 По крайней мере <xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A> должны быть определены для отображения элементов в <xref:System.Web.UI.WebControls.DataList> элемента управления. Дополнительные шаблоны можно использовать для предоставления пользовательского вида <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
<a name="customizing_the_appearance_of_the_datalist_control"></a>   
## <a name="customizing-the-appearance-of-the-datalist-control"></a>Настройка внешнего вида элемента управления DataList  
 Внешний вид <xref:System.Web.UI.WebControls.DataList> управления можно настроить, задав свойства стиля для разных частей элемента управления. В следующей таблице перечислены различных свойств стиля.  
  
|Свойство стиля|Описание:|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|Задает стиль для изменяющихся элементов в <xref:System.Web.UI.WebControls.DataList> элемента управления.|  
|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|Задает стиль изменяемой записи в <xref:System.Web.UI.WebControls.DataList> элемента управления.|  
|<xref:System.Web.UI.WebControls.DataList.FooterStyle%2A>|Задает стиль для нижнего колонтитула в <xref:System.Web.UI.WebControls.DataList> элемента управления.|  
|<xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A>|Задает стиль для заголовка в <xref:System.Web.UI.WebControls.DataList> элемента управления.|  
|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|Задает стиль для элементов в <xref:System.Web.UI.WebControls.DataList> элемента управления.|  
|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|Указывает стиль для выбранного элемента в <xref:System.Web.UI.WebControls.DataList> элемента управления.|  
|<xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A>|Задает стиль разделителя между элементами в <xref:System.Web.UI.WebControls.DataList> элемента управления.|  
  
 Кроме того, можно отобразить или скрыть различные части элемента управления. В следующей таблице перечислены свойств, определяющих, какие части при отображении и скрытии.  
  
|Свойство.|Описание:|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataList.ShowFooter%2A>|Показывает или скрывает раздела нижнего колонтитула <xref:System.Web.UI.WebControls.DataList> элемента управления.|  
|<xref:System.Web.UI.WebControls.DataList.ShowHeader%2A>|Показывает или скрывает раздел заголовка <xref:System.Web.UI.WebControls.DataList> элемента управления.|  
  
<a name="display_direction_and_layout"></a>   
## <a name="display-direction-and-layout"></a>Направление отображения и макета  
 Направление отображения <xref:System.Web.UI.WebControls.DataList> элемент управления может быть вертикальной или горизонтальной. Задать <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> свойство, чтобы указать направление отображения.  
  
 Макет <xref:System.Web.UI.WebControls.DataList> управление осуществляется с <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> свойство. Присвоение этому свойству `RepeatLayout.Table` будет отображаться <xref:System.Web.UI.WebControls.DataList> в табличном формате, пока `RepeatLayout.Flow` отображает <xref:System.Web.UI.WebControls.DataList> без структуры таблицы.  
  
<a name="security"></a>   
## <a name="security"></a>Безопасность  
 `DataList` Элемент управления может содержать элементы управления, которые позволяют пользователям вводить сведения.  
  
> [!CAUTION]
>  Этот элемент управления можно использовать для отображения введенных данных, в которых может содержаться вредоносный клиентский сценарий. Проверьте все сведения, которые отправляются от клиента для исполняемых сценариев, инструкций SQL и другого кода перед его отображения в приложении. Проверяющие элементы управления можно использовать для проверки введенных пользователем данных перед отображением входной текст в элементе управления. ASP.NET предоставляет возможность проверки входного запроса с блокировкой сценариев и HTML вводимые пользователем данные.  
  
 Дополнительные сведения о безопасности см. в разделе [защита стандартных элементов управления](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [как: защита от скриптов в веб-приложения путем применения HTML-кодирования строки](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), и [ Проверка пользовательского ввода в веб-страницах ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Декларативный синтаксис  
  
```  
<asp:DataList  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    Caption="string"  
    CaptionAlign="NotSet|Top|Bottom|Left|Right"  
    CellPadding="integer"  
    CellSpacing="integer"  
    CssClass="string"  
    DataKeyField="string"  
    DataMember="string"  
    DataSource="string"  
    DataSourceID="string"  
    EditItemIndex="integer"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ExtractTemplateRows="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    GridLines="None|Horizontal|Vertical|Both"  
    Height="size"  
    HorizontalAlign="NotSet|Left|Center|Right|Justify"  
    ID="string"  
    OnCancelCommand="CancelCommand event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDeleteCommand="DeleteCommand event handler"  
    OnDisposed="Disposed event handler"  
    OnEditCommand="EditCommand event handler"  
    OnInit="Init event handler"  
    OnItemCommand="ItemCommand event handler"  
    OnItemCreated="ItemCreated event handler"  
    OnItemDataBound="ItemDataBound event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnSelectedIndexChanged="SelectedIndexChanged event handler"  
    OnUnload="Unload event handler"  
    OnUpdateCommand="UpdateCommand event handler"  
    RepeatColumns="integer"  
    RepeatDirection="Horizontal|Vertical"  
    RepeatLayout="Table|Flow"  
    runat="server"  
    SelectedIndex="integer"  
    ShowFooter="True|False"  
    ShowHeader="True|False"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    UseAccessibleHeader="True|False"  
    Visible="True|False"  
    Width="size"  
>  
        <AlternatingItemStyle />  
        <AlternatingItemTemplate>  
            <!-- child controls -->  
        </AlternatingItemTemplate>  
        <EditItemStyle />  
        <EditItemTemplate>  
            <!-- child controls -->  
        </EditItemTemplate>  
        <FooterStyle />  
        <FooterTemplate>  
            <!-- child controls -->  
        </FooterTemplate>  
        <HeaderStyle />  
        <HeaderTemplate>  
            <!-- child controls -->  
        </HeaderTemplate>  
        <ItemStyle />  
        <ItemTemplate>  
            <!-- child controls -->  
        </ItemTemplate>  
        <SelectedItemStyle />  
        <SelectedItemTemplate>  
            <!-- child controls -->  
        </SelectedItemTemplate>  
        <SeparatorStyle />  
        <SeparatorTemplate>  
            <!-- child controls -->  
        </SeparatorTemplate>  
</asp:DataList>  
```  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.DataList> элемента управления для отображения списка элементов из источника данных.  
  
> [!NOTE]
>  В следующем образце кода используется модель одного файла кода и могут работать неправильно, если скопировать непосредственно в файл кода. Этот пример кода необходимо скопировать в пустой текстовый файл с расширением .aspx. Дополнительные сведения о модели кода веб-форм см. в разделе [модель кода ASP.NET веб-форм страницы](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataList#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataList/CS/datalistcs.aspx#1)]
 [!code-aspx-vb[DataList#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataList/VB/datalistvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.BaseDataList" />
    <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
    <altmember cref="T:System.Web.UI.WebControls.Repeater" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataList ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataList();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор используется для создания и инициализации нового экземпляра <xref:System.Web.UI.WebControls.DataList> класса.  
  
   
  
## Examples  
 В следующем примере кода показано, как создать и инициализировать новый экземпляр <xref:System.Web.UI.WebControls.DataList> класса.  
  
 [!code-csharp[Classic DataList.DataList Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataList.DataList Example/CS/source.cs#1)]
 [!code-vb[Classic DataList.DataList Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataList.DataList Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternatingItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle AlternatingItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle AlternatingItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.AlternatingItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AlternatingItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ AlternatingItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlternatingItemStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataList.AlternatingItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает свойства стиля изменяемых записей элемента управления <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Объект <see cref="T:System.Web.UI.WebControls.TableItemStyle" />, предоставляющий свойства стиля чередующихся объектов в элементе управления <see cref="T:System.Web.UI.WebControls.DataList" />. Значением по умолчанию является пустой объект <see cref="T:System.Web.UI.WebControls.TableItemStyle" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> свойства для предоставления пользовательского стиля для чередующихся элементов в <xref:System.Web.UI.WebControls.DataList> элемента управления. Общие атрибуты стиля, которые могут быть изменены включают основной цвет, цвет фона, шрифт и выравнивание содержимого в пределах ячейки. Предоставление различных стилей улучшает внешний вид <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
 Свойства стиля записи в <xref:System.Web.UI.WebControls.DataList> управления наследуются от одного свойства стиля записи к другому через иерархию. Свойства стиля элемента ниже в иерархии, наследуются свойства стиля элемента выше в иерархии. Например, если указать красный цвет шрифта для <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> свойство, все другие элемента свойств стиля в <xref:System.Web.UI.WebControls.DataList> управления также будет иметь красный цвет шрифта. Это позволяет предоставить общий внешний вид элемента управления, задав свойство стиля одного элемента. Можно переопределить наследуемые параметры стиля для свойства стиля элемента более высокого уровня в иерархии путем задания его свойств стиля. Например, можно задать синий цвет шрифта для <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> свойства, переопределив красный шрифт, указанный в <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> свойство. В следующей таблице перечислены порядок иерархии от самого высокого до самого низкого.  
  
|Приоритет|Свойство стиля|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 Чтобы определить пользовательский стиль для чередующихся элементов, поместите `<AlternatingItemStyle>` теги между открывающим и закрывающим тегами элемента <xref:System.Web.UI.WebControls.DataList> элемента управления. После этого можно поместить атрибуты стиля в открывающем `<AlternatingItemStyle>` тег.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> свойство, чтобы указать другой фоновый цвет для чередующихся элементов в <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
> [!NOTE]
>  В следующем образце кода используется модель одного файла кода и могут работать неправильно, если скопировать непосредственно в файл кода. Этот пример кода необходимо скопировать в пустой текстовый файл с расширением .aspx. Дополнительные сведения о модели кода веб-форм см. в разделе [модель кода ASP.NET веб-форм страницы](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemStyle/CS/datalistitemstylecs.aspx#1)]
 [!code-aspx-vb[DataListItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemStyle/VB/datalistitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="AlternatingItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate AlternatingItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate AlternatingItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.AlternatingItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AlternatingItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ AlternatingItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AlternatingItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DataList.AlternatingItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает шаблоны для чередующихся элементов в элементе управления <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Объект <see cref="T:System.Web.UI.ITemplate" />, содержащий шаблон для чередующихся элементов в элементе управления <see cref="T:System.Web.UI.WebControls.DataList" />. Значение по умолчанию — <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A> свойства для управления содержимым чередующихся записей <xref:System.Web.UI.WebControls.DataList> элемента управления. Внешний вид чередующихся записей управляется <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> свойство.  
  
 Чтобы указать шаблон для чередующихся элементов, поместите `<AlternatingItemTemplate>` теги между открывающим и закрывающим тегами элемента <xref:System.Web.UI.WebControls.DataList> элемента управления. После этого можно перечислить содержимое шаблона между открывающим и закрывающим `<AlternatingItemTemplate>` тегов.  
  
> [!CAUTION]
>  Этот элемент управления можно использовать для отображения введенных данных, в которых может содержаться вредоносный клиентский сценарий. Проверьте все сведения, которые отправляются от клиента для исполняемых сценариев, инструкций SQL и другого кода перед его отображения в приложении. Проверяющие элементы управления можно использовать для проверки введенных пользователем данных перед отображением входной текст в элементе управления. ASP.NET предоставляет возможность проверки входного запроса с блокировкой сценариев и HTML вводимые пользователем данные. Дополнительные сведения см. в разделе [защита стандартных элементов управления](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [как: защита от скриптов в веб-приложения путем применения HTML-кодирования строки](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), и [проверка пользовательского ввода в Веб-страницы ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A> свойства для управления содержимым чередующихся записей <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
> [!NOTE]
>  В следующем образце кода используется модель одного файла кода и могут работать неправильно, если скопировать непосредственно в файл кода. Этот пример кода необходимо скопировать в пустой текстовый файл с расширением .aspx. Дополнительные сведения о модели кода веб-форм см. в разделе [модель кода ASP.NET веб-форм страницы](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListAlternatingItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListAlternatingItemTemplate/CS/datalistaltitemtemplatecs.aspx#1)]
 [!code-aspx-vb[DataListAlternatingItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListAlternatingItemTemplate/VB/datalistaltitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.AlternatingItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ItemTemplate" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="CancelCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler CancelCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler CancelCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.CancelCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CancelCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ CancelCommand;" />
      <MemberSignature Language="F#" Value="member this.CancelCommand : System.Web.UI.WebControls.DataListCommandEventHandler " Usage="member this.CancelCommand : System.Web.UI.WebControls.DataListCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при нажатии кнопки <see langword="Cancel" /> для записи в элементе управления <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.CancelCommand> Событие возникает при `Cancel` кнопки для элемента в <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
 Типичный обработчик <xref:System.Web.UI.WebControls.DataList.CancelCommand> наборов событий <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> свойства `-1` (для отмены выбора элемента) и затем выполняет повторную привязку данных к <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
> [!CAUTION]
>  Текст не закодированы, прежде чем он появится в HTML <xref:System.Web.UI.WebControls.DataList> элемента управления. Это дает возможность внедрения скрипта в теги HTML в тексте. Если значения для элемента управления вводятся пользователем, не забудьте проверить значения для уменьшения уязвимости системы безопасности.  
  
 Дополнительные сведения об обработке событий см. в разделе [как: прием событий в приложениях Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
> [!CAUTION]
>  Этот элемент управления можно использовать для отображения введенных данных, в которых может содержаться вредоносный клиентский сценарий. Проверьте все сведения, которые отправляются от клиента для исполняемых сценариев, инструкций SQL и другого кода перед его отображения в приложении. Проверяющие элементы управления можно использовать для проверки введенных пользователем данных перед отображением входной текст в элементе управления. ASP.NET предоставляет возможность проверки входного запроса с блокировкой сценариев и HTML вводимые пользователем данные. Дополнительные сведения см. в разделе [защита стандартных элементов управления](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [как: защита от скриптов в веб-приложения путем применения HTML-кодирования строки](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), и [проверка пользовательского ввода в Веб-страницы ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 В следующем примере кода показано, как задать и запрограммировать обработчик <xref:System.Web.UI.WebControls.DataList.CancelCommand> событий. Он отменяет все изменения, внесенные в элемент <xref:System.Web.UI.WebControls.DataList> управления `Cancel` кнопки.  
  
> [!NOTE]
>  В следующем образце кода используется модель одного файла кода и могут работать неправильно, если скопировать непосредственно в файл кода. Этот пример кода необходимо скопировать в пустой текстовый файл с расширением .aspx. Дополнительные сведения о модели кода веб-форм см. в разделе [модель кода ASP.NET веб-форм страницы](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="CancelCommandName">
      <MemberSignature Language="C#" Value="public const string CancelCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string CancelCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const CancelCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ CancelCommandName;" />
      <MemberSignature Language="F#" Value="val mutable CancelCommandName : string" Usage="System.Web.UI.WebControls.DataList.CancelCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет имя команды <see langword="Cancel" />. Это поле доступно только для чтения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.DataList.CancelCommandName> поле для представления `Cancel` имя команды.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlHierarchy">
      <MemberSignature Language="C#" Value="protected override void CreateControlHierarchy (bool useDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CreateControlHierarchy(bool useDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.CreateControlHierarchy(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CreateControlHierarchy (useDataSource As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CreateControlHierarchy(bool useDataSource);" />
      <MemberSignature Language="F#" Value="override this.CreateControlHierarchy : bool -&gt; unit" Usage="dataList.CreateControlHierarchy useDataSource" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useDataSource" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useDataSource">Значение <see langword="true" /> для использования источника данных элемента управления; значение <see langword="false" />, чтобы элемент управления создавался повторно на основе состояния представления и не был привязан к данным.</param>
        <summary>Создает иерархию элементов управления для обработки элемента управления списком данных с или без использования указанного источника данных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> Метод используется преимущественно разработчиками элементов управления при создании производного на собственную реализацию из <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
 <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> Использует метод <xref:System.Web.UI.WebControls.DataList.CreateItem%2A> и <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> методы для создания <xref:System.Web.UI.WebControls.DataListItem> элементов управления, представляющих заголовка, нижнего колонтитула, разделителя и элементы привязки данных, содержащихся в списке данных. Можно обращаться к элементам с привязкой к данным для списка данных через <xref:System.Web.UI.WebControls.DataList.Items%2A> коллекции. Можно получить доступ к всех типов элементов, включая заголовка, нижнего колонтитула и разделительных элементов через <xref:System.Web.UI.WebControls.BaseDataList.Controls%2A> коллекции.  
  
 Переопределить <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> метод для настройки способа <xref:System.Web.UI.WebControls.DataListItem> создаются или добавить элементы управления <xref:System.Web.UI.WebControls.DataList> управления. Переопределить <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> метод для настройки шаблонов для <xref:System.Web.UI.WebControls.DataListItem> элемента управления.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberSignature Language="F#" Value="override this.CreateControlStyle : unit -&gt; System.Web.UI.WebControls.Style" Usage="dataList.CreateControlStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает объект стиля по умолчанию, который используется внутри элемента управления <see cref="T:System.Web.UI.WebControls.DataList" /> для реализации всех относящихся к стилю свойств.</summary>
        <returns>Объект <see cref="T:System.Web.UI.WebControls.TableStyle" />, содержащий свойства стиля, заданные для элемента управления по умолчанию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.CreateControlStyle%2A> Метод используется преимущественно разработчиками элементов управления при порождении пользовательскую реализацию из <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
   
  
## Examples  
 В следующем примере кода показано, как переопределить <xref:System.Web.UI.WebControls.DataList.CreateControlStyle%2A> метод в пользовательский сервер управления, чтобы он всегда отображает горизонтальные линии сетки с не ячейками в <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
 [!code-aspx-csharp[CustomDataListCreateControlStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataListCreateControlStyle/CS/custom_datalist_createcontrolstylecs.aspx#1)]
 [!code-aspx-vb[CustomDataListCreateControlStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataListCreateControlStyle/VB/custom_datalist_createcontrolstylevb.aspx#1)]  
[!code-csharp[CustomDataListCreateControlStyle#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataListCreateControlStyle/CS/custom_datalist_createcontrolstyle.cs#2)]
[!code-vb[CustomDataListCreateControlStyle#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataListCreateControlStyle/VB/custom_datalist_createcontrolstyle.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateItem">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.DataListItem CreateItem (int itemIndex, System.Web.UI.WebControls.ListItemType itemType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.DataListItem CreateItem(int32 itemIndex, valuetype System.Web.UI.WebControls.ListItemType itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.CreateItem(System.Int32,System.Web.UI.WebControls.ListItemType)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateItem (itemIndex As Integer, itemType As ListItemType) As DataListItem" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::DataListItem ^ CreateItem(int itemIndex, System::Web::UI::WebControls::ListItemType itemType);" />
      <MemberSignature Language="F#" Value="abstract member CreateItem : int * System.Web.UI.WebControls.ListItemType -&gt; System.Web.UI.WebControls.DataListItem&#xA;override this.CreateItem : int * System.Web.UI.WebControls.ListItemType -&gt; System.Web.UI.WebControls.DataListItem" Usage="dataList.CreateItem (itemIndex, itemType)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
      </Parameters>
      <Docs>
        <param name="itemIndex">Заданное расположение в элементе управления <see cref="T:System.Web.UI.WebControls.DataList" />, в которое будет помещен созданный элемент.</param>
        <param name="itemType">Объект <see cref="T:System.Web.UI.WebControls.ListItemType" />, представляющий указанный тип элемента, который следует создать.</param>
        <summary>Создает объект <see cref="T:System.Web.UI.WebControls.DataListItem" />.</summary>
        <returns>Новый объект <see cref="T:System.Web.UI.WebControls.DataListItem" />, созданный с использованием указанного типа элементов списка.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.CreateItem%2A> Метод используется преимущественно разработчиками элементов управления при создании пользовательской реализации <xref:System.Web.UI.WebControls.DataList> элемента управления. <xref:System.Web.UI.WebControls.DataList.CreateItem%2A> Функционально эквивалентен вызову метода <xref:System.Web.UI.WebControls.DataListItem.%23ctor%2A> конструктор для <xref:System.Web.UI.WebControls.DataListItem>. <xref:System.Web.UI.WebControls.DataListItem.ItemIndex%2A> И <xref:System.Web.UI.WebControls.DataListItem.ItemType%2A> свойства инициализируются для нового <xref:System.Web.UI.WebControls.DataListItem> с помощью указанных значений, но при этом элемент не были вставлены в <xref:System.Web.UI.WebControls.DataList>.  
  
 <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> Использует метод <xref:System.Web.UI.WebControls.DataList.CreateItem%2A> и <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> методы для создания <xref:System.Web.UI.WebControls.DataListItem> элементов управления, представляющих заголовка, нижнего колонтитула, разделителя и элементы привязки данных, содержащихся в списке данных. Можно обращаться к элементам с привязкой к данным для списка данных через <xref:System.Web.UI.WebControls.DataList.Items%2A> коллекции. Можно получить доступ к всех типов элементов, включая заголовка, нижнего колонтитула и разделительных элементов через <xref:System.Web.UI.WebControls.BaseDataList.Controls%2A> коллекции.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Переопределите этот метод для создания собственных производных <see cref="T:System.Web.UI.WebControls.DataListItem" /> типа, или задать дополнительные свойства элементов при <see cref="T:System.Web.UI.WebControls.DataListItem" /> создается.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.DataList.CreateControlHierarchy(System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.InitializeItem(System.Web.UI.WebControls.DataListItem)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler DeleteCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler DeleteCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DeleteCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ DeleteCommand;" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : System.Web.UI.WebControls.DataListCommandEventHandler " Usage="member this.DeleteCommand : System.Web.UI.WebControls.DataListCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при нажатии кнопки <see langword="Delete" /> для записи в элементе управления <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.DeleteCommand> Событие возникает при `Delete` кнопки для элемента в <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
 Типичный обработчик <xref:System.Web.UI.WebControls.DataList.DeleteCommand> события удаляет выбранный элемент из источника данных, а затем повторно привязывает данные <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
 Дополнительные сведения об обработке событий см. в разделе [как: прием событий в приложениях Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
   
  
## Examples  
 В следующем примере кода показано, как задать и запрограммировать обработчик <xref:System.Web.UI.WebControls.DataList.DeleteCommand> событий. Он удаляет выбранный элемент в <xref:System.Web.UI.WebControls.DataList> управления `Delete` кнопки.  
  
> [!NOTE]
>  В следующем образце кода используется модель одного файла кода и могут работать неправильно, если скопировать непосредственно в файл кода. Этот пример кода необходимо скопировать в пустой текстовый файл с расширением .aspx. Дополнительные сведения о модели кода веб-форм см. в разделе [модель кода ASP.NET веб-форм страницы](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommandName">
      <MemberSignature Language="C#" Value="public const string DeleteCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string DeleteCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const DeleteCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ DeleteCommandName;" />
      <MemberSignature Language="F#" Value="val mutable DeleteCommandName : string" Usage="System.Web.UI.WebControls.DataList.DeleteCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет имя команды <see langword="Delete" />. Это поле доступно только для чтения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.DataList.DeleteCommandName> поле для представления `Delete` имя команды.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      </Docs>
    </Member>
    <Member MemberName="EditCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler EditCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler EditCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.EditCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event EditCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ EditCommand;" />
      <MemberSignature Language="F#" Value="member this.EditCommand : System.Web.UI.WebControls.DataListCommandEventHandler " Usage="member this.EditCommand : System.Web.UI.WebControls.DataListCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при нажатии кнопки <see langword="Edit" /> для записи в элементе управления <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.EditCommand> Событие возникает при `Edit` кнопки для элемента в <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
 Типичный обработчик <xref:System.Web.UI.WebControls.DataList.EditCommand> наборов событий <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> свойство выделенную строку и затем выполняет повторную привязку данных к <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
> [!CAUTION]
>  Текст не закодированы, прежде чем он появится в HTML <xref:System.Web.UI.WebControls.DataList> элемента управления. Это дает возможность внедрения скрипта в теги HTML в тексте. Если значения для элемента управления вводятся пользователем, не забудьте проверить значения для уменьшения уязвимости системы безопасности.  
  
 Дополнительные сведения об обработке событий см. в разделе [как: прием событий в приложениях Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
> [!CAUTION]
>  Этот элемент управления можно использовать для отображения введенных данных, в которых может содержаться вредоносный клиентский сценарий. Проверьте все сведения, которые отправляются от клиента для исполняемых сценариев, инструкций SQL и другого кода перед его отображения в приложении. Проверяющие элементы управления можно использовать для проверки введенных пользователем данных перед отображением входной текст в элементе управления. ASP.NET предоставляет возможность проверки входного запроса с блокировкой сценариев и HTML вводимые пользователем данные. Дополнительные сведения см. в разделе [защита стандартных элементов управления](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [как: защита от скриптов в веб-приложения путем применения HTML-кодирования строки](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), и [проверка пользовательского ввода в Веб-страницы ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 В следующем примере кода показано, как задать и запрограммировать обработчик <xref:System.Web.UI.WebControls.DataList.EditCommand> событий. Позволяет изменить выбранный элемент в <xref:System.Web.UI.WebControls.DataList> управления `Edit` кнопки.  
  
> [!NOTE]
>  В следующем образце кода используется модель одного файла кода и могут работать неправильно, если скопировать непосредственно в файл кода. Этот пример кода необходимо скопировать в пустой текстовый файл с расширением .aspx. Дополнительные сведения о модели кода веб-форм см. в разделе [модель кода ASP.NET веб-форм страницы](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="EditCommandName">
      <MemberSignature Language="C#" Value="public const string EditCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string EditCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.EditCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const EditCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ EditCommandName;" />
      <MemberSignature Language="F#" Value="val mutable EditCommandName : string" Usage="System.Web.UI.WebControls.DataList.EditCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет имя команды <see langword="Edit" />. Это поле доступно только для чтения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.DataList.EditCommandName> поле для представления `Edit` имя команды.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      </Docs>
    </Member>
    <Member MemberName="EditItemIndex">
      <MemberSignature Language="C#" Value="public virtual int EditItemIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 EditItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.EditItemIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditItemIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int EditItemIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.EditItemIndex : int with get, set" Usage="System.Web.UI.WebControls.DataList.EditItemIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает номер индекса выбранного для редактирования элемента в элементе управления <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Индекс записи, выбранной для редактирования в элементе управления <see cref="T:System.Web.UI.WebControls.DataList" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> для программным путем указания элемента, который требуется изменить. Это свойство может использоваться для определения индекса элемента, выбранного для редактирования.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> Свойства начинается с нуля.  
  
 Чтобы отменить выбор элемента, установите <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> свойства `-1`.  
  
> [!CAUTION]
>  Этот элемент управления можно использовать для отображения введенных данных, в которых может содержаться вредоносный клиентский сценарий. Проверьте все сведения, которые отправляются от клиента для исполняемых сценариев, инструкций SQL и другого кода перед его отображения в приложении. Проверяющие элементы управления можно использовать для проверки введенных пользователем данных перед отображением входной текст в элементе управления. ASP.NET предоставляет возможность проверки входного запроса с блокировкой сценариев и HTML вводимые пользователем данные. Дополнительные сведения см. в разделе [защита стандартных элементов управления](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [как: защита от скриптов в веб-приложения путем применения HTML-кодирования строки](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), и [проверка пользовательского ввода в Веб-страницы ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
 <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> Свойство хранится в состоянии элемента управления.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> свойство, чтобы указать элемент, выбранный пользователем для редактирования.  
  
> [!NOTE]
>  В следующем образце кода используется модель одного файла кода и могут работать неправильно, если скопировать непосредственно в файл кода. Этот пример кода необходимо скопировать в пустой текстовый файл с расширением .aspx. Дополнительные сведения о модели кода веб-форм см. в разделе [модель кода ASP.NET веб-форм страницы](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Выбранное значение меньше <see langword="0" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="EditItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle EditItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EditItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.EditItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EditItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ EditItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditItemStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataList.EditItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает свойства стиля для элемента, выбранного для редактирования в элементе управления <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Объект <see cref="T:System.Web.UI.WebControls.TableItemStyle" />, содержащий свойства стиля элемента, выбранного для редактирования в элементе управления <see cref="T:System.Web.UI.WebControls.DataList" />. Значением по умолчанию является пустой объект <see cref="T:System.Web.UI.WebControls.TableItemStyle" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A> свойства для предоставления пользовательского стиля для элемента, выбранного для редактирования в <xref:System.Web.UI.WebControls.DataList> элемента управления. Общие атрибуты стиля, которые могут быть изменены включают основной цвет, цвет фона, шрифт и выравнивание содержимого в пределах ячейки. Предоставление различных стилей улучшает внешний вид <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
 Свойства стиля записи в <xref:System.Web.UI.WebControls.DataList> управления наследуются от одного свойства стиля записи к другому через иерархию. Свойства стиля элемента ниже в иерархии, наследуются свойства стиля элемента выше в иерархии. Например, если указать красный цвет шрифта для <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> свойство, все другие элемента свойств стиля в <xref:System.Web.UI.WebControls.DataList> управления также будет иметь красный цвет шрифта. Это позволяет предоставить общий внешний вид элемента управления, задав свойство стиля одного элемента. Можно переопределить наследуемые параметры стиля для свойства стиля элемента более высокого уровня в иерархии путем задания его свойств стиля. Например, можно задать синий цвет шрифта для <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> свойства, переопределив красный шрифт, указанный в <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> свойство. В следующей таблице перечислены порядок иерархии от самого высокого до самого низкого.  
  
|Приоритет|Свойство стиля|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 Чтобы определить пользовательский стиль для элемента, выбранного для редактирования, поместите `<EditItemStyle>` теги между открывающим и закрывающим тегами элемента <xref:System.Web.UI.WebControls.DataList> элемента управления. После этого можно поместить атрибуты стиля в открывающем `<EditItemStyle>` тег.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A> свойство, чтобы указать различный внешний вид для элемента, выбранного пользователем для редактирования.  
  
> [!NOTE]
>  В следующем образце кода используется модель одного файла кода и могут работать неправильно, если скопировать непосредственно в файл кода. Этот пример кода необходимо скопировать в пустой текстовый файл с расширением .aspx. Дополнительные сведения о модели кода веб-форм см. в разделе [модель кода ASP.NET веб-форм страницы](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="EditItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EditItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.EditItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EditItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EditItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DataList.EditItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает шаблон элемента, выбранного для редактирования в элементе управления <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Объект <see cref="T:System.Web.UI.ITemplate" />, содержащий шаблон выбранного для редактирования элемента в элементе управления <see cref="T:System.Web.UI.WebControls.DataList" />. Значение по умолчанию — <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.DataList.EditItemTemplate%2A> свойства для управления содержимым элемента, выбранного для редактирования в <xref:System.Web.UI.WebControls.DataList> элемента управления. Внешний вид элемента, выбранного для редактирования управляется <xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A> свойство.  
  
 Чтобы указать шаблон для элемента, выбранного для редактирования, поместите `<EditItemTemplate>` теги между открывающим и закрывающим тегами элемента <xref:System.Web.UI.WebControls.DataList> элемента управления. После этого можно перечислить содержимое шаблона между открывающим и закрывающим `<EditItemTemplate>` тегов.  
  
> [!CAUTION]
>  Этот элемент управления можно использовать для отображения введенных данных, в которых может содержаться вредоносный клиентский сценарий. Проверьте все сведения, которые отправляются от клиента для исполняемых сценариев, инструкций SQL и другого кода перед его отображения в приложении. Проверяющие элементы управления можно использовать для проверки введенных пользователем данных перед отображением входной текст в элементе управления. ASP.NET предоставляет возможность проверки входного запроса с блокировкой сценариев и HTML вводимые пользователем данные. Дополнительные сведения см. в разделе [защита стандартных элементов управления](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [как: защита от скриптов в веб-приложения путем применения HTML-кодирования строки](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), и [проверка пользовательского ввода в Веб-страницы ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.DataList.EditItemTemplate%2A> свойства для управления содержимым элемента, выбранного пользователем для редактирования.  
  
> [!NOTE]
>  В следующем образце кода используется модель одного файла кода и могут работать неправильно, если скопировать непосредственно в файл кода. Этот пример кода необходимо скопировать в пустой текстовый файл с расширением .aspx. Дополнительные сведения о модели кода веб-форм см. в разделе [модель кода ASP.NET веб-форм страницы](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemStyle" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="ExtractTemplateRows">
      <MemberSignature Language="C#" Value="public virtual bool ExtractTemplateRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExtractTemplateRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ExtractTemplateRows" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ExtractTemplateRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ExtractTemplateRows { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExtractTemplateRows : bool with get, set" Usage="System.Web.UI.WebControls.DataList.ExtractTemplateRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, извлекаются ли и отображаются ли строки элемента управления <see cref="T:System.Web.UI.WebControls.Table" />, определенные в каждом шаблоне элемента управления <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Значение <see langword="true" />, если строки элемента управления <see cref="T:System.Web.UI.WebControls.Table" />, определенные в каждом шаблоне элемента управления <see cref="T:System.Web.UI.WebControls.DataList" />, извлекаются и отображаются; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Содержимое <xref:System.Web.UI.WebControls.DataList> управления задаются с помощью шаблонов. Обычно перечисляются элементы управления, которые нужно отобразить в шаблонах. Можно также поместить <xref:System.Web.UI.WebControls.Table> управления в шаблоне и отобразить строки таблицы.  
  
 Используйте <xref:System.Web.UI.WebControls.DataList.ExtractTemplateRows%2A> свойство, чтобы указать ли строки <xref:System.Web.UI.WebControls.Table> определенные в каждом шаблоне элемента управления <xref:System.Web.UI.WebControls.DataList> управления извлекаются и отображаются. Все строки, извлеченные из шаблона элемента <xref:System.Web.UI.WebControls.DataList> управления отображаются в одной таблице. Это позволяет создать одну таблицу из нескольких таблиц меньшего размера и по-прежнему поддерживать функции <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
> [!NOTE]
>  Если значение этого свойства `true`, необходимо указать правильный формат <xref:System.Web.UI.WebControls.Table> управления для каждого шаблона, необходимо включить в <xref:System.Web.UI.WebControls.DataList> элемента управления. Отображаются только строки таблицы. Все остальное содержимое шаблона будет игнорироваться. Необходимо использовать <xref:System.Web.UI.WebControls.Table> управления для правильной работы этой функции. <xref:System.Web.UI.HtmlControls.HtmlTable?displayProperty=nameWithType> Управления несовместим с этим свойством.  
  
 При создании ячейки для <xref:System.Web.UI.WebControls.Table> управления в шаблоне, можно использовать <xref:System.Web.UI.WebControls.TableCell.ColumnSpan%2A> свойство <xref:System.Web.UI.WebControls.TableCell> объекта для управления числом столбцов, которые занимает ячейка. Можно также использовать <xref:System.Web.UI.WebControls.TableCell.RowSpan%2A> свойства, количество строк, которые занимает ячейка.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A>, <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A>, И <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> свойства не влияют на внешний вид <xref:System.Web.UI.WebControls.DataList> управления, если значение этого свойства `true`.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.DataList.ExtractTemplateRows%2A> свойство для извлечения и отображения строк <xref:System.Web.UI.WebControls.Table> элементов управления, определенных в шаблонах <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
> [!NOTE]
>  В следующем образце кода используется модель одного файла кода и могут работать неправильно, если скопировать непосредственно в файл кода. Этот пример кода необходимо скопировать в пустой текстовый файл с расширением .aspx. Дополнительные сведения о модели кода веб-форм см. в разделе [модель кода ASP.NET веб-форм страницы](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic DataList.ExtractTemplateRows Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataList.ExtractTemplateRows Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataList.ExtractTemplateRows Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataList.ExtractTemplateRows Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.TableRow" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SeparatorTemplate" />
      </Docs>
    </Member>
    <Member MemberName="FooterStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FooterStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.FooterStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FooterStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ FooterStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FooterStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataList.FooterStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает свойства стиля нижнего колонтитула элемента управления <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Объект <see cref="T:System.Web.UI.WebControls.TableItemStyle" />, содержащий свойства стиля нижнего колонтитула элемента управления <see cref="T:System.Web.UI.WebControls.DataList" />. Значением по умолчанию является пустой объект <see cref="T:System.Web.UI.WebControls.TableItemStyle" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте это свойство для предоставления пользовательского стиля для нижнего колонтитула элемента <xref:System.Web.UI.WebControls.DataList> элемента управления. Общие атрибуты стиля, которые могут быть изменены включают основной цвет, цвет фона, шрифт и выравнивание содержимого в пределах ячейки. Предоставление различных стилей улучшает внешний вид <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
 <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> Свойство <xref:System.Web.UI.WebControls.DataList> управления наследует параметры стиля <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> свойство. Например, если указать красный цвет шрифта для <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> свойства <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> свойство также будет иметь красный цвет шрифта. Это позволяет придать общий внешний вид элемента управления, задав единственное свойство стиля. Наследуемые параметры стиля можно переопределить, задав <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> свойство. Например, можно задать синий цвет шрифта для <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> свойства, переопределив красный шрифт, указанный в <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> свойство.  
  
 Чтобы определить пользовательский стиль для нижнего колонтитула, поместите `<FooterStyle>` теги между открывающим и закрывающим тегами элемента <xref:System.Web.UI.WebControls.DataList> элемента управления. После этого можно поместить атрибуты стиля в открывающем `<FooterStyle>` тег.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataList.ShowFooter%2A> Свойству необходимо присвоить значение `true` для этого свойства быть видимым.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> свойство, чтобы указать пользовательский цвет фона для раздела нижнего колонтитула <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
> [!NOTE]
>  В следующем образце кода используется модель одного файла кода и могут работать неправильно, если скопировать непосредственно в файл кода. Этот пример кода необходимо скопировать в пустой текстовый файл с расширением .aspx. Дополнительные сведения о модели кода веб-форм см. в разделе [модель кода ASP.NET веб-форм страницы](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListHeaderStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListHeaderStyle/CS/datalistheaderstylecs.aspx#1)]
 [!code-aspx-vb[DataListHeaderStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListHeaderStyle/VB/datalistheaderstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataGrid.ShowFooter" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="FooterTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate FooterTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ FooterTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FooterTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DataList.FooterTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает шаблон для нижнего колонтитула элемента управления <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Объект <see cref="T:System.Web.UI.ITemplate" />, содержащий шаблон для нижнего колонтитула элемента управления <see cref="T:System.Web.UI.WebControls.DataList" />. Значение по умолчанию — <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A> свойство для управления содержимым нижнего колонтитула. Внешний вид нижнего колонтитула определяется <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> свойство.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataList.ShowFooter%2A> Свойству необходимо присвоить значение `true` для этого свойства быть видимым.  
  
 <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> Свойство <xref:System.Web.UI.WebControls.DataList> управления наследует параметры стиля <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> свойство. Например, если указать красный цвет шрифта для <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> свойства <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> свойство также будет иметь красный цвет шрифта. Это позволяет придать общий внешний вид элемента управления, задав единственное свойство стиля. Наследуемые параметры стиля можно переопределить, задав <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> свойство. Например, можно задать синий цвет шрифта для <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> свойства, переопределив красный шрифт, указанный в <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A> свойство.  
  
 Чтобы указать шаблон для нижнего колонтитула, поместите `<FooterTemplate>` теги между открывающим и закрывающим тегами элемента <xref:System.Web.UI.WebControls.DataList> элемента управления. После этого можно перечислить содержимое шаблона между открывающим и закрывающим `<FooterTemplate>` тегов.  
  
> [!CAUTION]
>  Этот элемент управления можно использовать для отображения введенных данных, в которых может содержаться вредоносный клиентский сценарий. Проверьте все сведения, которые отправляются от клиента для исполняемых сценариев, инструкций SQL и другого кода перед его отображения в приложении. Проверяющие элементы управления можно использовать для проверки введенных пользователем данных перед отображением входной текст в элементе управления. ASP.NET предоставляет возможность проверки входного запроса с блокировкой сценариев и HTML вводимые пользователем данные. Дополнительные сведения см. в разделе [защита стандартных элементов управления](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [как: защита от скриптов в веб-приложения путем применения HTML-кодирования строки](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), и [проверка пользовательского ввода в Веб-страницы ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A> свойства для управления содержимым раздела нижнего колонтитула <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
> [!NOTE]
>  В следующем образце кода используется модель одного файла кода и могут работать неправильно, если скопировать непосредственно в файл кода. Этот пример кода необходимо скопировать в пустой текстовый файл с расширением .aspx. Дополнительные сведения о модели кода веб-форм см. в разделе [модель кода ASP.NET веб-форм страницы](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListHeaderStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListHeaderStyle/CS/datalistheaderstylecs.aspx#1)]
 [!code-aspx-vb[DataListHeaderStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListHeaderStyle/VB/datalistheaderstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ShowFooter" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="GridLines">
      <MemberSignature Language="C#" Value="public override System.Web.UI.WebControls.GridLines GridLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.GridLines GridLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.GridLines" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property GridLines As GridLines" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::GridLines GridLines { System::Web::UI::WebControls::GridLines get(); void set(System::Web::UI::WebControls::GridLines value); };" />
      <MemberSignature Language="F#" Value="member this.GridLines : System.Web.UI.WebControls.GridLines with get, set" Usage="System.Web.UI.WebControls.DataList.GridLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridLines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает стиль линий сетки элемента управления <see cref="T:System.Web.UI.WebControls.DataList" />, если для свойства <see cref="P:System.Web.UI.WebControls.DataList.RepeatLayout" /> задано значение <see langword="RepeatLayout.Table" />.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Web.UI.WebControls.GridLines" />. Значение по умолчанию — <see langword="None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.DataList.GridLines%2A> свойство, чтобы указать стиль линий сетки для <xref:System.Web.UI.WebControls.DataList> элемента управления. В следующей таблице перечислены возможные стили.  
  
|Стиль|Описание:|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.GridLines.None>|Линии сетки.|  
|<xref:System.Web.UI.WebControls.GridLines.Horizontal>|Отображает горизонтальные линии сетки.|  
|<xref:System.Web.UI.WebControls.GridLines.Vertical>|Отображает вертикальные линии сетки.|  
|<xref:System.Web.UI.WebControls.GridLines.Both>|Отображает строки вертикальной и горизонтальной сетки.|  
  
> [!NOTE]
>  Это свойство применяется, только если <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> свойству `RepeatLayout.Table`.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.DataList.GridLines%2A> свойство для отображения строки вертикальной и горизонтальной сетки <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
> [!NOTE]
>  В следующем образце кода используется модель одного файла кода и могут работать неправильно, если скопировать непосредственно в файл кода. Этот пример кода необходимо скопировать в пустой текстовый файл с расширением .aspx. Дополнительные сведения о модели кода веб-форм см. в разделе [модель кода ASP.NET веб-форм страницы](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridLines" />
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.HeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HeaderStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ HeaderStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HeaderStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataList.HeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает свойства стиля для верхнего колонтитула элемента управления <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Объект <see cref="T:System.Web.UI.WebControls.TableItemStyle" />, содержащий свойства стиля для верхнего колонтитула элемента управления <see cref="T:System.Web.UI.WebControls.DataList" />. Значением по умолчанию является пустой объект <see cref="T:System.Web.UI.WebControls.TableItemStyle" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство можно использовать для предоставления пользовательского стиля Заголовок <xref:System.Web.UI.WebControls.DataList> элемента управления. Общие атрибуты стиля, которые могут быть изменены включают основной цвет, цвет фона, шрифт и выравнивание содержимого в пределах ячейки. Предоставление различных стилей улучшает внешний вид <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
 Для указания пользовательского стиля для верхнего колонтитула разместить `<HeaderStyle>` теги между открывающим и закрывающим тегами элемента <xref:System.Web.UI.WebControls.DataList> элемента управления. После этого можно поместить атрибуты стиля в открывающем `<HeaderStyle>` тег.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataList.ShowHeader%2A> Свойству необходимо присвоить значение `true` для этого свойства быть видимым.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> свойство, чтобы указать пользовательский цвет фона для области заголовка <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
> [!NOTE]
>  В следующем образце кода используется модель одного файла кода и могут работать неправильно, если скопировать непосредственно в файл кода. Этот пример кода необходимо скопировать в пустой текстовый файл с расширением .aspx. Дополнительные сведения о модели кода веб-форм см. в разделе [модель кода ASP.NET веб-форм страницы](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListHeaderStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListHeaderStyle/CS/datalistheaderstylecs.aspx#1)]
 [!code-aspx-vb[DataListHeaderStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListHeaderStyle/VB/datalistheaderstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ShowHeader" />
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.HeaderTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ HeaderTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DataList.HeaderTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает шаблон для верхнего колонтитула элемента управления <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Объект <see cref="T:System.Web.UI.ITemplate" />, содержащий шаблон для верхнего колонтитула элемента управления <see cref="T:System.Web.UI.WebControls.DataList" />. Значение по умолчанию — <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A> свойство для управления содержимым верхнего колонтитула. Внешний вид области заголовка определяется <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> свойство.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataList.ShowHeader%2A> Свойству необходимо присвоить значение `true` для этого свойства быть видимым.  
  
 Чтобы указать шаблон для верхнего колонтитула, поместите `<HeaderTemplate>` теги между открывающим и закрывающим тегами элемента <xref:System.Web.UI.WebControls.DataList> элемента управления. После этого можно перечислить содержимое шаблона между открывающим и закрывающим `<HeaderTemplate>` тегов.  
  
> [!CAUTION]
>  Этот элемент управления можно использовать для отображения введенных данных, в которых может содержаться вредоносный клиентский сценарий. Проверьте все сведения, которые отправляются от клиента для исполняемых сценариев, инструкций SQL и другого кода перед его отображения в приложении. Проверяющие элементы управления можно использовать для проверки введенных пользователем данных перед отображением входной текст в элементе управления. ASP.NET предоставляет возможность проверки входного запроса с блокировкой сценариев и HTML вводимые пользователем данные. Дополнительные сведения см. в разделе [защита стандартных элементов управления](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [как: защита от скриптов в веб-приложения путем применения HTML-кодирования строки](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), и [проверка пользовательского ввода в Веб-страницы ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A> свойства для управления содержимым разделе заголовка <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
> [!NOTE]
>  В следующем образце кода используется модель одного файла кода и могут работать неправильно, если скопировать непосредственно в файл кода. Этот пример кода необходимо скопировать в пустой текстовый файл с расширением .aspx. Дополнительные сведения о модели кода веб-форм см. в разделе [модель кода ASP.NET веб-форм страницы](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.HeaderStyle" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="InitializeItem">
      <MemberSignature Language="C#" Value="protected virtual void InitializeItem (System.Web.UI.WebControls.DataListItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeItem(class System.Web.UI.WebControls.DataListItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.InitializeItem(System.Web.UI.WebControls.DataListItem)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeItem (item As DataListItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeItem(System::Web::UI::WebControls::DataListItem ^ item);" />
      <MemberSignature Language="F#" Value="abstract member InitializeItem : System.Web.UI.WebControls.DataListItem -&gt; unit&#xA;override this.InitializeItem : System.Web.UI.WebControls.DataListItem -&gt; unit" Usage="dataList.InitializeItem item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Web.UI.WebControls.DataListItem" />
      </Parameters>
      <Docs>
        <param name="item">Объект <see cref="T:System.Web.UI.WebControls.DataListItem" /> для инициализации.</param>
        <summary>Инициализирует объект <see cref="T:System.Web.UI.WebControls.DataListItem" /> на основе заданных шаблонов и стилей для определенного типа элементов списка.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> Метод используется преимущественно разработчиками элементов управления для расширения <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
 <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> Использует метод <xref:System.Web.UI.WebControls.DataList.CreateItem%2A> и <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> методы для создания <xref:System.Web.UI.WebControls.DataListItem> элементов управления, представляющих заголовка, нижнего колонтитула, разделителя и элементы привязки данных, содержащихся в списке данных. Можно обращаться к элементам с привязкой к данным для списка данных через <xref:System.Web.UI.WebControls.DataList.Items%2A> коллекции. Можно получить доступ к всех типов элементов, включая заголовка, нижнего колонтитула и разделительных элементов через <xref:System.Web.UI.WebControls.BaseDataList.Controls%2A> коллекции.  
  
 Переопределить <xref:System.Web.UI.WebControls.DataList.CreateControlHierarchy%2A> метод для настройки способа <xref:System.Web.UI.WebControls.DataListItem> создаются или добавить элементы управления <xref:System.Web.UI.WebControls.DataList> управления. Переопределить <xref:System.Web.UI.WebControls.DataList.InitializeItem%2A> метод для настройки шаблонов для <xref:System.Web.UI.WebControls.DataListItem> элемента управления.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataList.CreateItem(System.Int32,System.Web.UI.WebControls.ListItemType)" />
        <altmember cref="T:System.Web.UI.WebControls.ListItemType" />
      </Docs>
    </Member>
    <Member MemberName="ItemCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler ItemCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler ItemCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.ItemCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ ItemCommand;" />
      <MemberSignature Language="F#" Value="member this.ItemCommand : System.Web.UI.WebControls.DataListCommandEventHandler " Usage="member this.ItemCommand : System.Web.UI.WebControls.DataListCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при нажатии любой кнопки в элементе управления <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.ItemCommand> Событие возникает при нажатии любой кнопки в <xref:System.Web.UI.WebControls.DataList> управления и часто используется, когда элемент управления "Кнопка" с пользовательским `CommandName` значение.  
  
 Дополнительные сведения об обработке событий см. в разделе [как: прием событий в приложениях Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
   
  
## Examples  
 В следующем примере кода показано, как задать и запрограммировать обработчик <xref:System.Web.UI.WebControls.DataList.ItemCommand> событие, чтобы выбрать элемент из <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
> [!NOTE]
>  В следующем образце кода используется модель одного файла кода и могут работать неправильно, если скопировать непосредственно в файл кода. Этот пример кода необходимо скопировать в пустой текстовый файл с расширением .aspx. Дополнительные сведения о модели кода веб-форм см. в разделе [модель кода ASP.NET веб-форм страницы](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemCommand2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand2/CS/datalistitemcommand2cs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand2/VB/datalistitemcommand2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemCreated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListItemEventHandler ItemCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListItemEventHandler ItemCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.ItemCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCreated As DataListItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListItemEventHandler ^ ItemCreated;" />
      <MemberSignature Language="F#" Value="member this.ItemCreated : System.Web.UI.WebControls.DataListItemEventHandler " Usage="member this.ItemCreated : System.Web.UI.WebControls.DataListItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит на сервере при создании записи в элементе управления <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.ItemCreated> Событие возникает, когда элемент в <xref:System.Web.UI.WebControls.DataList> создается элемент управления, как во время циклов приема-передачи, так и во время привязку данных к элементу управления.  
  
 <xref:System.Web.UI.WebControls.DataList.ItemCreated> Событие обычно используется для управления содержимым и внешним видом строки в <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
 Дополнительные сведения об обработке событий см. в разделе [как: прием событий в приложениях Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
   
  
## Examples  
 В следующем примере кода показано, как задать и запрограммировать обработчик <xref:System.Web.UI.WebControls.DataList.ItemCreated> событий для отображения записей в порядке <xref:System.Web.UI.WebControls.DataList> управления создаются.  
  
> [!NOTE]
>  В следующем образце кода используется модель одного файла кода и могут работать неправильно, если скопировать непосредственно в файл кода. Этот пример кода необходимо скопировать в пустой текстовый файл с расширением .aspx. Дополнительные сведения о модели кода веб-форм см. в разделе [модель кода ASP.NET веб-форм страницы](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCreated/CS/datalistitemcreatedcs.aspx#1)]
 [!code-aspx-vb[DataListItemCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCreated/VB/datalistitemcreatedvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemCreated2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCreated2/CS/datalistitemcreated2cs.aspx#1)]
 [!code-aspx-vb[DataListItemCreated2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCreated2/VB/datalistitemcreated2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListItemEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListItemEventHandler ItemDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListItemEventHandler ItemDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.ItemDataBound" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDataBound As DataListItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListItemEventHandler ^ ItemDataBound;" />
      <MemberSignature Language="F#" Value="member this.ItemDataBound : System.Web.UI.WebControls.DataListItemEventHandler " Usage="member this.ItemDataBound : System.Web.UI.WebControls.DataListItemEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит, если элемент связан с элементом управления <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.ItemDataBound> События после элемента данных, привязанных к <xref:System.Web.UI.WebControls.DataList> элемента управления. Это событие предоставляет последнюю возможность доступа к элементу данных, прежде чем он отображается на стороне клиента. После данного события, элемент данных больше не доступно.  
  
 Дополнительные сведения об обработке событий см. в разделе [как: прием событий в приложениях Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
   
  
## Examples  
 В следующем примере кода показано, как задать и запрограммировать обработчик <xref:System.Web.UI.WebControls.DataList.ItemDataBound> событий для отображения записей в порядке <xref:System.Web.UI.WebControls.DataList> управления привязаны к элементу управления.  
  
> [!NOTE]
>  В следующем образце кода используется модель одного файла кода и могут работать неправильно, если скопировать непосредственно в файл кода. Этот пример кода необходимо скопировать в пустой текстовый файл с расширением .aspx. Дополнительные сведения о модели кода веб-форм см. в разделе [модель кода ASP.NET веб-форм страницы](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemDataBound/CS/datalistitemdataboundcs.aspx#1)]
 [!code-aspx-vb[DataListItemDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemDataBound/VB/datalistitemdataboundvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemDataBound2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemDataBound2/CS/datalistitemdatabound2cs.aspx#1)]
 [!code-aspx-vb[DataListItemDataBound2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemDataBound2/VB/datalistitemdatabound2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListItemEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataListItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataListItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.Items" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Items As DataListItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataListItemCollection ^ Items { System::Web::UI::WebControls::DataListItemCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Items : System.Web.UI.WebControls.DataListItemCollection" Usage="System.Web.UI.WebControls.DataList.Items" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает коллекцию объектов <see cref="T:System.Web.UI.WebControls.DataListItem" />, представляющих собой отдельные элементы в элементе управления.</summary>
        <value>Класс <see cref="T:System.Web.UI.WebControls.DataListItemCollection" />, содержащий коллекцию объектов <see cref="T:System.Web.UI.WebControls.DataListItem" />, представляющих отдельные элементы в элементе управления <see cref="T:System.Web.UI.WebControls.DataList" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.DataList.Items%2A> коллекции для программного управления записями в <xref:System.Web.UI.WebControls.DataList> элемента управления. <xref:System.Web.UI.WebControls.DataList.Items%2A> Коллекции предоставляет методы для добавления или удаления элементов в коллекцию. Тем не менее, можно управлять содержимым элемента с помощью обработчика для <xref:System.Web.UI.WebControls.DataList.ItemCreated> события.  
  
> [!NOTE]
>  Только элементы, привязанных к источнику данных содержащихся в <xref:System.Web.UI.WebControls.DataList.Items%2A> коллекции. Верхний колонтитул, нижний колонтитул и разделитель не включаются в коллекции.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.DataList.Items%2A> коллекции для отображения элементов в <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
> [!NOTE]
>  В следующем образце кода используется модель одного файла кода и могут работать неправильно, если скопировать непосредственно в файл кода. Этот пример кода необходимо скопировать в пустой текстовый файл с расширением .aspx. Дополнительные сведения о модели кода веб-форм см. в разделе [модель кода ASP.NET веб-форм страницы](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic DataList.Items Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataList.Items Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataList.Items Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataList.Items Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListItem" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.ItemCreated" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle ItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle ItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ ItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ItemStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataList.ItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает свойства стиля элементов в элементе управления <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Объект <see cref="T:System.Web.UI.WebControls.TableItemStyle" />, содержащий свойства стиля элементов в элементе управления <see cref="T:System.Web.UI.WebControls.DataList" />. Значением по умолчанию является пустой объект <see cref="T:System.Web.UI.WebControls.TableItemStyle" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство используется для предоставления пользовательского стиля элементов <xref:System.Web.UI.WebControls.DataList> элемента управления. Общие атрибуты стиля, которые могут быть изменены включают основной цвет, цвет фона, шрифт и выравнивание содержимого в пределах ячейки. Предоставление различных стилей улучшает внешний вид <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
 Свойства стиля записи в <xref:System.Web.UI.WebControls.DataList> управления наследуются от одного свойства стиля записи к другому через иерархию. Свойства стиля элемента ниже в иерархии, наследуются свойства стиля элемента выше в иерархии. Например, если указать красный цвет шрифта для <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> свойство, все другие элемента свойств стиля в <xref:System.Web.UI.WebControls.DataList> управления также будет иметь красный цвет шрифта. Это позволяет предоставить общий внешний вид элемента управления, задав свойство стиля одного элемента. Можно переопределить наследуемые параметры стиля для свойства стиля элемента более высокого уровня в иерархии путем задания его свойств стиля. Например, можно задать синий цвет шрифта для <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> свойства, переопределив красный шрифт, указанный в <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> свойство. В следующей таблице перечислены порядок иерархии от самого высокого до самого низкого.  
  
|Приоритет|Свойство стиля|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 Для указания пользовательского стиля элементов <xref:System.Web.UI.WebControls.DataList> управления, поместите `<ItemStyle>` теги между открывающим и закрывающим тегами элемента <xref:System.Web.UI.WebControls.DataList> элемента управления. После этого можно поместить атрибуты стиля в открывающем `<ItemStyle>` тег.  
  
 Можно также использовать <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> свойство, чтобы предоставить различный внешний вид для чередующихся элементов в <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> свойство, чтобы указать другой цвет фона для элементов в <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
> [!NOTE]
>  В следующем образце кода используется модель одного файла кода и могут работать неправильно, если скопировать непосредственно в файл кода. Этот пример кода необходимо скопировать в пустой текстовый файл с расширением .aspx. Дополнительные сведения о модели кода веб-форм см. в разделе [модель кода ASP.NET веб-форм страницы](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemStyle/CS/datalistitemstylecs.aspx#1)]
 [!code-aspx-vb[DataListItemStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemStyle/VB/datalistitemstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.AlternatingItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DataList.ItemTemplate" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IWizardSideBarListControl.ItemTemplate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает шаблоны элементов в элементе управления <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Объект <see cref="T:System.Web.UI.ITemplate" />, содержащий шаблон элементов в элементе управления <see cref="T:System.Web.UI.WebControls.DataList" />. Значение по умолчанию — <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A> свойства для управления содержимым элементов в <xref:System.Web.UI.WebControls.DataList> элемента управления. Внешний вид элементов в <xref:System.Web.UI.WebControls.DataList> управления управляется <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> свойство.  
  
 Для указания шаблона элементов <xref:System.Web.UI.WebControls.DataList> управления, поместите `<ItemTemplate>` теги между открывающим и закрывающим тегами элемента <xref:System.Web.UI.WebControls.DataList> элемента управления. После этого можно перечислить содержимое шаблона между открывающим и закрывающим `<ItemTemplate>` тегов.  
  
 При необходимости можно использовать <xref:System.Web.UI.WebControls.DataList.AlternatingItemTemplate%2A> свойство, чтобы предоставить различный внешний вид для чередующихся элементов в <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
> [!CAUTION]
>  Этот элемент управления можно использовать для отображения введенных данных, в которых может содержаться вредоносный клиентский сценарий. Проверьте все сведения, которые отправляются от клиента для исполняемых сценариев, инструкций SQL и другого кода перед его отображения в приложении. Проверяющие элементы управления можно использовать для проверки введенных пользователем данных перед отображением входной текст в элементе управления. ASP.NET предоставляет возможность проверки входного запроса с блокировкой сценариев и HTML вводимые пользователем данные. Дополнительные сведения см. в разделе [защита стандартных элементов управления](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [как: защита от скриптов в веб-приложения путем применения HTML-кодирования строки](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), и [проверка пользовательского ввода в Веб-страницы ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.DataList.ItemTemplate%2A> свойства для управления содержимым элементов в <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
> [!NOTE]
>  В следующем образце кода используется модель одного файла кода и могут работать неправильно, если скопировать непосредственно в файл кода. Этот пример кода необходимо скопировать в пустой текстовый файл с расширением .aspx. Дополнительные сведения о модели кода веб-форм см. в разделе [модель кода ASP.NET веб-форм страницы](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.ItemStyle" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="dataList.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Объект, представляющий состояние <see cref="T:System.Web.UI.WebControls.DataList" />.</param>
        <summary>Загружает предварительно сохраненное состояние представления элемента управления <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод используется главным образом инфраструктурой платформы .NET Framework и не предназначен для использования непосредственно из программного кода.  Однако разработчики элементов управления можно переопределить этот метод, чтобы задать способ восстановления состояния представления в серверного элемента управления. Дополнительные сведения см. в разделе [управлении](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
 <xref:System.Web.UI.WebControls.DataList.LoadViewState%2A> Метод восстанавливает сведения о состоянии представления для <xref:System.Web.UI.WebControls.DataList> управления из предыдущего запроса страницы, которые были сохранены в <xref:System.Web.UI.WebControls.DataList.SaveViewState%2A> метод.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataList.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBubbleEvent : obj * EventArgs -&gt; bool" Usage="dataList.OnBubbleEvent (source, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">Источник события.</param>
        <param name="e">Данные события.</param>
        <summary>Определяет, передается ли событие серверного элемента управления вверх по иерархии серверных элементов управления пользовательского интерфейса страницы.</summary>
        <returns>Значение <see langword="true" />, если событие было отменено, в противном случае — значение <see langword="false" />. Значение по умолчанию: <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnCancelCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnCancelCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCancelCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCancelCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCancelCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnCancelCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit&#xA;override this.OnCancelCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit" Usage="dataList.OnCancelCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />. Это позволяет предоставить настраиваемый обработчик для события.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.DataList.OnCancelCommand%2A> метод, чтобы предоставить настраиваемый обработчик для <xref:System.Web.UI.WebControls.DataList.CancelCommand> события.  
  
 <xref:System.Web.UI.WebControls.DataList.CancelCommand> Событие возникает при `Cancel` кнопки для элемента в <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
 Типичный обработчик <xref:System.Web.UI.WebControls.DataList.CancelCommand> наборов событий <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> свойства `-1` (для отмены выбора элемента) и затем выполняет повторную привязку данных к <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
> [!CAUTION]
>  Этот элемент управления можно использовать для отображения введенных данных, в которых может содержаться вредоносный клиентский сценарий. Проверьте все сведения, которые отправляются от клиента для исполняемых сценариев, инструкций SQL и другого кода перед его отображения в приложении. Проверяющие элементы управления можно использовать для проверки введенных пользователем данных перед отображением входной текст в элементе управления. ASP.NET предоставляет возможность проверки входного запроса с блокировкой сценариев и HTML вводимые пользователем данные. Дополнительные сведения см. в разделе [защита стандартных элементов управления](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [как: защита от скриптов в веб-приложения путем применения HTML-кодирования строки](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), и [проверка пользовательского ввода в Веб-страницы ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [как: прием событий в приложениях Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 Метод <xref:System.Web.UI.WebControls.DataList.OnCancelCommand%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
   
  
## Examples  
 В следующем примере кода показано, как задать и запрограммировать обработчик <xref:System.Web.UI.WebControls.DataList.CancelCommand> событий. Он отменяет все изменения, внесенные в элемент <xref:System.Web.UI.WebControls.DataList> управления `Cancel` кнопки.  
  
> [!NOTE]
>  В следующем образце кода используется модель одного файла кода и могут работать неправильно, если скопировать непосредственно в файл кода. Этот пример кода необходимо скопировать в пустой текстовый файл с расширением .aspx. Дополнительные сведения о модели кода веб-форм см. в разделе [модель кода ASP.NET веб-форм страницы](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnDeleteCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleteCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleteCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleteCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleteCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDeleteCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit&#xA;override this.OnDeleteCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit" Usage="dataList.OnDeleteCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />. Это позволяет предоставить настраиваемый обработчик для события.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.DataList.OnDeleteCommand%2A> метод, чтобы предоставить настраиваемый обработчик для <xref:System.Web.UI.WebControls.DataList.DeleteCommand> события.  
  
 <xref:System.Web.UI.WebControls.DataList.DeleteCommand> Событие возникает при `Delete` кнопки для элемента в <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
 Типичный обработчик <xref:System.Web.UI.WebControls.DataList.DeleteCommand> события удаляет выбранный элемент из источника данных, а затем повторно привязывает данные <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [как: прием событий в приложениях Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 Метод <xref:System.Web.UI.WebControls.DataList.OnDeleteCommand%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
   
  
## Examples  
 В следующем примере кода показано, как задать и запрограммировать обработчик <xref:System.Web.UI.WebControls.DataList.DeleteCommand> событий. Он удаляет выбранный элемент в <xref:System.Web.UI.WebControls.DataList> управления `Delete` кнопки.  
  
> [!NOTE]
>  В следующем образце кода используется модель одного файла кода и могут работать неправильно, если скопировать непосредственно в файл кода. Этот пример кода необходимо скопировать в пустой текстовый файл с расширением .aspx. Дополнительные сведения о модели кода веб-форм см. в разделе [модель кода ASP.NET веб-форм страницы](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnEditCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnEditCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnEditCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnEditCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnEditCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnEditCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit&#xA;override this.OnEditCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit" Usage="dataList.OnEditCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Web.UI.WebControls.DataList.EditCommand" />. Это позволяет предоставить настраиваемый обработчик для события.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.DataList.OnEditCommand%2A> метод, чтобы предоставить настраиваемый обработчик для <xref:System.Web.UI.WebControls.DataList.EditCommand> события.  
  
 <xref:System.Web.UI.WebControls.DataList.EditCommand> Событие возникает при `Edit` кнопки для элемента в <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
 Типичный обработчик <xref:System.Web.UI.WebControls.DataList.EditCommand> наборов событий <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> свойство выделенную строку и затем выполняет повторную привязку данных к <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
> [!CAUTION]
>  Этот элемент управления можно использовать для отображения введенных данных, в которых может содержаться вредоносный клиентский сценарий. Проверьте все сведения, которые отправляются от клиента для исполняемых сценариев, инструкций SQL и другого кода перед его отображения в приложении. Проверяющие элементы управления можно использовать для проверки введенных пользователем данных перед отображением входной текст в элементе управления. ASP.NET предоставляет возможность проверки входного запроса с блокировкой сценариев и HTML вводимые пользователем данные. Дополнительные сведения см. в разделе [защита стандартных элементов управления](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [как: защита от скриптов в веб-приложения путем применения HTML-кодирования строки](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), и [проверка пользовательского ввода в Веб-страницы ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [как: прием событий в приложениях Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 Метод <xref:System.Web.UI.WebControls.DataList.OnEditCommand%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
   
  
## Examples  
 В следующем примере кода показано, как задать и запрограммировать обработчик <xref:System.Web.UI.WebControls.DataList.EditCommand> событий. Позволяет изменить выбранный элемент в <xref:System.Web.UI.WebControls.DataList> управления `Edit` кнопки.  
  
> [!NOTE]
>  В следующем образце кода используется модель одного файла кода и могут работать неправильно, если скопировать непосредственно в файл кода. Этот пример кода необходимо скопировать в пустой текстовый файл с расширением .aspx. Дополнительные сведения о модели кода веб-форм см. в разделе [модель кода ASP.NET веб-форм страницы](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="dataList.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Создает событие <see cref="E:System.Web.UI.Control.Init" /> элемента управления <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.OnInit%2A> Метод уведомляет <xref:System.Web.UI.WebControls.DataList> управления выполнить инициализацию, необходимые для создания и настройки экземпляра.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit&#xA;override this.OnItemCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit" Usage="dataList.OnItemCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Web.UI.WebControls.DataList.ItemCommand" />. Это позволяет предоставить настраиваемый обработчик для события.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.DataList.OnItemCommand%2A> метод, чтобы предоставить настраиваемый обработчик для <xref:System.Web.UI.WebControls.DataList.ItemCommand> события.  
  
 <xref:System.Web.UI.WebControls.DataList.ItemCommand> Событие возникает при нажатии любой кнопки в <xref:System.Web.UI.WebControls.DataList> управления и часто используется, когда элемент управления "Кнопка" с пользовательским `CommandName` значений, таких как `Add`в <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [как: прием событий в приложениях Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 Метод <xref:System.Web.UI.WebControls.DataList.OnItemCommand%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
   
  
## Examples  
 В следующем примере кода показано, как задать и запрограммировать обработчик <xref:System.Web.UI.WebControls.DataList.ItemCommand> событие, чтобы выбрать элемент из <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
> [!NOTE]
>  В следующем образце кода используется модель одного файла кода и могут работать неправильно, если скопировать непосредственно в файл кода. Этот пример кода необходимо скопировать в пустой текстовый файл с расширением .aspx. Дополнительные сведения о модели кода веб-форм см. в разделе [модель кода ASP.NET веб-форм страницы](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemCommand2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand2/CS/datalistitemcommand2cs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand2/VB/datalistitemcommand2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Web.UI.WebControls.DataList.OnItemCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.ItemCommand" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCreated (System.Web.UI.WebControls.DataListItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCreated(class System.Web.UI.WebControls.DataListItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCreated (e As DataListItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCreated(System::Web::UI::WebControls::DataListItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCreated : System.Web.UI.WebControls.DataListItemEventArgs -&gt; unit&#xA;override this.OnItemCreated : System.Web.UI.WebControls.DataListItemEventArgs -&gt; unit" Usage="dataList.OnItemCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.DataListItemEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Web.UI.WebControls.DataList.ItemCreated" />. Это позволяет предоставить настраиваемый обработчик для события.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.DataList.OnItemCreated%2A> метод, чтобы предоставить настраиваемый обработчик для <xref:System.Web.UI.WebControls.DataList.ItemCreated> события.  
  
 <xref:System.Web.UI.WebControls.DataList.ItemCreated> Событие возникает, когда элемент в <xref:System.Web.UI.WebControls.DataList> создается элемент управления, как во время циклов приема-передачи, так и во время привязку данных к элементу управления.  
  
 <xref:System.Web.UI.WebControls.DataList.ItemCreated> Событие обычно используется для управления содержимым и внешним видом строки в <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [как: прием событий в приложениях Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 Метод <xref:System.Web.UI.WebControls.DataList.OnItemCreated%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
   
  
## Examples  
 В следующем примере кода показано, как задать и запрограммировать обработчик <xref:System.Web.UI.WebControls.DataList.ItemCreated> событий для отображения записей в порядке <xref:System.Web.UI.WebControls.DataList> управления создаются.  
  
> [!NOTE]
>  В следующем образце кода используется модель одного файла кода и могут работать неправильно, если скопировать непосредственно в файл кода. Этот пример кода необходимо скопировать в пустой текстовый файл с расширением .aspx. Дополнительные сведения о модели кода веб-форм см. в разделе [модель кода ASP.NET веб-форм страницы](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCreated/CS/datalistitemcreatedcs.aspx#1)]
 [!code-aspx-vb[DataListItemCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCreated/VB/datalistitemcreatedvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemCreated2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCreated2/CS/datalistitemcreated2cs.aspx#1)]
 [!code-aspx-vb[DataListItemCreated2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCreated2/VB/datalistitemcreated2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Web.UI.WebControls.DataList.OnItemCreated(System.Web.UI.WebControls.DataListItemEventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.ItemCreated" />
        <altmember cref="T:System.Web.UI.WebControls.DataListItemEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDataBound (System.Web.UI.WebControls.DataListItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDataBound(class System.Web.UI.WebControls.DataListItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDataBound (e As DataListItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDataBound(System::Web::UI::WebControls::DataListItemEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemDataBound : System.Web.UI.WebControls.DataListItemEventArgs -&gt; unit&#xA;override this.OnItemDataBound : System.Web.UI.WebControls.DataListItemEventArgs -&gt; unit" Usage="dataList.OnItemDataBound e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.DataListItemEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Web.UI.WebControls.DataList.ItemDataBound" />. Это позволяет предоставить настраиваемый обработчик для события.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.DataList.OnItemDataBound%2A> метод, чтобы предоставить настраиваемый обработчик для <xref:System.Web.UI.WebControls.DataList.ItemDataBound> события.  
  
 <xref:System.Web.UI.WebControls.DataList.ItemDataBound> События после элемента данных, привязанных к <xref:System.Web.UI.WebControls.DataList> элемента управления. Это событие предоставляет последнюю возможность доступа к элементу данных, прежде чем он отображается на стороне клиента. После данного события, элемент данных больше не доступно.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [как: прием событий в приложениях Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 Метод <xref:System.Web.UI.WebControls.DataList.OnItemDataBound%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
   
  
## Examples  
 В следующем примере кода показано, как задать и запрограммировать обработчик <xref:System.Web.UI.WebControls.DataList.ItemDataBound> событий для отображения записей в порядке <xref:System.Web.UI.WebControls.DataList> управления привязаны к элементу управления.  
  
> [!NOTE]
>  В следующем образце кода используется модель одного файла кода и могут работать неправильно, если скопировать непосредственно в файл кода. Этот пример кода необходимо скопировать в пустой текстовый файл с расширением .aspx. Дополнительные сведения о модели кода веб-форм см. в разделе [модель кода ASP.NET веб-форм страницы](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemDataBound/CS/datalistitemdataboundcs.aspx#1)]
 [!code-aspx-vb[DataListItemDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemDataBound/VB/datalistitemdataboundvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListItemDataBound2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemDataBound2/CS/datalistitemdatabound2cs.aspx#1)]
 [!code-aspx-vb[DataListItemDataBound2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemDataBound2/VB/datalistitemdatabound2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Web.UI.WebControls.DataList.OnItemDataBound(System.Web.UI.WebControls.DataListItemEventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.ItemDataBound" />
        <altmember cref="T:System.Web.UI.WebControls.DataListItemEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnUpdateCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdateCommand (System.Web.UI.WebControls.DataListCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdateCommand(class System.Web.UI.WebControls.DataListCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdateCommand (e As DataListCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdateCommand(System::Web::UI::WebControls::DataListCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUpdateCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit&#xA;override this.OnUpdateCommand : System.Web.UI.WebControls.DataListCommandEventArgs -&gt; unit" Usage="dataList.OnUpdateCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.DataListItemEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />. Это позволяет предоставить настраиваемый обработчик для события.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.DataList.OnUpdateCommand%2A> метод, чтобы предоставить настраиваемый обработчик для <xref:System.Web.UI.WebControls.DataList.UpdateCommand> события.  
  
 <xref:System.Web.UI.WebControls.DataList.UpdateCommand> Событие возникает при `Update` кнопку для нажатии элемента.  
  
 Стандартный обработчик для <xref:System.Web.UI.WebControls.DataList.UpdateCommand> событий обновляет данные, задает <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> свойства `-1` (для отмены выбора элемента), а затем выполняет повторную привязку данных к <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
> [!CAUTION]
>  Этот элемент управления можно использовать для отображения введенных данных, в которых может содержаться вредоносный клиентский сценарий. Проверьте все сведения, которые отправляются от клиента для исполняемых сценариев, инструкций SQL и другого кода перед его отображения в приложении. Проверяющие элементы управления можно использовать для проверки введенных пользователем данных перед отображением входной текст в элементе управления. ASP.NET предоставляет возможность проверки входного запроса с блокировкой сценариев и HTML вводимые пользователем данные. Дополнительные сведения см. в разделе [защита стандартных элементов управления](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [как: защита от скриптов в веб-приложения путем применения HTML-кодирования строки](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), и [проверка пользовательского ввода в Веб-страницы ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [как: прием событий в приложениях Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
 Метод <xref:System.Web.UI.WebControls.DataList.OnUpdateCommand%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
   
  
## Examples  
 В следующем примере кода показано, как задать и запрограммировать обработчик <xref:System.Web.UI.WebControls.DataList.UpdateCommand> событий. Его можно обновить элемент, выбранный в <xref:System.Web.UI.WebControls.DataList> управления с новыми значениями, введенные пользователем при `Update` кнопки.  
  
> [!NOTE]
>  В следующем образце кода используется модель одного файла кода и могут работать неправильно, если скопировать непосредственно в файл кода. Этот пример кода необходимо скопировать в пустой текстовый файл с расширением .aspx. Дополнительные сведения о модели кода веб-форм см. в разделе [модель кода ASP.NET веб-форм страницы](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnCancelCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnDeleteCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnEditCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="PrepareControlHierarchy">
      <MemberSignature Language="C#" Value="protected internal override void PrepareControlHierarchy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PrepareControlHierarchy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.PrepareControlHierarchy" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PrepareControlHierarchy ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PrepareControlHierarchy();" />
      <MemberSignature Language="F#" Value="override this.PrepareControlHierarchy : unit -&gt; unit" Usage="dataList.PrepareControlHierarchy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Готовит иерархию элементов управления к отрисовке в элементе управления <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.PrepareControlHierarchy%2A> Метод используется преимущественно разработчиками элементов управления при создании производного пользовательского элемента управления из <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
 <xref:System.Web.UI.WebControls.DataList.PrepareControlHierarchy%2A> Подготавливает иерархии элементов управления и задает стили для содержится <xref:System.Web.UI.WebControls.DataListItem> управляет перед отрисовкой дочерних элементов управления.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Переопределить <see cref="M:System.Web.UI.WebControls.DataList.PrepareControlHierarchy" /> метод для настройки стили для элементов управления, содержащихся в <see cref="T:System.Web.UI.WebControls.DataList" /> перед подготовкой к просмотру.</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.DataList.RenderContents(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="dataList.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Объект <see cref="T:System.Web.UI.HtmlTextWriter" />, представляющий поток вывода для отрисовки HTML-содержимого на стороне клиента.</param>
        <summary>Преобразовывает для просмотра элементы списка в элементе управления <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.RenderContents%2A> Метод используется преимущественно разработчиками элементов управления при создании производного пользовательского элемента управления из <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
 <xref:System.Web.UI.WebControls.DataList.RenderContents%2A> Метод отображает содержимое внутреннего <xref:System.Web.UI.WebControls.DataList> управления, включая содержащиеся в нем <xref:System.Web.UI.WebControls.DataListItem> элементов управления.  
  
   
  
## Examples  
 В следующем примере кода показано, как переопределить <xref:System.Web.UI.WebControls.DataList.RenderContents%2A> метод в пользовательский сервер управления, чтобы текст предшествует <xref:System.Web.UI.WebControls.DataList> объекта.  
  
 [!code-aspx-csharp[CustomDataListRenderContents#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataListRenderContents/CS/custom_datalist_rendercontentscs.aspx#1)]
 [!code-aspx-vb[CustomDataListRenderContents#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataListRenderContents/VB/custom_datalist_rendercontentsvb.aspx#1)]  
[!code-csharp[CustomDataListRenderContents#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomDataListRenderContents/CS/custom_datalist_rendercontents.cs#2)]
[!code-vb[CustomDataListRenderContents#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomDataListRenderContents/VB/custom_datalist_rendercontents.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RepeatColumns">
      <MemberSignature Language="C#" Value="public virtual int RepeatColumns { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 RepeatColumns" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.RepeatColumns" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RepeatColumns As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int RepeatColumns { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.RepeatColumns : int with get, set" Usage="System.Web.UI.WebControls.DataList.RepeatColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает число столбцов для отображения в элементе управления <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Число столбцов для отображения в элементе управления <see cref="T:System.Web.UI.WebControls.DataList" />. Значение по умолчанию — число <see langword="0" />, свидетельствующее о том, что элементы в элементе управления <see cref="T:System.Web.UI.WebControls.DataList" /> отображаются в одной строке или столбце, в зависимости от значения свойства <see cref="P:System.Web.UI.WebControls.DataList.RepeatDirection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство определяет число столбцов, отображения элементов в <xref:System.Web.UI.WebControls.DataList> элемента управления. Например, если это свойство имеет значение `5`, <xref:System.Web.UI.WebControls.DataList> ее элементы управления отображаются в пять столбцов.  
  
> [!NOTE]
>  Если это свойство имеет значение `0`, <xref:System.Web.UI.WebControls.DataList> управления отображаться в одну строку или столбец, основанный на значении <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> свойство. Если <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> свойству `RepeatDirection.Horizontal`, элементы отображаются в одной строке. Если <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> свойству `RepeatDirection.Vertical`, элементы отображаются в одном столбце.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A> свойство, чтобы указать число столбцов для отображения в <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
> [!NOTE]
>  В следующем образце кода используется модель одного файла кода и могут работать неправильно, если скопировать непосредственно в файл кода. Этот пример кода необходимо скопировать в пустой текстовый файл с расширением .aspx. Дополнительные сведения о модели кода веб-форм см. в разделе [модель кода ASP.NET веб-форм страницы](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Заданное число столбцов является отрицательным значением.</exception>
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatDirection" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatLayout" />
      </Docs>
    </Member>
    <Member MemberName="RepeatDirection">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.RepeatDirection RepeatDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.RepeatDirection RepeatDirection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.RepeatDirection" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RepeatDirection As RepeatDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::RepeatDirection RepeatDirection { System::Web::UI::WebControls::RepeatDirection get(); void set(System::Web::UI::WebControls::RepeatDirection value); };" />
      <MemberSignature Language="F#" Value="member this.RepeatDirection : System.Web.UI.WebControls.RepeatDirection with get, set" Usage="System.Web.UI.WebControls.DataList.RepeatDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.RepeatDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает горизонтальную или вертикальную ориентацию элемента управления <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Web.UI.WebControls.RepeatDirection" />. Значение по умолчанию: <see langword="Vertical" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> свойство, чтобы указать направление отображения <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
> [!NOTE]
>  Число отображаемых столбцов всегда определяется <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A> свойство.  
  
 Если это свойство имеет значение `RepeatDirection.Vertical`, элементы списка отображаются в столбцах сверху вниз, а затем слева направо, пока не будут отображены все элементы. Например если <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A> свойству `3`, элементы в <xref:System.Web.UI.WebControls.DataList> управления отображаются в трех столбцах, как в следующей таблице.  
  
||||  
|-|-|-|  
|1|4|7|  
|2|5|8|  
|3|6|9|  
  
 Если это свойство имеет значение `RepeatDirection.Horizontal`, элементы в списке отображаются в строках слева направо, сверху вниз, пока не будут отображены все элементы. Например если <xref:System.Web.UI.WebControls.DataList.RepeatColumns%2A> свойству `3`, элементы <xref:System.Web.UI.WebControls.DataList> управления отображаются в строках с тремя элементами, как показано в следующей таблице.  
  
||||  
|-|-|-|  
|1|2|3|  
|4|5|6|  
|7|8|9|  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.DataList.RepeatDirection%2A> свойство, чтобы указать направление, в котором <xref:System.Web.UI.WebControls.DataList> отображается элемент управления.  
  
> [!NOTE]
>  В следующем образце кода используется модель одного файла кода и могут работать неправильно, если скопировать непосредственно в файл кода. Этот пример кода необходимо скопировать в пустой текстовый файл с расширением .aspx. Дополнительные сведения о модели кода веб-форм см. в разделе [модель кода ASP.NET веб-форм страницы](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Указанное значение не является одним из значений <see cref="T:System.Web.UI.WebControls.RepeatDirection" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.RepeatDirection" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatColumns" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatLayout" />
      </Docs>
    </Member>
    <Member MemberName="RepeatLayout">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.RepeatLayout RepeatLayout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.RepeatLayout RepeatLayout" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.RepeatLayout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RepeatLayout As RepeatLayout" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::RepeatLayout RepeatLayout { System::Web::UI::WebControls::RepeatLayout get(); void set(System::Web::UI::WebControls::RepeatLayout value); };" />
      <MemberSignature Language="F#" Value="member this.RepeatLayout : System.Web.UI.WebControls.RepeatLayout with get, set" Usage="System.Web.UI.WebControls.DataList.RepeatLayout" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.RepeatLayout</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает формат отображения элемента управления: табличный или поточный.</summary>
        <value>Значение, определяющее, должен ли элемент управления отображаться в табличном или потоковом макете.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> свойство, чтобы указать ли элементы в <xref:System.Web.UI.WebControls.DataList> управления отображаются в таблице. Единственным <xref:System.Web.UI.WebControls.RepeatLayout> значения, которые поддерживаются <xref:System.Web.UI.WebControls.DataList> управления <xref:System.Web.UI.WebControls.RepeatLayout.Table> и <xref:System.Web.UI.WebControls.RepeatLayout.Flow>.  
  
 Если это свойство имеет значение `RepeatLayout.Table`, элементы в списке отображаются в таблице. Если это свойство имеет значение `RepeatLayout.Flow`, элементы в списке отображаются без структуры таблицы.  
  
 Когда <xref:System.Web.UI.WebControls.DataList> элемент управления отображается в таблице, можно использовать <xref:System.Web.UI.WebControls.DataList.GridLines%2A> свойство, чтобы указать стиль линий сетки.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.DataList.RepeatLayout%2A> свойство, чтобы указать стиль макета <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
> [!NOTE]
>  В следующем образце кода используется модель одного файла кода и могут работать неправильно, если скопировать непосредственно в файл кода. Этот пример кода необходимо скопировать в пустой текстовый файл с расширением .aspx. Дополнительные сведения о модели кода веб-форм см. в разделе [модель кода ASP.NET веб-форм страницы](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListLayout#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListLayout/CS/datalistlayoutcs.aspx#1)]
 [!code-aspx-vb[DataListLayout#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListLayout/VB/datalistlayoutvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Указанное значение не является одним из поддерживаемых значений <see cref="T:System.Web.UI.WebControls.RepeatLayout" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.RepeatLayout" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatColumns" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.RepeatDirection" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.GridLines" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="dataList.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Сохраняет изменения в состоянии представления элемента управления после обратной передачи страницы на сервер.</summary>
        <returns>Объект, содержащий изменения состояния представления <see cref="T:System.Web.UI.WebControls.DataList" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.SaveViewState%2A> Метод используется преимущественно разработчиками элементов управления.  
  
 Состояние представления — это совокупность значений свойств элемента управления. Эти значения автоматически помещаются в серверном элементе управления <xref:System.Web.UI.Control.ViewState%2A> свойство, которое является экземпляром объекта <xref:System.Web.UI.StateBag> класса. <xref:System.Web.UI.Control.ViewState%2A> Значение свойства сохраняется в строку объекта после этапа сохранения состояния жизненного цикла серверного элемента управления. Дополнительные сведения см. в разделе [Общие сведения о жизненном цикле страницы ASP.NET](http://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991).  
  
 При сохранении состояния представления, объект-строка возвращается клиенту как переменную, которая хранится в скрытом элементе ввода HTML. При создании пользовательских серверных элементов управления, можно повысить эффективность путем переопределения <xref:System.Web.UI.WebControls.DataList.SaveViewState%2A> метод и изменение <xref:System.Web.UI.Control.ViewState%2A> свойства для серверного элемента управления. Дополнительные сведения см. в разделе [Разработка пользовательских серверных элементов управления ASP.NET](http://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef) и [управлении](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataList.TrackViewState" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="SelectCommandName">
      <MemberSignature Language="C#" Value="public const string SelectCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string SelectCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const SelectCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ SelectCommandName;" />
      <MemberSignature Language="F#" Value="val mutable SelectCommandName : string" Usage="System.Web.UI.WebControls.DataList.SelectCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет имя команды <see langword="Select" />. Это поле доступно только для чтения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.DataList.SelectCommandName> поле для представления `Select` имя команды.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      </Docs>
    </Member>
    <Member MemberName="SelectedIndex">
      <MemberSignature Language="C#" Value="public virtual int SelectedIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 SelectedIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int SelectedIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedIndex : int with get, set" Usage="System.Web.UI.WebControls.DataList.SelectedIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IWizardSideBarListControl.SelectedIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает индекс выбранного элемента в элементе управления <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Индекс выбранного элемента в элементе управления <see cref="T:System.Web.UI.WebControls.DataList" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> свойство, чтобы программно указать элемент, выбранный в <xref:System.Web.UI.WebControls.DataList> элемента управления. Это свойство может использоваться для определения индекса выбранного элемента.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> Свойства начинается с нуля.  
  
 Чтобы отменить выбор элемента, установите <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> свойства `-1`.  
  
 <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> Свойство хранится в состоянии элемента управления.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.DataList.SelectedIndex%2A> свойство, чтобы указать элемент, выбранный в <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
> [!NOTE]
>  В следующем образце кода используется модель одного файла кода и могут работать неправильно, если скопировать непосредственно в файл кода. Этот пример кода необходимо скопировать в пустой текстовый файл с расширением .aspx. Дополнительные сведения о модели кода веб-форм см. в разделе [модель кода ASP.NET веб-форм страницы](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Заданное значение меньше <see langword="-1" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItem" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItem">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataListItem SelectedItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataListItem SelectedItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SelectedItem As DataListItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataListItem ^ SelectedItem { System::Web::UI::WebControls::DataListItem ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItem : System.Web.UI.WebControls.DataListItem" Usage="System.Web.UI.WebControls.DataList.SelectedItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListItem</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает выбранный элемент в элементе управления <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Объект <see cref="T:System.Web.UI.WebControls.DataListItem" />, представляющий выбранный элемент в элементе управления <see cref="T:System.Web.UI.WebControls.DataList" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.DataList.SelectedItem%2A> свойства <xref:System.Web.UI.WebControls.DataListItem> , представляющий элемент, выбранный в <xref:System.Web.UI.WebControls.DataList> элемента управления. Этот объект можно получить доступ к свойствам выбранного элемента.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.DataList.SelectedItem%2A> свойство для отображения содержимого элемента, выбранного в <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
> [!NOTE]
>  В следующем образце кода используется модель одного файла кода и могут работать неправильно, если скопировать непосредственно в файл кода. Этот пример кода необходимо скопировать в пустой текстовый файл с расширением .aspx. Дополнительные сведения о модели кода веб-форм см. в разделе [модель кода ASP.NET веб-форм страницы](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Classic DataList.SelectedItem Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic DataList.SelectedItem Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic DataList.SelectedItem Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic DataList.SelectedItem Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListItem" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItemStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle SelectedItemStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SelectedItemStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedItemStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SelectedItemStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ SelectedItemStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItemStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataList.SelectedItemStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает свойства стиля выбранных элементов в элементе управления <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Объект <see cref="T:System.Web.UI.WebControls.TableItemStyle" />, содержащий свойства стиля выбранного элемента в элементе управления <see cref="T:System.Web.UI.WebControls.DataList" />. Значением по умолчанию является пустой объект <see cref="T:System.Web.UI.WebControls.TableItemStyle" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство используется для предоставления пользовательского стиля для выбранного элемента в <xref:System.Web.UI.WebControls.DataList> элемента управления. Общие атрибуты стиля, которые могут быть изменены включают основной цвет, цвет фона, шрифт и выравнивание содержимого в пределах ячейки. Предоставление различных стилей улучшает внешний вид <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
 Свойства стиля записи в <xref:System.Web.UI.WebControls.DataList> управления наследуются от одного свойства стиля записи к другому через иерархию. Свойства стиля элемента ниже в иерархии, наследуются свойства стиля элемента выше в иерархии. Например, если указать красный цвет шрифта для <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> свойство, все другие элемента свойств стиля в <xref:System.Web.UI.WebControls.DataList> управления также будет иметь красный цвет шрифта. Это позволяет предоставить общий внешний вид элемента управления, задав свойство стиля одного элемента. Можно переопределить наследуемые параметры стиля для свойства стиля элемента более высокого уровня в иерархии путем задания его свойств стиля. Например, можно задать синий цвет шрифта для <xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A> свойства, переопределив красный шрифт, указанный в <xref:System.Web.UI.WebControls.DataList.ItemStyle%2A> свойство. В следующей таблице перечислены порядок иерархии от самого высокого до самого низкого.  
  
|Приоритет|Свойство стиля|  
|----------------|--------------------|  
|1|<xref:System.Web.UI.WebControls.DataList.EditItemStyle%2A>|  
|2|<xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A>|  
|3|<xref:System.Web.UI.WebControls.DataList.AlternatingItemStyle%2A>|  
|4|<xref:System.Web.UI.WebControls.DataList.ItemStyle%2A>|  
|5|<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>|  
  
 Чтобы определить пользовательский стиль для выбранного элемента, поместите `<SelectedItemStyle>` теги между открывающим и закрывающим тегами элемента <xref:System.Web.UI.WebControls.DataList> элемента управления. После этого можно поместить атрибуты стиля в открывающем `<SelectedItemStyle>` тег.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A> свойство, чтобы указать пользовательский цвет фона для элемента, выбранного в <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
> [!NOTE]
>  В следующем образце кода используется модель одного файла кода и могут работать неправильно, если скопировать непосредственно в файл кода. Этот пример кода необходимо скопировать в пустой текстовый файл с расширением .aspx. Дополнительные сведения о модели кода веб-форм см. в разделе [модель кода ASP.NET веб-форм страницы](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItem" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="SelectedItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate SelectedItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate SelectedItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectedItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ SelectedItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectedItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DataList.SelectedItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает шаблоны для выбранного элемента в элементе управления <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Объект <see cref="T:System.Web.UI.ITemplate" />, содержащий шаблон для выбранного элемента в элементе управления <see cref="T:System.Web.UI.WebControls.DataList" />. Значение по умолчанию — <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.DataList.SelectedItemTemplate%2A> свойство для управления содержимым выбранного элемента. Внешний вид выбранного элемента определяется <xref:System.Web.UI.WebControls.DataList.SelectedItemStyle%2A> свойство.  
  
 Чтобы указать шаблон для выбранного элемента, поместите `<SelectedItemTemplate>` теги между открывающим и закрывающим тегами элемента <xref:System.Web.UI.WebControls.DataList> элемента управления. После этого можно перечислить содержимое шаблона между открывающим и закрывающим `<SelectedItemTemplate>` тегов.  
  
> [!CAUTION]
>  Этот элемент управления можно использовать для отображения введенных данных, в которых может содержаться вредоносный клиентский сценарий. Проверьте все сведения, которые отправляются от клиента для исполняемых сценариев, инструкций SQL и другого кода перед его отображения в приложении. Проверяющие элементы управления можно использовать для проверки введенных пользователем данных перед отображением входной текст в элементе управления. ASP.NET предоставляет возможность проверки входного запроса с блокировкой сценариев и HTML вводимые пользователем данные. Дополнительные сведения см. в разделе [защита стандартных элементов управления](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [как: защита от скриптов в веб-приложения путем применения HTML-кодирования строки](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), и [проверка пользовательского ввода в Веб-страницы ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.DataList.SelectedItemTemplate%2A> свойства для управления содержимым элемента, выбранного в <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
> [!NOTE]
>  В следующем образце кода используется модель одного файла кода и могут работать неправильно, если скопировать непосредственно в файл кода. Этот пример кода необходимо скопировать в пустой текстовый файл с расширением .aspx. Дополнительные сведения о модели кода веб-форм см. в разделе [модель кода ASP.NET веб-форм страницы](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListItemCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListItemCommand/CS/datalistitemcommandcs.aspx#1)]
 [!code-aspx-vb[DataListItemCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListItemCommand/VB/datalistitemcommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItem" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItemStyle" />
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public object SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectedValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedValue : obj" Usage="System.Web.UI.WebControls.DataList.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение поля ключа для выбранного элемента списка данных.</summary>
        <value>Поле ключа для выбранного элемента списка данных. Значение по умолчанию — <see langword="null" />. Оно указывает на то, что элемент списка данных в данный момент выбран.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">Свойство <see cref="P:System.Web.UI.WebControls.BaseDataList.DataKeyField" /> не установлено.</exception>
        <altmember cref="P:System.Web.UI.WebControls.BaseDataList.DataKeyField" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedIndex" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SelectedItem" />
      </Docs>
    </Member>
    <Member MemberName="SeparatorStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableItemStyle SeparatorStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SeparatorStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SeparatorStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SeparatorStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableItemStyle ^ SeparatorStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SeparatorStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.DataList.SeparatorStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает свойства стиля разделителя элементов в элементе управления <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Объект <see cref="T:System.Web.UI.WebControls.TableItemStyle" />, который содержит свойства стиля разделителя элементов в элементе управления <see cref="T:System.Web.UI.WebControls.DataList" />. Значением по умолчанию является пустой объект <see cref="T:System.Web.UI.WebControls.TableItemStyle" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A> свойства для предоставления пользовательского стиля в качестве разделителя между каждым элементом <xref:System.Web.UI.WebControls.DataList> элемента управления. Разделитель позволяет разместить элемент с пользовательским содержимым между каждым элементом <xref:System.Web.UI.WebControls.DataList> элемента управления. Общие атрибуты стиля, которые могут быть изменены включают основной цвет, цвет фона, шрифт и выравнивание содержимого в пределах ячейки. Предоставление различных стилей улучшает внешний вид <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
 Чтобы определить пользовательский стиль разделителя, поместите `<SeparatorStyle>` теги между открывающим и закрывающим тегами элемента <xref:System.Web.UI.WebControls.DataList> элемента управления. После этого можно поместить атрибуты стиля в открывающем `<SeparatorStyle>` тег.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A> свойство, чтобы указать пользовательский цвет фона в качестве разделителя между каждым элементом <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
> [!NOTE]
>  В следующем образце кода используется модель одного файла кода и могут работать неправильно, если скопировать непосредственно в файл кода. Этот пример кода необходимо скопировать в пустой текстовый файл с расширением .aspx. Дополнительные сведения о модели кода веб-форм см. в разделе [модель кода ASP.NET веб-форм страницы](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListSeparatorStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListSeparatorStyle/CS/datalistseparatorstylecs.aspx#1)]
 [!code-aspx-vb[DataListSeparatorStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListSeparatorStyle/VB/datalistseparatorstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.SeparatorTemplate" />
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="SeparatorTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate SeparatorTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate SeparatorTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.SeparatorTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SeparatorTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ SeparatorTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SeparatorTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.DataList.SeparatorTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.DataListItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает шаблон для разделителя элементов в элементе управления <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Объект <see cref="T:System.Web.UI.ITemplate" />, содержащий шаблон для разделителя элементов в элементе управления <see cref="T:System.Web.UI.WebControls.DataList" />. Значение по умолчанию — <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.DataList.SeparatorTemplate%2A> свойства для управления содержимым разделителя элементов <xref:System.Web.UI.WebControls.DataList> элемента управления. Разделитель позволяет разместить элемент с пользовательским содержимым между каждым элементом <xref:System.Web.UI.WebControls.DataList> элемента управления. Внешний вид разделителя элементов <xref:System.Web.UI.WebControls.DataList> управления управляется <xref:System.Web.UI.WebControls.DataList.SeparatorStyle%2A> свойство.  
  
 Чтобы указать шаблон для разделителя, поместите `<SeparatorTemplate>` теги между открывающим и закрывающим тегами элемента <xref:System.Web.UI.WebControls.DataList> элемента управления. После этого можно перечислить содержимое шаблона между открывающим и закрывающим `<SeparatorTemplate>` тегов.  
  
> [!CAUTION]
>  Этот элемент управления можно использовать для отображения введенных данных, в которых может содержаться вредоносный клиентский сценарий. Проверьте все сведения, которые отправляются от клиента для исполняемых сценариев, инструкций SQL и другого кода перед его отображения в приложении. Проверяющие элементы управления можно использовать для проверки введенных пользователем данных перед отображением входной текст в элементе управления. ASP.NET предоставляет возможность проверки входного запроса с блокировкой сценариев и HTML вводимые пользователем данные. Дополнительные сведения см. в разделе [защита стандартных элементов управления](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [как: защита от скриптов в веб-приложения путем применения HTML-кодирования строки](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), и [проверка пользовательского ввода в Веб-страницы ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.DataList.SeparatorTemplate%2A> свойства для управления содержимым разделителя между каждым элементом <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
> [!NOTE]
>  В следующем образце кода используется модель одного файла кода и могут работать неправильно, если скопировать непосредственно в файл кода. Этот пример кода необходимо скопировать в пустой текстовый файл с расширением .aspx. Дополнительные сведения о модели кода веб-форм см. в разделе [модель кода ASP.NET веб-форм страницы](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListSeparatorStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListSeparatorStyle/CS/datalistseparatorstylecs.aspx#1)]
 [!code-aspx-vb[DataListSeparatorStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListSeparatorStyle/VB/datalistseparatorstylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.SeparatorStyle" />
      </Docs>
    </Member>
    <Member MemberName="ShowFooter">
      <MemberSignature Language="C#" Value="public virtual bool ShowFooter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowFooter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ShowFooter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShowFooter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShowFooter { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowFooter : bool with get, set" Usage="System.Web.UI.WebControls.DataList.ShowFooter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, позволяющее определить, отображается ли нижний колонтитул в элементе управления <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Значение <see langword="true" />, если нижний колонтитул отображается; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />, однако это свойство проверяется, только если значением свойства <see cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" /> не является <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.DataList.ShowFooter%2A> свойство, чтобы указать, отображается ли нижний колонтитул в <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
 Можно задать внешний вид нижнего колонтитула, установив <xref:System.Web.UI.WebControls.DataList.FooterStyle%2A> свойство. Содержимое нижнего колонтитула управляются <xref:System.Web.UI.WebControls.DataList.FooterTemplate%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.DataList.ShowFooter%2A> свойство для отображения нижнего колонтитула в <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
> [!NOTE]
>  В следующем образце кода используется модель одного файла кода и могут работать неправильно, если скопировать непосредственно в файл кода. Этот пример кода необходимо скопировать в пустой текстовый файл с расширением .aspx. Дополнительные сведения о модели кода веб-форм см. в разделе [модель кода ASP.NET веб-форм страницы](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListShowHeader#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListShowHeader/CS/datalistshowheadercs.aspx#1)]
 [!code-aspx-vb[DataListShowHeader#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListShowHeader/VB/datalistshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.FooterTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ShowHeader">
      <MemberSignature Language="C#" Value="public virtual bool ShowHeader { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.ShowHeader" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ShowHeader As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ShowHeader { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowHeader : bool with get, set" Usage="System.Web.UI.WebControls.DataList.ShowHeader" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, позволяющее определить, отображается ли верхний колонтитул в элементе управления <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Значение <see langword="true" />, если верхний колонтитул отображается; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />, однако это свойство проверяется, только если значением свойства <see cref="P:System.Web.UI.WebControls.DataList.HeaderTemplate" /> не является <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.DataList.ShowHeader%2A> свойство, чтобы указать, отображается ли раздел заголовка в <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
 Можно задать внешний вид раздела заголовка, установив <xref:System.Web.UI.WebControls.DataList.HeaderStyle%2A> свойство. Содержимое заголовка раздела управляются <xref:System.Web.UI.WebControls.DataList.HeaderTemplate%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.DataList.ShowHeader%2A> свойство для отображения заголовка раздела <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
> [!NOTE]
>  В следующем образце кода используется модель одного файла кода и могут работать неправильно, если скопировать непосредственно в файл кода. Этот пример кода необходимо скопировать в пустой текстовый файл с расширением .aspx. Дополнительные сведения о модели кода веб-форм см. в разделе [модель кода ASP.NET веб-форм страницы](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListShowHeader#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListShowHeader/CS/datalistshowheadercs.aspx#1)]
 [!code-aspx-vb[DataListShowHeader#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListShowHeader/VB/datalistshowheadervb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DataList.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.DataList.HeaderTemplate" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.Style IRepeatInfoUser.GetItemStyle (System.Web.UI.WebControls.ListItemType itemType, int repeatIndex);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.WebControls.Style System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(valuetype System.Web.UI.WebControls.ListItemType itemType, int32 repeatIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Function GetItemStyle (itemType As ListItemType, repeatIndex As Integer) As Style Implements IRepeatInfoUser.GetItemStyle" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Web::UI::WebControls::Style ^ System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(System::Web::UI::WebControls::ListItemType itemType, int repeatIndex) = System::Web::UI::WebControls::IRepeatInfoUser::GetItemStyle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
        <Parameter Name="repeatIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="itemType">Одно из значений перечисления <see cref="T:System.Web.UI.WebControls.ListItemType" />.</param>
        <param name="repeatIndex">Индекс элемента в элементе управления "Список".</param>
        <summary>Описание этого члена см. в разделе <see cref="M:System.Web.UI.WebControls.IRepeatInfoUser.GetItemStyle(System.Web.UI.WebControls.ListItemType,System.Int32)" />.</summary>
        <returns>Объект <see cref="T:System.Web.UI.WebControls.Style" />, представляющий стиль элемента указанного типа по заданному индексу в элементе управления "Список".</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Web.UI.WebControls.DataList> приведен к типу интерфейса <xref:System.Web.UI.WebControls.IRepeatInfoUser>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.HasFooter">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.IRepeatInfoUser.HasFooter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.IRepeatInfoUser.HasFooter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasFooter" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property HasFooter As Boolean Implements IRepeatInfoUser.HasFooter" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.WebControls.IRepeatInfoUser.HasFooter { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasFooter" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IRepeatInfoUser.HasFooter</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Описание этого члена см. в разделе <see cref="P:System.Web.UI.WebControls.IRepeatInfoUser.HasFooter" />.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Web.UI.WebControls.DataList> приведен к типу интерфейса <xref:System.Web.UI.WebControls.IRepeatInfoUser>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.HasHeader">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.IRepeatInfoUser.HasHeader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.IRepeatInfoUser.HasHeader" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasHeader" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property HasHeader As Boolean Implements IRepeatInfoUser.HasHeader" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.WebControls.IRepeatInfoUser.HasHeader { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasHeader" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IRepeatInfoUser.HasHeader</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Описание этого члена см. в разделе <see cref="P:System.Web.UI.WebControls.IRepeatInfoUser.HasHeader" />.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться только тогда, когда <xref:System.Web.UI.WebControls.DataList> приведен экземпляр <xref:System.Web.UI.WebControls.IRepeatInfoUser> интерфейса.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators">
      <MemberSignature Language="C#" Value="bool System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#HasSeparators" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property HasSeparators As Boolean Implements IRepeatInfoUser.HasSeparators" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Описание этого члена см. в разделе <see cref="P:System.Web.UI.WebControls.IRepeatInfoUser.HasSeparators" />.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Web.UI.WebControls.DataList> приведен к типу интерфейса <xref:System.Web.UI.WebControls.IRepeatInfoUser>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.RenderItem">
      <MemberSignature Language="C#" Value="void IRepeatInfoUser.RenderItem (System.Web.UI.WebControls.ListItemType itemType, int repeatIndex, System.Web.UI.WebControls.RepeatInfo repeatInfo, System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(valuetype System.Web.UI.WebControls.ListItemType itemType, int32 repeatIndex, class System.Web.UI.WebControls.RepeatInfo repeatInfo, class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(System::Web::UI::WebControls::ListItemType itemType, int repeatIndex, System::Web::UI::WebControls::RepeatInfo ^ repeatInfo, System::Web::UI::HtmlTextWriter ^ writer) = System::Web::UI::WebControls::IRepeatInfoUser::RenderItem;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
        <Parameter Name="repeatIndex" Type="System.Int32" />
        <Parameter Name="repeatInfo" Type="System.Web.UI.WebControls.RepeatInfo" />
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="itemType">Тип элемента.</param>
        <param name="repeatIndex">Индекс элемента.</param>
        <param name="repeatInfo">Сведения, используемые для отображения элемента.</param>
        <param name="writer">Объект <see cref="T:System.Web.UI.HtmlTextWriter" />, используемый для отображения элемента.</param>
        <summary>Описание этого члена см. в разделе <see cref="M:System.Web.UI.WebControls.IRepeatInfoUser.RenderItem(System.Web.UI.WebControls.ListItemType,System.Int32,System.Web.UI.WebControls.RepeatInfo,System.Web.UI.HtmlTextWriter)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Web.UI.WebControls.DataList> приведен к типу интерфейса <xref:System.Web.UI.WebControls.IRepeatInfoUser>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount">
      <MemberSignature Language="C#" Value="int System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.System#Web#UI#WebControls#IRepeatInfoUser#RepeatedItemCount" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property RepeatedItemCount As Integer Implements IRepeatInfoUser.RepeatedItemCount" />
      <MemberSignature Language="C++ CLI" Value="property int System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.DataList.System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Описание этого члена см. в разделе <see cref="P:System.Web.UI.WebControls.IRepeatInfoUser.RepeatedItemCount" />.</summary>
        <value>To be added.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Web.UI.WebControls.DataList> приведен к типу интерфейса <xref:System.Web.UI.WebControls.IRepeatInfoUser>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.DataList.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.DataList.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает HTML-тег, используемый для обработки элемента управления <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <value>Возвращает тег <see cref="F:System.Web.UI.HtmlTextWriterTag.Table" />, если для свойства <see cref="P:System.Web.UI.WebControls.DataList.RepeatLayout" /> задано значение <see cref="F:System.Web.UI.WebControls.RepeatLayout.Table" />; в противном случае — возвращает тег <see cref="F:System.Web.UI.HtmlTextWriterTag.Span" />. Значение по умолчанию: <see cref="F:System.Web.UI.WebControls.RepeatLayout.Table" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.DataList.TagKey%2A> свойства, чтобы определить <xref:System.Web.UI.HtmlTextWriterTag> значение, связанное с <xref:System.Web.UI.WebControls.DataList> элемента управления. <xref:System.Web.UI.WebControls.DataList.TagKey%2A> Свойство используется преимущественно разработчиками элементов управления.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.DataList.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="dataList.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Отслеживает изменения состояния представления элемента управления <see cref="T:System.Web.UI.WebControls.DataList" /> для сохранения их в свойстве элемента управления <see cref="P:System.Web.UI.Control.ViewState" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.TrackViewState%2A> Метод переопределяется для обозначения начальной точки, с которого начинается отслеживания и сохранения изменений элемента управления как часть состояния просмотра элемента управления.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.DataListCommandEventHandler UpdateCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.DataListCommandEventHandler UpdateCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.DataList.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event UpdateCommand As DataListCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::DataListCommandEventHandler ^ UpdateCommand;" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : System.Web.UI.WebControls.DataListCommandEventHandler " Usage="member this.UpdateCommand : System.Web.UI.WebControls.DataListCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataListCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при нажатии кнопки <see langword="Update" /> для записи в элементе управления <see cref="T:System.Web.UI.WebControls.DataList" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.DataList.UpdateCommand> Событие возникает при `Update` кнопку для нажатии элемента.  
  
 Стандартный обработчик для <xref:System.Web.UI.WebControls.DataList.UpdateCommand> событий обновляет данные, задает <xref:System.Web.UI.WebControls.DataList.EditItemIndex%2A> свойства `-1` (для отмены выбора элемента), а затем выполняет повторную привязку данных к <xref:System.Web.UI.WebControls.DataList> элемента управления.  
  
> [!CAUTION]
>  Этот элемент управления можно использовать для отображения введенных данных, в которых может содержаться вредоносный клиентский сценарий. Проверьте все сведения, которые отправляются от клиента для исполняемых сценариев, инструкций SQL и другого кода перед его отображения в приложении. Проверяющие элементы управления можно использовать для проверки введенных пользователем данных перед отображением входной текст в элементе управления. ASP.NET предоставляет возможность проверки входного запроса с блокировкой сценариев и HTML вводимые пользователем данные. Дополнительные сведения см. в разделе [защита стандартных элементов управления](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [как: защита от скриптов в веб-приложения путем применения HTML-кодирования строки](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), и [проверка пользовательского ввода в Веб-страницы ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
 Дополнительные сведения об обработке событий см. в разделе [как: прием событий в приложениях Web Forms](~/docs/standard/events/how-to-consume-events-in-a-web-forms-application.md).  
  
   
  
## Examples  
 В следующем примере кода показано, как задать и запрограммировать обработчик <xref:System.Web.UI.WebControls.DataList.UpdateCommand> событий. Его можно обновить элемент, выбранный в <xref:System.Web.UI.WebControls.DataList> управления с новыми значениями, введенные пользователем при `Update` кнопки.  
  
> [!NOTE]
>  В следующем образце кода используется модель одного файла кода и могут работать неправильно, если скопировать непосредственно в файл кода. Этот пример кода необходимо скопировать в пустой текстовый файл с расширением .aspx. Дополнительные сведения о модели кода веб-форм см. в разделе [модель кода ASP.NET веб-форм страницы](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[DataListEdit#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit/CS/datalisteditcs.aspx#1)]
 [!code-aspx-vb[DataListEdit#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit/VB/datalisteditvb.aspx#1)]  
  
 [!code-aspx-csharp[DataListEdit2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/DataListEdit2/CS/datalistedit2cs.aspx#1)]
 [!code-aspx-vb[DataListEdit2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataListEdit2/VB/datalistedit2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataListCommandEventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.DataList.OnUpdateCommand(System.Web.UI.WebControls.DataListCommandEventArgs)" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.CancelCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.DeleteCommand" />
        <altmember cref="E:System.Web.UI.WebControls.DataList.EditCommand" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommandName">
      <MemberSignature Language="C#" Value="public const string UpdateCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string UpdateCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.DataList.UpdateCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Const UpdateCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ UpdateCommandName;" />
      <MemberSignature Language="F#" Value="val mutable UpdateCommandName : string" Usage="System.Web.UI.WebControls.DataList.UpdateCommandName" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Представляет имя команды <see langword="Update" />. Это поле доступно только для чтения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.DataList.UpdateCommandName> поле для представления `Update` имя команды.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.DataList.SelectCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.EditCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.DeleteCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.DataList.CancelCommandName" />
      </Docs>
    </Member>
  </Members>
</Type>