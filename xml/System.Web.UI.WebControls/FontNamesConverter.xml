<Type Name="FontNamesConverter" FullName="System.Web.UI.WebControls.FontNamesConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6e2c595f1d13193e688435d0337edc0c688e2721" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30598428" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FontNamesConverter : System.ComponentModel.TypeConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FontNamesConverter extends System.ComponentModel.TypeConverter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FontNamesConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class FontNamesConverter&#xA;Inherits TypeConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class FontNamesConverter : System::ComponentModel::TypeConverter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.TypeConverter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Выполняет взаимное преобразование строки, содержащей список названий шрифтов, и массива строк, представляющих отдельные названия.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> метод класса для преобразования одна строка, содержащая список имен шрифтов в массив строк, содержащих отдельные названия. Названия шрифтов в строке должны быть разделены запятыми. Например, строка «arial, время новый roman, verdana», преобразуется в массив, который содержит строки «arial», «раз новый roman» и «verdana». Обратите внимание, что запятая удаляется вместе с любой пробел в начале или конце имени шрифта. Пробел в названии шрифта не удаляется.  
  
 <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A> Метод выполняет действия, обратные оператору. Преобразует массив строк, содержащих отдельные названия шрифтов в одну строку, содержащую список имен. Например, массив, содержащий строки «arial», «раз новый roman» и «verdana» преобразуется в строку «arial, время новый roman, verdana». Обратите внимание, что запятые автоматически вставляются между именами шрифтов без пробелов.  
  
 Вызовите <xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A> метод, чтобы убедиться, что преобразование может быть выполнено до вызова метода <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> метод.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.FontNamesConverter> класса для преобразования строки со списком имен шрифтов в массив строк, содержащих отдельные названия. Массив строк, затем преобразуется обратно в одну строку и отображается.  
  
 [!code-aspx-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.ComponentModel.TypeConverter" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FontNamesConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontNamesConverter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FontNamesConverter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.FontNamesConverter" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Никогда не следует напрямую доступ преобразователя типов. Вместо этого вызовите соответствующий конвертер с помощью <xref:System.ComponentModel.TypeDescriptor> объекта. Дополнительные сведения см. в примерах <xref:System.ComponentModel.TypeConverter>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanConvertFrom">
      <MemberSignature Language="C#" Value="public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool CanConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Type sourceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function CanConvertFrom (context As ITypeDescriptorContext, sourceType As Type) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool CanConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, Type ^ sourceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="sourceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Класс <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий данные о контексте преобразователя типов. При необходимости для данного параметра можно передать значение <see langword="null" />.</param>
        <param name="sourceType">Тип <see cref="T:System.Type" />, представляющий тип данных, который требуется преобразовать.</param>
        <summary>Определяет, может ли этот преобразователь преобразовывать объект заданного типа данных в массив строк, содержащих отдельные названия шрифтов.</summary>
        <returns>
          Значение <see langword="true" />, если тип может быть преобразован; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A> метод, чтобы определить, можно преобразовать в указанный тип данных в массив строк, содержащих отдельные названия шрифтов.  
  
> [!NOTE]
>  Этот преобразователь преобразовать только из `string` тип данных. `sourceType` Параметр должен иметь тип <xref:System.String>. В противном случае этот метод возвращает `false` для указания, не может быть преобразовано в указанный тип данных.  
  
 При необходимости можно передать в `null` для `context` параметра.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom%2A>. В примере определяется, может ли преобразовано в указанный тип данных массив строк, содержащих отдельные названия шрифтов до выполнения преобразования.  
  
 [!code-aspx-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertFrom">
      <MemberSignature Language="C#" Value="public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertFrom(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertFrom (context As ITypeDescriptorContext, culture As CultureInfo, value As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertFrom(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="context">Класс <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий данные о контексте преобразователя типов. В данном методе этот параметр не используется. Он зарезервирован для будущих версий метода. При необходимости для данного параметра можно передать значение <see langword="null" />.</param>
        <param name="culture">Объект <see cref="T:System.Globalization.CultureInfo" />, предоставляющий сведения о языке и региональных параметрах,такие как язык, календарная система и т. д. В данном методе этот параметр не используется. Он зарезервирован для будущих версий метода. При необходимости для данного параметра можно передать значение <see langword="null" />.</param>
        <param name="value">Экземпляр <see cref="T:System.Object" />, предоставляющий исходную строку, которую необходимо преобразовать.</param>
        <summary>Преобразует строку, предоставляющую список названий шрифтов в массиве строк, содержащих отдельные названия.</summary>
        <returns>Экземпляр <see cref="T:System.Object" />, предоставляющий массив строк, содержащих отдельные названия шрифтов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> метод, чтобы преобразовать строку, содержащую список имен шрифтов в массив строк, содержащих отдельные названия. Названия шрифтов в строке должны быть разделены запятыми. Например, строка «arial, время новый roman, verdana», преобразуется в массив, который содержит строки «arial», «раз новый roman» и «verdana». Обратите внимание, что запятая удаляется вместе с любой пробел в начале или конце имени шрифта. Пробел в названии шрифта не удаляется.  
  
> [!NOTE]
>  `context` И `culture` параметры не используются в этой версии метода; они зарезервированы для будущих версий метода. При необходимости можно передать в `null` для этих параметров.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom%2A> метод для преобразования строки со списком имен шрифтов в массив строк, содержащих отдельные названия.  
  
 [!code-aspx-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="M:System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)">
          Параметр <paramref name="value" /> не является параметром типа <see cref="T:System.String" />.</exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertTo">
      <MemberSignature Language="C#" Value="public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object ConvertTo(class System.ComponentModel.ITypeDescriptorContext context, class System.Globalization.CultureInfo culture, object value, class System.Type destinationType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FontNamesConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ConvertTo (context As ITypeDescriptorContext, culture As CultureInfo, value As Object, destinationType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ ConvertTo(System::ComponentModel::ITypeDescriptorContext ^ context, System::Globalization::CultureInfo ^ culture, System::Object ^ value, Type ^ destinationType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.ComponentModel.ITypeDescriptorContext" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="destinationType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="context">Класс <see cref="T:System.ComponentModel.ITypeDescriptorContext" />, предоставляющий данные о контексте преобразователя типов. В данном методе этот параметр не используется. Он зарезервирован для будущих версий метода. При необходимости для данного параметра можно передать значение <see langword="null" />.</param>
        <param name="culture">Объект <see cref="T:System.Globalization.CultureInfo" />, предоставляющий сведения о языке и региональных параметрах,такие как язык, календарная система и т. д. В данном методе этот параметр не используется. Он зарезервирован для будущих версий метода. При необходимости для данного параметра можно передать значение <see langword="null" />.</param>
        <param name="value">Объект, предоставляющий исходный массив, который нужно преобразовать.</param>
        <param name="destinationType">Объект экземпляра <see cref="T:System.Object" />, представляющий тип данных, в который требуется выполнить преобразование. Этот параметр должен принадлежать к типу <see cref="T:System.String" />.</param>
        <summary>Создает строку, представляющую список названий шрифтов из массива строк, содержащих отдельные названия.</summary>
        <returns>Экземпляр <see cref="T:System.Object" />, представляющий строку, содержащую список названий шрифтов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A> метод для преобразования массива строк, содержащих отдельные названия шрифтов в одну строку, содержащую список имен. Например, массив, содержащий строки «arial», «раз новый roman» и «verdana» преобразуется в строку «arial, время новый roman, verdana». Обратите внимание, что запятые автоматически вставляются между именами шрифтов без пробелов.  
  
> [!NOTE]
>  Этот преобразователь может преобразовывать только к `string` тип данных. `destinationType` Параметр должен иметь тип <xref:System.String>.  
  
> [!NOTE]
>  `context` И `culture` параметры не используются в этой версии метода; они зарезервированы для будущих версий метода. При необходимости можно передать в `null` для этих параметров.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.FontNamesConverter.ConvertTo%2A> метода для преобразования массива строк, содержащих отдельные названия, в одну строку, содержащую список названий шрифтов.  
  
 [!code-aspx-csharp[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic FontNamesConverter.CanConvertFrom Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic FontNamesConverter.CanConvertFrom Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="M:System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)">
          Параметр <paramref name="destinationType" /> не является параметром типа <see cref="T:System.String" />.</exception>
        <altmember cref="T:System.ComponentModel.ITypeDescriptorContext" />
        <altmember cref="T:System.Globalization.CultureInfo" />
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.Type" />
        <altmember cref="M:System.Web.UI.WebControls.FontNamesConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>