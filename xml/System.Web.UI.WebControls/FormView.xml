<Type Name="FormView" FullName="System.Web.UI.WebControls.FormView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="909196388e105527ef9088197b65801b314e2363" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36384070" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FormView : System.Web.UI.WebControls.CompositeDataBoundControl, System.Web.UI.IDataItemContainer, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IDataBoundItemControl, System.Web.UI.WebControls.IPostBackContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormView extends System.Web.UI.WebControls.CompositeDataBoundControl implements class System.Web.UI.IDataItemContainer, class System.Web.UI.INamingContainer, class System.Web.UI.IPostBackEventHandler, class System.Web.UI.WebControls.IDataBoundControl, class System.Web.UI.WebControls.IDataBoundItemControl, class System.Web.UI.WebControls.IPostBackContainer" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormView" />
  <TypeSignature Language="VB.NET" Value="Public Class FormView&#xA;Inherits CompositeDataBoundControl&#xA;Implements IDataBoundItemControl, IDataItemContainer, IPostBackContainer, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormView : System::Web::UI::WebControls::CompositeDataBoundControl, System::Web::UI::IDataItemContainer, System::Web::UI::IPostBackEventHandler, System::Web::UI::WebControls::IDataBoundItemControl, System::Web::UI::WebControls::IPostBackContainer" />
  <TypeSignature Language="F#" Value="type FormView = class&#xA;    inherit CompositeDataBoundControl&#xA;    interface IDataItemContainer&#xA;    interface INamingContainer&#xA;    interface IPostBackEventHandler&#xA;    interface IPostBackContainer&#xA;    interface IDataBoundItemControl&#xA;    interface IDataBoundControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CompositeDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IDataItemContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IDataBoundItemControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IPostBackContainer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("PageIndexChanging")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.FormViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.DataKeyProperty("DataKey")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Отображает значения одной записи из источника данных с помощью пользовательских шаблонов. Элемент управления <see cref="T:System.Web.UI.WebControls.FormView" /> позволяет изменять, удалять, а также вставлять записи.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В этом разделе.  
  
-   [Введение](#introduction)  
  
-   [Шаблоны](#templates)  
  
-   [Привязка к данным](#binding_to_data)  
  
-   [Операции с данными](#data_operations)  
  
-   [Настройка пользовательского интерфейса](#customizing_the_user_interface)  
  
-   [События](#events)  
  
-   [Специальные возможности](#accessibility)  
  
-   [Применение стилей CSS](#applying_styles)  
  
-   [Декларативный синтаксис](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Вступление  
 <xref:System.Web.UI.WebControls.FormView> Элемент управления используется для отображения одной записи из источника данных. Это похоже на <xref:System.Web.UI.WebControls.DetailsView> управления, за исключением того, он отображает пользовательские шаблоны вместо полей строк. Создание собственных шаблонов обеспечивает большую гибкость в управлении отображением данных. <xref:System.Web.UI.WebControls.FormView> Элемент управления поддерживает следующие функции:  
  
-   Привязка элементов управления источниками данных, такие как <xref:System.Web.UI.WebControls.SqlDataSource> и <xref:System.Web.UI.WebControls.ObjectDataSource>.  
  
-   Встроенные возможности вставки.  
  
-   Встроенные возможности обновления и удаления.  
  
-   Встроенные возможности разбиения на страницы.  
  
-   Программный доступ к <xref:System.Web.UI.WebControls.FormView> объектную модель для динамически задавать свойства, обработки событий и т. д.  
  
-   Настройка внешнего вида с использованием пользовательских шаблонов, тем и стилей.  
  
<a name="templates"></a>   
## <a name="templates"></a>Шаблоны  
 Для <xref:System.Web.UI.WebControls.FormView> управления для отображения содержимого, необходимо создать шаблоны для различных частей элемента управления. Большинство шаблонов являются необязательными. Тем не менее необходимо создать шаблон для режима, в котором элемент управления настроен. Например <xref:System.Web.UI.WebControls.FormView> элемента управления, который поддерживает вставку записей должен быть определен шаблон элемента вставки. В следующей таблице перечислены различные шаблоны, которые можно создать.  
  
|Тип шаблона|Описание:|  
|-------------------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|Определяет содержимое для данных строки, если <xref:System.Web.UI.WebControls.FormView> элемент управления находится в режиме редактирования. Этот шаблон обычно содержит элементы управления для ввода и кнопки команд, с помощью которого пользователь может изменить существующую запись.|  
|<xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>|Определяет содержимое для пустой строки данных, которые отображаются после <xref:System.Web.UI.WebControls.FormView> элемент управления привязан к источнику данных, который не содержит ни одной записи. Этот шаблон обычно содержит содержимое, чтобы предупредить пользователя о том, что источник данных не содержит какие-либо записи.|  
|<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>|Определяет содержимое для строки нижнего колонтитула. Этот шаблон обычно содержит дополнительное содержимое, которое вы хотите отобразить в строке нижнего колонтитула. **Примечание:** в качестве альтернативы можно просто указать текст, отображаемый в строке нижнего колонтитула, задав <xref:System.Web.UI.WebControls.FormView.FooterText%2A> свойство.|  
|<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>|Определяет содержимое для строки заголовка. Этот шаблон обычно содержит дополнительное содержимое, которое требуется для отображения в строке заголовка. **Примечание:** в качестве альтернативы можно просто указать текст, отображаемый в строке заголовка, задав <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> свойство.|  
|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|Определяет содержимое для данных строки, если <xref:System.Web.UI.WebControls.FormView> элемент управления находится в режиме только для чтения. Этот шаблон обычно содержит содержимое для отображения значений существующей записи.|  
|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|Определяет содержимое для данных строки, если <xref:System.Web.UI.WebControls.FormView> элемент управления находится в режиме вставки. Этот шаблон обычно содержит элементы управления для ввода и кнопки команд, с помощью которого пользователь может добавить новую запись.|  
|<xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>|Определяет содержимое строки страничного навигатора, отображается в случае, если включено разбиение по страницам (когда <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> свойству `true`). Этот шаблон обычно содержит элементы управления, с которыми пользователь может перейти к другой записи. **Примечание:** <xref:System.Web.UI.WebControls.FormView> управления имеет встроенных строки пользовательский интерфейс (UI). Необходимо создать шаблон страничного навигатора, только в том случае, если вы хотите создать собственные пользовательские страничного навигатора.|  
  
 Для отображения значения поля в шаблоне элемента, используйте выражение привязки данных. Дополнительные сведения о выражениях привязки данных см. в разделе [синтаксис выражения привязки данных](http://msdn.microsoft.com/library/676beb1d-ddfa-4153-bba8-3c86dcb7ceca).  
  
 Элементы управления вводом в шаблоне элемента редактирования и шаблон элемента вставки можно привязать к поля источника данных, используя выражение двусторонней привязки. Это позволяет <xref:System.Web.UI.WebControls.FormView> управления автоматически извлекать значения элемента управления вводом для обновления или операции вставки. Выражения двусторонней привязки также позволяют элементам управления вводом в шаблоне элемента редактирования автоматически отображать исходные значения полей. Дополнительные сведения о выражениях двусторонней привязки см. в разделе [привязка к базам данных](http://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742).  
  
<a name="binding_to_data"></a>   
## <a name="binding-to-data"></a>Привязка к данным  
 <xref:System.Web.UI.WebControls.FormView> Управления можно привязать к элементу управления источником данных (таких как <xref:System.Web.UI.WebControls.SqlDataSource>, <xref:System.Web.UI.WebControls.ObjectDataSource>, или <xref:System.Web.UI.WebControls.AccessDataSource>) или в любую коллекцию источника данных, реализующий <xref:System.Collections.IEnumerable?displayProperty=nameWithType> интерфейса, такие как <xref:System.Data.DataView?displayProperty=nameWithType>, <xref:System.Collections.ArrayList?displayProperty=nameWithType>, <xref:System.Collections.Generic.List%601?displayProperty=nameWithType>, или другие типы коллекций. Используйте один из следующих методов для привязки <xref:System.Web.UI.WebControls.FormView> управления к соответствующему типу источника данных:  
  
-   Чтобы привязать элемент управления источником данных, задайте <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> свойство <xref:System.Web.UI.WebControls.FormView> управления <xref:System.Web.UI.Control.ID%2A> значение элемента управления источника данных. <xref:System.Web.UI.WebControls.FormView> Управления автоматически привязывается к элементу управления источника данных и может использовать функции элемента управления для выполнения вставки, обновления, удаления и разбиения по страницам. Это предпочтительный метод для привязки к данным.  
  
-   Для привязки к источнику данных, который реализует <xref:System.Collections.IEnumerable?displayProperty=nameWithType> интерфейс программно задать <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> свойство <xref:System.Web.UI.WebControls.FormView> управления к источнику данных, а затем вызвать <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> метод. При использовании этого метода <xref:System.Web.UI.WebControls.FormView> управления не предоставляет встроенные возможности вставки, обновления, удаления и разбиения по страницам. Требуется для поддержки этой функции с помощью соответствующего события.  
  
 Дополнительные сведения о привязке данных см. в разделе [Карта содержимого для доступа к данным ASP.NET](http://msdn.microsoft.com/library/f9219396-a0fa-481f-894d-e3d9c67d64f2).  
  
> [!NOTE]
>  Этот элемент управления можно использовать для отображения введенных данных, в которых может содержаться вредоносный клиентский сценарий. Проверьте все сведения, которые отправляются от клиента для исполняемых сценариев, инструкций SQL и другого кода перед его отображения в приложении. Когда это возможно, настоятельно рекомендуется, значений является HTML-кодированную перед их отображением этого элемента управления. ASP.NET предоставляет возможность проверки входного запроса с блокировкой сценариев и HTML вводимые пользователем данные. К вводимым данным также имеются серверные элементы управления проверкой. Дополнительные сведения см. в разделе [введение в проверяющие элементы управления](http://msdn.microsoft.com/library/3c0e7514-cff2-4bed-936d-ee3f7b740190).  
  
<a name="data_operations"></a>   
## <a name="data-operations"></a>Операции с данными  
 <xref:System.Web.UI.WebControls.FormView> Элемент управления предоставляет множество встроенных возможностей, позволяющие пользователям обновлять, delete, insert и постраничного просмотра элементов в элементе управления. Когда <xref:System.Web.UI.WebControls.FormView> управления привязан к элементу управления источником данных <xref:System.Web.UI.WebControls.FormView> управления можно воспользоваться преимуществами источника данных возможности элемента управления и указать автоматического обновления, удаления, вставки и разбиения по страницам.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView> Управления могут обеспечить поддержку для update, delete, insert и операции разбиения на страницы с другими типами источников данных; Однако необходимо указать подходящий обработчик событий с реализацией этих операций.  
  
 Поскольку <xref:System.Web.UI.WebControls.FormView> управления использует шаблоны, он не предоставляет способ автоматического создания кнопки для выполнения обновления, удаления или вставки операций. Необходимо вручную включить эти кнопки в соответствующий шаблон. <xref:System.Web.UI.WebControls.FormView> Управления распознает определенные кнопки, которые имеют свои `CommandName` присвоены определенные значения свойства. В следующей таблице перечислены команды кнопками, <xref:System.Web.UI.WebControls.FormView> распознается элементом управления.  
  
|Кнопка|Значение CommandName|Описание:|  
|------------|-----------------------|-----------------|  
|Отмена|«Отмена»|Используется в операциях обновления или вставки для отмены операции и отказаться от значений, введенных пользователем. <xref:System.Web.UI.WebControls.FormView> Управления затем возвращается на режим, заданные <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> свойство.|  
|Удаление|"Удалить"|Используется в операциях удаления для удаления записи из источника данных. Вызывает <xref:System.Web.UI.WebControls.FormView.ItemDeleting> и <xref:System.Web.UI.WebControls.FormView.ItemDeleted> события.|  
|Правка|«Edit»|Используется в операциях обновления для размещения <xref:System.Web.UI.WebControls.FormView> элемента управления в режиме редактирования. Содержимое, определенное в <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> свойство отображается для строки данных.|  
|Insert|«Вставка»|Используется в операциях вставки для попытки вставить новую запись в источнике данных, с помощью значений, предоставленных пользователем. Вызывает <xref:System.Web.UI.WebControls.FormView.ItemInserting> и <xref:System.Web.UI.WebControls.FormView.ItemInserted> события.|  
|Новый|«New»|Используется в операциях вставки, чтобы поместить <xref:System.Web.UI.WebControls.FormView> элемента управления в режиме вставки. Содержимое, определенное в <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> свойство отображается для строки данных.|  
|Страница|«Страница»|Используется в операции разбиения на страницы для представления кнопки в страничного навигатора, которая выполняет разбиение по страницам. Чтобы указать операцию разбиения на страницы, задайте `CommandArgument` свойство кнопки «Далее», «Назад», "First", «Последнее» или индекс страницы, к которой следует перейти. Вызывает <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> и <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> события. **Примечание:** этот тип кнопки обычно используется только в шаблоне страничного навигатора.|  
|Обновление|«Обновления»|Используется в операциях обновления для обновления текущей записи в источнике данных с помощью значений, предоставленных пользователем. Вызывает <xref:System.Web.UI.WebControls.FormView.ItemUpdating> и <xref:System.Web.UI.WebControls.FormView.ItemUpdated> события.|  
  
 В отличие от «удалить» (который немедленно удаляет текущей записи), при нажатии кнопок редактирования и создания <xref:System.Web.UI.WebControls.FormView> управления переходит в режиме редактирования или вставки, соответственно. В режиме редактирования содержимого содержатся в <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> свойство отображается для текущего элемента данных. Как правило таким образом, чтобы кнопка "Изменить" заменяется на кнопку "Отмена" и обновление определено шаблоном элемента. Элементы управления, которые соответствуют типу данных поля ввода (таких как <xref:System.Web.UI.WebControls.TextBox> или <xref:System.Web.UI.WebControls.CheckBox> управления) также обычно отображаются со значением поля для пользователя для изменения. Щелкнув кнопкой "Обновить" обновляет запись в источнике данных, при нажатии кнопки отмены отменяет все изменения.  
  
 Аналогичным образом, содержимое, содержащихся в <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> свойство отображается для элемента данных, когда элемент управления находится в режиме вставки. Шаблон элемента вставки обычно определяется таким образом, чтобы заменить новую кнопку "Вставить" и "Отмена", а элементы управления вводом отображаются для пользователя ввести значения для новой записи. Кнопки "Вставить" вставляет запись в источнике данных, при нажатии кнопки отмены отменяет все изменения.  
  
 <xref:System.Web.UI.WebControls.FormView> Элемент управления предоставляет функции разбиения на страницы, которая позволяет пользователю переходить к другим записям в источнике данных. При включении строку страничного навигатора отображается в <xref:System.Web.UI.WebControls.FormView> элемент управления, содержащий управления перемещением по страницам. Чтобы включить разбиение на страницы, задайте <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> свойства `true`. Можно настроить строку страничного навигатора, задав свойства объектов, содержащихся в <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> и <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> свойства. Вместо использования встроенных строки пользовательского интерфейса, можно создать собственный пользовательский Интерфейс, с помощью <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A> свойство.  
  
<a name="customizing_the_user_interface"></a>   
## <a name="customizing-the-user-interface"></a>Настройка пользовательского интерфейса  
 Можно настроить внешний вид <xref:System.Web.UI.WebControls.FormView> элемента управления, задав свойства стиля для разных частей элемента управления. В следующей таблице перечислены различных свойств стиля.  
  
|Свойство стиля|Описание:|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A>|Параметры стиля для данных строки, если <xref:System.Web.UI.WebControls.FormView> элемент управления находится в режиме редактирования.|  
|<xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A>|Параметры стиля для пустой строки данных отображаются в <xref:System.Web.UI.WebControls.FormView> управления, когда источник данных не содержит ни одной записи.|  
|<xref:System.Web.UI.WebControls.FormView.FooterStyle%2A>|Параметры стиля для строки нижнего колонтитула <xref:System.Web.UI.WebControls.FormView> элемента управления.|  
|<xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A>|Параметры стиля для строки заголовка <xref:System.Web.UI.WebControls.FormView> элемента управления.|  
|<xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A>|Параметры стиля для данных строки, если <xref:System.Web.UI.WebControls.FormView> элемент управления находится в режиме вставки.|  
|<xref:System.Web.UI.WebControls.FormView.PagerStyle%2A>|Параметры стиля строки страничного навигатора, отображаемых в <xref:System.Web.UI.WebControls.FormView> управления, когда включена функция разбиения по страницам.|  
|<xref:System.Web.UI.WebControls.FormView.RowStyle%2A>|Параметры стиля для данных строки, если <xref:System.Web.UI.WebControls.FormView> элемент управления находится в режиме только для чтения.|  
  
<a name="events"></a>   
## <a name="events"></a>События  
 <xref:System.Web.UI.WebControls.FormView> Управления предоставляет несколько событий, который можно запрограммировать. Это позволяет запускать пользовательские процедуры при возникновении события. В следующей таблице перечислены поддерживаемые события <xref:System.Web.UI.WebControls.FormView> элемента управления.  
  
|событие|Описание:|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.ItemCommand>|Возникает при нажатии кнопки в элементе управления <xref:System.Web.UI.WebControls.FormView>. Это событие часто используется для выполнения задачи при нажатии кнопки в элементе управления.|  
|<xref:System.Web.UI.WebControls.FormView.ItemCreated>|Происходит после того как все <xref:System.Web.UI.WebControls.FormViewRow> объекты создаются в <xref:System.Web.UI.WebControls.FormView> элемента управления. Это событие часто используется для изменения значения записи перед отображением.|  
|<xref:System.Web.UI.WebControls.FormView.ItemDeleted>|Возникает, когда кнопку «Удалить» (кнопка с его `CommandName` , имеющим значение «Delete») выбран, но после <xref:System.Web.UI.WebControls.FormView> управления удаляет записи из источника данных. Это событие часто используется для проверки результатов операции удаления.|  
|<xref:System.Web.UI.WebControls.FormView.ItemDeleting>|Происходит при нажатии кнопку «Удалить», но перед <xref:System.Web.UI.WebControls.FormView> управления удаляет записи из источника данных. Это событие часто используется для отмены операции удаления.|  
|<xref:System.Web.UI.WebControls.FormView.ItemInserted>|Происходит, когда кнопка вставки (кнопка с его `CommandName` , имеющим значение «Вставка») выбран, но после <xref:System.Web.UI.WebControls.FormView> запись вставляется в элемент управления. Это событие часто используется для проверки результатов операции вставки.|  
|<xref:System.Web.UI.WebControls.FormView.ItemInserting>|Происходит при нажатии кнопки "Вставить", но перед <xref:System.Web.UI.WebControls.FormView> запись вставляется в элемент управления. Это событие часто используется для отмены операции вставки.|  
|<xref:System.Web.UI.WebControls.FormView.ItemUpdated>|Происходит, когда кнопка обновления (кнопка с его `CommandName` , имеющим значение «Обновления») выбран, но после <xref:System.Web.UI.WebControls.FormView> управления обновляет строку. Это событие часто используется для проверки результатов операции обновления.|  
|<xref:System.Web.UI.WebControls.FormView.ItemUpdating>|Происходит при нажатии кнопки "Обновить", но перед <xref:System.Web.UI.WebControls.FormView> управления обновляет запись. Это событие часто используется для отмены операции обновления.|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanged>|Происходит после <xref:System.Web.UI.WebControls.FormView> режимы изменения элементов управления (для редактирования, вставки или только для чтения). Это событие часто используется для выполнения задачи при <xref:System.Web.UI.WebControls.FormView> режимы изменения элементов управления.|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanging>|Происходит перед <xref:System.Web.UI.WebControls.FormView> режимы изменения элементов управления (для редактирования, вставки или только для чтения). Это событие часто используется для отмены изменения режима.|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>|Происходит при щелчке кнопки страницы, но после обработки операции разбиения по страницам элементом управления <xref:System.Web.UI.WebControls.FormView>. Это событие обычно используется, когда требуется выполнить задачу после перехода пользователя к другой записи в элементе управления.|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>|Происходит при щелчке кнопки страницы, но перед обработкой операции разбиения по страницам элементом управления <xref:System.Web.UI.WebControls.FormView>. Это событие часто используется для отмены операции разбиения по страницам.|  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>Специальные возможности  
 Сведения о настройке этого элемента управления, чтобы он создает разметку, которая соответствует стандартам специальных возможностей см. в разделе [специальных возможностей в Visual Studio и ASP.NET](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) и [элементов управления ASP.NET и специальные возможности](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).  
  
<a name="applying_styles"></a>   
## <a name="applying-css-styles"></a>Применение стилей CSS  
 <xref:System.Web.UI.WebControls.FormView> Элемент управления позволяет указать правила стилей CSS в разметке. При использовании шаблонов для настройки внешнего вида <xref:System.Web.UI.WebControls.FormView> элемента управления, можно указать стили CSS в разметке в шаблонах. В этом случае требуется внешняя таблица. Вы можете запретить таблице готовится к просмотру, задав <xref:System.Web.UI.WebControls.FormView.RenderOuterTable%2A> свойства `false`.  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Декларативный синтаксис  
  
```  
<asp:FormView  
    AccessKey="string"  
    AllowPaging="True|False"  
    BackColor="color name|#dddddd"  
    BackImageUrl="uri"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    Caption="string"  
    CaptionAlign="NotSet|Top|Bottom|Left|Right"  
    CellPadding="integer"  
    CellSpacing="integer"  
    CssClass="string"  
    DataKeyNames="string"  
    DataMember="string"  
    DataSource="string"  
    DataSourceID="string"  
    DefaultMode="ReadOnly|Edit|Insert"  
    EmptyDataText="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    FooterText="string"  
    ForeColor="color name|#dddddd"  
    GridLines="None|Horizontal|Vertical|Both"  
    HeaderText="string"  
    Height="size"  
    HorizontalAlign="NotSet|Left|Center|Right|Justify"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnItemCommand="ItemCommand event handler"  
    OnItemCreated="ItemCreated event handler"  
    OnItemDeleted="ItemDeleted event handler"  
    OnItemDeleting="ItemDeleting event handler"  
    OnItemInserted="ItemInserted event handler"  
    OnItemInserting="ItemInserting event handler"  
    OnItemUpdated="ItemUpdated event handler"  
    OnItemUpdating="ItemUpdating event handler"  
    OnLoad="Load event handler"  
    OnModeChanged="ModeChanged event handler"  
    OnModeChanging="ModeChanging event handler"  
    OnPageIndexChanged="PageIndexChanged event handler"  
    OnPageIndexChanging="PageIndexChanging event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    PageIndex="integer"  
    PagerSettings-FirstPageImageUrl="uri"  
    PagerSettings-FirstPageText="string"  
    PagerSettings-LastPageImageUrl="uri"  
    PagerSettings-LastPageText="string"  
    PagerSettings-Mode="NextPrevious|Numeric|NextPreviousFirstLast|  
        NumericFirstLast"  
    PagerSettings-NextPageImageUrl="uri"  
    PagerSettings-NextPageText="string"  
    PagerSettings-PageButtonCount="integer"  
    PagerSettings-Position="Bottom|Top|TopAndBottom"  
    PagerSettings-PreviousPageImageUrl="uri"  
    PagerSettings-PreviousPageText="string"  
    PagerSettings-Visible="True|False"  
    RenderTable="True|False"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
>  
        <EditItemTemplate>  
            <!-- child controls -->  
        </EditItemTemplate>  
        <EditRowStyle />  
        <EmptyDataRowStyle />  
        <EmptyDataTemplate>  
            <!-- child controls -->  
        </EmptyDataTemplate>  
        <FooterStyle />  
        <FooterTemplate>  
            <!-- child controls -->  
        </FooterTemplate>  
        <HeaderStyle />  
        <HeaderTemplate>  
            <!-- child controls -->  
        </HeaderTemplate>  
        <InsertItemTemplate>  
            <!-- child controls -->  
        </InsertItemTemplate>  
        <InsertRowStyle />  
        <ItemTemplate>  
            <!-- child controls -->  
        </ItemTemplate>  
        <PagerSettings  
            FirstPageImageUrl="uri"  
            FirstPageText="string"  
            LastPageImageUrl="uri"  
            LastPageText="string"  
            Mode="NextPrevious|Numeric|NextPreviousFirstLast|  
                NumericFirstLast"  
            NextPageImageUrl="uri"  
            NextPageText="string"  
            OnPropertyChanged="PropertyChanged event handler"  
            PageButtonCount="integer"  
            Position="Bottom|Top|TopAndBottom"  
            PreviousPageImageUrl="uri"  
            PreviousPageText="string"  
            Visible="True|False"  
        />  
        <PagerStyle />  
        <PagerTemplate>  
            <!-- child controls -->  
        </PagerTemplate>  
        <RowStyle />  
</asp:FormView>  
```  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView> управления для отображения значений из <xref:System.Web.UI.WebControls.SqlDataSource> элемента управления.  
  
 [!code-aspx-csharp[FormViewSimple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewSimple/CS/formviewsimplecs.aspx#1)]
 [!code-aspx-vb[FormViewSimple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewSimple/VB/formviewsimplevb.aspx#1)]  
  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView> управления для изменения существующих записей.  
  
> [!IMPORTANT]
>  Элемент управления в этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormView#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormView/CS/formvieweditcs.aspx#1)]
 [!code-aspx-vb[FormView#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormView/VB/formvieweditvb.aspx#1)]  
  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView> управления для вставки новых записей.  
  
> [!IMPORTANT]
>  Элемент управления в этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormViewInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItemTemplate/CS/formviewinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItemTemplate/VB/formviewinsertitemtemplatevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
    <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.CurrentMode" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.DefaultMode" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCommand" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор используется для инициализации нового экземпляра <xref:System.Web.UI.WebControls.FormView> класса. Для динамического добавления <xref:System.Web.UI.WebControls.FormView> управления на страницу, создайте новый <xref:System.Web.UI.WebControls.FormView> , задать его свойства и затем добавить его в <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> коллекции контейнера элемента управления, такого как <xref:System.Web.UI.WebControls.PlaceHolder>.  
  
   
  
## Examples  
 Следующий пример демонстрирует, как динамически добавлять <xref:System.Web.UI.WebControls.FormView> на страницу элемента управления.  
  
 [!code-aspx-csharp[FormViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCtor/CS/formviewctorcs.aspx#1)]
 [!code-aspx-vb[FormViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCtor/VB/formviewctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.WebControls.PlaceHolder" />
      </Docs>
    </Member>
    <Member MemberName="AllowPaging">
      <MemberSignature Language="C#" Value="public virtual bool AllowPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.AllowPaging" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowPaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowPaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowPaging : bool with get, set" Usage="System.Web.UI.WebControls.FormView.AllowPaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, определяющее, доступна ли возможность разбиения по страницам.</summary>
        <value>Значение <see langword="true" /> для включения функции разбиения по страницам; в противном случае — значение <see langword="false" />. Значение по умолчанию: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> Управления предусмотрены встроенные возможности разбиения на страницы, которые позволяют пользователю переходить на другую запись в источнике данных. Разбиение по страницам можно использовать с любым объектом источника данных, который поддерживает <xref:System.Collections.ICollection?displayProperty=nameWithType> интерфейса или источник данных, поддерживающий разбиение по страницам.  
  
 Чтобы включить разбиение по страницам, задайте <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> свойства `true`. Общее число элементов в базовом источнике данных можно определить с помощью <xref:System.Web.UI.WebControls.FormView.PageCount%2A> свойство. Чтобы определить индекс отображаемого элемента, используйте <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> свойство.  
  
 Если включено разбиение на страницы, дополнительная строка навигатора будет автоматически отображаться в <xref:System.Web.UI.WebControls.FormView> элемента управления. Строка страничного навигатора содержит управления перемещением по страницам и может быть отображена в верхней, нижней или верхней и нижней части элемента управления. Строка страничного навигатора имеет четыре встроенных режима отображения. В следующей таблице описаны четыре режима.  
  
|Режим|Описание:|  
|----------|-----------------|  
|`PagerButton.NextPrevious`|Набор элементов разбиение на страницы, состоящий из предыдущей и последующей кнопок.|  
|`PagerButton.NextPreviousFirstLast`|Набор элементов управления разбиением на страницы, состоящий из предыдущей, затем первый и последний кнопок.|  
|`PagerButton.Numeric`|Набор элементов управления переходом по страницам, состоящий из пронумерованных ссылок для непосредственного доступа к страницам. Этот режим используется по умолчанию.|  
|`PagerButton.NumericFirstLast`|Набор элементов управления разбиением на страницы, состоящий из кнопки ссылки нумерованные и первым и последним.|  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView> Управления автоматически скрывает строку страничного навигатора, если источник данных содержит менее двух записей.  
  
 Параметры строки (например, режим отображения, количество ссылок на страницы для отображения во время и текстовая метка элемента управления страничного навигатора) можно управлять с помощью <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> свойство. Чтобы управлять внешним видом строки (включая ее фоновый цвет и цвет шрифта), используйте <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> свойство. <xref:System.Web.UI.WebControls.FormView> Элемент управления также позволяет определить пользовательский шаблон для строки страничного навигатора. Дополнительные сведения о создании настраиваемой строки см. в разделе <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>.  
  
 <xref:System.Web.UI.WebControls.FormView> Управления предоставляет несколько событий, которые можно использовать для выполнения настраиваемых действий при разбиении. В следующей таблице перечислены доступные события.  
  
|событие|Описание:|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>|Происходит при щелчке кнопки страницы, но после обработки операции разбиения по страницам элементом управления <xref:System.Web.UI.WebControls.FormView>. Это событие обычно используется, когда требуется выполнить задачу после перехода пользователя к другой записи в элементе управления.|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>|Происходит при щелчке кнопки страницы, но перед обработкой операции разбиения по страницам элементом управления <xref:System.Web.UI.WebControls.FormView>. Это событие часто используется для отмены операции разбиения по страницам.|  
  
> [!NOTE]
>  Эти события не вызываются, при изменении <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> свойство программными средствами.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> свойство, чтобы включить функции разбиения на страницы в <xref:System.Web.UI.WebControls.FormView> элемента управления.  
  
 [!code-aspx-csharp[FormViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewAllowPaging/CS/formviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[FormViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewAllowPaging/VB/formviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="BackImageUrl">
      <MemberSignature Language="C#" Value="public virtual string BackImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BackImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackImageUrl : string with get, set" Usage="System.Web.UI.WebControls.FormView.BackImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает URL-адрес изображения, отображаемого как фон элемента управления <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>URL-адрес изображения, отображаемого как фон элемента управления <see cref="T:System.Web.UI.WebControls.FormView" />. По умолчанию используется пустая строка (""), указывающая, что это свойство не задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A> свойство, чтобы указать URL-адрес изображения для отображения в качестве фона элемента <xref:System.Web.UI.WebControls.FormView> элемента управления.  
  
> [!NOTE]
>  Если указанное изображение меньше <xref:System.Web.UI.WebControls.FormView> управления изображение является мозаичное заполнение в фоновом режиме. Если изображение больше, чем элемент управления, то изображение обрезается.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A> свойство для отображения пользовательского изображения в качестве фона элемента <xref:System.Web.UI.WebControls.FormView> элемента управления.  
  
 [!code-aspx-csharp[FormViewBackImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewBackImageUrl/CS/formviewbackimageurlcs.aspx#1)]
 [!code-aspx-vb[FormViewBackImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewBackImageUrl/VB/formviewbackimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="BottomPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow BottomPagerRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow BottomPagerRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BottomPagerRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ BottomPagerRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BottomPagerRow : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.BottomPagerRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Web.UI.WebControls.FormViewRow" />, представляющий строку страничного навигатора, отображаемую внизу элемента управления <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Объект <see cref="T:System.Web.UI.WebControls.FormViewRow" />, представляющий нижнюю строку страничного навигатора в элементе управления <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если включено разбиение на страницы (при <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> свойству `true`), дополнительная строка, которую называют строкой страничного автоматически отображаются в <xref:System.Web.UI.WebControls.FormView> элемента управления. Строка страницы содержит элементы управления, которые пользователи могут переходить к другим записям и может быть отображена в верхней, нижней или верхней и нижней части элемента управления. Используйте <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> программный доступ к свойству <xref:System.Web.UI.WebControls.FormViewRow> объект, который представляет строку страничного навигатора в нижней <xref:System.Web.UI.WebControls.FormView> элемента управления.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> , Это свойство доступно только после <xref:System.Web.UI.WebControls.FormView> управления создает нижней строкой в <xref:System.Web.UI.WebControls.FormView.ItemCreated> событий.  
  
 Это свойство обычно используется для программного управления страничного навигатора в нижней строке, например при добавлении настраиваемого содержимого. Любые изменения <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> свойства должны быть выполнены после <xref:System.Web.UI.WebControls.FormViewRow> объект, который представляет строку страничного навигатора нижней был создан; в противном случае — <xref:System.Web.UI.WebControls.FormView> управления перезаписывает любые изменения.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> свойство для доступа к строку страничного навигатора, отображается в нижней части <xref:System.Web.UI.WebControls.FormView> элемента управления. Затем строку страничного навигатора обновляется с дополнительным содержимым.  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public virtual string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Caption : string with get, set" Usage="System.Web.UI.WebControls.FormView.Caption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает текст для отображения в HTML-заголовке элемента в элементе управления <see cref="T:System.Web.UI.WebControls.FormView" />. Данное свойство позволяет сделать элемент управления более доступным для пользователей вспомогательных устройств.</summary>
        <value>Строка, представляющая текст для отображения в HTML-элементе подписи элемента управления <see cref="T:System.Web.UI.WebControls.FormView" />. Значением по умолчанию является пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.FormView.Caption%2A> свойство, чтобы указать текст для отображения в HTML-элемента заголовка в <xref:System.Web.UI.WebControls.FormView> элемента управления. Текст, который указывается предоставляет вспомогательных устройств с описанием таблицы, которая может использоваться для предоставления более доступным.  
  
 Поддержка дополнительных специальных <xref:System.Web.UI.WebControls.FormView> управления обеспечивается <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> свойство. Используйте <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> свойство для указания выравнивания HTML-элемента заголовка в <xref:System.Web.UI.WebControls.FormView> элемента управления.  
  
 Значение этого свойства, если задано, можно автоматически сохраняются в файл ресурсов с помощью средств конструктора. Дополнительные сведения см. в разделе <xref:System.ComponentModel.LocalizableAttribute> и [глобализации и локализации](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.Caption%2A> свойство, чтобы указать текст для отображения HTML-элемента заголовка в <xref:System.Web.UI.WebControls.FormView> элемента управления.  
  
 [!code-aspx-csharp[FormViewCaption#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCaption/CS/formviewcaptioncs.aspx#1)]
 [!code-aspx-vb[FormViewCaption#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCaption/VB/formviewcaptionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.CaptionAlign" />
      </Docs>
    </Member>
    <Member MemberName="CaptionAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TableCaptionAlign CaptionAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CaptionAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CaptionAlign As TableCaptionAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableCaptionAlign CaptionAlign { System::Web::UI::WebControls::TableCaptionAlign get(); void set(System::Web::UI::WebControls::TableCaptionAlign value); };" />
      <MemberSignature Language="F#" Value="member this.CaptionAlign : System.Web.UI.WebControls.TableCaptionAlign with get, set" Usage="System.Web.UI.WebControls.FormView.CaptionAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableCaptionAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает горизонтальное или вертикальное расположение элемента HTML-заголовка в элементе управления <see cref="T:System.Web.UI.WebControls.FormView" />. Данное свойство позволяет сделать элемент управления более доступным для пользователей вспомогательных устройств.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" />. Значение по умолчанию: <see langword="TableCaptionAlign.NotSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> свойство, чтобы указать горизонтальное или вертикальное положение HTML-элемента заголовка в <xref:System.Web.UI.WebControls.FormView> элемента управления. Данное свойство позволяет сделать элемент управления более доступным для пользователей вспомогательных устройств.  
  
 Это свойство задается с помощью одного из <xref:System.Web.UI.WebControls.TableCaptionAlign> значений перечисления. В следующей таблице перечислены возможные значения.  
  
|Значение|Описание:|  
|-----------|-----------------|  
|`TableCaptionAlign.Bottom`|Заголовок выравнивается по нижнему краю таблицы.|  
|`TableCaptionAlign.Left`|Заголовок выравнивается по левому краю таблицы.|  
|`TableCaptionAlign.NotSet`|Выравнивание заголовка не задано.|  
|`TableCaptionAlign.Right`|Элемент заголовка выравнивается по правой части таблицы.|  
|`TableCaptionAlign.Top`|Элемент заголовка выравнивается по верхней части таблицы.|  
  
> [!NOTE]
>  Если значение этого свойства `TableCaptionAlign.NotSet`, используется значение по умолчанию браузера.  
  
 Поддержка дополнительных специальных <xref:System.Web.UI.WebControls.FormView> управления обеспечивается <xref:System.Web.UI.WebControls.FormView.Caption%2A> свойство. Используйте <xref:System.Web.UI.WebControls.FormView.Caption%2A> свойство, чтобы указать текст для отображения в HTML-элемента заголовка в <xref:System.Web.UI.WebControls.FormView> элемента управления.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> свойство, чтобы указать, что HTML заголовок элемента в <xref:System.Web.UI.WebControls.FormView> элемента управления, которые должны отображаться слева от элемента управления.  
  
 [!code-aspx-csharp[FormViewCaption#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCaption/CS/formviewcaptioncs.aspx#1)]
 [!code-aspx-vb[FormViewCaption#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCaption/VB/formviewcaptionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Указанное размещение не является значением перечисления <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.TableCaptionAlign" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.Caption" />
      </Docs>
    </Member>
    <Member MemberName="CellPadding">
      <MemberSignature Language="C#" Value="public virtual int CellPadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellPadding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CellPadding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CellPadding As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CellPadding { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CellPadding : int with get, set" Usage="System.Web.UI.WebControls.FormView.CellPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает расстояние между содержимым ячейки и ее границей.</summary>
        <value>Расстояние от содержимого ячейки до ее границ (в пикселях). По умолчанию используется значение -1, показывающее, что это свойство не задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.FormView.CellPadding%2A> свойство для изменения расстояния между содержимым ячейки и ее границ. Заданный размер полей добавляется ко всем четырем сторонам ячейки.  
  
 Все ячейки в одном столбце <xref:System.Web.UI.WebControls.FormView> управления имеют одинаковую ширину. Размер полей применяется к самой широкой ячейке и всех остальных ячеек в столбце корректируется по ширине этой ячейке. Аналогичным образом все ячейки в той же строке имеют одинаковую высоту. Размер полей применяется к самой высокой ячейке в строке, и все ячейки в строке корректируется по высоте этой ячейки. Невозможно указать размеры отдельных ячеек.  
  
 Чтобы настроить интервал между ячейками, используйте <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> свойство.  
  
> [!NOTE]
>  Если это свойство не задано, используется значение по умолчанию браузера.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.CellPadding%2A> свойство, чтобы указать расстояние между содержимым ячейки и ее границ.  
  
 [!code-aspx-csharp[FormViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCellPadding/CS/formviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[FormViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCellPadding/VB/formviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="CellSpacing">
      <MemberSignature Language="C#" Value="public virtual int CellSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CellSpacing" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CellSpacing As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CellSpacing { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CellSpacing : int with get, set" Usage="System.Web.UI.WebControls.FormView.CellSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает расстояние между ячейками.</summary>
        <value>Расстояние между ячейками (в пикселях). Значение по умолчанию — 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> свойства для изменения расстояния между соседними ячейками в <xref:System.Web.UI.WebControls.FormView> элемента управления. Эти интервалы применяются по вертикали или горизонтали. Ячейками одинаково для всего элемента управления. Невозможно указать расстояние между ячейками отдельных строк или столбцов.  
  
> [!NOTE]
>  Если этому свойству присвоено значение больше 0, а затем задать <xref:System.Web.UI.WebControls.FormView.GridLines%2A> свойства значение, отображающее границы ячейки, то будет отображен между границами смежных ячеек. В этом случае <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> свойство управляет размером разрыв.  
  
 Чтобы изменить расстояние между содержимым ячейки и ее границ, использовать <xref:System.Web.UI.WebControls.FormView.CellPadding%2A> свойства.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> свойство, чтобы указать размер интервала между соседними ячейками.  
  
 [!code-aspx-csharp[FormViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCellPadding/CS/formviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[FormViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCellPadding/VB/formviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="ChangeMode">
      <MemberSignature Language="C#" Value="public void ChangeMode (System.Web.UI.WebControls.FormViewMode newMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ChangeMode(valuetype System.Web.UI.WebControls.FormViewMode newMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeMode (newMode As FormViewMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ChangeMode(System::Web::UI::WebControls::FormViewMode newMode);" />
      <MemberSignature Language="F#" Value="member this.ChangeMode : System.Web.UI.WebControls.FormViewMode -&gt; unit" Usage="formView.ChangeMode newMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newMode" Type="System.Web.UI.WebControls.FormViewMode" />
      </Parameters>
      <Docs>
        <param name="newMode">Одно из значений перечисления <see cref="T:System.Web.UI.WebControls.FormViewMode" />.</param>
        <summary>Переключает элемент управления <see cref="T:System.Web.UI.WebControls.FormView" /> в указанный режим ввода данных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.FormView.ChangeMode%2A> метод программное переключение <xref:System.Web.UI.WebControls.FormView> управления между режимами только для чтения, редактирования и вставки. Этот метод также обновляет <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> свойство с указанным режимом. В следующей таблице перечислены различные режимы.  
  
|Режим|Описание:|  
|----------|-----------------|  
|`FormViewMode.Edit`|<xref:System.Web.UI.WebControls.FormView> Элемент управления находится в режиме редактирования, который позволяет пользователю обновлять значения записи.|  
|`FormViewMode.Insert`|<xref:System.Web.UI.WebControls.FormView> Элемент управления находится в режиме вставки, который позволяет пользователю добавить новую запись в источник данных.|  
|`FormView.ReadOnly`|<xref:System.Web.UI.WebControls.FormView> Элемент управления находится в режиме только для чтения, который является обычный режим.|  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.ModeChanged> И <xref:System.Web.UI.WebControls.FormView.ModeChanging> события не вызываются, при вызове этого метода.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.ChangeMode%2A> метод для возврата <xref:System.Web.UI.WebControls.FormView> элемента управления в режим только для чтения, каждый раз, когда пользователь переходит к другой записи.  
  
 [!code-aspx-csharp[FormViewChangeMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewChangeMode/CS/formviewchangemodecs.aspx#1)]
 [!code-aspx-vb[FormViewChangeMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewChangeMode/VB/formviewchangemodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CurrentMode" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected override int CreateChildControls (System.Collections.IEnumerable dataSource, bool dataBinding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 CreateChildControls(class System.Collections.IEnumerable dataSource, bool dataBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateChildControls (dataSource As IEnumerable, dataBinding As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int CreateChildControls(System::Collections::IEnumerable ^ dataSource, bool dataBinding);" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : System.Collections.IEnumerable * bool -&gt; int" Usage="formView.CreateChildControls (dataSource, dataBinding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="dataBinding" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataSource">
          <see cref="T:System.Collections.IEnumerable" />, представляющий источник данных, используемый для построения иерархии элементов управления.</param>
        <param name="dataBinding">
          <see langword="true" /> указывает, что иерархия элементов управления создается непосредственно из источника данных; <see langword="false" /> — что иерархия элементов управления создается из состояния представления.</param>
        <summary>Создает иерархию элементов управления для вывода элемента управления <see cref="T:System.Web.UI.WebControls.FormView" /> с использованием указанного источника данных.</summary>
        <returns>Число элементов, созданных на основе источника данных.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.CreateChildControls%28System.Collections.IEnumerable%2CSystem.Boolean%29> Метод — это вспомогательный метод, который вызывается методом <xref:System.Web.UI.WebControls.FormView> управления для создания иерархии элементов управления для <xref:System.Web.UI.WebControls.FormView> элемента управления. Когда `dataBinding` параметр `true`, привязка данных выполняется до создания иерархии элементов управления.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="T:System.Web.UI.DataSourceView" /> из <see cref="T:System.Web.UI.IDataSource" />, к которому привязан элемент управления <see cref="T:System.Web.UI.WebControls.FormView" />, имеет значение <see langword="null" />.</exception>
        <block subset="none" type="overrides">
          <para>При расширении <see cref="T:System.Web.UI.WebControls.FormView" /> класса, можно переопределить этот метод для создания иерархии элементов управления.</para>
        </block>
        <altmember cref="T:System.Collections.IEnumerable" />
        <altmember cref="M:System.Web.UI.Control.CreateChildControls" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberSignature Language="F#" Value="override this.CreateControlStyle : unit -&gt; System.Web.UI.WebControls.Style" Usage="formView.CreateControlStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает объект стиля таблицы по умолчанию для элемента управления <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <returns>Объект <see cref="T:System.Web.UI.WebControls.Style" />, содержащий стиль таблицы, заданный для элемента управления <see cref="T:System.Web.UI.WebControls.FormView" /> по умолчанию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.CreateControlStyle%2A> Метод — это вспомогательный метод, который вызывается методом <xref:System.Web.UI.WebControls.FormView> управления для создания собственного объекта стиль таблицы по умолчанию. Кроме настройки стиля по умолчанию <xref:System.Web.UI.WebControls.TableStyle> объекта, этот метод также задает <xref:System.Web.UI.WebControls.FormView.CellPadding%2A> значение 0.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При расширении <see cref="T:System.Web.UI.WebControls.FormView" /> класса, можно переопределить этот метод, чтобы создать свой собственный стиль по умолчанию.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.TableStyle" />
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceSelectArguments">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDataSourceSelectArguments () As DataSourceSelectArguments" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceSelectArguments ^ CreateDataSourceSelectArguments();" />
      <MemberSignature Language="F#" Value="override this.CreateDataSourceSelectArguments : unit -&gt; System.Web.UI.DataSourceSelectArguments" Usage="formView.CreateDataSourceSelectArguments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceSelectArguments</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает объект <see cref="T:System.Web.UI.DataSourceSelectArguments" />, содержащий аргументы, передаваемые в источник данных для обработки.</summary>
        <returns>
          <see cref="T:System.Web.UI.DataSourceSelectArguments" />, содержащий аргументы, передаваемые в источник данных.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments%2A> Метод — это вспомогательный метод, который вызывается методом <xref:System.Web.UI.WebControls.FormView> управления для создания <xref:System.Web.UI.DataSourceSelectArguments> объект, содержащий аргументы, переданный в источнике данных. В этой реализации <xref:System.Web.UI.DataSourceSelectArguments> объект содержит аргументы для операции разбиения на страницы.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При расширении <see cref="T:System.Web.UI.WebControls.FormView" /> класса, можно переопределить этот метод, чтобы задать собственные значения, которые передаются в источник данных.</para>
        </block>
        <altmember cref="T:System.Web.UI.DataSourceSelectArguments" />
        <altmember cref="M:System.Web.UI.WebControls.DataBoundControl.CreateDataSourceSelectArguments" />
      </Docs>
    </Member>
    <Member MemberName="CreateRow">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.FormViewRow CreateRow (int itemIndex, System.Web.UI.WebControls.DataControlRowType rowType, System.Web.UI.WebControls.DataControlRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.FormViewRow CreateRow(int32 itemIndex, valuetype System.Web.UI.WebControls.DataControlRowType rowType, valuetype System.Web.UI.WebControls.DataControlRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateRow (itemIndex As Integer, rowType As DataControlRowType, rowState As DataControlRowState) As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::FormViewRow ^ CreateRow(int itemIndex, System::Web::UI::WebControls::DataControlRowType rowType, System::Web::UI::WebControls::DataControlRowState rowState);" />
      <MemberSignature Language="F#" Value="abstract member CreateRow : int * System.Web.UI.WebControls.DataControlRowType * System.Web.UI.WebControls.DataControlRowState -&gt; System.Web.UI.WebControls.FormViewRow&#xA;override this.CreateRow : int * System.Web.UI.WebControls.DataControlRowType * System.Web.UI.WebControls.DataControlRowState -&gt; System.Web.UI.WebControls.FormViewRow" Usage="formView.CreateRow (itemIndex, rowType, rowState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
        <Parameter Name="rowType" Type="System.Web.UI.WebControls.DataControlRowType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
      </Parameters>
      <Docs>
        <param name="itemIndex">Отсчитываемый от нуля индекс элемента данных, который необходимо отобразить.</param>
        <param name="rowType">Одно из значений перечисления <see cref="T:System.Web.UI.WebControls.DataControlRowType" />.</param>
        <param name="rowState">Битовая комбинация значений перечисления <see cref="T:System.Web.UI.WebControls.DataControlRowState" />.</param>
        <summary>Создает объект <see cref="T:System.Web.UI.WebControls.FormViewRow" />, используя заданный индекс элемента, тип строки и ее состояние.</summary>
        <returns>Объект <see cref="T:System.Web.UI.WebControls.FormViewRow" /> с заданным индексом элемента, типом строки и ее состоянием.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.CreateRow%2A> Метод — это вспомогательный метод, который вызывается методом <xref:System.Web.UI.WebControls.FormView> управления для создания <xref:System.Web.UI.WebControls.FormViewRow> объект, используемый для представления строки в элементе управления.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При расширении <see cref="T:System.Web.UI.WebControls.FormView" /> класса, можно переопределить этот метод для возврата <see cref="T:System.Web.UI.WebControls.FormViewRow" /> объекта с пользовательскими параметрами.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowType" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowState" />
      </Docs>
    </Member>
    <Member MemberName="CreateTable">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.Table CreateTable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.Table CreateTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateTable" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateTable () As Table" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::Table ^ CreateTable();" />
      <MemberSignature Language="F#" Value="abstract member CreateTable : unit -&gt; System.Web.UI.WebControls.Table&#xA;override this.CreateTable : unit -&gt; System.Web.UI.WebControls.Table" Usage="formView.CreateTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Table</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает содержащую таблицу для элемента управления <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <returns>Элемент управления <see cref="T:System.Web.UI.WebControls.Table" />, представляющий содержащую таблицу для элемента управления <see cref="T:System.Web.UI.WebControls.FormView" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.CreateTable%2A> Метод — это вспомогательный метод, который вызывается методом <xref:System.Web.UI.WebControls.FormView> управления, чтобы создать таблицу, которая выступает в роли контейнера для элемента управления.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Table" />
      </Docs>
    </Member>
    <Member MemberName="CurrentMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.FormViewMode CurrentMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.FormViewMode CurrentMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CurrentMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentMode As FormViewMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::FormViewMode CurrentMode { System::Web::UI::WebControls::FormViewMode get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentMode : System.Web.UI.WebControls.FormViewMode" Usage="System.Web.UI.WebControls.FormView.CurrentMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает текущий режим ввода данных элемента управления <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Web.UI.WebControls.FormViewMode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> свойства, чтобы определить ли <xref:System.Web.UI.WebControls.FormView> управления возможности редактирования, вставки или только для чтения. В следующей таблице перечислены различные режимы.  
  
|Режим|Описание:|  
|----------|-----------------|  
|`FormViewMode.Edit`|<xref:System.Web.UI.WebControls.FormView> Элемент управления находится в режиме редактирования, который позволяет пользователю обновлять значения записи.|  
|`FormViewMode.Insert`|<xref:System.Web.UI.WebControls.FormView> Элемент управления находится в режиме вставки, который позволяет пользователю добавить новую запись в источник данных.|  
|`FormView.ReadOnly`|<xref:System.Web.UI.WebControls.FormView> Элемент управления находится в режиме только для чтения, который является обычный режим.|  
  
 Это значение обычно задается автоматически <xref:System.Web.UI.WebControls.FormView> управления при нажатии кнопки Создать, Update, Insert, Delete или "Отмена". Когда <xref:System.Web.UI.WebControls.FormView> изменением режима в ответ на действие элемента управления, возникают события, в следующей таблице. Это позволяет создать пользовательский обработчик событий, выполняет соответствующую процедуру при возникновении события.  
  
|событие|Описание:|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanged>|Происходит при <xref:System.Web.UI.WebControls.FormView> управления изменением режима, но после изменения режима. Это событие обычно используется для выполнения задачи, каждый раз, когда <xref:System.Web.UI.WebControls.FormView> режимы изменения элементов управления.|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanging>|Происходит при <xref:System.Web.UI.WebControls.FormView> изменения режимов, элементов управления, но до изменения режима. Это событие обычно используется для отмены изменения режима.|  
  
 **Примечание** эти события не вызываются, при изменении режима программным образом с помощью <xref:System.Web.UI.WebControls.FormView.ChangeMode%2A> метод.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> свойства, чтобы определить ли <xref:System.Web.UI.WebControls.FormView> управления возможности редактирования, вставки или только для чтения. Если пользователь пытается перейти к другой время записи <xref:System.Web.UI.WebControls.FormView> управления находится в режиме редактирования, отмены операции разбиения на страницы.  
  
 [!code-aspx-csharp[FormViewCurrentMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCurrentMode/CS/formviewcurrentmodecs.aspx#1)]
 [!code-aspx-vb[FormViewCurrentMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCurrentMode/VB/formviewcurrentmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DefaultMode" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberSignature Language="F#" Value="override this.DataBind : unit -&gt; unit" Usage="formView.DataBind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Привязывает источник данных к элементу управления <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.FormView.DataBind> метод привязать данные из источника данных для <xref:System.Web.UI.WebControls.FormView> элемента управления. Этот метод разрешает все выражения привязки данных в активном шаблоне элемента управления.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" />
      </Docs>
    </Member>
    <Member MemberName="DataItem">
      <MemberSignature Language="C#" Value="public virtual object DataItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ DataItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItem : obj" Usage="System.Web.UI.WebControls.FormView.DataItem" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DataItem</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает привязку элемента данных к элементу управления <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Объект <see cref="T:System.Object" />, представляющий элемент данных, привязанный к элементу управления <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.FormView.DataItem%2A> свойство для доступа к элементу данных привязано к <xref:System.Web.UI.WebControls.FormView> элемента управления. Элемент данных часто используется для прямого доступа к текущей записи значения полей. Тип <xref:System.Object> возвращаемый этим свойством изменяется в зависимости от источника данных. Например, если <xref:System.Web.UI.WebControls.SqlDataSource> элемент управления привязан к <xref:System.Web.UI.WebControls.FormView> управления <xref:System.Data.DataRowView> возвращается объект.  
  
> [!NOTE]
>  Это свойство доступно только после привязки данных. Прежде чем данных происходит привязка, это свойство возвращает `null`. Это свойство не также применим при <xref:System.Web.UI.WebControls.FormView> элемент управления находится в режиме вставки и возвращает `null`.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.DataItem%2A> свойства, чтобы определить значение поля в элементе данных.  
  
 [!code-aspx-csharp[FormViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCtor/CS/formviewctorcs.aspx#1)]
 [!code-aspx-vb[FormViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCtor/VB/formviewctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="Overload:System.Web.UI.DataBinder.Eval" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemIndex" />
      </Docs>
    </Member>
    <Member MemberName="DataItemCount">
      <MemberSignature Language="C#" Value="public int DataItemCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataItemCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataItemCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataItemCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DataItemCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItemCount : int" Usage="System.Web.UI.WebControls.FormView.DataItemCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает число элементов данных в источнике данных.</summary>
        <value>Число элементов данных в источнике данных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.FormView.DataItemCount%2A> свойство для определения количества элементов данных, содержащихся в источнике данных. Это свойство содержит то же значение, что <xref:System.Web.UI.WebControls.FormView.PageCount%2A> свойство.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItem" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
      </Docs>
    </Member>
    <Member MemberName="DataItemIndex">
      <MemberSignature Language="C#" Value="public virtual int DataItemIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataItemIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataItemIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int DataItemIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItemIndex : int" Usage="System.Web.UI.WebControls.FormView.DataItemIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DataItemIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает индекс элемента данных, привязанного к элементу управления <see cref="T:System.Web.UI.WebControls.FormView" /> из источника данных.</summary>
        <value>Индекс элемента данных, привязанного к элементу управления <see cref="T:System.Web.UI.WebControls.FormView" /> из источника данных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.FormView.DataItemIndex%2A> свойство для определения индекса элемента данных привязано к <xref:System.Web.UI.WebControls.FormView> управления из источника данных. Это свойство содержит то же значение, что <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> свойство.  
  
> [!NOTE]
>  Данное свойство не применимо при <xref:System.Web.UI.WebControls.FormView> элемент управления находится в режиме вставки. Когда элемент управления находится в режиме вставки <xref:System.Web.UI.WebControls.FormView.DataItemIndex%2A> свойство возвращает -1.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItem" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
      </Docs>
    </Member>
    <Member MemberName="DataKey">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKey DataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey DataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataKey As DataKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataKey ^ DataKey { System::Web::UI::WebControls::DataKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataKey : System.Web.UI.WebControls.DataKey" Usage="System.Web.UI.WebControls.FormView.DataKey" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundItemControl.DataKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Web.UI.WebControls.DataKey" />, представляющий первичный ключ отображаемой записи.</summary>
        <value>Объект <see cref="T:System.Web.UI.WebControls.DataKey" />, представляющий первичный ключ отображаемой записи.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> свойство задано, <xref:System.Web.UI.WebControls.FormView> управления автоматически создает <xref:System.Web.UI.WebControls.DataKey> объект, содержащий пары "ключ значение" поля или полей, перечисленных в <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> свойство для текущей записи. Используйте <xref:System.Web.UI.WebControls.FormView.DataKey%2A> на это свойство <xref:System.Web.UI.WebControls.DataKey> объекта. Это свойство обычно используется для получения ключей и их соответствующие значения для поля, указанные в <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> свойство.  
  
> [!NOTE]
>  Для быстрого вызова можно использовать <xref:System.Web.UI.WebControls.FormView.SelectedValue%2A> свойство для определения значения поля первого ключа, перечисленных в <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> свойство.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.DataKey%2A> свойство для определения значения ключевого поля.  
  
 [!code-aspx-csharp[FormViewDataKey#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDataKey/CS/formviewdatakeycs.aspx#1)]
 [!code-aspx-vb[FormViewDataKey#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDataKey/VB/formviewdatakeyvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="DataKeyNames">
      <MemberSignature Language="C#" Value="public virtual string[] DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataKeyNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::String ^&gt; ^ DataKeyNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataKeyNames : string[] with get, set" Usage="System.Web.UI.WebControls.FormView.DataKeyNames" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataKeyNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает массив, содержащий имена полей ключей источника данных.</summary>
        <value>Массив, содержащий имена ключевых полей источника данных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> свойство, чтобы указать список разделенных запятыми имен полей, представляющих первичного ключа из источника данных. При <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> свойство задано, <xref:System.Web.UI.WebControls.FormView> управления автоматически создает <xref:System.Web.UI.WebControls.DataKey> объект, содержащий пары "ключ значение" поля или полей, перечисленных в <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> свойство для текущей записи. <xref:System.Web.UI.WebControls.DataKey> Объект сохраняется в <xref:System.Web.UI.WebControls.FormView.DataKey%2A> свойство.  
  
> [!NOTE]
>  Необходимо задать <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> свойства для встроенных обновление, удаление и Вставка функции <xref:System.Web.UI.WebControls.FormView> работы элемента управления.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> свойство, чтобы указать поле ключа для источника данных привязаны к <xref:System.Web.UI.WebControls.FormView> элемента управления.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="DefaultMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewMode DefaultMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.FormViewMode DefaultMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DefaultMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DefaultMode As FormViewMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewMode DefaultMode { System::Web::UI::WebControls::FormViewMode get(); void set(System::Web::UI::WebControls::FormViewMode value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultMode : System.Web.UI.WebControls.FormViewMode with get, set" Usage="System.Web.UI.WebControls.FormView.DefaultMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает режим ввода данных, к которому возвращается элемент управления <see cref="T:System.Web.UI.WebControls.FormView" /> после операции обновления, вставки или отмены.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Web.UI.WebControls.FormViewMode" />. Значение по умолчанию: <see langword="FormViewMode.ReadOnly" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> свойство, чтобы указать ли <xref:System.Web.UI.WebControls.FormView> управление возвращается для редактирования, вставки или только для чтения после операции обновления, вставки или операция отмены выполняется. По умолчанию <xref:System.Web.UI.WebControls.FormView> управление возвращается в режим только для чтения; Однако можно сохранить <xref:System.Web.UI.WebControls.FormView> управления в режиме изменения или режим вставки, присвоив этому свойству в соответствующее значение. В следующей таблице перечислены различные режимы.  
  
|Режим|Описание:|  
|----------|-----------------|  
|`FormViewMode.Edit`|<xref:System.Web.UI.WebControls.FormView> Элемент управления находится в режиме редактирования, который позволяет пользователю обновлять значения записи.|  
|`FormViewMode.Insert`|<xref:System.Web.UI.WebControls.FormView> Элемент управления находится в режиме вставки, который позволяет пользователю добавить новую запись в источник данных.|  
|`FormViewMode.ReadOnly`|<xref:System.Web.UI.WebControls.FormView> Элемент управления находится в режиме только для чтения, который является обычный режим.|  
  
 Это свойство является обычно используется, когда <xref:System.Web.UI.WebControls.FormView> управления имеет единственное назначение, например, только для вставки или изменения записей.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> свойство для сохранения <xref:System.Web.UI.WebControls.FormView> элемента управления в режиме редактирования после выполнения операции обновления.  
  
 [!code-aspx-csharp[FormViewDefaultMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDefaultMode/CS/formviewdefaultmodecs.aspx#1)]
 [!code-aspx-vb[FormViewDefaultMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDefaultMode/VB/formviewdefaultmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Указанное размещение не является значением перечисления <see cref="T:System.Web.UI.WebControls.FormViewMode" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CurrentMode" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      </Docs>
    </Member>
    <Member MemberName="DeleteItem">
      <MemberSignature Language="C#" Value="public virtual void DeleteItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.DeleteItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DeleteItem ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DeleteItem();" />
      <MemberSignature Language="F#" Value="abstract member DeleteItem : unit -&gt; unit&#xA;override this.DeleteItem : unit -&gt; unit" Usage="formView.DeleteItem " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Удаляет текущую запись элемента управления <see cref="T:System.Web.UI.WebControls.FormView" /> из источника данных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.FormView.DeleteItem%2A> метод программно удалить текущую запись в <xref:System.Web.UI.WebControls.FormView> управления из источника данных. Этот метод обычно используется, когда необходимо удалить текущую запись вне <xref:System.Web.UI.WebControls.FormView> управления, например, из другого элемента управления на странице. Вызов этого метода также вызывает <xref:System.Web.UI.WebControls.FormView.ItemDeleted> и <xref:System.Web.UI.WebControls.FormView.ItemDeleting> события.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.DeleteItem%2A> метод программно удалить текущую запись в <xref:System.Web.UI.WebControls.FormView> управления из источника данных.  
  
 [!code-aspx-csharp[FormViewDeleteItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeleteItem/CS/formviewdeleteitemcs.aspx#1)]
 [!code-aspx-vb[FormViewDeleteItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeleteItem/VB/formviewdeleteitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteMethod">
      <MemberSignature Language="C#" Value="public virtual string DeleteMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DeleteMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DeleteMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DeleteMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteMethod : string with get, set" Usage="System.Web.UI.WebControls.FormView.DeleteMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя метода на странице, который вызывается, когда элемент управления выполняет операцию удаления.</summary>
        <value>Имя метода на странице, который вызывается, когда элемент управления выполняет операцию удаления.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Учебник ряда на использование привязки модели для Web Forms, см. [привязки модели и веб-форм](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EditItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EditItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EditItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.EditItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает пользовательское содержимое для элемента в режиме редактирования.</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" /> с пользовательским содержимым строки данных, когда элемент управления <see cref="T:System.Web.UI.WebControls.FormView" /> находится в режиме редактирования. По умолчанию свойство имеет значение NULL, показывающее, что значение свойства не задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> Элемент управления отображает другой шаблон для строки данных, в зависимости от текущего режима элемента управления (заданные <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> свойство). В следующей таблице показаны шаблон, который используется для каждого режима.  
  
|Режим|Выводимый шаблон|  
|----------|-----------------------|  
|Правка|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Insert|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|Только чтение|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 Используйте <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> свойство, чтобы определить собственный пользовательский интерфейс (UI) для данных строки, если <xref:System.Web.UI.WebControls.FormView> элемент управления находится в режиме редактирования. Шаблон элемента редактирования обычно содержит элементы управления вводом для пользователя обновить значения существующей записи, а также кнопки для обновления записи и для отмены операции обновления.  
  
 Чтобы указать пользовательский шаблон, первым делом `<EditItemTemplate>` теги между открывающим и закрывающим тегами элемента <xref:System.Web.UI.WebControls.FormView> элемента управления. После этого можно перечислить содержимое шаблона между открывающим и закрывающим `<EditItemTemplate>` тегов. С помощью выражения двустороннюю привязку, можно связать поле с элементом управления вводом. Это позволяет <xref:System.Web.UI.WebControls.FormView> управления автоматически отображать исходное значение поля в связанного элемента управления вводом в режиме редактирования. При обновлении записи <xref:System.Web.UI.WebControls.FormView> элемент управления автоматически извлекает обновленное значение поля из связанного элемента управления вводом. Дополнительные сведения о выражениях двусторонней привязки см. в разделе [привязка к базам данных](http://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742). Для создания командных кнопок, которые выполнения встроенных операций отмены и обновления, добавьте кнопку шаблон с его `CommandName` свойства одно из значений, перечисленных в следующей таблице.  
  
|Тип кнопки команды|Значение CommandName|  
|-------------------------|-----------------------|  
|Отмена|«Отмена»|  
|Обновление|«Обновления»|  
  
 Можно управлять внешним видом шаблон элемента с помощью <xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A> свойство.  
  
   
  
## Examples  
 Ниже приведен пример, как определить пользовательский шаблон для строки данных в режиме редактирования.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="EditRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EditRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EditRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ EditRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditRowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.EditRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает ссылку на объект <see cref="T:System.Web.UI.WebControls.TableItemStyle" />, позволяющий задать внешний вид строки данных во время пребывания элемента управления <see cref="T:System.Web.UI.WebControls.FormView" /> в режиме редактирования.</summary>
        <value>Ссылка на объект <see cref="T:System.Web.UI.WebControls.TableItemStyle" />, представляющий стиль строки данных во время пребывания элемента управления <see cref="T:System.Web.UI.WebControls.FormView" /> в режиме редактирования.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A> свойства для управления внешним видом данных строки, если <xref:System.Web.UI.WebControls.FormView> элемент управления находится в режиме редактирования. Когда <xref:System.Web.UI.WebControls.FormView> элемент управления находится в режиме редактирования, строка данных отображает содержимое определяемых пользователем, указанное в <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> свойство. Это свойство доступно только для чтения; Тем не менее, можно задать свойства <xref:System.Web.UI.WebControls.TableItemStyle> объекта, он возвращает. Свойства можно задать декларативно с помощью одного из следующих методов:  
  
-   Добавить атрибут в открывающем теге элемента <xref:System.Web.UI.WebControls.FormView> элемента управления в форме `Property-Subproperty`, где `Subproperty` — это свойство <xref:System.Web.UI.WebControls.TableItemStyle> объекта (например, `EditRowStyle-ForeColor`).  
  
-   Вложенные `<EditRowStyle>` элемент между открывающим и закрывающим тегами элемента <xref:System.Web.UI.WebControls.FormView> элемента управления.  
  
 Свойства также могут быть заданы программно в виде `Property.Subproperty` (например, `EditRowStyle.ForeColor`). Типичными параметрами являются пользовательский цвет фона, цвет переднего плана и свойства шрифта.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A> свойство, чтобы указать пользовательский стиль для данных строки, если <xref:System.Web.UI.WebControls.FormView> элемент управления находится в режиме редактирования.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EmptyDataRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ EmptyDataRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EmptyDataRowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает ссылку на объект <see cref="T:System.Web.UI.WebControls.TableItemStyle" />, позволяющий задать внешний вид пустой строки данных, отображаемой, если привязанный к элементу управления <see cref="T:System.Web.UI.WebControls.FormView" /> источник данных не содержит никаких записей.</summary>
        <value>Ссылка на объект <see cref="T:System.Web.UI.WebControls.TableItemStyle" />, позволяющий задать внешний вид пустой строки данных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> свойства для управления внешним видом пустой строки данных в <xref:System.Web.UI.WebControls.FormView> элемента управления. Пустая строка данных отображается в том случае, если источник данных, к которому привязан элемент управления не содержит ни одной записи. Это свойство доступно только для чтения; Тем не менее, можно задать свойства <xref:System.Web.UI.WebControls.TableItemStyle> объекта, он возвращает. Свойства можно задать декларативно с помощью одного из следующих методов:  
  
-   Добавить атрибут в открывающем теге элемента <xref:System.Web.UI.WebControls.FormView> элемента управления в форме `Property-Subproperty`, где `Subproperty` — это свойство <xref:System.Web.UI.WebControls.TableItemStyle> объекта (например, `EmptyDataRowStyle-ForeColor`).  
  
-   Вложенные `<EmptyDataRowStyle>` элемент между открывающим и закрывающим тегами элемента <xref:System.Web.UI.WebControls.FormView> элемента управления.  
  
 Свойства также могут быть заданы программно в виде `Property.Subproperty` (например, `EmptyDataRowStyle.ForeColor`). Типичными параметрами являются пользовательский цвет фона, цвет переднего плана и свойства шрифта.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> для указания пользовательского стиля для пустой строки данных, которые отображаются после <xref:System.Web.UI.WebControls.FormView> элемент управления привязан к источнику данных, который не содержит ни одной записи.  
  
 [!code-aspx-csharp[FormViewEmptyDataText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEmptyDataText/CS/formviewemptydatatextcs.aspx#1)]
 [!code-aspx-vb[FormViewEmptyDataText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEmptyDataText/VB/formviewemptydatatextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EmptyDataTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EmptyDataTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EmptyDataTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EmptyDataTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyDataTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает определенное пользователем содержимое для пустой строки данных, когда элемент управления <see cref="T:System.Web.UI.WebControls.FormView" /> привязан к источнику данных, не имеющему записей.</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" />, содержащий настраиваемое содержимое для пустой строки данных. Значение по умолчанию равно <see langword="null" /> и показывает, что значение свойства не задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Пустая строка данных отображается в <xref:System.Web.UI.WebControls.FormView> управления, когда источник данных, к которому привязан элемент управления не содержит ни одной записи. Можно определить собственный пользовательский интерфейс (UI) для пустой строки данных с помощью <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> свойство. Чтобы задать пользовательский шаблон для пустой строки данных, поместите `<EmptyDataTemplate>` теги между открывающим и закрывающим тегами элемента <xref:System.Web.UI.WebControls.FormView> элемента управления. После этого можно перечислить содержимое шаблона между открывающим и закрывающим `<EmptyDataTemplate>` тегов. Чтобы управлять стиль пустой строки данных, используйте <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> свойство. Кроме того, можно использовать встроенный пользовательский Интерфейс для пустой строки данных, задав <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> вместо этого свойства.  
  
> [!NOTE]
>  Если оба <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> и <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> заданы свойства, <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> имеет приоритет.  
  
   
  
## Examples  
 В следующем примере показано, как определить пользовательский шаблон для пустой строки данных, которые отображаются после <xref:System.Web.UI.WebControls.FormView> элемент управления привязан к источнику данных, который не содержит ни одной записи.  
  
 [!code-aspx-csharp[FormViewEmptyDataTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEmptyDataTemplate/CS/formviewemptydatatemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEmptyDataTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEmptyDataTemplate/VB/formviewemptydatatemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataText">
      <MemberSignature Language="C#" Value="public virtual string EmptyDataText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmptyDataText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EmptyDataText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EmptyDataText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyDataText : string with get, set" Usage="System.Web.UI.WebControls.FormView.EmptyDataText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает текст для отображения в пустой строке данных, когда элемент управления <see cref="T:System.Web.UI.WebControls.FormView" /> привязан к источнику данных, не имеющему записей.</summary>
        <value>Текст для отображения в пустой строке данных. По умолчанию используется пустая строка (""), указывающая, что это свойство не задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Пустая строка данных отображается в <xref:System.Web.UI.WebControls.FormView> управления, когда источник данных, к которому привязан элемент управления не содержит ни одной записи. Используйте <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> свойство, чтобы указать текст, отображаемый в пустой строке данных. Чтобы управлять стиль пустой строки данных, используйте <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> свойство. Кроме того, можно определить собственный пользовательский интерфейс (UI) для пустой строки данных, задав <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> вместо этого свойства.  
  
> [!NOTE]
>  Если оба <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> и <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> заданы свойства, <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> имеет приоритет.  
  
 Значение этого свойства, если задано, можно автоматически сохраняются в файл ресурсов с помощью средств конструктора. Дополнительные сведения см. в разделе <xref:System.ComponentModel.LocalizableAttribute> и [глобализации и локализации](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> свойство, чтобы указать текст, отображаемый в пустой строке данных.  
  
 [!code-aspx-csharp[FormViewEmptyDataText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEmptyDataText/CS/formviewemptydatatextcs.aspx#1)]
 [!code-aspx-vb[FormViewEmptyDataText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEmptyDataText/VB/formviewemptydatatextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="EnableModelValidation">
      <MemberSignature Language="C#" Value="public virtual bool EnableModelValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableModelValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EnableModelValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableModelValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableModelValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableModelValidation : bool with get, set" Usage="System.Web.UI.WebControls.FormView.EnableModelValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, будет ли проверяющий элемент управления обрабатывать исключения, происходящие во время операций вставки или обновления.</summary>
        <value>
          <see langword="true" />, если проверяющий элемент управления будет обрабатывать исключения, происходящие во время операций вставки или обновления; в противном случае — <see langword="false" />. Значение по умолчанию: <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureDataBound">
      <MemberSignature Language="C#" Value="protected override void EnsureDataBound ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void EnsureDataBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.EnsureDataBound" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub EnsureDataBound ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void EnsureDataBound();" />
      <MemberSignature Language="F#" Value="override this.EnsureDataBound : unit -&gt; unit" Usage="formView.EnsureDataBound " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Позволяет убедиться, что элемент управления <see cref="T:System.Web.UI.WebControls.FormView" /> привязан к данным, когда это необходимо.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.EnsureDataBound%2A> — Вспомогательный метод, используемый <xref:System.Web.UI.WebControls.FormView> класс убедитесь, что <xref:System.Web.UI.WebControls.FormView> элемент управления привязан к данным, когда это необходимо. <xref:System.Web.UI.WebControls.FormView.EnsureDataBound%2A> Метод обычно вызывается в процессе <xref:System.Web.UI.WebControls.BaseDataBoundControl.OnPreRender%2A> метода для привязки элемента управления к источнику данных, когда элемент управления с привязкой к данным не привязан, но требует привязки данных. Эта версия метода переопределена для предотвращения привязки данных при <xref:System.Web.UI.WebControls.FormView> элемент управления находится в режиме вставки.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.EnsureDataBound" />
      </Docs>
    </Member>
    <Member MemberName="ExtractRowValues">
      <MemberSignature Language="C#" Value="protected virtual void ExtractRowValues (System.Collections.Specialized.IOrderedDictionary fieldValues, bool includeKeys);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ExtractRowValues(class System.Collections.Specialized.IOrderedDictionary fieldValues, bool includeKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ExtractRowValues (fieldValues As IOrderedDictionary, includeKeys As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ExtractRowValues(System::Collections::Specialized::IOrderedDictionary ^ fieldValues, bool includeKeys);" />
      <MemberSignature Language="F#" Value="abstract member ExtractRowValues : System.Collections.Specialized.IOrderedDictionary * bool -&gt; unit&#xA;override this.ExtractRowValues : System.Collections.Specialized.IOrderedDictionary * bool -&gt; unit" Usage="formView.ExtractRowValues (fieldValues, includeKeys)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldValues" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="includeKeys" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fieldValues">
          <see cref="T:System.Collections.Specialized.IOrderedDictionary" />, используемый для хранения значений полей текущего элемента данных.</param>
        <param name="includeKeys">
          <see langword="true" /> чтобы включить ключевые поля; в противном случае — <see langword="false" />.</param>
        <summary>Извлекает значения каждого из полей, объявленных в строке данных, и сохраняет их в указанном объекте <see cref="T:System.Collections.Specialized.IOrderedDictionary" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.ExtractRowValues%2A> Метод — это вспомогательный метод, который вызывается методом <xref:System.Web.UI.WebControls.FormView> управления для получения значений каждого поля, объявленные в строке данных. Так как строка данных отображает разные шаблоны в зависимости от текущего режима, этот метод извлекает значения полей, объявленные в шаблоне, который соответствует текущий режим. В следующей таблице показаны доступные режимы и соответствующие шаблоны.  
  
|Режим|Шаблон|  
|----------|--------------|  
|Insert|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|Правка|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Только чтение|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 Можно указать, включают ли извлеченные значения ключевое поле или поля с помощью `includeKeys` параметра.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При расширении <see cref="T:System.Web.UI.WebControls.FormView" /> класса, можно переопределить этот метод, чтобы создать собственную процедуру, чтобы извлечь значения полей.</para>
        </block>
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="FooterRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow FooterRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow FooterRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FooterRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ FooterRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FooterRow : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.FooterRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Web.UI.WebControls.FormViewRow" />, представляющий строку нижнего колонтитула в элементе управления <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.FormViewRow" />, представляющий строку нижнего колонтитула в элементе управления <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В строке нижнего колонтитула отображается в нижней части <xref:System.Web.UI.WebControls.FormView> управления <xref:System.Web.UI.WebControls.FormView.FooterText%2A> или <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> свойству. Используйте <xref:System.Web.UI.WebControls.FormView.FooterRow%2A> программный доступ к свойству <xref:System.Web.UI.WebControls.FormViewRow> объект, который представляет строку нижнего колонтитула.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.FooterRow%2A> , Это свойство доступно только после <xref:System.Web.UI.WebControls.FormView> управления создает строку нижнего колонтитула в <xref:System.Web.UI.WebControls.FormView.ItemCreated> событий.  
  
 Это свойство обычно используется, когда необходимо программно управлять строкой нижнего колонтитула, например при добавлении настраиваемого содержимого. Любые изменения <xref:System.Web.UI.WebControls.FormView.FooterRow%2A> свойства должны быть выполнены после <xref:System.Web.UI.WebControls.FormView> элемент был отображен; в противном случае — <xref:System.Web.UI.WebControls.FormView> управления перезаписывает любые изменения.  
  
 Чтобы управлять стиля строки нижнего колонтитула, используйте <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> свойство.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.FooterRow%2A> свойство для программного изменения свойств строки нижнего колонтитула во время <xref:System.Web.UI.WebControls.FormView.ItemCreated> событий.  
  
 [!code-aspx-csharp[FormViewFooterTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterTemplate/CS/formviewfootertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewFooterTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterTemplate/VB/formviewfootertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
      </Docs>
    </Member>
    <Member MemberName="FooterStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FooterStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FooterStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ FooterStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FooterStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.FooterStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает ссылку на объект <see cref="T:System.Web.UI.WebControls.TableItemStyle" />, позволяющий задать внешний вид строки нижнего колонтитула в элементе управления <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Ссылка на <see cref="T:System.Web.UI.WebControls.TableItemStyle" />, представляющий стиль строки нижнего колонтитула в элементе управления <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В строке нижнего колонтитула отображается в нижней части <xref:System.Web.UI.WebControls.FormView> управления <xref:System.Web.UI.WebControls.FormView.FooterText%2A> или <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> свойству. Используйте <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> свойства для управления внешним видом строке нижнего колонтитула в <xref:System.Web.UI.WebControls.FormView> элемента управления. Это свойство доступно только для чтения; Тем не менее, можно задать свойства <xref:System.Web.UI.WebControls.TableItemStyle> объекта, он возвращает. Свойства можно задать декларативно с помощью одного из следующих методов:  
  
-   Добавить атрибут в открывающем теге элемента <xref:System.Web.UI.WebControls.FormView> элемента управления в форме `Property-Subproperty`, где `Subproperty` — это свойство <xref:System.Web.UI.WebControls.TableItemStyle> объекта (например, `FooterStyle-ForeColor`).  
  
-   Вложенные `<FooterStyle>` элемент между открывающим и закрывающим тегами элемента <xref:System.Web.UI.WebControls.FormView> элемента управления.  
  
 Свойства также могут быть заданы программно в виде `Property.Subproperty` (например, `FooterStyle.ForeColor`). Типичными параметрами являются пользовательский цвет фона, цвет переднего плана и свойства шрифта.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> для указания пользовательского стиля строки нижнего колонтитула.  
  
 [!code-aspx-csharp[FormViewFooterText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterText/CS/formviewfootertextcs.aspx#1)]
 [!code-aspx-vb[FormViewFooterText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterText/VB/formviewfootertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="FooterTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate FooterTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ FooterTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FooterTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.FooterTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает определенное пользователем содержимое строки нижнего колонтитула элемента управления <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Интерфейс <see cref="T:System.Web.UI.ITemplate" />, содержащий пользовательское содержимое строки нижнего колонтитула. Значение по умолчанию равно <see langword="null" /> и показывает, что значение свойства не задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В строке нижнего колонтитула отображается в нижней части <xref:System.Web.UI.WebControls.FormView> управления <xref:System.Web.UI.WebControls.FormView.FooterText%2A> или <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> свойству. Можно определить собственный пользовательский интерфейс (UI) для строки нижнего колонтитула с помощью <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> свойство. Чтобы задать пользовательский шаблон для строки нижнего колонтитула, поместите `<FooterTemplate>` теги между открывающим и закрывающим тегами элемента <xref:System.Web.UI.WebControls.FormView> элемента управления. После этого можно перечислить содержимое шаблона между открывающим и закрывающим `<FooterTemplate>` тегов. Чтобы управлять стиля строки нижнего колонтитула, используйте <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> свойство. Кроме того, можно просто отобразить текст в строке нижнего колонтитула, задав <xref:System.Web.UI.WebControls.FormView.FooterText%2A> вместо этого свойства.  
  
> [!NOTE]
>  Если оба <xref:System.Web.UI.WebControls.FormView.FooterText%2A> и <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> заданы свойства, <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> имеет приоритет.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> свойство, чтобы определить пользовательский шаблон для отображения в строке нижнего колонтитула.  
  
 [!code-aspx-csharp[FormViewFooterTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterTemplate/CS/formviewfootertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewFooterTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterTemplate/VB/formviewfootertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="FooterText">
      <MemberSignature Language="C#" Value="public virtual string FooterText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FooterText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FooterText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FooterText : string with get, set" Usage="System.Web.UI.WebControls.FormView.FooterText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает текст, отображаемый в строке нижнего колонтитула элемента управления <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Текст, отображаемый в строке нижнего колонтитула. По умолчанию используется пустая строка (""), указывающая, что это свойство не задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В строке нижнего колонтитула отображается в нижней части <xref:System.Web.UI.WebControls.FormView> управления <xref:System.Web.UI.WebControls.FormView.FooterText%2A> или <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> свойству. Используйте <xref:System.Web.UI.WebControls.FormView.FooterText%2A> свойство, чтобы указать текст, отображаемый в строке нижнего колонтитула. Чтобы управлять стиля строки нижнего колонтитула, используйте <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> свойство. Кроме того, можно определить собственный пользовательский интерфейс (UI) для строки нижнего колонтитула, задав <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> вместо этого свойства.  
  
> [!NOTE]
>  Если оба <xref:System.Web.UI.WebControls.FormView.FooterText%2A> и <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> заданы свойства, <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> имеет приоритет.  
  
 Значение этого свойства, если задано, можно автоматически сохраняются в файл ресурсов с помощью средств конструктора. Дополнительные сведения см. в разделе <xref:System.ComponentModel.LocalizableAttribute> и [глобализации и локализации](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.FooterText%2A> свойство, чтобы указать текст, отображаемый в строке нижнего колонтитула.  
  
 [!code-aspx-csharp[FormViewFooterText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterText/CS/formviewfootertextcs.aspx#1)]
 [!code-aspx-vb[FormViewFooterText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterText/VB/formviewfootertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="GridLines">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridLines GridLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.GridLines GridLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.GridLines" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property GridLines As GridLines" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::GridLines GridLines { System::Web::UI::WebControls::GridLines get(); void set(System::Web::UI::WebControls::GridLines value); };" />
      <MemberSignature Language="F#" Value="member this.GridLines : System.Web.UI.WebControls.GridLines with get, set" Usage="System.Web.UI.WebControls.FormView.GridLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridLines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает стиль линии сетки для элемента управления <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Web.UI.WebControls.GridLines" />. Значение по умолчанию: <see langword="GridLines.None" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.FormView.GridLines%2A> свойство, чтобы указать стиль линий сетки для <xref:System.Web.UI.WebControls.FormView> элемента управления. В следующей таблице перечислены доступные стили.  
  
|Стиль|Описание:|  
|-----------|-----------------|  
|`GridLines.None`|Линии сетки не отображаются.|  
|`GridLines.Horizontal`|Отображаются только горизонтальные линии сетки.|  
|`GridLines.Vertical`|Отображаются только вертикальные линии сетки.|  
|`GridLines.Both`|Отображаются горизонтальные и вертикальные линии сетки.|  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.GridLines%2A> свойство для отображения вертикальных и горизонтальных линий сетки.  
  
 [!code-aspx-csharp[FormViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCellPadding/CS/formviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[FormViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCellPadding/VB/formviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="HeaderRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow HeaderRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow HeaderRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HeaderRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ HeaderRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HeaderRow : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.HeaderRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Web.UI.WebControls.FormViewRow" />, представляющий строку верхнего колонтитула в элементе управления <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.FormViewRow" />, представляющий строку верхнего колонтитула в элементе управления <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Строка заголовка отображается в верхней части <xref:System.Web.UI.WebControls.FormView> управления <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> или <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> свойству. Используйте <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> программный доступ к свойству <xref:System.Web.UI.WebControls.FormViewRow> , представляющий строку заголовка.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> , Это свойство доступно только после <xref:System.Web.UI.WebControls.FormView> управления создает в строке заголовков в <xref:System.Web.UI.WebControls.FormView.ItemCreated> событий.  
  
 Это свойство обычно используется, когда необходимо программно управлять строку заголовка, например, при добавлении настраиваемого содержимого. Любые изменения <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> свойства должны быть выполнены после <xref:System.Web.UI.WebControls.FormView> элемент был отображен; в противном случае — <xref:System.Web.UI.WebControls.FormView> управления перезаписывает любые изменения.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> свойство для программного изменения свойств заголовка строки, во время <xref:System.Web.UI.WebControls.FormView.ItemCreated> событий.  
  
 [!code-aspx-csharp[FormViewHeaderTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderTemplate/CS/formviewheadertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderTemplate/VB/formviewheadertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HeaderStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ HeaderStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HeaderStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.HeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает ссылку на объект <see cref="T:System.Web.UI.WebControls.TableItemStyle" />, позволяющий задать внешний вид строки верхнего колонтитула в элементе управления <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Ссылка на <see cref="T:System.Web.UI.WebControls.TableItemStyle" />, представляющий стиль строки верхнего колонтитула в элементе управления <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Строка заголовка отображается в верхней части <xref:System.Web.UI.WebControls.FormView> управления <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> или <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> свойству. Используйте <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> свойства для управления внешним видом в строке заголовков в <xref:System.Web.UI.WebControls.FormView> элемента управления. Это свойство доступно только для чтения; Тем не менее, можно задать свойства <xref:System.Web.UI.WebControls.TableItemStyle> объекта, он возвращает. Свойства можно задать декларативно с помощью одного из следующих методов:  
  
-   Добавить атрибут в открывающем теге элемента <xref:System.Web.UI.WebControls.FormView> элемента управления в форме `Property-Subproperty`, где `Subproperty` — это свойство <xref:System.Web.UI.WebControls.TableItemStyle> объекта (например, `HeaderStyle-ForeColor`).  
  
-   Вложенные `<HeaderStyle>` элемент между открывающим и закрывающим тегами элемента <xref:System.Web.UI.WebControls.FormView> элемента управления.  
  
 Свойства также могут быть заданы программно в виде `Property.Subproperty` (например, `HeaderStyle.ForeColor`). Типичными параметрами являются пользовательский цвет фона, цвет переднего плана и свойства шрифта.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> для указания пользовательского стиля для верхнего колонтитула.  
  
 [!code-aspx-csharp[FormViewHeaderText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderText/CS/formviewheadertextcs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderText/VB/formviewheadertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ HeaderTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.HeaderTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает определенное пользователем содержимое строки верхнего колонтитула в элементе управления <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Интерфейс <see cref="T:System.Web.UI.ITemplate" />, содержащий пользовательское содержимое строки верхнего колонтитула. Значение по умолчанию равно <see langword="null" /> и показывает, что значение свойства не задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Строка заголовка отображается в верхней части <xref:System.Web.UI.WebControls.FormView> управления <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> или <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> свойству. Можно определить собственный пользовательский интерфейс (UI) для строки заголовка с помощью <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> свойство. Чтобы задать пользовательский шаблон для строки заголовка, поместите `<HeaderTemplate>` теги между открывающим и закрывающим тегами элемента <xref:System.Web.UI.WebControls.FormView> элемента управления. После этого можно перечислить содержимое шаблона между открывающим и закрывающим `<HeaderTemplate>` тегов. Чтобы управлять стиль заголовка строки, используйте <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> свойство. Кроме того, можно просто отобразить текст в строке заголовка, задав <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> вместо этого свойства.  
  
> [!NOTE]
>  Если оба <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> и <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> заданы свойства, <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> имеет приоритет.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> свойство, чтобы определить пользовательский шаблон для подготовки к просмотру для строки заголовка.  
  
 [!code-aspx-csharp[FormViewHeaderTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderTemplate/CS/formviewheadertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderTemplate/VB/formviewheadertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public virtual string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderText : string with get, set" Usage="System.Web.UI.WebControls.FormView.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает текст, отображаемый в строке верхнего колонтитула элемента управления <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Текст, отображаемый в строке верхнего колонтитула. По умолчанию используется пустая строка (""), указывающая, что это свойство не задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Строка заголовка отображается в верхней части <xref:System.Web.UI.WebControls.FormView> управления <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> или <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> свойству. Используйте <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> свойство, чтобы указать текст, отображаемый в строке заголовка. Чтобы управлять стиль заголовка строки, используйте <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> свойство. Кроме того, можно определить собственный пользовательский интерфейс (UI) для строки заголовка, задав <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> вместо этого свойства.  
  
> [!NOTE]
>  Если оба <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> и <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> заданы свойства, <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> имеет приоритет.  
  
 Значение этого свойства, если задано, можно автоматически сохраняются в файл ресурсов с помощью средств конструктора. Дополнительные сведения см. в разделе <xref:System.ComponentModel.LocalizableAttribute> и [глобализации и локализации](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> свойство, чтобы указать текст, отображаемый в строке заголовка.  
  
 [!code-aspx-csharp[FormViewHeaderText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderText/CS/formviewheadertextcs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderText/VB/formviewheadertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.HorizontalAlign HorizontalAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HorizontalAlign As HorizontalAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::HorizontalAlign HorizontalAlign { System::Web::UI::WebControls::HorizontalAlign get(); void set(System::Web::UI::WebControls::HorizontalAlign value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalAlign : System.Web.UI.WebControls.HorizontalAlign with get, set" Usage="System.Web.UI.WebControls.FormView.HorizontalAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.HorizontalAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает горизонтальное выравнивание элемента управления <see cref="T:System.Web.UI.WebControls.FormView" /> на странице.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Web.UI.WebControls.HorizontalAlign" />. Значение по умолчанию: <see langword="HorizontalAlign.NotSet" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A> свойство, чтобы указать горизонтальное выравнивание <xref:System.Web.UI.WebControls.FormView> на странице. В следующей таблице перечислены различных стилей горизонтального выравнивания.  
  
|Значение HorizontalAlign|Описание:|  
|---------------------------|-----------------|  
|`HorizontalAlign.NotSet`|Выравнивание по горизонтали <xref:System.Web.UI.WebControls.FormView> управления не был задан.|  
|`HorizontalAlign.Left`|<xref:System.Web.UI.WebControls.FormView> Управления по левому краю страницы.|  
|`HorizontalAlign.Center`|<xref:System.Web.UI.WebControls.FormView> Управления выравнивается по центру страницы.|  
|`HorizontalAlign.Right`|<xref:System.Web.UI.WebControls.FormView> Управления выравниванием по правому краю страницы.|  
|`HorizontalAlign.Justify`|<xref:System.Web.UI.WebControls.FormView> Управления выравнивается с левого и правого полей страницы.|  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A> свойство, чтобы указать, что <xref:System.Web.UI.WebControls.FormView> по центру элемента управления на странице.  
  
 [!code-aspx-csharp[FormViewHorizontalAlign#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHorizontalAlign/CS/formviewhorizontalaligncs.aspx#1)]
 [!code-aspx-vb[FormViewHorizontalAlign#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHorizontalAlign/VB/formviewhorizontalalignvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.HorizontalAlign" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
      </Docs>
    </Member>
    <Member MemberName="InitializePager">
      <MemberSignature Language="C#" Value="protected virtual void InitializePager (System.Web.UI.WebControls.FormViewRow row, System.Web.UI.WebControls.PagedDataSource pagedDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializePager(class System.Web.UI.WebControls.FormViewRow row, class System.Web.UI.WebControls.PagedDataSource pagedDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.InitializePager(System.Web.UI.WebControls.FormViewRow,System.Web.UI.WebControls.PagedDataSource)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializePager(System::Web::UI::WebControls::FormViewRow ^ row, System::Web::UI::WebControls::PagedDataSource ^ pagedDataSource);" />
      <MemberSignature Language="F#" Value="abstract member InitializePager : System.Web.UI.WebControls.FormViewRow * System.Web.UI.WebControls.PagedDataSource -&gt; unit&#xA;override this.InitializePager : System.Web.UI.WebControls.FormViewRow * System.Web.UI.WebControls.PagedDataSource -&gt; unit" Usage="formView.InitializePager (row, pagedDataSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.FormViewRow" />
        <Parameter Name="pagedDataSource" Type="System.Web.UI.WebControls.PagedDataSource" />
      </Parameters>
      <Docs>
        <param name="row">Объект <see cref="T:System.Web.UI.WebControls.FormViewRow" />, содержащий строку страничного навигатора.</param>
        <param name="pagedDataSource">Объект <see cref="T:System.Web.UI.WebControls.PagedDataSource" />, содержащий данные для текущей страницы.</param>
        <summary>Создает строку страничного навигатора в элементе управления <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.InitializePager%2A> Метод — это вспомогательный метод, который вызывается методом <xref:System.Web.UI.WebControls.FormView> управления, чтобы создать строку страничного навигатора. Он создает <xref:System.Web.UI.WebControls.TableCell> , содержащий свойства с помощью элементов управления навигацией <xref:System.Web.UI.WebControls.PagedDataSource> объектов, содержащихся в `pagedDataSource` параметра. Затем добавляется ячейку строки, заданной аргументом `row` параметра.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При расширении <see cref="T:System.Web.UI.WebControls.FormView" /> класса, можно переопределить этот метод, чтобы создать собственную строку страничного навигатора.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.PagedDataSource" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InitializeRow(System.Web.UI.WebControls.FormViewRow)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeRow">
      <MemberSignature Language="C#" Value="protected virtual void InitializeRow (System.Web.UI.WebControls.FormViewRow row);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeRow(class System.Web.UI.WebControls.FormViewRow row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.InitializeRow(System.Web.UI.WebControls.FormViewRow)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeRow (row As FormViewRow)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeRow(System::Web::UI::WebControls::FormViewRow ^ row);" />
      <MemberSignature Language="F#" Value="abstract member InitializeRow : System.Web.UI.WebControls.FormViewRow -&gt; unit&#xA;override this.InitializeRow : System.Web.UI.WebControls.FormViewRow -&gt; unit" Usage="formView.InitializeRow row" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.FormViewRow" />
      </Parameters>
      <Docs>
        <param name="row">Объект <see cref="T:System.Web.UI.WebControls.FormViewRow" /> для инициализации.</param>
        <summary>Инициализирует указанный объект <see cref="T:System.Web.UI.WebControls.FormViewRow" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.InitializeRow%2A> Метод — это вспомогательный метод, который вызывается методом <xref:System.Web.UI.WebControls.FormView> управления инициализировать указанный <xref:System.Web.UI.WebControls.FormViewRow> объекта. <xref:System.Web.UI.WebControls.FormViewRow> Инициализации объекта на основе типа строки и строки состояния, определяемое его <xref:System.Web.UI.WebControls.FormViewRow.RowType%2A> и <xref:System.Web.UI.WebControls.FormViewRow.RowState%2A> свойства, соответственно. Затем добавляется соответствующее содержимое <xref:System.Web.UI.WebControls.FormViewRow> объекта. В следующей таблице описаны как инициализируется каждый тип строки.  
  
|Тип строки|Описание:|  
|--------------|-----------------|  
|Строка данных|Содержимое <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>, <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>, или <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> добавлено свойство <xref:System.Web.UI.WebControls.FormViewRow> объекта, в зависимости от значения <xref:System.Web.UI.WebControls.FormViewRow.RowState%2A> свойство.|  
|Пустая строка данных|Значение <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> свойства или содержимое <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> добавляется свойство <xref:System.Web.UI.WebControls.FormViewRow> объекта, в зависимости от того, что свойство имеет значение. Если заданы оба свойства, <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> имеет приоритет.|  
|Строка нижнего колонтитула|Значение <xref:System.Web.UI.WebControls.FormView.FooterText%2A> свойства или содержимое <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> добавляется свойство <xref:System.Web.UI.WebControls.FormViewRow> объекта, в зависимости от того, что свойство имеет значение. Если заданы оба свойства, <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> имеет приоритет.|  
|Строка заголовка|Значение <xref:System.Web.UI.WebControls.FormView.HeaderText%2A> свойства или содержимое <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> добавляется свойство <xref:System.Web.UI.WebControls.FormViewRow> объекта, в зависимости от того, что свойство имеет значение. Если заданы оба свойства, <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> имеет приоритет.|  
  
> [!NOTE]
>  Этот метод не инициализирует строку страничного навигатора. Чтобы создать строку страничного навигатора, используйте <xref:System.Web.UI.WebControls.FormView.InitializePager%2A> метод.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При расширении <see cref="T:System.Web.UI.WebControls.FormView" /> класса, можно переопределить этот метод для создания собственных пользовательских строк.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowState" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowType" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InitializePager(System.Web.UI.WebControls.FormViewRow,System.Web.UI.WebControls.PagedDataSource)" />
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="public virtual void InsertItem (bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertItem(bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertItem (causesValidation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertItem(bool causesValidation);" />
      <MemberSignature Language="F#" Value="abstract member InsertItem : bool -&gt; unit&#xA;override this.InsertItem : bool -&gt; unit" Usage="formView.InsertItem causesValidation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="causesValidation">Значение <see langword="true" /> для проверки страницы при вызове данного метода; в противном случае — значение <see langword="false" />.</param>
        <summary>Вставляет текущую запись в источник данных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда <xref:System.Web.UI.WebControls.FormView> находится в режиме вставки, используйте <xref:System.Web.UI.WebControls.FormView.InsertItem%2A> метод программным образом вставить текущую запись в источнике данных. Этот метод часто используется при необходимости вставить текущую запись вне <xref:System.Web.UI.WebControls.FormView> управления, например, из другого элемента управления на странице.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView> Элемент управления должен быть в режиме вставки, если этот метод вызван; в противном случае — <xref:System.Web.HttpException> возникает исключение.  
  
 Чтобы указать, выполняется ли проверка страницы перед выполнением операции вставки, используйте `causesValidation` параметра. Вызов этого метода также вызывает <xref:System.Web.UI.WebControls.FormView.ItemInserted> и <xref:System.Web.UI.WebControls.FormView.ItemInserting> события.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.InsertItem%2A> метод программным образом вставить текущую запись в <xref:System.Web.UI.WebControls.FormView> элемента управления в источник данных.  
  
 [!code-aspx-csharp[FormViewInsertItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItem/CS/formviewinsertitemcs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItem/VB/formviewinsertitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Этот метод вызывается, когда элемент управления <see cref="T:System.Web.UI.WebControls.FormView" /> не находится в режиме вставки.  -или- Объект <see cref="T:System.Web.UI.DataSourceView" />, связанный с элементом управления <see cref="T:System.Web.UI.WebControls.FormView" />, имеет значение null.</exception>
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.DeleteItem" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="InsertItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate InsertItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate InsertItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InsertItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ InsertItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.InsertItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает пользовательское содержимое для элемента в режиме вставки.</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" /> с пользовательским содержимым строки данных, когда элемент управления <see cref="T:System.Web.UI.WebControls.FormView" /> находится в режиме вставки. По умолчанию свойство имеет значение NULL, показывающее, что значение свойства не задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> Элемент управления отображает другой шаблон для строки данных, в зависимости от текущего режима элемента управления (заданные <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> свойство). В следующей таблице показаны шаблон, который используется для каждого режима.  
  
|Режим|Выводимый шаблон|  
|----------|-----------------------|  
|Правка|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Insert|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|Только чтение|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 Используйте <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> свойство, чтобы определить собственный пользовательский интерфейс (UI) для данных строки, если <xref:System.Web.UI.WebControls.FormView> элемент управления находится в режиме вставки. Шаблон элемента вставки обычно содержит элементы управления вводом для пользователя, введите значения для новой записи, а также командные кнопки для вставки записи и для отмены операции вставки.  
  
 Чтобы указать пользовательский шаблон, первым делом `<InsertItemTemplate>` теги между открывающим и закрывающим тегами элемента <xref:System.Web.UI.WebControls.FormView> элемента управления. После этого можно перечислить содержимое шаблона между открывающим и закрывающим `<InsertItemTemplate>` тегов. С помощью выражения двустороннюю привязку, можно связать поле с элементом управления вводом. При вставке записи <xref:System.Web.UI.WebControls.FormView> элемент управления автоматически извлекает значение поля из связанного элемента управления вводом. Дополнительные сведения о выражениях двусторонней привязки см. в разделе [привязка к базам данных](http://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742). Для создания командных кнопок, которые операций вставки и выполнять встроенные "Отмена", добавьте кнопку шаблон с его `CommandName` свойства одно из значений, перечисленных в следующей таблице.  
  
|Тип кнопки команды|Значение CommandName|  
|-------------------------|-----------------------|  
|Отмена|«Отмена»|  
|Insert|«Вставка»|  
  
 Можно управлять внешним видом шаблон элемента с помощью <xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A> свойство.  
  
   
  
## Examples  
 Ниже приведен пример, как определить пользовательский шаблон для строки данных в режиме вставки.  
  
 [!code-aspx-csharp[FormViewInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItemTemplate/CS/formviewinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItemTemplate/VB/formviewinsertitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
      </Docs>
    </Member>
    <Member MemberName="InsertMethod">
      <MemberSignature Language="C#" Value="public virtual string InsertMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.InsertMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InsertMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InsertMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertMethod : string with get, set" Usage="System.Web.UI.WebControls.FormView.InsertMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя метода на странице, который вызывается, когда элемент управления выполняет операцию вставки.</summary>
        <value>Имя метода на странице, который вызывается, когда элемент управления выполняет операцию вставки.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Учебник ряда на использование привязки модели для Web Forms, см. [привязки модели и веб-форм](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle InsertRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle InsertRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ InsertRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertRowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.InsertRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает ссылку на объект <see cref="T:System.Web.UI.WebControls.TableItemStyle" />, позволяющий задать внешний вид строки данных в элементе управления <see cref="T:System.Web.UI.WebControls.FormView" /> во время пребывания элемента управления в режиме вставки.</summary>
        <value>Ссылка на объект <see cref="T:System.Web.UI.WebControls.TableItemStyle" />, представляющий стиль строки данных в элементе управления <see cref="T:System.Web.UI.WebControls.FormView" /> во время пребывания элемента управления в режиме вставки.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A> свойства для управления внешним видом данных строки, если <xref:System.Web.UI.WebControls.FormView> элемент управления находится в режиме вставки. Когда <xref:System.Web.UI.WebControls.FormView> элемент управления находится в режиме вставки, строка данных отображает содержимое определяемых пользователем, указанное в <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> свойство. Это свойство доступно только для чтения; Тем не менее, можно задать свойства <xref:System.Web.UI.WebControls.TableItemStyle> объекта, он возвращает.  
  
 Свойства можно задать декларативно с помощью одного из следующих методов:  
  
-   Добавить атрибут в открывающем теге элемента <xref:System.Web.UI.WebControls.FormView> элемента управления в форме `Property-Subproperty`, где `Subproperty` — это свойство <xref:System.Web.UI.WebControls.TableItemStyle> объекта (например, `InsertRowStyle-ForeColor`).  
  
-   Вложенные `<InsertRowStyle>` элемент между открывающим и закрывающим тегами элемента <xref:System.Web.UI.WebControls.FormView> элемента управления.  
  
 Свойства также могут быть заданы программно в виде `Property.Subproperty` (например, `InsertRowStyle.ForeColor`). Типичными параметрами являются пользовательский цвет фона, цвет переднего плана и свойства шрифта.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A> свойство, чтобы указать пользовательский стиль для данных строки, если <xref:System.Web.UI.WebControls.FormView> элемент управления находится в режиме вставки.  
  
 [!code-aspx-csharp[FormViewInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItemTemplate/CS/formviewinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItemTemplate/VB/formviewinsertitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="IsBindableType">
      <MemberSignature Language="C#" Value="public virtual bool IsBindableType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsBindableType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.IsBindableType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsBindableType(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member IsBindableType : Type -&gt; bool&#xA;override this.IsBindableType : Type -&gt; bool" Usage="formView.IsBindableType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">Тип <see cref="T:System.Type" />, представляющий тип данных, подлежащих проверке.</param>
        <summary>Определяет возможность привязки указанного типа данных к полю в элементе управления <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <returns>
          <see langword="true" />, если тип данных можно привязать к полю в элементе управления <see cref="T:System.Web.UI.WebControls.FormView" />; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.IsBindableType%2A> Метод — это вспомогательный метод, который вызывается методом <xref:System.Web.UI.WebControls.FormView> управления, чтобы определить, является ли указанный тип данных могут быть привязаны к поле в элементе управления. <xref:System.Web.UI.WebControls.FormView> Элемент управления поддерживает следующие типы данных:  
  
-   Типы всех примитивы, такие как <xref:System.Boolean>, <xref:System.Byte>, <xref:System.Int32>, и т. д.  
  
-   <xref:System.DateTime>  
  
-   <xref:System.Decimal>  
  
-   <xref:System.Guid>  
  
-   <xref:System.String>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При расширении <see cref="T:System.Web.UI.WebControls.FormView" /> класса, можно переопределить этот метод для добавления или ограничения типов данных, которые могут использоваться в <see cref="T:System.Web.UI.WebControls.FormView" /> элемента управления.</para>
        </block>
        <altmember cref="P:System.Type.IsPrimitive" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.Decimal" />
        <altmember cref="T:System.Guid" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ItemCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewCommandEventHandler ItemCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewCommandEventHandler ItemCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCommand As FormViewCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewCommandEventHandler ^ ItemCommand;" />
      <MemberSignature Language="F#" Value="member this.ItemCommand : System.Web.UI.WebControls.FormViewCommandEventHandler " Usage="member this.ItemCommand : System.Web.UI.WebControls.FormViewCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возникает при нажатии кнопки в элементе управления <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.ItemCommand> Событие возникает, когда кнопку в <xref:System.Web.UI.WebControls.FormView> нажатии элемента управления. Это позволяет создать метод обработки событий, выполняющий пользовательские действия, когда происходит данное событие.  
  
 Кнопки в <xref:System.Web.UI.WebControls.FormView> управления также может вызвать некоторые встроенные функциональные возможности элемента управления. Для выполнения этих операций, со значением `CommandName` кнопки одно из значений в таблице ниже.  
  
|Значение CommandName|Описание:|  
|-----------------------|-----------------|  
|«Отмена»|Отменяет операцию редактирования или вставки и возвращает <xref:System.Web.UI.WebControls.FormView> управления режимом, указанным <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> свойство. Вызывает <xref:System.Web.UI.WebControls.FormView.ModeChanged> и <xref:System.Web.UI.WebControls.FormView.ModeChanging> события.|  
|"Удалить"|Удаляет текущую запись. Вызывает <xref:System.Web.UI.WebControls.FormView.ItemDeleted> и <xref:System.Web.UI.WebControls.FormView.ItemDeleting> события.|  
|«Edit»|Помещает <xref:System.Web.UI.WebControls.FormView> элемента управления в режиме редактирования. Вызывает <xref:System.Web.UI.WebControls.FormView.ModeChanged> и <xref:System.Web.UI.WebControls.FormView.ModeChanging> события.|  
|«Вставка»|Вставляет текущую запись в источник данных. Вызывает <xref:System.Web.UI.WebControls.FormView.ItemInserted> и <xref:System.Web.UI.WebControls.FormView.ItemInserting> события.|  
|«New»|Помещает <xref:System.Web.UI.WebControls.FormView> элемента управления в режиме вставки. Вызывает <xref:System.Web.UI.WebControls.FormView.ModeChanged> и <xref:System.Web.UI.WebControls.FormView.ModeChanging> события.|  
|«Страница»|Выполняет операцию разбиения на страницы. Задать `CommandArgument` свойство кнопку, чтобы «Первый», «последние», «Далее», «Назад» или номер страницы для указания типа операции разбиения по страницам для выполнения. Вызывает <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> и <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> события.|  
|«Обновления»|Обновляет текущую запись в источнике данных. Вызывает <xref:System.Web.UI.WebControls.FormView.ItemUpdated> и <xref:System.Web.UI.WebControls.FormView.ItemUpdating> события.|  
  
 Несмотря на то что <xref:System.Web.UI.WebControls.FormView.ItemCommand> событие возникает при нажатии кнопки, перечисленные в предыдущей таблице, рекомендуется использовать события, перечисленные в таблице для операции.  
  
 Объект <xref:System.Web.UI.WebControls.FormViewCommandEventArgs> объект передается в метод обработки событий, который позволяет определить имя команды и аргумент для кнопки, нажатой. Чтобы определить имя команды и аргумент, используйте <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> и <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> свойства, соответственно. Также можно использовать элемент управления, вызвавший событие, используя <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A> свойство.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.ItemCommand> событий для обработки нажатия кнопки в <xref:System.Web.UI.WebControls.FormView> элемента управления. Когда пользователь нажимает кнопку Добавить, отображаемый элемент добавляется <xref:System.Web.UI.WebControls.ListBox> элемента управления.  
  
 [!code-aspx-csharp[FormViewItemCommandEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewItemCommandEventArgs/CS/formviewcommandeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewItemCommandEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewItemCommandEventArgs/VB/formviewcommandeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewCommandEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandName" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemCreated">
      <MemberSignature Language="C#" Value="public event EventHandler ItemCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ItemCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCreated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ItemCreated;" />
      <MemberSignature Language="F#" Value="member this.ItemCreated : EventHandler " Usage="member this.ItemCreated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит после создания всех строк в элементе управления <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.ItemCreated> Событие возникает после создания всех строк в <xref:System.Web.UI.WebControls.FormView> элемента управления. Это может произойти, когда элемент управления сначала подготавливается к просмотру или при переходе к другой записи. Это событие можно использовать для предоставления метода обработки событий, выполняющий пользовательские действия, такие как добавление или изменение содержимого строки, когда происходит данное событие.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.ItemCreated> Событие возникает перед <xref:System.Web.UI.WebControls.FormView> элемент управления привязан к данным. Чтобы изменить значение привязанного поля, используйте <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBound> событий.  
  
 Можно получить доступ к строки заголовка, нижнего колонтитула и страничного навигатора в <xref:System.Web.UI.WebControls.FormView> управления с помощью <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A>, <xref:System.Web.UI.WebControls.FormView.FooterRow%2A>, <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A>, или <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> свойства, соответственно. Чтобы получить доступ к строке данных, используйте <xref:System.Web.UI.WebControls.FormView.Row%2A> свойство.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.ItemCreated> событий, чтобы обновить текст <xref:System.Web.UI.WebControls.Label> элемента управления, содержащегося в строку страничного навигатора.  
  
 [!code-aspx-csharp[FormViewItemCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewItemCreated/CS/formviewitemcreatedcs.aspx#1)]
 [!code-aspx-vb[FormViewItemCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewItemCreated/VB/formviewitemcreatedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.Row" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemDeleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewDeletedEventHandler ItemDeleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewDeletedEventHandler ItemDeleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDeleted As FormViewDeletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewDeletedEventHandler ^ ItemDeleted;" />
      <MemberSignature Language="F#" Value="member this.ItemDeleted : System.Web.UI.WebControls.FormViewDeletedEventHandler " Usage="member this.ItemDeleted : System.Web.UI.WebControls.FormViewDeletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewDeletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при нажатии кнопки удаления в элементе управления <see cref="T:System.Web.UI.WebControls.FormView" /> после выполнения операции удаления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> Управления вызывает <xref:System.Web.UI.WebControls.FormView.ItemDeleted> событие, когда кнопку «Удалить» (кнопка с его `CommandName` , имеющим значение «Delete») в элементе управления выбран, но после <xref:System.Web.UI.WebControls.FormView> управления запись удаляется. Это позволяет предоставить метод обработки событий, который выполняет пользовательские действия, такие как проверка результатов операции удаления, когда происходит данное событие.  
  
 Объект <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs> объект передается в метод обработки событий, который позволяет определить количество обработанных записей и любые исключения, которые могли возникнуть. Чтобы определить количество записей, затронутых операцией удаления, используйте <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows%2A> свойство. Используйте <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception%2A> свойство, чтобы определить, произошла ли все исключения. Можно также указать, является ли исключение обработано в метод обработки событий, задав <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled%2A> свойство. Для доступа к пары "имя значение" ключевых полей и неключевых полей удаленной записи следует использовать <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys%2A> и <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values%2A> свойства, соответственно.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.ItemDeleted> событие, чтобы определить, произошло ли исключение во время операции удаления.  
  
 [!code-aspx-csharp[FormViewDeletedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeletedEventArgs/CS/formviewdeletedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewDeletedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeletedEventArgs/VB/formviewdeletedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeletedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeletedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemDeleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewDeleteEventHandler ItemDeleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewDeleteEventHandler ItemDeleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDeleting As FormViewDeleteEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewDeleteEventHandler ^ ItemDeleting;" />
      <MemberSignature Language="F#" Value="member this.ItemDeleting : System.Web.UI.WebControls.FormViewDeleteEventHandler " Usage="member this.ItemDeleting : System.Web.UI.WebControls.FormViewDeleteEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewDeleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при нажатии кнопки удаления в элементе управления <see cref="T:System.Web.UI.WebControls.FormView" /> перед выполнением операции удаления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> Управления вызывает <xref:System.Web.UI.WebControls.FormView.ItemDeleting> событие, когда кнопку «Удалить» (кнопка с его `CommandName` , имеющим значение «Delete») в элементе управления выбран, но перед <xref:System.Web.UI.WebControls.FormView> управления запись удаляется. Это позволяет предоставить метод обработки событий, который выполняет пользовательские действия, такие как проверка записи перед ее удалением, когда происходит данное событие.  
  
 Объект <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs> объект передается в метод обработки событий, который позволяет определить индекс записи, удаляемой и указать, что операция удаления должна быть отменена. Чтобы определить индекс записи, используйте <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.RowIndex%2A> свойство. Чтобы отменить операцию удаления, установите <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> свойства `true`. Вы также доступны поля ключевых и неключевых полей с помощью <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.Keys%2A> и <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.Values%2A> свойства, соответственно.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 В следующем примере показано, как использовать <xref:System.Web.UI.WebControls.FormView.ItemDeleting> событий, чтобы отменить операцию удаления.  
  
 [!code-aspx-csharp[FormViewDeleteEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeleteEventArgs/CS/formviewdeleteeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewDeleteEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeleteEventArgs/VB/formviewdeleteeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeleteEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeleteEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeleteEventArgs.RowIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeleteEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeleteEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemInserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewInsertedEventHandler ItemInserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewInsertedEventHandler ItemInserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemInserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemInserted As FormViewInsertedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewInsertedEventHandler ^ ItemInserted;" />
      <MemberSignature Language="F#" Value="member this.ItemInserted : System.Web.UI.WebControls.FormViewInsertedEventHandler " Usage="member this.ItemInserted : System.Web.UI.WebControls.FormViewInsertedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewInsertedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при нажатии кнопки вставки в элементе управления <see cref="T:System.Web.UI.WebControls.FormView" /> после выполнения операции вставки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> Управления вызывает <xref:System.Web.UI.WebControls.FormView.ItemInserted> событие, когда кнопка вставки (кнопка с его `CommandName` , имеющим значение «Вставка») в элементе управления выбран, но после <xref:System.Web.UI.WebControls.FormView> запись вставляется в элемент управления. Это позволяет предоставить метод обработки событий, который выполняет пользовательские действия, такие как проверка результатов операции вставки, когда происходит данное событие.  
  
 Объект <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> объект передается в метод обработки событий, который позволяет определить количество обработанных записей и любые исключения, которые могли возникнуть. Чтобы определить количество записей, затронутых операцией вставки, используйте <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> свойство. Используйте <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> свойство, чтобы определить, произошла ли все исключения. Можно также указать, является ли исключение обработано в метод обработки событий, задав <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> свойство. Если для доступа к значениям вставленной записи, необходимо использовать <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A> свойства.  
  
 По умолчанию <xref:System.Web.UI.WebControls.FormView> управление возвращается в режим, заданные <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> свойство после выполнения операции вставки. Чтобы сохранить <xref:System.Web.UI.WebControls.FormView> управления в режиме вставки, задайте <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> свойства `true`.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.ItemInserted> событие, чтобы определить, произошло ли исключение во время операции вставки.  
  
 [!code-aspx-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemInserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewInsertEventHandler ItemInserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewInsertEventHandler ItemInserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemInserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemInserting As FormViewInsertEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewInsertEventHandler ^ ItemInserting;" />
      <MemberSignature Language="F#" Value="member this.ItemInserting : System.Web.UI.WebControls.FormViewInsertEventHandler " Usage="member this.ItemInserting : System.Web.UI.WebControls.FormViewInsertEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewInsertEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при нажатии кнопки вставки в элементе управления <see cref="T:System.Web.UI.WebControls.FormView" /> перед выполнением операции вставки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> Управления вызывает <xref:System.Web.UI.WebControls.FormView.ItemInserting> событие, когда кнопка вставки (кнопка с его `CommandName` , имеющим значение «Вставка») в элементе управления выбран, но перед <xref:System.Web.UI.WebControls.FormView> запись вставляется в элемент управления. Это позволяет предоставить метод обработки событий, который выполняет пользовательские действия, например HTML-кодирование значений записи перед вставкой его в источнике данных, когда происходит данное событие.  
  
 Объект <xref:System.Web.UI.WebControls.FormViewInsertEventArgs> объект передается в метод обработки событий, который позволяет определить значение необязательного аргумента команды отправляемые <xref:System.Web.UI.WebControls.FormView> управления и указать, что операция вставки должна быть отменена. Значение аргумента команды соответствует `CommandArgument` свойство "Добавить". При `CommandArgument` кнопки "Вставить" имеет значение, используйте <xref:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument%2A> свойство для определения значения аргумента команды. Чтобы отменить операцию вставки, задайте <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> свойства `true`. Также может считывать или изменять значения полей для новой записи с помощью <xref:System.Web.UI.WebControls.FormViewInsertEventArgs.Values%2A> свойство.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 В следующем примере показано, как использовать <xref:System.Web.UI.WebControls.FormView.ItemInserting> событий для отмены операции вставки.  
  
 [!code-aspx-csharp[FormViewInsertEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertEventArgs/CS/formviewinserteventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertEventArgs/VB/formviewinserteventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.ItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает пользовательское содержимое для строки данных в элементе управления <see cref="T:System.Web.UI.WebControls.FormView" />, когда элемент управления находится в режиме доступа только для чтения.</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" /> с пользовательским содержимым строки данных, когда элемент управления <see cref="T:System.Web.UI.WebControls.FormView" /> находится в режиме доступа только для чтения. По умолчанию свойство имеет значение NULL, показывающее, что значение свойства не задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> Элемент управления отображает другой шаблон для строки данных, в зависимости от текущего режима элемента управления (заданные <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> свойство). В следующей таблице показаны шаблон, который используется для каждого режима.  
  
|Режим|Выводимый шаблон|  
|----------|-----------------------|  
|Правка|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Insert|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|Только чтение|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 Используйте <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> свойство, чтобы определить собственный пользовательский интерфейс (UI) для данных строки, если <xref:System.Web.UI.WebControls.FormView> элемент управления находится в режиме только для чтения. Шаблон элемента обычно содержит элементы управления для отображения значений полей записи, а также командных кнопок для редактирования, вставки и удаления записи.  
  
 Чтобы указать пользовательский шаблон, первым делом `<ItemTemplate>` теги между открывающим и закрывающим тегами элемента <xref:System.Web.UI.WebControls.FormView> элемента управления. После этого можно перечислить содержимое шаблона между открывающим и закрывающим `<ItemTemplate>` тегов. Чтобы отобразить значения полей источника данных, связанного с элементом управления, используйте выражение привязки данных. Дополнительные сведения о выражениях привязки данных см. в разделе [синтаксис выражения привязки данных](http://msdn.microsoft.com/library/676beb1d-ddfa-4153-bba8-3c86dcb7ceca). Для создания командных кнопок, которые выполнения встроенных delete, изменения и новые операции записи, добавьте кнопку в шаблон с его `CommandName` свойства одно из значений, перечисленных в следующей таблице.  
  
|Тип кнопки команды|Значение CommandName|  
|-------------------------|-----------------------|  
|Удаление|"Удалить"|  
|Правка|«Edit»|  
|Новый|«New»|  
  
 Можно управлять внешним видом шаблон элемента с помощью <xref:System.Web.UI.WebControls.FormView.RowStyle%2A> свойство.  
  
   
  
## Examples  
 В следующем примере показано, как определить пользовательский шаблон для строки данных в режиме только для чтения.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ItemUpdated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewUpdatedEventHandler ItemUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewUpdatedEventHandler ItemUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemUpdated As FormViewUpdatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewUpdatedEventHandler ^ ItemUpdated;" />
      <MemberSignature Language="F#" Value="member this.ItemUpdated : System.Web.UI.WebControls.FormViewUpdatedEventHandler " Usage="member this.ItemUpdated : System.Web.UI.WebControls.FormViewUpdatedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewUpdatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при нажатии кнопки обновления в элементе управления <see cref="T:System.Web.UI.WebControls.FormView" /> после выполнения операции обновления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> Управления вызывает <xref:System.Web.UI.WebControls.FormView.ItemUpdated> событие, когда кнопка обновления (кнопка с его `CommandName` , имеющим значение «Обновления») в элементе управления выбран, но после <xref:System.Web.UI.WebControls.FormView> управления обновляет запись. Это позволяет предоставить метод обработки событий, который выполняет пользовательские действия, такие как проверка результатов операции обновления, когда происходит данное событие.  
  
 Объект <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> объект передается в метод обработки событий, который позволяет определить количество обработанных записей и любые исключения, которые могли возникнуть. Чтобы определить количество записей, затронутых операцией обновления, используйте <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A> свойство. Используйте <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> свойство, чтобы определить, произошла ли все исключения. Можно также указать, является ли исключение обработано в метод обработки событий, задав <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> свойство. Если для доступа к значениям ключевого поля для обновленной записи, необходимо использовать <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> свойства. Исходные и обновленные неключевых полей значений может осуществляться с использованием <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> и <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> свойства, соответственно.  
  
 По умолчанию <xref:System.Web.UI.WebControls.FormView> управление возвращается в режим, заданные <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> свойство после выполнения операции обновления. Чтобы сохранить <xref:System.Web.UI.WebControls.FormView> управления в режим редактирования, задайте <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A> свойства `true`.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.ItemUpdated> событие, чтобы определить, произошло ли исключение во время операции обновления.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemUpdating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewUpdateEventHandler ItemUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewUpdateEventHandler ItemUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemUpdating As FormViewUpdateEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewUpdateEventHandler ^ ItemUpdating;" />
      <MemberSignature Language="F#" Value="member this.ItemUpdating : System.Web.UI.WebControls.FormViewUpdateEventHandler " Usage="member this.ItemUpdating : System.Web.UI.WebControls.FormViewUpdateEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewUpdateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при нажатии кнопки обновления в элементе управления <see cref="T:System.Web.UI.WebControls.FormView" /> перед выполнением операции обновления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> Управления вызывает <xref:System.Web.UI.WebControls.FormView.ItemUpdating> событие, когда кнопка обновления (кнопка с его `CommandName` , имеющим значение «Обновления») в элементе управления выбран, но перед <xref:System.Web.UI.WebControls.FormView> управления обновляет запись. Это позволяет предоставить метод обработки событий, который выполняет пользовательские действия, например HTML-кодирование значений записи перед обновлением ее в источнике данных, при появлении этого события.  
  
 Объект <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> объект передается в метод обработки событий, который позволяет определить значение необязательного аргумента команды отправляемые <xref:System.Web.UI.WebControls.FormView> управления и указать, что операция обновления должна быть отменена. Значение аргумента команды соответствует `CommandArgument` свойство кнопки "Обновить". Когда `CommandArgument` кнопки "Обновить" имеет значение, используйте <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A> свойство для определения значения аргумента команды. Чтобы отменить операцию обновления, задайте <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> свойства `true`. Также может считывать или изменять новые значения, введенные пользователем с помощью <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> и <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> свойства. <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> Свойство содержит ключевых полей, а <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> свойство содержит неключевых полей. Если необходимо получить доступ к исходных значений полей, используйте <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> свойство.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 В следующем примере показано, как использовать <xref:System.Web.UI.WebControls.FormView.ItemUpdating> событий для отмены операции обновления.  
  
 [!code-aspx-csharp[FormViewUpdateEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateEventArgs/CS/formviewupdateeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdateEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateEventArgs/VB/formviewupdateeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="formView.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Объект <see cref="T:System.Object" />, который представляет состояние элемента управления <see cref="T:System.Web.UI.WebControls.FormView" />.</param>
        <summary>Загружает состояние свойств элемента управления <see cref="T:System.Web.UI.WebControls.FormView" />, которые следует сохранять, даже если свойство <see cref="P:System.Web.UI.Control.EnableViewState" /> имеет значение <see langword="false" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.LoadControlState%2A> Метод используется для загрузки состояния <xref:System.Web.UI.WebControls.FormView> свойства элемента управления, которые необходимо сохранить, даже если <xref:System.Web.UI.Control.EnableViewState%2A> свойству `false`.  
  
> [!NOTE]
>  Этот метод используется преимущественно разработчиками элементов управления при расширении <xref:System.Web.UI.WebControls.FormView> элемента управления.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
        <altmember cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="formView.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Объект <see cref="T:System.Object" />, который представляет состояние элемента управления <see cref="T:System.Web.UI.WebControls.FormView" />.</param>
        <summary>Загружает предварительно сохраненное состояние представления элемента управления <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.LoadViewState%2A> Метод используется для загрузки ранее сохраненное состояние представления элемента <xref:System.Web.UI.WebControls.FormView> элемента управления.  
  
> [!NOTE]
>  Этот метод используется преимущественно разработчиками элементов управления при расширении <xref:System.Web.UI.WebControls.FormView> элемента управления.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ModeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ModeChanged;" />
      <MemberSignature Language="F#" Value="member this.ModeChanged : EventHandler " Usage="member this.ModeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при переключении элемента управления <see cref="T:System.Web.UI.WebControls.FormView" /> между режимами редактирования, вставки и доступа только для чтения, но после того, как режим будет изменен.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.ModeChanged> Событие возникает при <xref:System.Web.UI.WebControls.FormView> управления пытается переключаться между режимами редактирования, вставки и только для чтения, но после фактического изменения режима. Это позволяет предоставить метод обработки событий, который выполняет пользовательские действия, такие как синхронизация <xref:System.Web.UI.WebControls.FormView> управления с другим элементом управления, когда происходит данное событие.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.ModeChanged> событий для отображения в строке заголовка текущий режим <xref:System.Web.UI.WebControls.FormView> элемента управления.  
  
 [!code-aspx-csharp[FormViewModeChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewModeChanged/CS/formviewmodechangedcs.aspx#1)]
 [!code-aspx-vb[FormViewModeChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewModeChanged/VB/formviewmodechangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ModeChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewModeEventHandler ModeChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewModeEventHandler ModeChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ModeChanging As FormViewModeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewModeEventHandler ^ ModeChanging;" />
      <MemberSignature Language="F#" Value="member this.ModeChanging : System.Web.UI.WebControls.FormViewModeEventHandler " Usage="member this.ModeChanging : System.Web.UI.WebControls.FormViewModeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при переключении элемента управления <see cref="T:System.Web.UI.WebControls.FormView" /> между режимами редактирования, вставки и доступа только для чтения, но до того, как режим будет изменен.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.ModeChanging> Событие возникает при <xref:System.Web.UI.WebControls.FormView> управления пытается переключаться между режимами редактирования, вставки и только для чтения, но до фактического изменения режима. Это позволяет предоставить метод обработки событий, который выполняет пользовательские действия, такие как настройка <xref:System.Web.UI.WebControls.FormView> управлять определенный режим или Отмена изменения режима, когда происходит данное событие.  
  
 Объект <xref:System.Web.UI.WebControls.FormViewModeEventArgs> объект передается в метод обработки событий, который позволяет определить режим, который <xref:System.Web.UI.WebControls.FormView> управления переключением, чтобы определить ли <xref:System.Web.UI.WebControls.FormView.ModeChanging> события в результате отмены операции редактирования пользователем или Чтобы указать, что должна быть отменена операция вставки. Чтобы определить новый режим, используйте <xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A> свойство. Можно также использовать <xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A> свойство переключиться в альтернативный режим, присвоив ему значение одного из <xref:System.Web.UI.WebControls.FormViewMode> значений перечисления. Используйте <xref:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit%2A> свойство, чтобы определить, является ли пользователь отменил операцию редактирования. Чтобы отменить операцию вставки, задайте <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> свойства `true`.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.ModeChanging> событий, чтобы скрыть страничного навигатора строки, если <xref:System.Web.UI.WebControls.FormView> управления переходит в режим редактирования.  
  
 [!code-aspx-csharp[FormViewModeEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewModeEventArgs/CS/formviewmodeeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewModeEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewModeEventArgs/VB/formviewmodeeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewModeEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewModeEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ModifiedOuterTableStylePropertyName">
      <MemberSignature Language="C#" Value="protected internal virtual string ModifiedOuterTableStylePropertyName ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string ModifiedOuterTableStylePropertyName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.ModifiedOuterTableStylePropertyName" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ModifiedOuterTableStylePropertyName () As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ ModifiedOuterTableStylePropertyName();" />
      <MemberSignature Language="F#" Value="abstract member ModifiedOuterTableStylePropertyName : unit -&gt; string&#xA;override this.ModifiedOuterTableStylePropertyName : unit -&gt; string" Usage="formView.ModifiedOuterTableStylePropertyName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Указывает, устанавливаются ли специфичные для таблицы CSS-правила, связанные с элементом управления <see cref="T:System.Web.UI.WebControls.FormView" />, в свои значения по умолчанию.</summary>
        <returns>CSS-правила по умолчанию, связанные с элементом управления <see cref="T:System.Web.UI.WebControls.FormView" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Правила стилей CSS конкретной таблицы устанавливаются в значения по умолчанию с помощью <xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A>, <xref:System.Web.UI.WebControls.FormView.CellPadding%2A>, <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A>, <xref:System.Web.UI.WebControls.FormView.GridLines%2A>, <xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A> и <xref:System.Web.UI.WebControls.Style.Font%2A> свойства.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBubbleEvent : obj * EventArgs -&gt; bool" Usage="formView.OnBubbleEvent (source, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">Источник события.</param>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Обрабатывает событие, переданное через иерархию элементов управления.</summary>
        <returns>
          <see langword="true" /> указывает, что событие следует передавать дальше по иерархии элементов управления; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=nameWithType> Метод используется элементом управления для обработки событий, передаваемых по иерархии элементов управления, при необходимости <xref:System.Web.UI.Control.RaiseBubbleEvent%2A> метод. Определяет, следует ли обрабатывать событие путем проверки свойств <xref:System.EventArgs> объектов, содержащихся в `e` параметра. Если событие нужно обработать, метод выполняет соответствующее действие. Другие события пропускаются и передаются вверх по иерархии элементов управления. Этот метод указывает, следует ли передавать событие дальше вверх по иерархии элементов управления с помощью возвращаемого значения.  
  
 <xref:System.Web.UI.WebControls.FormView> Управления переопределяет базовую реализацию этого метода для нужное действие при нажатии кнопки, который распознается элементом управления. В следующей таблице перечислены команды кнопками, <xref:System.Web.UI.WebControls.FormView> распознается элементом управления.  
  
|Кнопка|Значение CommandName|Описание:|  
|------------|-----------------------|-----------------|  
|Отмена|«Отмена»|Используется в операциях обновления или вставки для отмены операции и отказаться от значений, введенных пользователем. <xref:System.Web.UI.WebControls.FormView> Управления затем возвращается на режим, заданные <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> свойство.|  
|Удаление|"Удалить"|Используется в операциях удаления для удаления записи из источника данных. Вызывает <xref:System.Web.UI.WebControls.FormView.ItemDeleting> и <xref:System.Web.UI.WebControls.FormView.ItemDeleted> события.|  
|Правка|«Edit»|Используется в операциях обновления для размещения <xref:System.Web.UI.WebControls.FormView> элемента управления в режиме редактирования. Содержимое, определенное в <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> свойство отображается для строки данных.|  
|Insert|«Вставка»|Используется в операциях вставки для попытки вставить новую запись в источнике данных значениями, предоставленными пользователем. Вызывает <xref:System.Web.UI.WebControls.FormView.ItemInserting> и <xref:System.Web.UI.WebControls.FormView.ItemInserted> события.|  
|Новый|«New»|Используется в операциях вставки, чтобы поместить <xref:System.Web.UI.WebControls.FormView> элемента управления в режиме вставки. Содержимое, определенное в <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> свойство отображается для строки данных.|  
|Страница|«Страница»|Используется в операции разбиения на страницы для представления кнопки в страничного навигатора, которая выполняет разбиение по страницам. Чтобы указать операцию разбиения на страницы, задайте `CommandArgument` свойство кнопки «Далее», «Назад», "First", «Последнее» или индекс страницы, к которой следует перейти. Вызывает <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> и <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> события. **Примечание:** этот тип кнопки обычно используется только в шаблоне страничного навигатора.|  
|Обновление|«Обновления»|Используется в операциях обновления для обновления текущей записи в источнике данных с помощью значений, предоставленных пользователем. Вызывает <xref:System.Web.UI.WebControls.FormView.ItemUpdating> и <xref:System.Web.UI.WebControls.FormView.ItemUpdated> события.|  
  
 Данная версия метода возвращает `true` при обработке одной из этих кнопок. Дополнительные сведения о восходящей см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При расширении <see cref="T:System.Web.UI.WebControls.FormView" /> класса, можно переопределить этот метод для обработки собственных событий. Не забудьте указать, должны быть переданы событие дальше вверх по иерархии элементов управления с помощью возвращаемого значения.</para>
        </block>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="formView.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Web.UI.Control.Init" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnInit%2A> Метод вызывается методом <xref:System.Web.UI.WebControls.FormView> управления порождать <xref:System.Web.UI.Control.Init> событий. Обычно используется разработчиками элементов управления при расширении <xref:System.Web.UI.WebControls.FormView> класса.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Web.UI.WebControls.FormView.OnInit%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
        <altmember cref="E:System.Web.UI.Control.Init" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCommand (System.Web.UI.WebControls.FormViewCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCommand(class System.Web.UI.WebControls.FormViewCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCommand (e As FormViewCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCommand(System::Web::UI::WebControls::FormViewCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCommand : System.Web.UI.WebControls.FormViewCommandEventArgs -&gt; unit&#xA;override this.OnItemCommand : System.Web.UI.WebControls.FormViewCommandEventArgs -&gt; unit" Usage="formView.OnItemCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.FormViewCommandEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Web.UI.WebControls.FormView.ItemCommand" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnItemCommand%2A> Метод вызывается методом <xref:System.Web.UI.WebControls.FormView> управления порождать <xref:System.Web.UI.WebControls.FormView.ItemCommand> событий. Обычно используется разработчиками элементов управления при расширении <xref:System.Web.UI.WebControls.FormView> класса.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Web.UI.WebControls.FormView.OnItemCommand%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCommand" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCreated : EventArgs -&gt; unit&#xA;override this.OnItemCreated : EventArgs -&gt; unit" Usage="formView.OnItemCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnItemCreated%2A> Метод вызывается методом <xref:System.Web.UI.WebControls.FormView> управления порождать <xref:System.Web.UI.WebControls.FormView.ItemCreated> событий. Обычно используется разработчиками элементов управления при расширении <xref:System.Web.UI.WebControls.FormView> класса.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Web.UI.WebControls.FormView.OnItemCreated%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleted (System.Web.UI.WebControls.FormViewDeletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDeleted(class System.Web.UI.WebControls.FormViewDeletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDeleted (e As FormViewDeletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDeleted(System::Web::UI::WebControls::FormViewDeletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemDeleted : System.Web.UI.WebControls.FormViewDeletedEventArgs -&gt; unit&#xA;override this.OnItemDeleted : System.Web.UI.WebControls.FormViewDeletedEventArgs -&gt; unit" Usage="formView.OnItemDeleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewDeletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.FormViewDeletedEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnItemDeleted%2A> Метод вызывается методом <xref:System.Web.UI.WebControls.FormView> управления порождать <xref:System.Web.UI.WebControls.FormView.ItemDeleted> событий. Обычно используется разработчиками элементов управления при расширении <xref:System.Web.UI.WebControls.FormView> класса.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Web.UI.WebControls.FormView.OnItemDeleted%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleting (System.Web.UI.WebControls.FormViewDeleteEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDeleting(class System.Web.UI.WebControls.FormViewDeleteEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDeleting (e As FormViewDeleteEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDeleting(System::Web::UI::WebControls::FormViewDeleteEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemDeleting : System.Web.UI.WebControls.FormViewDeleteEventArgs -&gt; unit&#xA;override this.OnItemDeleting : System.Web.UI.WebControls.FormViewDeleteEventArgs -&gt; unit" Usage="formView.OnItemDeleting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewDeleteEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.FormViewDeleteEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnItemDeleting%2A> Метод вызывается методом <xref:System.Web.UI.WebControls.FormView> управления порождать <xref:System.Web.UI.WebControls.FormView.ItemDeleting> событий. Обычно используется разработчиками элементов управления при расширении <xref:System.Web.UI.WebControls.FormView> класса.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Web.UI.WebControls.FormView.OnItemDeleting%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Этот метод вызывается, когда элемент управления <see cref="T:System.Web.UI.WebControls.FormView" /> не привязан к элементу управления источником данных, операция удаления не отменена пользователем, а обработчик для события не зарегистрирован.</exception>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeleteEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemInserted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserted (System.Web.UI.WebControls.FormViewInsertedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemInserted(class System.Web.UI.WebControls.FormViewInsertedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemInserted (e As FormViewInsertedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemInserted(System::Web::UI::WebControls::FormViewInsertedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemInserted : System.Web.UI.WebControls.FormViewInsertedEventArgs -&gt; unit&#xA;override this.OnItemInserted : System.Web.UI.WebControls.FormViewInsertedEventArgs -&gt; unit" Usage="formView.OnItemInserted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewInsertedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnItemInserted%2A> Метод вызывается методом <xref:System.Web.UI.WebControls.FormView> управления порождать <xref:System.Web.UI.WebControls.FormView.ItemInserted> событий. Обычно используется разработчиками элементов управления при расширении <xref:System.Web.UI.WebControls.FormView> класса.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Web.UI.WebControls.FormView.OnItemInserted%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemInserting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserting (System.Web.UI.WebControls.FormViewInsertEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemInserting(class System.Web.UI.WebControls.FormViewInsertEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemInserting (e As FormViewInsertEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemInserting(System::Web::UI::WebControls::FormViewInsertEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemInserting : System.Web.UI.WebControls.FormViewInsertEventArgs -&gt; unit&#xA;override this.OnItemInserting : System.Web.UI.WebControls.FormViewInsertEventArgs -&gt; unit" Usage="formView.OnItemInserting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewInsertEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.FormViewInsertEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnItemInserting%2A> Метод вызывается методом <xref:System.Web.UI.WebControls.FormView> управления порождать <xref:System.Web.UI.WebControls.FormView.ItemInserting> событий. Обычно используется разработчиками элементов управления при расширении <xref:System.Web.UI.WebControls.FormView> класса.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Web.UI.WebControls.FormView.OnItemInserting%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Этот метод вызывается, когда элемент управления <see cref="T:System.Web.UI.WebControls.FormView" /> не привязан к элементу управления источником данных, операция вставки не отменена пользователем, а обработчик для события не зарегистрирован.</exception>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdated (System.Web.UI.WebControls.FormViewUpdatedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemUpdated(class System.Web.UI.WebControls.FormViewUpdatedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemUpdated (e As FormViewUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemUpdated(System::Web::UI::WebControls::FormViewUpdatedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemUpdated : System.Web.UI.WebControls.FormViewUpdatedEventArgs -&gt; unit&#xA;override this.OnItemUpdated : System.Web.UI.WebControls.FormViewUpdatedEventArgs -&gt; unit" Usage="formView.OnItemUpdated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnItemUpdated%2A> Метод вызывается методом <xref:System.Web.UI.WebControls.FormView> управления порождать <xref:System.Web.UI.WebControls.FormView.ItemUpdated> событий. Обычно используется разработчиками элементов управления при расширении <xref:System.Web.UI.WebControls.FormView> класса.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Web.UI.WebControls.FormView.OnItemUpdated%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdating (System.Web.UI.WebControls.FormViewUpdateEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemUpdating(class System.Web.UI.WebControls.FormViewUpdateEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemUpdating (e As FormViewUpdateEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemUpdating(System::Web::UI::WebControls::FormViewUpdateEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemUpdating : System.Web.UI.WebControls.FormViewUpdateEventArgs -&gt; unit&#xA;override this.OnItemUpdating : System.Web.UI.WebControls.FormViewUpdateEventArgs -&gt; unit" Usage="formView.OnItemUpdating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewUpdateEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnItemUpdating%2A> Метод вызывается методом <xref:System.Web.UI.WebControls.FormView> управления порождать <xref:System.Web.UI.WebControls.FormView.ItemUpdating> событий. Обычно используется разработчиками элементов управления при расширении <xref:System.Web.UI.WebControls.FormView> класса.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Web.UI.WebControls.FormView.OnItemUpdating%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Этот метод вызывается, когда элемент управления <see cref="T:System.Web.UI.WebControls.FormView" /> не привязан к элементу управления источником данных, операция обновления не отменена пользователем, а обработчик для события не зарегистрирован.</exception>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnModeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnModeChanged : EventArgs -&gt; unit&#xA;override this.OnModeChanged : EventArgs -&gt; unit" Usage="formView.OnModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnModeChanged%2A> Метод вызывается методом <xref:System.Web.UI.WebControls.FormView> управления порождать <xref:System.Web.UI.WebControls.FormView.ModeChanged> событий. Обычно используется разработчиками элементов управления при расширении <xref:System.Web.UI.WebControls.FormView> класса.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Web.UI.WebControls.FormView.OnModeChanged%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnModeChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnModeChanging (System.Web.UI.WebControls.FormViewModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModeChanging(class System.Web.UI.WebControls.FormViewModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModeChanging (e As FormViewModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModeChanging(System::Web::UI::WebControls::FormViewModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnModeChanging : System.Web.UI.WebControls.FormViewModeEventArgs -&gt; unit&#xA;override this.OnModeChanging : System.Web.UI.WebControls.FormViewModeEventArgs -&gt; unit" Usage="formView.OnModeChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.FormViewModeEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnModeChanging%2A> Метод вызывается методом <xref:System.Web.UI.WebControls.FormView> управления порождать <xref:System.Web.UI.WebControls.FormView.ModeChanging> событий. Обычно используется разработчиками элементов управления при расширении <xref:System.Web.UI.WebControls.FormView> класса.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Web.UI.WebControls.FormView.OnModeChanging%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Этот метод вызывается, когда элемент управления <see cref="T:System.Web.UI.WebControls.FormView" /> не привязан к элементу управления источником данных, изменение режима не было отменено, а обработчик для события не зарегистрирован.</exception>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewModeEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPageIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPageIndexChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPageIndexChanged : EventArgs -&gt; unit&#xA;override this.OnPageIndexChanged : EventArgs -&gt; unit" Usage="formView.OnPageIndexChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanged%2A> Метод вызывается методом <xref:System.Web.UI.WebControls.FormView> управления порождать <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> событий. Обычно используется разработчиками элементов управления при расширении <xref:System.Web.UI.WebControls.FormView> класса.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanged%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanging (System.Web.UI.WebControls.FormViewPageEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanging(class System.Web.UI.WebControls.FormViewPageEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPageIndexChanging (e As FormViewPageEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPageIndexChanging(System::Web::UI::WebControls::FormViewPageEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPageIndexChanging : System.Web.UI.WebControls.FormViewPageEventArgs -&gt; unit&#xA;override this.OnPageIndexChanging : System.Web.UI.WebControls.FormViewPageEventArgs -&gt; unit" Usage="formView.OnPageIndexChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewPageEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.FormViewPageEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanging%2A> Метод вызывается методом <xref:System.Web.UI.WebControls.FormView> управления порождать <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> событий. Обычно используется разработчиками элементов управления при расширении <xref:System.Web.UI.WebControls.FormView> класса.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanging%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Этот метод вызывается, когда элемент управления <see cref="T:System.Web.UI.WebControls.FormView" /> не привязан к элементу управления источником данных, операция разбиения по страницам не была отменена, а обработчик для события не зарегистрирован.</exception>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewPageEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="PageCount">
      <MemberSignature Language="C#" Value="public virtual int PageCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PageCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PageCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PageCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PageCount : int" Usage="System.Web.UI.WebControls.FormView.PageCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает общее число страниц, необходимых для отображения каждой записи в источнике данных.</summary>
        <value>Число элементов в базовом источнике данных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если включена функция разбиения по страницам (при <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> свойству `true`), используйте <xref:System.Web.UI.WebControls.FormView.PageCount%2A> свойство, чтобы определить общее число записей в источнике данных.  
  
> [!NOTE]
>  Поскольку <xref:System.Web.UI.WebControls.FormView> управления отображается по одной записи за раз, это значение соответствует общее количество страниц, необходимое для отображения всех записей в источнике данных. Это значение не является точным до, после привязки данных.  
  
 Чтобы определить индекс текущей записи из базового источника данных, используйте <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> свойство.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.PageCount%2A> свойства, чтобы определить общее число записей, отображаемых в элементе управления.  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PageIndex">
      <MemberSignature Language="C#" Value="public virtual int PageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PageIndex : int with get, set" Usage="System.Web.UI.WebControls.FormView.PageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает индекс отображаемой страницы.</summary>
        <value>Отсчитываемый от нуля индекс элемента данных, отображаемого в элементе управления <see cref="T:System.Web.UI.WebControls.FormView" /> и содержащегося в базовом источнике данных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда включена функция разбиения по страницам (при <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> свойству `true`), используйте <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> свойство, чтобы определить индекс текущей записи. Это свойство может использоваться для программного изменения текущей записи.  
  
> [!NOTE]
>  Если включена функция разбиения по страницам, это свойство можно использовать для определения номера страницы записи, отображаемой; Однако следует помнить, что это свойство является отсчитываемый от нуля.  
  
 Чтобы определить общее число элементов в источнике данных, используйте <xref:System.Web.UI.WebControls.FormView.PageCount%2A> свойство.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> свойство для определения индекса страницы текущей записи.  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Выбранное значение меньше -1.</exception>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PageIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PageIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PageIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PageIndexChanged;" />
      <MemberSignature Language="F#" Value="member this.PageIndexChanged : EventHandler " Usage="member this.PageIndexChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит, если значение свойства <see cref="P:System.Web.UI.WebControls.FormView.PageIndex" /> изменяется после выполнения операции разбиения по страницам.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> Управления вызывает <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> событие, когда пейджер кнопки (кнопки с его `CommandName` свойством, имеющим значение «Страница») в элементе управления выбран, но после <xref:System.Web.UI.WebControls.FormView> элемент управления обрабатывает операцию разбиения. Это позволяет создать метод обработки событий, выполняющий пользовательские действия, когда происходит данное событие.  
  
> [!NOTE]
>  Это событие не происходит при программно задать <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> свойства.  
  
 В строке страничного навигатора обычно расположены кнопки страничного навигатора <xref:System.Web.UI.WebControls.FormView> элемента управления. Это событие часто используется для синхронизации <xref:System.Web.UI.WebControls.FormView> управления <xref:System.Web.UI.WebControls.GridView> управления или задать поведение <xref:System.Web.UI.WebControls.FormView> управления после операции разбиения на страницы.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.PageIndexChanged> событий для возврата <xref:System.Web.UI.WebControls.FormView> в режиме только для чтения, когда пользователь переходит к другой записи.  
  
 [!code-aspx-csharp[FormViewPageIndexChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPageIndexChanged/CS/formviewpageindexchangedcs.aspx#1)]
 [!code-aspx-vb[FormViewPageIndexChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPageIndexChanged/VB/formviewpageindexchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewPageEventHandler PageIndexChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewPageEventHandler PageIndexChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PageIndexChanging As FormViewPageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewPageEventHandler ^ PageIndexChanging;" />
      <MemberSignature Language="F#" Value="member this.PageIndexChanging : System.Web.UI.WebControls.FormViewPageEventHandler " Usage="member this.PageIndexChanging : System.Web.UI.WebControls.FormViewPageEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewPageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит, если значение свойства <see cref="P:System.Web.UI.WebControls.FormView.PageIndex" /> изменяется перед выполнением операции разбиения по страницам.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> Управления вызывает <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> событие, когда кнопки страничного навигатора (кнопка с его `CommandName` , имеющим значение «Страница») в элементе управления выбран, но перед <xref:System.Web.UI.WebControls.FormView> управления обработает операцию разбиения на страницы. Это позволяет создать метод обработки событий, выполняющий пользовательскую процедуру, как отмена операции разбиения на страницы, когда происходит данное событие.  
  
> [!NOTE]
>  Это событие не происходит при программно задать <xref:System.Web.UI.WebControls.FormView.PageIndex%2A> свойства.  
  
 В строке страничного навигатора обычно расположены кнопки страничного навигатора <xref:System.Web.UI.WebControls.FormView> элемента управления.  
  
 Объект <xref:System.Web.UI.WebControls.FormViewPageEventArgs> объект передается в метод обработки событий, который позволяет определить индекс страницы, выбранные пользователем и указать, что должна быть отменена операция разбиения по страницам. Чтобы определить индекс страницы, выбранные пользователем, используйте <xref:System.Web.UI.WebControls.FormViewPageEventArgs.NewPageIndex%2A> свойство. Чтобы отменить операцию разбиения на страницы, задайте <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> свойство <xref:System.Web.UI.WebControls.FormViewPageEventArgs> объект `true`.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 В следующем примере показано, как использовать <xref:System.Web.UI.WebControls.FormView.PageIndexChanging> событий для отмены операции разбиения на страницы.  
  
> [!IMPORTANT]
>  В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormViewPageEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPageEventArgs/CS/formviewmodeeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewPageEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPageEventArgs/VB/formviewmodeeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewPageEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewPageEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewPageEventArgs.NewPageIndex" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PagerSettings">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.PagerSettings PagerSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.PagerSettings PagerSettings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PagerSettings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PagerSettings As PagerSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::PagerSettings ^ PagerSettings { System::Web::UI::WebControls::PagerSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PagerSettings : System.Web.UI.WebControls.PagerSettings" Usage="System.Web.UI.WebControls.FormView.PagerSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.PagerSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает ссылку на объект <see cref="T:System.Web.UI.WebControls.PagerSettings" />, позволяющий задать свойства кнопок страничного навигатора в элементе управления <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Ссылка на объект <see cref="T:System.Web.UI.WebControls.PagerSettings" />, позволяющий задать свойства кнопок страничного навигатора в элементе управления <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> свойства для управления параметрами строки страничного навигатора в <xref:System.Web.UI.WebControls.FormView> элемента управления. Строку страничного навигатора отображается в том случае, если включена функция разбиения на страницы (когда <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> свойству `true`) и содержит элементы управления, которые позволяют пользователю переходить к другим записям в элементе управления. Это свойство доступно только для чтения; Тем не менее, можно задать свойства <xref:System.Web.UI.WebControls.PagerSettings> объекта, он возвращает. Свойства может быть задано как декларативно в форме `Property-Subproperty`, где `Subproperty` — это свойство <xref:System.Web.UI.WebControls.PagerSettings> объекта (например, `PagerSettings-Mode`). Свойства также могут быть заданы программно в виде `Property.Subproperty` (например, `PagerSettings.Mode`). Общие параметры обычно включают режим отображения строки страничного навигатора и пользовательский текст или изображения для элементов управления навигацией.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> свойство для указания свойств строку страничного навигатора.  
  
 [!code-aspx-csharp[FormViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewAllowPaging/CS/formviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[FormViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewAllowPaging/VB/formviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PagerStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle PagerStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle PagerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PagerStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PagerStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ PagerStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PagerStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.PagerStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает ссылку на объект <see cref="T:System.Web.UI.WebControls.TableItemStyle" />, позволяющий задать внешний вид строки страничного навигатора в элементе управления <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Ссылка на <see cref="T:System.Web.UI.WebControls.TableItemStyle" />, представляющий стиль строки страницы в элементе управления <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> свойства для управления внешним видом строку страничного навигатора в <xref:System.Web.UI.WebControls.FormView> элемента управления. Строку страничного навигатора отображается в том случае, если включена функция разбиения на страницы (когда <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> свойству `true`) и содержит элементы управления, которые позволяют пользователю переходить по страницам в элементе управления. Это свойство доступно только для чтения; Тем не менее, можно задать свойства <xref:System.Web.UI.WebControls.TableItemStyle> объекта, он возвращает. Свойства можно задать декларативно с помощью одного из следующих методов:  
  
-   Добавить атрибут в открывающем теге элемента <xref:System.Web.UI.WebControls.FormView> элемента управления в форме `Property-Subproperty`, где `Subproperty` — это свойство <xref:System.Web.UI.WebControls.TableItemStyle> объекта (например, `PagerStyle-ForeColor`).  
  
-   Вложенные `<PagerRowStyle>` элемент между открывающим и закрывающим тегами элемента <xref:System.Web.UI.WebControls.FormView> элемента управления.  
  
 Свойства также могут быть заданы программно в виде `Property.Subproperty` (например, `PagerStyle.ForeColor`). Типичными параметрами являются пользовательский цвет фона, цвет переднего плана и свойства шрифта.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> свойство, чтобы указать параметры стиля строки страничного навигатора.  
  
 [!code-aspx-csharp[FormViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewAllowPaging/CS/formviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[FormViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewAllowPaging/VB/formviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PagerTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate PagerTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate PagerTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PagerTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ PagerTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PagerTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.PagerTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает содержимое для строки страницы элемента управления <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" />, содержащий настраиваемое содержимое для строки страницы. По умолчанию свойство имеет значение NULL, показывающее, что значение свойства не задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Строку страничного навигатора отображается в <xref:System.Web.UI.WebControls.FormView> управления, когда включена функция разбиения по страницам (при <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> задано значение true). Строку страничного навигатора содержит элементы управления, которые позволяют пользователю переходить по страницам в элементе управления. Вместо использования встроенных строки пользовательский интерфейс (UI), можно определить собственный пользовательский Интерфейс, с помощью <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A> свойство.  
  
> [!NOTE]
>  Когда <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A> свойству оно переопределяет строку страничного навигатора встроенного пользовательского интерфейса.  
  
 Чтобы задать пользовательский шаблон для строки страничного навигатора, поместите `<PagerTemplate>` теги между открывающим и закрывающим тегами элемента <xref:System.Web.UI.WebControls.FormView> элемента управления. После этого можно перечислить содержимое шаблона между открывающим и закрывающим `<PagerTemplate>` тегов. Для управления внешним видом строку страничного навигатора, используйте <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> свойство.  
  
 Как правило элементы управления кнопки добавляются в шаблон страничного навигатора для выполнения операции разбиения на страницы. <xref:System.Web.UI.WebControls.FormView> Управления выполняет операцию разбиения на страницы при нажатии кнопки с его `CommandName` нажатии свойством, имеющим значение «Страница». Кнопки `CommandArgument` свойство определяет тип выполняемой операции разбиения на страницы. В следующей таблице перечислены значения аргументов команды, поддерживаемые <xref:System.Web.UI.WebControls.FormView> элемента управления.  
  
|Значение CommandArgument|Описание:|  
|---------------------------|-----------------|  
|«Далее»|Переходит к следующей странице.|  
|«Назад»|Переход на предыдущую страницу.|  
|«Первый»|Переходит к первой странице.|  
|«Последнее»|Переход к последней странице.|  
|Целочисленное значение|Переход на страницу с указанным номером.|  
  
   
  
## Examples  
 Ниже приведен пример, как определить шаблон страничного навигатора.  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal override void PerformDataBinding (System.Collections.IEnumerable data);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding(class System.Collections.IEnumerable data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.PerformDataBinding(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PerformDataBinding (data As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PerformDataBinding(System::Collections::IEnumerable ^ data);" />
      <MemberSignature Language="F#" Value="override this.PerformDataBinding : System.Collections.IEnumerable -&gt; unit" Usage="formView.PerformDataBinding data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="data">Объект <see cref="T:System.Collections.IEnumerable" />, представляющий источник данных.</param>
        <summary>Привязывает указанный источник данных к элементу управления <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.PerformDataBinding%2A> Метод — это вспомогательный метод, который вызывается методом <xref:System.Web.UI.WebControls.FormView> управления для связывания указанный источник данных к элементу управления.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Поскольку <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> метод запечатан, должны переопределить этот метод, если необходимо выполнить дополнительные задачи, при привязке данных.</para>
        </block>
        <altmember cref="T:System.Collections.IEnumerable" />
      </Docs>
    </Member>
    <Member MemberName="PrepareControlHierarchy">
      <MemberSignature Language="C#" Value="protected internal virtual void PrepareControlHierarchy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void PrepareControlHierarchy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.PrepareControlHierarchy" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub PrepareControlHierarchy ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void PrepareControlHierarchy();" />
      <MemberSignature Language="F#" Value="abstract member PrepareControlHierarchy : unit -&gt; unit&#xA;override this.PrepareControlHierarchy : unit -&gt; unit" Usage="formView.PrepareControlHierarchy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Настраивает иерархию элементов управления для элемента управления <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.PrepareControlHierarchy%2A> Метод — это вспомогательный метод, который вызывается методом <xref:System.Web.UI.WebControls.FormView> элемент управления для настройки иерархии элементов управления в <xref:System.Web.UI.WebControls.FormView> управления перед отображением элемента управления.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="formView.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Аргумент события, из которого следует создать <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> для генерируемого или генерируемых событий.</param>
        <summary>Генерирует соответствующее событие для элемента управления <see cref="T:System.Web.UI.WebControls.FormView" />, когда он выполняет обратную передачу серверу.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Страница вызывает <xref:System.Web.UI.WebControls.FormView.RaisePostBackEvent%2A> метод при возникновении события обратной передачи, который вызывает события, предназначенные для <xref:System.Web.UI.WebControls.FormView> элемента управления. Этот вызов происходит в жизненном цикле страницы после уведомления о загрузке и изменении, но до подготовки к отображению. Этот метод используется для создания <xref:System.Web.UI.WebControls.CommandEventArgs> объекта для события, которые вызываются.  
  
> [!NOTE]
>  Этот метод используется преимущественно разработчиками элементов управления для расширения <xref:System.Web.UI.WebControls.FormView> элемента управления.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="M:System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="formView.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Объект <see cref="T:System.Web.UI.HtmlTextWriter" />, содержащий выходной поток, который необходимо вывести на стороне клиента.</param>
        <summary>Отображает элемент управления <see cref="T:System.Web.UI.WebControls.FormView" /> на клиентском компьютере.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.Render%2A> Метод используется для отрисовки содержимого серверного элемента управления для клиентского браузера, используя указанный <xref:System.Web.UI.HtmlTextWriter> объекта.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderOuterTable">
      <MemberSignature Language="C#" Value="public virtual bool RenderOuterTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RenderOuterTable" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.RenderOuterTable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RenderOuterTable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RenderOuterTable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RenderOuterTable : bool with get, set" Usage="System.Web.UI.WebControls.FormView.RenderOuterTable" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IRenderOuterTableControl.RenderOuterTable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, определяющее, заключает ли элемент управления отображаемый HTML-код в элемент <see langword="table" /> для применения встроенных стилей.</summary>
        <value>Значение <see langword="true" />, если элемент управления включает отображаемый HTML-код в элемент <see langword="table" />; в противном случае — значение <see langword="false" />. Значение по умолчанию: <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы сделать свойства встроенного стиля, такие как <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> применить в формат HTML, который отображается для элемента управления, отображаемого HTML-кода в ограничивающий ASP.NET `table` элемента. Если вы не хотите внешнего `table` элемент должен быть подготовлен к просмотру, присвойте этому свойству значение `false`. В этом случае при попытке установить свойства встроенного стиля, применяемые для элемента управления целиком исключение.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Row">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow Row { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow Row" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.Row" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Row As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ Row { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Row : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.Row" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Web.UI.WebControls.FormViewRow" />, представляющий строку данных в элементе управления <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.FormViewRow" />, представляющий строку данных в элементе управления <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.FormView.Row%2A> программный доступ к свойству <xref:System.Web.UI.WebControls.FormViewRow> , представляющий строку данных. Строка данных содержит различное содержимое, на основе шаблона, подготовленном к просмотру в текущем режиме (заданные <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> свойство). Доступны только содержимое шаблона для текущего режима. В следующей таблице показаны шаблон, который используется для каждого режима.  
  
|Режим|Выводимый шаблон|  
|----------|-----------------------|  
|Правка|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|Insert|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|Только чтение|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.Row%2A> , Это свойство доступно только после <xref:System.Web.UI.WebControls.FormView> управления создает строку данных в <xref:System.Web.UI.WebControls.FormView.ItemCreated> событий.  
  
 Это свойство обычно используется, когда необходимо программно управлять строкой данных, например при добавлении пользовательского содержимого. Любые изменения <xref:System.Web.UI.WebControls.FormView.Row%2A> свойства должны быть выполнены после <xref:System.Web.UI.WebControls.FormView> элемент был с привязкой к данным; в противном случае — <xref:System.Web.UI.WebControls.FormView> управления перезаписывает любые изменения.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.Row%2A> свойство для доступа к свойствам строки данных во время <xref:System.Web.UI.WebControls.FormView.ItemCreated> событий.  
  
 [!code-aspx-csharp[FormViewRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewRow/CS/formviewrowcs.aspx#1)]
 [!code-aspx-vb[FormViewRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewRow/VB/formviewrowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
      </Docs>
    </Member>
    <Member MemberName="RowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle RowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle RowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.RowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ RowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.RowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает ссылку на объект <see cref="T:System.Web.UI.WebControls.TableItemStyle" />, позволяющий задать внешний вид строки данных в элементе управления <see cref="T:System.Web.UI.WebControls.FormView" /> во время пребывания элемента управления в режиме доступа только для чтения.</summary>
        <value>Ссылка на объект <see cref="T:System.Web.UI.WebControls.TableItemStyle" />, представляющий стиль строки данных в элементе управления <see cref="T:System.Web.UI.WebControls.FormView" /> во время пребывания элемента управления в режиме доступа только для чтения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.FormView.RowStyle%2A> свойства для управления внешним видом данных строки, если <xref:System.Web.UI.WebControls.FormView> управления находится в режиме только для чтения (отображение). Когда <xref:System.Web.UI.WebControls.FormView> элемент управления находится в режиме только для чтения, определяемое пользователем содержимое, определяемое отображает строки данных <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> свойство. Это свойство доступно только для чтения; Тем не менее, можно задать свойства <xref:System.Web.UI.WebControls.TableItemStyle> объекта, он возвращает. Свойства можно задать декларативно с помощью одного из следующих методов:  
  
-   Добавить атрибут в открывающем теге элемента <xref:System.Web.UI.WebControls.FormView> элемента управления в форме `Property-Subproperty`, где `Subproperty` — это свойство <xref:System.Web.UI.WebControls.TableItemStyle> объекта (например, `RowStyle-ForeColor`).  
  
-   Вложенные `<RowStyle>` элемент между открывающим и закрывающим тегами элемента <xref:System.Web.UI.WebControls.FormView> элемента управления.  
  
 Свойства также могут быть заданы программно в виде `Property.Subproperty` (например, `RowStyle.ForeColor`). Типичными параметрами являются пользовательский цвет фона, цвет переднего плана и свойства шрифта.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.RowStyle%2A> свойство, чтобы указать пользовательский стиль для данных строки, если <xref:System.Web.UI.WebControls.FormView> элемент управления находится в режиме только для чтения.  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="formView.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Сохраняет состояние свойств элемента управления <see cref="T:System.Web.UI.WebControls.FormView" />, которые следует сохранять, даже если свойство <see cref="P:System.Web.UI.Control.EnableViewState" /> имеет значение <see langword="false" />.</summary>
        <returns>Возвращает текущее состояние просмотра серверного элемента управления. Если нет состояния просмотра, связанного с этим элементом управления, этот метод возвращает <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод используется для сохранения состояния <xref:System.Web.UI.WebControls.FormView> свойства элемента управления, которые необходимо сохранить, даже если <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=nameWithType> свойству `false`.  
  
> [!NOTE]
>  Этот метод используется преимущественно разработчиками элементов управления для расширения <xref:System.Web.UI.WebControls.FormView> элемента управления.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="formView.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Сохраняет текущее состояние представления элемента управления <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <returns>Объект <see cref="T:System.Object" />, содержащий сохраненное состояние элемента управления <see cref="T:System.Web.UI.WebControls.FormView" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.SaveViewState%2A> Метод — это вспомогательный метод, который вызывается методом <xref:System.Web.UI.WebControls.FormView> элемента управления для сохранения состояния элемента управления.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public object SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectedValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedValue : obj" Usage="System.Web.UI.WebControls.FormView.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение ключа данных текущей записи в элементе управления <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Значение ключа данных текущей записи в элементе управления <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> свойство задано, <xref:System.Web.UI.WebControls.FormView> управления автоматически создает <xref:System.Web.UI.WebControls.DataKey> объект, содержащий пары "ключ значение" поля или полей, перечисленных в <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> свойство для текущей записи. <xref:System.Web.UI.WebControls.DataKey> Представляет поле первичного ключа или поля для текущей записи и хранится в <xref:System.Web.UI.WebControls.FormView.DataKey%2A> свойство. Вместо использования <xref:System.Web.UI.WebControls.FormView.DataKey%2A> свойство для доступа к значению ключа данных, можно использовать <xref:System.Web.UI.WebControls.FormView.SelectedValue%2A> свойство в качестве ярлыка.  
  
> [!NOTE]
>  Когда <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> списки свойств нескольких полей, это свойство возвращает значение первого поля в списке.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.SelectedValue%2A> свойство для определения значения ключевого поля.  
  
 [!code-aspx-csharp[FormViewSelectedValue#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewSelectedValue/CS/formviewselectedvaluecs.aspx#1)]
 [!code-aspx-vb[FormViewSelectedValue#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewSelectedValue/VB/formviewselectedvaluevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
      </Docs>
    </Member>
    <Member MemberName="SetPageIndex">
      <MemberSignature Language="C#" Value="public void SetPageIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPageIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.SetPageIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPageIndex (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPageIndex(int index);" />
      <MemberSignature Language="F#" Value="member this.SetPageIndex : int -&gt; unit" Usage="formView.SetPageIndex index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Индекс для задания.</param>
        <summary>Задает индекс текущей отображаемой страницы в элементе управления <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataItemContainer.DataItemIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.IDataItemContainer.DataItemIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.IDataItemContainer.DataItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DataItemIndex" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataItemIndex As Integer Implements IDataItemContainer.DataItemIndex" />
      <MemberSignature Language="C++ CLI" Value="property int System.Web.UI.IDataItemContainer.DataItemIndex { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.FormView.System.Web.UI.IDataItemContainer.DataItemIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DataItemIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Описание этого члена см. в разделе <see cref="P:System.Web.UI.IDataItemContainer.DataItemIndex" />.</summary>
        <value>Объект, представляющий отображаемый индекс.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Web.UI.WebControls.FormView> приведен к типу интерфейса <xref:System.Web.UI.IDataItemContainer>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataItemContainer" />
        <altmember cref="P:System.Web.UI.IDataItemContainer.DataItemIndex" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataItemContainer.DisplayIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.IDataItemContainer.DisplayIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.IDataItemContainer.DisplayIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DisplayIndex" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DisplayIndex As Integer Implements IDataItemContainer.DisplayIndex" />
      <MemberSignature Language="C++ CLI" Value="property int System.Web.UI.IDataItemContainer.DisplayIndex { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.FormView.System.Web.UI.IDataItemContainer.DisplayIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DisplayIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Описание этого члена см. в разделе <see cref="P:System.Web.UI.IDataItemContainer.DisplayIndex" />.</summary>
        <value>Всегда возвращает 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Web.UI.WebControls.FormView> приведен к типу интерфейса <xref:System.Web.UI.IDataItemContainer>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataItemContainer" />
        <altmember cref="P:System.Web.UI.IDataItemContainer.DisplayIndex" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">Аргумент события.</param>
        <summary>Вызывает событие для элемента управления <see cref="T:System.Web.UI.WebControls.FormView" />, когда он выполняет обратную передачу на сервер.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Страница вызывает <xref:System.Web.UI.WebControls.FormView.System%23Web%23UI%23IPostBackEventHandler%23RaisePostBackEvent%2A> метод при возникновении события обратной передачи. Этот вызов происходит в жизненном цикле страницы после уведомления о загрузке и изменении, но до отображения страницы.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataKeyNames">
      <MemberSignature Language="C#" Value="string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames" />
      <MemberSignature Language="VB.NET" Value=" Property DataKeyNames As String() Implements IDataBoundControl.DataKeyNames" />
      <MemberSignature Language="C++ CLI" Value="property cli::array &lt;System::String ^&gt; ^ System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataKeyNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает массив, содержащий имена полей первичных ключей для элементов, отображаемых в элементе управления <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Массив, содержащий имена полей первичных ключей для элементов, отображаемых в элементе управления <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Web.UI.WebControls.FormView> приведен к типу интерфейса <xref:System.Web.UI.WebControls.IDataBoundControl>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataMember">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataMember" />
      <MemberSignature Language="VB.NET" Value=" Property DataMember As String Implements IDataBoundControl.DataMember" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System.Web.UI.WebControls.IDataBoundControl.DataMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataMember" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataMember</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя списка элементов данных, к которому выполняется привязка элемента управления <see cref="T:System.Web.UI.WebControls.FormView" /> в случае наличия в источнике данных нескольких отдельных списков элементов данных.</summary>
        <value>Имя списка элементов данных, к которому привязан элемент управления <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Web.UI.WebControls.FormView> приведен к типу интерфейса <xref:System.Web.UI.WebControls.IDataBoundControl>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSource">
      <MemberSignature Language="C#" Value="object System.Web.UI.WebControls.IDataBoundControl.DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Web.UI.WebControls.IDataBoundControl.DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSource" />
      <MemberSignature Language="VB.NET" Value=" Property DataSource As Object Implements IDataBoundControl.DataSource" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Web.UI.WebControls.IDataBoundControl.DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataSource" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSource</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает объект, который содержит список данных, извлекаемых элементом управления <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Объект, который содержит список данных, извлекаемых элементом управления <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Web.UI.WebControls.FormView> приведен к типу интерфейса <xref:System.Web.UI.WebControls.IDataBoundControl>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceID">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataSourceID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID" />
      <MemberSignature Language="VB.NET" Value=" Property DataSourceID As String Implements IDataBoundControl.DataSourceID" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System.Web.UI.WebControls.IDataBoundControl.DataSourceID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSourceID</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает идентификатор элемента управления источником данных, который содержит список элементов данных, извлекаемых элементом управления <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Идентификатор элемента управления источником данных, который содержит список элементов данных, извлекаемых элементом управления <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Web.UI.WebControls.FormView> приведен к типу интерфейса <xref:System.Web.UI.WebControls.IDataBoundControl>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceObject">
      <MemberSignature Language="C#" Value="System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataSourceObject As IDataSource Implements IDataBoundControl.DataSourceObject" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::IDataSource ^ System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { System::Web::UI::IDataSource ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSourceObject</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IDataSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает объект источника данных, который содержит список элементов данных, извлекаемых элементом управления <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Объект источника данных, который содержит список элементов данных, извлекаемых элементом управления<see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Web.UI.WebControls.FormView> приведен к типу интерфейса <xref:System.Web.UI.WebControls.IDataBoundControl>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundItemControl.DataKey">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundItemControl.DataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundItemControl.DataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataKey As DataKey Implements IDataBoundItemControl.DataKey" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataKey ^ System.Web.UI.WebControls.IDataBoundItemControl.DataKey { System::Web::UI::WebControls::DataKey ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundItemControl.DataKey" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundItemControl.DataKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает объект, представляющий значение ключа данных для строки в элементе управления <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Объект, представляющий значение ключа данных для строки в элементе управления <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Web.UI.WebControls.FormView> приведен к типу интерфейса <xref:System.Web.UI.WebControls.IDataBoundControl>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundItemControl.Mode">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#Mode" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Mode As DataBoundControlMode Implements IDataBoundItemControl.Mode" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode { System::Web::UI::WebControls::DataBoundControlMode get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundItemControl.Mode" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundItemControl.Mode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataBoundControlMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает текущий режим элемента управления <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Текущий режим элемента управления <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Web.UI.WebControls.FormView> приведен к типу интерфейса <xref:System.Web.UI.WebControls.IDataBoundControl>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions">
      <MemberSignature Language="C#" Value="System.Web.UI.PostBackOptions IPostBackContainer.GetPostBackOptions (System.Web.UI.WebControls.IButtonControl buttonControl);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.PostBackOptions System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(class System.Web.UI.WebControls.IButtonControl buttonControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)" />
      <MemberSignature Language="VB.NET" Value="Function GetPostBackOptions (buttonControl As IButtonControl) As PostBackOptions Implements IPostBackContainer.GetPostBackOptions" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Web::UI::PostBackOptions ^ System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(System::Web::UI::WebControls::IButtonControl ^ buttonControl) = System::Web::UI::WebControls::IPostBackContainer::GetPostBackOptions;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PostBackOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buttonControl" Type="System.Web.UI.WebControls.IButtonControl" />
      </Parameters>
      <Docs>
        <param name="buttonControl">Элемент управления "Кнопка", передающий страницу обратно на сервер.</param>
        <summary>Определяет параметры события обратной передачи для элемента управления <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <returns>Параметры события обратной передачи для элемента управления <see cref="T:System.Web.UI.WebControls.FormView" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.System%23Web%23UI%23WebControls%23IPostBackContainer%23GetPostBackOptions%2A> — Вспомогательный метод, который вызывается <xref:System.Web.UI.WebControls.FormView> управления для создания <xref:System.Web.UI.PostBackOptions> объект, содержащий параметры события обратной передачи для элемента управления. <xref:System.Web.UI.PostBackOptions> Обычно используется в качестве параметра для <xref:System.Web.UI.Page.GetPostBackEventReference%2A> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Объект, содержащийся в параметре <paramref name="buttonControl" />, имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.InvalidOperationException">Свойство <see cref="P:System.Web.UI.WebControls.IButtonControl.CausesValidation" /> параметра <paramref name="buttonControl" /> равно <see langword="true" />.</exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.FormView.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение <see cref="T:System.Web.UI.HtmlTextWriterTag" /> для элемента управления <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Всегда возвращает значение <see langword="HtmlTextWriterTag.Table" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.TagKey%2A> Свойство позволяет в выходной поток для записи соответствующую разметку HTML для <xref:System.Web.UI.WebControls.FormView> элемента управления.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Можно переопределить это свойство, чтобы указать, какие <see cref="T:System.Web.UI.HtmlTextWriterTag" /> значение, используемое для элемента управления.</para>
        </block>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
      </Docs>
    </Member>
    <Member MemberName="TopPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow TopPagerRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow TopPagerRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TopPagerRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ TopPagerRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TopPagerRow : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.TopPagerRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Web.UI.WebControls.FormViewRow" />, представляющий строку страничного навигатора, отображаемую вверху элемента управления <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <value>Объект <see cref="T:System.Web.UI.WebControls.FormViewRow" />, представляющий верхнюю строку страничного навигатора в элементе управления <see cref="T:System.Web.UI.WebControls.FormView" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если включено разбиение на страницы (при <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> свойству `true`), дополнительная строка, которую называют строкой страничного автоматически отображаются в <xref:System.Web.UI.WebControls.FormView> элемента управления. Строка страницы содержит элементы управления, которые пользователи могут переходить к другим записям и может быть отображена в верхней, нижней или верхней и нижней части элемента управления. Используйте <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> программный доступ к свойству <xref:System.Web.UI.WebControls.FormViewRow> , представляющий верхней строкой в <xref:System.Web.UI.WebControls.FormView> элемента управления.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> , Это свойство доступно только после <xref:System.Web.UI.WebControls.FormView> управления создает верхней строкой в <xref:System.Web.UI.WebControls.FormView.ItemCreated> событий.  
  
 Это свойство обычно используется, когда необходимо программно управлять верхней строкой, например при добавлении настраиваемого содержимого. Любые изменения <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> свойства должны быть выполнены после <xref:System.Web.UI.WebControls.FormView> элемент был привязан к данным, в противном случае — <xref:System.Web.UI.WebControls.FormView> управления перезаписывает любые изменения.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> свойство для доступа к строку страничного навигатора, отображается в верхней части <xref:System.Web.UI.WebControls.FormView> элемента управления. Затем строку страничного навигатора обновляется с дополнительным содержимым.  
  
 [!code-aspx-csharp[FormViewTopPagerRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewTopPagerRow/CS/formviewtoppagerrowcs.aspx#1)]
 [!code-aspx-vb[FormViewTopPagerRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewTopPagerRow/VB/formviewtoppagerrowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="formView.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Отмечает точка отсчета, с которой начинается отслеживание и сохранение изменений в состоянии представления элемента управления <see cref="T:System.Web.UI.WebControls.FormView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод переопределяется для обозначения начальной точки, с которого начинается отслеживания и сохранения изменений в элементе управления как часть состояния просмотра элемента управления.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="UpdateItem">
      <MemberSignature Language="C#" Value="public virtual void UpdateItem (bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateItem(bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateItem (causesValidation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UpdateItem(bool causesValidation);" />
      <MemberSignature Language="F#" Value="abstract member UpdateItem : bool -&gt; unit&#xA;override this.UpdateItem : bool -&gt; unit" Usage="formView.UpdateItem causesValidation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="causesValidation">
          <see langword="true" /> для проверки страницы при вызове данного метода; в противном случае — <see langword="false" />.</param>
        <summary>Обновляет текущую запись в источнике данных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда <xref:System.Web.UI.WebControls.FormView> находится в режиме редактирования, используйте <xref:System.Web.UI.WebControls.FormView.UpdateItem%2A> метод программно обновить текущую запись в источнике данных. Этот метод обычно используется, когда необходимо обновить текущую запись вне <xref:System.Web.UI.WebControls.FormView> управления, например, из другого элемента управления на странице.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView> Элемент управления должен быть в режиме редактирования, если этот метод вызван; в противном случае — <xref:System.Web.HttpException> возникает исключение.  
  
 Чтобы указать, выполняется ли проверка страницы перед операцией обновления, используйте `causesValidation` параметра. Вызов этого метода также вызывает <xref:System.Web.UI.WebControls.FormView.ItemUpdated> и <xref:System.Web.UI.WebControls.FormView.ItemUpdating> события.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormView.UpdateItem%2A> метод программно обновить текущую запись в <xref:System.Web.UI.WebControls.FormView> элемента управления в источник данных.  
  
 [!code-aspx-csharp[FormViewUpdateItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateItem/CS/formviewupdateitemcs.aspx#1)]
 [!code-aspx-vb[FormViewUpdateItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateItem/VB/formviewupdateitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Этот метод вызывается, когда элемент управления <see cref="T:System.Web.UI.WebControls.FormView" /> не находится в режиме редактирования.  -или- Объект <see cref="T:System.Web.UI.DataSourceView" />, связанный с элементом управления <see cref="T:System.Web.UI.WebControls.FormView" />, имеет значение null.</exception>
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.DeleteItem" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="UpdateMethod">
      <MemberSignature Language="C#" Value="public virtual string UpdateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.UpdateMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UpdateMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UpdateMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateMethod : string with get, set" Usage="System.Web.UI.WebControls.FormView.UpdateMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя метода на странице, который вызывается, когда элемент управления выполняет операцию обновления.</summary>
        <value>Имя метода на странице, который вызывается, когда элемент управления выполняет операцию обновления.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Учебник ряда на использование привязки модели для Web Forms, см. [привязки модели и веб-форм](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>