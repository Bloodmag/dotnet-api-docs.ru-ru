<Type Name="FormViewUpdatedEventArgs" FullName="System.Web.UI.WebControls.FormViewUpdatedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="81d385d36b6acfafb752e571b24a00b8be64b9a3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30599678" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FormViewUpdatedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormViewUpdatedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class FormViewUpdatedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormViewUpdatedEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет данные для события <see cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView> Управления вызывает <xref:System.Web.UI.WebControls.FormView.ItemUpdated> событие, когда кнопка обновления (кнопка с его `CommandName` , имеющим значение «Обновления») в элементе управления выбран, но после <xref:System.Web.UI.WebControls.FormView> управления обновляет запись. Это позволяет предоставить метод обработки событий, который выполняет пользовательские действия, такие как проверка результатов операции обновления, когда происходит данное событие.  
  
 Объект <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> объект передается в метод обработки событий, который позволяет определить количество обработанных записей и любые исключения, которые могли возникнуть. Чтобы определить количество записей, затронутых операцией обновления, используйте <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A> свойство. Используйте <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> свойство, чтобы определить, произошла ли все исключения. Можно также указать, является ли исключение обработано в метод обработки событий, задав <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> свойство. Если необходимо получить доступ к исходные значения ключевого поля для обновленной записи, используйте <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> свойство. Исходные значения неключевых полей может осуществляться с помощью <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> свойство. Обновленные значения (в том числе значения обновленное поле ключа, если разрешить пользователю изменять ключевых полей) осуществляется с помощью <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> свойство.  
  
 По умолчанию <xref:System.Web.UI.WebControls.FormView> управление возвращается в режим, заданные <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> свойство после выполнения операции обновления. При обработке исключение, возникшее во время операции обновления, можно сохранить <xref:System.Web.UI.WebControls.FormView> управления в режим редактирования, задав <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A> свойства `true`.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 Список начальных значений свойств для экземпляра класса <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> см. в описании конструктора <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.%23ctor%2A>.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> объект, переданный в метод обработки событий для <xref:System.Web.UI.WebControls.FormView.ItemUpdated> событие, чтобы определить, произошло ли исключение во время операции обновления.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.FormView" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormViewUpdatedEventArgs (int affectedRows, Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 affectedRows, class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (affectedRows As Integer, e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormViewUpdatedEventArgs(int affectedRows, Exception ^ e);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="affectedRows">Количество строк, на которые повлияла операция обновления.</param>
        <param name="e">Объект <see cref="T:System.Exception" />, представляющий исключение, возникающее при выполнении операции обновления. Если исключение не происходит, для этого параметра используется значение <see langword="null" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор используется для инициализации нового экземпляра <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> класса.  
  
 В следующей таблице представлены исходные значения свойств для экземпляра класса <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs>.  
  
|Свойство.|Начальное значение|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A>|Значение параметра `affectedRows`.|  
|<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A>|<xref:System.Exception?displayProperty=nameWithType> Объектов, содержащихся в `e` параметра.|  
|<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A>|Инициализируются `false`.|  
|<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A>|Инициализируются `false`.|  
  
> [!NOTE]
>  Этот конструктор используется преимущественно разработчиками элементов управления при создании событий.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает количество строк, на которые повлияла операция обновления.</summary>
        <value>Количество строк, на которые повлияла операция обновления.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A> свойство, чтобы определить количество записей, затронутых операцией обновления. Это свойство обычно используется для проверки того, что правильное количество строк был обновлен в следующих ситуациях:  
  
-   Убедитесь, что только одна запись была обновлена. Иногда неправильно написанный оператор обновления может обновить несколько записей.  
  
-   Убедитесь, что записи были обновлены, при возникновении ошибки во время операции обновления, исключение не создается.  
  
-   Убедитесь, что запись была обновлены, если элемент управления источником данных, которая поддерживает обнаружение конфликтов (проверки оптимистичного параллелизма), такие как <xref:System.Web.UI.WebControls.SqlDataSource> и <xref:System.Web.UI.WebControls.ObjectDataSource> определяет, имеет его <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> присвоено `ConflictOptions.CompareAllValues` значение перечисления . При использовании этого параметра может не обновить запись, которая одновременно был изменен другим пользователем.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A> свойство, чтобы убедиться, что запись была обновлена.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает исключение, при его наличии, возникшее во время операции обновления.</summary>
        <value>Объект <see cref="T:System.Exception" />, представляющий исключение, возникающее во время операции обновления.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> свойство для определения исключения (если есть), возникшее во время операции обновления. При отсутствии исключений это свойство возвращает значение `null`.  
  
> [!NOTE]
>  Если возникло исключение, и следует обрабатывать исключение в обработчике событий, не забудьте задать <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> свойства `true`; в противном случае исключение создается повторно с помощью <xref:System.Web.UI.WebControls.FormView> элемента управления.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> свойства, чтобы определить, произошло ли исключение во время операции обновления.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, позволяющее определить, обработано ли исключение, возникшее во время операции обновления, в обработчике событий.</summary>
        <value>
          Значение <see langword="true" />, если исключение обработано в обработчике событий; в противном случае — значение <see langword="false" />. Значение по умолчанию: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если исключение возникает во время операции обновления, используйте <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> свойство, указывающее, является ли исключение обработано в обработчик. Если значение этого свойства `true`, исключение считается обработанным и не вызывается повторно с помощью <xref:System.Web.UI.WebControls.FormView> элемента управления. Если это свойство имеет значение `false`, исключение создается снова. Чтобы определить, какие исключения, используйте <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> свойство.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> свойство, указывающее, что исключение обработано в обработчике событий.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
      </Docs>
    </Member>
    <Member MemberName="KeepInEditMode">
      <MemberSignature Language="C#" Value="public bool KeepInEditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepInEditMode { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, позволяющее определить, должен ли элемент управления <see cref="T:System.Web.UI.WebControls.FormView" /> оставаться в режиме редактирования после выполнения операции обновления.</summary>
        <value>
          Значение <see langword="true" />, чтобы он остался в режиме редактирования после выполнения операции обновления; в противном случае — значение <see langword="false" />. Значение по умолчанию: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию <xref:System.Web.UI.WebControls.FormView> управление возвращается в режим, заданные <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> свойство после выполнения операции обновления. Используйте <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A> свойство, чтобы указать ли <xref:System.Web.UI.WebControls.FormView> элемент управления должен оставаться в режиме редактирования. Чтобы сохранить <xref:System.Web.UI.WebControls.FormView> управления в режим редактирования, присвойте этому свойству значение `true`.  
  
> [!NOTE]
>  Это свойство должно использоваться только в том случае, если возникает ситуация (например, при появлении исключения), требующих элемента управления, ведут себя иначе, чем обычно. Если <xref:System.Web.UI.WebControls.FormView> элемент управления должен оставаться в режиме редактирования по умолчанию, задайте <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> свойство вместо него.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A> свойство для сохранения <xref:System.Web.UI.WebControls.FormView> элемента управления в режим редактирования при возникновении исключения.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DefaultMode" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary Keys" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ Keys { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает словарь, содержащий пары "имя-значение" исходного поля ключа для обновленной записи.</summary>
        <value>Словарь <see cref="T:System.Collections.Specialized.IOrderedDictionary" />, содержащий пары "имя-значение" исходного поля ключа для обновленной записи.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> Свойство содержит исходные значения ключевых полей, перечисленных в <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> свойства <xref:System.Web.UI.WebControls.FormView> элемента управления. Используйте <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> свойство для доступа к значениям ключевого поля обновленной записи. Например эти значения можно использовать для ведения журнала обновленных записей.  
  
> [!NOTE]
>  Если разрешить пользователю о необходимости обновить значения ключевых полей, <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> свойство содержит исходные значения ключевых полей. Обновленные значения хранятся в <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> свойство.  
  
 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> Возвращает <xref:System.Collections.Specialized.OrderedDictionary> объект, реализующий <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> интерфейса. <xref:System.Collections.Specialized.OrderedDictionary> Объект содержит <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> объекты, представляющие поля обновленной записи. Чтобы получить имена полей, используйте <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> свойство <xref:System.Collections.Specialized.OrderedDictionary> объекта. Аналогичным образом, значения полей можно использовать с помощью <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> свойство.  
  
> [!NOTE]
>  Для быстрого вызова можно использовать индексатор <xref:System.Collections.Specialized.OrderedDictionary> непосредственно значения объекта для доступа к полю. Элементы управления, которые зависят от порядка полей источника данных (например, <xref:System.Web.UI.WebControls.AccessDataSource>) значения поля доступны только по индексу.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> свойство для доступа к значениям ключевого поля обновленной записи.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
      </Docs>
    </Member>
    <Member MemberName="NewValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary NewValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary NewValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewValues As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ NewValues { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает словарь, содержащий пары "имя-значение" нового поля для обновленной записи.</summary>
        <value>Словарь <see cref="T:System.Collections.Specialized.IOrderedDictionary" />, содержащий пары "имя-значение" нового поля для обновленной записи.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> свойство для доступа к новые значения поля для обновленной записи. Например эти значения можно использовать для ведения журнала обновленных записей.  
  
> [!NOTE]
>  Если разрешить пользователю о необходимости обновить значения ключевых полей, <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> свойство содержит исходные значения ключевых полей. Обновленные значения хранятся в <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> свойство.  
  
 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> Возвращает <xref:System.Collections.Specialized.OrderedDictionary> объект, реализующий <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> интерфейса. <xref:System.Collections.Specialized.OrderedDictionary> Объект содержит <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> объекты, представляющие поля обновленной записи. Чтобы получить имена полей, используйте <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> свойство <xref:System.Collections.Specialized.OrderedDictionary> объекта. Аналогичным образом, значения полей можно использовать с помощью <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> свойство.  
  
> [!NOTE]
>  Для быстрого вызова можно использовать индексатор <xref:System.Collections.Specialized.OrderedDictionary> непосредственно значения объекта для доступа к полю. Элементы управления, которые зависят от порядка полей источника данных (например, <xref:System.Web.UI.WebControls.AccessDataSource>) значения поля доступны только по индексу.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> свойство для доступа к новым значениям, введенным пользователем для неключевых полей обновленной записи.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
      </Docs>
    </Member>
    <Member MemberName="OldValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary OldValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary OldValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OldValues As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ OldValues { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает словарь, содержащий пары "имя-значение" исходного не содержащего ключ поля для обновленной записи.</summary>
        <value>Словарь <see cref="T:System.Collections.Specialized.IOrderedDictionary" />, содержащий пары "имя-значение" исходного поля для обновленной записи.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> свойство для доступа к исходные значения полей для обновленной записи. Например эти значения можно использовать для ведения журнала обновленных записей. Элемент управления источником данных, которая поддерживает обнаружение конфликтов (проверки оптимистичного параллелизма), такие как <xref:System.Web.UI.WebControls.SqlDataSource> и <xref:System.Web.UI.WebControls.ObjectDataSource> элементов управления, с его <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> свойство `ConflictOptions.CompareAllValues` также сравнивает эти исходные значения со значениями выполняется запись в базе данных перед операцией обновления. Если запись одновременно был изменен другим пользователем, запись не обновляется.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.OldValues%2A> Свойство не содержит ключевые поля. Если разрешить пользователю о необходимости обновить значения ключевых полей, исходные значения ключевых полей хранятся в <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> свойство. Обновленные значения хранятся в <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> свойство.  
  
 <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> Возвращает <xref:System.Collections.Specialized.OrderedDictionary> объект, реализующий <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType> интерфейса. <xref:System.Collections.Specialized.OrderedDictionary> Объект содержит <xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> объекты, представляющие поля обновленной записи. Чтобы получить имена полей, используйте <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> свойство <xref:System.Collections.Specialized.OrderedDictionary> объекта. Аналогичным образом, значения полей можно использовать с помощью <xref:System.Collections.Specialized.OrderedDictionary.Values%2A> свойство.  
  
> [!NOTE]
>  Для быстрого вызова можно использовать индексатор <xref:System.Collections.Specialized.OrderedDictionary> непосредственно значения объекта для доступа к полю. Элементы управления, которые зависят от порядка полей источника данных (например, <xref:System.Web.UI.WebControls.AccessDataSource>) значения поля доступны только по индексу.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A> свойство для доступа к исходные значения не ключевых полей для обновленной записи.  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
      </Docs>
    </Member>
  </Members>
</Type>