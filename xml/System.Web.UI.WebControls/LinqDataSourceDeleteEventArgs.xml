<Type Name="LinqDataSourceDeleteEventArgs" FullName="System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ccde8e297e7fa550eadd02196d38705cb8e4a6a5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LinqDataSourceDeleteEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinqDataSourceDeleteEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSourceDeleteEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSourceDeleteEventArgs : System::ComponentModel::CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="0bd16-101">Предоставляет данные для события <see cref="E:System.Web.UI.WebControls.LinqDataSource.Deleting" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0bd16-101">Provides data for the <see cref="E:System.Web.UI.WebControls.LinqDataSource.Deleting" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bd16-102"><xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> Объект передается в любой обработчик <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> событий.</span><span class="sxs-lookup"><span data-stu-id="0bd16-102">The <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> object is passed to any handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event.</span></span> <span data-ttu-id="0bd16-103"><xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> Свойство с данными, будут удалены.</span><span class="sxs-lookup"><span data-stu-id="0bd16-103">The <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> property contains the data that will be deleted.</span></span>  
  
 <span data-ttu-id="0bd16-104">Если объект, представляющий источник данных вызывает исключение проверки, прежде чем она удаляет данные, <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> свойство содержит экземпляр <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> класса.</span><span class="sxs-lookup"><span data-stu-id="0bd16-104">If the object that represents the data source throws a validation exception before it deletes the data, the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> property contains an instance of the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class.</span></span> <span data-ttu-id="0bd16-105">Вы можете получить все исключения проверки через <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="0bd16-105">You can retrieve all the validation exceptions through the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> property.</span></span> <span data-ttu-id="0bd16-106">Если не вызывается исключение проверки, <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> свойство содержит `null`.</span><span class="sxs-lookup"><span data-stu-id="0bd16-106">If no validation exception is thrown, the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> property contains `null`.</span></span> <span data-ttu-id="0bd16-107">Если обрабатывать исключения проверки и не должны быть повторно исключение, установите <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled%2A> свойства `true`.</span><span class="sxs-lookup"><span data-stu-id="0bd16-107">If you handle the validation exceptions and do not want the exception to be re-thrown, set the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="0bd16-108">Создайте обработчик событий для <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> событий для проверки данных проверки на наличие ошибок проверки в классе данных, или отменить операцию удаления.</span><span class="sxs-lookup"><span data-stu-id="0bd16-108">You create an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event to validate the data, to examine validation errors from the data class, or to cancel the delete operation.</span></span> <span data-ttu-id="0bd16-109">Отменить операцию удаления, задав <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> свойства `true`.</span><span class="sxs-lookup"><span data-stu-id="0bd16-109">You cancel the delete operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="0bd16-110">По умолчанию <xref:System.Web.UI.WebControls.LinqDataSource> элемент управления сохраняет исходные значения из источника данных в представлении состояния на веб-странице, за исключением тех, <xref:System.Data.Linq.Mapping.ColumnAttribute> атрибут помечен как `UpdateCheck.Never`.</span><span class="sxs-lookup"><span data-stu-id="0bd16-110">By default, the <xref:System.Web.UI.WebControls.LinqDataSource> control stores the original values from the data source in view state in the Web page, except those whose <xref:System.Data.Linq.Mapping.ColumnAttribute> attribute is marked as `UpdateCheck.Never`.</span></span> <span data-ttu-id="0bd16-111">LINQ to SQL автоматически проверяет целостность данных перед их удалением.</span><span class="sxs-lookup"><span data-stu-id="0bd16-111">LINQ to SQL automatically checks the integrity of the data before deleting the data.</span></span> <span data-ttu-id="0bd16-112">Это делается путем сравнения текущих значений в источнике данных с исходными значениями, которые хранятся в состоянии представления.</span><span class="sxs-lookup"><span data-stu-id="0bd16-112">It does this by comparing the current values in the data source with the original values that are stored in view state.</span></span> <span data-ttu-id="0bd16-113">Можно выполнить проверку дополнительные данные, создав обработчик <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> событий.</span><span class="sxs-lookup"><span data-stu-id="0bd16-113">You can perform additional data validation by creating a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0bd16-114">В следующем примере показано, как отменить операцию удаления, на основе свойства в <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> свойства и значения из веб-страницы.</span><span class="sxs-lookup"><span data-stu-id="0bd16-114">The following example shows how to cancel the delete operation based on a property in the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> property and a value from the Web page.</span></span> <span data-ttu-id="0bd16-115">В примере, пользователи должны выбрать <xref:System.Web.UI.WebControls.CheckBox> управления, чтобы убедиться, что желают удалить продукт записи при его `OnSale` свойству `true`.</span><span class="sxs-lookup"><span data-stu-id="0bd16-115">In the example, users must select a <xref:System.Web.UI.WebControls.CheckBox> control to confirm that they want to delete a product record when its `OnSale` property is set to `true`.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Deleting/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Deleting/vb/Default.aspx.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0bd16-116">Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bd16-116">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceDeleteEventArgs (object originalObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object originalObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (originalObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceDeleteEventArgs(System::Object ^ originalObject);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="originalObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="originalObject">
          <span data-ttu-id="0bd16-117">Объект типа, указанного свойством <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" />, содержащий удаляемые данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bd16-117">An object of the type specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> property that contains the data to delete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bd16-118">Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bd16-118">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceDeleteEventArgs (System.Web.UI.WebControls.LinqDataSourceValidationException exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.LinqDataSourceValidationException exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (exception As LinqDataSourceValidationException)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceDeleteEventArgs(System::Web::UI::WebControls::LinqDataSourceValidationException ^ exception);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exception" Type="System.Web.UI.WebControls.LinqDataSourceValidationException" />
      </Parameters>
      <Docs>
        <param name="exception">
          <span data-ttu-id="0bd16-119">Исключение, происходящее при проверке предназначенных для удаления данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bd16-119">The exception that occurred when validating the data to delete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0bd16-120">Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" /> с указанным исключением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bd16-120">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" /> class with the specified exception.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.LinqDataSourceValidationException Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.LinqDataSourceValidationException Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As LinqDataSourceValidationException" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::LinqDataSourceValidationException ^ Exception { System::Web::UI::WebControls::LinqDataSourceValidationException ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LinqDataSourceValidationException</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0bd16-121">Возвращает исключение, выданное при проверке данных перед выполнением операции удаления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bd16-121">Gets the exception that was thrown while the data was being validated before the delete operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0bd16-122">Исключение при наличии ошибки; в противном случае — значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bd16-122">The exception, if an error occurred; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bd16-123">Если перед выполнением операции delete, вызывается исключение проверки, исключение хранится в <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="0bd16-123">If a validation exception is thrown before the delete operation is performed, the exception is stored in the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> property.</span></span> <span data-ttu-id="0bd16-124">В обработчике событий для <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> событий, можно получить исключение через <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="0bd16-124">In an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event, you can retrieve the exception through the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0bd16-125">Возвращает или задает значение, позволяющее определить, было ли обработано исключение и должно ли оно выбрасываться снова.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bd16-125">Gets or sets a value that indicates whether the exception was handled and that it should not be thrown again.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0bd16-126">
            <see langword="true" />, если исключение обработано; в противном случае —<see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bd16-126">
              <see langword="true" /> if the exception was handled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bd16-127">Можно создать обработчик событий для <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> событий для изучения проверки исключений, которые были созданы перед выполнением операции delete.</span><span class="sxs-lookup"><span data-stu-id="0bd16-127">You can create an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event to examine validation exceptions that were thrown before the delete operation.</span></span> <span data-ttu-id="0bd16-128">Если обработки исключения и не хотите исключение еще раз, установите <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled%2A> свойства `true`.</span><span class="sxs-lookup"><span data-stu-id="0bd16-128">If you handle the exception and do not want it to be thrown again, set the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled%2A> property to `true`.</span></span> <span data-ttu-id="0bd16-129">Если вы не установите <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled%2A> свойства `true`, исключение распространяется на Далее в стеке вызовов обработчика событий.</span><span class="sxs-lookup"><span data-stu-id="0bd16-129">If you do not set the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled%2A> property to `true`, the exception will be propagated to the next event handler in the call stack.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalObject">
      <MemberSignature Language="C#" Value="public object OriginalObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object OriginalObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ OriginalObject { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0bd16-130">Возвращает объект, представляющий удаляемые данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bd16-130">Gets the object that represents the data to delete.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0bd16-131">Объект типа, указанного свойством <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" />, содержащий удаляемые данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0bd16-131">An object of the type specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> property that contains the data to delete.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0bd16-132">Можно использовать <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> свойства для взаимодействия с данными, перед его удалением.</span><span class="sxs-lookup"><span data-stu-id="0bd16-132">You can use the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> property to interact with the data before it is deleted.</span></span> <span data-ttu-id="0bd16-133">Можно проверить данные, или событие можно отменить, задав <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> свойства `true`.</span><span class="sxs-lookup"><span data-stu-id="0bd16-133">You can validate the data, or you can cancel the event by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `true`.</span></span> <span data-ttu-id="0bd16-134">Можно изменить, какая запись удаляется, изменив значение или значения объекта в <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="0bd16-134">You can modify which record is deleted by changing the value or values of the object in the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0bd16-135">В следующем примере показано, как отменить операцию удаления, на основе свойства в <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> свойства и значения из веб-страницы.</span><span class="sxs-lookup"><span data-stu-id="0bd16-135">The following example shows how to cancel the delete operation based on a property in the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> property and a value from the Web page.</span></span> <span data-ttu-id="0bd16-136">В примере, пользователи должны выбрать <xref:System.Web.UI.WebControls.CheckBox> управления, чтобы убедиться, что желают удалить продукт записи при его `OnSale` свойству `true`.</span><span class="sxs-lookup"><span data-stu-id="0bd16-136">In the example, users must select a <xref:System.Web.UI.WebControls.CheckBox> control to confirm that they want to delete a product record when its `OnSale` property is set to `true`.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Deleting/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Deleting/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>