<Type Name="LinqDataSourceUpdateEventArgs" FullName="System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="62106f7ebbe05e7cc74c85e5d0abb495bb47c3bd" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39903673" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LinqDataSourceUpdateEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinqDataSourceUpdateEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSourceUpdateEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSourceUpdateEventArgs : System::ComponentModel::CancelEventArgs" />
  <TypeSignature Language="F#" Value="type LinqDataSourceUpdateEventArgs = class&#xA;    inherit CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="7f4b9-101">Предоставляет данные для события <see cref="E:System.Web.UI.WebControls.LinqDataSource.Updating" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7f4b9-101">Provides data for the <see cref="E:System.Web.UI.WebControls.LinqDataSource.Updating" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f4b9-102"><xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs> Объект передается в любой обработчик событий для <xref:System.Web.UI.WebControls.LinqDataSource.Updating> событий.</span><span class="sxs-lookup"><span data-stu-id="7f4b9-102">The <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs> object is passed to any event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="7f4b9-103">Можно использовать <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs> объект для проверки данных перед выполнением операции обновления в источнике данных.</span><span class="sxs-lookup"><span data-stu-id="7f4b9-103">You can use the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs> object to examine the data before the update operation is executed in the data source.</span></span> <span data-ttu-id="7f4b9-104">Затем можно проверять данные, изучать проверки исключений, создаваемых с помощью класса данных или изменить значение перед обновлением.</span><span class="sxs-lookup"><span data-stu-id="7f4b9-104">You can then validate the data, examine validation exceptions thrown by the data class, or change a value before the update.</span></span> <span data-ttu-id="7f4b9-105">Также можно отменить операцию обновления.</span><span class="sxs-lookup"><span data-stu-id="7f4b9-105">You can also cancel the update operation.</span></span>  
  
 <span data-ttu-id="7f4b9-106"><xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> Объект содержит данные, изначально извлеченные из источника данных.</span><span class="sxs-lookup"><span data-stu-id="7f4b9-106">The <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> object contains the data that was originally retrieved from the data source.</span></span> <span data-ttu-id="7f4b9-107"><xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> Объект содержит данные, которые будут сохранены в источнике данных во время операции обновления.</span><span class="sxs-lookup"><span data-stu-id="7f4b9-107">The <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> object contains the data that will be saved in the data source during the update operation.</span></span>  
  
 <span data-ttu-id="7f4b9-108">Если объект, представляющий источник данных вызывает исключение проверки перед обновлением данных, <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A> свойство содержит экземпляр <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> класса.</span><span class="sxs-lookup"><span data-stu-id="7f4b9-108">If the object that represents the data source throws a validation exception before updating the data, the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A> property contains an instance of the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class.</span></span> <span data-ttu-id="7f4b9-109">Вы можете получить все исключения проверки через <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="7f4b9-109">You can retrieve all the validation exceptions through the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> property.</span></span> <span data-ttu-id="7f4b9-110">Если исключение проверки, <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A> свойство содержит `null`.</span><span class="sxs-lookup"><span data-stu-id="7f4b9-110">If no validation exception is thrown, the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A> property contains `null`.</span></span> <span data-ttu-id="7f4b9-111">Если обрабатывать исключения проверки и исключение повторно не требуется, установите <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A> свойства `true`.</span><span class="sxs-lookup"><span data-stu-id="7f4b9-111">If you handle the validation exceptions and do not want the exception to be re-thrown, set the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="7f4b9-112">По умолчанию <xref:System.Web.UI.WebControls.LinqDataSource> состояние управления хранилищами, исходные значения из источника данных в представлении веб-страницы, за исключением тех, <xref:System.Data.Linq.Mapping.ColumnAttribute> атрибут помечен как `UpdateCheck.Never`.</span><span class="sxs-lookup"><span data-stu-id="7f4b9-112">By default, the <xref:System.Web.UI.WebControls.LinqDataSource> control stores the original values from the data source in view state on the Web page, except those whose <xref:System.Data.Linq.Mapping.ColumnAttribute> attribute is marked as `UpdateCheck.Never`.</span></span> <span data-ttu-id="7f4b9-113">LINQ to SQL автоматически проверяет целостность данных перед их обновлением.</span><span class="sxs-lookup"><span data-stu-id="7f4b9-113">LINQ to SQL automatically checks the integrity of the data before updating the data.</span></span> <span data-ttu-id="7f4b9-114">Это достигается путем сравнения текущих значений в источнике данных с исходными значениями, сохраненными в состоянии представления.</span><span class="sxs-lookup"><span data-stu-id="7f4b9-114">It does this by comparing the current values in the data source with the original values stored in view state.</span></span> <span data-ttu-id="7f4b9-115">LINQ to SQL создаст исключение, если значения в источнике данных были изменены.</span><span class="sxs-lookup"><span data-stu-id="7f4b9-115">LINQ to SQL raises an exception if the values in the data source have changed.</span></span> <span data-ttu-id="7f4b9-116">Дополнительные данные проверку можно выполнить, создав обработчик <xref:System.Web.UI.WebControls.LinqDataSource.Updating> событий.</span><span class="sxs-lookup"><span data-stu-id="7f4b9-116">You can perform additional data validation by creating a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7f4b9-117">В примере показан обработчик событий для <xref:System.Web.UI.WebControls.LinqDataSource.Updating> событий.</span><span class="sxs-lookup"><span data-stu-id="7f4b9-117">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="7f4b9-118">В примере показано сравнение свойств из <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> свойство и <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> свойства, чтобы определить ли значение в `Category` свойство изменилось.</span><span class="sxs-lookup"><span data-stu-id="7f4b9-118">The example shows how to compare properties from the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> property and the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property to determine whether the value in the `Category` property has changed.</span></span> <span data-ttu-id="7f4b9-119">Если Да, `CategoryChanged` свойству объекта в <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> свойству `true`.</span><span class="sxs-lookup"><span data-stu-id="7f4b9-119">If so, the `CategoryChanged` property of the object in the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property is set to `true`.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Updating/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Updating/vb/Default.aspx.vb#1)]  
  
 <span data-ttu-id="7f4b9-120">В примере показан обработчик событий для <xref:System.Web.UI.WebControls.LinqDataSource.Updating> событий.</span><span class="sxs-lookup"><span data-stu-id="7f4b9-120">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="7f4b9-121">Отображаются все сообщения об исключениях проверки с использованием <xref:System.Web.UI.WebControls.Label> элемента управления.</span><span class="sxs-lookup"><span data-stu-id="7f4b9-121">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Updating(ByVal sender As Object, _  
        ByVal e As LinqDataSourceUpdateEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message & "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Updating(object sender,   
        LinqDataSourceUpdateEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7f4b9-122">Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f4b9-122">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceUpdateEventArgs (System.Web.UI.WebControls.LinqDataSourceValidationException exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.LinqDataSourceValidationException exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (exception As LinqDataSourceValidationException)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceUpdateEventArgs(System::Web::UI::WebControls::LinqDataSourceValidationException ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs : System.Web.UI.WebControls.LinqDataSourceValidationException -&gt; System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs exception" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="exception" Type="System.Web.UI.WebControls.LinqDataSourceValidationException" />
      </Parameters>
      <Docs>
        <param name="exception">
          <span data-ttu-id="7f4b9-123">Исключение, происходящее при проверке предназначенных для обновления данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f4b9-123">The exception that occurred when validating the data to update.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f4b9-124">Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /> с указанным исключением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f4b9-124">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /> class with the specified exception.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceUpdateEventArgs (object originalObject, object newObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object originalObject, object newObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.#ctor(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (originalObject As Object, newObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceUpdateEventArgs(System::Object ^ originalObject, System::Object ^ newObject);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs : obj * obj -&gt; System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs (originalObject, newObject)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="originalObject" Type="System.Object" />
        <Parameter Name="newObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="originalObject">
          <span data-ttu-id="7f4b9-125">Объект типа, указанного свойством <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" />, который содержит исходные значения, извлеченные из источника данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f4b9-125">An object of the type specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> property that contains the initial values that were retrieved from the data source.</span>
          </span>
        </param>
        <param name="newObject">
          <span data-ttu-id="7f4b9-126">Объект типа, указанного свойством <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" />, который содержит значения, сохраненные в источнике данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f4b9-126">An object of the type specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> property that contains the values that will be saved in the data source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f4b9-127">Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f4b9-127">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.LinqDataSourceValidationException Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.LinqDataSourceValidationException Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As LinqDataSourceValidationException" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::LinqDataSourceValidationException ^ Exception { System::Web::UI::WebControls::LinqDataSourceValidationException ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : System.Web.UI.WebControls.LinqDataSourceValidationException" Usage="System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LinqDataSourceValidationException</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7f4b9-128">Возвращает исключение, выданное при проверке данных перед выполнением операции обновления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f4b9-128">Gets the exception that was thrown while the data was being validated before the update operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7f4b9-129">Исключение при наличии ошибки; в противном случае — значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f4b9-129">The exception, if an error occurred; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f4b9-130">Если перед выполнением операции обновления, возникает исключение проверки, исключение хранится в <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="7f4b9-130">If a validation exception is raised before the update operation is performed, the exception is stored in the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A> property.</span></span> <span data-ttu-id="7f4b9-131">В обработчике событий для <xref:System.Web.UI.WebControls.LinqDataSource.Updating> событий, можно получить исключение через <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="7f4b9-131">In an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event, you can retrieve the exception through the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7f4b9-132">В примере показан обработчик событий для <xref:System.Web.UI.WebControls.LinqDataSource.Updating> событий.</span><span class="sxs-lookup"><span data-stu-id="7f4b9-132">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="7f4b9-133">Отображаются все сообщения об исключениях проверки с использованием <xref:System.Web.UI.WebControls.Label> элемента управления.</span><span class="sxs-lookup"><span data-stu-id="7f4b9-133">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Updating(ByVal sender As Object, _  
        ByVal e As LinqDataSourceUpdateEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message & "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Updating(object sender,   
        LinqDataSourceUpdateEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7f4b9-134">Возвращает или задает значение, позволяющее определить, было ли обработано исключение и должно ли оно выбрасываться снова.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f4b9-134">Gets or sets a value that indicates whether the exception was handled and that it should not be thrown again.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7f4b9-135">
            <see langword="true" />, если исключение обработано; в противном случае —<see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f4b9-135">
              <see langword="true" /> if the exception was handled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f4b9-136">Можно создать обработчик событий для <xref:System.Web.UI.WebControls.LinqDataSource.Updating> событие, чтобы изучить проверки исключения, возникшие перед операцией обновления.</span><span class="sxs-lookup"><span data-stu-id="7f4b9-136">You can create an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event to examine validation exceptions that occurred before the update operation.</span></span> <span data-ttu-id="7f4b9-137">Если обработать исключение и запретить его еще раз исключение, установите <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A> свойства `true`.</span><span class="sxs-lookup"><span data-stu-id="7f4b9-137">If you handle the exception and do not want it to be thrown again, set the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A> property to `true`.</span></span> <span data-ttu-id="7f4b9-138">Если вы не установите <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A> свойства `true`, исключение распространяется в следующий обработчик событий, в стеке вызовов.</span><span class="sxs-lookup"><span data-stu-id="7f4b9-138">If you do not set the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A> property to `true`, the exception will be propagated to the next event handler in the call stack.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7f4b9-139">В примере показан обработчик событий для <xref:System.Web.UI.WebControls.LinqDataSource.Updating> событий.</span><span class="sxs-lookup"><span data-stu-id="7f4b9-139">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="7f4b9-140">Отображаются все сообщения об исключениях проверки с использованием <xref:System.Web.UI.WebControls.Label> элемента управления.</span><span class="sxs-lookup"><span data-stu-id="7f4b9-140">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Updating(ByVal sender As Object, _  
        ByVal e As LinqDataSourceUpdateEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message & "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Updating(object sender,   
        LinqDataSourceUpdateEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewObject">
      <MemberSignature Language="C#" Value="public object NewObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NewObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NewObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NewObject : obj" Usage="System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7f4b9-141">Возвращает объект, содержащий значения, которые будут сохранены в источнике данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f4b9-141">Gets the object that contains the values that will be saved in the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7f4b9-142">Объект типа, указанного свойством <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" />, который содержит сохраняемые данные.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f4b9-142">An object of the type specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> property that contains the data to save.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f4b9-143">Создайте обработчик событий для <xref:System.Web.UI.WebControls.LinqDataSource.Updating> событий и их извлечение <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> свойство для проверки данных.</span><span class="sxs-lookup"><span data-stu-id="7f4b9-143">Create an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event and retrieve the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property to validate the data.</span></span> <span data-ttu-id="7f4b9-144">Можно также изменить данные или отменить операцию обновления.</span><span class="sxs-lookup"><span data-stu-id="7f4b9-144">You can also change the data or cancel the update operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7f4b9-145">В примере показан обработчик событий для <xref:System.Web.UI.WebControls.LinqDataSource.Updating> событий.</span><span class="sxs-lookup"><span data-stu-id="7f4b9-145">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="7f4b9-146">В примере показано сравнение свойств из <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> свойство и <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> свойства, чтобы определить ли значение в `Category` свойство изменилось.</span><span class="sxs-lookup"><span data-stu-id="7f4b9-146">The example shows how to compare properties from the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> property and the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property to determine whether the value in the `Category` property has changed.</span></span> <span data-ttu-id="7f4b9-147">Если Да, `CategoryChanged` свойству объекта в <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> свойству `true`.</span><span class="sxs-lookup"><span data-stu-id="7f4b9-147">If so, the `CategoryChanged` property of the object in the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property is set to `true`.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Updating/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Updating/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalObject">
      <MemberSignature Language="C#" Value="public object OriginalObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object OriginalObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ OriginalObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OriginalObject : obj" Usage="System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7f4b9-148">Возвращает объект, который содержит значения, изначально извлеченные из источника данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f4b9-148">Gets the object that contains the values that were originally retrieved from the data source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7f4b9-149">Объект типа, указанного свойством <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" />, который содержит данные, извлеченные из источника данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f4b9-149">An object of the type specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> property that contains the data that was retrieved from the data source.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f4b9-150">Можно использовать <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> свойство для проверки исходные значения со значениями в источнике данных и для отмены операции обновления или выполнять другие действия.</span><span class="sxs-lookup"><span data-stu-id="7f4b9-150">You can use the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> property to check the original values against the current values in the data source and to cancel the update operation or take other action.</span></span>  
  
 <span data-ttu-id="7f4b9-151"><xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> Свойство содержит значения для только свойства, которые сохраняются в представлении состояния в веб-страницы.</span><span class="sxs-lookup"><span data-stu-id="7f4b9-151">The <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> property contains values for only the properties that are persisted in view state in the Web page.</span></span> <span data-ttu-id="7f4b9-152">Свойство сохраняется в следующих случаях:</span><span class="sxs-lookup"><span data-stu-id="7f4b9-152">A property is persisted under these circumstances:</span></span>  
  
-   <span data-ttu-id="7f4b9-153">При отображении в элементе управления с привязкой к данным.</span><span class="sxs-lookup"><span data-stu-id="7f4b9-153">When it is displayed in a data-bound control.</span></span>  
  
-   <span data-ttu-id="7f4b9-154">Когда <xref:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck%2A?displayProperty=nameWithType> свойство <xref:System.Data.Linq.Mapping.ColumnAttribute?displayProperty=nameWithType> атрибуту присваивается `Always` или `WhenChanged`.</span><span class="sxs-lookup"><span data-stu-id="7f4b9-154">When the <xref:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck%2A?displayProperty=nameWithType> property of the <xref:System.Data.Linq.Mapping.ColumnAttribute?displayProperty=nameWithType> attribute is set to `Always` or `WhenChanged`.</span></span>  
  
 <span data-ttu-id="7f4b9-155">Если <xref:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck%2A> свойству `Never` и значение не отображается в элементе управления с привязкой к данным, значение не хранится на веб-странице.</span><span class="sxs-lookup"><span data-stu-id="7f4b9-155">If the <xref:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck%2A> property is set to `Never` and the value is not displayed in a data-bound control, the value is not stored in the Web page.</span></span> <span data-ttu-id="7f4b9-156">В этом случае он не может быть назначен <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="7f4b9-156">In that case, it cannot be assigned to the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7f4b9-157">В примере показан обработчик событий для <xref:System.Web.UI.WebControls.LinqDataSource.Updating> событий.</span><span class="sxs-lookup"><span data-stu-id="7f4b9-157">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="7f4b9-158">В примере показано сравнение свойств из <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> свойство и <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> свойства, чтобы определить ли значение в `Category` свойство изменилось.</span><span class="sxs-lookup"><span data-stu-id="7f4b9-158">The example shows how to compare properties from the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> property and the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property to determine whether the value in the `Category` property has changed.</span></span> <span data-ttu-id="7f4b9-159">Если Да, `CategoryChanged` свойству объекта в <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> свойству `true`.</span><span class="sxs-lookup"><span data-stu-id="7f4b9-159">If so, the `CategoryChanged` property of the object in the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property is set to `true`.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Updating/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Updating/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>