<Type Name="LinqDataSourceValidationException" FullName="System.Web.UI.WebControls.LinqDataSourceValidationException">
  <TypeSignature Language="C#" Value="public class LinqDataSourceValidationException : Exception, System.Web.DynamicData.IDynamicValidatorException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit LinqDataSourceValidationException extends System.Exception implements class System.Runtime.Serialization.ISerializable, class System.Web.DynamicData.IDynamicValidatorException" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSourceValidationException" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSourceValidationException&#xA;Inherits Exception&#xA;Implements IDynamicValidatorException" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSourceValidationException : Exception, System::Web::DynamicData::IDynamicValidatorException" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.DynamicData.IDynamicValidatorException</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="c8431-101">Описывает исключение, произошедшее во время проверки новых или измененных значений перед их вставкой, обновлением или удалением с помощью элемента управления <see cref="T:System.Web.UI.WebControls.LinqDataSource" />.</span><span class="sxs-lookup"><span data-stu-id="c8431-101">Describes an exception that occurred during validation of new or modified values before values are inserted, updated, or deleted by a <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8431-102"><xref:System.Web.UI.WebControls.LinqDataSourceValidationException> Класс содержит тип исключения задания преобразования и свойства.</span><span class="sxs-lookup"><span data-stu-id="c8431-102">The <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class contains type conversion and property setter exceptions.</span></span> <span data-ttu-id="c8431-103">Все исключения, возникающие во время проверки содержащихся в <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> коллекции.</span><span class="sxs-lookup"><span data-stu-id="c8431-103">All of the exceptions that are thrown during validation are contained in the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> collection.</span></span> <span data-ttu-id="c8431-104">Каждое исключение проверки можно получить с помощью итерации <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> коллекции.</span><span class="sxs-lookup"><span data-stu-id="c8431-104">You can retrieve each validation exception by iterating through the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> collection.</span></span>  
  
 <span data-ttu-id="c8431-105">Обычно вы обрабатываете исключения в <xref:System.Web.UI.WebControls.LinqDataSource.Updating>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>, и <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> события.</span><span class="sxs-lookup"><span data-stu-id="c8431-105">You typically handle exceptions in the <xref:System.Web.UI.WebControls.LinqDataSource.Updating>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>, and <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> events.</span></span> <span data-ttu-id="c8431-106">Если вызывается исключение проверки, `Exception` свойство <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs>, <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs>, или <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> объект содержит <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> объекта.</span><span class="sxs-lookup"><span data-stu-id="c8431-106">If a validation exception is thrown, the `Exception` property of the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs>, <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs>, or <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object contains a <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> object.</span></span> <span data-ttu-id="c8431-107">Если исключение не возникает, `Exception` свойство содержит `null`.</span><span class="sxs-lookup"><span data-stu-id="c8431-107">If no exception is thrown, the `Exception` property contains `null`.</span></span>  
  
 <span data-ttu-id="c8431-108">Для обработки исключения проверки, создайте обработчик для <xref:System.Web.UI.WebControls.LinqDataSource.Updating>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>, или <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> событий.</span><span class="sxs-lookup"><span data-stu-id="c8431-108">To handle validation exceptions, create a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>, or <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span> <span data-ttu-id="c8431-109">В обработчике событий, проверять ли `Exception` свойство класс аргументов этого события содержит значение, отличное от `null`.</span><span class="sxs-lookup"><span data-stu-id="c8431-109">In the event handler, check whether the `Exception` property of the event argument class contains a value other than `null`.</span></span> <span data-ttu-id="c8431-110">Если `Exception` свойство не имеет значение null, было порождено одно или несколько исключений проверки и можно получить исключение каждой проверки в <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="c8431-110">If the `Exception` property is not null, one or more validation exceptions were thrown and you can retrieve each validation exception in the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> property.</span></span>  
  
 <span data-ttu-id="c8431-111">Исключение проверки может произойти, если значение не соответствует типу свойства.</span><span class="sxs-lookup"><span data-stu-id="c8431-111">A validation exception can occur if a value does not match the type of the property.</span></span> <span data-ttu-id="c8431-112">Например попытка обновить целочисленное свойство, используя алфавитно цифровые символы вызывает исключение проверки.</span><span class="sxs-lookup"><span data-stu-id="c8431-112">For example, trying to update an integer property by using non-numeric characters causes a validation exception.</span></span> <span data-ttu-id="c8431-113">LINQ to SQL, класс может также содержать настроенные критерии проверки, убедитесь, что свойство содержит значение, которое находится в пределах ожидаемого диапазона или шаблон.</span><span class="sxs-lookup"><span data-stu-id="c8431-113">A LINQ to SQL class can also contain customized validation criteria that make sure that the property contains a value that is within an expected range or pattern.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c8431-114">В примере показан обработчик событий для <xref:System.Web.UI.WebControls.LinqDataSource.Updating> события.</span><span class="sxs-lookup"><span data-stu-id="c8431-114">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="c8431-115">Отображаются все сообщения об исключениях проверки с использованием <xref:System.Web.UI.WebControls.Label> элемента управления.</span><span class="sxs-lookup"><span data-stu-id="c8431-115">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Updating(ByVal sender As Object, _  
        ByVal e As LinqDataSourceUpdateEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message & "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Updating(object sender,   
        LinqDataSourceUpdateEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="c8431-116">Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" />.</span><span class="sxs-lookup"><span data-stu-id="c8431-116">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceValidationException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceValidationException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="c8431-117">Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> с системным сообщением, содержащим описание ошибки.</span><span class="sxs-lookup"><span data-stu-id="c8431-117">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> class with a system-supplied message that describes the error.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8431-118">Системное сообщение, описывающее ошибку учитывает текущую культуру системы.</span><span class="sxs-lookup"><span data-stu-id="c8431-118">The system-supplied message that describes the error takes into account the current system culture.</span></span>  
  
 <span data-ttu-id="c8431-119">В следующей таблице представлены исходные значения свойств для экземпляра класса <xref:System.Web.UI.WebControls.LinqDataSourceValidationException>.</span><span class="sxs-lookup"><span data-stu-id="c8431-119">The following table shows the initial property values for an instance of the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class.</span></span>  
  
|<span data-ttu-id="c8431-120">Свойство.</span><span class="sxs-lookup"><span data-stu-id="c8431-120">Property</span></span>|<span data-ttu-id="c8431-121">Значение</span><span class="sxs-lookup"><span data-stu-id="c8431-121">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="c8431-122">`null`.</span><span class="sxs-lookup"><span data-stu-id="c8431-122">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="c8431-123">Локализованное описание, предоставляемое системой.</span><span class="sxs-lookup"><span data-stu-id="c8431-123">A system-supplied localized description.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceValidationException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceValidationException(System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="c8431-124">Сообщение, описывающее ошибку.</span><span class="sxs-lookup"><span data-stu-id="c8431-124">The message that describes the error.</span></span></param>
        <summary><span data-ttu-id="c8431-125">Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> с использованием заданного сообщения, содержащего описание ошибки.</span><span class="sxs-lookup"><span data-stu-id="c8431-125">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> class with a specified message that describes the error.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8431-126">В следующей таблице представлены исходные значения свойств для экземпляра класса <xref:System.Web.UI.WebControls.LinqDataSourceValidationException>.</span><span class="sxs-lookup"><span data-stu-id="c8431-126">The following table shows the initial property values for an instance of the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class.</span></span>  
  
|<span data-ttu-id="c8431-127">Свойство.</span><span class="sxs-lookup"><span data-stu-id="c8431-127">Property</span></span>|<span data-ttu-id="c8431-128">Значение</span><span class="sxs-lookup"><span data-stu-id="c8431-128">Value</span></span>|  
|--------------|-----------|  
|<xref:System.Exception.InnerException%2A>|<span data-ttu-id="c8431-129">`null`.</span><span class="sxs-lookup"><span data-stu-id="c8431-129">`null`.</span></span>|  
|<xref:System.Exception.Message%2A>|<span data-ttu-id="c8431-130">Строка сообщения об ошибке, указанная в `message`.</span><span class="sxs-lookup"><span data-stu-id="c8431-130">The error message string specified in `message`.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LinqDataSourceValidationException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; LinqDataSourceValidationException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="c8431-131">Объект, содержащий сериализованные данные объекта.</span><span class="sxs-lookup"><span data-stu-id="c8431-131">The object that holds the serialized object data.</span></span></param>
        <param name="context"><span data-ttu-id="c8431-132">Контекстные сведения об источнике или назначении.</span><span class="sxs-lookup"><span data-stu-id="c8431-132">Context information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="c8431-133">Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> с сериализованными данными.</span><span class="sxs-lookup"><span data-stu-id="c8431-133">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> class with serialized data.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8431-134">Данный конструктор вызывается в процессе десериализации для воссоздания объекта исключения, переданного в потоке.</span><span class="sxs-lookup"><span data-stu-id="c8431-134">This constructor is called during deserialization to reconstitute the exception object that is transmitted over a stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceValidationException (string message, System.Collections.Generic.IDictionary&lt;string,Exception&gt; innerExceptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Collections.Generic.IDictionary`2&lt;string, class System.Exception&gt; innerExceptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.Exception})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerExceptions As IDictionary(Of String, Exception))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceValidationException(System::String ^ message, System::Collections::Generic::IDictionary&lt;System::String ^, Exception ^&gt; ^ innerExceptions);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerExceptions" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Exception&gt;" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="c8431-135">Сообщение, описывающее ошибку.</span><span class="sxs-lookup"><span data-stu-id="c8431-135">The message that describes the error.</span></span></param>
        <param name="innerExceptions"><span data-ttu-id="c8431-136">Коллекция исключений проверки.</span><span class="sxs-lookup"><span data-stu-id="c8431-136">The collection of validation exceptions.</span></span></param>
        <summary><span data-ttu-id="c8431-137">Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> с указанным сообщением, описывающим ошибку, и коллекцией ссылок на внутренние исключения.</span><span class="sxs-lookup"><span data-stu-id="c8431-137">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> class with a specified message that describes the error, and a collection of references to inner exceptions.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceValidationException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceValidationException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceValidationException(System::String ^ message, Exception ^ innerException);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="c8431-138">Сообщение, описывающее ошибку.</span><span class="sxs-lookup"><span data-stu-id="c8431-138">The message that describes the error.</span></span></param>
        <param name="innerException"><span data-ttu-id="c8431-139">Исключение, которое является причиной текущего исключения.</span><span class="sxs-lookup"><span data-stu-id="c8431-139">The exception that is the cause of the current exception.</span></span></param>
        <summary><span data-ttu-id="c8431-140">Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> с указанным сообщением об ошибке и ссылкой на внутреннее исключение.</span><span class="sxs-lookup"><span data-stu-id="c8431-140">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceValidationException" /> class with a specified error message and a reference to the inner exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8431-141">Обычно не используется этот конструктор, так как исключения проверки хранятся в <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> свойства, не <xref:System.Exception.InnerException%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="c8431-141">You typically will not use this constructor because validation exceptions are stored in the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> property, not the <xref:System.Exception.InnerException%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info"><span data-ttu-id="c8431-142">Объект, хранящий сериализованные данные объекта о выдаваемом исключении.</span><span class="sxs-lookup"><span data-stu-id="c8431-142">The object that holds the serialized object data for the exception that is being thrown.</span></span></param>
        <param name="context"><span data-ttu-id="c8431-143">Контекстные сведения об источнике или назначении.</span><span class="sxs-lookup"><span data-stu-id="c8431-143">Context information about the source or destination.</span></span></param>
        <summary><span data-ttu-id="c8431-144">Возвращает сведения об исключении и добавляет их в объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</span><span class="sxs-lookup"><span data-stu-id="c8431-144">Gets information about the exception and adds it to the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8431-145"><xref:System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData%2A> Метод добавляет сведения об исключении для <xref:System.Runtime.Serialization.SerializationInfo> , предназначенные для сериализации объекта.</span><span class="sxs-lookup"><span data-stu-id="c8431-145">The <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.GetObjectData%2A> method adds information about the exception to the <xref:System.Runtime.Serialization.SerializationInfo> object that is targeted for serialization.</span></span> <span data-ttu-id="c8431-146">В процессе десериализации исключение воссоздается из <xref:System.Runtime.Serialization.SerializationInfo> , переданного в потоке.</span><span class="sxs-lookup"><span data-stu-id="c8431-146">During deserialization, the exception is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> that is transmitted over the stream.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InnerExceptions">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IDictionary&lt;string,Exception&gt; InnerExceptions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IDictionary`2&lt;string, class System.Exception&gt; InnerExceptions" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InnerExceptions As IDictionary(Of String, Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IDictionary&lt;System::String ^, Exception ^&gt; ^ InnerExceptions { System::Collections::Generic::IDictionary&lt;System::String ^, Exception ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicValidatorException.InnerExceptions</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Exception&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="c8431-147">Возвращает одно или несколько исключений, произошедших при проверке новых или измененных данных.</span><span class="sxs-lookup"><span data-stu-id="c8431-147">Gets one or more exceptions that occurred when new or modified data was being validated.</span></span></summary>
        <value><span data-ttu-id="c8431-148">Коллекция, содержащая исключения.</span><span class="sxs-lookup"><span data-stu-id="c8431-148">A collection that contains the exceptions.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c8431-149"><xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> Коллекция содержит все исключения проверки, которые возникли во время проверки данных перед обновлением, операция вставки или удаления.</span><span class="sxs-lookup"><span data-stu-id="c8431-149">The <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> collection contains all the validation exceptions that were thrown during data validation before an update, insert, or delete operation.</span></span> <span data-ttu-id="c8431-150">Исключение проверки может произойти, если значение не соответствует типу свойства.</span><span class="sxs-lookup"><span data-stu-id="c8431-150">A validation exception can occur if a value does not match the type of the property.</span></span> <span data-ttu-id="c8431-151">Например при попытке обновить целочисленное свойство, используя алфавитно цифровые символы, вызывается исключение проверки.</span><span class="sxs-lookup"><span data-stu-id="c8431-151">For example, if you try to update an integer property by using non-numeric characters, a validation exception is thrown.</span></span> <span data-ttu-id="c8431-152">LINQ to SQL, класс может также содержать настроенные критерии проверки, убедитесь, что свойство содержит значение, которое находится в пределах ожидаемого диапазона или шаблон.</span><span class="sxs-lookup"><span data-stu-id="c8431-152">A LINQ to SQL class can also contain customized validation criteria that make sure that the property contains a value that is within an expected range or pattern.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c8431-153">В примере показан обработчик событий для <xref:System.Web.UI.WebControls.LinqDataSource.Updating> события.</span><span class="sxs-lookup"><span data-stu-id="c8431-153">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="c8431-154">Отображаются все сообщения об исключениях проверки с использованием <xref:System.Web.UI.WebControls.Label> элемента управления.</span><span class="sxs-lookup"><span data-stu-id="c8431-154">It displays any validation exception messages by using a <xref:System.Web.UI.WebControls.Label> control.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Updating(ByVal sender As Object, _  
        ByVal e As LinqDataSourceUpdateEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
                In e.Exception.InnerExceptions  
          Label1.Text &= innerException.Key & ": " & _   
                  innerException.Value.Message & "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Updating(object sender,   
        LinqDataSourceUpdateEventArgs e)   
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
            e.Exception.InnerExceptions)  
        {  
            Label1.Text += innerException.Key + ": " +   
                innerException.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>