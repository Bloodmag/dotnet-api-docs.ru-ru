<Type Name="ListViewUpdatedEventArgs" FullName="System.Web.UI.WebControls.ListViewUpdatedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5ca899166acff8e6ff0b9accd765e7dbfd110bcc" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36380948" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListViewUpdatedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListViewUpdatedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ListViewUpdatedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ListViewUpdatedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListViewUpdatedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ListViewUpdatedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет данные для события <see cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView> Управления вызывает <xref:System.Web.UI.WebControls.ListView.ItemUpdated> событий при <xref:System.Web.UI.WebControls.ListView.UpdateItem%2A> вызове метода или при обновлении в элементе управления кнопки, но после <xref:System.Web.UI.WebControls.ListView> управления обновляет элемент. (Кнопка обновления — это кнопка, `CommandName` свойству «Обновление».) Это позволяет создать метод обработки событий, выполняющий специальные действия при появлении этого события, такие как проверка результатов операции обновления.  
  
 Объект <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs> объект передается в метод обработки события. Этот объект позволяет определить число элементов, обновленных и получить все исключения, которые могли возникнуть. Чтобы определить количество элементов, затронутых операцией обновления, используйте <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows%2A> свойство. Чтобы определить, произошла ли все исключения, используйте <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception%2A> свойство. Можно указать, является ли исключение обработано в метод обработки событий, задав <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled%2A> свойство. Исходные значения полей доступны с помощью <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.OldValues%2A> свойство. Обновленное поле значения можно использовать с помощью <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.NewValues%2A> свойство.  
  
 По умолчанию <xref:System.Web.UI.WebControls.ListView> возвращается в режим только для чтения после выполнения операции обновления. Если обработать исключение, возникшее во время операции обновления, можно сохранить <xref:System.Web.UI.WebControls.ListView> элемент в режиме редактирования, задав <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode%2A> свойства `true`.  
  
 Список начальных значений свойств для экземпляра класса <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs> см. в описании конструктора <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.%23ctor%2A>.  
  
   
  
## Examples  
 В следующем примере показано, как использовать <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs> объектом, чтобы определить, произошло ли исключение во время операции обновления.  
  
> [!IMPORTANT]
>  В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemUpdated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdated/CS/ListViewItemUpdatedCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemUpdated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdated/VB/ListViewItemUpdatedVB.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ListView" />
    <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" />
    <altmember cref="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows" />
    <altmember cref="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception" />
    <altmember cref="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled" />
    <altmember cref="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewUpdatedEventArgs (int affectedRows, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 affectedRows, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListViewUpdatedEventArgs.#ctor(System.Int32,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewUpdatedEventArgs(int affectedRows, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ListViewUpdatedEventArgs : int * Exception -&gt; System.Web.UI.WebControls.ListViewUpdatedEventArgs" Usage="new System.Web.UI.WebControls.ListViewUpdatedEventArgs (affectedRows, exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="affectedRows">Количество строк, подвергшихся обновлению.</param>
        <param name="exception">Исключение, возникшее при выполнении операции обновления, если таковая имела место. Если исключения не было, используется значение <see langword="null" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.ListViewUpdatedEventArgs" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор используется для инициализации нового экземпляра <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs> класса.  
  
> [!NOTE]
>  Этот конструктор используется преимущественно разработчиками элементов управления при генерировании событий.  
  
 В следующей таблице представлены исходные значения свойств для экземпляра класса <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs>.  
  
|Свойство.|Исходное значение|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows%2A>|Значение параметра `affectedRows`.|  
|<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception%2A>|<xref:System.Exception?displayProperty=nameWithType> Объект, который содержится в `e` параметра.|  
|<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled%2A>|`false`.|  
|<xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode%2A>|`false`.|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AffectedRows : int" Usage="System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает количество строк, подвергшихся обновлению.</summary>
        <value>Количество строк, подвергшихся обновлению.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows%2A> свойство, чтобы определить количество строк, затронутых при выполнении операции обновления, возвращаемых источником данных. Поскольку обычно обновляется только один элемент, это свойство обычно содержит значение 0 или 1.  
  
 Иногда во время операции обновления может возникнуть ошибка, исключение не создается. В этом случае <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows%2A> свойство можно использовать, чтобы убедиться, что элемент был обновлен.  
  
   
  
## Examples  
 В следующем примере показано, как использовать <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows%2A> свойство, чтобы убедиться, что элемент был обновлен. Данный пример кода является частью большего примера, приведенного для <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs> класса.  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemUpdated#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdated/CS/ListViewItemUpdatedCS.aspx#2)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemUpdated#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdated/VB/ListViewItemUpdatedVB.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает исключение, при его наличии, возникшее во время операции обновления.</summary>
        <value>Исключение, возникшее во время операции обновления, при его наличии; если исключение отсутствует — значение <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception%2A> свойство для определения исключения (если есть), возникшее во время операции обновления. Если исключение не произошло, это свойство возвращает `null`.  
  
> [!NOTE]
>  Если возникло исключение, и обрабатывать исключение в обработчике событий <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled%2A> свойства `true`. В противном случае <xref:System.Web.UI.WebControls.ListView> управления повторно создает исключение.  
  
   
  
## Examples  
 В следующем примере показано, как использовать <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception%2A> свойства, чтобы определить, произошло ли исключение во время операции обновления. Данный пример кода является частью большего примера, приведенного для <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs> класса.  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemUpdated#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdated/CS/ListViewItemUpdatedCS.aspx#2)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemUpdated#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdated/VB/ListViewItemUpdatedVB.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, позволяющее определить, было ли исключение, возникшее во время операции обновления, обработано во время события.</summary>
        <value>Значение <see langword="true" />, если исключение обработано в обработчике событий; в противном случае — значение <see langword="false" />. Значение по умолчанию: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если исключение возникает во время операции обновления, используйте <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled%2A> свойство, указывающее, было ли обработано исключение во время события. Если это свойство имеет значение `true`, исключение считается обработанным и не вызывается повторно с <xref:System.Web.UI.WebControls.ListView> элемента управления. Если это свойство имеет значение `false`, <xref:System.Web.UI.WebControls.ListView> управления повторно создает исключение. Чтобы определить, какие исключения, используйте <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception%2A> свойство.  
  
   
  
## Examples  
 В следующем примере показано, как использовать <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.ExceptionHandled%2A> свойство, указывающее, что исключение обработано в обработчике событий. Данный пример кода является частью большего примера, приведенного для <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs> класса.  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemUpdated#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdated/CS/ListViewItemUpdatedCS.aspx#2)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemUpdated#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdated/VB/ListViewItemUpdatedVB.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.Exception" />
      </Docs>
    </Member>
    <Member MemberName="KeepInEditMode">
      <MemberSignature Language="C#" Value="public bool KeepInEditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepInEditMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeepInEditMode : bool with get, set" Usage="System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, позволяющее определить, должен ли элемент управления <see cref="T:System.Web.UI.WebControls.ListView" /> остаться в режиме редактирования после выполнения операции обновления.</summary>
        <value>Значение <see langword="true" />, если элемент управления должен остаться в режиме редактирования после выполнения операции обновления; в противном случае — значение <see langword="false" />. Значение по умолчанию: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию <xref:System.Web.UI.WebControls.ListView> управление возвращается в режим только для чтения после выполнения операции обновления. Задать <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode%2A> свойства `true` позволяет указать, что <xref:System.Web.UI.WebControls.ListView> элемент управления должен оставаться в режиме редактирования. Это также позволяет сохранить значения, введенные пользователем.  
  
   
  
## Examples  
 В следующем примере показано, как использовать <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.KeepInEditMode%2A> свойство для сохранения <xref:System.Web.UI.WebControls.ListView> элемента управления в режим редактирования при возникновении исключения. Данный пример кода является частью большего примера, приведенного для <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs> класса.  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemUpdated#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdated/CS/ListViewItemUpdatedCS.aspx#2)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemUpdated#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemUpdated/VB/ListViewItemUpdatedVB.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
      </Docs>
    </Member>
    <Member MemberName="NewValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary NewValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary NewValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.NewValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewValues As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ NewValues { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NewValues : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.ListViewUpdatedEventArgs.NewValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает словарь, содержащий новые значения обновленного элемента.</summary>
        <value>Новые значения обновленного элемента.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.NewValues%2A> свойство для доступа к новые значения поля обновленного элемента. Например эти значения можно использовать для ведения журнала обновленных элементов.  
  
 <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.NewValues%2A> Свойство возвращает объект, реализующий интерфейс <xref:System.Collections.Specialized.IOrderedDictionary> интерфейс. Объект содержит <xref:System.Collections.DictionaryEntry> объекты, представляющие поля обновленного элемента.  
  
> [!NOTE]
>  Для быстрого вызова можно использовать индексатор <xref:System.Collections.Specialized.IOrderedDictionary> непосредственно значения объекта для доступа к полю.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" />
      </Docs>
    </Member>
    <Member MemberName="OldValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary OldValues { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary OldValues" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewUpdatedEventArgs.OldValues" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OldValues As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ OldValues { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OldValues : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.ListViewUpdatedEventArgs.OldValues" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает словарь, содержащий исходные значения обновленного элемента.</summary>
        <value>Исходные значения обновленного элемента.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.OldValues%2A> свойство для доступа к исходные значения полей для обновленного элемента. Например эти значения можно использовать для ведения журнала обновленных элементов.  
  
 <xref:System.Web.UI.WebControls.ListViewUpdatedEventArgs.OldValues%2A> Свойство возвращает объект, реализующий интерфейс <xref:System.Collections.Specialized.IOrderedDictionary> интерфейс. Объект содержит <xref:System.Collections.DictionaryEntry> объекты, представляющие поля обновленного элемента.  
  
> [!NOTE]
>  Для быстрого вызова можно использовать индексатор <xref:System.Collections.Specialized.IOrderedDictionary> непосредственно значения объекта для доступа к полю.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemUpdated" />
      </Docs>
    </Member>
  </Members>
</Type>