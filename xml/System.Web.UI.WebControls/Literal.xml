<Type Name="Literal" FullName="System.Web.UI.WebControls.Literal">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="da4756060716171494e14cbbe327cdb95c3164c2" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36580505" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Literal : System.Web.UI.Control, System.Web.UI.ITextControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Literal extends System.Web.UI.Control implements class System.Web.UI.ITextControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Literal" />
  <TypeSignature Language="VB.NET" Value="Public Class Literal&#xA;Inherits Control&#xA;Implements ITextControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class Literal : System::Web::UI::Control, System::Web::UI::ITextControl" />
  <TypeSignature Language="F#" Value="type Literal = class&#xA;    inherit Control&#xA;    interface ITextControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ITextControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.LiteralDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.LiteralControlBuilder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Резервирует место на веб-странице для отображения статического текста.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В этом разделе.  
  
-   [Введение](#introduction)  
  
-   [Декларативный синтаксис](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Вступление  
 Используйте <xref:System.Web.UI.WebControls.Literal?displayProperty=nameWithType> управления для резервирования места на веб-странице для отображения текста. <xref:System.Web.UI.WebControls.Literal> Управления аналогичен <xref:System.Web.UI.WebControls.Label> управления, за исключением <xref:System.Web.UI.WebControls.Literal> управления не разрешает применение стиля отображаемого текста. Можно программно управлять текст, отображаемый в элементе управления, задав <xref:System.Web.UI.WebControls.Literal.Text%2A> свойство.  
  
> [!CAUTION]
>  Этот элемент управления можно использовать для отображения введенных данных, в которых может содержаться вредоносный клиентский сценарий. Проверьте все сведения, которые отправляются от клиента для исполняемых сценариев, инструкций SQL и другого кода перед его отображения в приложении. ASP.NET предоставляет возможность проверки входного запроса с блокировкой сценариев и HTML вводимые пользователем данные. К вводимым данным также имеются серверные элементы управления проверкой.  
  
 Дополнительные сведения о безопасности см. в разделе [защита стандартных элементов управления](http://msdn.microsoft.com/library/f3e7718f-63d0-44a3-bd5f-48cc2059c2a8), [как: защита от скриптов в веб-приложения путем применения HTML-кодирования строки](http://msdn.microsoft.com/library/6f67973f-dda0-45a1-ba9d-e88532d7dc5b), и [ Проверка пользовательского ввода в веб-страницах ASP.NET](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Декларативный синтаксис  
  
```  
<asp:Literal  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    Mode="Transform|PassThrough|Encode"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    SkinID="string"  
    Text="string"  
    Visible="True|False"  
/>  
```  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.Literal> элемента управления для отображения статического текста.  
  
> [!NOTE]
>  В следующем примере используется модель одного файла кода и могут работать неправильно, если скопировать непосредственно в файл кода. Этот пример кода необходимо скопировать в пустой текстовый файл с расширением .aspx. Дополнительные сведения о модели кода веб-форм см. в разделе [модель кода ASP.NET веб-форм страницы](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Literal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Literal/CS/literalcs.aspx#1)]
 [!code-aspx-vb[Literal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Literal/VB/literalvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Label" />
    <altmember cref="P:System.Web.UI.WebControls.Literal.Text" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Literal ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Literal.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Literal();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.Literal" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddParsedSubObject">
      <MemberSignature Language="C#" Value="protected override void AddParsedSubObject (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddParsedSubObject(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Literal.AddParsedSubObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddParsedSubObject (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddParsedSubObject(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.AddParsedSubObject : obj -&gt; unit" Usage="literal.AddParsedSubObject obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Объект <see cref="T:System.Object" />, представляющий проанализированный элемент.</param>
        <summary>Уведомляет элемент управления <see cref="T:System.Web.UI.WebControls.Literal" /> о том, что элемент XML или HTML проанализирован, и добавляет элемент в <see cref="T:System.Web.UI.ControlCollection" /> элемента управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как переопределить <xref:System.Web.UI.WebControls.Literal.AddParsedSubObject%2A> метод в пользовательский сервер управления, чтобы он всегда задает <xref:System.Web.UI.WebControls.Literal.Text%2A> проанализированный объект `Text` свойства, если анализируемый объект <xref:System.Web.UI.WebControls.Literal>и пустой `string` в противном случае.  
  
 [!code-aspx-csharp[CustomLiteralAddParsedSubObject#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomLiteralAddParsedSubObject/CS/custom_literal_addparsedsubobjectcs.aspx#1)]
 [!code-aspx-vb[CustomLiteralAddParsedSubObject#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomLiteralAddParsedSubObject/VB/custom_literal_addparsedsubobjectvb.aspx#1)]  
  
 [!code-csharp[CustomLiteralAddParsedSubObject#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomLiteralAddParsedSubObject/CS/custom_literal_addparsedsubobject.cs#2)]
 [!code-vb[CustomLiteralAddParsedSubObject#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomLiteralAddParsedSubObject/VB/custom_literal_addparsedsubobject.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Параметр <paramref name="obj" /> не является параметром типа <see cref="T:System.Web.UI.LiteralControl" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Literal.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="literal.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает объект <see cref="T:System.Web.UI.EmptyControlCollection" /> для текущего экземпляра элемента управления <see cref="T:System.Web.UI.WebControls.Literal" />.</summary>
        <returns>Объект <see cref="T:System.Web.UI.ControlCollection" /> для хранения дочерних серверных элементов управления текущего серверного элемента управления.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как переопределить <xref:System.Web.UI.WebControls.Literal.CreateControlCollection%2A> метод в пользовательский сервер управления, чтобы он всегда возвращал экземпляр <xref:System.Web.UI.EmptyControlCollection> класса для <xref:System.Web.UI.WebControls.Literal> объекта.  
  
 [!code-aspx-csharp[CustomLiteralCreateControlCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomLiteralCreateControlCollection/CS/custom_literal_createcontrolcollectioncs.aspx#1)]
 [!code-aspx-vb[CustomLiteralCreateControlCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomLiteralCreateControlCollection/VB/custom_literal_createcontrolcollectionvb.aspx#1)]  
  
 [!code-csharp[CustomLiteralCreateControlCollection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomLiteralCreateControlCollection/CS/custom_literal_createcontrolcollection.cs#2)]
 [!code-vb[CustomLiteralCreateControlCollection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomLiteralCreateControlCollection/VB/custom_literal_createcontrolcollection.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public override void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Literal.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Focus();" />
      <MemberSignature Language="F#" Value="override this.Focus : unit -&gt; unit" Usage="literal.Focus " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Устанавливает фокус ввода на элемент управления; метод базового элемента управления <see cref="M:System.Web.UI.WebControls.Literal.Focus" /> для элемента управления <see cref="T:System.Web.UI.WebControls.Literal" /> не поддерживается.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Literal> Управления переопределений <xref:System.Web.UI.Control.Focus%2A> метод базового класса. <xref:System.Web.UI.WebControls.Literal.Focus%2A> Метод <xref:System.Web.UI.WebControls.Literal> управления всегда создает исключение, чтобы указать, что <xref:System.Web.UI.WebControls.Literal.Focus%2A> метод не поддерживается для <xref:System.Web.UI.WebControls.Literal> элемента управления.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Метод <see cref="M:System.Web.UI.WebControls.Literal.Focus" /> был вызван объектом <see cref="T:System.Web.UI.WebControls.Literal" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.LiteralMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.LiteralMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Literal.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As LiteralMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::LiteralMode Mode { System::Web::UI::WebControls::LiteralMode get(); void set(System::Web::UI::WebControls::LiteralMode value); };" />
      <MemberSignature Language="F#" Value="member this.Mode : System.Web.UI.WebControls.LiteralMode with get, set" Usage="System.Web.UI.WebControls.Literal.Mode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LiteralMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение перечисления, определяющее порядок отрисовки содержимого для просмотра в элементе управления <see cref="T:System.Web.UI.WebControls.Literal" />.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Web.UI.WebControls.LiteralMode" />. Значение по умолчанию: <see langword="Transform" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.Literal.Mode%2A> свойство, чтобы указать способ содержимое <xref:System.Web.UI.WebControls.Literal> визуализироваться элемента управления. Это свойство задается с помощью одного из <xref:System.Web.UI.WebControls.LiteralMode> значений перечисления. В следующей таблице перечислены возможные значения.  
  
|Значение|Описание:|  
|-----------|-----------------|  
|`PassThrough`|Содержимое элемента управления не изменяются.|  
|`Encode`|Содержимое элемента управления преобразуются в HTML-кодированную строку.|  
|`Transform`|Неподдерживаемый язык разметки элементы удаляются из содержимого элемента управления. Если <xref:System.Web.UI.WebControls.Literal> элемент управления отрисовывается в браузере, поддерживающем HTML или XHTML, содержимое элемента управления, не будут изменены.|  
  
 При указании `PassThrough`, все содержимое <xref:System.Web.UI.WebControls.Literal.Text%2A> свойства передаются браузера или устройства без каких-либо изменений. Например если <xref:System.Web.UI.WebControls.Literal.Text%2A> свойство <xref:System.Web.UI.WebControls.Literal> содержит элемент управления `<hr>` тег, отправляется для всех устройств и браузеров ли он поддерживается или нет.  
  
 При указании `Encode`, содержимое для <xref:System.Web.UI.WebControls.Literal.Text%2A> свойства преобразуются в HTML-кодированную строку перед отрисовкой. Например если <xref:System.Web.UI.WebControls.Literal.Text%2A> свойство <xref:System.Web.UI.WebControls.Literal> управления содержит `<hr>` тега, он преобразуется в `&lt;Hr&gt;` и отправляются в устройстве или в браузере.  
  
 При указании `Transform`, поведение отрисовки <xref:System.Web.UI.WebControls.Literal.Text%2A> свойства зависит от типа разметки готовится к просмотру. Когда <xref:System.Web.UI.WebControls.Literal> визуализации элемента управления для устройства или браузера, поддерживающего HTML или XHTML, указав <xref:System.Web.UI.WebControls.LiteralMode.Transform> дает указание совпадает с поведением <xref:System.Web.UI.WebControls.LiteralMode.PassThrough>. Все теги и элементы для <xref:System.Web.UI.WebControls.Literal.Text%2A> свойство подготавливаются к просмотру для запрашивающего браузера.  
  
 Когда <xref:System.Web.UI.WebControls.Literal> элемент управления отрисовывается для языка разметки HTML или XHTML, например WML или cHTML, можно использовать <xref:System.Web.UI.WebControls.LiteralMode.Transform> значение для удаления элементов разметки не поддерживается. В этом случае любые элементы языка разметки служб <xref:System.Web.UI.WebControls.Literal.Text%2A> свойство, которое не поддерживаются целевым языком разметки не подготавливаются к просмотру для элемента управления. Например если <xref:System.Web.UI.WebControls.Literal.Text%2A> свойство <xref:System.Web.UI.WebControls.Literal> управления содержит `<hr>` тег тега удаляется перед отправкой содержимое устройства WML. Если неподдерживаемый тег содержит содержимое, удаляется только тег, а содержимое отправляется устройстве или в браузере. Например если <xref:System.Web.UI.WebControls.Literal.Text%2A> свойство с содержимым `<XYZ>Test</XYZ>`, `<XYZ>` и `</XYZ>` удаляются теги и текст «Test» отправляется на устройстве или в браузере.  
  
   
  
## Examples  
 В следующем примере кода показано, как задать <xref:System.Web.UI.WebControls.Literal> элемента управления <xref:System.Web.UI.WebControls.Literal.Mode%2A> свойство. <xref:System.Web.UI.WebControls.Literal.Mode%2A> Изначально задано значение `Encode` декларативный синтаксис для элемента управления. После загрузки страницы, пользователь может щелкнуть кнопку, чтобы задать <xref:System.Web.UI.WebControls.Literal.Mode%2A> свойства `PassThrough`. В результате содержимое <xref:System.Web.UI.WebControls.Literal.Text%2A> свойство для подготовки к просмотру по-разному.  
  
> [!NOTE]
>  В следующем примере используется модель одного файла кода и могут работать неправильно, если скопировать непосредственно в файл кода. Этот пример кода необходимо скопировать в пустой текстовый файл с расширением .aspx. Дополнительные сведения о модели кода веб-форм см. в разделе [модель кода ASP.NET веб-форм страницы](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-vb[Literal.Mode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Literal.Mode/VB/literal.modevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Указанный тип не является одним из значений перечисления <see cref="T:System.Web.UI.WebControls.LiteralMode" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.LiteralMode" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Literal.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="literal.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Объект <see cref="T:System.Web.UI.HtmlTextWriter" />, получающий содержимое серверного элемента управления.</param>
        <summary>Отправляет содержимое серверного  элемента управления в предоставленный объект <see cref="T:System.Web.UI.HtmlTextWriter" />, который записывает содержимое для отрисовки в клиенте.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как переопределить <xref:System.Web.UI.WebControls.Literal.Render%2A> метод в пользовательский сервер управления для отображения определенного текста всегда перед <xref:System.Web.UI.WebControls.Literal>.  
  
 [!code-aspx-csharp[CustomLiteralRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomLiteralRender/CS/custom_literal_rendercs.aspx#1)]
 [!code-aspx-vb[CustomLiteralRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomLiteralRender/VB/custom_literal_rendervb.aspx#1)]  
[!code-csharp[CustomLiteralRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomLiteralRender/CS/custom_literal_render.cs#2)]
[!code-vb[CustomLiteralRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomLiteralRender/VB/custom_literal_render.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Literal.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.Literal.Text" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.ITextControl.Text</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает заголовок, отображаемый в элементе управления <see cref="T:System.Web.UI.WebControls.Literal" />.</summary>
        <value>Заголовок, отображаемый в элементе управления <see cref="T:System.Web.UI.WebControls.Literal" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.Literal.Text%2A> свойство для задания или определения заголовка, отображаемого в <xref:System.Web.UI.WebControls.Literal> элемента управления. Это позволяет программно изменять заголовок во время выполнения.  
  
 Заголовок может быть преобразован из формата HTML в зависимости от того, как присвоить значение этому свойству. Если присвоить значение через атрибут <xref:System.Web.UI.WebControls.Literal> элемента управления, будет HTML, декодированный перед отображением. Например `<asp:Literal id="DisplayLiteral" Text="A&nbsp;B"/>` отображается как «A B» в браузере. Тем не менее если это свойство задано программным путем или поместив текст между открывающим и закрывающим тегами элемента управления, заголовок не HTML-декодирования. Например `<asp:Literal id="DisplayLiteral"> A&nbsp;B </asp:Literal>` отображается как «A&nbsp;B».  
  
> [!CAUTION]
>  Этот элемент управления можно использовать для отображения введенных данных, в которых может содержаться вредоносный клиентский сценарий. Проверьте все сведения, которые отправляются от клиента для исполняемых сценариев, инструкций SQL и другого кода перед его отображения в приложении. ASP.NET предоставляет возможность проверки входного запроса с блокировкой сценариев и HTML вводимые пользователем данные. К вводимым данным также имеются серверные элементы управления проверкой. Дополнительные сведения см. в разделе [синтаксис проверки серверного элемента управления](http://msdn.microsoft.com/library/96d2c59e-693c-4079-9b53-b3ff0d9e9133).  
  
 Значение этого свойства, если задано, можно автоматически сохраняются в файл ресурсов с помощью средств конструктора. Дополнительные сведения см. в разделе <xref:System.ComponentModel.LocalizableAttribute> и [глобализации и локализации](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Web.UI.WebControls.Literal.Text%2A> свойство программно изменить заголовок, отображаемый в <xref:System.Web.UI.WebControls.Literal> элемента управления.  
  
> [!NOTE]
>  В следующем примере используется модель одного файла кода и могут работать неправильно, если скопировать непосредственно в файл кода. Этот пример кода необходимо скопировать в пустой текстовый файл с расширением .aspx. Дополнительные сведения о модели кода веб-форм см. в разделе [модель кода ASP.NET веб-форм страницы](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417).  
  
 [!code-aspx-csharp[Literal#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Literal/CS/literalcs.aspx#1)]
 [!code-aspx-vb[Literal#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Literal/VB/literalvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>