<Type Name="ObjectDataSource" FullName="System.Web.UI.WebControls.ObjectDataSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="15236dc6073fb19c95955afb8e0d9d895643e546" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36381752" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ObjectDataSource : System.Web.UI.DataSourceControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataSource extends System.Web.UI.DataSourceControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectDataSource&#xA;Inherits DataSourceControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectDataSource : System::Web::UI::DataSourceControl" />
  <TypeSignature Language="F#" Value="type ObjectDataSource = class&#xA;    inherit DataSourceControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataSourceControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Selecting")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("TypeName")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ObjectDataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.ObjectDataSource))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет бизнес-объект, предоставляющий данные для элементов управления с привязкой к данным в многоуровневой архитектуре веб-приложений.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В этом разделе.  
  
-   [Введение](#introduction)  
  
-   [Назначение](#purpose)  
  
-   [Извлечение данных](#retrieving_data)  
  
-   [Выполнение операций с данными](#performing_data_operations)  
  
-   [Фильтрация данных](#filtering_data)  
  
-   [Кэширование](#caching)  
  
-   [Функции](#features)  
  
-   [Представление данных](#data_view)  
  
-   [С помощью LINQ to SQL](#using_linq_to_sql)  
  
-   [Декларативный синтаксис](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Вступление  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Управления работает с классом, который вы создаете. Создайте методы для получения и обновления данных и укажите имена этих методов для <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления в разметке. Во время подготовки к просмотру или обратной передачи <xref:System.Web.UI.WebControls.ObjectDataSource> вызывает методы, которые были выбраны.  
  
 Нет не визуализация элемента <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. В результате <xref:System.Web.UI.WebControls.ObjectDataSource> не поддерживает возможности visual, такие как <xref:System.Web.UI.DataSourceControl.EnableTheming%2A> или <xref:System.Web.UI.DataSourceControl.SkinID%2A> свойства.  
  
<a name="purpose"></a>   
## <a name="purpose"></a>Цель  
 Это очень распространенная практика разработки приложения — для разделения уровень представления данных от бизнес-логики и инкапсуляция бизнес-логики в бизнес-объектов. Эти бизнес-объекты образуют отдельный уровень между уровнем представления данных и уровнем данных, делая архитектуру трехуровневого приложения. <xref:System.Web.UI.WebControls.ObjectDataSource> Управления позволяет разработчикам использовать элемент управления источником данных ASP.NET, сохраняя их архитектура трехуровневого приложения.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Управления использует отражение для создания экземпляров бизнес-объектов и для вызова методов для их получения, обновления, вставки и удаления данных. <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> Свойство, обозначающее имя класса, <xref:System.Web.UI.WebControls.ObjectDataSource> работает с. <xref:System.Web.UI.WebControls.ObjectDataSource> Управления создает и уничтожает экземпляр класса для каждого вызова метода; он не сохраняет объект в памяти в течение времени существования веб-запроса. Это серьезным вопросом в ситуациях, если используется бизнес-объекта требуется много ресурсов или является затратным, создавать и уничтожать. С помощью ресурсоемкий объект может быть оптимальный выбор, но можно управлять жизненным циклом объекта с помощью <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, и <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> события.  
  
> [!NOTE]
>  Методы, которые идентифицируются по <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>, и <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> свойства могут быть методами экземпляра или `static` (`Shared` в Visual Basic) методов. Если методы являются `static` (`Shared` в Visual Basic), экземпляр бизнес-объекта не создается и <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, и <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> события не вызываются.  
  
<a name="retrieving_data"></a>   
## <a name="retrieving-data"></a>Получение данных  
 Чтобы получить данные из бизнес-объект, задайте <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> на имя метода, который получает данные. Если метод не возвращает <xref:System.Collections.IEnumerable> или <xref:System.Data.DataSet> объекта, объект упаковывается средой выполнения, <xref:System.Collections.IEnumerable> коллекции. Если подпись метода имеет параметры, можно добавить <xref:System.Web.UI.WebControls.Parameter> объектов <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> коллекции и затем связать их значения, которые требуется передать в метод, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство. Чтобы <xref:System.Web.UI.WebControls.ObjectDataSource> управления для использования параметров, параметры должны соответствовать имена и типы параметров в сигнатуре метода. Дополнительные сведения см. в разделе [использовании параметров](http://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Управления извлекает данные каждый раз, когда <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> вызывается метод. Этот метод обеспечивает программный доступ к методу, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство. Метод, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство вызывается автоматически элементами управления, привязанных к <xref:System.Web.UI.WebControls.ObjectDataSource> при их `DataBind` вызывается метод. Если задать `DataSourceID` свойства элемента управления с привязкой к данным элемент управления автоматически привязывается к данным из источника данных, при необходимости. Установка `DataSourceID` свойство является рекомендуемым методом для привязки <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления к элементу управления с привязкой к данным. Кроме того, можно задать `DataSource` свойство, но затем необходимо явным образом вызвать `DataBind` метод элемента управления с привязкой к данным. Можно вызвать <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод программным способом в любой момент, для получения данных.  
  
 Дополнительные сведения о привязке элементов управления с привязкой к данным для элементов управления источниками данных см. в разделе [привязки к данным с помощью элемента управления источником данных](http://msdn.microsoft.com/library/e41adfff-8fb8-449e-9cd1-9bd49788c5f7).  
  
<a name="performing_data_operations"></a>   
## <a name="performing-data-operations"></a>Выполнение операций с данными  
 В зависимости от возможностей бизнес-объекта, <xref:System.Web.UI.WebControls.ObjectDataSource> управления работает с, выполнением операций с данными, например обновления, вставки и удаления. Для выполнения этих операций с данными, задайте соответствующее имя метода и все связанные параметры для операции, которую требуется выполнить. Например, для операции обновления установить <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> на имя метод бизнес-объекта, выполняет обновления и добавить все необходимые параметры для <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> коллекции. Если <xref:System.Web.UI.WebControls.ObjectDataSource> управления связан с элементом управления с привязкой к данным, параметры добавляются с помощью элемента управления с привязкой к данным. В этом случае необходимо убедиться, что имена параметров метода соответствуют имена полей в элементе управления с привязкой к данным. Обновление выполняется при <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> метод вызывается явным образом в коде или автоматически с помощью элемента управления с привязкой к данным. Следует один и тот же общий шаблон для <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> и <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> операций. Бизнес-объектов, предполагается, что для выполнения этих типов данных операций по одной записи за раз, а не в пакетном режиме.  
  
<a name="filtering_data"></a>   
## <a name="filtering-data"></a>Фильтрация данных  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Управления можно отфильтровать данные, полученные с <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойства, если данные возвращаются в виде <xref:System.Data.DataSet> или <xref:System.Data.DataTable> объекта. Можно задать <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> свойства в выражении фильтрации с помощью формата строку синтаксис и привязка для значений в выражении для параметров, указанных в <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> коллекции.  
  
<a name="caching"></a>   
## <a name="caching"></a>Кэширование  
 Несмотря на то что <xref:System.Web.UI.WebControls.ObjectDataSource> не хранит экземпляр бизнес-объекта различных запросов, можно кэшировать результат вызова метода определяется <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство. Когда данные кэшированных последующие вызовы метода <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод возвращает кэшированные данные вместо создания бизнес-объекта и вызова его <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> с помощью отражения. Кэширование позволяет избежать создания объекта и вызова его метода данных за счет использования памяти на веб-сервере. <xref:System.Web.UI.WebControls.ObjectDataSource> Автоматически кэширует данные при <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> свойству `true`и <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> является свойство число секунд, в кэше хранятся данные перед отменой кэша. Можно также указать <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> свойство и необязательный <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> свойство. <xref:System.Web.UI.WebControls.ObjectDataSource> Управления позволяет кэшировать все типы данных, но не следует кэшировать объекты, в которых хранятся ресурсы или состояние, которое не может использоваться для обслуживания нескольких запросов (например, открытый <xref:System.Data.SqlClient.SqlDataReader> объекта), так как же экземпляр объекта будет использоваться для обслуживания нескольких запросов.  
  
<a name="features"></a>   
## <a name="features"></a>Функции  
 В следующей таблице описаны возможности <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
|Возможность|Требования|  
|----------------|------------------|  
|Выбор|Задать <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> на имя бизнес-объекта метод, который выбирает данные и включают все необходимые параметры в <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> коллекции программно или с помощью элемента управления с привязкой к данным.|  
|Сортировка|Задать <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> на имя параметра в <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> метод, который содержит критерии сортировки.|  
|Фильтрация|Задать <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> свойство выражения фильтрации и при необходимости добавлять параметры для <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> коллекции для фильтрации данных при <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> вызывается метод. Метода, указанного в <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство должно возвращать <xref:System.Data.DataSet> или <xref:System.Data.DataTable>.|  
|Разбивка на страницы|Разбиение по страницам источника данных поддерживается, если <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> метода содержит параметры для максимальное число записей для извлечения и индекс первой записи, для извлечения. Имена этих параметров необходимо указывать в <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> и <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> свойства, соответственно. Элемент управления с привязкой к данным могут иметь возможность выполнять разбиение по страницам, даже если <xref:System.Web.UI.WebControls.ObjectDataSource> управления не поддерживает разбиение по страницам непосредственно в методе, указанном свойством <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство. — Требование для элемента управления с привязкой к данным иметь возможность сделать это, метод, указанный в параметре <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойства возвращают объект, реализующий интерфейс <xref:System.Collections.ICollection> интерфейс.|  
|Updating|Задать <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> на имя бизнес-объекта метод, который обновляет данные и включить все необходимые параметры в <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> коллекции.|  
|Удаление|Задать <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> на имя бизнес-объект, метод или функция, которая удаляет данные и включают все необходимые параметры в <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> коллекции.|  
|Вставка|Задать <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> имя бизнес-объекта, метода или функции, который вставляет данные и включить все необходимые параметры в <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> коллекции.|  
|Кэширование|Задать <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> свойства `true`и <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> и <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> свойства в соответствии с поведение кэширования для кэшированных данных.|  
  
> [!NOTE]
>  При использовании <xref:System.Web.UI.WebControls.ObjectDataSource> класса для обновления или вставки данных строки, введенные на клиенте, не преобразуются автоматически из формата языка и региональных параметров клиента в формат языка и региональных параметров сервера. Например языка и региональных параметров клиента может укажите дд/мм/гггг формат даты, и возможно, на сервере в формате мм/дд/гггг. В этом случае 5 октября 2009 г. будет вводиться в <xref:System.Web.UI.WebControls.TextBox> управлять как 5/10/2009, но будет интерпретироваться как 10 мая 2009 г. 15 октября 2009 г. будет вводиться как 10/15/2009 и будет отклонена как недопустимая дата.  
  
<a name="data_view"></a>   
## <a name="data-view"></a>Представление данных  
 Как и для всех источников данных, <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления связано с классом представления источника данных. Хотя <xref:System.Web.UI.WebControls.ObjectDataSource> управления — это интерфейс, разработчик использует для работы с данными, <xref:System.Web.UI.WebControls.ObjectDataSourceView> класс — это интерфейс, элементы управления с привязкой к данным работают с. Кроме того <xref:System.Web.UI.WebControls.ObjectDataSourceView> класс описывает функциональные возможности элемента управления источником данных и выполняет фактическую работу. <xref:System.Web.UI.WebControls.ObjectDataSource> Элемент управления имеет только один связанный <xref:System.Web.UI.WebControls.ObjectDataSourceView>, и всегда имеет имя `DefaultView`. Хотя <xref:System.Web.UI.WebControls.ObjectDataSourceView> объект предоставляется <xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A> упаковываются и предоставляемые напрямую с помощью метода, многие свойства и методы <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. В фоновом <xref:System.Web.UI.WebControls.ObjectDataSourceView> объект выполняет все операции данных, включая получение, вставка, обновление, удаление, фильтрация и сортировка данных. Дополнительные сведения см. в разделе <xref:System.Web.UI.WebControls.ObjectDataSourceView>.  
  
<a name="using_linq_to_sql"></a>   
## <a name="using-linq-to-sql"></a>С помощью LINQ to SQL  
 Можно использовать <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления с помощью LINQ to SQL, класс. Чтобы сделать это, необходимо задать <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> свойства имя класса контекста данных. Можно также задать <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>, и <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> методы методы в классе контекста данных, для выполнения соответствующих операций. Необходимо создать обработчик событий для <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> событий, чтобы отменить удаление класса контекста данных. Этот шаг необходим потому, что LINQ to SQL поддерживает отложенное выполнение, тогда как <xref:System.Web.UI.WebControls.ObjectDataSource> управления пытается удалить контекст данных после выполнения операции выбора. Дополнительные сведения о том, как создать LINQ to SQL classes см. в разделе [как: создание классов LINQ to SQL в проекте веб-](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081). Пример того, как отменить удаление класса контекста данных см. в разделе <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> событий.  
  
## <a name="using-the-entity-framework"></a>С помощью платформы Entity Framework  
 Можно также использовать <xref:System.Web.UI.WebControls.ObjectDataSource> управления с платформой Entity Framework. Дополнительные сведения см. в разделе [с использованием платформы Entity Framework и элемент управления ObjectDataSource](http://go.microsoft.com/fwlink/?LinkId=209117).  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Декларативный синтаксис  
  
```  
<asp:ObjectDataSource  
    CacheDuration="string|Infinite"  
    CacheExpirationPolicy="Absolute|Sliding"  
    CacheKeyDependency="string"  
    ConflictDetection="OverwriteChanges|CompareAllValues"  
    ConvertNullToDBNull="True|False"  
    DataObjectTypeName="string"  
    DeleteMethod="string"  
    EnableCaching="True|False"  
    EnablePaging="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    FilterExpression="string"  
    ID="string"  
    InsertMethod="string"  
    MaximumRowsParameterName="string"  
    OldValuesParameterFormatString="string"  
    OnDataBinding="DataBinding event handler"  
    OnDeleted="Deleted event handler"  
    OnDeleting="Deleting event handler"  
    OnDisposed="Disposed event handler"  
    OnFiltering="Filtering event handler"  
    OnInit="Init event handler"  
    OnInserted="Inserted event handler"  
    OnInserting="Inserting event handler"  
    OnLoad="Load event handler"  
    OnObjectCreated="ObjectCreated event handler"  
    OnObjectCreating="ObjectCreating event handler"  
    OnObjectDisposing="ObjectDisposing event handler"  
    OnPreRender="PreRender event handler"  
    OnSelected="Selected event handler"  
    OnSelecting="Selecting event handler"  
    OnUnload="Unload event handler"  
    OnUpdated="Updated event handler"  
    OnUpdating="Updating event handler"  
    runat="server"  
    SelectCountMethod="string"  
    SelectMethod="string"  
    SkinID="string"  
    SortParameterName="string"  
    SqlCacheDependency="string"  
    StartRowIndexParameterName="string"  
    TypeName="string"  
    UpdateMethod="string"  
    Visible="True|False"  
>  
        <DeleteParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </DeleteParameters>  
        <FilterParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </FilterParameters>  
        <InsertParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </InsertParameters>  
        <SelectParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </SelectParameters>  
        <UpdateParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </UpdateParameters>  
</asp:ObjectDataSource>  
```  
  
   
  
## Examples  
 Проект Visual Studio Web сайта с исходным кодом доступен по следующему адресу: [загрузить](http://code.msdn.microsoft.com/Project/Download/FileDownload.aspx?ProjectName=aspnetmsdnexamples&DownloadId=14838).  
  
 В этом разделе показано <xref:System.Web.UI.WebControls.ObjectDataSource> в разметке в .aspx страницы и он показывает бизнес-объектов, которыми он работает. В примере показана страница ASPX. Он содержит <xref:System.Web.UI.WebControls.GridView> управления, к которому привязан <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. <xref:System.Web.UI.WebControls.ObjectDataSource> Разметку элемента управления задает имя бизнес-объекта и имя метод бизнес-объекта для вызова для получения данных.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]  
  
 В следующем примере показано бизнес-объекта <xref:System.Web.UI.WebControls.ObjectDataSource> использует элемент управления на странице ASPX. (Многие другие <xref:System.Web.UI.WebControls.ObjectDataSource> примеров кода также используйте этот бизнес-объект.) Пример состоит из двух следующих базовых классов:  
  
-   `EmployeeLogic` Классом является класс бизнес-логики, который <xref:System.Web.UI.WebControls.ObjectDataSource> использует.  
  
-   `NorthwindEmployee` Класс определяет объект данных, который возвращается методом `GetAllEmployees` метод `EmployeeLogic` класса.  
  
 Дополнительный `NorthwindDataException` класс предоставляется для удобства.  
  
 Этот набор примеров классов работает с базой данных Northwind Traders, который входит в состав Microsoft SQL Server и Microsoft Access. Полный рабочий пример необходимо скомпилировать и использовать эти классы с примера страницы .aspx, который предоставляется. Сведения о том, как установить базу данных Northwind Traders см. в разделе [как: установить образцы баз данных](http://msdn.microsoft.com/library/ed1291f6-604c-4972-ae22-0345c6dea12e).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/northwindemployee1.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/northwindemployee1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceControl" />
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSource (string typeName, string selectMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, string selectMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String, selectMethod As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSource(System::String ^ typeName, System::String ^ selectMethod);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSource : string * string -&gt; System.Web.UI.WebControls.ObjectDataSource" Usage="new System.Web.UI.WebControls.ObjectDataSource (typeName, selectMethod)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="selectMethod" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName">Имя класса, с которым работает объект <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</param>
        <param name="selectMethod">Имя метода или функции, вызываемых элементом управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> для извлечения данных.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> с заданными именем типа и именем метода извлечения данных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение `typeName` параметр может быть сокращенное имя типа для кода, который расположен в каталоге Bin или App_Code или полное имя типа для кода, который зарегистрирован в глобальном кэше сборок. Если вы используете в глобальном кэше сборок, необходимо добавить соответствующую ссылку на `assemblies` раздел файла конфигурации Machine.config или Web.config.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="CacheDuration">
      <MemberSignature Language="C#" Value="public virtual int CacheDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheDuration" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CacheDuration { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CacheDuration : int with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataSourceCacheDurationConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает длину промежутка времени (в секундах), в течение которого элемент управления источником данных кэширует данные, полученные с помощью свойства <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />.</summary>
        <value>Количество секунд, на протяжении которых объект <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> кэширует результаты вызова свойства <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />. Значение по умолчанию — 0. Значение не может быть отрицательным.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Элемент управления поддерживает кэширование данных. При кэшировании данных вызовы <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод извлекать данные из кэша, а не из бизнес-объекта, <xref:System.Web.UI.WebControls.ObjectDataSource> работает с. По истечении срока действия кэша <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод получает данные из бизнес-объекта и кэширует данные.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Управления автоматически кэширует данные при <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> свойству `true` и <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> свойству присвоено значение больше нуля, которое указывает количество секунд, что кэш хранит данные до записи кэша удаляется. Значение 0 указывает на бесконечную длительность существования кэша.  
  
 Кэш контролируется при помощи сочетания длительность и <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> параметр. Если <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> свойству <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> значение, <xref:System.Web.UI.WebControls.ObjectDataSource> кэширует данные при первом вызове для <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод и сохраняет его в памяти, не более в течение времени, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> свойство. Данные могут быть освобождены перед значение длительности, если требуется память. Кэш обновляется при следующем вызове <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метода. Если <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> свойству <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> значение, элемент управления источником данных кэширует данные при первом вызове для <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метода, но сбрасывает период, для которого он хранит кэша при каждом последующем вызове <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метода. Истечения срока действия кэша при отсутствии активности в течение времени, равный <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> свойство с момента последнего вызова <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как <xref:System.Web.UI.WebControls.ObjectDataSource> объект поддерживает кэширование. Во втором примере кода показано, как реализовать метод-оболочку, который возвращает <xref:System.Data.DataSet> объекта, чтобы включить кэширование, <xref:System.Web.UI.WebControls.ObjectDataSource> объекта.  
  
 В следующем примере кода показано, как <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления поддерживает кэширование. Чтобы включить кэширование, необходимо реализовать метод, который получает данные, который определяется <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство для возврата данных в виде <xref:System.Data.DataSet> объекта. В этом примере <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> свойству `true`и <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> и <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> свойств. <xref:System.Web.UI.WebControls.ObjectDataSource> Кэширует данные, возвращаемые по <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойства в течение 30 секунд.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/CS/objds6cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/VB/objds6vb.aspx#1)]  
  
 В следующем примере кода показано, как реализовать метод-оболочку, который возвращает <xref:System.Data.DataSet> объекта, чтобы включить кэширование, <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. В базовой реализации `EmployeeLogic` класса `GetAllEmployees` возвращает метод <xref:System.Collections.ArrayList> объекта. Вместо рефакторинг объект полностью для работы с <xref:System.Web.UI.WebControls.ObjectDataSource> на страницу Web Forms метод-оболочку с именем `GetAllEmployeesAsDataSet` добавляется, возвращающий набор `NorthwindEmployee` данные в виде <xref:System.Data.DataSet>.  
  
 Данный пример кода является частью большего примера, приведенного для <xref:System.Web.UI.WebControls.ObjectDataSource> класса.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/CS/northwindemployee5.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/VB/northwindemployee5.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
      </Docs>
    </Member>
    <Member MemberName="CacheExpirationPolicy">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheExpirationPolicy As DataSourceCacheExpiry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::DataSourceCacheExpiry CacheExpirationPolicy { System::Web::UI::DataSourceCacheExpiry get(); void set(System::Web::UI::DataSourceCacheExpiry value); };" />
      <MemberSignature Language="F#" Value="member this.CacheExpirationPolicy : System.Web.UI.DataSourceCacheExpiry with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceCacheExpiry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает поведение при истечении срока действия кэша, которая в сочетании со сроком кэширования описывает принципы работы кэша, используемого элементом управления источником данных.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Web.UI.DataSourceCacheExpiry" />. Значение по умолчанию: <see cref="F:System.Web.UI.DataSourceCacheExpiry.Absolute" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Элемент управления поддерживает кэширование данных. При кэшировании данных вызовы <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод извлекать данные из кэша, а не из бизнес-объекта, <xref:System.Web.UI.WebControls.ObjectDataSource> работает с. По истечении срока действия кэша <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод получает данные из бизнес-объекта и кэширует данные.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Управления автоматически кэширует данные при <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> свойству `true` и <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> свойству присвоено значение больше нуля, которое указывает количество секунд, что кэш хранит данные до записи кэша удаляется. Значение 0 указывает на срок существования кэша бесконечной длительности.  
  
 Кэш контролируется при помощи сочетания длительность и <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> параметр. Если <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> свойству <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> значение, <xref:System.Web.UI.WebControls.ObjectDataSource> кэширует данные при первом вызове для <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод и сохраняет его в памяти, не более в течение времени, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> свойство. Данные могут быть освобождены перед значение длительности, если требуется память. Кэш обновляется при следующем вызове <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метода. Если <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> свойству <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> значение, элемент управления источником данных кэширует данные при первом вызове для <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метода, но сбрасывает период, для которого он хранит кэш для каждого последующего вызова <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод. Истечения срока действия кэша при отсутствии активности в течение времени, равный <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> свойство с момента последнего вызова <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как <xref:System.Web.UI.WebControls.ObjectDataSource> объект поддерживает фильтрацию и кэширование. Во втором примере кода показано, как реализовать метод-оболочку, который возвращает <xref:System.Data.DataSet> объекта для включения кэширования и фильтрации с <xref:System.Web.UI.WebControls.ObjectDataSource> объекта.  
  
 В следующем примере кода показано, как <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления поддерживает фильтрацию и кэширование. Чтобы включить фильтрацию и кэширование, необходимо реализовать метод, который получает данные, который определяется <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство для возврата данных в виде <xref:System.Data.DataSet> объекта. В этом примере кэширование поскольку `EmployeeLogic` объект возвращает данные в виде <xref:System.Data.DataSet>, <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> свойству `true`и <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> и <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> свойств. <xref:System.Web.UI.WebControls.ObjectDataSource> Кэширует данные, возвращаемые по <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойства в течение 30 секунд.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/CS/objds6cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/VB/objds6vb.aspx#1)]  
  
 В следующем примере кода показано, как реализовать метод-оболочку, который возвращает <xref:System.Data.DataSet> объекта для включения кэширования и фильтрации с <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. В базовой реализации `EmployeeLogic` класса `GetAllEmployees` возвращает <xref:System.Collections.ArrayList>. Вместо рефакторинг объект полностью для работы с <xref:System.Web.UI.WebControls.ObjectDataSource> на страницу Web Forms метод-оболочку с именем `GetAllEmployeesAsDataSet` добавляется, возвращающий набор `NorthwindEmployee` данные в виде <xref:System.Data.DataSet>. Данный пример кода является частью большего примера, приведенного для <xref:System.Web.UI.WebControls.ObjectDataSource> класса.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/CS/northwindemployee5.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/VB/northwindemployee5.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
      </Docs>
    </Member>
    <Member MemberName="CacheKeyDependency">
      <MemberSignature Language="C#" Value="public virtual string CacheKeyDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CacheKeyDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheKeyDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CacheKeyDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CacheKeyDependency : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает определенную пользователем зависимость ключа, связанную со всеми объектами кэша данных, созданными элементом управления источником данных.</summary>
        <value>Ключ, по которому идентифицируются все объекты кэша, созданные элементом управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> Свойства можно задать любое произвольное строковое значение.  
  
 Срок действия всех объектов кэша истекает явным образом при истечении срока действия ключа. Это позволяет сделать недействительным записей кэша, которые создаются с <xref:System.Web.UI.WebControls.ObjectDataSource> из собственной страницы кода программным образом.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Элемент управления поддерживает кэширование данных. При кэшировании данных вызовы <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод извлекать данные из кэша, а не из бизнес-объекта, <xref:System.Web.UI.WebControls.ObjectDataSource> работает с. По истечении срока действия кэша <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод получает данные из бизнес-объекта и кэширует данные.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Управления автоматически кэширует данные при <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> свойству `true` и <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> свойству присвоено значение больше нуля, которое указывает количество секунд, что кэш хранит данные до записи кэша удаляется. Значение 0 указывает на бесконечную длительность существования кэша.  
  
 Можно задать <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> свойством, чтобы создать зависимость между все записи кэша, созданные <xref:System.Web.UI.WebControls.ObjectDataSource> управления и ключ. Все записи кэша может завершиться программным способом в любой момент по истечение срока действия ключа. Срок действия ключа с помощью <xref:System.Web.Caching.Cache.Remove%2A?displayProperty=nameWithType> метод с текущим <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> значение в качестве параметра.  
  
 Запись кэша, уникальный для каждой комбинации создается <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>, и <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> свойства. Несколько <xref:System.Web.UI.WebControls.ObjectDataSource> элементы управления можно использовать те же записи кэша в сценариях, где они загружают данные, используя тип, метод и параметры.  
  
   
  
## Examples  
 В следующих трех примерах веб-страницы, класс кода программной части страницы и класс доступа к данным, получить записи из таблицы Employees базы данных Northwind.  
  
 В первом примере веб-страницы, который содержит два <xref:System.Web.UI.WebControls.ObjectDataSource> элементов управления, <xref:System.Web.UI.WebControls.DropDownList> управления и <xref:System.Web.UI.WebControls.DetailsView> элемента управления. Первый <xref:System.Web.UI.WebControls.ObjectDataSource> управления и <xref:System.Web.UI.WebControls.DropDownList> управления используются для получения и отображения имен сотрудников из базы данных. Второй <xref:System.Web.UI.WebControls.ObjectDataSource> управления и <xref:System.Web.UI.WebControls.DetailsView> управления используются для получения и отображения запись сотрудника, выбранного пользователем.  
  
 Кэширование для <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. Таким образом каждая запись извлекается только один раз в базе данных. <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> Свойство имеет значение «EmployeeDetails», но любое строковое значение может работать в качестве ключа. Также включает веб-странице <xref:System.Web.UI.WebControls.Button> элемент управления, который пользователь может щелкнуть истечение срока действия кэшированных данных.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx#3)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx#3)]  
  
 Во втором примере показан обработчик для <xref:System.Web.UI.Control.Load> события и обработчик для <xref:System.Web.UI.WebControls.Button.Click> событие <xref:System.Web.UI.WebControls.Button> элемента управления. <xref:System.Web.UI.Control.Load> Обработчик событий создает элемент кэша с ключом, равным <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> значение. <xref:System.Web.UI.WebControls.Button.Click> Обработчик событий удаляет элемент кэша, ключ которого равен <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> значение. При удалении элемента кэша, истек срок действия кэшированных данных, зависимых от ключа.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx.cs#4)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx.vb#4)]  
  
 В третьем примере класс доступа к данным, который взаимодействует с базой данных "Борей". Этот класс использует LINQ для запроса к таблице сотрудников. В примере требуется LINQ to SQL, класс, представляющий базу данных Northwind и таблицу Employees. Дополнительные сведения см. в разделе [как: создание классов LINQ to SQL в проекте веб-](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.SqlCacheDependency" />
      </Docs>
    </Member>
    <Member MemberName="ConflictDetection">
      <MemberSignature Language="C#" Value="public System.Web.UI.ConflictOptions ConflictDetection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ConflictOptions ConflictDetection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictDetection As ConflictOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ConflictOptions ConflictDetection { System::Web::UI::ConflictOptions get(); void set(System::Web::UI::ConflictOptions value); };" />
      <MemberSignature Language="F#" Value="member this.ConflictDetection : System.Web.UI.ConflictOptions with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, позволяющее определить, передаются ли методу <see langword="Update" /> только новые значения или же метод <see langword="Update" /> получает и старые значения, и новые.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Web.UI.ConflictOptions" />. Значение по умолчанию: <see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство определяет, применяются ли параметры для старых и новых значений для метода, указанного в <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> свойство. Например, если метод, определяемое <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> возвращает <xref:System.Data.DataTable> управления со столбцами `Name` и `Number`и <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> свойству <xref:System.Web.UI.ConflictOptions.OverwriteChanges> , параметры создаются для `Name` и `Number` для `Update` метод. Если <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> свойству <xref:System.Web.UI.ConflictOptions.CompareAllValues> значение, параметры создаются для `Name`, `Number`, `original_Name`, и `original_Number`. (Зависит от точные имена параметров для исходных значений <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> свойство.) <xref:System.Web.UI.WebControls.ObjectDataSource> Затем определяет, является ли метод, указанный в <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> свойство имеет параметры, которые соответствуют.  
  
 Одновременное управление — метод, используемый хранилищами данных для управления чтением и изменения в хранилище, когда несколько пользователей получают доступ и управление те же данные данных. Например один клиент считывает данные и предоставляет пользователю, пока другой клиент считывает те же данные и представляет их с другим пользователем. Если для обоих пользователей обновлять данные и отправляют их в хранилище данных, неожиданный результат может произойти, так как оба клиента могут предоставлять разные значения для тех же данных. Это считается конфликтом. Установив <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> свойства <xref:System.Web.UI.ConflictOptions.CompareAllValues> значение `Update` метода можно сравнить старое и новое значения к исходному источнику данных для обнаружения конфликтов и обрабатывать их при необходимости.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> Делегирует свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, с которым связан <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ConflictOptions" />
      </Docs>
    </Member>
    <Member MemberName="ConvertNullToDBNull">
      <MemberSignature Language="C#" Value="public bool ConvertNullToDBNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertNullToDBNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull" />
      <MemberSignature Language="VB.NET" Value="Public Property ConvertNullToDBNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConvertNullToDBNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertNullToDBNull : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, позволяющее определить, выполняет ли элемент управления <see cref="T:System.Web.UI.WebControls.Parameter" /> автоматическое преобразование значений <see cref="F:System.DBNull.Value" />, переданных операции обновления, вставки или удаления и равных величине <see langword="null" />, в значение <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <value>Значение <see langword="true" />, если любое значение <see langword="null" /> в объекте <see cref="T:System.Web.UI.WebControls.Parameter" />, переданное элементу управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />, автоматически преобразуется в значение <see cref="F:System.DBNull.Value" />; в противном случае — значение <see langword="false" />. Значение по умолчанию: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Преобразование не `null` для <xref:System.DBNull.Value> значение может привести к ошибкам во время выполнения. Используйте <xref:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull%2A> свойство, указывающее ли <xref:System.Web.UI.WebControls.Parameter> значения, которые передаются операции удаления, вставки или обновления автоматически преобразуются из `null` для <xref:System.DBNull.Value> значение <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.DBNull.Value" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
      </Docs>
    </Member>
    <Member MemberName="DataObjectTypeName">
      <MemberSignature Language="C#" Value="public string DataObjectTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataObjectTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property DataObjectTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataObjectTypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataObjectTypeName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя класса, используемое элементом управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> в качестве параметра в операции обновления, вставки или удаления данных вместо передачи отдельных значений из элемента управления с привязкой к данным.</summary>
        <value>Полное или сокращенное имя класса, обозначающее тип объекта, который может использоваться объектом <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> в качестве параметра операции <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />, <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" /> или <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />. Значение по умолчанию — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вместо указания нескольких параметров, передаваемых в <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>, и <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> методов, можно создать один объект, который объединяет несколько значений полей данных. Методы, а не несколько параметров передается один объект.  
  
 Поведение по умолчанию <xref:System.Web.UI.WebControls.ObjectDataSource> — элемент управления, к которому привязан элемент управления с привязкой к данным, создает элемент управления с привязкой к данным <xref:System.Web.UI.WebControls.Parameter> объекта для каждого параметра в источнике данных. Если бизнес-объект имеет много полей, что получившийся метод также имеет много полей. <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> Свойство позволяет указать тип, который имеет свойство для каждого поля данных. Затем вместо того чтобы передавать несколько параметров метода, среда выполнения создает один объект и задает все его свойства. Один объект добавляется в коллекцию параметров для вызова данного метода.  
  
 Тип, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> свойство должно иметь конструктор по умолчанию, не имеющий параметров, поэтому <xref:System.Web.UI.WebControls.ObjectDataSource> управления можно создать экземпляр типа. Тип должен также иметь настраиваемые свойства, позволяющие <xref:System.Web.UI.WebControls.ObjectDataSource> управления для заполнения объекта со значениями, передаваемыми из элемента управления с привязкой к данным. Свойство имени на <xref:System.Web.UI.WebControls.ObjectDataSource> должны точно совпадать с именами параметров значений, переданных элементом управления с привязкой к данным элемента управления.  
  
 Когда <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> свойству и <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления связано с элементом управления с привязкой к данным, методы, которые определяются <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> и <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> свойства должны иметь один параметр типа, который указан в <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> свойство. Если <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> свойству <xref:System.Web.UI.ConflictOptions.OverwriteChanges> значение метода, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> свойство должно иметь один параметр типа, который указан в <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> свойство. Если <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> свойству <xref:System.Web.UI.ConflictOptions.CompareAllValues> значение метода, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> свойство должно быть два параметра типа, указанного в <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> свойство. В первом параметре содержатся исходные значения; Второй параметр содержит новые значения.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> Делегирует свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView> , связанный с <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
   
  
## Examples  
 Раздел содержит два примера кода. В первом примере кода показано, как реализовать тип, объединяющее все значения параметров в один объект, с помощью <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> свойство. Во втором примере кода показана веб-страница, которая использует два класса, используемых в первом примере кода.  
  
 В следующем примере кода показано, как реализовать тип, объединяющее все значения параметров в один объект, с помощью <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> свойство. Выберите метод `AggregateData` возвращает <xref:System.Data.DataTable> объект с двумя столбцами с именем `Name` и `Number`. Аналогичным образом `NewData` класс определяет два свойства чтения и записи, `Name` и `Number`. `Insert` Метод `AggregateData` класса принимает один параметр типа `NewData`. `TypeName` Свойство <xref:System.Web.UI.WebControls.ObjectDataSource> равно `AggregateData` и <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> свойству `NewData`.  
  
 [!code-csharp[ObjectDataSourceDataObjectTypeName#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/CS/AggregateData.cs#2)]
 [!code-vb[ObjectDataSourceDataObjectTypeName#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/VB/AggregateData.vb#2)]  
  
 В следующем примере кода показана веб-страница, который использует два классы, используемые в предыдущем примере кода.  
  
 [!code-aspx-csharp[ObjectDataSourceDataObjectTypeName#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/CS/AggregateDataPageCS.aspx#1)]
 [!code-aspx-vb[ObjectDataSourceDataObjectTypeName#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/VB/AggregateDataPageVB.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Delete();" />
      <MemberSignature Language="F#" Value="member this.Delete : unit -&gt; int" Usage="objectDataSource.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Выполняет операцию удаления путем вызова метода, заданного свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" /> с параметрами, содержащимися в коллекции <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />.</summary>
        <returns>Значение, соответствующее числу строк, удаляемых из базового хранилища данных, если в качестве значения свойства <see cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows" /> объекта <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> задано событие <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />; в противном случае — значение -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Прежде чем <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> выполняется операция, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A> метод вызывается для вызова <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> событий. Можно обработать <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> событий для проверки значений параметров и всевозможной перед <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> операции. Для выполнения операции удаления <xref:System.Web.UI.WebControls.ObjectDataSourceView> объект использует отражение для создания экземпляра объекта, который определяется параметром <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> свойство. Затем вызывается метод, который определяется параметром <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> свойство, используя любые связанные с ним <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> свойства. Если параметры удаления приходят из связанного элемента управления с привязкой к данным, имена параметров создается согласно <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> свойство. После <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> завершения операции <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> метод вызывается для вызова <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> событий. Можно обработать <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> событий все возвращаемые значения, выходные параметры и исключения, для анализа и выполнить любую необходимую обработку.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> Метод делегирует <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> метод <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, с которым связан <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
## <a name="data-bound-controls"></a>Элементы управления с привязкой к данным  
 Когда <xref:System.Web.UI.WebControls.ObjectDataSource> управления связан с элементом управления с привязкой к данным, таких как <xref:System.Web.UI.WebControls.GridView> управления, его не нужно вызывать <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> метода из кода страницы. <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> Метод вызывается напрямую с помощью элемента управления с привязкой к данным, вместо этого.  
  
 Дополнительные сведения о параметра слияния, время жизни объекта и разрешении методов см. в разделе <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Deleted;" />
      <MemberSignature Language="F#" Value="member this.Deleted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Deleted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при завершении операции <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> событий для проверки значений, возвращаемое значение или выходные параметры, или чтобы определить, было ли исключение после <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> завершения операции. Возвращаемое значение, выходные параметры и свойства обработки исключений доступны из <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> объекта, связанного с событием.  
  
 Можно использовать <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> необходимо вернуть количество строк, которые были удалены из <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> метод. Чтобы сделать это, задайте <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> свойство. Если число удаленных строк возвращается из метода, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> свойства, значение можно получить из <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> объекта.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как использовать <xref:System.Web.UI.WebControls.ObjectDataSource> объект с бизнес-объекта и <xref:System.Web.UI.WebControls.GridView> элемент управления для удаления данных. Во втором примере показывается код `EmployeeLogic` класс, используемый в первом примере кода.  
  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.ObjectDataSource> управления с бизнес-объекта и <xref:System.Web.UI.WebControls.GridView> элемент управления для удаления данных. Изначально <xref:System.Web.UI.WebControls.GridView> управления отображается набор всех сотрудников, с помощью метода, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство для получения данных из `EmployeeLogic` объекта. Поскольку <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> свойству `true`, <xref:System.Web.UI.WebControls.GridView> элементов управления автоматически отображает **удалить** кнопки.  
  
 Если щелкнуть **удаление** кнопки, то операция удаления выполняется с помощью метода, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> свойства и параметры, которые указаны в <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> коллекции. В этом примере кода также выполняет некоторые действия предварительной и последующей обработки. `NorthwindEmployeeDeleting` Делегат вызывается для обработки <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> событие до выполнения операции и `NorthwindEmployeeDeleted` делегат вызывается для обработки <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> событие после завершения операции для выполнения обработки исключений. В этом примере кода Если `NorthwindDataException` — исключение, оно обрабатывается `NorthwindEmployeeDeleted` метод.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 В следующем примере кода показан `EmployeeLogic` класс, используемый в предыдущем примере кода.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteMethod">
      <MemberSignature Language="C#" Value="public string DeleteMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeleteMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя метода или функции, вызываемого элемента управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> для удаления данных.</summary>
        <value>Строка, представляющая имя метода или функции, используемых объектом <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> для удаления данных. Значение по умолчанию — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Предполагается, что бизнес-объекта, удаление данных по одной записи за раз, а не в одном пакете.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> Делегирует свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, с которым связан <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
 Убедитесь, что имена параметров настроен для <xref:System.Web.UI.WebControls.ObjectDataSource> управления <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> коллекции совпадают с именами столбцов, возвращаемых методом select.  
  
## <a name="object-lifetime"></a>Время жизни объекта  
 Метод, который определяется параметром <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> свойство может быть методом экземпляра или `static` (`Shared` в Visual Basic) метод. Если это метод экземпляра, бизнес-объект создается и уничтожается при каждом <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> вызывается свойство. Можно обработать <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> и <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> событий для работы с бизнес-объекта перед <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> вызывается свойство. Также можно обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> событие, возникающее после <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> вызывается свойство. Если бизнес-объект реализует интерфейс <xref:System.IDisposable> интерфейс, <xref:System.IDisposable.Dispose%2A> метод вызывается до уничтожения объекта. Если метод является `static` (`Shared` в Visual Basic), метод бизнес-объекта не создается и не может обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, и <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> события.  
  
## <a name="parameter-merging"></a>Слияние параметров  
 Параметры добавляются <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> набор из трех источников:  
  
-   Из элемента управления с привязкой к данным, во время выполнения.  
  
-   Из `DeleteParameters` элемент, декларативно.  
  
-   Из `Deleting` метода декларативно.  
  
 Во-первых, любые параметры, которые создаются на основе элементов управления с привязкой к данным добавляются <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> коллекции. Например если <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления привязан к <xref:System.Web.UI.WebControls.GridView> управления со столбцами `Name` и `Number`, параметры для `Name` и `Number` добавляются в коллекцию. Точное имя параметра зависит <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> свойство. Тип данных из этих параметров является `string`. Далее, параметры, которые перечислены в `DeleteParameters` добавляются. Если параметр в `DeleteParameters` найден элемент с тем же именем в качестве параметра, который уже присутствует в <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> коллекции, существующий параметр изменяется в соответствии с параметром, который задается в `DeleteParameters` элемент. Обычно это используется для изменения типа данных в параметре. Наконец, можно программным образом добавлять и удалять параметры в <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> событие, возникающее перед <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> метода будет выполняться. Метод разрешается после выполняется слияние параметров. Разрешение метода рассматривается в следующем разделе.  
  
## <a name="method-resolution"></a>Метод разрешения  
 При <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> вызывается метод, поля данных из элемента управления с привязкой к данным, параметры, созданные декларативно в `DeleteParameters` элемента и параметры, которые были добавлены в <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> обработчик события будут объединены. (Дополнительные сведения см. в предыдущем разделе.) <xref:System.Web.UI.WebControls.ObjectDataSource> Затем пытается найти метод, вызываемый объект. Во-первых, он ищет один или несколько методов с именем, которое указано в <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> свойство. Если совпадение не найдено, <xref:System.InvalidOperationException> исключения. Если соответствие найдено, он выполняет поиск соответствующих имен параметров. Например, предположим, что тип, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> свойство имеет два метода с именем `DeleteARecord`. Один `DeleteARecord` имеет один параметр `ID`, а другой `DeleteARecord` имеет два параметра `Name` и `Number`. Если <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> коллекция имеет только один параметр с именем `ID`, `DeleteARecord` метод с только что `ID` именем параметра. Тип параметра не проверяется при разрешении методов. Порядок параметров не имеет значения.  
  
 Если <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> свойство задано, метод разрешается по-разному. <xref:System.Web.UI.WebControls.ObjectDataSource> Ищет метод с именем, которое указано в <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> свойство, которое принимает один параметр типа, который указан в <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> свойство. В этом случае имя параметра не имеет значения.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как использовать <xref:System.Web.UI.WebControls.ObjectDataSource> объект с бизнес-объекта и <xref:System.Web.UI.WebControls.GridView> элемент управления для удаления данных. Во втором примере показывается код `EmployeeLogic` класс, используемый в первом примере кода.  
  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.ObjectDataSource> управления с бизнес-объекта и <xref:System.Web.UI.WebControls.GridView> элемент управления для удаления данных. Изначально <xref:System.Web.UI.WebControls.GridView> управления отображается набор всех сотрудников, с помощью метода, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство для получения данных из `EmployeeLogic` объекта. Поскольку <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> свойству `true`, <xref:System.Web.UI.WebControls.GridView> элементов управления автоматически отображает **удалить** кнопки.  
  
 Если щелкнуть **удаление** кнопки, то операция удаления выполняется с помощью метода, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> свойства и параметры, которые указаны в <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> коллекции. В этом примере кода также выполняет некоторые действия предварительной и последующей обработки. `NorthwindEmployeeDeleting` Делегат вызывается для обработки <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> событий перед выполнением операции и `NorthwindEmployeeDeleted` делегат вызывается для обработки <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> событие после завершения операции для выполнения обработки исключений. В этом примере если `NorthwindDataException` — исключение, оно обрабатывается `NorthwindDataException` делегата.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 В следующем примере кода показан `EmployeeLogic` класс, используемый в предыдущем примере кода.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает коллекцию параметров, содержащую параметры, используемые методом <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />.</summary>
        <value>Коллекция <see cref="T:System.Web.UI.WebControls.ParameterCollection" />, содержащая параметры, используемые методом <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Имена и типы параметров, которые содержатся в <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> коллекции должны совпадать имена и типы параметров в <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> сигнатуру метода. Имена параметров зависят от <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> свойство и являются с учетом регистра. Параметры в коллекции, зависит от данных в элемент управления с привязкой к данным, заданных декларативно параметров и параметров, которые были добавлены программно. Дополнительные сведения см. в разделе «Параметр слияния» в <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> и [использовании параметров](http://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> Извлекает свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> , содержащийся в свойстве <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, с которым связан <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
 Дополнительные сведения о параметра слияния, время жизни объекта и разрешении методов см. в разделе <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как использовать <xref:System.Web.UI.WebControls.ObjectDataSource> объект с бизнес-объекта и <xref:System.Web.UI.WebControls.GridView> элемент управления для удаления данных. Во втором примере показывается код `EmployeeLogic` класс, используемый в первом примере кода.  
  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSource> управления с бизнес-объекта и <xref:System.Web.UI.WebControls.GridView> элемент управления для удаления данных. Изначально <xref:System.Web.UI.WebControls.GridView> управления отображается набор всех сотрудников, с помощью метода, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство для получения данных из `EmployeeLogic` объекта. Поскольку <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> свойству `true`, <xref:System.Web.UI.WebControls.GridView> элементов управления автоматически отображает **удалить** кнопки.  
  
 Если щелкнуть **удаление** кнопки, <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> событие вызывается с двумя параметрами. Один параметр `EmpID`, поступают из <xref:System.Web.UI.WebControls.DataGrid> управления и на основе <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A> свойство. Другой параметр поступают из декларативном <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> свойство. `EmployeeLogic` Класса перегрузки `DeleteEmployee` метод. Одна перегрузка принимает `NorthwindEmployee` параметра, а другой — <xref:System.Int32> параметр с именем `anID`. В <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> событий, записи в <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> свойство корректируются, чтобы включать только один параметр с именем `anID` со значением из `original_EmpID`. Если существует обработчик событий, соответствующих запросу `DeleteEmployee` вызывается метод.  
  
 В следующем примере кода показано, веб-страницы, которая отображает <xref:System.Web.UI.WebControls.DataGrid> управления и обрабатывает <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> событий.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_11#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/CS/objds11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_11#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/VB/objds11vb.aspx#1)]  
  
 В следующем примере кода показан `EmployeeLogic` класс, используемый в предыдущем примере кода.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_11#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/CS/northwindemployee11.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_11#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/VB/northwindemployee11.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Deleting;" />
      <MemberSignature Language="F#" Value="member this.Deleting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Deleting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит перед операцией <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> событий для выполнения дополнительной инициализации, относящиеся к приложению, для проверки значений параметров или для изменения значений параметров перед <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления выполняет операцию удаления. Параметры доступны в качестве <xref:System.Collections.IDictionary> коллекцию, которая обращается к <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> свойство, которое предоставляется <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> объекта.  
  
 Можно отменить операцию удаления, задав <xref:Microsoft.Win32.SessionEndingEventArgs.Cancel%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> для `true`.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как использовать <xref:System.Web.UI.WebControls.ObjectDataSource> объект с бизнес-объекта и <xref:System.Web.UI.WebControls.GridView> элемент управления для удаления данных. Во втором примере показывается код `EmployeeLogic` класс, используемый в первом примере кода.  
  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.ObjectDataSource> управления с бизнес-объекта и <xref:System.Web.UI.WebControls.GridView> элемент управления для удаления данных. Изначально <xref:System.Web.UI.WebControls.GridView> управления отображается набор всех сотрудников, с помощью метода, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство для получения данных из `EmployeeLogic` объекта. Поскольку <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> свойству `true`, <xref:System.Web.UI.WebControls.GridView> элементов управления автоматически отображает **удалить** кнопки.  
  
 Если щелкнуть **удаление** кнопки, то операция удаления выполняется с помощью метода, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> свойства и параметры, которые указаны в <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> коллекции. В этом примере кода также выполняет некоторые действия предварительной и последующей обработки. `NorthwindEmployeeDeleting` Делегат вызывается для обработки <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> событий перед выполнением операции и `NorthwindEmployeeDeleted` делегат вызывается для обработки <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> событие после завершения операции для выполнения обработки исключений. В этом примере кода Если `NorthwindDataException` — исключение, оно обрабатывается `NorthwindEmployeeDeleted` метод.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 В следующем примере кода показан `EmployeeLogic` класс, используемый в предыдущем примере кода.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="EnableCaching">
      <MemberSignature Language="C#" Value="public virtual bool EnableCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCaching" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableCaching { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableCaching : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение позволяющее определить, включено ли кэширование для элемента управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <value>Значение <see langword="true" />, если кэширование данных для элемента управления источником данных включено; в противном случае — значение <see langword="false" />. Значение по умолчанию: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Элемент управления поддерживает кэширование данных. При кэшировании данных вызовы <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод извлечения данных из кэша, а не <xref:System.Web.UI.WebControls.ObjectDataSource> создание экземпляра бизнес-объекта и вызов его метода данных. По истечении срока действия кэша <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод получает данные из бизнес-объекта и кэширует данные.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Управления автоматически кэширует данные при <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> свойству `true` и <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> свойству присвоено значение больше нуля, которое указывает количество секунд, что кэш хранит данные до записи кэша удаляется. Значение 0 указывает на бесконечную длительность существования кэша.  
  
   
  
## Examples  
 В следующих трех примерах веб-страницы, класс кода программной части страницы и класс доступа к данным, получить записи из таблицы Employees базы данных Northwind.  
  
 В первом примере веб-страницы, который содержит два <xref:System.Web.UI.WebControls.ObjectDataSource> элементов управления, <xref:System.Web.UI.WebControls.DropDownList> управления и <xref:System.Web.UI.WebControls.DetailsView> элемента управления. Первый <xref:System.Web.UI.WebControls.ObjectDataSource> управления и <xref:System.Web.UI.WebControls.DropDownList> управления используются для получения и отображения имен сотрудников из базы данных. Второй <xref:System.Web.UI.WebControls.ObjectDataSource> управления и <xref:System.Web.UI.WebControls.DetailsView> управления используются для получения и отображения запись сотрудника, выбранного пользователем.  
  
 Кэширование для <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. Таким образом каждая запись извлекается только один раз в базе данных. <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> Свойство имеет значение «EmployeeDetails», но любое строковое значение может работать в качестве ключа. Также включает веб-странице <xref:System.Web.UI.WebControls.Button> элемент управления, который пользователь может щелкнуть истечение срока действия кэшированных данных.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx#3)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx#3)]  
  
 Во втором примере показан обработчик для <xref:System.Web.UI.Control.Load> события и обработчик для <xref:System.Web.UI.WebControls.Button.Click> событие <xref:System.Web.UI.WebControls.Button> элемента управления. <xref:System.Web.UI.Control.Load> Обработчик событий создает элемент кэша с ключом, равным <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> значение. <xref:System.Web.UI.WebControls.Button.Click> Обработчик событий удаляет элемент кэша, ключ которого равен <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A> значение. При удалении элемента кэша, истек срок действия кэшированных данных, зависимых от ключа.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx.cs#4)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx.vb#4)]  
  
 В третьем примере класс доступа к данным, который взаимодействует с базой данных "Борей". Этот класс использует LINQ для запроса к таблице сотрудников. В примере требуется LINQ to SQL, класс, представляющий базу данных Northwind и таблицу Employees. Дополнительные сведения см. в разделе [как: создание классов LINQ to SQL в проекте веб-](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Свойству <see cref="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" /> присваивается значение <see langword="true" />, если метод, заданный свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> возвращает <see cref="T:System.Data.Common.DbDataReader" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
      </Docs>
    </Member>
    <Member MemberName="EnablePaging">
      <MemberSignature Language="C#" Value="public bool EnablePaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnablePaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnablePaging : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, поддерживает ли элемент управления источником данных разбиение по страницам извлекаемого им набора данных.</summary>
        <value>Значение <see langword="true" />, если элемент управления источником данных поддерживает разбиение по страницам извлекаемых им данных; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Разбивка на страницы с <xref:System.Web.UI.WebControls.ObjectDataSource> обработано элементом управления, задав <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A>, и <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> свойства <xref:System.Web.UI.WebControls.ObjectDataSource> и определение метода выбора в бизнес-объекта с соответствующими параметрами. Когда <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> свойству `true`, <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> коллекция включает два дополнительных параметра для первой строки, который запрошен и количество строк, которые запрашиваются. Эти два параметра именуются в соответствии с определением <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> и <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> свойства. `Select` Метод должен возвращать запрашиваемое количество строк, начиная с указанного индекса. Поскольку данные не могут равномерно разделить по размеру страницы, последняя страница может содержать меньше строк. Таким образом число строк, которые запрашиваются — фактически максимальное количество возвращаемых строк.  
  
 При включении разбиения на страницы в связанном элементе управления с привязкой к данным элемент управления с привязкой к данным вызывает `Select` метод, имеющий начальный индекс и количество строк, которые необходимы. Кроме того Если <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> имеет значение, элемент управления привязки данных вызывает метод перед отображением элементов управления страничного навигатора. Например если <xref:System.Web.UI.WebControls.GridView> управления имеет размер страницы равен 5, а также метод, который задается параметром включено разбиение на страницы <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> свойство возвращает 20, только 4 страницы отображаются в страничного навигатора.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> Делегирует свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта.  
  
   
  
## Examples  
 В следующих трех примерах веб-страницы, класс кода программной части страницы и класс доступа к данным, позволяющий пользователю выбрать количество записей, отображаются на странице.  
  
 Веб-страница содержит <xref:System.Web.UI.WebControls.ObjectDataSource> свойство <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> свойству `true`. <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Свойству присвоено имя метода, который возвращает общее количество записей в запросе. <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> Свойство и <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> свойство имена параметров, которые используются в методе Select. Данная страница также содержит <xref:System.Web.UI.WebControls.DropDownList> элемента управления.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]  
  
 Во втором примере показан обработчик для <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> событие <xref:System.Web.UI.WebControls.DropDownList> элемента управления. Код в обработчик задает <xref:System.Web.UI.WebControls.GridView.PageSize%2A> свойства выбранных пользователем.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]  
  
 В третьем примере класс доступа к данным, который получает данные из таблицы Customers. Он содержит метод с именем `GetSubsetOfEmployees`, которая назначается <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойства <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. В примере также содержит метод с именем `GetEmployeeCount`, которая назначается <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> свойства <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. Этот класс использует LINQ для запроса к таблице Customers. В примере требуется LINQ to SQL, класс, представляющий таблицу Customers и базы данных Northwind. Дополнительные сведения см. в разделе [как: создание классов LINQ to SQL в проекте веб-](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
      </Docs>
    </Member>
    <Member MemberName="FilterExpression">
      <MemberSignature Language="C#" Value="public string FilterExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FilterExpression : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает выражение фильтрации, применяемое при вызове метода, заданного свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />.</summary>
        <value>Строка, представляющая выражение фильтрации, которое применяется при извлечении данных с помощью метода или функции, заданных свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Элемент управления поддерживает фильтрации данных только тогда, когда <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> возвращает <xref:System.Data.DataSet> или <xref:System.Data.DataTable> объекта.  
  
 Синтаксис, используемый для <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> свойство представляет собой выражение – стиль строки формата. Синтаксис выражений фильтра является тот же синтаксис, который принимается <xref:System.Data.DataColumn.Expression%2A> свойство. При добавлении параметров для <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> коллекции, можно также включить заполнители строку формата. Например, включить `"{0}"` в выражении для замены значений параметров. Заменяются в соответствии с индексом параметра в <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> коллекции.  
  
 Можно включить параметры в <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> свойство. Если тип параметра является тип строки или символ, параметр нужно заключите в одинарные кавычки. Кавычки не требуются, если параметр имеет числовой тип.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> Коллекция содержит параметры, которые вычисляются заполнителями, которые находятся в <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> свойство.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> Делегирует свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, с которым связан <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
> [!NOTE]
>  Следует проверить все значения параметров фильтра, полученные от клиента. Среда выполнения просто подставляет значение параметра в выражении фильтра и применяет его к <xref:System.Data.DataSet> или <xref:System.Data.DataTable> объект, возвращаемый <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод. Если вы используете <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> свойство в качестве меры безопасности, чтобы ограничить число элементов, которые возвращаются, значения параметров необходимо проверить перед фильтрация выполняется.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется отображение отфильтрованных данных при помощи <xref:System.Web.UI.WebControls.ObjectDataSource> управления для получения данных из среднего уровня бизнес-объект и <xref:System.Web.UI.WebControls.GridView> элемента управления для отображения результатов. <xref:System.Web.UI.WebControls.ObjectDataSource> Управления можно фильтровать данные только в том случае, когда метод, который получает данные извлекает его как <xref:System.Data.DataSet> или <xref:System.Data.DataTable> объекта. По этой причине <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство, обозначающее метод бизнес-объекта, который получает данные в виде <xref:System.Data.DataSet>.  
  
 В примере состоит из <xref:System.Web.UI.WebControls.TextBox> управления, <xref:System.Web.UI.WebControls.GridView> управления, <xref:System.Web.UI.WebControls.ObjectDataSource> управления и **отправить** кнопки. По умолчанию <xref:System.Web.UI.WebControls.TextBox> заполняется именем одного из сотрудников компании Northwind Traders. <xref:System.Web.UI.WebControls.GridView> Отображает сведения о сотруднике, определяется по имени в <xref:System.Web.UI.WebControls.TextBox>. Для получения данных о другом сотруднике, введите полное имя сотрудника в <xref:System.Web.UI.WebControls.TextBox>, а затем нажмите кнопку **отправить** кнопки.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> Свойство указывает выражение, используемое для фильтрации данных, получаемых с помощью метода, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство. Она использует параметр заполнителями, которые вычисляются для параметров, которые содержатся в <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> коллекции. В этом примере прототип параметра ограничен одинарные кавычки, так как тип параметра имеет тип string, которое может содержать пробелы. Если тип параметра является типом числами или датами, ограничивающего кавычки не являются обязательными.  
  
> [!IMPORTANT]
>  В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 В следующем примере кода приведен пример среднего уровня бизнес-объекта, который используется в предыдущем примере кода. В примере кода состоит из двух базовых классов.  
  
-   `EmployeeLogic` Класса, который является классом, инкапсулирующим бизнес-логики.  
  
-   `NorthwindEmployee` Класс, который является моделью класса только базовые функциональные возможности, необходимые для загрузки и сохранения данных уровня данных.  
  
 Для простоты `EmployeeLogic` класс создает статический набор данных, а не извлечения данных из уровня данных. Это также полезно для этого примера, поскольку в нем нужно указать полное имя сотрудника в компании Northwind Traders для демонстрации фильтрации. Для полного рабочего примера необходимо скомпилировать и использовать эти классы с примерами кода веб-форм, которые предоставляются.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Значение свойства <see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" /> задано, а метод <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> не возвращает значение <see cref="T:System.Data.DataSet" /> или <see cref="T:System.Data.DataTable" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
      </Docs>
    </Member>
    <Member MemberName="Filtering">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Filtering As ObjectDataSourceFilteringEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceFilteringEventHandler ^ Filtering;" />
      <MemberSignature Language="F#" Value="member this.Filtering : System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler " Usage="member this.Filtering : System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит перед операцией фильтрации.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.Filtering> событий для выполнения операции проверки на значения параметра фильтра перед <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления выполняет операцию фильтрации. Выбранную операцию можно отменить, задав <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs> для `true`. Это событие возникает только в том случае, если <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> свойству.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.Filtering?displayProperty=nameWithType> Делегирует событий <xref:System.Web.UI.WebControls.ObjectDataSourceView.Filtering?displayProperty=nameWithType> событие <xref:System.Web.UI.WebControls.ObjectDataSourceView> , связанный с <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
> [!IMPORTANT]
>  Следует проверить все значения параметров фильтра, полученные от клиента. Среда выполнения просто подставляет значение параметра в выражении фильтра и применяет его к <xref:System.Data.DataSet> или <xref:System.Data.DataTable> объект, возвращаемый <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод. Если вы используете <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> свойство в качестве меры безопасности, чтобы ограничить число элементов, которые возвращаются, значения параметров необходимо проверить перед фильтрация выполняется.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
      </Docs>
    </Member>
    <Member MemberName="FilterParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection FilterParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ FilterParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilterParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию параметров, связанных с любыми прототипами параметров в строке <see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />.</summary>
        <value>Коллекция <see cref="T:System.Web.UI.WebControls.ParameterCollection" />, содержащая набор параметров, связанных с любыми местозаполнителями параметров, содержащимися в свойстве <see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Элемент управления поддерживает фильтрации данных только тогда, когда <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> возвращает <xref:System.Data.DataSet> или <xref:System.Data.DataTable> объекта.  
  
 Синтаксис, используемый для <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> выражение – стиль строки формата. Синтаксис выражений фильтра является тот же синтаксис, который принимается <xref:System.Data.DataColumn.Expression%2A> свойство. При добавлении параметров для <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> коллекции, можно также включить заполнители строку формата. Например, включить `"{0}"` в выражении для замены значений параметров. Заменяются в соответствии с индексом параметра в <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> коллекции.  
  
 Можно включить параметры в <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> свойство. Если параметр имеет тип строки или символ, параметр нужно заключите в одинарные кавычки. Кавычки не требуются, если параметр имеет числовой тип.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> Извлекает свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> , содержащийся в свойстве <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, с которым связан <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода демонстрируется отображение отфильтрованных данных при помощи <xref:System.Web.UI.WebControls.ObjectDataSource> объекта для получения данных из среднего уровня бизнес-объект и <xref:System.Web.UI.WebControls.GridView> элемента управления для отображения результатов. Во втором примере кода приведен пример среднего уровня бизнес-объект, используемый в первом примере кода.  
  
 В следующем примере кода демонстрируется отображение отфильтрованных данных при помощи <xref:System.Web.UI.WebControls.ObjectDataSource> управления для получения данных из среднего уровня бизнес-объект и <xref:System.Web.UI.WebControls.GridView> элемента управления для отображения результатов. <xref:System.Web.UI.WebControls.ObjectDataSource> Управления можно фильтровать данные только в том случае, когда метод, который получает данные извлекает его как <xref:System.Data.DataSet> или <xref:System.Data.DataTable> объекта. По этой причине <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство, обозначающее метод бизнес-объекта, который получает данные в виде <xref:System.Data.DataSet>.  
  
 В примере состоит из <xref:System.Web.UI.WebControls.TextBox> управления, <xref:System.Web.UI.WebControls.GridView> управления, <xref:System.Web.UI.WebControls.ObjectDataSource> управления и **отправить** кнопки. По умолчанию <xref:System.Web.UI.WebControls.TextBox> заполняется именем одного из сотрудников компании Northwind Traders. <xref:System.Web.UI.WebControls.GridView> Отображает сведения о сотруднике, определяется по имени в <xref:System.Web.UI.WebControls.TextBox>. Для извлечения данных о другом сотруднике в <xref:System.Web.UI.WebControls.TextBox>, введите полное имя сотрудника и затем нажмите кнопку **отправить** кнопки.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> Свойство указывает выражение, используемое для фильтрации данных, извлеченных методом <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство. Она использует параметр заполнителями, которые вычисляются для параметров, которые содержатся в <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> коллекции. В этом примере прототип параметра ограничен одинарные кавычки, так как тип параметра имеет тип string, которое может содержать пробелы. Если тип параметра является типом числами или датами, ограничивающего кавычки не являются обязательными. <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> Коллекция содержит один параметр <xref:System.Web.UI.WebControls.FormParameter> объекта, к которому привязан <xref:System.Web.UI.WebControls.TextBox> элемента управления.  
  
> [!IMPORTANT]
>  Следует проверить все значения параметров фильтра, полученные от клиента. Среда выполнения просто подставляет значение параметра в выражении фильтра и применяет его к <xref:System.Data.DataView> объект, возвращаемый <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод. Если вы используете <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> свойство в качестве меры безопасности, чтобы ограничить число элементов, которые возвращаются, значения параметров необходимо проверить перед фильтрация выполняется.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 В следующем примере кода приведен пример среднего уровня бизнес-объекта, который используется в предыдущем примере кода. В примере кода состоит из двух базовых классов.  
  
-   `EmployeeLogic` Класса, который является классом, инкапсулирующим бизнес-логики.  
  
-   `NorthwindEmployee` Класс, который является моделью класса только базовые функциональные возможности, необходимые для загрузки и сохранения данных уровня данных.  
  
 Для простоты `EmployeeLogic` класс создает статический набор данных, а не извлечения данных из уровня данных. Это также полезно для этого примера, поскольку в нем нужно указать полное имя сотрудника в компании Northwind Traders для демонстрации фильтрации. Для полного рабочего примера необходимо скомпилировать и использовать эти классы с примерами кода веб-форм, которые предоставляются.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Значение свойства <see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" /> задано, а метод <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> не возвращает значение <see cref="T:System.Data.DataSet" /> или <see cref="T:System.Data.DataTable" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="override this.GetView : string -&gt; System.Web.UI.DataSourceView" Usage="objectDataSource.GetView viewName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">Имя извлекаемого представления. Поскольку объект <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> поддерживает только одно представление, параметр <c>viewName</c> игнорируется.</param>
        <summary>Извлекает именованное представление источника данных, связанное с элементом управления источника данных.</summary>
        <returns>Представление <see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> с именем <see langword="DefaultView" />, связанное с <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Элемент управления поддерживает только одно представление источника данных. Как и для всех объектов представления источника данных, <xref:System.Web.UI.WebControls.ObjectDataSourceView> связанное с данными системы управления версиями, определяет его возможности, выполняет все действия, необходимые для получения данных из базового хранилища данных и выполняет операции, такие как сортировка, Вставка, удаление и обновление.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A> Метод предназначен для вызова элементов управления с привязкой к данным, не код страницы.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Значением указанного параметра <paramref name="viewName" /> является <see langword="null" /> или значение, отличное от <see langword="DefaultView" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="protected override System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::ICollection ^ GetViewNames();" />
      <MemberSignature Language="F#" Value="override this.GetViewNames : unit -&gt; System.Collections.ICollection" Usage="objectDataSource.GetViewNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает коллекцию имен, представляющую список объектов представления, связанных с объектом <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <returns>Объект <see cref="T:System.Collections.ICollection" />, содержащий имена представлений, связанных с элементом управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Элемент управления поддерживает только одно представление с именем `DefaultView`, на свои данные. <xref:System.Web.UI.WebControls.ObjectDataSource.GetViewNames%2A> Метод возвращает коллекцию одного элемента — это имя одно представление.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.GetViewNames%2A> Метод предназначен для вызова элементов управления с привязкой к данным, не код страницы.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.GetView(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Insert();" />
      <MemberSignature Language="F#" Value="member this.Insert : unit -&gt; int" Usage="objectDataSource.Insert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Выполняет операцию вставки путем вызова метода, который определяется свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" /> и всеми параметрами в коллекции <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />.</summary>
        <returns>Значение, представляющее число строк, вставленных в базовое хранилище данных.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Прежде чем <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> выполняется операция, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A> метод вызывается для вызова <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> событий. Можно обработать <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> событий для проверки значений параметров и всевозможной перед <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> операции. Для выполнения операции вставки <xref:System.Web.UI.WebControls.ObjectDataSourceView> объект использует отражение для создания экземпляра объекта, который определяется параметром <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> свойство. Затем вызывается метод, который определяется параметром <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> свойство, используя любые связанные с ним <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> свойства. После <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> завершения операции <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A> метод вызывается для вызова <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> событий. Можно обработать <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> событий все возвращаемые значения, выходные параметры и исключения, для анализа и выполнить любую необходимую обработку.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> Метод делегирует <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> метод <xref:System.Web.UI.WebControls.ObjectDataSourceView> , связанный с <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
 Дополнительные сведения о параметра слияния, время жизни объекта и разрешении методов см. в разделе <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>.  
  
## <a name="data-bound-controls"></a>Элементы управления с привязкой к данным  
 Когда <xref:System.Web.UI.WebControls.ObjectDataSource> объект связан с элементом управления с привязкой к данным, такие как <xref:System.Web.UI.WebControls.GridView> управления, его не нужно вызывать <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> метода из кода страницы. <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> Метод вызывается напрямую с помощью элемента управления с привязкой к данным, вместо этого.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Inserted;" />
      <MemberSignature Language="F#" Value="member this.Inserted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Inserted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при завершении <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> событий для проверки значений, возвращаемое значение или выходные параметры, или чтобы определить, было ли исключение после <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> завершения операции. Возвращаемое значение, выходные параметры и свойства обработки исключений доступны из <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> объекта, связанного с событием.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Inserting;" />
      <MemberSignature Language="F#" Value="member this.Inserting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Inserting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит перед операцией <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> событий для выполнения дополнительной инициализации, относящиеся к приложению, для проверки значений параметров или для изменения значений параметров перед <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления выполняет операцию вставки. Параметры доступны в качестве <xref:System.Collections.IDictionary> коллекцию, которая обращается к <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> свойство, которое предоставляется <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> объекта.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как использовать <xref:System.Web.UI.WebControls.ObjectDataSource> объект с бизнес-объекта и <xref:System.Web.UI.WebControls.DetailsView> управления для вставки данных. Во втором примере кода приведен пример среднего уровня бизнес-объекта, который используется в первом примере кода.  
  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.ObjectDataSource> управления с бизнес-объекта и <xref:System.Web.UI.WebControls.DetailsView> управления для вставки данных. Изначально <xref:System.Web.UI.WebControls.DetailsView> отображает новый `NorthwindEmployee` записей, а также автоматически созданный **вставить** кнопки. После ввода данных в поля <xref:System.Web.UI.WebControls.DetailsView> управлять, щелкните **вставить** кнопки. <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> Свойство определяет, какой метод выполняет операцию вставки.  
  
 В этом примере `UpdateEmployeeInfo` метод используется для выполнения инструкции insert; Однако он требует `NorthwindEmployee` параметра для вставки данных. По этой причине коллекцию строк, <xref:System.Web.UI.WebControls.DetailsView> управление передается автоматически не достаточно. `NorthwindEmployeeInserting` Делегат — <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> объект, обрабатывающий <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> событий и дает возможность управлять входных параметров перед <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> операции продолжается. Поскольку `UpdateEmployeeInfo` метод требует `NorthwindEmployee` объекта в виде параметра, один создается с помощью коллекции строк и добавляется в <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> коллекции с помощью имени параметра (`ne`), настроенный на метод. Аналогичные действия можно выполнять при использовании существующего объекта среднего уровня в качестве источника данных с типами и методами, которые не предназначены специально для использования с <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
 Когда <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> выполняется операция, метод, который определяется параметром <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> вызывается свойство. Если `Insert` метод объекта имеет сигнатуру метода, которая включает параметры, <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> коллекция должна содержать параметр, имена которых соответствуют параметры сигнатуры метода для <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> успешного выполнения метода.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/objds4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/objds4vb.aspx#1)]  
  
 В следующем примере кода приведен пример среднего уровня бизнес-объекта, который используется в предыдущем примере кода. В примере кода состоит из двух базовых классов.  
  
-   `EmployeeLogic` Класс, который является классом без сохранения состояния, который инкапсулирует бизнес-логики.  
  
-   `NorthwindEmployee` Класс, который является моделью класса только базовые функциональные возможности, необходимые для загрузки и сохранения данных уровня данных.  
  
 Дополнительный `NorthwindDataException` класс предоставляется для удобства. Полный рабочий пример необходимо скомпилировать и использования этих классов. `UpdateEmployeeInfo` Метод не реализован полностью, поэтому не будет вставлять данные в базе данных Northwind Traders, Экспериментируя с этим примером.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/northwindemployee4.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/northwindemployee4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertMethod">
      <MemberSignature Language="C#" Value="public string InsertMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InsertMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя метода или функции, вызываемого элемента управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> для вставки данных.</summary>
        <value>Строка, представляющая имя метода или функции, используемых объектом <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> для вставки данных. Значение по умолчанию — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Предполагается, что бизнес-объекта, вставка данных по одной записи за раз, а не в одном пакете.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> Делегирует свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, с которым связан <xref:System.Web.UI.WebControls.ObjectDataSource> объекта.  
  
## <a name="object-lifetime"></a>Время жизни объекта  
 Метод, который определяется параметром <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> свойство может быть методом экземпляра или `static` (`Shared` в Visual Basic) метод. Если это метод экземпляра, бизнес-объект создается и уничтожается при каждом методе, указанном свойством <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> вызывается свойство. Можно обработать <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> и <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> событий для работы с бизнес-объекта перед <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> вызывается свойство. Также можно обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> событие, возникающее после метода, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> вызывается свойство. Если бизнес-объект реализует интерфейс <xref:System.IDisposable> интерфейс, <xref:System.IDisposable.Dispose%2A> метод вызывается до уничтожения объекта. Если метод является `static` (`Shared` в Visual Basic), бизнес-объекта не создается и не может обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, и <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> события.  
  
## <a name="parameter-merging"></a>Слияние параметров  
 Параметры добавляются <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> набор из трех источников:  
  
-   Из элемента управления с привязкой к данным, во время выполнения.  
  
-   Из `InsertParameters` элемент, декларативно.  
  
-   Из `Inserting` метода, программными средствами.  
  
 Во-первых, любые параметры, которые создаются на основе элементов управления с привязкой к данным добавляются <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> коллекции. Например если <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления привязан к <xref:System.Web.UI.WebControls.GridView> управления со столбцами `Name` и `Number`, параметры для `Name` и `Number` добавляются в коллекцию. Тип данных из этих параметров является `string`. Далее, параметры, которые перечислены в `InsertParameters` добавляются. Если параметр в `InsertParameters` найден элемент с тем же именем в качестве параметра, который уже присутствует в <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> коллекции, существующий параметр изменяется в соответствии с параметром, который задается в `InsertParameters` элемент. Обычно это используется для изменения типа данных в параметре. Наконец, можно программным образом добавлять и удалять параметры в <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> событие, возникающее перед <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> метода будет выполняться. Метод разрешается после выполняется слияние параметров. Разрешение метода рассматривается в следующем разделе.  
  
> [!IMPORTANT]
>  Следует проверить все значения параметров, полученные от клиента. Среда выполнения просто подставляет значение параметра в <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> свойство.  
  
## <a name="method-resolution"></a>Метод разрешения  
 При <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> вызывается метод, поля данных из элемента управления с привязкой к данным, параметры, созданные декларативно в `InsertParameters` элемента и параметры, которые были добавлены в <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> обработчик события будут объединены. (Дополнительные сведения см. в предыдущем разделе.) <xref:System.Web.UI.WebControls.ObjectDataSource> Затем пытается найти метод, вызываемый объект. Во-первых, он ищет один или несколько методов с именем, которое указано в <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> свойство. Если совпадение не найдено, <xref:System.InvalidOperationException> исключения. Если соответствие найдено, он выполняет поиск соответствующих имен параметров. Например, предположим, что тип, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> свойство имеет два метода с именем `InsertARecord`. Один `InsertARecord` имеет один параметр `ID`, а другой `InsertARecord` имеет два параметра `Name` и `Number`. Если <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> коллекция имеет только один параметр с именем `ID`, `InsertARecord` метод с только что `ID` именем параметра. Тип параметра не проверяется при разрешении методов. Порядок параметров не имеет значения.  
  
 Если <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> свойство задано, метод разрешается по-разному. <xref:System.Web.UI.WebControls.ObjectDataSource> Ищет метод с именем, которое указано в <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> свойство, которое принимает один параметр типа, который указан в <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> свойство. В этом случае имя параметра не имеет значения.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как использовать <xref:System.Web.UI.WebControls.ObjectDataSource> объект с бизнес-объекта и <xref:System.Web.UI.WebControls.DetailsView> управления для вставки данных. Во втором примере кода приведен пример среднего уровня бизнес-объекта, который используется в первом примере кода.  
  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.ObjectDataSource> управления с бизнес-объекта и <xref:System.Web.UI.WebControls.DetailsView> управления для вставки данных. Изначально <xref:System.Web.UI.WebControls.DetailsView> отображает новый `NorthwindEmployee` записей, а также автоматически созданный **вставить** кнопки. После ввода данных в поля <xref:System.Web.UI.WebControls.DetailsView> управлять, щелкните **вставить** кнопки. <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> Свойство определяет, какой метод выполняет операцию вставки.  
  
 В этом примере `UpdateEmployeeInfo` метод используется для выполнения инструкции insert; Однако он требует `NorthwindEmployee` параметра для вставки данных. По этой причине коллекцию строк, <xref:System.Web.UI.WebControls.DetailsView> управление передается автоматически не достаточно. `NorthwindEmployeeInserting` Делегат — <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> объект, обрабатывающий <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> событий и дает возможность управлять входных параметров перед <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> операции продолжается. Поскольку `UpdateEmployeeInfo` метод требует `NorthwindEmployee` объекта в виде параметра, один создается с помощью коллекции строк и добавляется в <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> коллекции с помощью имени параметра (`ne`), настроенный на метод. Аналогичные действия можно выполнять при использовании существующего объекта среднего уровня в качестве источника данных с типами и методами, которые не предназначены специально для использования с <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
 Когда <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> выполняется операция, метод, который определяется параметром <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> вызывается свойство. Если `Insert` метод объекта имеет сигнатуру метода, которая включает параметры, <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> коллекция должна содержать параметр, имена которых соответствуют параметры сигнатуры метода для <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> успешного выполнения метода.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/objds4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/objds4vb.aspx#1)]  
  
 В следующем примере кода приведен пример среднего уровня бизнес-объекта, который используется в предыдущем примере кода. В примере кода состоит из двух базовых классов.  
  
-   `EmployeeLogic` Класс, который является классом без сохранения состояния, который инкапсулирует бизнес-логики.  
  
-   `NorthwindEmployee` Класс, который является моделью класса только базовые функциональные возможности, необходимые для загрузки и сохранения данных уровня данных.  
  
 Дополнительный `NorthwindDataException` класс предоставляется для удобства. Полный рабочий пример необходимо скомпилировать и использования этих классов. `UpdateEmployeeInfo` Метод не реализован полностью, поэтому не будет вставлять данные в базе данных Northwind Traders, Экспериментируя с этим примером.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/northwindemployee4.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/northwindemployee4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает коллекцию параметров, содержащую параметры, используемые свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />.</summary>
        <value>Объект <see cref="T:System.Web.UI.WebControls.ParameterCollection" />, содержащий параметры, используемые методом, заданным свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Имена и типы параметров, которые содержатся в <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> коллекции должны совпадать имена и типы параметров, которые находятся в <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> сигнатурой свойства. Имена параметров учитывается регистр символов. При работе с элементами управления с привязкой к данным, передавать параметры, такие как <xref:System.Web.UI.WebControls.GridView> и <xref:System.Web.UI.WebControls.DetailsView> элементов управления, <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления выполняет автоматическое объединение любые параметры, которые явно указан в коллекции с помощью параметров, которые Предоставляет элемент управления с привязкой к данным. Это важно, так как элементы управления с привязкой к данным всегда следует указывать свои параметры, как <xref:System.String> типы и, если сигнатура метода включает числовые или типы даты, необходимо явно включить параметр в <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> коллекции с нужным типом. В противном случае <xref:System.Web.UI.WebControls.ObjectDataSource> управления предпринимает попытку привести параметры в соответствии с типа, который определен с помощью параметров в коллекции. Дополнительные сведения см. в разделе [использовании параметров](http://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> Извлекает свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> , содержащийся в свойстве <xref:System.Web.UI.WebControls.ObjectDataSourceView> , связанный с <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
 Дополнительные сведения о параметра слияния, время жизни объекта и разрешении методов см. в разделе <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как использовать <xref:System.Web.UI.WebControls.ObjectDataSource> объект с бизнес-объекта и <xref:System.Web.UI.WebControls.DetailsView> управления для вставки данных. Во втором примере кода предоставляется пример реализации `Insert` метод, используемый в первом примере кода.  
  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.ObjectDataSource> управления с бизнес-объекта и <xref:System.Web.UI.WebControls.DetailsView> управления для вставки данных. Изначально <xref:System.Web.UI.WebControls.DetailsView> отображает текстовые поля, в которых можно ввести данные для нового `NorthwindEmployee` записей, а также автоматически созданный **вставить** кнопки. После ввода данных в поля <xref:System.Web.UI.WebControls.DetailsView> управлять, щелкните **вставить** кнопки. <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> Свойство определяет, какой метод выполняет операцию вставки.  
  
 Если щелкнуть **вставить** кнопки, операция выполняется с помощью метода, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> свойства и параметры, которые указаны в <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> коллекции. В этом примере кода указывается один параметр в <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> коллекции, соответствующий идентификатор руководителя. Причина в том, даже если идентификатор отображается в <xref:System.Web.UI.WebControls.GridView.Rows%2A> коллекции для <xref:System.Web.UI.WebControls.DetailsView> управление в качестве <xref:System.Web.UI.WebControls.BoundField> объекта, он передается как строка, <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. Путем добавления его явного <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> коллекции с <xref:System.Web.UI.WebControls.Parameter.Type%2A> свойство <xref:System.TypeCode.Int32> значение, оно передается правильно <xref:System.Web.UI.WebControls.ObjectDataSource> в качестве метода <xref:System.Int32>, а не как строка.  
  
 Когда <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> выполняется операция, метод, который определяется параметром <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> вызывается свойство. Если <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> метод объекта имеет сигнатуру метода, которая включает параметры, <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> коллекция должна содержать параметры, имена которых соответствуют параметрам подпись метода для <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> успешного выполнения метода.  
  
> [!IMPORTANT]
>  Следует проверить все значения параметров, полученные от клиента. Среда выполнения просто подставляет значение параметра в <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> свойство.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/CS/objds8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/VB/objds8vb.aspx#1)]  
  
 В следующем примере кода содержит пример реализации `Insert` метод, который используется в предыдущем примере кода. `InsertNewEmployeeWrapper` Добавляется метод `EmployeeLogic` объект среднего уровня, который содержится в <xref:System.Web.UI.WebControls.ObjectDataSource> Общие сведения о классе, чтобы включить объект для упрощения работы с <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления в сценариях веб-, без существенного перезаписи для фактического бизнес-логики.  
  
 Чтобы запустить пример, необходимо иметь `NorthwindEmployee` класс, который содержится в <xref:System.Web.UI.WebControls.ObjectDataSource> Общие сведения о классе. В этом примере показано только для подключения <xref:System.Web.UI.WebControls.ObjectDataSource> в метод бизнес-объекта, который получает данные для новой записи базы данных с помощью параметров. Пример не позволяет добавить записи в базу данных, так как `Save` метод `NorthwindEmployee` класса не включает код для обновления базы данных.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_8#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/CS/northwindemployee8.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_8#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/VB/northwindemployee8.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="objectDataSource.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Объект, содержащий сохраненные значения состояния представления для элемента управления.</param>
        <summary>Загружает предварительно сохраненное состояние представления элемента управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод используется главным образом инфраструктурой платформы .NET Framework и не предназначен для использования непосредственно из программного кода. Однако разработчики элементов управления можно переопределить этот метод, чтобы задать способ восстановления состояния представления в серверного элемента управления. Дополнительные сведения см. в разделе [управлении](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.LoadViewState%2A> Метод используется для загрузки ранее сохраненное состояние представления элемента <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.Web.UI.WebControls.ObjectDataSource.LoadViewState(System.Object)" /> Метод используется преимущественно разработчиками элементов управления при расширении <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> элемента управления.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="MaximumRowsParameterName">
      <MemberSignature Language="C#" Value="public string MaximumRowsParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MaximumRowsParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumRowsParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MaximumRowsParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumRowsParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("maximumRows")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя параметра метода извлечения данных бизнес-объекта, который позволяет задать число извлекаемых записей для обеспечения поддержки разбиения по страницам источника данных.</summary>
        <value>Имя параметра <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />, позволяющее задать число извлекаемых записей. Значение по умолчанию — <c>«maximumRows»</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> Свойство используется для поддержки разбиения по страницам источника данных. Сведения о том, как поддерживается разбиение на страницы <xref:System.Web.UI.WebControls.ObjectDataSource> управления см. в разделе <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> Делегирует свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, с которым связан <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
   
  
## Examples  
 В следующих трех примерах веб-страницы, класс кода программной части страницы и класс доступа к данным, позволяющий пользователю выбрать количество записей, отображаются на странице.  
  
 Веб-страница содержит <xref:System.Web.UI.WebControls.ObjectDataSource> свойство <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> свойству `true`. <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Свойству присвоено имя метода, который возвращает общее количество записей в запросе. <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> Свойство и <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> свойство имена параметров, которые используются в методе Select. Данная страница также содержит <xref:System.Web.UI.WebControls.DropDownList> элемента управления.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]  
  
 Во втором примере показан обработчик для <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> событие <xref:System.Web.UI.WebControls.DropDownList> элемента управления. Код в обработчик задает <xref:System.Web.UI.WebControls.GridView.PageSize%2A> свойства выбранных пользователем.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]  
  
 В третьем примере класс доступа к данным, который получает данные из таблицы Customers. Он содержит метод с именем `GetSubsetOfEmployees`, которая назначается <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойства <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. В примере также содержит метод с именем `GetEmployeeCount`, которая назначается <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> свойства <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. Этот класс использует LINQ для запроса к таблице Customers. В примере требуется LINQ to SQL, класс, представляющий таблицу Customers и базы данных Northwind. Дополнительные сведения см. в разделе [как: создание классов LINQ to SQL в проекте веб-](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
      </Docs>
    </Member>
    <Member MemberName="ObjectCreated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectCreated As ObjectDataSourceObjectEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceObjectEventHandler ^ ObjectCreated;" />
      <MemberSignature Language="F#" Value="member this.ObjectCreated : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " Usage="member this.ObjectCreated : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит после создания объекта, созданного свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> события вызывать другие методы в бизнес-объекте, задать свойства или выполнять другие инициализацию, которая относится к бизнес-объекта перед <xref:System.Web.UI.WebControls.ObjectDataSource> объект вызывает метод бизнес-объекта данных для выполнения операции с данными . Ссылка на объект осуществляется путем <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> свойство, которое предоставляется <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> объекта.  
  
 Если метод, который определен для выполнения операции с данными — `static` (`Shared` в Visual Basic), <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> и <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> события не вызываются.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing" />
      </Docs>
    </Member>
    <Member MemberName="ObjectCreating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectCreating As ObjectDataSourceObjectEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceObjectEventHandler ^ ObjectCreating;" />
      <MemberSignature Language="F#" Value="member this.ObjectCreating : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " Usage="member this.ObjectCreating : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит перед созданием объекта, созданного свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если метод, который определен для выполнения операции с данными — `static` (`Shared` в Visual Basic), <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> и <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> события не вызываются.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Управления автоматически вызывает конструктор по умолчанию для бизнес-объекта для создания экземпляра с помощью отражения. Обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> событий явно вызывает другой конструктор, и задайте экземпляр объекта, в результате чего <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> свойства связанного <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> объекта.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как использовать <xref:System.Web.UI.WebControls.ObjectDataSource> объект с бизнес-объекта и <xref:System.Web.UI.WebControls.GridView> для вывода сведений. Второй пример кода предоставляет среднего уровня бизнес-объект, который используется в первом примере кода.  
  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.ObjectDataSource> управления с бизнес-объекта и <xref:System.Web.UI.WebControls.GridView> для вывода сведений. Иногда приходится работать с бизнес-объекта, который очень дорого создавать (с точки зрения времени и ресурсов) для каждой операции с данными, выполняемой веб-страницы. Один из способов работы с затратным объектом может быть один раз создать его экземпляр и его кэширование для последующих операций вместо создания и удаления для каждой операции с данными.  
  
> [!NOTE]
>  В реальном приложении может оказаться несколько запросов одновременно, используя тот же экземпляр. Таким образом объект должен быть реализован в потокобезопасным способом.  
  
 Данный пример кода демонстрирует этот подход. Можно обработать <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> событий для проверки кэша для объекта сначала и создать экземпляр объекта, только если одно уже не кэшируется. Затем обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> событий для кэширования бизнес-объект для использования в будущем, а не его удаления. В этом примере кода <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> , присваивается значение `true` для направления <xref:System.Web.UI.WebControls.ObjectDataSource> не вызывать <xref:System.IDisposable.Dispose%2A> метод для обработки объекта.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/objds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/objds16vb.aspx#1)]  
  
 В следующем примере кода предоставляет объект среднего уровня бизнес-пример, в предыдущем примере кода. В примере состоит из базовый бизнес-объект, определяемый `EmployeeLogic` класс, который является классом с отслеживанием состояния, который инкапсулирует бизнес-логики. Для полного рабочего примера необходимо скомпилировать этот код как библиотеку и использовать эти классы со страницы ASP.NET (ASPX-файл).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/northwindemployee16.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/northwindemployee16.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />
      </Docs>
    </Member>
    <Member MemberName="ObjectDisposing">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectDisposing As ObjectDataSourceDisposingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceDisposingEventHandler ^ ObjectDisposing;" />
      <MemberSignature Language="F#" Value="member this.ObjectDisposing : System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler " Usage="member this.ObjectDisposing : System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит перед объявлением объекта, созданного свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> Событие всегда возникает перед отменой экземпляр бизнес-объекта. Если бизнес-объект реализует интерфейс <xref:System.IDisposable> интерфейс, <xref:System.IDisposable.Dispose%2A> метод вызывается после возникновения этого события.  
  
 Обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> события вызывать другие методы в объекте, задать свойства или выполнить очистку, характерное для объекта перед уничтожением объекта. Ссылка на объект осуществляется путем <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> свойство, которое предоставляется <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> объекта.  
  
 При использовании <xref:System.Web.UI.WebControls.ObjectDataSource> управления с помощью LINQ to SQL, класс, необходимо отменить удаление класса контекста данных в обработчике для <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> события. Этот шаг необходим потому, что LINQ to SQL поддерживает отложенное выполнение, тогда как <xref:System.Web.UI.WebControls.ObjectDataSource> управления пытается удалить контекст данных после выполнения операции выбора.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как использовать <xref:System.Web.UI.WebControls.ObjectDataSource> объект с бизнес-объекта и <xref:System.Web.UI.WebControls.GridView> для вывода сведений. Второй пример кода предоставляет среднего уровня бизнес-объект, который используется в первом примере кода.  
  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.ObjectDataSource> управления с бизнес-объекта и <xref:System.Web.UI.WebControls.GridView> для вывода сведений. Иногда приходится работать с бизнес-объекта, который очень дорого создавать (с точки зрения времени и ресурсов) для каждой операции с данными, выполняемой веб-страницы. Один из способов работы с затратным объектом может быть один раз создать его экземпляр и его кэширование для последующих операций вместо создания и удаления для каждой операции с данными. Этот пример демонстрирует этот подход. Можно обработать <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> событие, чтобы сначала проверьте кэша для объекта и создать его экземпляр, только если одно уже не кэшируется. Затем обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> событий для кэширования бизнес-объект для использования в будущем, а не его удаления. В этом примере кода <xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs> , присваивается значение `true` для направления <xref:System.Web.UI.WebControls.ObjectDataSource> не вызывать <xref:System.IDisposable.Dispose%2A> метод для обработки объекта.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/objds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/objds16vb.aspx#1)]  
  
 В следующем примере кода предоставляет объект среднего уровня бизнес-пример, в предыдущем примере кода. В примере состоит из базовый бизнес-объект, определяемый `EmployeeLogic` класс, который является классом с отслеживанием состояния, который инкапсулирует бизнес-логики. Для полного рабочего примера необходимо скомпилировать этот код как библиотеку и использовать эти классы со страницы ASP.NET (ASPX-файл).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/northwindemployee16.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/northwindemployee16.vb#2)]  
  
 В следующем примере показано, как обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> событий при использовании <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления с помощью LINQ to SQL, класс.  
  
```vb  
Public Sub ExampleObjectDisposing(ByVal sender As Object, _   
        ByVal e As ObjectDataSourceDisposingEventArgs)  
    e.Cancel = True  
End Sub  
```  
  
```csharp  
public void ExampleObjectDisposing(object sender,   
        ObjectDataSourceDisposingEventArgs e)  
{  
    e.Cancel = true;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated" />
      </Docs>
    </Member>
    <Member MemberName="OldValuesParameterFormatString">
      <MemberSignature Language="C#" Value="public string OldValuesParameterFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OldValuesParameterFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property OldValuesParameterFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OldValuesParameterFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OldValuesParameterFormatString : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("{0}")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает строку формата, применяемую к именам параметров для исходных значений, передаваемых методу <see langword="Delete" /> или <see langword="Update" />.</summary>
        <value>Строка, представляющая строку формата, применяемую к именам любых параметров <paramref name="oldValues" /> или параметров ключа, передаваемых методу <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" /> или <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />. Значение по умолчанию — <c>»{0}»</c>, что означает имя параметра является именем поля.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> свойство применяется с первичными ключами, например те, которые идентифицируются с помощью `DataKeyNames` свойство элемента управления с привязкой к данным или в delete и сценарии обновления где <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> свойству <xref:System.Web.UI.ConflictOptions.CompareAllValues> значение, а также ряд исходные значения передаются в соответствующий метод данных.  
  
 Ниже приведены два типичных сценария, где можно изменить <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> свойство:  
  
-   Может потребоваться изменить свойство, чтобы различать старое и новое значения в обновлениях. Когда <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> свойству <xref:System.Web.UI.ConflictOptions.CompareAllValues> значение, параметры для исходные и новые значения добавляются к <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> коллекции. Без строки форматирования два параметра с тем же именем будут создаваться для каждого поля данных. Можно изменить имя параметра исходного значения, можно сравнить данные к исходному источнику данных для обнаружения конфликтов и сравнения значений ключей.  
  
-   Некоторые визуальные конструкторы реализуют определенную схему именования для исходного значения и ключи.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> Делегирует свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, с которым связан <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="objectDataSource.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.EventArgs" />, содержащий данные событий.</param>
        <summary>Добавляет обработчик событий <see cref="E:System.Web.UI.Page.LoadComplete" /> на страницу, содержащую элемент управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 Метод <xref:System.Web.UI.WebControls.ObjectDataSource.OnInit%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Web.UI.WebControls.ObjectDataSource.OnInit(System.EventArgs)" /> метод в производном классе нужно убедиться, что для вызова <see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" /> метод базового класса, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
        <altmember cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ParsingCulture">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParsingCulture ParsingCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ParsingCulture ParsingCulture" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.ParsingCulture" />
      <MemberSignature Language="VB.NET" Value="Public Property ParsingCulture As ParsingCulture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParsingCulture ParsingCulture { System::Web::UI::WebControls::ParsingCulture get(); void set(System::Web::UI::WebControls::ParsingCulture value); };" />
      <MemberSignature Language="F#" Value="member this.ParsingCulture : System.Web.UI.WebControls.ParsingCulture with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.ParsingCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParsingCulture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, какие данные языка и региональные параметры используются при преобразовании строковых значений к фактическим типам свойств для построения объекта типа, указанного <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" />.</summary>
        <value>Сведения о языке и региональных параметрах. Значение по умолчанию — <see cref="F:System.Web.UI.WebControls.ParsingCulture.Invariant" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="objectDataSource.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Сохраняет состояние элемента управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <returns>Возвращает текущее состояние представления элемента управления; в противном случае, если с элементом управления не связано ни одно состояние представления, — значение <see langword="null" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IStateManager.SaveViewState" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
      <MemberSignature Language="VB.NET" Value="Public Function Select () As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Select();" />
      <MemberSignature Language="F#" Value="member this.Select : unit -&gt; System.Collections.IEnumerable" Usage="objectDataSource.Select " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает данные из базового хранилища данных, вызвав метод, указанный в свойстве <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />, с параметрами, заданными в коллекции <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />.</summary>
        <returns>Список строк данных <see cref="T:System.Collections.IEnumerable" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Указанный метод может быть любая сигнатура, однако он должен возвращать или быть производным от одного из типов, перечисленных в следующей таблице для <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления для успешного вызова.  
  
|Тип возвращаемого значения|Действие|  
|-----------------|------------|  
|<xref:System.Collections.IEnumerable>|<xref:System.Collections.IEnumerable> Возвращается <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод.|  
|<xref:System.Data.DataTable>|Объект <xref:System.Data.DataView> создается с помощью <xref:System.Data.DataTable> и возвращенный <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод.|  
|<xref:System.Data.DataView>|<xref:System.Data.DataView> Возвращается <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод.|  
|<xref:System.Data.DataSet>|Первый <xref:System.Data.DataTable> из <xref:System.Data.DataSet> извлекается и <xref:System.Data.DataView> создается и возвращается путем <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод.|  
|<xref:System.Object>|Объект упаковывается в один элемент <xref:System.Collections.IEnumerable> коллекции и возвращенный <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод.|  
  
 Метод, который определяется параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство может быть методом экземпляра или `static` (`Shared` в Visual Basic) метод. Если это метод экземпляра, бизнес-объект создается и уничтожается каждый раз, метод, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> вызывается свойство, за исключением того, что тот же экземпляр будет использоваться для вызова метода, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство и метод, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> свойство. <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Возвращает <xref:System.Collections.IEnumerable> интерфейса. Тем не менее, чтобы включить скрипты кэширования и фильтрации, возвращаемое значение должны быть <xref:System.Data.DataSet> объекта. Хотя <xref:System.Data.DataSet> класс не реализует <xref:System.Collections.IEnumerable> интерфейс, <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления автоматически извлекает значение по умолчанию <xref:System.Data.DataView> управления, который реализует <xref:System.Collections.IEnumerable>.  
  
 Прежде чем <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> выполняется операция, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A> метод вызывается для вызова <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> событий. Можно обработать <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> событий для проверки значений параметров и всевозможной перед <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> операции. Для выполнения операции извлечения <xref:System.Web.UI.WebControls.ObjectDataSourceView> объект использует отражение для создания экземпляра объекта, который определяется параметром <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> свойство. Затем вызывается метод, который определяется параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство, используя любые связанные с ним <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> свойства. После <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> завершения операции <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A> метод вызывается для вызова <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> событий. Можно обработать <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> событий все возвращаемые значения, выходные параметры и исключения, для анализа и выполнить любую необходимую обработку.  
  
 Если <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> возвращает <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, или <xref:System.Data.DataView> объекта и кэширование включен, <xref:System.Web.UI.WebControls.ObjectDataSource> извлекает данные из и сохраняет данные в кэше во время <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> операции. Кэш создается, отклоненных или обновить определяется поведение кэширования, который задается параметром сочетание <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> и <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> свойства.  
  
 Если <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> возвращает <xref:System.Data.DataSet> или <xref:System.Data.DataTable> объекта и <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> свойство указано, оно вычисляется с любым предоставленный <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> свойства и полученный фильтр применяется к списку данных во время <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> операции.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Метод делегирует <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> метод <xref:System.Web.UI.WebControls.ObjectDataSourceView> , связанный с <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
 Дополнительные сведения о параметра слияния, время жизни объекта и разрешении методов см. в разделе <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>.  
  
## <a name="data-bound-controls"></a>Элементы управления с привязкой к данным  
 Когда <xref:System.Web.UI.WebControls.ObjectDataSource> управления связан с элементом управления с привязкой к данным, таких как <xref:System.Web.UI.WebControls.GridView> управления, его не нужно вызывать <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метода из кода страницы. <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> Метод вызывается напрямую с помощью элемента управления с привязкой к данным, вместо этого.  
  
   
  
## Examples  
 Пример кода см. в разделе <xref:System.Web.UI.WebControls.ObjectDataSource>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectCountMethod">
      <MemberSignature Language="C#" Value="public string SelectCountMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectCountMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCountMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectCountMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCountMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя метода или функции, вызываемых элементом управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> для извлечения количества строк.</summary>
        <value>Строка, представляющая имя метода или функции, используемых объектом <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> для извлечения количества строк. Метод должен возвращать целое число (<see cref="T:System.Int32" />). Значение по умолчанию — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Свойство, обозначающее метод бизнес-объекта, используемый для получения общего количества строк, для поддержки разбиения по страницам источника данных. <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Свойство применяется только в том случае, если <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> свойству `true`.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Делегирует свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, с которым связан <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. Сведения о том, как поддерживается разбиение на страницы <xref:System.Web.UI.WebControls.ObjectDataSource> управления см. в разделе <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>.  
  
   
  
## Examples  
 В следующих трех примерах веб-страницы, класс кода программной части страницы и класс доступа к данным, позволяющий пользователю выбрать количество записей, отображаются на странице.  
  
 Веб-страница содержит <xref:System.Web.UI.WebControls.ObjectDataSource> свойство <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> свойству `true`. <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Свойству присвоено имя метода, который возвращает общее количество записей в запросе. <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> Свойство и <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> свойство имена параметров, которые используются в методе Select. Данная страница также содержит <xref:System.Web.UI.WebControls.DropDownList> элемента управления.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]  
  
 Во втором примере показан обработчик для <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> событие <xref:System.Web.UI.WebControls.DropDownList> элемента управления. Код в обработчик задает <xref:System.Web.UI.WebControls.GridView.PageSize%2A> свойства выбранных пользователем.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]  
  
 В третьем примере класс доступа к данным, который получает данные из таблицы Customers. Он содержит метод с именем `GetSubsetOfEmployees`, которая назначается <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойства <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. В примере также содержит метод с именем `GetEmployeeCount`, которая назначается <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> свойства <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. Этот класс использует LINQ для запроса к таблице Customers. В примере требуется LINQ to SQL, класс, представляющий таблицу Customers и базы данных Northwind. Дополнительные сведения см. в разделе [как: создание классов LINQ to SQL в проекте веб-](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Selected;" />
      <MemberSignature Language="F#" Value="member this.Selected : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Selected : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при завершении операции <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> событий для проверки значений, возвращаемое значение или выходные параметры, или чтобы определить, было ли исключение после <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> завершения операции. Возвращаемое значение, выходные параметры и свойства обработки исключений доступны из <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> объекта, связанного с событием.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 В следующих трех примерах веб-страницы, класс кода программной части страницы и класс доступа к данным, позволяющий пользователю возможность извлечения и обновления записей в таблице Employees базы данных Northwind.  
  
 В первом примере веб-страницы, который содержит два <xref:System.Web.UI.WebControls.ObjectDataSource> элементов управления, <xref:System.Web.UI.WebControls.DropDownList> управления и <xref:System.Web.UI.WebControls.DetailsView> элемента управления. Первый <xref:System.Web.UI.WebControls.ObjectDataSource> управления и <xref:System.Web.UI.WebControls.DropDownList> управления используются для получения и отображения имен сотрудников из базы данных. Второй <xref:System.Web.UI.WebControls.ObjectDataSource> управления и <xref:System.Web.UI.WebControls.DetailsView> управления используются для извлечения, отображения и изменения данных из выбранного пользователем записи.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx#1)]  
  
 Во втором примере показаны обработчики для <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> и <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> события. <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> Обработчик событий сериализует объект, содержащий данные, которые были получены из таблицы Employee. Сериализованный объект хранится в состоянии представления. <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> Обработчик событий десериализует объект в состоянии представления, который содержит исходные данные для записи данных, которая обновляется. Объект, содержащий исходные данные, передается как параметр методу Update. Исходные данные должны передаваться в базу данных, чтобы он может использоваться для проверки того, был ли данные изменен другим процессом.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx.vb#2)]  
  
 В третьем примере класс доступа к данным, который взаимодействует с базой данных "Борей". Этот класс использует LINQ для запроса и обновления таблицы Employees. В примере требуется LINQ to SQL, класс, представляющий таблицу Employees и базы данных Northwind. Дополнительные сведения см. в разделе [как: создание классов LINQ to SQL в проекте веб-](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selecting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As ObjectDataSourceSelectingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceSelectingEventHandler ^ Selecting;" />
      <MemberSignature Language="F#" Value="member this.Selecting : System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler " Usage="member this.Selecting : System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит перед операцией <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> событий для выполнения дополнительной инициализации, относящиеся к приложению, для проверки значений параметров или для изменения значений параметров перед <xref:System.Web.UI.WebControls.ObjectDataSource> операции извлечения данных, выполняемой элементом управления. Параметры доступны в качестве <xref:System.Collections.IDictionary> коллекцию, которая обращается к <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> свойство, которое предоставляется <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> объекта.  
  
 Это событие может генерироваться дважды для одного вызова <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод, если <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> свойству. <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs.ExecutingSelectCount%2A> Свойство <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs> объекта используется для определения, если вызван для извлечения данных или получить число.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectMethod">
      <MemberSignature Language="C#" Value="public string SelectMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя метода или функции, вызываемых элементом управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> для извлечения данных.</summary>
        <value>Строка, представляющая имя метода или функции, используемых элементом управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> для извлечения данных. Значение по умолчанию — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Указанный метод может иметь какой-либо сигнатуре метода, но он должен возвращать один из типов, приведенных в следующей таблице для <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления для успешного вызова.  
  
|Возвращаемый тип|Действие|  
|-----------------|------------|  
|<xref:System.Collections.IEnumerable>|<xref:System.Collections.IEnumerable> Возвращается <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод.|  
|<xref:System.Data.DataTable>|Объект <xref:System.Data.DataView> создается с помощью <xref:System.Data.DataTable> и возвращенный <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод.|  
|<xref:System.Data.DataView>|Объект <xref:System.Data.DataView> возвращается <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод.|  
|<xref:System.Data.DataSet>|Первый <xref:System.Data.DataTable> из <xref:System.Data.DataSet> извлекается и <xref:System.Data.DataView> создается и возвращается путем <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод.|  
|<xref:System.Object>|Объект упаковывается в один элемент <xref:System.Collections.IEnumerable> коллекции и возвращенный <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод.|  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> Делегирует свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, с которым связан <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
 При использовании <xref:System.Web.UI.WebControls.ObjectDataSource> класса для удаления или обновления данных, убедитесь, что имена параметров настроен для <xref:System.Web.UI.WebControls.ObjectDataSource> управления <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> коллекции или <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> коллекции совпадают с именами столбцов, возвращаемых методом select .  
  
## <a name="object-lifetime"></a>Время жизни объекта  
 Метод, который определяется параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство может быть методом экземпляра или `static` (`Shared` в Visual Basic) метод. Если это метод экземпляра, бизнес-объект создается и уничтожается каждый раз, метод, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> вызывается свойство. Можно обработать <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> и <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> событий для работы с бизнес-объекта перед методом, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> вызывается свойство. Также можно обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> событие, возникающее после метода, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> вызывается свойство. Если бизнес-объект реализует интерфейс <xref:System.IDisposable> интерфейс, <xref:System.IDisposable.Dispose%2A> метод вызывается до уничтожения объекта. Если метод является `static` (`Shared` в Visual Basic), бизнес-объекта не создается и не может обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, и <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> события.  
  
## <a name="parameter-merging"></a>Слияние параметров  
 Параметры добавляются <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> коллекции из следующих источников:  
  
-   Декларативно из `SelectParameters` элемента.  
  
-   Программно из `Selecting` метод.  
  
 Во-первых, параметры, приведенные в `SelectParameters` добавляются. Во-вторых, программным способом добавляются и удаляются в параметры <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> событие, возникающее перед <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метода будет выполняться. Метод разрешается после выполняется слияние параметров. Разрешение метода рассматривается в следующем разделе.  
  
> [!IMPORTANT]
>  Следует проверить все значения параметров, полученные от клиента. Среда выполнения просто подставляет значение параметра в <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство.  
  
## <a name="method-resolution"></a>Метод разрешения  
 При <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> вызывается метод, поля данных из элемента управления с привязкой к данным, параметры, созданные декларативно в `SelectParameters` элемента и параметры, которые были добавлены в <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> обработчик события будут объединены. (Дополнительные сведения см. в предыдущем разделе.) <xref:System.Web.UI.WebControls.ObjectDataSource> Управления затем пытается найти метод для вызова. Во-первых, он ищет один или несколько методов с именем, которое указано в <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство. Если совпадение не найдено, <xref:System.InvalidOperationException> исключения. Если соответствие найдено, он выполняет поиск соответствующих имен параметров. Например, предположим, что тип, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> свойство имеет два метода с именем `SelectARecord`. Один `SelectARecord` имеет один параметр `ID`, а другой `SelectARecord` имеет два параметра `Name` и `Number`. Если <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> коллекция имеет только один параметр с именем `ID`, `SelectARecord` метод с только что `ID` именем параметра. Тип параметра не проверяется при разрешении методов. Порядок параметров не имеет значения.  
  
 Если <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> свойство задано, метод разрешается по-разному. <xref:System.Web.UI.WebControls.ObjectDataSource> Ищет метод с именем, которое указано в <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство, которое принимает один параметр типа, который указан в <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> свойство. В этом случае имя параметра не имеет значения.  
  
   
  
## Examples  
 В следующем примере кода показано, как <xref:System.Web.UI.WebControls.GridView> элемент управления может отображать данные с помощью <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления на страницу Web Forms. <xref:System.Web.UI.WebControls.ObjectDataSource> Идентифицирует класс частично или полностью уточненное имя с его <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> свойство и метод, который вызывается для получения данных с помощью его <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство. Во время выполнения создается объект и вызывается метод, с помощью отражения. <xref:System.Web.UI.WebControls.GridView> Управления перечисление <xref:System.Collections.IEnumerable> коллекция, возвращаемая методом, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойства и отображает данные.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает коллекцию параметров, используемых методом, заданным свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />.</summary>
        <value>Коллекция параметров, используемых методом, заданным свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> Возвращает свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, с которым связан <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
 Добавить параметры, чтобы <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> коллекции декларативно с помощью `SelectParameters` элемент или программными средствами в обработчике <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> событий. Во время выполнения, параметры, приведенные в `SelectParameters` элемент сначала добавляются в коллекцию. Затем добавляются или удаляются с помощью обработчика для параметров в коллекции <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> событий. <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> Событие, прежде чем <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метода будет выполняться.  
  
 Прежде чем <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> выполняется метод, имена и типы параметров, которые содержатся в <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> коллекции должна соответствовать сигнатуре метода, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство. Например, если выбрать метод с именем `GetEmployeesByStateAndAge` принимает `string` и целое число в качестве параметров, <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> коллекция должна содержать два параметра. Первый параметр должен определять строку, а второй параметр должен определять целое число. Оба параметра можно указать в разметке в `SelectParameters` элемент. Кроме того, они могут быть могут быть добавлены в <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> в разметке можно добавить обработчик событий или один параметр и другое можно добавить программно.  
  
 Дополнительные сведения см. в разделе [использовании параметров](http://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4) и <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod> свойства.  
  
> [!IMPORTANT]
>  В коде <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> обработчика событий или в методе, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойства, убедитесь, что проверить все значения параметров, полученных от клиента.  
  
   
  
## Examples  
 В следующем примере кода показано, как для извлечения записи данных с помощью <xref:System.Web.UI.WebControls.ObjectDataSource> управления и отобразить ее в <xref:System.Web.UI.WebControls.DetailsView> элемента управления. <xref:System.Web.UI.WebControls.ObjectDataSource> Управления получает определенных записей, вызывая `GetEmployee` метод `EmployeeLogic` класса. `GetEmployee` Метода требуется параметр идентификатора сотрудника. <xref:System.Web.UI.WebControls.ObjectDataSource> Управления использует `QueryStringParameter` элемент в разметке для создания <xref:System.Web.UI.WebControls.QueryStringParameter> объекта, который извлекает значение параметра указанную строку запроса по URL-адресу и передать его в `GetEmployee` метод.  
  
 Другие классы параметра можно использовать для извлечения значений из других источников, таких как свойства элемента управления, поля формы, файлы cookie, данные профиля ASP.NET или состояние сеанса. Можно также использовать объект параметра, определенного в разметке, чтобы передать жестко запрограммированных значений в методе select. Дополнительные сведения о классах parameter, доступные в разделе [использование параметров с элементами управления источника данных для фильтрации](http://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f).  
  
 Чтобы выполнить этот пример, необходимо следующее:  
  
-   Веб-сайт, имеющий строка подключения с именем `NorthwindConnection` , подключается к базе данных Northwind Traders. Дополнительные сведения см. в разделе <xref:System.Web.UI.WebControls.ObjectDataSource> Общие сведения о классе.  
  
-   `EmployeeLogic` Класс, который отображается в виде одного из примеров кода для <xref:System.Web.UI.WebControls.ObjectDataSource> Общие сведения о классе. Файл класса должен быть расположен в папке App_Code.  
  
-   Пример кода может выполняться как страница ASPX. Если пользователь запрашивает страницу без параметра строки запроса, отображается сообщение об ошибке. При запросе страницы с помощью строки запроса, например `?empid=1` после имени ASPX-файл, вы увидите подробные сведения о запрашиваемом сотруднике.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/CS/objds3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/VB/objds3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
      </Docs>
    </Member>
    <Member MemberName="SortParameterName">
      <MemberSignature Language="C#" Value="public string SortParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SortParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property SortParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SortParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SortParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя бизнес-объекта, который позволяет параметру <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> задать выражение сортировки для обеспечения поддержки сортировки источника данных.</summary>
        <value>Имя параметра метода, позволяющее задать параметр, используемый для сортировки данных. Значение по умолчанию - пустая строка.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> Свойство используется для поддержки сортировки источника данных. При <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> установлено свойство <xref:System.Web.UI.DataSourceSelectArguments> объекта и передается <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метода <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> значение определяет имя параметра <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> метод бизнес-объекта, в соответствии с которой данные отсортированы.  
  
 Если <xref:System.Web.UI.WebControls.ObjectDataSource> связан с элементом управления с привязкой к данным, значения, которые передаются в этот принимают параметр формы значений полей, разделенных запятой, за которым следует `"ASC"` или `"DESC"`. Например, значение для сортировки по возрастанию на `Name` бы `"Name ASC"`.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> Делегирует свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, с которым связан <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как реализовать тип, поддерживающий сортировку. Во втором примере кода показано, как реализовать выражение сортировки.  
  
 В следующем примере кода показано, как реализовать тип, поддерживающий сортировку. `SelectMethod` Из `SortingData` класса принимает параметр `sortExpression`. Строка, передаваемая в `SelectMethod` используется для <xref:System.Data.DataView.Sort%2A> свойство <xref:System.Data.DataView> объект, возвращаемый `SelectMethod`.  
  
 [!code-csharp[ObjectDataSourceSorting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceSorting/CS/SortingData.cs#1)]
 [!code-vb[ObjectDataSourceSorting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceSorting/VB/SortingData.vb#1)]  
  
 В следующем примере кода показано, как реализовать выражение сортировки. Код в веб-странице создает экземпляр <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> Свойству `SortingData` и <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> свойству `sortExpression`. <xref:System.Web.UI.WebControls.GridView.AllowSorting%2A> Свойство <xref:System.Web.UI.WebControls.GridView> задано для элемента управления `true`. Когда пользователь щелкает **сортировки** кнопки, имя поля `Name` или `Number`, передается `SelectMethod` в параметре сортировки.  
  
 [!code-aspx-csharp[ObjectDataSourceSorting#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceSorting/CS/SortingDataExample.aspx#2)]
 [!code-aspx-vb[ObjectDataSourceSorting#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceSorting/VB/SortingDataExampleVB.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanSort" />
      </Docs>
    </Member>
    <Member MemberName="SqlCacheDependency">
      <MemberSignature Language="C#" Value="public virtual string SqlCacheDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SqlCacheDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SqlCacheDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SqlCacheDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SqlCacheDependency : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает разделенную точками с запятой строку, которая показывает, какие базы данных и таблицы используются для зависимости кэша Microsoft SQL Server.</summary>
        <value>Строка, которая показывает, какие базы данных и таблицы используются для зависимости кэша Microsoft SQL Server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Элемент управления поддерживает политики срока действия необязательно, основанный на <xref:System.Web.Caching.SqlCacheDependency> объектов для кэширования данных (служба должна быть настроена для сервера базы данных).  
  
 SQL Server поддерживает два механизма объявления кэша недействительным: опрос и уведомление. Каждый из этих механизмов имеет свой синтаксис для <xref:System.Web.Caching.SqlCacheDependency> объекта.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Поддерживает только опрос. <xref:System.Web.Caching.SqlCacheDependency> Строка используется для создания <xref:System.Data.SqlClient.SqlDependency> объект, передаваемый <xref:System.Data.Common.DbCommand> конструктор перед <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> выполнения метода. <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> Строка идентифицирует баз данных и таблиц в соответствии с тот же формат, используемый `@ Page` директивы, где первая часть строки — строка подключения к базе данных SQL Server, а затем разделитель-двоеточие и, наконец, имя таблицы базы данных (например, `"connectionstring1:table1"`). Если <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> свойство зависит от нескольких таблиц, соединения строки и таблицы пар имен разделяются точками с запятой (например, `"connectionstring1:table1";connectionstring2:table2"`).  
  
 Для поддержки уведомлений, необходимо написать логику кэша в реализации вашей <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойства и обрабатывать конструкции <xref:System.Web.Caching.SqlCacheDependency> объекта в коде.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как создать зависимость кэша SQL Server и задайте <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSource> объекта. Во втором примере кода показано, как реализовать метод-оболочку, который возвращает <xref:System.Data.DataSet> объекта для включения кэширования и фильтрации с <xref:System.Web.UI.WebControls.ObjectDataSource> объекта.  
  
 В следующем примере кода показано, как создать зависимость кэша SQL Server и задайте <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> свойства <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. В этом примере база данных опрашивается каждые 120 секунд. Если данные в Northwind Traders Employees таблицы изменений во времени, любые данные, которые были помещены в кэш <xref:System.Web.UI.WebControls.ObjectDataSource> управления и отображения в <xref:System.Web.UI.WebControls.GridView> истек срок действия элемента управления и новый набор данных, извлекаются при следующем запросе страницы.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_7/CS/objds7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_7/VB/objds7vb.aspx#1)]  
  
 В следующем примере кода показано, как реализовать метод-оболочку, который возвращает <xref:System.Data.DataSet> объекта для включения кэширования и фильтрации с <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. В базовой реализации `EmployeeLogic` класса `GetAllEmployees` возвращает метод <xref:System.Collections.ArrayList> объекта. Вместо рефакторинг объект полностью для работы с <xref:System.Web.UI.WebControls.ObjectDataSource> на страницу Web Forms метод-оболочку с именем `GetAllEmployeesAsDataSet` добавляется, возвращающий набор `NorthwindEmployee` данные в виде <xref:System.Data.DataSet>.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_5#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/CS/northwindemployee5.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_5#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/VB/northwindemployee5.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.SqlCacheDependency" />
      </Docs>
    </Member>
    <Member MemberName="StartRowIndexParameterName">
      <MemberSignature Language="C#" Value="public string StartRowIndexParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StartRowIndexParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property StartRowIndexParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StartRowIndexParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StartRowIndexParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("startRowIndex")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя параметра метода извлечения данных, который позволяет задать значение идентификатора первой записи для обеспечения поддержки разбиения по страницам источника данных.</summary>
        <value>Имя параметра метода бизнес-объекта, позволяющее задать первую извлекаемую запись. Параметр должен возвращать целую величину. Значение по умолчанию — <c>«startRowIndex»</c>.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> Свойство используется для поддержки разбиения по страницам источника данных. Сведения о том, как поддерживается разбиение на страницы <xref:System.Web.UI.WebControls.ObjectDataSource> управления см. в разделе <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> Делегирует свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, с которым связан <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
   
  
## Examples  
 В следующих трех примерах веб-страницы, класс кода программной части страницы и класс доступа к данным, позволяющий пользователю выбрать количество записей, отображаются на странице.  
  
 Веб-страница содержит <xref:System.Web.UI.WebControls.ObjectDataSource> свойство <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> свойству `true`. <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> Свойству присвоено имя метода, который возвращает общее количество записей в запросе. <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> Свойство и <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> свойство имена параметров, которые используются в методе Select. Данная страница также содержит <xref:System.Web.UI.WebControls.DropDownList> элемента управления.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]  
  
 Во втором примере показан обработчик для <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> событие <xref:System.Web.UI.WebControls.DropDownList> элемента управления. Код в обработчик задает <xref:System.Web.UI.WebControls.GridView.PageSize%2A> свойства выбранных пользователем.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]  
  
 В третьем примере класс доступа к данным, который получает данные из таблицы Customers. Он содержит метод с именем `GetSubsetOfEmployees`, которая назначается <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойства <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. В примере также содержит метод с именем `GetEmployeeCount`, которая назначается <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> свойства <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. Этот класс использует LINQ для запроса к таблице Customers. В примере требуется LINQ to SQL, класс, представляющий таблицу Customers и базы данных Northwind. Дополнительные сведения см. в разделе [как: создание классов LINQ to SQL в проекте веб-](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="objectDataSource.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Отслеживает изменения состояния представления элемента управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> для сохранения в объекте <see cref="T:System.Web.UI.StateBag" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource.TrackViewState%2A> Метод переопределяется для обозначения начальную точку для отслеживания и сохранения изменений в элементе управления как часть состояния представления для объекта.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IStateManager.TrackViewState" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает класс, представляемый объектом <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
        <value>Полное или сокращенное имя класса, обозначающее тип объекта, представляемого классом <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />. Значение по умолчанию — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы создать экземпляр объекта, который <xref:System.Web.UI.WebControls.ObjectDataSource> привязывает элемент управления, элемент управления использует отражение для загрузки типа, который определяется по имени типа во время выполнения. Таким образом, значение <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> свойство может быть сокращенное имя типа для кода, который находится в каталогах Bin или App_Code или полное имя типа для кода, который зарегистрирован в глобальном кэше сборок. Если вы используете в глобальном кэше сборок, необходимо добавить соответствующую ссылку на `assemblies` раздел файла Machine.config или Web.config.  
  
 Тип должен иметь конструктор по умолчанию, если только вы обрабатываете <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> событие самостоятельно создать его экземпляр. При каждом вызове создается экземпляр типа <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>, <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>, и <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> методы, если методы в типе методов-членов. Экземпляр не создается, если методы являются `static` (`Shared` в Visual Basic). Если тип реализует <xref:System.IDisposable> интерфейс, <xref:System.IDisposable.Dispose%2A> метод вызывается до уничтожения объекта.  
  
   
  
## Examples  
 В следующем примере кода показано, как <xref:System.Web.UI.WebControls.GridView> элемент управления может отображать данные с помощью <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления на страницу Web Forms. <xref:System.Web.UI.WebControls.ObjectDataSource> Идентифицирует класс частично или полностью уточненное имя с его <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> свойство и метод, который вызывается для получения данных с помощью его <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство. Во время выполнения создается объект и вызывается метод, с помощью отражения. <xref:System.Web.UI.WebControls.GridView> Управления перечисление <xref:System.Collections.IEnumerable> коллекции, который возвращается <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойства и отображает данные.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]  
  
 В следующем примере показано класс <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> ссылается значение свойства.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/northwindemployee1.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/northwindemployee1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
      <MemberSignature Language="VB.NET" Value="Public Function Update () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; int" Usage="objectDataSource.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Выполняет операцию обновления путем вызова метода, заданного свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />, и параметры, содержащиеся в коллекции <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />.</summary>
        <returns>Значение, представляющее число строк, обновленных в базовом хранилище данных.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Предполагается, что бизнес-объекта, обновление данных по одной записи за раз, а не в одном пакете.  
  
 Прежде чем <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> выполняется операция, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A> метод вызывается для вызова <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> событий. Можно обработать <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> событий для проверки значений параметров и всевозможной перед <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> операции. Для выполнения операции обновления <xref:System.Web.UI.WebControls.ObjectDataSourceView> объект использует отражение для создания экземпляра объекта, который определяется параметром <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> свойство. Затем вызывается метод, который определяется параметром <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> свойство, используя любые связанные с ним <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> свойства. После <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> завершения операции <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A> метод вызывается для вызова <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> событий. Можно обработать <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> событий все возвращаемые значения, выходные параметры и исключения, для анализа и выполнить любую необходимую обработку.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> Метод делегирует <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> метод <xref:System.Web.UI.WebControls.ObjectDataSourceView> , связанный с <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
 Дополнительные сведения о параметра слияния, время жизни объекта и разрешении методов см. в разделе <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>.  
  
> [!IMPORTANT]
>  Следует проверить все значения параметров, полученные от клиента. Среда выполнения просто подставляет значение параметра в <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> свойство.  
  
## <a name="data-bound-controls"></a>Элементы управления с привязкой к данным  
 Когда <xref:System.Web.UI.WebControls.ObjectDataSource> управления связан с элементом управления с привязкой к данным, таких как <xref:System.Web.UI.WebControls.GridView> управления, его не нужно вызывать <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> метода из кода страницы. <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> Метод вызывается напрямую с помощью элемента управления с привязкой к данным, вместо этого.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как использовать <xref:System.Web.UI.WebControls.DropDownList> управления <xref:System.Web.UI.WebControls.TextBox> элементов управления, а также несколько <xref:System.Web.UI.WebControls.ObjectDataSource> объекты для обновления данных. Во втором примере показывается код `EmployeeLogic` класс, используемый в первом примере кода.  
  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.DropDownList> управления <xref:System.Web.UI.WebControls.TextBox> элементов управления, а также несколько <xref:System.Web.UI.WebControls.ObjectDataSource> элементы управления для обновления данных. <xref:System.Web.UI.WebControls.DropDownList> Отображает имя сотрудника в Northwind, пока <xref:System.Web.UI.WebControls.TextBox> элементы управления используются для ввода и обновления сведений об адресе. Поскольку <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> коллекция содержит <xref:System.Web.UI.WebControls.ControlParameter> объекта, к которому привязан выбранное значение <xref:System.Web.UI.WebControls.DropDownList>, кнопки, которая вызывает <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> включена только в том случае, после выбора сотрудник операция.  
  
> [!IMPORTANT]
>  В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/objds12cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/objds12vb.aspx#1)]  
  
 В следующем примере кода показан `EmployeeLogic` класс, используемый в предыдущем примере кода.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/northwindemployee12.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/northwindemployee12.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Updated;" />
      <MemberSignature Language="F#" Value="member this.Updated : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Updated : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при завершении <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> событий для проверки значений, возвращаемое значение или выходные параметры, или чтобы определить, было ли исключение после <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> завершения операции. Возвращаемое значение, выходные параметры и свойства обработки исключений доступны из <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> объекта, связанного с событием.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updating" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateMethod">
      <MemberSignature Language="C#" Value="public string UpdateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdateMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя метода или функции, вызываемого элемента управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> для обновления данных.</summary>
        <value>Строка, представляющая имя метода или функции, используемых объектом <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> для обновления данных. Значение по умолчанию - пустая строка.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Управления предполагается, что метод, который определяется параметром <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> свойство выполняет обновления одной за раз, а не в пакете.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> Делегирует свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, с которым связан <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
 Убедитесь, что имена параметров настроен для <xref:System.Web.UI.WebControls.ObjectDataSource> управления <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> коллекции совпадают с именами столбцов, возвращаемых методом select.  
  
## <a name="object-lifetime"></a>Время жизни объекта  
 Метод, который определяется параметром <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> свойство может быть методом экземпляра или `static` (`Shared` в Visual Basic) метод. Если это метод экземпляра, бизнес-объект создается и уничтожается каждый раз, метод, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> вызывается свойство. Можно обработать <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> и <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> событий для работы с бизнес-объекта перед методом, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> вызывается свойство. Также можно обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> событие, возникающее после метода, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> вызывается свойство. Если бизнес-объект реализует интерфейс <xref:System.IDisposable> интерфейс, <xref:System.IDisposable.Dispose%2A> метод вызывается до уничтожения объекта. Если метод является `static` (`Shared` в Visual Basic), бизнес-объекта не создается и не может обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>, <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>, и <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> события.  
  
## <a name="parameter-merging"></a>Слияние параметров  
 Параметры добавляются <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> набор из трех источников:  
  
-   Из элемента управления с привязкой к данным, во время выполнения.  
  
-   Из `UpdateParameters` элемент, декларативно.  
  
-   Из <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> обработчик событий программными средствами.  
  
 Во-первых, любые параметры, которые создаются на основе элементов управления с привязкой к данным добавляются <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> коллекции. Например если <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления привязан к <xref:System.Web.UI.WebControls.GridView> управления со столбцами `Name` и `Number`, параметры для `Name` и `Number` добавляются в коллекцию. Точное имя параметра зависит <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> свойство. Тип данных из этих параметров является `string`. Далее, параметры, которые перечислены в `UpdateParameters` добавляются. Если параметр в `UpdateParameters` найден элемент с тем же именем в качестве параметра, который уже присутствует в <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> коллекции, существующий параметр изменяется в соответствии с параметром, который задается в `UpdateParameters` элемент. Обычно это используется для изменения типа данных в параметре. Наконец, можно программным образом добавлять и удалять параметры в <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> событие, возникающее перед <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> метода будет выполняться. Метод разрешается после выполняется слияние параметров. Разрешение метода рассматривается в следующем разделе.  
  
> [!IMPORTANT]
>  Следует проверить все значения параметров, полученные от клиента. Среда выполнения просто подставляет значение параметра в <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> свойство.  
  
## <a name="method-resolution"></a>Метод разрешения  
 При <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> вызывается метод, поля данных из элемента управления с привязкой к данным, параметры, созданные декларативно в `UpdateParameters` элемента и параметры, которые были добавлены в <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> обработчик события будут объединены. (Дополнительные сведения см. в предыдущем разделе.) <xref:System.Web.UI.WebControls.ObjectDataSource> Управления затем пытается найти метод для вызова. Во-первых, он ищет один или несколько методов с именем, которое указано в <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> свойство. Если совпадение не найдено, <xref:System.InvalidOperationException> исключения. Если соответствие найдено, он выполняет поиск соответствующих имен параметров. Например, предположим, что тип, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> свойство имеет два метода с именем `UpdateARecord`. Один `UpdateARecord` имеет один параметр `ID`, а другой `UpdateARecord` имеет два параметра `Name` и `Number`. Если <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> коллекция имеет только один параметр с именем `ID`, `UpdateARecord` метод с только что `ID` именем параметра. Тип параметра не проверяется при разрешении методов. Порядок параметров не имеет значения.  
  
 Если <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> свойство задано, метод разрешается по-разному. <xref:System.Web.UI.WebControls.ObjectDataSource> Ищет метод с именем, которое указано в <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> свойство, которое принимает один параметр типа, который указан в <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> свойство. В этом случае имя параметра не имеет значения.  
  
   
  
## Examples  
 В следующих трех примерах веб-страницы, класс кода программной части страницы и класс доступа к данным, позволяющий пользователю возможность извлечения и обновления записей в таблице Employees базы данных Northwind.  
  
 В первом примере веб-страницы, который содержит два <xref:System.Web.UI.WebControls.ObjectDataSource> элементов управления, <xref:System.Web.UI.WebControls.DropDownList> управления и <xref:System.Web.UI.WebControls.DetailsView> элемента управления. Первый <xref:System.Web.UI.WebControls.ObjectDataSource> управления и <xref:System.Web.UI.WebControls.DropDownList> управления используются для получения и отображения имен сотрудников из базы данных. Второй <xref:System.Web.UI.WebControls.ObjectDataSource> управления и <xref:System.Web.UI.WebControls.DetailsView> управления используются для извлечения, отображения и изменения данных из выбранного пользователем записи.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx#1)]  
  
 Во втором примере показаны обработчики для <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> и <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> события. <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> Обработчик событий сериализует объект, содержащий данные, которые были получены из таблицы Employee. Сериализованный объект хранится в состоянии представления. <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> Обработчик событий десериализует объект в состоянии представления, который содержит исходные данные для записи данных, которая обновляется. Объект, содержащий исходные данные, передается как параметр методу Update. Исходные данные должны передаваться в базу данных, чтобы он может использоваться для проверки того, был ли данные изменен другим процессом.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx.vb#2)]  
  
 В третьем примере класс доступа к данным, который взаимодействует с базой данных "Борей". Этот класс использует LINQ для запроса и обновления таблицы Employees. В примере требуется LINQ to SQL, класс, представляющий таблицу Employees и базы данных Northwind. Дополнительные сведения см. в разделе [как: создание классов LINQ to SQL в проекте веб-](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает коллекцию параметров, содержащую параметры, используемые методом, заданным свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />.</summary>
        <value>Объект <see cref="T:System.Web.UI.WebControls.ParameterCollection" />, содержащий параметры, используемые методом, заданным свойством <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Имена и типы параметров, которые содержатся в <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> коллекции должны совпадать имена и типы параметров в <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> сигнатуру метода. Имена параметров зависят от <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A> свойство и являются с учетом регистра. Параметры в коллекции, зависит от данных в элемент управления с привязкой к данным, заданных декларативно параметров и параметров, которые были добавлены программно. Дополнительные сведения см. в подразделе «Параметр слияния» <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> и [использовании параметров](http://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4).  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> Извлекает свойство <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> , содержащийся в свойстве <xref:System.Web.UI.WebControls.ObjectDataSourceView> объекта, с которым связан <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления.  
  
 Дополнительные сведения о параметра слияния, время жизни объекта и разрешении методов см. в разделе <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>.  
  
> [!IMPORTANT]
>  Следует проверить все значения параметров, полученные от клиента. Среда выполнения просто подставляет значение параметра в <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> свойство.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как использовать <xref:System.Web.UI.WebControls.DropDownList> управления <xref:System.Web.UI.WebControls.TextBox> элементов управления, а также несколько <xref:System.Web.UI.WebControls.ObjectDataSource> объекты для обновления данных. Во втором примере показывается код `EmployeeLogic` класс, используемый в первом примере кода.  
  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.DropDownList> управления <xref:System.Web.UI.WebControls.TextBox> элементов управления, а также несколько <xref:System.Web.UI.WebControls.ObjectDataSource> элементы управления для обновления данных. <xref:System.Web.UI.WebControls.DropDownList> Отображает имя сотрудника в Northwind, пока <xref:System.Web.UI.WebControls.TextBox> элементы управления используются для ввода и обновления сведений об адресе. Поскольку <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> коллекция содержит <xref:System.Web.UI.WebControls.ControlParameter> , привязанный к выбранное значение <xref:System.Web.UI.WebControls.DropDownList>, кнопки, которая вызывает <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> включена только в том случае, после выбора сотрудник операция.  
  
> [!IMPORTANT]
>  В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/objds12cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/objds12vb.aspx#1)]  
  
 В следующем примере кода показан `EmployeeLogic` класс, используемый в предыдущем примере кода.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/northwindemployee12.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/northwindemployee12.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Updating;" />
      <MemberSignature Language="F#" Value="member this.Updating : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Updating : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит перед операцией <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывать <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> событий для выполнения дополнительной инициализации, относящиеся к приложению, для проверки значений параметров или для изменения значений параметров перед <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления выполняет операцию обновления. Параметры доступны в качестве <xref:System.Collections.IDictionary> коллекцию, которая обращается к <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> свойство, которое предоставляется <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> объекта.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 В следующих трех примерах веб-страницы, класс кода программной части страницы и класс доступа к данным, позволяющий пользователю возможность извлечения и обновления записей в таблице Employees базы данных Northwind.  
  
 В первом примере веб-страницы, который содержит два <xref:System.Web.UI.WebControls.ObjectDataSource> элементов управления, <xref:System.Web.UI.WebControls.DropDownList> управления и <xref:System.Web.UI.WebControls.DetailsView> элемента управления. Первый <xref:System.Web.UI.WebControls.ObjectDataSource> управления и <xref:System.Web.UI.WebControls.DropDownList> управления используются для получения и отображения имен сотрудников из базы данных. Второй <xref:System.Web.UI.WebControls.ObjectDataSource> управления и <xref:System.Web.UI.WebControls.DetailsView> управления используются для извлечения, отображения и изменения данных из выбранного пользователем записи.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx#1)]  
  
 Во втором примере показаны обработчики для <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> и <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> события. <xref:System.Web.UI.WebControls.ObjectDataSource.Selected> Обработчик событий сериализует объект, содержащий данные, которые были получены из таблицы Employee. Сериализованный объект хранится в состоянии представления. <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> Обработчик событий десериализует объект в состоянии представления, который содержит исходные данные для записи данных, которая обновляется. Объект, содержащий исходные данные, передается как параметр методу Update. Исходные данные должны передаваться в базу данных, чтобы он может использоваться для проверки того, был ли данные изменен другим процессом.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx.vb#2)]  
  
 В третьем примере класс доступа к данным, который взаимодействует с базой данных "Борей". Этот класс использует LINQ для запроса и обновления таблицы Employees. В примере требуется LINQ to SQL, класс, представляющий таблицу Employees и базы данных Northwind. Дополнительные сведения см. в разделе [как: создание классов LINQ to SQL в проекте веб-](http://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081).  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
      </Docs>
    </Member>
  </Members>
</Type>