<Type Name="ObjectDataSourceStatusEventArgs" FullName="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9e47f0857a8d0623beb44d99fad55c61c8e7f6ce" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36380610" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ObjectDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataSourceStatusEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectDataSourceStatusEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ObjectDataSourceStatusEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет данные для событий <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />, <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />, <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Updated" /> и <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" /> элемента управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> Класс используется в <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A>, и <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> методы для предоставления доступа к выходных параметров, возвращаемых значений и исключений, создаваемых методом, который вызывается методом <xref:System.Web.UI.WebControls.ObjectDataSource> элемент управления. Это осуществляется путем <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>, и <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> свойства, соответственно. Путем добавления делегата для обработки <xref:System.Web.UI.WebControls.ObjectDataSource.Selected>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>, <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, или <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> события, можно проверить эти данные и выполнить необходимую обработку дополнительных post.  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource> Элемент управления предоставляет множество событий, которые можно обрабатывать для работы с базовым бизнес-объектом на различных этапах жизненного цикла. В следующей таблице перечислены события и связанное с ним <xref:System.EventArgs> классов и делегатов обработчиков событий.  
  
|Событие|EventArgs|Обработчик событий|  
|-----------|---------------|------------------|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>.<br /><br /> Происходит непосредственно перед создается экземпляр бизнес-объекта.|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>.<br /><br /> Происходит сразу после создания экземпляра бизнес-объекта.|<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>.<br /><br /> Происходит до извлечения данных.|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updating> и <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>.<br /><br /> Возникает перед выполнением вставки, обновления или удаления.|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Selected>.<br /><br /> Происходит после извлечения данных.|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>, <xref:System.Web.UI.WebControls.ObjectDataSource.Updated> и <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>.<br /><br /> Возникает после завершения вставки, обновления или удаления.|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler>|  
|<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>.<br /><br /> Происходит перед уничтожением бизнес-объекта.|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>|<xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler>|  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как использовать <xref:System.Web.UI.WebControls.ObjectDataSource> управления с бизнес-объекта и <xref:System.Web.UI.WebControls.GridView> элемент управления для удаления данных. Во втором примере кода предоставляется пример среднего уровня бизнес-объекта, в первом примере кода.  
  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.ObjectDataSource> управления с бизнес-объекта и <xref:System.Web.UI.WebControls.GridView> элемент управления для удаления данных. <xref:System.Web.UI.WebControls.GridView> Изначально отображает набор всех сотрудников, с помощью метода, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство для получения данных из `EmployeeLogic` объекта. Поскольку <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> свойству `true`, <xref:System.Web.UI.WebControls.GridView> элементов управления автоматически отображает **удалить** кнопки.  
  
 Если щелкнуть **удалить** кнопки, <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> действие выполняется с помощью метода, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> свойства и параметры, которые указаны в <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> коллекции. В этом примере кода указывается один параметр в <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> коллекции, соответствующий идентификатору сотрудника. Это, поскольку несмотря на то, что идентификатор включается в <xref:System.Windows.Forms.DataGridView.Columns%2A> коллекции в виде <xref:System.Web.UI.WebControls.BoundField> объекта передаются как строка, <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления. Путем добавления его явного <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> коллекции с <xref:System.Web.UI.WebControls.Parameter.Type%2A> свойство <xref:System.TypeCode.Int32> значение, то он передает правильно <xref:System.Web.UI.WebControls.ObjectDataSource> метода как целое число, а не как строка.  
  
 В этом примере кода также выполняет некоторые действия предварительной и последующей обработки. `NorthwindEmployeeDeleting` Делегат вызывается для обработки <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> события, прежде чем <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> действие выполняется и `NorthwindEmployeeDeleted` делегат вызывается для обработки <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> событий после <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> завершить действие, чтобы обрабатывать все исключения, которые могли возникнуть. `NorthwindEmployeeDeleted` Делегат обращается к возможных исключений, вызванных бизнес-объекта, который использует <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> объекта. В этом примере если `NorthwindDataException` является исключение, он обрабатывается этим делегатом.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 В следующем примере кода предоставляет пример среднего уровня бизнес-объекта, в предыдущем примере кода. Ниже описаны две основные классы, определенные в примере кода.  
  
-   `EmployeeLogic` Класс — это класс, состоянии и инкапсулирует бизнес-логики.  
  
-   `NorthwindEmployee` — Класс модели, только базовые функциональные возможности, необходимые для загрузки и сохранения данных уровня данных.  
  
 Кроме того `NorthwindDataException` класс предоставляется для удобства.  
  
 Этот набор классов в примере используется база данных Northwind Traders, — пример базы данных, которая поставляется с Microsoft SQL Server и Microsoft Access. Для получения полного рабочего примера необходимо скомпилировать этот код как библиотеку и затем использовать эти классы с ASP-страницы. Страница ASP, приведенного в предыдущем примере настраивается для работы с этой библиотеки классов.  `UpdateEmployeeInfo` Метод не реализован полностью, поэтому не будет вставлять данные в базе данных Northwind Traders, Экспериментируя с этим примером.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSourceStatusEventArgs (object returnValue, System.Collections.IDictionary outputParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object returnValue, class System.Collections.IDictionary outputParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.#ctor(System.Object,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (returnValue As Object, outputParameters As IDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSourceStatusEventArgs(System::Object ^ returnValue, System::Collections::IDictionary ^ outputParameters);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs : obj * System.Collections.IDictionary -&gt; System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs (returnValue, outputParameters)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="returnValue" Type="System.Object" />
        <Parameter Name="outputParameters" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="returnValue">Объект, представляющий возвращаемое значение для завершенной операции базы данных.</param>
        <param name="outputParameters">
          <see cref="T:System.Collections.IDictionary" /> пар "имя-значение" объектов параметра.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> с использованием указанного возвращаемого значения и параметров вывода.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `returnValue` Параметр может быть любой объект, возвращенный вызовом в метод бизнес-объекта данных. `outputParameters` Параметр <xref:System.Collections.IDictionary> коллекцию пар "имя значение", совпадают с именами в сигнатуре метода и передается по ссылке.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSourceStatusEventArgs (object returnValue, System.Collections.IDictionary outputParameters, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object returnValue, class System.Collections.IDictionary outputParameters, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.#ctor(System.Object,System.Collections.IDictionary,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSourceStatusEventArgs(System::Object ^ returnValue, System::Collections::IDictionary ^ outputParameters, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs : obj * System.Collections.IDictionary * Exception -&gt; System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs (returnValue, outputParameters, exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="returnValue" Type="System.Object" />
        <Parameter Name="outputParameters" Type="System.Collections.IDictionary" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="returnValue">Объект, представляющий возвращаемое значение для завершенной операции базы данных.</param>
        <param name="outputParameters">
          <see cref="T:System.Collections.IDictionary" /> пар "имя-значение" объектов параметра.</param>
        <param name="exception">
          <see cref="T:System.Exception" />, обертывающий любые внутренние исключения, сгенерированные во время вызова метода.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> с использованием указанного возвращаемого значения, параметров вывода и исключения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `returnValue` Параметр может быть любой объект, возвращенный вызовом в метод бизнес-объекта данных. `outputParameters` Параметр <xref:System.Collections.IDictionary> коллекцию пар "имя значение", совпадают с именами в сигнатуре метода и передается по ссылке. `exception` Параметр <xref:System.Exception> исключение, которое создает оболочку для всех исключений, которые вызываются методом, который вызывается методом <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления во время операции с данными. Если исключение не обработано <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A>, или <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> метод, он вызывается <xref:System.Web.UI.WebControls.ObjectDataSource> управления после возвращения операции с данными.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AffectedRows : int with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает количество строк, подвергшихся операции данных.</summary>
        <value>Количество строк, затронутых операцией данных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> значение, чтобы проверить, что ожидаемое количество строк, на которые влияет.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updated" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает обертку для исключения, генерируемого методом, который вызывается элементом управления <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> во время операции с данными.</summary>
        <value>
          <see cref="T:System.Exception" />, который создает обертку для любых исключений, генерируемых бизнес-объектом в <see cref="P:System.Exception.InnerException" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Exception> Исключение не представляет фактическое исключение создается методом бизнес-объекта данных. Можно использовать <xref:System.Exception.InnerException%2A> свойство для доступа к созданного исключения.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.ObjectDataSource> управления с бизнес-объекта и <xref:System.Web.UI.WebControls.GridView> элемент управления для удаления данных. <xref:System.Web.UI.WebControls.GridView> Изначально отображает набор всех сотрудников, с помощью метода, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство для получения данных из `EmployeeLogic` объекта. Поскольку <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> свойству `true`, <xref:System.Web.UI.WebControls.GridView> элементов управления автоматически отображает **удалить** кнопки.  
  
 Если щелкнуть **удалить** кнопки, <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> действие выполняется с помощью метода, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> свойства и параметры, которые указаны в <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> коллекции.  
  
 В этом примере кода также выполняет некоторые действия предварительной и последующей обработки. `NorthwindEmployeeDeleting` Делегат вызывается для обработки <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> события, прежде чем <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> действие выполняется и `NorthwindEmployeeDeleted` делегат вызывается для обработки <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> событий после <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> выполнить действие, для выполнения какой-либо обработки исключений. В этом примере если `NorthwindDataException` — исключение, оно обрабатывается `NorthwindEmployeeDeleted` делегата.  
  
 Для реализации `EmployeeLogic` среднего уровня бизнес-объект, который использует этот пример кода, см. в обзоре класса в <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, показывающее, было ли обработано исключение, вызванное бизнес-объектом.</summary>
        <value>Значение <see langword="true" />, если исключение, вызванное бизнес-объектом, было обработано и не должно вызываться <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если бизнес-объекта, вызывает исключение, <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled%2A> свойству `false` и помещается в оболочку исключение <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> свойство. Если вы используете <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler> объекта, вы можете проверить <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A> свойство и обработать исключение. При обработке исключения, задайте <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ExceptionHandled%2A> свойства `true` или <xref:System.Web.UI.WebControls.ObjectDataSource> управления будет создано исключение.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.ObjectDataSource> управления с бизнес-объекта и <xref:System.Web.UI.WebControls.GridView> элемент управления для удаления данных. <xref:System.Web.UI.WebControls.GridView> Изначально отображает набор всех сотрудников, с помощью метода, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство для получения данных из `EmployeeLogic` объекта. Поскольку <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> свойству `true`, <xref:System.Web.UI.WebControls.GridView> элементов управления автоматически отображает **удалить** кнопки.  
  
 Если щелкнуть **удалить** кнопки, <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> действие выполняется с помощью метода, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> свойства и параметры, которые указаны в <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> коллекции. В этом примере кода также выполняет некоторые действия предварительной и последующей обработки. `NorthwindEmployeeDeleting` Делегат вызывается для обработки <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> события, прежде чем <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> действие выполняется и `NorthwindEmployeeDeleted` делегат вызывается для обработки <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> событий после <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> завершить действие, чтобы обрабатывать все исключения, которые могли возникнуть. В этом примере если `NorthwindDataException` — исключение, оно обрабатывается `NorthwindEmployeeDeleted` делегата.  
  
 Для реализации `EmployeeLogic` среднего уровня бизнес-объект, который использует этот пример кода, см. в обзоре класса в <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception" />
      </Docs>
    </Member>
    <Member MemberName="OutputParameters">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary OutputParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary OutputParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OutputParameters As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::IDictionary ^ OutputParameters { System::Collections::IDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OutputParameters : System.Collections.IDictionary" Usage="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию, содержащую параметры метода бизнес-объекта и их значения.</summary>
        <value>Коллекция <see cref="T:System.Collections.IDictionary" /> пар "имя-значение", содержащая параметры метода бизнес-объекта и их значения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Любые параметры, которые передаются в метод бизнес-объекта по ссылке, возвращаются в <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.OutputParameters%2A> коллекции.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReturnValue">
      <MemberSignature Language="C#" Value="public object ReturnValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ReturnValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ReturnValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ReturnValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ReturnValue : obj" Usage="System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, возвращаемое методом бизнес-объекта, если таковое имеется, в виде объекта.</summary>
        <value>Объект, представляющий значение, возвращаемое методом бизнес-объекта; в противном случае — значение <see langword="null" />, если метод бизнес-объекта не возвратил никакого значения.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> Свойство задается в <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> конструктора. Значение равно возвращаемое значение вызова метода объекта бизнеса, который вызывается с помощью отражения. Если бизнес-метод не возвращает значения (например, когда метод бизнес-объекта возвращает `void`), <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> равняется свойство `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>