<Type Name="SendMailErrorEventHandler" FullName="System.Web.UI.WebControls.SendMailErrorEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9b3e329efd01ede5b0c453486b17b70304f19317" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30596458" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void SendMailErrorEventHandler(object sender, SendMailErrorEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed SendMailErrorEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SendMailErrorEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub SendMailErrorEventHandler(sender As Object, e As SendMailErrorEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void SendMailErrorEventHandler(System::Object ^ sender, SendMailErrorEventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Web.UI.WebControls.SendMailErrorEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">Источник события.</param>
    <param name="e">Объект <see cref="T:System.Web.UI.WebControls.SendMailErrorEventArgs" />, содержащий данные события.</param>
    <summary>Представляет метод, который обрабатывает событие <see langword="SendMailError" /> элементов управления (например, элементы управления <see cref="T:System.Web.UI.WebControls.ChangePassword" />, <see cref="T:System.Web.UI.WebControls.CreateUserWizard" /> и <see cref="T:System.Web.UI.WebControls.PasswordRecovery" />).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При создании делегата <xref:System.Web.UI.WebControls.SendMailErrorEventHandler> необходимо указать метод, обрабатывающий событие. Чтобы связать событие с обработчиком событий, добавьте в событие экземпляр делегата. Обработчик событий вызывается всякий раз, когда происходит событие, пока не будет удален делегат из события. Дополнительные сведения о делегатах-обработчиках событий см. в разделе [обработка событий сервера на страницах Web Forms ASP.NET](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9).  
  
 Обработка `SendMailError` событий позволяет продолжать выполнение, даже если исключение возникает при попытке отправить сообщение электронной почты веб-приложения. Например это полезно, если исключение возникает, когда пользователь работает в нескольких шагов мастера. Предпочтительнее записать ошибку в журнал, отобразить информационное сообщение для пользователя и позволить пользователю завершите работу мастера, а не вышел из приложения.  
  
 Если не создать обработчик событий для <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> событий, или при создании обработчика событий, но оставить <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> свойство `false`, веб-приложение перестанет работать, если произошла ошибка при отправке сообщения электронной почты и будет ASP.NET сообщение об ошибке.  
  
 <xref:System.Web.UI.WebControls.ChangePassword.OnSendMailError%2A> Метод также позволяет производным классам обрабатывать событие, а не <xref:System.Web.UI.WebControls.SendMailErrorEventHandler>. Это предпочтительная методика обработки событий в класс, производный от <xref:System.Web.UI.WebControls.ChangePassword> или <xref:System.Web.UI.WebControls.CreateUserWizard>.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка событий сервера на страницах Web Forms ASP.NET](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется страница ASP.NET, которая использует <xref:System.Web.UI.WebControls.ChangePassword> веб-элемента управления, а также включает обработчик событий для <xref:System.Web.UI.WebControls.ChangePassword.SendMailError> событие с именем `SendMailError`. В примере кода предполагается, что веб-сайт ASP.NET настроен на использование членства ASP.NET и проверки подлинности форм и что пользователь был создан, имя и пароль которого вам известны. Дополнительные сведения см. в разделе [как: реализация простой проверки подлинности форм](http://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e).  
  
 Если смена пароля прошла успешно, код пытается использовать протокол SMTP для отправки сообщений электронной почты для пользователей, чтобы подтвердить изменение. Это можно сделать в `SendingMail` обработчика событий. Сведения о настройке SMTP-сервера см. в разделе [NIB: Практическое: Установка и настройка виртуальных SMTP-серверов в IIS 6.0](http://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8). В целях в этом примере нет необходимости настройки SMTP-сервера; Пример предназначен для тестирования не удалось отправить сообщение электронной почты.  
  
 Если почтовый сервер не настроен правильно или другой ошибки и не удается отправить сообщение электронной почты, `SendMailError` функция. Сообщение отображается для пользователя. Кроме того событие заносится в журнал событий приложений Windows, исходя из предположения, что источник события с именем MySamplesSite уже существует. См. в примере кода ниже для создания заданного источника события. Дополнительные сведения о создании источника событий см. в разделе [обработка событий сервера на страницах Web Forms ASP.NET](http://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9). <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> Свойство <xref:System.Web.UI.WebControls.SendMailErrorEventArgs> , присваивается значение `true` для указания, что ошибка была обработана.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 В следующем примере кода следует используйте, если требуется программно добавить источник события с именем MySamplesSite в журнал приложений. Источник событий должен существовать в первом примере кода для правильной работы. В следующем примере кода требуются права администратора.  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
    <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
    <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
    <altmember cref="T:System.Net.Mail.MailMessage" />
    <altmember cref="T:System.Web.Mail.SmtpMail" />
  </Docs>
</Type>