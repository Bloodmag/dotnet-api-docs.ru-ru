<Type Name="SqlDataSource" FullName="System.Web.UI.WebControls.SqlDataSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="34dff01451d4ba6258731af2ba7a9443d91cb876" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30601088" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlDataSource : System.Web.UI.DataSourceControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataSource extends System.Web.UI.DataSourceControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SqlDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataSource&#xA;Inherits DataSourceControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataSource : System::Web::UI::DataSourceControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataSourceControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Selecting")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("SelectQuery")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.SqlDataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.SqlDataSource))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет базу данных SQL для элементов управления с привязкой к данным.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В этом разделе.  
  
-   [Введение](#introduction)  
  
-   [Подключения к данным](#data_connections)  
  
-   [Выполнение операций с данными](#performing_data_operations)  
  
-   [Поставщик данных](#data_provider)  
  
-   [Кэширование](#caching)  
  
-   [Дополнительные возможности](#additional_features)  
  
-   [Представление источника данных](#data_source_view)  
  
-   [Декларативный синтаксис](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Вступление  
 <xref:System.Web.UI.WebControls.SqlDataSource> Источник данных представляет данные в реляционной базы данных SQL для элементов управления с привязкой к данным. Можно использовать <xref:System.Web.UI.WebControls.SqlDataSource> управления вместе с элементом управления с привязкой к данным для получения данных из реляционной базы данных, а также для отображения, изменения и сортировки данных на веб-странице с минимумом или совсем без кода.  
  
<a name="data_connections"></a>   
## <a name="data-connections"></a>Подключения к данным  
 Чтобы подключиться к базе данных, необходимо задать <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> свойства допустимую строку соединения. <xref:System.Web.UI.WebControls.SqlDataSource> Может поддерживать любой реляционной базы данных SQL, можно подключить с помощью поставщика ADO.NET, такие как `SqlClient`, `OleDb`, `Odbc`, или `OracleClient` поставщика. Сведения об обеспечении безопасности строк подключения см. в разделе [How To: безопасные строки подключения, если элемент управления источником данных с помощью](http://msdn.microsoft.com/library/942f6dcb-d278-4bec-8403-60eede9bcd62).  
  
 Чтобы получить данные из основной базы данных, задайте <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> свойство с SQL-запроса. Если базы данных, <xref:System.Web.UI.WebControls.SqlDataSource> связан с поддерживает хранимые процедуры, можно задать <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> на имя хранимой процедуры. Указать SQL-запрос также может быть параметризованного запроса. Можно добавить <xref:System.Web.UI.WebControls.Parameter> объектов, связанных с параметризованного запроса <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> коллекции. Дополнительные сведения о параметризованных запросов SQL и их синтаксисе см. в разделе [использование параметров с элементами управления источника данных для фильтрации](http://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f).  
  
 <xref:System.Web.UI.WebControls.SqlDataSource> Управления извлекает данные каждый раз, когда <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> вызывается метод. Этот метод обеспечивает программный доступ к методу, который задается параметром <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> свойство. <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> Метод автоматически вызывается элементами управления, привязанных к <xref:System.Web.UI.WebControls.SqlDataSource> при их <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> вызывается метод. Если задать <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A> свойства элемента управления с привязкой к данным элемент управления автоматически привязывается к данным из источника данных, при необходимости. Установка `DataSourceID` свойство является рекомендуемым методом для привязки <xref:System.Web.UI.WebControls.ObjectDataSource> элемента управления к элементу управления с привязкой к данным. Кроме того, можно использовать `DataSource` свойство, но затем необходимо явным образом вызвать <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> метод элемента управления с привязкой к данным. Примеры элементов управления с привязкой к данным, которые можно использовать <xref:System.Web.UI.WebControls.SqlDataSource> , <xref:System.Web.UI.WebControls.DataGrid>, <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.DataList>, и <xref:System.Web.UI.WebControls.DropDownList>. Можно вызвать <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> метод программным способом в любой момент, для получения данных из базы данных.  
  
 В сценарии ASP.NET декларативные и программные, можно задать <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> свойство элемента управления с привязкой к данным, идентификатор <xref:System.Web.UI.WebControls.SqlDataSource> элемента управления. Также можно назначить экземпляр <xref:System.Web.UI.WebControls.SqlDataSource> класс <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> свойства элемента управления с привязкой к данным. Дополнительные сведения о привязке элемента управления с привязкой к элементам управления источником данных см. в разделе [параметры доступа к данным ASP.NET](http://msdn.microsoft.com/library/a5ff235e-397f-4bbe-9bfe-2720b6e7ab9d).  
  
<a name="performing_data_operations"></a>   
## <a name="performing-data-operations"></a>Выполнение операций с данными  
 В зависимости от возможностей основного продукта базы данных и конфигурации экземпляра <xref:System.Web.UI.WebControls.SqlDataSource> класса, выполнения операций с данными, таких как обновления, вставки и удаления. Для выполнения этих операций с данными, необходимо задайте соответствующий текст команды и все связанные параметры для операции, которую требуется выполнить. Например, для операции обновления установить <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> строку SQL или имя хранимой процедуры, свойства и добавьте все необходимые параметры для <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> коллекции. Обновление выполняется при <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> метод вызывается явным образом в коде или автоматически с помощью элемента управления с привязкой к данным. Следует один и тот же общий шаблон для <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> и <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> операций.  
  
 SQL-запросы и команды, которые используются в <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>, <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>, <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>, и <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> свойства могут быть параметризованы. Это означает, что запрос или команду можно использовать шаблоны вместо литеральных значений и привязываемые к приложению или определяемые пользователем переменные. Параметры в SQL-запросов, можно привязать к переменные сеанса, значения, которые передаются в строке запроса для страницы веб-форм, значения свойств из других серверных элементов управления и многое другое. Дополнительные сведения об использовании параметров в запросы SQL с <xref:System.Web.UI.WebControls.SqlDataSource>, в разделе [использование параметров с элементами управления источника данных для фильтрации](http://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f) и [использование параметров с помощью элемента управления SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
> [!NOTE]
>  По умолчанию, если один из параметров, `null` при выполнении `Select` команд, данные не будут возвращены и будет создано исключение. Это поведение можно изменить, задав <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A> свойства `false`.  
  
<a name="data_provider"></a>   
## <a name="data-provider"></a>Поставщик данных  
 По умолчанию <xref:System.Web.UI.WebControls.SqlDataSource> управления работает с поставщиком данных .NET Framework для SQL Server, но <xref:System.Web.UI.WebControls.SqlDataSource> не является Microsoft SQL определенных серверов. Можно подключить <xref:System.Web.UI.WebControls.SqlDataSource> управления с любым другим продуктом базы данных, для которых имеется управляемый поставщик ADO.NET. При использовании с <xref:System.Data.OleDb?displayProperty=nameWithType> поставщика, <xref:System.Web.UI.WebControls.SqlDataSource> может работать с любой OLE DB-совместимые базы данных. При использовании с <xref:System.Data.Odbc?displayProperty=nameWithType> поставщика, <xref:System.Web.UI.WebControls.SqlDataSource> может использоваться с любым драйвера ODBC и базы данных, включая IBM DB2, MySQL и PostgreSQL. При использовании с <xref:System.Data.OracleClient?displayProperty=nameWithType> поставщика, <xref:System.Web.UI.WebControls.SqlDataSource> можно работать с базами данных Oracle 8.1.7 и более поздних версий. Список допустимых поставщиков регистрируется в `DbProviderFactories` раздел файла конфигурации, либо в файле Machine.config или Web.config. Дополнительные сведения см. в разделе [при выборе данных с помощью элемента управления SqlDataSource](http://msdn.microsoft.com/library/44623286-ff5a-4148-8a3c-85c56ed545eb).  
  
<a name="caching"></a>   
## <a name="caching"></a>Кэширование  
 При отображении данных на странице с помощью <xref:System.Web.UI.WebControls.SqlDataSource> элемента управления, можно увеличить производительность страницы с помощью возможности элемента управления источника данных кэширования данных. Кэширование уменьшает нагрузку на серверах баз данных за счет использования памяти веб-сервера. в большинстве случаев это хороший компромисс. <xref:System.Web.UI.WebControls.SqlDataSource> Автоматически кэширует данные при <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> свойству `true` и <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> присваивается количество секунд, в кэше хранятся данные перед отменой записи кэша. Можно также указать <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> и необязательный <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> значение.  
  
<a name="additional_features"></a>   
## <a name="additional-features"></a>Дополнительные функции  
 <xref:System.Web.UI.WebControls.SqlDataSource> Предоставляет дополнительные возможности, перечисленные в следующей таблице.  
  
|Возможность|Требования|  
|----------------|------------------|  
|Кэширование|Задать <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> свойства <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> значение <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> свойства `true`и <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> и <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> свойства в соответствии с поведение кэширования для кэшированных данных.|  
|Удаление|Задать <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> свойства инструкцию SQL для удаления данных. Этот оператор обычно является параметризованным.|  
|Фильтрация|Задать <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> свойства <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> значение. Задать <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> свойства в выражении фильтрации, используемый для фильтрации данных при <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> вызывается метод.|  
|Вставка|Задать <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> свойства инструкцию SQL, используемый для вставки данных. Этот оператор обычно является параметризованным.|  
|Разбивка на страницы|В настоящее время поддерживается не <xref:System.Web.UI.WebControls.SqlDataSource>, однако некоторые привязки к данным элементы управления, такие как <xref:System.Web.UI.WebControls.GridView>, поддержку разбиения на страницы, при установке <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> свойства <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> значение.|  
|Выбор|Задать <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> свойства для инструкции SQL, используемые для получения данных.|  
|Сортировка|Задайте для свойства <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> значение <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>.|  
|Updating|Задать <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> свойства инструкцию SQL, используемую для обновления данных. Этот оператор обычно является параметризованным.|  
  
<a name="data_source_view"></a>   
## <a name="data-source-view"></a>Представление источника данных  
 Как и для всех источников данных, <xref:System.Web.UI.WebControls.SqlDataSource> элемента управления связано с классом представления источника данных. <xref:System.Web.UI.WebControls.SqlDataSource> Элемент управления имеет только один связанный <xref:System.Web.UI.WebControls.SqlDataSourceView>, и всегда имеет имя `Table`.  
  
 Нет не визуализация элемента <xref:System.Web.UI.WebControls.SqlDataSource> управления; оно реализовано как элемент управления, чтобы его можно создать декларативно, а также, чтобы разрешить ему принимать участие в управлении состоянием. В результате <xref:System.Web.UI.WebControls.SqlDataSource> не поддерживает возможности visual, такие как те, которые предоставляются <xref:System.Web.UI.DataSourceControl.EnableTheming%2A> или <xref:System.Web.UI.DataSourceControl.SkinID%2A> свойства.  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Декларативный синтаксис  
  
```  
<asp:SqlDataSource  
    CacheDuration="string|Infinite"  
    CacheExpirationPolicy="Absolute|Sliding"  
    CacheKeyDependency="string"  
    CancelSelectOnNullParameter="True|False"  
    ConflictDetection="OverwriteChanges|CompareAllValues"  
    ConnectionString="string"  
    DataSourceMode="DataReader|DataSet"  
    DeleteCommand="string"  
    DeleteCommandType="Text|StoredProcedure"  
    EnableCaching="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    FilterExpression="string"  
    ID="string"  
    InsertCommand="string"  
    InsertCommandType="Text|StoredProcedure"  
    OldValuesParameterFormatString="string"  
    OnDataBinding="DataBinding event handler"  
    OnDeleted="Deleted event handler"  
    OnDeleting="Deleting event handler"  
    OnDisposed="Disposed event handler"  
    OnFiltering="Filtering event handler"  
    OnInit="Init event handler"  
    OnInserted="Inserted event handler"  
    OnInserting="Inserting event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnSelected="Selected event handler"  
    OnSelecting="Selecting event handler"  
    OnUnload="Unload event handler"  
    OnUpdated="Updated event handler"  
    OnUpdating="Updating event handler"  
    ProviderName="string|System.Data.Odbc|System.Data.OleDb|  
        System.Data.OracleClient|System.Data.SqlClient|  
        Microsoft.SqlServerCe.Client"  
    runat="server"  
    SelectCommand="string"  
    SelectCommandType="Text|StoredProcedure"  
    SkinID="string"  
    SortParameterName="string"  
    SqlCacheDependency="string"  
    UpdateCommand="string"  
    UpdateCommandType="Text|StoredProcedure"  
    Visible="True|False"  
>  
        <DeleteParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </DeleteParameters>  
        <FilterParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </FilterParameters>  
        <InsertParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </InsertParameters>  
        <SelectParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </SelectParameters>  
        <UpdateParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </UpdateParameters>  
</asp:SqlDataSource>  
```  
  
   
  
## Examples  
 Проект Visual Studio Web сайта с исходным кодом доступен по следующему адресу: [загрузить](http://go.microsoft.com/fwlink/?LinkId=192424).  
  
 Этот раздел содержит четыре примера кода:  
  
-   В первом примере кода показано, как отобразить данные из SQL Server в <xref:System.Web.UI.WebControls.GridView> управлять с помощью декларативного синтаксиса.  
  
-   Во втором примере кода показано, как отобразить данные из ODBC-совместимую базу данных в <xref:System.Web.UI.WebControls.GridView> управлять с помощью декларативного синтаксиса.  
  
-   В третьем примере кода показано, как отображать и обновлять данные в <xref:System.Web.UI.WebControls.GridView> элемента управления.  
  
-   В четвертом примере кода показано, как отображать и обновлять данные в <xref:System.Web.UI.WebControls.DropDownList> элемента управления.  
  
    > [!NOTE]
    >  Эти примеры демонстрируют использование декларативного синтаксиса для доступа к данным. Сведения о том, как получить доступ к данным с помощью кода, а не разметка см. в разделе [доступ к данным в Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).  
  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.SqlDataSource> управления декларативно для извлечения данных из SQL Server и отобразит в <xref:System.Web.UI.WebControls.GridView> элемента управления.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/CS/sql3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/VB/sql3vb.aspx#1)]  
  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.SqlDataSource> управления декларативно для получения данных из базы данных ODBC-совместимую и отобразить ее в <xref:System.Web.UI.WebControls.GridView> элемента управления. <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> Свойство — имя поставщика данных .NET Framework для ODBC, который является <xref:System.Data.Odbc?displayProperty=nameWithType>.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_3odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3odbc/CS/odbc3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_3odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3odbc/VB/odbc3vb.aspx#1)]  
  
 В следующем примере кода демонстрируется отображение общих и сценарии обновления с <xref:System.Web.UI.WebControls.GridView> элемента управления. Как в предыдущих примерах отображаются данные из базы данных Northwind в <xref:System.Web.UI.WebControls.GridView> элемента управления. Кроме того поскольку <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> свойство задано и <xref:System.Web.UI.WebControls.GridView.AutoGenerateEditButton%2A> свойству `true`, можно изменить и обновить записи с без дополнительного кода. <xref:System.Web.UI.WebControls.GridView> Управления автоматически обрабатывает добавление параметров для <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> сбора и вызовы <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> метод при **обновление** кнопку в <xref:System.Web.UI.WebControls.GridView> нажатии элемента управления.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_5sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_5sql/CS/sql5cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_5sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_5sql/VB/sql5vb.aspx#1)]  
  
 В следующем примере кода демонстрируется отображение общих и сценарии обновления с <xref:System.Web.UI.WebControls.DropDownList> и <xref:System.Web.UI.WebControls.TextBox> элементов управления. <xref:System.Web.UI.WebControls.DropDownList> Управления автоматически не добавляются параметры обновления для <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> коллекции и вызов не <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> метод, поэтому необходимо сделать это. Параметры обновления задаются декларативно и можно добавить обработчик событий для выполнения <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> операции, когда происходит событие.  
  
> [!IMPORTANT]
>  Этот пример содержит текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
    <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceControl" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</summary>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
        <altmember cref="T:System.Web.UI.DataSourceControl" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
        <altmember cref="T:System.Web.UI.DataSourceControl" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSource (string connectionString, string selectCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string selectCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, selectCommand As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSource(System::String ^ connectionString, System::String ^ selectCommand);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="selectCommand" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">Строка, используемая для подключения к основной базе данных.</param>
        <param name="selectCommand">SQL-запрос используется для извлечения данных из основной базы данных. Если SQL-запрос является параметризованной SQL-строкой, может понадобиться добавить объекты <see cref="T:System.Web.UI.WebControls.Parameter" /> в коллекцию <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> с заданной строкой подключения и командой Select.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поскольку различные системы баз данных используют различные диалекты SQL, синтаксис `selectCommand` зависит от текущей ADO.NET используемого поставщика, который определяется <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> свойство. Если строка SQL представляет собой параметризованный запрос или команду, заполнитель параметра также зависит от используемого поставщика ADO.NET. Например, если поставщик является <xref:System.Data.SqlClient?displayProperty=nameWithType>, который является поставщиком по умолчанию для <xref:System.Web.UI.WebControls.SqlDataSource> класс, заполнитель параметра является `'@parameterName'`. Тем не менее если поставщик <xref:System.Data.Odbc?displayProperty=nameWithType> или <xref:System.Data.OleDb?displayProperty=nameWithType>, заполнитель параметра является `'?'`. Дополнительные сведения о параметризованных запросах и командах SQL см. в разделе [использование параметров с помощью элемента управления SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Значение может быть строкой SQL или имя хранимой процедуры, если источник данных поддерживает хранимые процедуры.  
  
   
  
## Examples  
 В следующем примере кода показано, как создать <xref:System.Web.UI.WebControls.SqlDataSource> управлять с помощью <xref:System.Web.UI.WebControls.SqlDataSource.%23ctor%2A> конструктор. Пример очень редко, <xref:System.Web.UI.WebControls.SqlDataSource> управления используется не на страницу Web Forms, но в реализации объекта среднего уровня как простой способ для бизнес-объекта для взаимодействия с базой данных. В этом примере строки соединения, которая хранится в файле Web.config.  
  
 Данный пример кода является частью большего примера, приведенного для <xref:System.Web.UI.WebControls.ObjectDataSource> класса.  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/northwindemployee1.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/northwindemployee1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSource (string providerName, string connectionString, string selectCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerName, string connectionString, string selectCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerName As String, connectionString As String, selectCommand As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSource(System::String ^ providerName, System::String ^ connectionString, System::String ^ selectCommand);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="selectCommand" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerName">Имя поставщика данных, используемого объектом <see cref="T:System.Web.UI.WebControls.SqlDataSource" />. Если поставщик не задан, объект <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> использует по умолчанию поставщик ADO.NET для Microsoft SQL Server.</param>
        <param name="connectionString">Строка, используемая для подключения к основной базе данных.</param>
        <param name="selectCommand">SQL-запрос используется для извлечения данных из основной базы данных. Если SQL-запрос является параметризованной SQL-строкой, может понадобиться добавить объекты <see cref="T:System.Web.UI.WebControls.Parameter" /> в коллекцию <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> с заданной строкой подключения и командой Select.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поскольку различные системы баз данных используют различные диалекты SQL, синтаксис `selectCommand` зависит от текущей ADO.NET используемого поставщика, который определяется `providerName` параметра. Если строка SQL представляет собой параметризованный запрос или команду, заполнитель параметра также зависит от используемого поставщика ADO.NET. Например, если поставщик является <xref:System.Data.SqlClient?displayProperty=nameWithType>, который является поставщиком по умолчанию для <xref:System.Web.UI.WebControls.SqlDataSource> класс, заполнитель параметра является `'@parameterName'`. Тем не менее если поставщик <xref:System.Data.Odbc?displayProperty=nameWithType> или <xref:System.Data.OleDb?displayProperty=nameWithType>, заполнитель параметра является `'?'`. Дополнительные сведения о параметризованных запросах и командах SQL см. в разделе [использование параметров с помощью элемента управления SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Свойство может быть строкой SQL или имя хранимой процедуры, если источник данных поддерживает хранимые процедуры.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="CacheDuration">
      <MemberSignature Language="C#" Value="public virtual int CacheDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheDuration" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CacheDuration { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataSourceCacheDurationConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает длину промежутка времени (в секундах), в течение которого элемент управления источником данных кэширует данные, извлекаемые методом <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />.</summary>
        <value>Количество секунд, на протяжении которых объект <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> кэширует результаты операции <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />. Значение по умолчанию — 0. Значение не может быть отрицательным.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource> Элемент управления поддерживает кэширование данных. При кэшировании данных <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> метод получает данные из кэша, а не из базы данных. По истечении срока действия кэша <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> метод получает данные из базы данных и кэширует данные.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource> Управления автоматически кэширует данные при <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> свойству `true` и <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> свойству присвоено значение больше нуля, которое указывает количество секунд, что кэш хранит данные до записи кэша удаляется. Значение 0 указывает на бесконечную длительность существования кэша.  
  
 Поведение кэша определяется сочетанием длительность и <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> свойства. Если <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> свойству <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> значение <xref:System.Web.UI.WebControls.SqlDataSource> кэширует данные в первой операции извлечения, он находится в памяти, не более в течение времени, который задается параметром <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> свойство. Данные могут быть освобождены перед значение длительности, если требуется память. Кэш обновляется во время следующей операции. Если <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> свойству <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> значение элемента управления источником данных кэширует данные в первой операции извлечения данных, но сбрасывает интервал времени, что он содержит кэш для каждой последующей операции. Истечения срока действия кэша, если отсутствует действие в течение времени, равный <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> значение с момента последнего <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> операции.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource> Управления может кэшировать данные только в том случае, когда он находится в <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> режиме. Объект <xref:System.NotSupportedException> исключение <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> метод, если <xref:System.Web.UI.WebControls.SqlDataSource> задано для элемента управления <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> значение и кэширование включена.  
  
> [!IMPORTANT]
>  При использовании олицетворения клиента во время проверки подлинности Microsoft Windows данные кэшируются в том случае, когда первый пользователь обращается к данным. Если другой пользователь запрашивает те же данные, данные извлекаются из кэша. Данные извлекаются не используется другое обращение к базе данных для проверки доступа пользователя к данным. Если предполагается, что несколько пользователей для доступа к данным, и требуется, чтобы в каждом извлечении данных должна выполняться проверка в конфигурациях безопасности базы данных, не используйте кэширование.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется извлечение данных из базы данных Northwind в Microsoft SQL Server и отобразить ее в <xref:System.Web.UI.WebControls.GridView> элемент управления с включено кэширование данных. <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> Составляет 20 секунд и, поскольку <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> свойству <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> значение по умолчанию пользователи этой страницы будут видеть обновленные данные каждые 20 секунд.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/CS/sql18cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/VB/sql18vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" />
      </Docs>
    </Member>
    <Member MemberName="CacheExpirationPolicy">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheExpirationPolicy As DataSourceCacheExpiry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::DataSourceCacheExpiry CacheExpirationPolicy { System::Web::UI::DataSourceCacheExpiry get(); void set(System::Web::UI::DataSourceCacheExpiry value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceCacheExpiry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает поведение при истечении срока действия кэша, которая в сочетании со сроком кэширования описывает принципы работы кэша, используемого элементом управления источником данных.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Web.UI.DataSourceCacheExpiry" />. Значением по умолчанию является <see cref="F:System.Web.UI.DataSourceCacheExpiry.Absolute" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource> Элемент управления поддерживает кэширование данных. При кэшировании данных <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> метод получает данные из кэша, а не из базы данных. По истечении срока действия кэша <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> метод получает данные из базы данных и кэширует данные.  
  
 Поведение кэша определяется сочетанием <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> и <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> параметры. Если <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> свойство имеет значение <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> значение, <xref:System.Web.UI.WebControls.SqlDataSource> кэширует данные в первой операции извлечения данных, хранит его в памяти за период времени, который задается параметром <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> свойство, а затем отбрасывает ее после время имеет промежуток. Кэш обновляется во время следующей операции. Если <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> свойству <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> значение элемента управления источником данных кэширует данные в первой операции извлечения данных, но сбрасывает интервал времени, что он содержит кэш для каждой последующей операции. Истечения срока действия кэша, если отсутствует действие в течение времени, равный <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> значение с момента последнего <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> операции.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource> Управления может кэшировать данные только тогда, когда в <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> режиме. Объект <xref:System.NotSupportedException> исключение <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> метод, если <xref:System.Web.UI.WebControls.SqlDataSource> задано для элемента управления <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> значение и кэширование включена.  
  
> [!IMPORTANT]
>  При использовании олицетворения клиента во время проверки подлинности Microsoft Windows данные кэшируются в том случае, когда первый пользователь обращается к данным. Если другой пользователь запрашивает те же данные, данные извлекаются из кэша. Данные извлекаются не используется другое обращение к базе данных для проверки доступа пользователя к данным. Если предполагается, что несколько пользователей для доступа к данным, и требуется, чтобы в каждом извлечении данных должна выполняться проверка в конфигурациях безопасности базы данных, не используйте кэширование.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется извлечение данных из базы данных Northwind в Microsoft SQL Server и отобразить ее в <xref:System.Web.UI.WebControls.GridView> элемент управления с включено кэширование данных. Поскольку <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> свойству <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> значения, пользователи не будут видеть обновленные данные, даже если <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> значение составляет 20 секунд. Кэшированные данные обновляются только в том случае, если отсутствует действие на странице более 20 секунд с момента последней загрузки страницы.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_19sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_19sql/CS/sql19cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_19sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_19sql/VB/sql19vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" />
      </Docs>
    </Member>
    <Member MemberName="CacheKeyDependency">
      <MemberSignature Language="C#" Value="public virtual string CacheKeyDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CacheKeyDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheKeyDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CacheKeyDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает определенную пользователем зависимость ключа, связанную со всеми объектами кэша данных, созданными элементом управления источником данных. Срок действия всех объектов кэша истекает явным образом при истечении срока действия ключа.</summary>
        <value>Ключ, по которому идентифицируются все объекты кэша, созданные элементом управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource> Элемент управления поддерживает кэширование данных. При кэшировании данных <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> метод получает данные из кэша, а не из базы данных. По истечении срока действия кэша <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> метод получает данные из базы данных и кэширует данные.  
  
 Можно задать <xref:System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency%2A> свойством, чтобы создать зависимость между все записи кэша, созданные <xref:System.Web.UI.WebControls.SqlDataSource> управления и ключ. Можно программно завершиться все записи кэша в любое время по истечение срока действия ключа.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource> Управления может кэшировать данные только тогда, когда в <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> режиме. Объект <xref:System.NotSupportedException> исключение <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> метод, если <xref:System.Web.UI.WebControls.SqlDataSource> задано для элемента управления <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> значение и кэширование включена.  
  
 Запись кэша, уникальный для каждой комбинации создается <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>, <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A>, и <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> свойства. Несколько <xref:System.Web.UI.WebControls.SqlDataSource> элементы управления можно использовать те же записи кэша в сценариях, где элементы управления загружают и тех же данных из одной базы данных.  
  
> [!IMPORTANT]
>  При использовании олицетворения клиента во время проверки подлинности Microsoft Windows данные кэшируются в том случае, когда первый пользователь обращается к данным. Если другой пользователь запрашивает те же данные, данные извлекаются из кэша. Данные извлекаются не используется другое обращение к базе данных для проверки доступа пользователя к данным. Если предполагается, что несколько пользователей для доступа к данным, и требуется, чтобы в каждом извлечении данных должна выполняться проверка в конфигурациях безопасности базы данных, не используйте кэширование.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
      </Docs>
    </Member>
    <Member MemberName="CancelSelectOnNullParameter">
      <MemberSignature Language="C#" Value="public virtual bool CancelSelectOnNullParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancelSelectOnNullParameter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CancelSelectOnNullParameter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CancelSelectOnNullParameter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, позволяющее определить, будет ли операция извлечения отменяться в случае равенства любого из параметров, содержащихся в коллекции <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />, значению <see langword="null" />.</summary>
        <value>
          <see langword="true" />, если операция извлечения данных отменяется в случае равенства параметра, содержащегося в коллекции <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />, значению <see langword="null" />; в противном случае — <see langword="false" />. Значение по умолчанию: <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A> свойства хранятся в состоянии представления.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictDetection">
      <MemberSignature Language="C#" Value="public System.Web.UI.ConflictOptions ConflictDetection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ConflictOptions ConflictDetection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.ConflictDetection" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictDetection As ConflictOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ConflictOptions ConflictDetection { System::Web::UI::ConflictOptions get(); void set(System::Web::UI::ConflictOptions value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, позволяющее определить действия, выполняемые элементом управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> в процессе обновления и удаления при изменении данных в строке основной базы данных во время выполнения операции.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Web.UI.ConflictOptions" />. Значением по умолчанию является <see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> Свойство определяет параметры для старых и новых значений, применены ли `Update` метод. Например, если команда, определяемое <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> возвращает <xref:System.Data.DataTable> объекта со столбцами `Name` и `Number` и <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> свойству <xref:System.Web.UI.ConflictOptions.OverwriteChanges> значение, параметры создаются для `Name` и `Number` для `Update` метод. Если <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> свойству <xref:System.Web.UI.ConflictOptions.CompareAllValues> значение, параметры создаются для `Name`, `Number`, `original_Name`, и `original_Number`. (Зависит от точные имена параметров для исходных значений <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> свойство.) <xref:System.Web.UI.WebControls.SqlDataSource> Затем определяет элемент управления, если `Update` метода, указанного в <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> свойство имеет параметры, которые соответствуют.  
  
 Одновременное управление — метод, используемый хранилищами данных для управления чтением и изменения в хранилище, когда несколько пользователей получают доступ и управление те же данные данных. Например один клиент считывает данные и представляет их пользователю, пока другой клиент считывает те же данные и представляет их с другим пользователем. Если для обоих пользователей обновлять данные и отправляют их в хранилище данных, неожиданный результат может произойти, так как оба клиента могут обновлять разные значения для тех же данных. Это считается конфликтом. Установив <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> свойства <xref:System.Web.UI.ConflictOptions.CompareAllValues> значение, ваш `Update` метода можно сравнить старое и новое значения к исходному источнику данных для обнаружения конфликтов и обрабатывать их, при необходимости.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> Делегирует свойство <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> свойство <xref:System.Web.UI.WebControls.SqlDataSourceView> объекта, с которым связан <xref:System.Web.UI.WebControls.SqlDataSource> элемента управления.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ConflictOptions" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public virtual string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку подключения к конкретному поставщику ADO.NET, используемую элементом управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> для подключения к основной базе данных.</summary>
        <value>Строка подключения к конкретному поставщику данных платформы .NET Framework, которую использует элемент управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> для подключения к представляемой им базе данных SQL. Значение по умолчанию — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource> Элемент управления может использоваться со множеством поставщиков ADO.NET и синтаксис строки соединения, используемый для подключения к источнику данных, характерное для поставщика.  
  
 При настройке <xref:System.Web.UI.WebControls.SqlDataSource> задано элемента управления, <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> свойство типа базы данных (значение по умолчанию — <xref:System.Data.SqlClient?displayProperty=nameWithType>), и задать <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> свойство строку подключения, которая включает сведения, необходимые для подключения в базу данных. Содержимое строки соединения отличаются в зависимости от типа базы данных, получает доступ к элементу управления источника данных. Например <xref:System.Web.UI.WebControls.SqlDataSource> управления требуется имя сервера, имя базы данных (каталог) и сведения о способах проверки подлинности пользователя при подключении к SQL Server. Сведения о содержимом строки подключения см. в разделе <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> свойство для <xref:System.Data.SqlClient.SqlConnection> класса, <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> свойство для <xref:System.Data.OracleClient.OracleConnection> класса, <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> свойство <xref:System.Data.OleDb.OleDbConnection> класс, или <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> Свойство <xref:System.Data.Odbc.OdbcConnection> класса.  
  
 При изменении <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> свойства <xref:System.Web.UI.IDataSource.DataSourceChanged> события, вызывая всех элементов управления, привязанных к <xref:System.Web.UI.WebControls.SqlDataSource> управления для повторной привязки.  
  
> [!IMPORTANT]
>  Сведения о хранении строки подключения см. в разделе [How To: защита, если элемент управления источником данных с помощью строки подключения](http://msdn.microsoft.com/library/942f6dcb-d278-4bec-8403-60eede9bcd62).  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как задать <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> свойство, чтобы соединиться с базой данных Microsoft SQL Server и отображает результаты <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> свойства <xref:System.Web.UI.WebControls.GridView> элемента управления. Во втором примере кода демонстрируется более сложных сценариях, где <xref:System.Web.UI.WebControls.SqlDataSource> элемент управления используется для отображения и обновления данных в защищенной паролем базы данных Microsoft Access. В каждом случае `connectionStrings` элемента в файле Web.config отображается первым, следуют страница ASP.NET, которая содержит <xref:System.Web.UI.WebControls.SqlDataSource> элемента управления.  
  
 В следующем примере кода показано, как задать <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> свойства для подключения к базе данных SQL Server и отображения результатов <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> свойства <xref:System.Web.UI.WebControls.GridView> элемента управления.  
  
  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/CS/sql3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/VB/sql3vb.aspx#1)]  
  
 В следующем примере кода демонстрируется более сложные сценарии, чем в предыдущем примере кода, где <xref:System.Web.UI.WebControls.SqlDataSource> элемент управления используется для отображения и обновления данных, защищенной паролем базы данных Access. Поскольку <xref:System.Web.UI.WebControls.SqlDataSource> используется с правами доступа, <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> свойству <xref:System.Data.OleDb> поставщика и <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> свойству строку подключения базы данных UNC общего доступа. Объект <xref:System.Web.UI.WebControls.GridView> элемент управления отображает заказы с даты отгрузки. Вы можете обновить заказ, установите соответствующий флажок и нажмите кнопку **обновление** кнопки.  
  
> [!IMPORTANT]
>  Данный пример включает пароль в виде обычного текста только для иллюстрации. В реальном приложении строки подключения, которые включают пароли должны быть зашифрованы. Дополнительные сведения см. в разделе [Защита сведений о подключении](~/docs/framework/data/adonet/protecting-connection-information.md).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_22sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/CS/sql22cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_22sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/VB/sql22vb.aspx#1)]  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_22sql#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/CS/sql22cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_22sql#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/VB/sql22vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" />
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceView">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.SqlDataSourceView CreateDataSourceView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.SqlDataSourceView CreateDataSourceView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDataSourceView (viewName As String) As SqlDataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::SqlDataSourceView ^ CreateDataSourceView(System::String ^ viewName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">Имя представления источника данных.</param>
        <summary>Создает объект представления источника данных, связанный с элементом управления источником данных.</summary>
        <returns>Объект <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />, связанный с <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Классы, производные от <xref:System.Web.UI.WebControls.SqlDataSource> класс может переопределить <xref:System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView%2A> метод для возврата строго типизированные объекты представлений источников данных.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="T:System.Web.UI.DataSourceView" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceMode DataSourceMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceMode DataSourceMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSourceMode As SqlDataSourceMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceMode DataSourceMode { System::Web::UI::WebControls::SqlDataSourceMode get(); void set(System::Web::UI::WebControls::SqlDataSourceMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает режим извлечения данных, используемый элементом управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> для выборки данных.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Web.UI.WebControls.SqlDataSourceMode" />. Значение по умолчанию — <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataSet" /> значение.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Определяет режим извлечения данных как <xref:System.Web.UI.WebControls.SqlDataSource> управления извлекает данные из базы данных.  
  
 Когда <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> свойству <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> значения, данные загружаются в <xref:System.Data.DataSet> объекта и хранятся в памяти на сервере. Это позволяет использовать сценарии, где элементы управления пользовательского интерфейса, такие как <xref:System.Web.UI.WebControls.GridView>, сортировки, фильтрации и возможности разбиения по страницам.  
  
 Когда <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> свойству <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> значения, данные извлекаются с <xref:System.Data.IDataReader> объекта, который является курсором последовательного доступа, только для чтения. Конкретный тип <xref:System.Data.IDataReader> объекта зависит от поставщика данных .NET, <xref:System.Web.UI.WebControls.SqlDataSource> целей, которых определяется <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> свойство. По умолчанию <xref:System.Web.UI.WebControls.SqlDataSource> управления использует поставщика для Microsoft SQL Server, <xref:System.Data.SqlClient?displayProperty=nameWithType>, и модуль чтения данных является <xref:System.Data.SqlClient.SqlDataReader> объекта.  
  
 При изменении <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> свойства <xref:System.Web.UI.IDataSource.DataSourceChanged> события, вызывая всех элементов управления, привязанных к <xref:System.Web.UI.WebControls.SqlDataSource> для повторной привязки.  
  
 Значение <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> свойства хранятся в состоянии представления.  
  
   
  
## Examples  
 В следующем примере кода показано, как задать <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> свойство <xref:System.Web.UI.WebControls.SqlDataSource> управления <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> значение для сценария с <xref:System.Web.UI.WebControls.ListBox> элемента управления, не требующим сортировки, разбиение на страницы и фильтрации.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/CS/sql1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/VB/sql1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение свойства <see cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" /> не равно ни одному из значений, определенных в <see cref="T:System.Web.UI.WebControls.SqlDataSourceMode" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Выполняет операцию удаления, используя SQL-строку <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /> и параметры из коллекции <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />.</summary>
        <returns>Значение, представляющее число строк, удаленных из основной базы данных.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Перед выполнением операции delete, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> метод вызывается для вызова <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> событий. Можно обработать это событие для проверки значений параметров и всевозможной перед операцией удаления.  
  
 После завершения операции, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> метод вызывается для вызова <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> событий. Можно обработать это событие для выполнения обработки после анализа всех возвращенных значений и коды ошибок и.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> Метод предоставляется для программного доступа к `Delete` метод. Если <xref:System.Web.UI.WebControls.SqlDataSource> элемента управления связано с элементом управления с привязкой к данным, элемент управления с привязкой к данным автоматически вызывает **удалить** метод.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> Метод делегирует <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> метод <xref:System.Web.UI.WebControls.SqlDataSourceView> объекта, с которым связан <xref:System.Web.UI.WebControls.SqlDataSource> элемента управления. Для выполнения операции, <xref:System.Web.UI.WebControls.SqlDataSourceView> строит <xref:System.Data.Common.DbCommand> с помощью <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> текст и любые связанные с ним <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> значения, а затем выполняет <xref:System.Data.Common.DbCommand> в основной базе данных.  
  
   
  
## Examples  
 В следующем примере кода показано, как задать <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> текст для удаления заказа из базы данных "Борей". Изначально данные извлекаются из таблицы Orders и отображаются в <xref:System.Web.UI.WebControls.DropDownList> элемента управления. Необходимо явно объявить <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> свойство и вызвать <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> метод при использовании элементов управления с привязкой к данным, таких как <xref:System.Web.UI.WebControls.DropDownList> (в отличие от других элементов управления, таких как <xref:System.Web.UI.WebControls.GridView> и <xref:System.Web.UI.WebControls.DetailsView>, автоматическое заполнение параметры и вызвать метод <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> метод управления источником данных). В этом примере <xref:System.Web.UI.WebControls.Button.OnClick%2A> делегируется событие закрытый `OnDelete` обработчик событий, который явно вызывает <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> метод <xref:System.Web.UI.WebControls.SqlDataSource> элемента управления.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/CS/sql11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/VB/sql11vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Объекту <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> не удается установить подключение к базовому источнику данных.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public string DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeleteCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает SQL-строку, которая используется элементом управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> для удаления данных из основной базы данных.</summary>
        <value>SQL-строка, используемая элементом управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> для удаления данных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> Представляет запроса SQL или имя хранимой процедуры и используется <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> метод.  
  
 Различные системы баз данных используют различные диалекты SQL, поэтому синтаксис строки SQL зависит от используемого в данный момент поставщика ADO.NET, который определяется свойством <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>. Если строка SQL представляет собой параметризованный запрос или команду, синтаксис параметра также зависит от используемого поставщика ADO.NET. Например, если поставщик является <xref:System.Data.SqlClient?displayProperty=nameWithType>, который является поставщиком по умолчанию для <xref:System.Web.UI.WebControls.SqlDataSource> класс, синтаксис параметра является `'@parameterName'`. Тем не менее если поставщик <xref:System.Data.Odbc?displayProperty=nameWithType> или <xref:System.Data.OleDb?displayProperty=nameWithType>, заполнитель параметра является `'?'`. Дополнительные сведения о параметризованных запросах и командах SQL см. в разделе [использование параметров с помощью элемента управления SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> Свойство может быть строкой SQL или имя хранимой процедуры, если база данных поддерживает хранимые процедуры.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> Делегирует свойство <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> свойство <xref:System.Web.UI.WebControls.SqlDataSourceView> объекта, с которым связан <xref:System.Web.UI.WebControls.SqlDataSource> элемента управления.  
  
> [!IMPORTANT]
>  В целях безопасности <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> свойство хранится не в состоянии представления. Так как существует возможность декодирования содержимого состояния просмотра на стороне клиента, хранение конфиденциальных сведений о структуре базы данных в представлении состояния может привести к уязвимости.  
  
   
  
## Examples  
 В следующем примере кода показано, как задать <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> текст для удаления заказа из таблицы Orders базы данных "Борей". Данные извлекаются из таблицы Orders и отображаются в <xref:System.Web.UI.WebControls.GridView> элемента управления. <xref:System.Web.UI.WebControls.GridView> Отображает **удаление** кнопку автоматически при <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> свойству `true`. Кроме того, когда **удаление** по нажатию кнопки <xref:System.Web.UI.WebControls.GridView> элемент управления автоматически заполняет <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> сбора и вызовы <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> метод. Наконец, так как этот пример кода удаляет данные, обработчик событий добавляется попытаться выполнить резервное копирование базы данных на диск перед <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> выполняется операция.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType DeleteCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, позволяющее определить, чем является текст в свойстве <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />: оператором SQL или именем хранимой процедуры.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />. Значением по умолчанию является <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommandType%2A> Делегирует свойство <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType%2A> свойство <xref:System.Web.UI.WebControls.SqlDataSourceView> объекта, с которым связан <xref:System.Web.UI.WebControls.SqlDataSource> элемента управления.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Deleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит по завершении операции удаления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывать <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> событий для анализа значений выходных параметров, после завершения операции удаления. Выходные параметры доступны из <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> объекта, связанного с событием.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию, содержащую параметры, используемые свойством <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /> объекта <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />, связанного с элементом управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</summary>
        <value>Коллекция <see cref="T:System.Web.UI.WebControls.ParameterCollection" />, содержащая параметры, используемые свойством <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> свойство содержит параметризованный запрос SQL, <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> коллекции содержит любые <xref:System.Web.UI.WebControls.Parameter> объектов, которые соответствуют заполнителям в строке SQL.  
  
> [!NOTE]
>  Убедитесь, что не <xref:System.Web.UI.WebControls.BoundField> элементов управления в элементе управления с привязкой к данным, привязанному к <xref:System.Web.UI.WebControls.SqlDataSource> управления содержат имена, совпадающие имена параметров в <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> коллекции. Параметры, которые имеют одинаковое имя, как связанные поля исключаются из команды SQL и ошибка «параметра не указано» может привести.  
  
 Если <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> свойству <xref:System.Web.UI.ConflictOptions.CompareAllValues> значение, параметры создаются для старых и новых значений данных. Параметры для старые значения присваиваются согласно <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> свойство.  
  
 В зависимости от поставщика ADO.NET, порядок параметров в <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> коллекции может быть важной. <xref:System.Data.OleDb?displayProperty=nameWithType> И <xref:System.Data.Odbc?displayProperty=nameWithType> поставщики связать параметров в коллекции в порядке, в котором параметры появляются в параметризованный запрос SQL. <xref:System.Data.SqlClient?displayProperty=nameWithType> Поставщика, что поставщик ADO.NET по умолчанию для <xref:System.Web.UI.WebControls.SqlDataSource> контроля, связывает параметров в коллекции, совпадающий с именем параметра заполнитель в SQL-запросе. Дополнительные сведения о параметризованных запросах и командах SQL см. в разделе [использование параметров с помощью элемента управления SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> Извлекает свойство <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> , содержащийся в свойстве <xref:System.Web.UI.WebControls.SqlDataSourceView> объекта, с которым связан <xref:System.Web.UI.WebControls.SqlDataSource> элемента управления.  
  
> [!IMPORTANT]
>  Значения вставляются в параметры без проверки, что является потенциальной угрозой безопасности. Используйте <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> событий для проверки значений параметров перед выполнением запроса. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 В следующем примере кода показано, как задать <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> текст для удаления заказа из базы данных "Борей". Изначально данные извлекаются из таблицы Orders и отображаются в <xref:System.Web.UI.WebControls.DropDownList> элемента управления. Необходимо явно объявить <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> свойство и вызвать <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> метод при использовании элементов управления с привязкой к данным, таких как <xref:System.Web.UI.WebControls.DropDownList> (в отличие от других элементов управления, таких как <xref:System.Web.UI.WebControls.GridView> и <xref:System.Web.UI.WebControls.DetailsView>, который автоматически заполнять параметры и вызов <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> на элемент управления источником данных). В этом примере <xref:System.Web.UI.WebControls.Button.OnClick%2A> делегируется событие закрытый `OnDelete` обработчик событий, который явно вызывает <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> метод <xref:System.Web.UI.WebControls.SqlDataSource> элемента управления.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/CS/sql11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/VB/sql11vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Deleting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит перед операцией удаления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывать <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> событий для выполнения операций дополнительную инициализацию, относящиеся к приложению, для проверки значений параметров или для изменения значений параметров перед <xref:System.Web.UI.WebControls.SqlDataSource> элемент управления выполняет операцию удаления.  
  
 Соединение с источником данных не еще открыт при вызове делегата обработчика событий. Таким образом, невозможно отменить операцию непосредственно, путем вызова <xref:System.Data.Common.DbCommand.Cancel%2A> метод <xref:System.Data.Common.DbCommand> объекта, представленного <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> объекта. Тем не менее, можно отменить операцию базы данных, задав <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> свойство <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> объект `true`.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 В следующем примере кода показано, как обрабатывать <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> событие, возникающее перед <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> операция выполняется. Поскольку в этом примере осуществляется удаление данных из базы данных Northwind, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> обработчик добавляется попытаться выполнить резервное копирование базы данных на диск перед <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> выполняется операция.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="EnableCaching">
      <MemberSignature Language="C#" Value="public virtual bool EnableCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCaching" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableCaching { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение позволяющее определить, включено ли кэширование для элемента управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</summary>
        <value>
          Значение <see langword="true" />, если кэширование данных для элемента управления источником данных включено; в противном случае — значение <see langword="false" />. Значение по умолчанию: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource> Элемент управления поддерживает кэширование данных. При кэшировании данных <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> метод получает данные из кэша, а не из базы данных. По истечении срока действия кэша <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> метод получает данные из базы данных и кэширует данные.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource> Управления автоматически кэширует данные при <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> свойству `true` и <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> свойству присвоено значение больше нуля, которое указывает количество секунд, кэш хранит данные до извлечения новый набор.  
  
> [!IMPORTANT]
>  При использовании олицетворения клиента во время проверки подлинности Microsoft Windows данные кэшируются в том случае, когда первый пользователь обращается к данным. Если другой пользователь запрашивает те же данные, данные извлекаются из кэша. Данные извлекаются не используется другое обращение к базе данных для проверки доступа пользователя к данным. Если предполагается, что несколько пользователей для доступа к данным, и требуется, чтобы в каждом извлечении данных должна выполняться проверка в конфигурациях безопасности базы данных, не используйте кэширование.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется извлечение данных из базы данных Northwind в Microsoft SQL Server и отобразить ее в <xref:System.Web.UI.WebControls.GridView> элемент управления с включено кэширование данных. <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> Свойству `true` и <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> составляет 20 секунд. Поскольку <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> свойству <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> поля по умолчанию пользователи этой страницы будут видеть обновленные данные каждые 20 секунд.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/CS/sql18cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/VB/sql18vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Для свойства <see cref="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" /> задается значение <see langword="true" />, если кэширование не поддерживается элементом управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy" />
      </Docs>
    </Member>
    <Member MemberName="FilterExpression">
      <MemberSignature Language="C#" Value="public string FilterExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает выражение фильтра для применения при вызове метода <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />.</summary>
        <value>Строка, которая представляет выражение фильтрации, применяемое при получении данных с помощью метода <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> Значение свойства представляет собой строковое выражение формата (строка, которая обрабатывается <xref:System.String.Format%2A?displayProperty=nameWithType> метод), использующий значения в <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> коллекции для всех параметров подстановки, включенный в строку. Синтаксис выражений фильтра является тот же синтаксис, который принимается <xref:System.Data.DataView.RowFilter%2A> свойство, поскольку критерий фильтра применяется к <xref:System.Data.DataView.RowFilter%2A> свойство <xref:System.Data.DataView> объекта, возвращаемого из выполняемого <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> метод. Дополнительные сведения см. в разделе <xref:System.Data.DataColumn.Expression%2A>.  
  
 При добавлении параметров для <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> коллекции, можно также включить заполнители строку формата (например, `"{0}")` в выражении для замены значений параметров. Заменяются в соответствии с индексом параметра в <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> коллекции. Если объект в <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> коллекция `null`, объект будет заменен на пустую строку.  
  
 Можно включить параметры в <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> свойство. Если параметр имеет тип строки или символ, параметр нужно заключите в одинарные кавычки. Кавычки не требуются, если параметр имеет числовой тип. <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> Коллекция содержит параметры, которые вычисляются заполнителями, которые находятся в <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> свойство.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource> Элемент управления поддерживает фильтрации данных только тогда, когда в <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> режиме.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> Делегирует свойство <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> свойство <xref:System.Web.UI.WebControls.SqlDataSourceView> объекта, с которым связан <xref:System.Web.UI.WebControls.SqlDataSource> элемента управления.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется извлечение данных из базы данных Northwind и фильтрация с помощью <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> строки и <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> коллекции. <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> Свойство применяется в любое время <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> выполнить метод для извлечения данных. В этом примере <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> содержит заполнителя для параметра фильтра, который содержится в <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> коллекции. Кроме того, параметр filter является <xref:System.Web.UI.WebControls.ControlParameter> объекта, к которому привязан <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> свойства <xref:System.Web.UI.WebControls.DropDownList> элемента управления. Поскольку <xref:System.Web.UI.WebControls.DropDownList> элемент управления имеет его <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> свойство `true`, любое изменение в выделенный фрагмент для <xref:System.Web.UI.WebControls.DropDownList> вызывает отправку информации на сервер управления и <xref:System.Web.UI.WebControls.GridView> управления для повторной привязки к источнику данных Управление с новым фильтром.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Установлено свойство <see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" />; <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> используется в режиме <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataReader" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.FilterParameters" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="Filtering">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Filtering" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Filtering As SqlDataSourceFilteringEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceFilteringEventHandler ^ Filtering;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит перед операцией фильтрации.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывать <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> событий для выполнения операции проверки на значения параметра фильтра перед <xref:System.Web.UI.WebControls.SqlDataSource> элемент управления выполняет операцию фильтрации. Вы можете отменить <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> метод, задав <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> свойство <xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs> объект `true`. Это событие возникает только в том случае, если <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> свойству.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.Filtering?displayProperty=nameWithType> Делегирует событий <xref:System.Web.UI.WebControls.SqlDataSourceView.Filtering?displayProperty=nameWithType> событие <xref:System.Web.UI.WebControls.SqlDataSourceView> объекта, с которым связан <xref:System.Web.UI.WebControls.SqlDataSource> элемента управления.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection FilterParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.FilterParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ FilterParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию параметров, связанных с любыми местозаполнителями параметров в строке <see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" />.</summary>
        <value>Коллекция <see cref="T:System.Web.UI.WebControls.ParameterCollection" />, содержащая набор параметров, связанных с любыми местозаполнителями параметров, содержащимися в свойстве <see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Параметры в <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> коллекции связаны со всеми параметрами, которые указаны в <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> свойство. Местозаполнители параметров, указанных в <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> свойства сопоставляются по порядку параметра объектов в <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> коллекции при <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> вызывается метод.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> Извлекает свойство <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> , содержащийся в свойстве <xref:System.Web.UI.WebControls.SqlDataSourceView> объекта, с которым связан <xref:System.Web.UI.WebControls.SqlDataSource> элемента управления.  
  
> [!IMPORTANT]
>  Значения вставляются в параметры без проверки, что является потенциальной угрозой безопасности. Используйте <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> событий для проверки значений параметров перед выполнением запроса. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется извлечение данных из базы данных Northwind и фильтрация с помощью <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> и <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> свойства. <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> Свойство <xref:System.Web.UI.WebControls.SqlDataSource> управления применяется в любое время <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> выполнить метод для извлечения данных. В этом примере <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> свойство содержит заполнителя для параметра фильтра, который содержится в <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> коллекции. Кроме того, параметр filter является <xref:System.Web.UI.WebControls.ControlParameter> объекта, к которому привязан <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> свойства <xref:System.Web.UI.WebControls.DropDownList> элемента управления. Поскольку <xref:System.Web.UI.WebControls.DropDownList> управления имеет его <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> свойство `true`, все изменения <xref:System.Web.UI.WebControls.DropDownList> выбора вызывает отправку информации на сервер и <xref:System.Web.UI.WebControls.GridView> управления повторно привязать элемент управления источником данных с новый фильтр.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="GetDbProviderFactory">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.DbProviderFactory GetDbProviderFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.DbProviderFactory GetDbProviderFactory() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.GetDbProviderFactory" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDbProviderFactory () As DbProviderFactory" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::DbProviderFactory ^ GetDbProviderFactory();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbProviderFactory</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Data.Common.DbProviderFactory" />, связанный с поставщиком данных ADO.NET, идентифицируемым свойством <see cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" />.</summary>
        <returns>Объект <see cref="T:System.Data.Common.DbProviderFactory" />, представляющий указанный поставщик ADO.NET; в противном случае — экземпляр <see cref="N:System.Data.SqlClient" />, если поставщик не задан.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Common.DbProviderFactory> Используется свойство <xref:System.Web.UI.WebControls.SqlDataSource> управления для создания нужных объектов подключения, команды и параметра ADO.NET при взаимодействии с базой данных.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.Common.DbProviderFactory" />
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">Имя извлекаемого представления. Поскольку объект <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> поддерживает только одно представление, параметр <c>viewName</c> игнорируется.</param>
        <summary>Возвращает именованное представление источника данных, связанное с элементом управления источником данных.</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> с именем "Table", связанный с <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource> Элемент управления поддерживает только одно представление источника данных. Как и для всех объектов представления источника данных, <xref:System.Web.UI.WebControls.SqlDataSourceView> объект, связанный с элементом управления источником данных, определяет его возможности, выполняет все действия, необходимые для получения данных из базы данных и выполняет операции, такие как сортировка, Вставка, удаление и обновление.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="viewName" /> имеет значение <see langword="null" /> или другое, отличное от <c>Table</c>.</exception>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="protected override System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::ICollection ^ GetViewNames();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает коллекцию имен, представляющих список объектов представления, связанных с элементом управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</summary>
        <returns>Объект <see cref="T:System.Collections.ICollection" />, содержащий имена представлений, связанных с элементом управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource> Элемент управления поддерживает только одно представление базовых данных, с именем `"Table"`. <xref:System.Web.UI.WebControls.SqlDataSource.GetViewNames%2A> Метод возвращает коллекцию одного элемента — это имя одно представление.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Insert();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Выполняет операцию вставки, используя SQL-строку <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /> и параметры из коллекции <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />.</summary>
        <returns>Значение, представляющее число строк, вставленных в основную базу данных.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Перед выполнением операции вставки <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> метод вызывается для вызова <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> событий. Можно обработать это событие для проверки значений параметров и всевозможной перед <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> операции. Для выполнения операции вставки <xref:System.Web.UI.WebControls.SqlDataSourceView> объекта построения <xref:System.Data.Common.DbCommand> с помощью <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> текст и любые связанные с ним <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> свойства и затем выполняет <xref:System.Data.Common.DbCommand> объекта в основной базе данных.  
  
 После завершения операции, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> метод вызывается для вызова <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> событий. Можно обработать это событие для выполнения обработки после анализа всех возвращенных значений и коды ошибок и.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> Метод предоставляется для программного доступа к `Insert` метод. Если <xref:System.Web.UI.WebControls.SqlDataSource> элемента управления связано с элементом управления с привязкой к данным, элемент управления с привязкой к данным автоматически вызывает `Insert` метод.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> Метод делегирует <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A> метод <xref:System.Web.UI.WebControls.SqlDataSourceView> объекта, с которым связан <xref:System.Web.UI.WebControls.SqlDataSource> элемента управления.  
  
> [!IMPORTANT]
>  Значения вставляются в параметры без проверки, что является потенциальной угрозой безопасности. Используйте <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> событий для проверки значений параметров перед выполнением запроса. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется вставка данных в базе данных с помощью <xref:System.Web.UI.WebControls.SqlDataSource> управления и простую страницу Web Forms. Текущие данные в таблице данных отображаются в <xref:System.Web.UI.WebControls.DropDownList> элемента управления. Можно добавить новые записи, введя значения в <xref:System.Web.UI.WebControls.TextBox> элементов управления и выбрав **вставить** кнопки. При **вставить** кнопки, указанные значения вставляются в базу данных, а затем <xref:System.Web.UI.WebControls.DropDownList> обновляется.  
  
> [!IMPORTANT]
>  Этот пример содержит текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности и значения вставляются в параметры без проверки, который также является потенциальной угрозой безопасности. Используйте <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> событий для проверки значений параметров перед выполнением запроса. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
> [!NOTE]
>  В этом примере показано использование декларативного синтаксиса для доступа к данным. Сведения о том, как получить доступ к данным с помощью кода, а не разметка см. в разделе [доступ к данным в Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Объекту <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> не удается установить подключение к базовому источнику данных.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public string InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InsertCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает SQL-строку, используемую элементом управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> для вставки данных в основную базу данных.</summary>
        <value>SQL-строка, используемая объектом <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> для вставки данных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> Представляет запроса SQL или имя хранимой процедуры и используется <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> метод.  
  
 Различные системы баз данных используют различные диалекты SQL, поэтому синтаксис строки SQL зависит от используемого в данный момент поставщика ADO.NET, который определяется свойством <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>. Если строка SQL представляет собой параметризованный запрос или команду, заполнитель параметра также зависит от используемого поставщика ADO.NET. Например, если поставщик является <xref:System.Data.SqlClient?displayProperty=nameWithType>, который является поставщиком по умолчанию для <xref:System.Web.UI.WebControls.SqlDataSource> класс, заполнитель параметра является `'@parameterName'`. Тем не менее если поставщик <xref:System.Data.Odbc?displayProperty=nameWithType> или <xref:System.Data.OleDb?displayProperty=nameWithType>, заполнитель параметра является `'?'`. Дополнительные сведения о параметризованных запросах и командах SQL см. в разделе [использование параметров с помощью элемента управления SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> Может быть строкой SQL или имя хранимой процедуры, если источник данных поддерживает хранимые процедуры.  
  
 Это свойство делегирует <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> свойство <xref:System.Web.UI.WebControls.SqlDataSourceView> , связанный с <xref:System.Web.UI.WebControls.SqlDataSource> элемента управления.  
  
> [!IMPORTANT]
>  В целях безопасности <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> свойство не хранится состояние представления. Так как существует возможность декодирования содержимого состояния просмотра на стороне клиента, хранение конфиденциальных сведений о структуре базы данных в представлении состояния может привести к уязвимости.  
  
> [!IMPORTANT]
>  Значения вставляются в параметры без проверки, что является потенциальной угрозой безопасности. Используйте <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> событий для проверки значений параметров перед выполнением запроса. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как вставить данные в базе данных с помощью <xref:System.Web.UI.WebControls.SqlDataSource> управления и простую страницу Web Forms. Во втором примере кода показано, как извлечь данные из Microsoft SQL Server и отобразить ее в <xref:System.Web.UI.WebControls.GridView> управления и способ использования <xref:System.Web.UI.WebControls.DetailsView> управления, чтобы просмотреть подробные сведения о выбранной строки в <xref:System.Web.UI.WebControls.GridView> управления и в качестве формы для вставки новых записей.  
  
> [!NOTE]
>  Эти примеры демонстрируют использование декларативного синтаксиса для доступа к данным. Сведения о том, как получить доступ к данным с помощью кода, а не разметка см. в разделе [доступ к данным в Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).  
  
 В следующем примере кода демонстрируется вставка данных в базе данных с помощью <xref:System.Web.UI.WebControls.SqlDataSource> управления и простую страницу Web Forms. Текущие данные в таблице данных отображаются в <xref:System.Web.UI.WebControls.DropDownList> элемента управления. Можно добавить новые записи, введя значения в <xref:System.Web.UI.WebControls.TextBox> элементов управления и выбрав **вставить** кнопки. Когда **вставить** кнопки, указанные значения вставляются в базу данных и <xref:System.Web.UI.WebControls.DropDownList> управления обновляется.  
  
> [!IMPORTANT]
>  Этот пример содержит текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности, и значения вставляются в параметры без проверки, который также является потенциальной угрозой безопасности. Используйте <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> событий для проверки значений параметров перед выполнением запроса. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 В следующем примере кода демонстрируется извлечение данных из SQL Server и отобразить ее в <xref:System.Web.UI.WebControls.GridView> управления и способ использования <xref:System.Web.UI.WebControls.DetailsView> управления, чтобы просмотреть подробные сведения о выбранной строки в <xref:System.Web.UI.WebControls.GridView> управления и в качестве формы для вставки новых записей.  
  
 Изначально данные отображаются в <xref:System.Web.UI.WebControls.GridView> управления и выбранной строки <xref:System.Web.UI.WebControls.GridView> также отображается в <xref:System.Web.UI.WebControls.DetailsView> элемента управления. <xref:System.Web.UI.WebControls.GridView> И <xref:System.Web.UI.WebControls.DetailsView> элементы управления используют различные данные системы управления версиями; связанный с <xref:System.Web.UI.WebControls.DetailsView> имеет <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> и <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> свойства, которые гарантирует выбранной строки, которые <xref:System.Web.UI.WebControls.GridView> — отображается.  
  
 При нажатии кнопки автоматически созданный **вставить** кнопки, <xref:System.Web.UI.WebControls.DetailsView> управления <xref:System.Web.UI.WebControls.DetailsView> показан другой пользовательский интерфейс, который используется для вставки новой записи. В примере используется хранимая процедура для вставки записей и возвращает первичный ключ вставленной строки. При вставке записи, <xref:System.Web.UI.WebControls.DetailsView> автоматически заполняет <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> коллекции со значениями из связанных столбцов и вызывает <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> метод. <xref:System.Web.UI.WebControls.DetailsView> Могут определить правильные параметры из любого <xref:System.Web.UI.WebControls.BoundField> объекта и параметр для <xref:System.Web.UI.WebControls.TemplateField> объекта при использовании синтаксиса двусторонней привязки данных ASP.NET. В этом примере добавляется дополнительный параметр в <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> обработчик событий для обработки первичный ключ, который возвращается хранимой процедурой.  
  
 Наконец после вставки данных в базу данных по <xref:System.Web.UI.WebControls.DetailsView> управления, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> обработчик событий вызывается для обработки <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> событий, значение первичного ключа вставленной строки отображается и <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> метод <xref:System.Web.UI.WebControls.GridView> управления явно вызывается для обновления данных.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
      </Docs>
    </Member>
    <Member MemberName="InsertCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.InsertCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType InsertCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, позволяющее определить, чем является текст в свойстве <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />: оператором SQL или именем хранимой процедуры.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />. Значением по умолчанию является <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A> Делегирует свойство <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType%2A> свойство <xref:System.Web.UI.WebControls.SqlDataSourceView> объекта, с которым связан <xref:System.Web.UI.WebControls.SqlDataSource> элемента управления.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется извлечение данных из базы данных Microsoft SQL Server и отобразить ее в <xref:System.Web.UI.WebControls.GridView> элемента управления. Также демонстрируется использование <xref:System.Web.UI.WebControls.DetailsView> управления, чтобы просмотреть подробные сведения о выбранной строки в <xref:System.Web.UI.WebControls.GridView> и в качестве формы для вставки новых записей.  
  
 <xref:System.Web.UI.WebControls.GridView> Элемент управления отображает набор данных и <xref:System.Web.UI.WebControls.DetailsView> отображает подробные сведения для конкретной строки. При нажатии кнопки автоматически созданный **вставить** кнопки, <xref:System.Web.UI.WebControls.DetailsView> управления <xref:System.Web.UI.WebControls.DetailsView> показан другой пользовательский интерфейс, который используется для вставки новой записи. В примере используется хранимая процедура для вставки записей и возвращает первичный ключ вставленной строки. Имя хранимой процедуры задано в <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> свойство и определяется как хранимую процедуру установки <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A> свойства <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> значение.  
  
 После вставки данных в базу данных по <xref:System.Web.UI.WebControls.DetailsView> управления <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> обработчик событий вызывается для обработки <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> отображаются события, значение первичного ключа вставленной строки и <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> метод <xref:System.Web.UI.WebControls.GridView> элемент управления явно вызывается для обновления данных.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Inserted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при завершении операции вставки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывать <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> событий для анализа значений выходных параметров, после завершения операции вставки. Выходные параметры доступны из <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> объекта, связанного с событием.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется извлечение данных из Microsoft SQL Server и отобразить ее в <xref:System.Web.UI.WebControls.GridView> управления и способ использования <xref:System.Web.UI.WebControls.DetailsView> управления, чтобы просмотреть подробные сведения о выбранной строки в <xref:System.Web.UI.WebControls.GridView> и в качестве формы для вставки новых записей.  
  
> [!NOTE]
>  В этом примере показано использование декларативного синтаксиса для доступа к данным. Сведения о том, как получить доступ к данным с помощью кода, а не разметка см. в разделе [доступ к данным в Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).  
  
 Изначально данные отображаются в <xref:System.Web.UI.WebControls.GridView> управления и выбранной строки <xref:System.Web.UI.WebControls.GridView> также отображается в <xref:System.Web.UI.WebControls.DetailsView> элемента управления. <xref:System.Web.UI.WebControls.GridView> И <xref:System.Web.UI.WebControls.DetailsView> элементы управления используют различные данные системы управления версиями; связанный с <xref:System.Web.UI.WebControls.DetailsView> имеет <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> и <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> свойства, которые гарантирует выбранной строки, которые <xref:System.Web.UI.WebControls.GridView> — отображается.  
  
 При нажатии кнопки автоматически созданный **вставить** кнопки, <xref:System.Web.UI.WebControls.DetailsView> управления <xref:System.Web.UI.WebControls.DetailsView> показан другой пользовательский интерфейс, который используется для вставки новой записи. В примере используется хранимая процедура для вставки записей и возвращает первичный ключ вставленной строки. При вставке записи, <xref:System.Web.UI.WebControls.DetailsView> автоматически заполняет <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> коллекции со значениями из связанных столбцов и вызывает <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> метод. <xref:System.Web.UI.WebControls.DetailsView> Могут определить правильные параметры из любого <xref:System.Web.UI.WebControls.BoundField> объекта и параметр для <xref:System.Web.UI.WebControls.TemplateField> объекта при использовании синтаксиса двусторонней привязки данных ASP.NET. В этом примере добавляется дополнительный параметр в <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> обработчик событий для обработки первичный ключ, который возвращается хранимой процедурой.  
  
 Наконец после вставки данных в базу данных по <xref:System.Web.UI.WebControls.DetailsView> управления, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> обработчик событий вызывается для обработки <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> отображаются события, значение первичного ключа вставленной строки и <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> метод <xref:System.Web.UI.WebControls.GridView> управления явно вызывается для обновления данных.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Inserting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит перед операцией вставки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывать <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> событий для выполнения операций дополнительную инициализацию, относящиеся к приложению, для проверки значений параметров или для изменения значений параметров перед <xref:System.Web.UI.WebControls.SqlDataSource> элемент управления выполняет операцию вставки. Соединение с источником данных не еще открыт при вызове делегата обработчика событий. Таким образом, невозможно отменить операцию непосредственно, путем вызова <xref:System.Data.Common.DbCommand.Cancel%2A> метод <xref:System.Data.Common.DbCommand> объекта, представленного <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> свойство. Тем не менее, можно отменить операцию базы данных, задав <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> свойство <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> объект `true`.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется извлечение данных из Microsoft SQL Server и отобразить ее в <xref:System.Web.UI.WebControls.GridView> управления и способ использования <xref:System.Web.UI.WebControls.DetailsView> управления, чтобы просмотреть подробные сведения о выбранной строки в <xref:System.Web.UI.WebControls.GridView> и в качестве формы для вставки новых записей.  
  
> [!NOTE]
>  В этом примере показано использование декларативного синтаксиса для доступа к данным. Сведения о том, как получить доступ к данным с помощью кода, а не разметка см. в разделе [доступ к данным в Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).  
  
 Изначально данные отображаются в <xref:System.Web.UI.WebControls.GridView> управления и выбранной строки <xref:System.Web.UI.WebControls.GridView> также отображается в <xref:System.Web.UI.WebControls.DetailsView> элемента управления. <xref:System.Web.UI.WebControls.GridView> И <xref:System.Web.UI.WebControls.DetailsView> элементы управления используют различные данные системы управления версиями; связанный с <xref:System.Web.UI.WebControls.DetailsView> имеет <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> и <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> свойства, которые гарантирует выбранной строки, которые <xref:System.Web.UI.WebControls.GridView> — отображается.  
  
 При нажатии кнопки автоматически созданный **вставить** кнопки, <xref:System.Web.UI.WebControls.DetailsView> управления <xref:System.Web.UI.WebControls.DetailsView> показан другой пользовательский интерфейс, который используется для вставки новой записи. В примере используется хранимая процедура для вставки записей и возвращает первичный ключ вставленной строки. При вставке записи, <xref:System.Web.UI.WebControls.DetailsView> автоматически заполняет <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> коллекции со значениями из связанных столбцов и вызывает <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> метод. <xref:System.Web.UI.WebControls.DetailsView> Могут определить правильные параметры из любого <xref:System.Web.UI.WebControls.BoundField> объекта и параметр для <xref:System.Web.UI.WebControls.TemplateField> при использовании синтаксиса двусторонней привязки данных ASP.NET. В этом примере добавляется дополнительный параметр в <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> обработчик событий для обработки первичный ключ, который возвращается хранимой процедурой.  
  
 Наконец после вставки данных в базу данных по <xref:System.Web.UI.WebControls.DetailsView> управления, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> обработчик событий вызывается для обработки <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> отображаются события, значение первичного ключа вставленной строки и `DataBind` метод <xref:System.Web.UI.WebControls.GridView> управления явно вызывается для обновления данных.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию, содержащую параметры, используемые свойством <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /> объекта <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />, связанного с элементом управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</summary>
        <value>Коллекция <see cref="T:System.Web.UI.WebControls.ParameterCollection" />, содержащая параметры, используемые свойством <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> Извлекает свойство <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> , содержащийся в свойстве <xref:System.Web.UI.WebControls.SqlDataSourceView> объекта, с которым связан <xref:System.Web.UI.WebControls.SqlDataSource> элемента управления.  
  
 Если <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> свойство содержит параметризованный запрос SQL, <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> коллекции содержит любые <xref:System.Web.UI.WebControls.Parameter> объектов, которые соответствуют заполнителям в строке SQL.  
  
 В зависимости от поставщика ADO.NET, порядок параметров в <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> коллекции может быть важной. <xref:System.Data.OleDb?displayProperty=nameWithType> И <xref:System.Data.Odbc?displayProperty=nameWithType> поставщики связать параметров в коллекции в порядке следования параметров в параметризованный запрос SQL. <xref:System.Data.SqlClient?displayProperty=nameWithType> Поставщика, что поставщик ADO.NET по умолчанию для <xref:System.Web.UI.WebControls.SqlDataSource> контроля, связывает параметров в коллекции, совпадающий с именем параметра с псевдонимом заполнитель в SQL-запросе. Дополнительные сведения о параметризованных запросах и командах SQL см. в разделе [использование параметров с помощью элемента управления SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
> [!IMPORTANT]
>  Значения вставляются в параметры без проверки, что является потенциальной угрозой безопасности. Используйте <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> событий для проверки значений параметров перед выполнением запроса. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется вставка данных в базе данных с помощью <xref:System.Web.UI.WebControls.SqlDataSource> управления и простую страницу Web Forms. Текущие данные в таблице данных отображаются в <xref:System.Web.UI.WebControls.DropDownList> элемента управления. Можно добавить новые записи, введя значения в <xref:System.Web.UI.WebControls.TextBox> элементов управления и выбрав **вставить** кнопки. Когда **вставить** кнопки, указанные значения вставляются в базу данных и <xref:System.Web.UI.WebControls.DropDownList> управления обновляется.  
  
> [!IMPORTANT]
>  Этот пример содержит текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности, и значения вставляются в параметры без проверки, который также является потенциальной угрозой безопасности. Используйте <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> событий для проверки значений параметров перед выполнением запроса. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
> [!NOTE]
>  В этом примере показано использование декларативного синтаксиса для доступа к данным. Сведения о том, как получить доступ к данным с помощью кода, а не разметка см. в разделе [доступ к данным в Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Объект, представляющий состояние <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</param>
        <summary>Загружает в элемент управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> состояние свойств, которые необходимо сохранить.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.LoadViewState%2A> Метод используется для загрузки ранее сохраненное состояние представления элемента <xref:System.Web.UI.WebControls.SqlDataSource> элемента управления.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OldValuesParameterFormatString">
      <MemberSignature Language="C#" Value="public string OldValuesParameterFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OldValuesParameterFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property OldValuesParameterFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OldValuesParameterFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("{0}")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку формата, применяемую к именам любых параметров, переданных методу <see cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" /> или <see cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />.</summary>
        <value>Строка, представляющая строку формата, применяемую к именам любых параметров <paramref name="oldValues" />, переданных методу <see cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" /> или <see cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />. Значение по умолчанию — "{0}".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> Строка форматирования применяется только первичные ключи, например те, которые идентифицируются по `DataKeyNames` свойств связанного элемента управления с привязкой к данным, либо в удаления и обновления сценариев где <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> свойству <xref:System.Web.UI.ConflictOptions.CompareAllValues>значение и набор `oldValues` передаются методу соответствующих данных. В этом случае строка формата применяется к каждому имени параметра в `oldValues` коллекции.  
  
 Два типичных сценария, где можно изменить <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> свойства, как показано ниже:  
  
-   Различить старые и новые значения в обновлениях. Когда <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> свойству <xref:System.Web.UI.ConflictOptions.CompareAllValues> значение, параметры для исходные и новые значения добавляются к <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> коллекции. Без строки форматирования два параметра с тем же именем будут создаваться для каждого поля данных. Можно изменить имя параметра исходного значения, можно сравнить данные к исходному источнику данных для обнаружения конфликтов и сравнения значений ключей.  
  
-   Некоторые визуальные конструкторы реализуют определенную схему именования для исходного значения и ключи.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Добавляет обработчик событий <see cref="E:System.Web.UI.Page.LoadComplete" /> в элемент управления <see cref="T:System.Web.UI.Page" />, содержащий элемент управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обработчик событий, который добавляется по <xref:System.Web.UI.WebControls.SqlDataSource> объекта обновления <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> и <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> значения. Если значения обновляются, <xref:System.Web.UI.IDataSource.DataSourceChanged> события, вызывая всех элементов управления, привязанных к <xref:System.Web.UI.WebControls.SqlDataSource> управления для повторной привязки.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public virtual string ProviderName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ProviderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ProviderName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.WebControls.DataProviderNameConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает имя поставщика данных платформы .NET Framework, который используется элементом управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> для подключения к базовому источнику данных.</summary>
        <value>Имя поставщика данных, используемого элементом управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" />; если поставщик не задан, используется поставщик ADO.NET для Microsoft SQL Server. По умолчанию используется поставщик ADO.NET для Microsoft SQL Server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework содержит следующие поставщики данных:  
  
-   <xref:System.Data.SqlClient?displayProperty=nameWithType> Поставщик используется по умолчанию поставщик данных .NET Framework для SQL Server.  
  
-   <xref:System.Data.OleDb?displayProperty=nameWithType> Поставщиком является поставщик данных .NET Framework для OLE DB.  
  
-   <xref:System.Data.Odbc?displayProperty=nameWithType> Поставщиком является поставщик данных .NET Framework для ODBC.  
  
-   <xref:System.Data.OracleClient?displayProperty=nameWithType> Поставщиком является поставщик данных .NET Framework для Oracle.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> Никогда не задано имя неуправляемого поставщика ADO.NET, такие как `MSDAORA`. Дополнительные сведения см. в разделе [при выборе данных с помощью элемента управления SqlDataSource](http://msdn.microsoft.com/library/44623286-ff5a-4148-8a3c-85c56ed545eb).  
  
 При изменении <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> свойства <xref:System.Web.UI.IDataSource.DataSourceChanged> события, вызывая всех элементов управления, привязанных к <xref:System.Web.UI.WebControls.SqlDataSource> для повторной привязки.  
  
 Список доступных поставщиков указывается в `DbProviderFactories` подразделе `system.data` раздел файла Machine.config.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. Это первый код показано, как соединиться с базой данных SQL Server по умолчанию с помощью поставщика данных .NET Framework для SQL Server на <xref:System.Web.UI.WebControls.SqlDataSource> управления <xref:System.Data.SqlClient?displayProperty=nameWithType>. Во втором примере кода показано, как подключиться к базе данных ODBC с помощью поставщика данных .NET Framework для ODBC, <xref:System.Data.Odbc?displayProperty=nameWithType>.  
  
 В следующем примере кода показано, как подключиться к базе данных SQL Server, с помощью поставщика данных по умолчанию для <xref:System.Web.UI.WebControls.SqlDataSource> управления <xref:System.Data.SqlClient?displayProperty=nameWithType>. Каждый раз, когда <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> свойство не задано явно, используется поставщик по умолчанию. <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> Свойство зависит от поставщика.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/CS/sql1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/VB/sql1vb.aspx#1)]  
  
 В следующем примере кода, который функционально таким же, как в предыдущем примере кода, показано, как подключиться к базе данных ODBC с помощью поставщика данных .NET Framework для ODBC, <xref:System.Data.Odbc?displayProperty=nameWithType>. <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> Свойству присвоено имя имя источника данных ODBC (DSN), используемый для подключения к базе данных ODBC.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_1odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1odbc/CS/odbc1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_1odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1odbc/VB/odbc1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Сохраняет текущее состояние представления элемента управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</summary>
        <returns>Объект, который содержит сохраненное состояние <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IStateManager.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Select(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Select(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">Объект <see cref="T:System.Web.UI.DataSourceSelectArguments" />, который используется для операций запроса данных вне пределов извлечения базовых данных.</param>
        <summary>Извлекает данные из основной базы данных, используя SQL-строку <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /> и параметры, содержащиеся в коллекции <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />.</summary>
        <returns>Список строк данных <see cref="T:System.Collections.IEnumerable" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> Метод автоматически вызывается во время <xref:System.Web.UI.Control.PreRender> Этап жизненного цикла страницы. Он вызывается элементом управления привязки данных, которые были присоединены к <xref:System.Web.UI.WebControls.SqlDataSource> управлять через их <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> свойство.  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> Возвращает <xref:System.Data.DataView> объекта, если <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> свойству <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> значение. <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> Возвращает <xref:System.Data.IDataReader> объекта, если <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> свойству <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> значение. Закрыть <xref:System.Data.IDataReader> объекта после завершения чтения данных.  
  
 Прежде чем <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> выполняется операция, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A> метод вызывается для вызова <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> событий. Можно обработать это событие для проверки значений параметров и выполнить обработку перед <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> операции.  
  
 После <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> завершения операции <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> метод вызывается для вызова <xref:System.Web.UI.WebControls.SqlDataSource.Selected> событий. Можно обработать это событие для выполнения обработки после анализа всех возвращенных значений и коды ошибок и.  
  
 Если <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> свойству <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet?displayProperty=nameWithType> и включено кэширование, <xref:System.Web.UI.WebControls.SqlDataSource> извлекает данные из объекта и сохраняет данные в кэше во время <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> операции. Кэш создается, отклоненных или обновить определяется поведение кэширования, который задается параметром сочетание <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> и <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> свойства.  
  
> [!IMPORTANT]
>  При использовании олицетворения клиента во время проверки подлинности Microsoft Windows данные кэшируются в том случае, когда первый пользователь обращается к данным. Если другой пользователь запрашивает те же данные, данные извлекаются из кэша. Данные извлекаются не используется другое обращение к базе данных для проверки доступа пользователя к данным. Если предполагается, что несколько пользователей для доступа к данным, и требуется, чтобы в каждом извлечении данных должна выполняться проверка в конфигурациях безопасности базы данных, не используйте кэширование.  
  
 Если <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> свойству <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet?displayProperty=nameWithType> и <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> свойство указано, фильтр выражение с любым предоставленный <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> свойства и полученный фильтр применяется к список данных во время <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>операции.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> Метод делегирует <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> метод <xref:System.Web.UI.WebControls.SqlDataSourceView> объекта, с которым связан <xref:System.Web.UI.WebControls.SqlDataSource> элемента управления. Для выполнения операции извлечения данных, <xref:System.Web.UI.WebControls.SqlDataSourceView> строит <xref:System.Data.Common.DbCommand> объектов с помощью <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> текст и любые связанные с ним <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> значения, а затем выполняет <xref:System.Data.Common.DbCommand> в основной базе данных.  
  
> [!IMPORTANT]
>  Значения вставляются в параметры без проверки, что является потенциальной угрозой безопасности. Используйте <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> событий для проверки значений параметров перед выполнением запроса. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Следующие примеры показывают, как программным способом вызвать <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> метод и задание значений на основе результатов запроса. В примере показан декларативный код для веб-элементов управления.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource.Select#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource.Select#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/VB/Default.aspx#1)]  
  
 В следующем примере показано, как программным способом вызывает <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> метод. <xref:System.Web.UI.WebControls.SqlDataSource> Управление возвращается целое число. Значение целого числа, используется для задания текста <xref:System.Web.UI.WebControls.Label> управления и определить, следует ли отображать <xref:System.Web.UI.WebControls.HyperLink> элемента управления.  
  
 [!code-csharp[System.Web.UI.WebControls.SqlDataSource.Select#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.SqlDataSource.Select#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/VB/Default.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Объекту <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> не удается установить подключение к базовому источнику данных.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public string SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает SQL-строку, используемую элементом управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> для извлечения данных из основной базы данных.</summary>
        <value>SQL-строка или имя хранимой процедуры, используемые элементом управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> для извлечения данных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Свойство представляет запроса SQL или имя хранимой процедуры и используется <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> метод для извлечения данных из базы данных SQL Server. Если используется символ звездочки (*) в команде Select для выбора всех столбцов, а если используется автоматическое создание кода для выполнения обновления или удаления, убедитесь, что столбцы не иметь пробелов в именах.  
  
 Различные системы баз данных используют различные диалекты SQL, поэтому синтаксис строки SQL зависит от используемого в данный момент поставщика ADO.NET, который определяется свойством <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>. Если строка SQL представляет собой параметризованный запрос или команду, заполнитель параметра также зависит от используемого поставщика ADO.NET. Например, если поставщик является <xref:System.Data.SqlClient?displayProperty=nameWithType>, который является поставщиком по умолчанию для <xref:System.Web.UI.WebControls.SqlDataSource> класс, заполнитель параметра является `'@parameterName'`. Тем не менее если поставщик <xref:System.Data.Odbc?displayProperty=nameWithType> или <xref:System.Data.OleDb?displayProperty=nameWithType>, заполнитель параметра является `'?'`. Дополнительные сведения о параметризованных запросах и командах SQL см. в разделе [использование параметров с помощью элемента управления SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Свойство может быть строкой SQL или имя хранимой процедуры, если источник данных поддерживает хранимые процедуры.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Делегирует свойство <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> свойство <xref:System.Web.UI.WebControls.SqlDataSourceView> объекта, с которым связан <xref:System.Web.UI.WebControls.SqlDataSource> элемента управления.  
  
> [!IMPORTANT]
>  В целях безопасности <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> свойство не хранится состояние представления. Так как существует возможность декодирования содержимого состояния просмотра на стороне клиента, хранение конфиденциальных сведений о структуре базы данных в представлении состояния может привести к уязвимости.  
  
> [!IMPORTANT]
>  Значения вставляются в параметры без проверки, что является потенциальной угрозой безопасности. Используйте <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> событий для проверки значений параметров перед выполнением запроса. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как задать <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> текст основные SQL-запрос для получения данных из базы данных ODBC-совместимую и отобразить ее в <xref:System.Web.UI.WebControls.GridView> элемента управления. Во втором примере кода показано, как задать <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> текст к имени хранимой процедуры и <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> свойства <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> значение для получения данных из базы данных Microsoft SQL Server и отобразить ее в <xref:System.Web.UI.WebControls.DropDownList> элемента управления.  
  
 В обоих примерах, нет необходимости явно вызвать <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> метод так, как управлять элементы управления с привязкой к данным, присоединенные к источнику данных через <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> свойство автоматически вызывает <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> метод во время <xref:System.Web.UI.Control.PreRender> этап.  
  
 В следующем примере кода показано, как задать <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> текст основные SQL-запрос для получения данных из базы данных ODBC-совместимую и отобразить ее в <xref:System.Web.UI.WebControls.GridView> элемента управления.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_4odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_4odbc/CS/odbc4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_4odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_4odbc/VB/odbc4vb.aspx#1)]  
  
 В следующем примере кода показано, как задать <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> текст к имени хранимой процедуры и <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> свойства <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> значение для получения данных из базы данных SQL Server и отобразить ее в <xref:System.Web.UI.WebControls.DropDownList> элемента управления. <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Свойство может быть SQL-запроса или имя хранимой процедуры, если источник данных поддерживает хранимые процедуры.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="SelectCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SelectCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType SelectCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, позволяющее определить, чем является текст в свойстве <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />: SQL-запросом или именем хранимой процедуры.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />. Значением по умолчанию является <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> Делегирует свойство <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType%2A> свойство <xref:System.Web.UI.WebControls.SqlDataSourceView> объекта, с которым связан <xref:System.Web.UI.WebControls.SqlDataSource> элемента управления.  
  
   
  
## Examples  
 В следующем примере кода показано, как задать <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> текст к имени хранимой процедуры и <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> свойства <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> значение, чтобы получить данные из базы данных Microsoft SQL Server и отобразить его в <xref:System.Web.UI.WebControls.DropDownList> элемент управления.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Selected;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит по завершении операции извлечения данных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывать <xref:System.Web.UI.WebControls.SqlDataSource.Selected> событий для анализа значений выходных параметров, после завершения операции извлечения данных. Выходные параметры доступны из <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> объекта, связанного с событием.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selecting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As SqlDataSourceSelectingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceSelectingEventHandler ^ Selecting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит перед операцией извлечения данных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывать <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> событий для выполнения операций дополнительную инициализацию, относящиеся к приложению, для проверки значений параметров или для изменения значений параметров перед <xref:System.Web.UI.WebControls.SqlDataSource> элемент управления выполняет операцию выбора. Выберите аргументы доступны из <xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs> объекта, связанного с событием.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию, содержащую параметры, используемые свойством <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /> объекта <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />, связанного с элементом управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</summary>
        <value>Коллекция <see cref="T:System.Web.UI.WebControls.ParameterCollection" />, содержащая параметры, используемые свойством <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> свойство содержит параметризованный запрос SQL, <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> коллекции содержит любые <xref:System.Web.UI.WebControls.Parameter> объектов, которые соответствуют заполнителям в строке SQL.  
  
 В зависимости от поставщика ADO.NET, порядок параметров в <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> коллекции может быть важной. <xref:System.Data.OleDb?displayProperty=nameWithType> И <xref:System.Data.Odbc?displayProperty=nameWithType> поставщики связать параметров в коллекции в порядке следования параметров в параметризованный запрос SQL. <xref:System.Data.SqlClient?displayProperty=nameWithType> Поставщика, что поставщик ADO.NET по умолчанию для <xref:System.Web.UI.WebControls.SqlDataSource> контроля, связывает параметров в коллекции, совпадающий с именем параметра с псевдонимом заполнитель в SQL-запросе. Дополнительные сведения о параметризованных запросах и командах SQL см. в разделе [использование параметров с помощью элемента управления SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> Извлекает свойство <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> , содержащийся в свойстве <xref:System.Web.UI.WebControls.SqlDataSourceView> объекта, с которым связан <xref:System.Web.UI.WebControls.SqlDataSource> элемента управления.  
  
> [!IMPORTANT]
>  Значения вставляются в параметры без проверки, что является потенциальной угрозой безопасности. Используйте <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> событий для проверки значений параметров перед выполнением запроса. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 В следующем примере кода показано, как извлекать данные из базы данных "Борей" в Microsoft SQL Server, задав <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> свойство SQL-запрос. SQL-запрос является параметризованным и заполнитель в <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> свойство сопоставляется <xref:System.Web.UI.WebControls.ControlParameter> объекта, добавляемого <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> коллекции. <xref:System.Web.UI.WebControls.DropDownList> Управления, который <xref:System.Web.UI.WebControls.ControlParameter> привязан к, действует как фильтр, чтобы понять, что отображается в <xref:System.Web.UI.WebControls.ListBox> элемента управления.  
  
 Сведения о других типов параметров, которые можно использовать в разделе <xref:System.Web.UI.WebControls.Parameter> Общие сведения о классе.  
  
> [!NOTE]
>  Поскольку параметр используется в предложении WHERE, использование <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> свойство в примере кода функционально эквивалентен использованию <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> и <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> свойства.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/CS/sql2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/VB/sql2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="SortParameterName">
      <MemberSignature Language="C#" Value="public string SortParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SortParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property SortParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя параметра хранимой процедуры, используемого для сортировки извлеченных данных при выполнении их извлечения с помощью хранимой процедуры.</summary>
        <value>Имя параметра хранимой процедуры, используемого для сортировки извлеченных данных при выполнении их извлечения с помощью хранимой процедуры.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> Свойство применяется только при SQL команды, содержащиеся в <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> свойство — имя хранимой процедуры. В этом случае если <xref:System.Web.UI.WebControls.SqlDataSource.SortParameterName%2A> имеет значение, он содержит имя параметра, который используется для сортировки результатов хранимой процедуры.  
  
 Если <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> свойство задано, оно присоединяется к <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> свойство.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="SqlCacheDependency">
      <MemberSignature Language="C#" Value="public virtual string SqlCacheDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SqlCacheDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SqlCacheDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SqlCacheDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает разделенную точками с запятой строку, которая показывает, какие базы данных и таблицы используются для зависимости кэша Microsoft SQL Server.</summary>
        <value>Строка, которая показывает, какие базы данных и таблицы используются для зависимости кэша Microsoft SQL Server.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource> Поддерживает элемент управления на основе политики необязательно срока действия <xref:System.Web.Caching.SqlCacheDependency> объектов для кэширования данных (служба должна быть настроена для сервера базы данных).  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> Строка идентифицирует баз данных и таблиц в соответствии с тот же формат, используемый `@ Page` после директивы, где первая часть строки является строка подключения к базе данных Microsoft SQL Server, с помощью разделителей двоеточие и Наконец имя таблицы базы данных (например, `"connectionstring1:table1"`). Если <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> свойство зависит от нескольких таблиц, для подключения парам имя строки таблицы разделяются точками с запятой (например, `"connectionstring1:table1";connectionstring2:table2"`).  
  
> [!IMPORTANT]
>  При использовании олицетворения клиента во время проверки подлинности Microsoft Windows данные кэшируются в том случае, когда первый пользователь обращается к данным. Если другой пользователь запрашивает те же данные, данные извлекаются из кэша. Данные извлекаются не используется другое обращение к базе данных для проверки доступа пользователя к данным. Если предполагается, что несколько пользователей для доступа к данным, и требуется, чтобы в каждом извлечении данных должна выполняться проверка в конфигурациях безопасности базы данных, не используйте кэширование.  
  
   
  
## Examples  
 В следующем примере кода показано, как создать зависимость кэша SQL Server и задайте <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> свойства <xref:System.Web.UI.WebControls.SqlDataSource> элемента управления. В этом примере база данных опрашивается каждые 120 секунд. Если данные в Northwind Traders Employees таблицы изменений во времени, любые данные, которые были помещены в кэш <xref:System.Web.UI.WebControls.SqlDataSource> управления и отображения в <xref:System.Web.UI.WebControls.GridView> управления обновляется в соответствии с <xref:System.Web.UI.WebControls.SqlDataSource> управления в следующий раз опроса базы данных.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_23sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_23sql/CS/sql23cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_23sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_23sql/VB/sql23vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.SqlCacheDependency" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Отслеживает изменения состояния представления элемента управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> для сохранения их в объекте <see cref="T:System.Web.UI.StateBag" /> этого элемента управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.TrackViewState%2A> Метод переопределяется для обозначения начальную точку для отслеживания и сохранения изменений в элементе управления как часть состояния представления для элемента управления.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IStateManager.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Update" />
      <MemberSignature Language="VB.NET" Value="Public Function Update () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Выполняет операцию обновления, используя SQL-строку <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /> и параметры из коллекции <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />.</summary>
        <returns>Значение, представляющее число строк, обновленных в основной базе данных.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> Метод автоматически вызывается методом <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, и <xref:System.Web.UI.WebControls.FormView> управляет во время обратной передачи, если данные были изменены. Для данных, который был изменен в других элементах управления <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> можно явно вызывать метод при обратной передаче во время <xref:System.Windows.Forms.Form.Load> событий.  
  
 Прежде чем <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> выполняется операция, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> метод вызывается для вызова <xref:System.Web.UI.WebControls.SqlDataSource.Updating> событий. Можно обработать это событие для проверки значений параметров и всевозможной перед <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> операции.  
  
 После <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> завершения операции <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> метод вызывается для вызова <xref:System.Web.UI.WebControls.SqlDataSource.Updated> событий. Можно обработать это событие для выполнения обработки после анализа всех возвращенных значений и коды ошибок и.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> Метод делегирует <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> метод <xref:System.Web.UI.WebControls.SqlDataSourceView> объекта, с которым связан <xref:System.Web.UI.WebControls.SqlDataSource> элемента управления. Для выполнения операции обновления <xref:System.Web.UI.WebControls.SqlDataSourceView> строит <xref:System.Data.Common.DbCommand> с помощью <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> текст и любые связанные с ним <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> свойства и затем выполняет <xref:System.Data.Common.DbCommand> объекта в основной базе данных.  
  
> [!IMPORTANT]
>  Значения вставляются в параметры без проверки, что является потенциальной угрозой безопасности. Используйте <xref:System.Web.UI.WebControls.SqlDataSource.Updating> событий для проверки значений параметров перед выполнением запроса. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как использовать <xref:System.Web.UI.WebControls.SqlDataSource> управления для отображения данных в <xref:System.Web.UI.WebControls.DropDownList> управления и обновления данных при **отправить** кнопки. Во втором примере кода показано, как отображать данные, полученные из базы данных Microsoft SQL Server в <xref:System.Web.UI.WebControls.DropDownList> управления и обновить записи с помощью <xref:System.Web.UI.WebControls.TextBox> элемента управления.  
  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.SqlDataSource> управления для отображения данных в <xref:System.Web.UI.WebControls.DropDownList> управления и обновления данных при **отправить** кнопки. <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> Свойству с параметризованную инструкцию SQL, а два <xref:System.Web.UI.WebControls.ControlParameter> параметры добавляются <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> коллекции. Когда **отправить** по нажатию кнопки <xref:System.Web.UI.WebControls.Button.OnClick%2A> событие обрабатывается для вызова <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> метод явным образом.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 В следующем примере кода показано, как отображать данные, полученные из базы данных SQL Server в <xref:System.Web.UI.WebControls.DropDownList> управления и обновить записи с помощью <xref:System.Web.UI.WebControls.TextBox> элемента управления. В примере показано, как использовать <xref:System.Data.Common.DbTransaction> объект для добавления контекст транзакции, при использовании <xref:System.Web.UI.WebControls.SqlDataSource> управления для обновления данных.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Объекту <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> не удается установить подключение к базовому источнику данных.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public string UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdateCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает SQL-строку, используемую элементом управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> для обновления данных в основной базе данных.</summary>
        <value>SQL-строка, используемая элементом управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> для обновления данных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> Представляет запроса SQL или имя хранимой процедуры и используется <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> метод.  
  
 Различные системы баз данных используют различные диалекты SQL, поэтому синтаксис строки SQL зависит от используемого в данный момент поставщика ADO.NET, который определяется свойством <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>. Если строка SQL представляет собой параметризованный запрос или команду, заполнитель параметра также зависит от используемого поставщика ADO.NET. Например, если поставщик является <xref:System.Data.SqlClient?displayProperty=nameWithType>, который является поставщиком по умолчанию для <xref:System.Web.UI.WebControls.SqlDataSource> класс, заполнитель параметра является `'@parameterName'`. Тем не менее если поставщик <xref:System.Data.Odbc?displayProperty=nameWithType> или <xref:System.Data.OleDb?displayProperty=nameWithType>, заполнитель параметра является `'?'`. Дополнительные сведения о параметризованных запросах и командах SQL см. в разделе [использование параметров с помощью элемента управления SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> Свойство может быть строкой SQL или имя хранимой процедуры, если источник данных поддерживает хранимые процедуры.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> Делегирует свойство <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> свойство <xref:System.Web.UI.WebControls.SqlDataSourceView> объекта, с которым связан <xref:System.Web.UI.WebControls.SqlDataSource> элемента управления.  
  
> [!IMPORTANT]
>  В целях безопасности <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> свойство не хранится состояние представления. Так как существует возможность декодирования содержимого состояния просмотра на стороне клиента, хранение конфиденциальных сведений о структуре базы данных в представлении состояния может привести к уязвимости.  
  
> [!IMPORTANT]
>  Значения вставляются в параметры без проверки, что является потенциальной угрозой безопасности. Используйте <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> событий для проверки значений параметров перед выполнением запроса. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как задать <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> свойство <xref:System.Web.UI.WebControls.SqlDataSource> управления и обновления данных в базе данных Microsoft SQL Server с помощью <xref:System.Web.UI.WebControls.GridView> элемента управления. Во втором примере кода показано, как обновлять данные в базе данных ODBC с помощью <xref:System.Web.UI.WebControls.GridView> элемента управления.  
  
 В следующем примере кода показано, как задать <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> свойство <xref:System.Web.UI.WebControls.SqlDataSource> управления и обновления данных в базе данных SQL Server с помощью <xref:System.Web.UI.WebControls.GridView> элемента управления. <xref:System.Web.UI.WebControls.GridView> Автоматически заполняет <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> коллекции, в определении параметров из <xref:System.Web.UI.WebControls.BoundField> объектов и вызывает <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> метод при **обновление** ссылку на редактируемой <xref:System.Web.UI.WebControls.GridView>выбран. В этом примере также включает некоторую последующую обработку: после обновления записей, отправляется сообщение по электронной почте уведомления.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/CS/sql7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/VB/sql7vb.aspx#1)]  
  
 В следующем примере кода, который функционально идентичен в предыдущем примере кода, показано, как обновлять данные в базе данных ODBC с помощью <xref:System.Web.UI.WebControls.GridView> элемента управления. <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> Равно поставщик ADO.NET для ODBC, <xref:System.Data.Odbc?displayProperty=nameWithType>и <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> свойству присвоено имя имя источника данных ODBC (DSN).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType UpdateCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, позволяющее определить, чем является текст в свойстве <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />: оператором SQL или именем хранимой процедуры.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />. Значением по умолчанию является <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommandType%2A> Делегирует свойство <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType%2A> свойство <xref:System.Web.UI.WebControls.SqlDataSourceView> объекта, с которым связан <xref:System.Web.UI.WebControls.SqlDataSource> элемента управления.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Updated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при завершении операции обновления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывать <xref:System.Web.UI.WebControls.SqlDataSource.Updated> событий для анализа значений выходных параметров, после завершения операции обновления. Выходные параметры доступны из <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> объекта, связанного с событием.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 В следующем примере кода показано, как отображать и обновлять данные, полученные из базы данных ODBC в <xref:System.Web.UI.WebControls.GridView> элемента управления. После успешного обновления записи <xref:System.Web.UI.WebControls.SqlDataSource.Updated> событие обрабатывается с помощью обработчика событий для выполнения постобработки, куда отправлять уведомления по электронной почте.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updating" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию, содержащую параметры, используемые свойством <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /> элемента управления <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />, связанного с элементом управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</summary>
        <value>Коллекция <see cref="T:System.Web.UI.WebControls.ParameterCollection" />, содержащая параметры, используемые свойством <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> свойство содержит параметризованный запрос SQL, <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> коллекции содержит любые <xref:System.Web.UI.WebControls.Parameter> объектов, которые соответствуют заполнителям в строке SQL.  
  
 Имена параметров могут быть затронуты <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> свойства, в частности, если имя идентифицирует первичного ключа, например ключ, указанный с помощью `DataKeyNames` свойства элемента управления с привязкой к данным или в удаления и обновления сценариев где <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> свойство имеет значение <xref:System.Web.UI.ConflictOptions.CompareAllValues> значение и набор `oldValues` передаются методу соответствующих данных. В этом случае строка формата применяется к каждому имени параметра в `oldValues` коллекции.  
  
 Порядок параметров в <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> коллекции может быть важным, в зависимости от поставщика данных ADO.NET. <xref:System.Data.OleDb?displayProperty=nameWithType> И <xref:System.Data.Odbc?displayProperty=nameWithType> поставщики связать параметров в коллекции в порядке следования параметров в параметризованный запрос SQL. <xref:System.Data.SqlClient?displayProperty=nameWithType> Поставщика, что поставщик ADO.NET по умолчанию для <xref:System.Web.UI.WebControls.SqlDataSource> контроля, связывает параметров в коллекции, совпадающий с именем параметра с псевдонимом заполнитель в SQL-запросе. Дополнительные сведения о параметризованных запросах и командах SQL см. в разделе [использование параметров с помощью элемента управления SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> Извлекает свойство <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> , содержащийся в свойстве <xref:System.Web.UI.WebControls.SqlDataSourceView> объекта, с которым связан <xref:System.Web.UI.WebControls.SqlDataSource> элемента управления.  
  
> [!IMPORTANT]
>  Значения вставляются в параметры без проверки, что является потенциальной угрозой безопасности. Используйте <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> событий для проверки значений параметров перед выполнением запроса. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.SqlDataSource> управления для отображения данных в <xref:System.Web.UI.WebControls.DropDownList> управления и обновления данных при **отправить** кнопки. <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> Набор с параметризованную инструкцию SQL и два <xref:System.Web.UI.WebControls.ControlParameter> параметры добавляются <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> коллекции. Когда **отправить** по нажатию кнопки <xref:System.Web.UI.WebControls.Button.OnClick%2A> событие обрабатывается для вызова <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> метод явным образом.  
  
> [!IMPORTANT]
>  Этот пример содержит текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности, и значения вставляются в параметры без проверки, который также является потенциальной угрозой безопасности. Используйте <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> событий для проверки значений параметров перед выполнением запроса. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Updating;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит перед операцией обновления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывать <xref:System.Web.UI.WebControls.SqlDataSource.Updating> событий для выполнения операций дополнительную инициализацию, относящиеся к приложению, для проверки значений параметров или для изменения значений параметров перед <xref:System.Web.UI.WebControls.SqlDataSource> элемент управления выполняет операцию обновления. Соединение с источником данных не еще открыт при вызове делегата обработчика событий. Таким образом, невозможно отменить непосредственно <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> операции базы данных, вызвав <xref:System.Data.Common.DbCommand.Cancel%2A> метод <xref:System.Data.Common.DbCommand> объекта, представленного <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> объекта. Тем не менее, можно отменить операцию базы данных, задав <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> свойство <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> для `true`.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
> [!IMPORTANT]
>  Значения вставляются в параметры без проверки, что является потенциальной угрозой безопасности. Используйте <xref:System.Web.UI.WebControls.SqlDataSource.Updating> событий для проверки значений параметров перед выполнением запроса. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
   
  
## Examples  
 В следующем примере кода показано, как отображать данные, полученные из базы данных Microsoft SQL Server в <xref:System.Web.UI.WebControls.DropDownList> управления и обновить записи с помощью <xref:System.Web.UI.WebControls.TextBox> элемента управления. В примере показано, как использовать <xref:System.Data.Common.DbTransaction> объект для добавления контекст транзакции, при использовании <xref:System.Web.UI.WebControls.SqlDataSource> управления для обновления данных.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      </Docs>
    </Member>
  </Members>
</Type>