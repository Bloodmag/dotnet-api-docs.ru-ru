<Type Name="SqlDataSourceView" FullName="System.Web.UI.WebControls.SqlDataSourceView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="56793326c9289dc8571df36d7fa8e9d17af807b3" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30600728" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlDataSourceView : System.Web.UI.DataSourceView, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataSourceView extends System.Web.UI.DataSourceView implements class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SqlDataSourceView" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataSourceView&#xA;Inherits DataSourceView&#xA;Implements IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataSourceView : System::Web::UI::DataSourceView, System::Web::UI::IStateManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataSourceView</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Поддерживает элемент управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> и предоставляет интерфейс для элементов управления с привязкой к данным для выполнения операций с SQL-данными в реляционных базах данных.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView> Класс предназначен главным образом для использования элементами управления с привязкой к данным, а не как программируемый объект в код страницы.  
  
 Элементы управления источников данных ASP.NET содержат один или несколько списков данных, представленные объектами представления источника данных. <xref:System.Web.UI.WebControls.SqlDataSourceView> Класс расширяет <xref:System.Web.UI.DataSourceView> класса, определяет возможности <xref:System.Web.UI.WebControls.SqlDataSource> элемента управления, с которым он связан, а реализует базовые возможности обработки данных для элемента управления источником данных. <xref:System.Web.UI.WebControls.SqlDataSourceView> Класс реализует функциональность данных для <xref:System.Web.UI.WebControls.SqlDataSource> управления, включая <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A>, и <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> операций, сортировку, фильтрацию и управление параметрами, которые хранятся в представлении состояние.  
  
 Несмотря на то что <xref:System.Web.UI.WebControls.SqlDataSourceView> объекту напрямую не предоставляется для разработчиков страниц по <xref:System.Web.UI.WebControls.SqlDataSource> управления, многие из его свойств являются. Самые простые операции, выполняемой в представлении источника данных является получение данных из основной базы данных с помощью <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> метод, который извлекает <xref:System.Collections.IEnumerable> коллекция элементов данных. <xref:System.Web.UI.WebControls.SqlDataSourceView> Класс реализует извлечения данных из реляционных баз данных с помощью SQL-запросов. SQL-запросы можно параметризовать для большей гибкости и безопасности. Следующие методы получения данных, свойства и события реализуются <xref:System.Web.UI.WebControls.SqlDataSourceView> и выведены напрямую с помощью его <xref:System.Web.UI.WebControls.SqlDataSource> управления разработчики страниц и других вызывающих объектов:  
  
-   Свойство <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>.  
  
-   Свойство <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>.  
  
-   <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> Событий  
  
-   <xref:System.Web.UI.WebControls.SqlDataSource.Selected> Событий  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView> Поддерживает обновление данных в реляционной базе данных с помощью команд SQL. Для большей гибкости и безопасности можно параметризовать команды SQL. Элементы управления с привязкой к данным, таких как <xref:System.Web.UI.WebControls.GridView> и <xref:System.Web.UI.WebControls.DetailsView>, можно настроить для выполнения обновлений автоматически, используя <xref:System.Web.UI.WebControls.SqlDataSourceView>, тогда как другие элементы управления нельзя. Следующие обновления методы, свойства и события реализуются <xref:System.Web.UI.WebControls.SqlDataSourceView> и выведены напрямую с помощью его <xref:System.Web.UI.WebControls.SqlDataSource> управления разработчики страниц и других вызывающих объектов:  
  
-   Свойство <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>.  
  
-   Свойство <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A>.  
  
-   <xref:System.Web.UI.WebControls.SqlDataSource.Updating> Событий  
  
-   <xref:System.Web.UI.WebControls.SqlDataSource.Updated> Событий  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView> Поддерживает вставку новых строк данных в реляционную базу данных. Команды SQL, которые указаны в <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> свойство может быть параметризован в большей гибкости и безопасности. Элементы управления с привязкой к данным, таких как <xref:System.Web.UI.WebControls.GridView> и <xref:System.Web.UI.WebControls.DetailsView>, можно настроить для выполнения вставки автоматически с помощью <xref:System.Web.UI.WebControls.SqlDataSourceView>, тогда как другие элементы управления нельзя. Следующие вставить методы, свойства и события реализуются с <xref:System.Web.UI.WebControls.SqlDataSourceView> и выведены напрямую с помощью его <xref:System.Web.UI.WebControls.SqlDataSource> управления разработчики страниц и других вызывающих объектов:  
  
-   Свойство <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>.  
  
-   Свойство <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A>.  
  
-   <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> Событий  
  
-   <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> Событий  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView> Объекта также поддерживает удаление данных из реляционной базы данных. Как и в случае с другими командами команды SQL, которые заданы в <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> свойство может быть параметризован в большей гибкости и безопасности. Элементы управления с привязкой к данным, таких как <xref:System.Web.UI.WebControls.GridView> и <xref:System.Web.UI.WebControls.DetailsView>, можно настроить для выполнения операции удаления автоматически при помощи <xref:System.Web.UI.WebControls.SqlDataSourceView>, тогда как другие элементы управления нельзя. Следующие удалить методы, свойства и события реализуются с <xref:System.Web.UI.WebControls.SqlDataSourceView> и выведены напрямую с помощью его <xref:System.Web.UI.WebControls.SqlDataSource> управления разработчики страниц и других вызывающих объектов:  
  
-   Свойство <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>.  
  
-   Свойство <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A>.  
  
-   <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> Событий  
  
-   <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> Событий  
  
 Извлечение данных выполняется более широкими возможностями в том случае, если условие, используемое для фильтрации данных при получении данных является динамическим. Другими словами SQL-запрос со статическим предложением WHERE не как гибкие и эффективные как SQL-запрос связыванием значений в предложении WHERE значения, которые можно изменять, например значения, отображаемые в элементах управления на страницу Web Forms. Вместо перестроения SQL запросе и задание <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> свойство при каждой загрузке страницы, можно использовать <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> и <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> свойства для динамической фильтрации для извлечения данных. Эти свойства реализуются <xref:System.Web.UI.WebControls.SqlDataSourceView> и выведены напрямую с помощью его <xref:System.Web.UI.WebControls.SqlDataSource> элемент управления с привязкой к данным элементы управления и других вызывающих объектов.  
  
 Можно сортировать данные, получаемые с <xref:System.Web.UI.WebControls.SqlDataSource> управления, добавив предложение ORDER BY, вследствие чего база данных для выполнения упорядочивания для вас при извлечении данных или путем размещения данных в памяти после их получения. Можно задать выражение сортировки для <xref:System.Web.UI.WebControls.SqlDataSourceView> , установив <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> свойство <xref:System.Web.UI.DataSourceSelectArguments> объект, передаваемый <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> метод. Синтаксис <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> имеет то же, как и синтаксис для <xref:System.Data.DataView.Sort%2A?displayProperty=nameWithType> свойства. Если хранимая процедура используется для получения данных, можно также использовать <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> свойство, чтобы указать параметр, специфичный для сортировки результатов вызова хранимой процедуры.  
  
 Когда несколько пользователей одновременно можно изменить базу данных, имеется вероятность конфликтов параллелизма. <xref:System.Web.UI.WebControls.SqlDataSource> Элемента управления есть элементы управления параллелизмом посредством <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection?displayProperty=nameWithType> свойство. Функциональность реализована в <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection?displayProperty=nameWithType> свойство.  
  
 Как и многие другие веб-сервера управления, <xref:System.Web.UI.WebControls.SqlDataSourceView> реализует <xref:System.Web.UI.IStateManager> интерфейс и использует представление состояния для отслеживания состояния между запросами страницы. Реализации <xref:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState%2A> и свойства и <xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A>, и <xref:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState%2A> предоставляются методы для включения отслеживания состояния просмотра для элемента управления. Дополнительные сведения см. в разделе [управлении](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceView" />
    <altmember cref="T:System.Web.UI.WebControls.AccessDataSourceView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSourceView (System.Web.UI.WebControls.SqlDataSource owner, string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.SqlDataSource owner, string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As SqlDataSource, name As String, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSourceView(System::Web::UI::WebControls::SqlDataSource ^ owner, System::String ^ name, System::Web::HttpContext ^ context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.WebControls.SqlDataSource" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="owner">Элемент управления источником данных, с которым связан объект <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />.</param>
        <param name="name">Уникальное имя представления источника данных в пределах элемента управления источниками данных, к которому оно принадлежит.</param>
        <param name="context">Текущий контекст <see cref="T:System.Web.HttpContext" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> с назначением указанного элемента управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> в качестве владельца текущего представления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.%23ctor%2A> Конструктор вызывается <xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A> метод для возврата экземпляра представление источника данных с указанным `name` параметра. <xref:System.Web.UI.WebControls.SqlDataSource> Управления связан только с одним <xref:System.Web.UI.WebControls.SqlDataSourceView> представление имена объектов в любой момент времени и всегда `Table`, несмотря на то, что это именования ограничение накладывается <xref:System.Web.UI.WebControls.SqlDataSource> управления не <xref:System.Web.UI.WebControls.SqlDataSourceView>. Можно переопределить <xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A> метод для поддержки представления с другие правила именования.  
  
 <xref:System.Web.HttpContext> Объекта, переданного по `context` параметр используется в представлении источника данных для доступа к объектам параметра, такие как <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> и <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> свойства.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="CancelSelectOnNullParameter">
      <MemberSignature Language="C#" Value="public bool CancelSelectOnNullParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancelSelectOnNullParameter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property CancelSelectOnNullParameter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CancelSelectOnNullParameter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, позволяющее определить, будет ли операция извлечения отменяться в случае равенства любого из параметров, содержащихся в коллекции <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />, значению <see langword="null" />.</summary>
        <value>
          Значение <see langword="true" />, если операция извлечения данных отменяется в случае равенства параметра, содержащегося в коллекции <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />, значению <see langword="null" />; в противном случае — <see langword="false" />. Значение по умолчанию: <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A> свойства хранятся в состоянии представления.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter" />
      </Docs>
    </Member>
    <Member MemberName="CanDelete">
      <MemberSignature Language="C#" Value="public override bool CanDelete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDelete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanDelete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanDelete { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, позволяющее определить, поддерживает ли объект <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />, связанный с текущим элементом управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" />, операцию удаления.</summary>
        <value>
          <see langword="true" />, если операция поддерживается; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.CanDelete%2A> Возвращает `true` Если <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> свойству. Операция удаления может завершиться ошибкой, если все свойства данных не заданы или заданы неправильно.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanInsert">
      <MemberSignature Language="C#" Value="public override bool CanInsert { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInsert" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanInsert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanInsert { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, позволяющее определить, поддерживает ли объект <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />, связанный с текущим элементом управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" />, операцию вставки.</summary>
        <value>
          <see langword="true" />, если операция поддерживается; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert%2A> Возвращает `true` Если <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> свойству. Операция вставки может завершиться ошибкой, если все свойства данных не заданы или заданы неправильно.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanPage">
      <MemberSignature Language="C#" Value="public override bool CanPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanPage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanPage { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, позволяющее определить, поддерживает ли объект <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />, связанный с текущим элементом управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" />, операцию разбиения извлеченных данных по страницам.</summary>
        <value>
          Значение <see langword="false" /> во всех случаях.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView> Объект не поддерживает разбиение на страницы.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.StartRowIndex" />
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.MaximumRows" />
      </Docs>
    </Member>
    <Member MemberName="CanRetrieveTotalRowCount">
      <MemberSignature Language="C#" Value="public override bool CanRetrieveTotalRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRetrieveTotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRetrieveTotalRowCount As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRetrieveTotalRowCount { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, позволяющее определить, поддерживает ли объект <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />, связанный с текущим элементом управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" />, извлечение общего количества строк данных в дополнение к набору данных.</summary>
        <value>
          Значение <see langword="false" /> во всех случаях.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView> Объект не поддерживает извлечение числа строк.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount" />
      </Docs>
    </Member>
    <Member MemberName="CanSort">
      <MemberSignature Language="C#" Value="public override bool CanSort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanSort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSort { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, позволяющее определить, поддерживает ли объект <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />, связанный с текущим элементом управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" />, операцию отсортированное представление извлеченных данных.</summary>
        <value>
          Значение <see langword="true" />, если сортировка поддерживается, в противном случае — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.CanSort%2A> Возвращает `true`, если текущий <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> свойству <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> значение и <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> свойству.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.SortExpression" />
      </Docs>
    </Member>
    <Member MemberName="CanUpdate">
      <MemberSignature Language="C#" Value="public override bool CanUpdate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanUpdate { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, позволяющее определить, поддерживает ли объект <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />, связанный с текущим элементом управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" />, операцию обновления.</summary>
        <value>
          <see langword="true" />, если операция поддерживается; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate%2A> Возвращает `true` Если <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> свойству. Операция удаления может завершиться ошибкой, если все свойства данных не заданы или заданы неправильно.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="ConflictDetection">
      <MemberSignature Language="C#" Value="public System.Web.UI.ConflictOptions ConflictDetection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ConflictOptions ConflictDetection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictDetection As ConflictOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ConflictOptions ConflictDetection { System::Web::UI::ConflictOptions get(); void set(System::Web::UI::ConflictOptions value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, позволяющее определить действия, выполняемые элементом управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> в процессе обновления и удаления при изменении данных в строке основной базы данных во время выполнения операции.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Web.UI.ConflictOptions" />. Значением по умолчанию является <see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> Свойство определяет параметры для старых и новых значений, применены ли `Update` метод. Например, если команда, определяемое <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> возвращает <xref:System.Data.DataSet> объекта со столбцами `Name` и `Number`и <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> свойству <xref:System.Web.UI.ConflictOptions.OverwriteChanges> значение, параметры создаются для `Name` и `Number` для операции обновления. Если <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> свойству <xref:System.Web.UI.ConflictOptions.CompareAllValues> значение, параметры создаются для `Name`, `Number`, `original_Name`, и `original_Number`. (Точное имя параметров для исходных значений зависит <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>.) Затем <xref:System.Web.UI.WebControls.SqlDataSourceView> определяет, является ли метод, указанный в <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> свойство имеет параметры, которые соответствуют.  
  
 Управление параллелизмом — это метод, используемый хранилищами данных для управления чтением и изменения в хранилище, когда несколько пользователей получают доступ и управление те же данные данных. Например один клиент считывает данные и представляет их пользователю, пока другой клиент считывает те же данные и представляет их с другим пользователем. Если для обоих пользователей обновлять данные и отправляют их в хранилище данных, неожиданный результат может произойти, так как оба клиента могут обновлять разные значения для тех же данных. Это считается конфликтом. Установив <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> свойства <xref:System.Web.UI.ConflictOptions.CompareAllValues> значение, операция обновления можно сравнить старое и новое значения к исходному источнику данных для обнаружения конфликтов и их обработки в соответствии с требованиями.  
  
 Значение <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> свойства хранятся в состоянии представления.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Выбранное значение не является одним из значений <see cref="T:System.Web.UI.ConflictOptions" />.</exception>
        <altmember cref="T:System.Web.UI.ConflictOptions" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Delete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">Объект <see cref="T:System.Collections.IDictionary" /> или значения ключей строки, которые должны быть удалены с помощью операции <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />.</param>
        <param name="oldValues">Объект <see cref="T:System.Collections.IDictionary" />, содержащий значения строки, которые вычисляются, только если для свойства <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> задано значение <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" />.</param>
        <summary>Выполняет операцию удаления, используя SQL-строку <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />, все параметры, заданные в коллекции <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />, и значения, содержащиеся в заданных коллекциях <paramref name="keys" /> и <paramref name="oldValues" />.</summary>
        <returns>Значение, представляющее число строк, удаленных из основной базы данных.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> Вызовы метода <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A> метод, передавая `keys` и `oldValues` параметров.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Объекту <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> не удается установить подключение к базовому источнику данных.  
  
 \- или -  
  
 Свойству <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> присвоено значение <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> без передачи параметра <paramref name="oldValues" />.</exception>
        <exception cref="T:System.NotSupportedException">Значение свойства <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete" /> — <see langword="false" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public string DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeleteCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает SQL-строку, которая используется объектом <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> для удаления данных из основной базы данных.</summary>
        <value>SQL-строка, используемая элементом управления <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> для удаления данных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Различные системы баз данных используют различные диалекты SQL, поэтому синтаксис строки SQL зависит от используемого в данный момент поставщика ADO.NET, который определяется свойством <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>.  
  
 Если строка SQL представляет собой параметризованный запрос или команду, заполнитель параметра также зависит от используемого поставщика ADO.NET. Например, если поставщик является <xref:System.Data.SqlClient?displayProperty=nameWithType>, который является поставщиком по умолчанию для <xref:System.Web.UI.WebControls.SqlDataSource> класс, заполнитель параметра является `'@parameterName'`. Тем не менее если поставщик <xref:System.Data.Odbc?displayProperty=nameWithType> или <xref:System.Data.OleDb?displayProperty=nameWithType>, заполнитель параметра является `'?'`. Дополнительные сведения о параметризованных запросах и командах SQL см. в разделе [использование параметров с помощью элемента управления SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> Может быть строкой SQL или имя хранимой процедуры, если основной базы данных поддерживают хранимые процедуры.  
  
 Значение <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> свойства хранятся в состоянии представления.  
  
   
  
## Examples  
 В следующем примере кода показано, как задать <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> текст для удаления заказа из таблицы Orders базы данных "Борей". Данные извлекаются из таблицы Orders и отображаются в <xref:System.Web.UI.WebControls.GridView> элемента управления. <xref:System.Web.UI.WebControls.GridView> Отображает **удаление** кнопку автоматически при <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> свойству `true` и автоматически заполняет <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> сбора и вызовы <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> метод при **Удалить** кнопки. И, наконец так как в этом примере осуществляется удаление данных, добавляется обработчик событий для попытаться выполнить резервное копирование базы данных на диск перед выполнением операции delete выполняется.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType DeleteCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, позволяющее определить, чем является текст в свойстве <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />: оператором SQL или хранимой процедурой.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />. Значением по умолчанию является <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType%2A> свойства хранятся в состоянии представления.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Выбранное значение не является одним из значений <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommandType" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Deleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит по завершении операции удаления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывать <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted> событий для анализа значений выходных параметров, после завершения операции удаления. Выходные параметры доступны из <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> объекта, связанного с событием.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию параметров, содержащую параметры, используемые свойством <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />.</summary>
        <value>Коллекция <see cref="T:System.Web.UI.WebControls.ParameterCollection" />, содержащая параметры, используемые свойством <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> свойство содержит параметризованный запрос SQL, <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> коллекции содержит любые <xref:System.Web.UI.WebControls.Parameter> объектов, которые соответствуют заполнителям в строке SQL.  
  
 Имена параметров могут быть затронуты <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> свойство; в частности, если имя идентифицирует первичного ключа, например ключ, который указан с помощью `DataKeyNames` свойства элемента управления с привязкой к данным или в удаления и обновления сценариев, в которых <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>свойству <xref:System.Web.UI.ConflictOptions.CompareAllValues> значение и набор `oldValues` передается в метод соответствующие данные. В этом случае строка формата применяется к каждому имени параметра в `oldValues` коллекции.  
  
 В зависимости от поставщика ADO.NET, порядок параметров в <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> коллекции может быть важной. <xref:System.Data.OleDb?displayProperty=nameWithType> И <xref:System.Data.Odbc?displayProperty=nameWithType> поставщики связать параметров в коллекции в порядке следования параметров в параметризованный запрос SQL. <xref:System.Data.SqlClient?displayProperty=nameWithType> Поставщика, что поставщик ADO.NET по умолчанию для <xref:System.Web.UI.WebControls.SqlDataSource> контроля, связывает параметров в коллекции, совпадающий с именем параметра заполнитель в SQL-запросе. Дополнительные сведения о параметризованных запросах и командах SQL см. в разделе [использование параметров с помощью элемента управления SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
   
  
## Examples  
 В следующем примере кода показано, как задать <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> текст для удаления заказа из базы данных "Борей". Изначально данные извлекаются из таблицы Orders и отображаются в <xref:System.Web.UI.WebControls.DropDownList> элемента управления. Необходимо явно объявить <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> свойство и вызвать <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> метод при использовании элементов управления с привязкой к данным, таких как <xref:System.Web.UI.WebControls.DropDownList> (в отличие от элементов управления, таких как <xref:System.Web.UI.WebControls.GridView> и <xref:System.Web.UI.WebControls.DetailsView>, автоматическое заполнение параметры и вызвать метод <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> метод управления источником данных). В этом примере <xref:System.Web.UI.WebControls.Button.OnClick%2A> делегируется событие закрытый <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> обработчик событий, который явно вызывает <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> метод <xref:System.Web.UI.WebControls.SqlDataSource> элемента управления.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/CS/sql11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/VB/sql11vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Deleting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит перед операцией удаления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывать <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting> событий для выполнения операций дополнительную инициализацию, относящиеся к приложению, для проверки значений параметров или для изменения значений параметров перед <xref:System.Web.UI.WebControls.SqlDataSource> элемент управления выполняет операцию удаления.  
  
 Соединение с источником данных не еще открыт при вызове делегата обработчика событий. Таким образом, невозможно отменить <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> операции непосредственно, путем вызова <xref:System.Data.Common.DbCommand.Cancel%2A> метод <xref:System.Data.Common.DbCommand> объекта, представленного <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> объекта. Тем не менее, можно отменить операцию, задав <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> свойство <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> для `true`.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 В следующем примере кода показано, как обрабатывать <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> событие, возникающее, прежде чем произойдет операция удаления. Поскольку в этом примере осуществляется удаление данных из базы данных Northwind, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> обработчик добавляется попытаться выполнить резервное копирование базы данных на диск перед выполнением операции delete.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleted" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteDelete">
      <MemberSignature Language="C#" Value="protected override int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteDelete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDelete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteDelete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">Объект <see cref="T:System.Collections.IDictionary" /> или значения ключей строки, которые должны быть удалены с помощью операции <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />.</param>
        <param name="oldValues">Объект <see cref="T:System.Collections.IDictionary" />, содержащий значения строки, которые вычисляются, только если для свойства <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> задано значение <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" />.</param>
        <summary>Выполняет операцию удаления, используя SQL-строку <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />, все параметры, заданные в коллекции <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />, и значения, содержащиеся в заданных коллекциях <paramref name="keys" /> и <paramref name="oldValues" />.</summary>
        <returns>Значение, представляющее число строк, удаленных из основной базы данных.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView> Класс реализует унаследованный <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> метода для удаления данных из базы данных. Разработчики страниц и разработчики элементов управления с привязкой к данным не вызывать <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A> метод напрямую; вместо этого используйте открытые <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> метод.  
  
 Значения, которые содержатся в `keys` вычисляются и объединяются с любого значения, содержащиеся в коллекции <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> коллекции. Если <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> свойству <xref:System.Web.UI.ConflictOptions.CompareAllValues> значения, значения, содержащиеся в `oldValues` отформатированные коллекции <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> свойство и являются также слияния.  
  
 Перед выполнением операции delete, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> метод вызывается для вызова <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting> событий. Можно обработать это событие для проверки значений параметров и всевозможной обработки перед удалением.  
  
 Для выполнения операции удаления <xref:System.Web.UI.WebControls.SqlDataSourceView> объекта построения <xref:System.Data.Common.DbCommand> с помощью <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> текст и любые связанные с ним <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> свойства и затем выполняет <xref:System.Data.Common.DbCommand> объекта с основной базы данных. После завершения операции удаления <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> метод вызывается для вызова <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted> событий. Можно обработать это событие для выполнения обработки после анализа всех возвращенных значений и коды ошибок и.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Объекту <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> не удается установить подключение к базовому источнику данных.  
  
 \- или -  
  
 Свойству <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> присвоено значение <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> без передачи параметра <paramref name="oldValues" />.</exception>
        <exception cref="T:System.Web.HttpException">У текущего пользователя нет надлежащих прав для доступа к базе данных.  
  
 \- или -  
  
 Экземпляром элемента управления является элемент управления <see cref="T:System.Web.UI.WebControls.AccessDataSource" />, а к месту, к которому ведет путь, заданный для свойства <see cref="P:System.Web.UI.WebControls.AccessDataSource.DataFile" />, запрещен доступ.</exception>
        <exception cref="T:System.NotSupportedException">Значение свойства <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete" /> — <see langword="false" />.  
  
 \- или -  
  
 Относительный путь времени разработки не правильно сопоставлен конструктором перед использованием экземпляра элемента управления <see cref="T:System.Web.UI.WebControls.AccessDataSource" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteInsert">
      <MemberSignature Language="C#" Value="protected override int ExecuteInsert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteInsert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteInsert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteInsert(System::Collections::IDictionary ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values">Объект <see cref="T:System.Collections.IDictionary" /> значений, используемых вместе со свойством <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> для выполнения операции вставки в базу данных. Если с запросом не связан ни один параметр или если свойство <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> не является параметризованным SQL-запросом, передает значение <see langword="null" />.</param>
        <summary>Выполняет операцию вставки, используя SQL-строку <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />, все параметры, заданные в коллекции <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />, и значения, содержащиеся в заданной коллекции <paramref name="values" />.</summary>
        <returns>Значение, представляющее число строк, вставленных в основную базу данных.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView> Класс реализует унаследованный <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> метода для вставки данных в базу данных. Разработчики страниц и разработчики элементов управления с привязкой к данным не вызывать <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A> метод напрямую; вместо этого используйте открытые <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> метод.  
  
 Перед выполнением операции вставки <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> метод вызывается для вызова <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting> событий. Можно обработать это событие для проверки значений параметров и всевозможной обработки перед вставкой.  
  
 Для выполнения операции вставки <xref:System.Web.UI.WebControls.SqlDataSourceView> объекта построения <xref:System.Data.Common.DbCommand> с помощью <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> текст и любые связанные с ним <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> свойства и затем выполняет <xref:System.Data.Common.DbCommand> объекта в основной базе данных. После завершения вставки <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> метод вызывается для вызова <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted> событий. Можно обработать это событие для выполнения обработки после анализа всех возвращенных значений и коды ошибок и.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Объекту <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> не удается установить подключение к базовому источнику данных.</exception>
        <exception cref="T:System.Web.HttpException">У текущего пользователя нет надлежащих прав для получения доступа к базе данных.</exception>
        <exception cref="T:System.NotSupportedException">Значение свойства <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert" /> — <see langword="false" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteSelect">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Collections.IEnumerable ExecuteSelect(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ExecuteSelect (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Collections::IEnumerable ^ ExecuteSelect(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">Объект <see cref="T:System.Web.UI.DataSourceSelectArguments" />, используемый для операций запроса данных вне пределов извлечения базовых данных.</param>
        <summary>Извлекает данные из основной базы данных, используя SQL-строку <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> и параметры, содержащиеся в коллекции <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />.</summary>
        <returns>Список строк данных <see cref="T:System.Collections.IEnumerable" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView> Класс реализует унаследованный <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> метод для извлечения данных из базы данных. Разработчики страниц и разработчики элементов управления с привязкой к данным не вызывать <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> метод напрямую; вместо этого используйте открытые <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> метод.  
  
 Прежде чем будет выполнено извлечение данных, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A> метод вызывается для вызова <xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting> событий. Можно обработать это событие для проверки значений параметров и всевозможной обработки перед извлечением данных.  
  
 Для выполнения операции, <xref:System.Web.UI.WebControls.SqlDataSourceView> объекта построения <xref:System.Data.Common.DbCommand> с помощью <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> текст и любые связанные с ним <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>и выполнит его в основной базе данных. После завершения операции, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> метод вызывается для вызова <xref:System.Web.UI.WebControls.SqlDataSource.Selected> событий. Можно обработать это событие для анализа всех возвращенных значений кодов ошибок и выполнить любую необходимую обработку.  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> Возвращает <xref:System.Data.DataView> объекта, если <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> равно <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>, или <xref:System.Data.IDataReader> объекта, если <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> равно <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader>. Закрыть <xref:System.Data.IDataReader> объекта после завершения чтения данных.  
  
 Если <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> равно <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> и включено кэширование, <xref:System.Web.UI.WebControls.SqlDataSourceView> извлекает данные из и сохраняет данные в кэше во время операции с данными. Кэш создается, отклоненных или обновить определяется поведение кэширования, заданное сочетание <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> и <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> свойства.  
  
> [!IMPORTANT]
>  При использовании олицетворения клиента во время проверки подлинности Windows данные кэшируются в том случае, когда первый пользователь обращается к данным. Если другой пользователь запрашивает те же данные, данные извлекаются из кэша. Данные извлекаются не используется другое обращение к базе данных для проверки доступа пользователя к данным. Если предполагается, что несколько пользователей для доступа к данным, и требуется, чтобы в каждом извлечении данных должна выполняться проверка конфигурации безопасности базы данных, не используйте кэширование.  
  
 Если <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> равно <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> и <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> указано, оно вычисляется наравне со всеми предоставленный <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> и полученный фильтр применяется к списку данных во время операции извлечения данных.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Параметр <paramref name="arguments" />, передаваемый методу <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />, указывает на то, что при извлечении данных источник данных должен выполнить определенные дополнительные действия, чтобы обеспечить возможность разбиения по страницам или сортировки извлеченных данных, однако элемент управления источником данных не поддерживает запрашиваемые возможности.  
  
 \- или -  
  
 Кэширование поддерживается, однако для свойства <see cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" /> источника данных не задано значение <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataSet" />.  
  
 \- или -  
  
 Свойство <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName" /> задано, однако для свойства <see cref="P:System.Data.SqlClient.SqlCommand.CommandType" /> не установлено значение <see cref="F:System.Data.CommandType.StoredProcedure" />.</exception>
        <exception cref="T:System.InvalidOperationException">Источнику данных не удается создать подключение к базе данных.  
  
 \- или -  
  
 Кэширование поддерживается, однако тип внутреннего кэша и тип команды не совпадают.</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteUpdate">
      <MemberSignature Language="C#" Value="protected override int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteUpdate(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteUpdate (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteUpdate(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">Объект <see cref="T:System.Collections.IDictionary" /> первичных ключей, используемых вместе со свойством <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> для выполнения операции обновления базы данных. Если с запросом не связан ни один ключ или если свойство <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> не является параметризованным SQL-запросом, передает значение <see langword="null" />.</param>
        <param name="values">Объект <see cref="T:System.Collections.IDictionary" /> значений, используемых вместе со свойством <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> для выполнения операции обновления базы данных. Если с запросом не связан ни один параметр или если свойство <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> не является параметризованным SQL-запросом, передает значение <see langword="null" />.</param>
        <param name="oldValues">Объект <see cref="T:System.Collections.IDictionary" />, предоставляющий исходные значения в базе данных. Если с запросом не связан ни один параметр или если свойство <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> не является параметризованным SQL-запросом, передает значение <see langword="null" />.</param>
        <summary>Выполняет операцию обновления, используя SQL-строку <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />, все параметры, имеющиеся в коллекции <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />, и значения, содержащиеся в заданных коллекциях <paramref name="keys" />, <paramref name="values" /> и <paramref name="oldValues" />.</summary>
        <returns>Значение, представляющее число строк, обновленных в основной базе данных.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView> Класс реализует унаследованный <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A> метод для обновления данных в базе данных. Разработчики страниц и разработчики элементов управления с привязкой к данным не вызывать <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A> метод напрямую; вместо этого используйте открытые <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> метод.  
  
 Значения, содержащиеся в `keys` и `values` вычисляются и объединяются с значений, содержащихся в коллекции <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> коллекции. Если <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> свойству <xref:System.Web.UI.ConflictOptions.CompareAllValues>, значения, содержащиеся в `oldValues` коллекции отформатированные <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> и слияния.  
  
 Перед выполнением операции update, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> метод вызывается для вызова <xref:System.Web.UI.WebControls.SqlDataSourceView.Updating> событий. Можно обработать это событие для проверки значений параметров и всевозможной перед обновлением.  
  
 Для выполнения операции, <xref:System.Web.UI.WebControls.SqlDataSourceView> строит <xref:System.Data.Common.DbCommand> с помощью <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> текст и любые связанные с ним <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> свойства и затем выполняет <xref:System.Data.Common.DbCommand> объекта в основной базе данных. После завершения операции, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> метод вызывается для вызова <xref:System.Web.UI.WebControls.SqlDataSourceView.Updated> событий. Можно обработать это событие для выполнения обработки после анализа всех возвращенных значений и коды ошибок и.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Объекту <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> не удается установить подключение к базовому источнику данных.  
  
 \- или -  
  
 Свойству <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> присвоено значение <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> без передачи параметра <paramref name="oldValues" />.</exception>
        <exception cref="T:System.Web.HttpException">У текущего пользователя нет надлежащих прав для получения доступа к базе данных.</exception>
        <exception cref="T:System.NotSupportedException">Значение свойства <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" /> — <see langword="false" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="FilterExpression">
      <MemberSignature Language="C#" Value="public string FilterExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает выражение фильтра для применения при вызове метода <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Select" />.</summary>
        <value>Строка, которая представляет выражение фильтрации, применяемое при получении данных с помощью метода <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Синтаксис, используемый для <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> свойство — это синтаксис — стиль строки формата. Можно включить параметры в <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> свойство. Если тип параметра — строку или символ, параметр нужно заключите в одинарные кавычки. Кавычки не требуются, если параметр имеет числовой тип.  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> Коллекция содержит параметры, которые вычисляются заполнителями, которые находятся в <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> свойство.  
  
 <xref:System.Web.UI.WebControls.SqlDataSource> Элемент управления поддерживает фильтрации данных только тогда, когда в `DataSet` режиме.  
  
 Значение <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> свойства хранятся в состоянии представления.  
  
> [!IMPORTANT]
>  Следует проверить все значения параметров фильтра, полученные от клиента. Среда выполнения просто подставляет значение параметра в выражении фильтра и применяет его к <xref:System.Data.DataView> объект, возвращаемый <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод. Если вы используете <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> свойство в качестве меры безопасности, чтобы ограничить число элементов, которые возвращаются, значения параметров необходимо проверить перед фильтрация выполняется.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется извлечение данных из базы данных Northwind и фильтрация с помощью <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> и <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> свойства. <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> Свойство <xref:System.Web.UI.WebControls.SqlDataSource> управления применяется в любое время <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> выполнить метод для извлечения данных. В этом примере <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> свойство содержит заполнителя для параметра фильтра, который содержится в <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> коллекции. В этом примере параметр фильтра является <xref:System.Web.UI.WebControls.ControlParameter> объекта, к которому привязан <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> свойства <xref:System.Web.UI.WebControls.DropDownList> элемента управления. Поскольку <xref:System.Web.UI.WebControls.DropDownList> управления имеет его <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> свойство `true`, все изменения <xref:System.Web.UI.WebControls.DropDownList> выбора вызывает отправку на сервер и <xref:System.Web.UI.WebControls.GridView> управления повторно привязать элемент управления источником данных с новым фильтром.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Свойство <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" /> было задано, когда объект <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> находился в режиме <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataReader" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="Filtering">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Filtering" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Filtering As SqlDataSourceFilteringEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceFilteringEventHandler ^ Filtering;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит перед операцией фильтрации.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывать <xref:System.Web.UI.WebControls.SqlDataSourceView.Filtering> событий для выполнения операции проверки на значения параметра фильтра перед <xref:System.Web.UI.WebControls.SqlDataSourceView> объект выполняет операцию фильтрации. Вы можете отменить <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> метод, задав <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> свойство <xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs> объект `true`. Это событие возникает только в том случае, если <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> свойству.  
  
> [!IMPORTANT]
>  Следует проверить все значения параметров фильтра, полученные от клиента. Среда выполнения просто подставляет значение параметра в выражении фильтра и применяет его к <xref:System.Data.DataView> объект, возвращаемый <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод. Если вы используете <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> свойство в качестве меры безопасности, чтобы ограничить число элементов, которые возвращаются, значения параметров необходимо проверить перед фильтрация выполняется.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Filtering" />
      </Docs>
    </Member>
    <Member MemberName="FilterParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection FilterParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ FilterParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию параметров, связанных с любыми прототипами параметров в строке <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" />.</summary>
        <value>Коллекция <see cref="T:System.Web.UI.WebControls.ParameterCollection" />, содержащая набор параметров, связанных с любыми местозаполнителями параметров, содержащимися в свойстве <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Параметры в <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> коллекции связаны со всеми параметрами, которые указаны в <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> свойство. Местозаполнители параметров, указанных в <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> оцениваются по порядку и сопоставить объекты параметров в <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> коллекции при <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> вызывается метод.  
  
> [!IMPORTANT]
>  Следует проверить все значения параметров фильтра, полученные от клиента. Среда выполнения просто подставляет значение параметра в выражении фильтра и применяет его к <xref:System.Data.DataView> объект, возвращаемый <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> метод. Если вы используете <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> свойство в качестве меры безопасности, чтобы ограничить число элементов, которые возвращаются, значения параметров необходимо проверить перед фильтрация выполняется.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется извлечение данных из базы данных Northwind и фильтрация с помощью <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> и <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> свойства. <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> Свойство <xref:System.Web.UI.WebControls.SqlDataSource> управления применяется в любое время <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> выполнить метод для извлечения данных. В этом примере <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> свойство содержит заполнителя для параметра фильтра, который содержится в <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> коллекции. Кроме того, параметр filter является <xref:System.Web.UI.WebControls.ControlParameter> объекта, к которому привязан <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> свойства <xref:System.Web.UI.WebControls.DropDownList> элемента управления. Поскольку <xref:System.Web.UI.WebControls.DropDownList> управления имеет его <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> свойство `true`, все изменения <xref:System.Web.UI.WebControls.DropDownList> выбора вызывает отправку информации на сервер и <xref:System.Web.UI.WebControls.GridView> управления повторно привязать элемент управления источником данных с новый фильтр.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Insert(System::Collections::IDictionary ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values">Объект <see cref="T:System.Collections.IDictionary" /> параметров свойства <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />, используемого для выполнения операции вставки в базе данных. Если с запросом не связан ни один параметр или если свойство <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> не является параметризованным SQL-запросом, передает значение <see langword="null" />.</param>
        <summary>Выполняет операцию вставки, используя SQL-строку <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />, все параметры, заданные в коллекции <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />, и значения, содержащиеся в заданной коллекции <paramref name="values" />.</summary>
        <returns>Значение, представляющее число строк, вставленных в основную базу данных.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A> Вызовы метода <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A> метод, передавая `values` параметра.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Объекту <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> не удается установить подключение к базовому источнику данных.</exception>
        <exception cref="T:System.NotSupportedException">Значение свойства <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert" /> — <see langword="false" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public string InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InsertCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает SQL-строку, которая используется объектом <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> для вставки данных в основную базу данных.</summary>
        <value>SQL-строка, используемая объектом <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> для вставки данных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Различные системы баз данных используют различные диалекты SQL, поэтому синтаксис строки SQL зависит от используемого в данный момент поставщика ADO.NET, который определяется свойством <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>. Если строка SQL представляет собой параметризованный запрос или команду, заполнитель параметра также зависит от используемого поставщика ADO.NET. Например, если поставщик является <xref:System.Data.SqlClient?displayProperty=nameWithType>, который является поставщиком по умолчанию для <xref:System.Web.UI.WebControls.SqlDataSource> класс, заполнитель параметра является `'@parameterName'`. Тем не менее если поставщик <xref:System.Data.Odbc?displayProperty=nameWithType> или <xref:System.Data.OleDb?displayProperty=nameWithType>, заполнитель параметра является `'?'`. Дополнительные сведения о параметризованных запросах и командах SQL см. в разделе [использование параметров с помощью элемента управления SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> Свойство может быть строкой SQL или имя хранимой процедуры, если источник данных поддерживает хранимые процедуры.  
  
 Значение <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> свойства хранятся в состоянии представления.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как вставить данные в базе данных с помощью <xref:System.Web.UI.WebControls.SqlDataSource> элемента управления. Во втором примере кода показано, как извлечь данные из Microsoft SQL Server, откройте его в <xref:System.Web.UI.WebControls.GridView> управления и использовать <xref:System.Web.UI.WebControls.DetailsView> управления, чтобы просмотреть подробные сведения о выбранной строки в <xref:System.Web.UI.WebControls.GridView> и в качестве формы для вставки новых записей.  
  
 В следующем примере кода демонстрируется вставка данных в базе данных с помощью <xref:System.Web.UI.WebControls.SqlDataSource> элемента управления. Текущие данные в таблице отображаются в <xref:System.Web.UI.WebControls.DropDownList> элемента управления. Можно добавить новые записи, введя значения в <xref:System.Web.UI.WebControls.TextBox> элементов управления и выбрав **вставить** кнопки. Когда **вставить** кнопки, указанные значения вставляются в базу данных и <xref:System.Web.UI.WebControls.DropDownList> обновляется.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 В следующем примере кода показано, как для извлечения данных из SQL Server, откройте его в <xref:System.Web.UI.WebControls.GridView> управления и использовать <xref:System.Web.UI.WebControls.DetailsView> управления, чтобы просмотреть подробные сведения о выбранной строки в <xref:System.Web.UI.WebControls.GridView> и в качестве формы для вставки новых записей.  
  
 Изначально данные отображаются в <xref:System.Web.UI.WebControls.GridView> управления и выбранной строки <xref:System.Web.UI.WebControls.GridView> также отображается в <xref:System.Web.UI.WebControls.DetailsView> элемента управления. <xref:System.Web.UI.WebControls.GridView> И <xref:System.Web.UI.WebControls.DetailsView> элементы управления используют различные данные системы управления версиями; связанный с <xref:System.Web.UI.WebControls.DetailsView> имеет <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> и <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> свойства, обеспечивающие, выбранной строки <xref:System.Web.UI.WebControls.GridView> — отображается.  
  
 При нажатии кнопки автоматически созданный **вставить** кнопки, <xref:System.Web.UI.WebControls.DetailsView> управления <xref:System.Web.UI.WebControls.DetailsView> показан другой пользовательский интерфейс, который используется для вставки новой записи. В примере используется хранимая процедура для вставки записей и возвращает первичный ключ вставленной строки. При вставке записи, <xref:System.Web.UI.WebControls.DetailsView> автоматически заполняет <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> коллекции со значениями из связанных столбцов и вызывает <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> метод. <xref:System.Web.UI.WebControls.DetailsView> Могут определить правильные параметры из любого <xref:System.Web.UI.WebControls.BoundField> объекта и параметр для <xref:System.Web.UI.WebControls.TemplateField> объекта при использовании синтаксиса двусторонней привязки данных ASP.NET. В этом примере добавляется дополнительный параметр в <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> обработчик событий для обработки первичный ключ, который возвращается хранимой процедурой.  
  
 Наконец после вставки данных с <xref:System.Web.UI.WebControls.DetailsView> управления в базу данных, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> обработчик событий вызывается для обработки <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> отображаются события, значение первичного ключа вставленной строки и <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> метод <xref:System.Web.UI.WebControls.GridView> управления явно вызывается для обновления данных.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType InsertCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, позволяющее определить, чем является текст в свойстве <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />: оператором SQL или хранимой процедурой.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />. Это значение представляет собой значение <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType%2A> свойства хранятся в состоянии представления.  
  
   
  
## Examples  
 В следующем примере кода показано, как извлечь данные из Microsoft SQL Server, откройте его в <xref:System.Web.UI.WebControls.GridView> управления и использовать <xref:System.Web.UI.WebControls.DetailsView> управления, чтобы просмотреть подробные сведения о выбранной строки в <xref:System.Web.UI.WebControls.GridView> и в качестве формы для вставки новых записей.  
  
 <xref:System.Web.UI.WebControls.GridView> Элемент управления отображает набор данных и <xref:System.Web.UI.WebControls.DetailsView> элемент управления отображает подробные сведения для конкретной строки. При нажатии кнопки автоматически созданный **вставить** кнопки, <xref:System.Web.UI.WebControls.DetailsView> управления <xref:System.Web.UI.WebControls.DetailsView> показан другой пользовательский интерфейс, который используется для вставки новой записи. В примере используется хранимая процедура для вставки записей и возвращает первичный ключ вставленной строки. Имя хранимой процедуры задано в <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> свойство и идентифицируется как хранимую процедуру, задав <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A> свойства <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> значение.  
  
 Наконец после вставки данных с <xref:System.Web.UI.WebControls.DetailsView> управления в базу данных, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> обработчик событий вызывается для обработки <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> отображаются события, значение первичного ключа вставленной строки и <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> метод <xref:System.Web.UI.WebControls.GridView> управления явно вызывается для обновления данных.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Выбранное значение не является одним из значений <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommandType" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Inserted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при завершении операции вставки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывать <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted> событий для анализа значений выходных параметров, после завершения операции вставки. Выходные параметры доступны из <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> объекта, связанного с событием.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется извлечение данных из Microsoft SQL Server и отобразить ее в <xref:System.Web.UI.WebControls.GridView> элемента управления. В примере также используется <xref:System.Web.UI.WebControls.DetailsView> управления для отображения сведений о выбранной строки в <xref:System.Web.UI.WebControls.GridView>и в качестве формы для вставки новых записей.  
  
 Изначально данные отображаются в <xref:System.Web.UI.WebControls.GridView> управления и выбранной строки <xref:System.Web.UI.WebControls.GridView> также отображается в <xref:System.Web.UI.WebControls.DetailsView>. <xref:System.Web.UI.WebControls.GridView> И <xref:System.Web.UI.WebControls.DetailsView> элементы управления используют различные данные системы управления версиями; связанный с <xref:System.Web.UI.WebControls.DetailsView> имеет <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> и <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> свойства, обеспечивающие, выбранной строки <xref:System.Web.UI.WebControls.GridView> — отображается.  
  
 При нажатии кнопки автоматически созданный **вставить** кнопки <xref:System.Web.UI.WebControls.DetailsView> управления <xref:System.Web.UI.WebControls.DetailsView> показан другой пользовательский интерфейс, который используется для вставки новой записи. В примере используется хранимая процедура для вставки записей и возвращает первичный ключ вставленной строки. При вставке записи, <xref:System.Web.UI.WebControls.DetailsView> автоматически заполняет <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> коллекции со значениями из связанных столбцов и вызывает <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> метод. <xref:System.Web.UI.WebControls.DetailsView> Могут определить правильные параметры из любого <xref:System.Web.UI.WebControls.BoundField> объекта и параметр для <xref:System.Web.UI.WebControls.TemplateField> объекта при использовании синтаксиса двусторонней привязки данных ASP.NET. В этом примере добавляется дополнительный параметр в <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> обработчик событий для обработки первичный ключ, который возвращается хранимой процедурой.  
  
 Наконец после вставки данных с <xref:System.Web.UI.WebControls.DetailsView> управления в базу данных, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> обработчик событий вызывается для обработки <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> отображаются события, значение первичного ключа вставленной строки и <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> метод <xref:System.Web.UI.WebControls.GridView> управления явно вызывается для обновления данных.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Inserting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит перед операцией вставки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывать <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting> событий для выполнения операций дополнительную инициализацию, относящиеся к приложению, для проверки значений параметров или для изменения значений параметров перед <xref:System.Web.UI.WebControls.SqlDataSource> элемент управления выполняет операцию вставки.  
  
 Соединение с источником данных не еще открыт при вызове делегата обработчика событий. Таким образом, невозможно отменить операцию базы данных непосредственно, путем вызова <xref:System.Data.Common.DbCommand.Cancel%2A> метод <xref:System.Data.Common.DbCommand> объекта, представленного <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> объекта. Тем не менее, можно отменить операцию базы данных, задав <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> свойство <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> для `true`.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 В следующем примере кода показано, как извлечь данные из Microsoft SQL Server, откройте его в <xref:System.Web.UI.WebControls.GridView> элемента управления. В примере также используется <xref:System.Web.UI.WebControls.DetailsView> управления для отображения сведений о выбранной строки в <xref:System.Web.UI.WebControls.GridView>и в качестве формы для вставки новых записей.  
  
 Изначально данные отображаются в <xref:System.Web.UI.WebControls.GridView> управления и выбранной строки <xref:System.Web.UI.WebControls.GridView> также отображается в <xref:System.Web.UI.WebControls.DetailsView> элемента управления. <xref:System.Web.UI.WebControls.GridView> И <xref:System.Web.UI.WebControls.DetailsView> элементы управления используют различные данные системы управления версиями; связанный с <xref:System.Web.UI.WebControls.DetailsView> имеет <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> и <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> свойства, обеспечивающие, выбранной строки <xref:System.Web.UI.WebControls.GridView> — отображается.  
  
 При нажатии кнопки автоматически созданный **вставить** кнопки, <xref:System.Web.UI.WebControls.DetailsView> управления <xref:System.Web.UI.WebControls.DetailsView> показан другой пользовательский интерфейс, который используется для вставки новой записи. В примере используется хранимая процедура для вставки записей и возвращает первичный ключ вставленной строки. При вставке записи, <xref:System.Web.UI.WebControls.DetailsView> автоматически заполняет <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> коллекции со значениями из связанных столбцов и вызывает <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> метод. <xref:System.Web.UI.WebControls.DetailsView> Могут определить правильные параметры из любого <xref:System.Web.UI.WebControls.BoundField> объекта, а также параметр для <xref:System.Web.UI.WebControls.TemplateField> объекта при использовании синтаксиса двусторонней привязки данных ASP.NET. В этом примере добавляется дополнительный параметр в <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> обработчик событий для обработки первичный ключ, который возвращается хранимой процедурой.  
  
 Наконец после вставки данных с <xref:System.Web.UI.WebControls.DetailsView> управления в базу данных, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> обработчик событий вызывается для обработки <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> отображаются события, значение первичного ключа вставленной строки и <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> метод <xref:System.Web.UI.WebControls.GridView> управления явно вызывается для обновления данных.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию параметров, содержащую параметры, используемые свойством <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />.</summary>
        <value>Коллекция <see cref="T:System.Web.UI.WebControls.ParameterCollection" />, содержащая параметры, используемые свойством <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> свойство содержит параметризованный запрос SQL, <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> коллекции содержит любые <xref:System.Web.UI.WebControls.Parameter> объектов, которые соответствуют заполнителям в строке SQL.  
  
 В зависимости от поставщика ADO.NET, порядок параметров в <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> коллекции может быть важной. <xref:System.Data.OleDb?displayProperty=nameWithType> И <xref:System.Data.Odbc?displayProperty=nameWithType> поставщики связать параметров в коллекции в порядке, в котором параметры появляются в параметризованный запрос SQL. <xref:System.Data.SqlClient?displayProperty=nameWithType> Поставщика, что поставщик ADO.NET по умолчанию для <xref:System.Web.UI.WebControls.SqlDataSource> контроля, связывает параметров в коллекции, совпадающий с именем параметра с псевдонимом заполнитель в SQL-запросе. Дополнительные сведения о параметризованных запросах и командах SQL см. в разделе [использование параметров с помощью элемента управления SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется вставка данных в базе данных с помощью <xref:System.Web.UI.WebControls.SqlDataSource> управления и простую страницу Web Forms. Текущие данные в таблице отображаются в <xref:System.Web.UI.WebControls.DropDownList> элемента управления. Можно добавить новые записи, введя значения в <xref:System.Web.UI.WebControls.TextBox> элементов управления и выбрав **вставить** кнопки. Когда **вставить** кнопки, указанные значения вставляются в базу данных и <xref:System.Web.UI.WebControls.DropDownList> обновляется.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
      </Docs>
    </Member>
    <Member MemberName="IsTrackingViewState">
      <MemberSignature Language="C#" Value="protected bool IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsTrackingViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsTrackingViewState { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее сохраняет ли объект <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> изменения в данных о состоянии представления.</summary>
        <value>
          Значение <see langword="true" />, если представление источника данных должно сохранять состояние представления; в противном случае — значение <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected virtual void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadViewState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Объект, представляющий состояние <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> для восстановления.</param>
        <summary>Восстанавливает сохраненное раннее состояние представления источника данных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод в основном используется [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] инфраструктуру и не предназначен для использования непосредственно из программного кода.  Однако разработчики элементов управления можно переопределить этот метод, чтобы задать способ восстановления состояния представления в серверного элемента управления. Дополнительные сведения см. в разделе [управлении](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A> Метод восстанавливает сведения о состоянии представления для <xref:System.Web.UI.WebControls.SqlDataSourceView> объекта из предыдущего запроса страницы, которые были сохранены в <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A> метод.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="OldValuesParameterFormatString">
      <MemberSignature Language="C#" Value="public string OldValuesParameterFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OldValuesParameterFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property OldValuesParameterFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OldValuesParameterFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("{0}")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку формата, применяемую к именам любых параметров, переданных методу <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" /> или <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" />.</summary>
        <value>Строка, представляющая строку формата, применяемую к именам любых параметров <paramref name="oldValues" />, переданных методу <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" /> или <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" />. Значение по умолчанию — "{0}".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> Строка форматирования применяется к первичные ключи, например те, которые идентифицируются по `DataKeyNames` свойство элемента управления с привязкой к данным или удаления и обновления сценариев где <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> свойству <xref:System.Web.UI.ConflictOptions.CompareAllValues> значение и набор `oldValues` передается в метод соответствующие данные. В этом случае строка формата применяется к каждому имени параметра в `oldValues` коллекции. Дополнительные сведения см. в разделе <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString?displayProperty=nameWithType>.  
  
 Значение <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> свойства хранятся в состоянии представления.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="OnDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleted (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleted(class System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleted (e As SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleted(System::Web::UI::WebControls::SqlDataSourceStatusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleted" /> после завершения операции удаления в элементе управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 Метод <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> метод в производном классе нужно убедиться, что для вызова <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> метод базового класса, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleting (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleting(class System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleting (e As SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleting(System::Web::UI::WebControls::SqlDataSourceCommandEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting" /> до того, как элемент управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> попытается выполнить операцию удаления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 Метод <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
   
  
## Examples  
 В следующем примере кода показано, как обрабатывать <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> события, которое вызывается перед <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> операция выполняется. Поскольку в этом примере осуществляется удаление данных из базы данных Northwind, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> обработчик добавляется попытаться выполнить резервное копирование базы данных на диск, прежде чем будет выполнено удаление.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> метод в производном классе нужно убедиться, что для вызова <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> метод базового класса, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnFiltering">
      <MemberSignature Language="C#" Value="protected virtual void OnFiltering (System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFiltering(class System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFiltering (e As SqlDataSourceFilteringEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFiltering(System::Web::UI::WebControls::SqlDataSourceFilteringEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Filtering" /> до того, как элемент управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> отфильтрует результаты операции выбора.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 Метод <xref:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)" /> метод в производном классе нужно убедиться, что для вызова <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)" /> метод базового класса, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnInserted">
      <MemberSignature Language="C#" Value="protected virtual void OnInserted (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInserted(class System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInserted (e As SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInserted(System::Web::UI::WebControls::SqlDataSourceStatusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />, содержащий данные события.</param>
        <summary>Инициирует возникновение события <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted" /> после завершения операции вставки в элементе управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 Метод <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
   
  
## Examples  
 В следующем примере кода показано, как извлечь данные из Microsoft SQL Server, откройте его в <xref:System.Web.UI.WebControls.GridView> управления и использовать <xref:System.Web.UI.WebControls.DetailsView> управления, чтобы просмотреть подробные сведения о выбранной строки в <xref:System.Web.UI.WebControls.GridView> и в качестве формы для вставки новых записей.  
  
 Изначально данные отображаются в <xref:System.Web.UI.WebControls.GridView> управления и выбранной строки <xref:System.Web.UI.WebControls.GridView> также отображается в <xref:System.Web.UI.WebControls.DetailsView> элемента управления. <xref:System.Web.UI.WebControls.GridView> И <xref:System.Web.UI.WebControls.DetailsView> элементы управления используют различные данные системы управления версиями; связанный с <xref:System.Web.UI.WebControls.DetailsView> имеет <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> и <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> свойства, обеспечивающие, выбранной строки <xref:System.Web.UI.WebControls.GridView> — отображается.  
  
 При нажатии кнопки автоматически созданный **вставить** кнопки, <xref:System.Web.UI.WebControls.DetailsView> управления <xref:System.Web.UI.WebControls.DetailsView> показан другой пользовательский интерфейс, который используется для вставки новой записи. В примере используется хранимая процедура для вставки записей и возвращает первичный ключ вставленной строки. При вставке записи, <xref:System.Web.UI.WebControls.DetailsView> автоматически заполняет <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> коллекции со значениями из связанных столбцов и вызывает <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> метод. <xref:System.Web.UI.WebControls.DetailsView> Могут определить правильные параметры из любого <xref:System.Web.UI.WebControls.BoundField> объекта и параметр для <xref:System.Web.UI.WebControls.TemplateField> объекта при использовании синтаксиса двусторонней привязки данных ASP.NET. В этом примере добавляется дополнительный параметр в <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> обработчик событий для обработки первичный ключ, который возвращается хранимой процедурой.  
  
 Наконец после вставки данных с <xref:System.Web.UI.WebControls.DetailsView> управления в базу данных, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> обработчик событий вызывается для обработки <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> отображаются события, значение первичного ключа вставленной строки и <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> метод <xref:System.Web.UI.WebControls.GridView> управления явно вызывается для обновления данных.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> метод в производном классе нужно убедиться, что для вызова <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> метод базового класса, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnInserting">
      <MemberSignature Language="C#" Value="protected virtual void OnInserting (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInserting(class System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInserting (e As SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInserting(System::Web::UI::WebControls::SqlDataSourceCommandEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting" /> до того, как элемент управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> попытается выполнить операцию вставки.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 Метод <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
   
  
## Examples  
 В следующем примере кода показано, как извлечь данные из Microsoft SQL Server, откройте его в <xref:System.Web.UI.WebControls.GridView> управления и использовать <xref:System.Web.UI.WebControls.DetailsView> управления, чтобы просмотреть подробные сведения о выбранной строки в <xref:System.Web.UI.WebControls.GridView> и в качестве формы для вставки новых записей.  
  
 Изначально данные отображаются в <xref:System.Web.UI.WebControls.GridView> управления и выбранной строки <xref:System.Web.UI.WebControls.GridView> также отображается в <xref:System.Web.UI.WebControls.DetailsView> элемента управления. <xref:System.Web.UI.WebControls.GridView> И <xref:System.Web.UI.WebControls.DetailsView> элементы управления используют различные данные системы управления версиями; связанный с <xref:System.Web.UI.WebControls.DetailsView> имеет <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> и <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> свойства, обеспечивающие, выбранной строки <xref:System.Web.UI.WebControls.GridView> — отображается.  
  
 При нажатии кнопки автоматически созданный **вставить** кнопки, <xref:System.Web.UI.WebControls.DetailsView> управления <xref:System.Web.UI.WebControls.DetailsView> показан другой пользовательский интерфейс, который используется для вставки новой записи. В примере используется хранимая процедура для вставки записей и возвращает первичный ключ вставленной строки. При вставке записи, <xref:System.Web.UI.WebControls.DetailsView> автоматически заполняет <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> коллекции со значениями из связанных столбцов и вызывает <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> метод. <xref:System.Web.UI.WebControls.DetailsView> Могут определить правильные параметры из любого <xref:System.Web.UI.WebControls.BoundField> объекта и параметр для <xref:System.Web.UI.WebControls.TemplateField> объекта при использовании синтаксиса двусторонней привязки данных ASP.NET. В этом примере добавляется дополнительный параметр в <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> обработчик событий для обработки первичный ключ, который возвращается хранимой процедурой.  
  
 Наконец после вставки данных с <xref:System.Web.UI.WebControls.DetailsView> управления в базу данных, <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> обработчик событий вызывается для обработки <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> отображаются события, значение первичного ключа вставленной строки и <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> метод <xref:System.Web.UI.WebControls.GridView> управления явно вызывается для обновления данных.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> метод в производном классе нужно убедиться, что для вызова <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> метод базового класса, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelected">
      <MemberSignature Language="C#" Value="protected virtual void OnSelected (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelected(class System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelected (e As SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelected(System::Web::UI::WebControls::SqlDataSourceStatusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selected" /> после завершения операции извлечения данных в элементе управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 Метод <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> метод в производном классе нужно убедиться, что для вызова <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> метод базового класса, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelecting">
      <MemberSignature Language="C#" Value="protected virtual void OnSelecting (System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelecting(class System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelecting (e As SqlDataSourceSelectingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelecting(System::Web::UI::WebControls::SqlDataSourceSelectingEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selecting" /> до того, как элемент управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> попытается выполнить операцию извлечения данных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 Метод <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" /> метод в производном классе нужно убедиться, что для вызова <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" /> метод базового класса, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdated (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdated(class System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdated (e As SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdated(System::Web::UI::WebControls::SqlDataSourceStatusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие<see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updated" />, после этого как элемент управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> завершил операцию обновления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 Метод <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
   
  
## Examples  
 В следующем примере кода показано, как отображать и обновлять данные, полученные из базы данных ODBC в <xref:System.Web.UI.WebControls.GridView> элемента управления. После успешного обновления записи <xref:System.Web.UI.WebControls.SqlDataSource.Updated> событие обрабатывается с помощью обработчика событий для выполнения постобработки, куда отправлять уведомление по электронной почте сообщение.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> метод в производном классе нужно убедиться, что для вызова <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> метод базового класса, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdating (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdating(class System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdating (e As SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdating(System::Web::UI::WebControls::SqlDataSourceCommandEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updating" /> до того, как элемент управления <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> попытается выполнить операцию обновления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 Метод <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
   
  
## Examples  
 В следующем примере кода показано, как отображать данные, полученные из базы данных Microsoft SQL Server в <xref:System.Web.UI.WebControls.DropDownList> управления и обновить записи с помощью <xref:System.Web.UI.WebControls.TextBox> элемента управления. В примере показано, как использовать <xref:System.Data.Common.DbTransaction> объект для добавления контекст транзакции, при использовании <xref:System.Web.UI.WebControls.SqlDataSource> управления для обновления данных.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> в производном классе нужно убедиться, что для вызова <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> метод базового класса, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ParameterPrefix">
      <MemberSignature Language="C#" Value="protected virtual string ParameterPrefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterPrefix" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ParameterPrefix As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ ParameterPrefix { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает строку, используемую для добавления приставки к прототипу параметра в параметризованном SQL-запросе.</summary>
        <value>Строка "@".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SQL-запросов и команд может быть параметризовано, в том, что они содержат местозаполнители для значений, привязанный к запросу во время выполнения. В зависимости от поставщика данных ADO.NET, задайте для <xref:System.Web.UI.WebControls.SqlDataSource> элемента управления, который определяется <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> свойство, параметры, вычисляются псевдоним или путем их упорядочения в <xref:System.Web.UI.WebControls.ParameterCollection> объекта.  
  
 Если <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> не задано или имеет значение <xref:System.Data.SqlClient?displayProperty=nameWithType>, параметры вычисляются по псевдониму и <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> свойство используется для добавления префикса параметра для <xref:System.Web.UI.WebControls.Parameter.Name%2A> каждого экземпляра <xref:System.Web.UI.WebControls.Parameter> объекта в <xref:System.Web.UI.WebControls.ParameterCollection> во время данных операции с файлами данных или получения. Если <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> свойству <xref:System.Data.OleDb?displayProperty=nameWithType> или <xref:System.Data.Odbc?displayProperty=nameWithType>, параметры, оцениваются по порядку и <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> и <xref:System.Web.UI.WebControls.Parameter.Name%2A> свойства игнорируются.  
  
 При расширении <xref:System.Web.UI.WebControls.SqlDataSourceView> , можно переопределить <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> свойства укажите префикс, отличный от `"@"` строка, если это необходимо.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseUnsupportedCapabilityError">
      <MemberSignature Language="C#" Value="protected internal override void RaiseUnsupportedCapabilityError (System.Web.UI.DataSourceCapabilities capability);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RaiseUnsupportedCapabilityError(valuetype System.Web.UI.DataSourceCapabilities capability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RaiseUnsupportedCapabilityError (capability As DataSourceCapabilities)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RaiseUnsupportedCapabilityError(System::Web::UI::DataSourceCapabilities capability);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="capability" Type="System.Web.UI.DataSourceCapabilities" />
      </Parameters>
      <Docs>
        <param name="capability">Одно из значений <see cref="T:System.Web.UI.DataSourceCapabilities" />, которое сравнивается с возможностями, поддерживаемыми представлением.</param>
        <summary>Сравнивает возможности, запрошенные для операции <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />, с возможностями, которые поддерживаются представлением и вызываются с помощью метода <see cref="M:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError(System.Web.UI.DataSourceView)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError%2A> Метод используется представление источника данных для просмотра все возможности, запрошенных элементом управления с привязкой к данным, которое представляется <xref:System.Web.UI.DataSourceSelectArguments> объект, передаваемый <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> метода и сравнение этих возможностей для возможности, которые поддерживаются в представлении источника данных. Для возможности, которые представлены <xref:System.Web.UI.DataSourceSelectArguments> объекта и не поддерживаются в представлении источника данных <xref:System.NotSupportedException> возникает исключение.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">В источнике данных не поддерживается выбранный параметр <paramref name="capability" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanSort" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanPage" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected virtual object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ SaveViewState();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Сохраняет изменения состояния представления элемента управления <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />, произошедшие с момента отправки страницы обратно на сервер.</summary>
        <returns>Объект, содержащий изменения состояния представления объекта <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />; в противном случае — <see langword="null" />, если с объектом не связано ни одно состояние представления.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A> Метод используется преимущественно разработчиками элементов управления.  
  
 Состояние представления — это совокупность значений свойств для серверного элемента управления. Эти значения автоматически помещаются в <xref:System.Web.UI.Control.ViewState%2A> свойства серверного элемента управления, который является экземпляром объекта <xref:System.Web.UI.StateBag> класса. <xref:System.Web.UI.Control.ViewState%2A> Значение для серверного элемента управления сохраняется в строку объекта после сохранения состояния этапа жизненного цикла сервера управления.  
  
 После сохранения состояния представления строковый объект, который был сохранен после сохранения состояния этапа жизненного цикла управления сервера возвращается клиенту в виде переменной, которая хранится в HTML- `Hidden` элемента. При создании пользовательских серверных элементов управления, можно повысить эффективность путем переопределения <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A> метод и изменение `ViewState` свойства для серверного элемента управления. Дополнительные сведения см. в разделе [управлении](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Select(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Select(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">Объект <see cref="T:System.Web.UI.DataSourceSelectArguments" />, используемый для операций запроса данных вне пределов извлечения базовых данных.</param>
        <summary>Извлекает данные из основной базы данных, используя SQL-строку <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> и параметры, содержащиеся в коллекции <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />.</summary>
        <returns>Список строк данных <see cref="T:System.Collections.IEnumerable" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> Вызовы метода <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> метод, передавая `selectArgs` параметра.  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> Возвращает <xref:System.Data.DataView> объекта, если <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> свойству <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> возвращает значение, или его <xref:System.Data.IDataReader> объекта, если <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> свойству <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> значение. Закрыть <xref:System.Data.IDataReader> объекта после завершения чтения данных.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Параметр <paramref name="selectArgs" />, передаваемый методу <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />, указывает на то, что при извлечении данных источник данных должен выполнить определенные дополнительные действия, чтобы обеспечить возможность разбиения по страницам или сортировки извлеченных данных, однако элемент управления источником данных не поддерживает запрашиваемые возможности.</exception>
        <exception cref="T:System.InvalidOperationException">Объекту <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> не удается установить подключение к базовому источнику данных.</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public string SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает SQL-строку, которая используется объектом <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> для извлечения данных из основной базы данных.</summary>
        <value>SQL-строка, используемая объектом <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> для извлечения данных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Различные системы баз данных используют различные диалекты SQL, поэтому синтаксис строки SQL зависит от используемого в данный момент поставщика ADO.NET, который определяется свойством <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>. Если строка SQL представляет собой параметризованный запрос или команду, заполнитель параметра также зависит от используемого поставщика ADO.NET. Например, если поставщик является <xref:System.Data.SqlClient?displayProperty=nameWithType>, который является поставщиком по умолчанию для <xref:System.Web.UI.WebControls.SqlDataSource> класс, заполнитель параметра является `'@parameterName'`. Тем не менее если поставщик <xref:System.Data.Odbc?displayProperty=nameWithType> или <xref:System.Data.OleDb?displayProperty=nameWithType>, заполнитель параметра является `'?'`. Дополнительные сведения о параметризованных запросах и командах SQL см. в разделе [использование параметров с помощью элемента управления SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> Свойство может быть строкой SQL или имя хранимой процедуры, если источник данных поддерживает хранимые процедуры.  
  
> [!IMPORTANT]
>  Безопаснее использовать хранимую процедуру, чем одну инструкцию SQL для <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> свойства.  
  
 Значение <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> свойства хранятся в состоянии представления.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как задать <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> текст основные SQL-запрос для получения данных из базы данных Microsoft SQL Server и отобразить ее в <xref:System.Web.UI.WebControls.DropDownList> элемента управления. Во втором примере кода показано, как задать <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> текст к имени хранимой процедуры для получения данных из базы данных SQL Server и отобразит в <xref:System.Web.UI.WebControls.DropDownList>.  
  
 В следующем примере кода показано, как задать <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> текст основные SQL-запрос для получения данных из базы данных SQL Server и отобразить ее в <xref:System.Web.UI.WebControls.DropDownList> элемента управления. <xref:System.Web.UI.WebControls.Button> И <xref:System.Web.UI.WebControls.TextBox> элементы управления предоставляются в виде простой интерфейс для обновления адреса для выбранного пользователя в <xref:System.Web.UI.WebControls.DropDownList>.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 В следующем примере кода показано, как задать <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> текст к имени хранимой процедуры для получения данных из базы данных SQL Server и отобразит в <xref:System.Web.UI.WebControls.DropDownList> элемента управления. <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Свойство может быть SQL-запроса или имя хранимой процедуры, если источник данных поддерживает хранимые процедуры.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType SelectCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, позволяющее определить, чем является текст в свойстве <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />: SQL-запросом или хранимой процедурой.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />. Значением по умолчанию является <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType%2A> свойства хранятся в состоянии представления.  
  
   
  
## Examples  
 В следующем примере кода показано, как задать <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> текст к имени хранимой процедуры и <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> свойства <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> значение для получения данных из базы данных Microsoft SQL Server и отобразить ее в <xref:System.Web.UI.WebControls.DropDownList>.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Выбранное значение не является одним из значений <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommandType" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Selected;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит по завершении операции извлечения данных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывать <xref:System.Web.UI.WebControls.SqlDataSourceView.Selected> событий для анализа значений выходных параметров, после завершения операции извлечения данных. Выходные параметры доступны из <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> объекта, связанного с событием.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selecting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As SqlDataSourceSelectingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceSelectingEventHandler ^ Selecting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит перед операцией извлечения данных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывать <xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting> событий для выполнения операций дополнительную инициализацию, относящиеся к приложению, для проверки значений параметров или для изменения значений параметров перед <xref:System.Web.UI.WebControls.SqlDataSource> элемент управления выполняет загрузку данных операция.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selected" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Select" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию параметров, содержащую параметры, используемые свойством <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />.</summary>
        <value>Коллекция <see cref="T:System.Web.UI.WebControls.ParameterCollection" />, содержащая параметры, используемые свойством <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> свойство содержит параметризованный запрос SQL, <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> коллекции содержит любые <xref:System.Web.UI.WebControls.Parameter> объектов, которые соответствуют заполнителям в строке SQL.  
  
 В зависимости от поставщика ADO.NET, порядок параметров в <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> коллекции может быть важной. <xref:System.Data.OleDb?displayProperty=nameWithType> И <xref:System.Data.Odbc?displayProperty=nameWithType> поставщики связать параметров в коллекции в порядке, в котором параметры появляются в параметризованный запрос SQL. <xref:System.Data.SqlClient?displayProperty=nameWithType> Поставщика, что поставщик ADO.NET по умолчанию для <xref:System.Web.UI.WebControls.SqlDataSource> контроля, связывает параметров в коллекции, совпадающий с именем параметра с псевдонимом заполнитель в SQL-запросе. Дополнительные сведения о параметризованных запросах и командах SQL см. в разделе [использование параметров с помощью элемента управления SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
   
  
## Examples  
 В следующем примере кода показано, как извлекать данные из базы данных "Борей" в Microsoft SQL Server, задав <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> свойство SQL-запрос. SQL-запрос является параметризованным и заполнитель в <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> свойство сопоставляется <xref:System.Web.UI.WebControls.ControlParameter> объекта, добавляемого <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> коллекции. Таким образом <xref:System.Web.UI.WebControls.DropDownList> элемент управления, к которому <xref:System.Web.UI.WebControls.ControlParameter> привязан, действует как фильтр, чтобы понять, что отображается в <xref:System.Web.UI.WebControls.ListBox> элемента управления.  
  
> [!NOTE]
>  Поскольку параметр используется в предложении WHERE, использование <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> свойства в этом примере кода функционально эквивалентен использованию оба <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> и <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> свойства.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/CS/sql2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/VB/sql2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      </Docs>
    </Member>
    <Member MemberName="SortParameterName">
      <MemberSignature Language="C#" Value="public string SortParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property SortParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает имя параметра хранимой процедуры, используемого для сортировки извлеченных данных при выполнении их извлечения с помощью хранимой процедуры.</summary>
        <value>Имя параметра хранимой процедуры, используемого для сортировки извлеченных данных при выполнении их извлечения с помощью хранимой процедуры.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> Свойство применяется только при SQL команды, содержащиеся в <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> свойство — имя хранимой процедуры. В этом случае если <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> имеет значение, он содержит имя параметра, который используется для сортировки результатов хранимой процедуры.  
  
 Если <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> свойство задано, оно присоединяется к <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> свойство.  
  
 Значение <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> свойства хранятся в состоянии представления.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.IStateManager.IsTrackingViewState { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Описание этого члена см. в разделе <see cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />.</summary>
        <value>
          Значение <see langword="true" />, если представление источника данных должно сохранять состояние представления; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться только тогда, когда <xref:System.Web.UI.WebControls.SqlDataSourceView> экземпляр приводится к <xref:System.Web.UI.IStateManager> интерфейса.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (savedState As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ savedState) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Объект, представляющий состояние <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> для восстановления.</param>
        <summary>Описание этого члена см. в разделе <see cref="M:System.Web.UI.IStateManager.LoadViewState(System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться только тогда, когда <xref:System.Web.UI.WebControls.SqlDataSourceView> экземпляр приводится к <xref:System.Web.UI.IStateManager> интерфейса.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Описание этого члена см. в разделе <see cref="M:System.Web.UI.IStateManager.SaveViewState" />.</summary>
        <returns>Объект, содержащий изменения состояния представления объекта <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" />; в противном случае — <see langword="null" />, если с объектом не связано ни одно состояние представления.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться только тогда, когда <xref:System.Web.UI.WebControls.SqlDataSourceView> экземпляр приводится к <xref:System.Web.UI.IStateManager> интерфейса.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Описание этого члена см. в разделе <see cref="M:System.Web.UI.IStateManager.TrackViewState" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться только тогда, когда <xref:System.Web.UI.WebControls.SqlDataSourceView> экземпляр приводится к <xref:System.Web.UI.IStateManager> интерфейса.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected virtual void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void TrackViewState();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Инициирует отслеживание элементом управления <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> изменений в состоянии его представления, благодаря чему эти изменения можно сохранить для этого элемента в объекте <see cref="T:System.Web.UI.StateBag" /> и хранить их для всех запросов одной и той же страницы.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">Объект <see cref="T:System.Collections.IDictionary" /> первичных ключей, используемых вместе со свойством <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> для выполнения операции обновления базы данных. Если с запросом не связан ни один ключ или если свойство <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> не является параметризованным SQL-запросом, передает значение <see langword="null" />.</param>
        <param name="values">Объект <see cref="T:System.Collections.IDictionary" /> значений, используемых вместе со свойством <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> для выполнения операции обновления базы данных. Если с запросом не связан ни один параметр или если свойство <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> не является параметризованным SQL-запросом, передает значение <see langword="null" />.</param>
        <param name="oldValues">Объект <see cref="T:System.Collections.IDictionary" />, предоставляющий исходные значения в базе данных. Если с запросом не связан ни один параметр или если свойство <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> не является параметризованным SQL-запросом, передает значение <see langword="null" />.</param>
        <summary>Выполняет операцию обновления, используя SQL-строку <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />, все параметры, имеющиеся в коллекции <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />, и значения, содержащиеся в заданных коллекциях <paramref name="keys" />, <paramref name="values" /> и <paramref name="oldValues" />.</summary>
        <returns>Значение, представляющее число строк, обновленных в основной базе данных.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> Вызовы метода <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A> метод, передавая `keys`, `values`, и `oldValues` параметров. Дополнительные сведения см. в разделе <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand?displayProperty=nameWithType>.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.SqlDataSource> управления для отображения данных в <xref:System.Web.UI.WebControls.DropDownList> управления и обновления данных при **отправить** кнопки. <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> Свойству с параметризованную инструкцию SQL и два <xref:System.Web.UI.WebControls.ControlParameter> параметры добавляются <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> коллекции. Когда **отправить** по нажатию кнопки <xref:System.Web.UI.WebControls.Button.OnClick%2A> событие обрабатывается для вызова <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> метод явным образом.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Объекту <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> не удается установить подключение к базовому источнику данных.</exception>
        <exception cref="T:System.NotSupportedException">Значение свойства <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" /> — <see langword="false" />.</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public string UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdateCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает SQL-строку, которая используется объектом <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> для обновления данных в основной базе данных.</summary>
        <value>SQL-строка, используемая объектом <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> для обновления данных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Различные системы баз данных используют различные диалекты SQL, поэтому синтаксис строки SQL зависит от используемого в данный момент поставщика ADO.NET, который определяется свойством <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>. Если строка SQL представляет собой параметризованный запрос или команду, заполнитель параметра также зависит от используемого поставщика ADO.NET. Например, если поставщик является <xref:System.Data.SqlClient?displayProperty=nameWithType>, который является поставщиком по умолчанию для <xref:System.Web.UI.WebControls.SqlDataSource> класс, заполнитель параметра является `'@parameterName'`. Тем не менее если поставщик <xref:System.Data.Odbc?displayProperty=nameWithType> или <xref:System.Data.OleDb?displayProperty=nameWithType>, заполнитель параметра является `'?'`. Дополнительные сведения о параметризованных запросах и командах SQL см. в разделе [использование параметров с помощью элемента управления SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> Свойство может быть строкой SQL или имя хранимой процедуры, если источник данных поддерживает хранимые процедуры.  
  
 Значение <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> свойства хранятся в состоянии представления.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как задать <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> свойство <xref:System.Web.UI.WebControls.SqlDataSource> управления и обновления данных в базе данных Microsoft SQL Server с помощью <xref:System.Web.UI.WebControls.GridView> элемента управления. Во втором примере кода показано, как обновлять данные в базе данных ODBC с помощью <xref:System.Web.UI.WebControls.GridView> элемента управления.  
  
 В следующем примере кода показано, как задать <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> свойство <xref:System.Web.UI.WebControls.SqlDataSource> управления и обновления данных в базе данных SQL Server с помощью <xref:System.Web.UI.WebControls.GridView> элемента управления. <xref:System.Web.UI.WebControls.GridView> Элемент управления автоматически заполняет <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> коллекции, в определении параметров из <xref:System.Web.UI.WebControls.BoundField> объектов и вызывает <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> метод при **обновление** ссылку на редактируемой <xref:System.Web.UI.WebControls.GridView> выбирается элемент управления. В этом примере также включает некоторые завершающей обработки, после обновления записей, отправляется сообщение уведомления по электронной почте.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/CS/sql7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/VB/sql7vb.aspx#1)]  
  
 В следующем примере кода, который функционально идентичен в предыдущем примере кода, показано, как обновлять данные в базе данных ODBC с помощью <xref:System.Web.UI.WebControls.GridView> элемента управления. <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> Свойству поставщик ADO.NET для ODBC, <xref:System.Data.Odbc?displayProperty=nameWithType>и <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> свойству присвоено имя имя источника данных ODBC (DSN).  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType UpdateCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, позволяющее определить, чем является текст в свойстве <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />: оператором SQL или хранимой процедурой.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />. Значением по умолчанию является <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType%2A> свойства хранятся в состоянии представления.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Выбранное значение не является одним из значений <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />.</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommandType" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Updated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при завершении операции обновления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывать <xref:System.Web.UI.WebControls.SqlDataSourceView.Updated> событий для анализа значений выходных параметров, после завершения операции обновления. Выходные параметры доступны из <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> объекта, связанного с событием.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 В следующем примере кода показано, как отображать и обновлять данные, полученные из базы данных ODBC в <xref:System.Web.UI.WebControls.GridView> элемента управления. После успешного обновления записи <xref:System.Web.UI.WebControls.SqlDataSource.Updated> событие обрабатывается с помощью обработчика событий для выполнения постобработки, куда отправлять уведомление по электронной почте сообщение.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updating" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию параметров, содержащую параметры, используемые свойством <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />.</summary>
        <value>Коллекция <see cref="T:System.Web.UI.WebControls.ParameterCollection" />, содержащая параметры, используемые свойством <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> свойство содержит параметризованный запрос SQL, <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> коллекции содержит любые <xref:System.Web.UI.WebControls.Parameter> объектов, которые соответствуют заполнителям в строке SQL.  
  
 Имена параметров могут быть затронуты <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> свойство; в частности, если имя идентифицирует первичного ключа, например ключ, который указан с помощью `DataKeyNames` свойства, или в удаления и обновления сценариев где <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> свойству <xref:System.Web.UI.ConflictOptions.CompareAllValues> значение и набор `oldValues` передаются методу соответствующих данных. В этом случае строка формата применяется к каждому имени параметра в `oldValues` коллекции.  
  
 В зависимости от поставщика ADO.NET, порядок параметров в <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> коллекции может быть важной. <xref:System.Data.OleDb?displayProperty=nameWithType> И <xref:System.Data.Odbc?displayProperty=nameWithType> поставщики связать параметров в коллекции в порядке, в котором параметры появляются в параметризованный запрос SQL. <xref:System.Data.SqlClient?displayProperty=nameWithType> Поставщика, что поставщик ADO.NET по умолчанию для <xref:System.Web.UI.WebControls.SqlDataSource> контроля, связывает параметров в коллекции, совпадающий с именем параметра с псевдонимом заполнитель в SQL-запросе. Дополнительные сведения о параметризованных запросах и командах SQL см. в разделе [использование параметров с помощью элемента управления SqlDataSource](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.SqlDataSource> управления для отображения данных в <xref:System.Web.UI.WebControls.DropDownList> управления и обновления данных при **отправить** кнопки. <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> Свойству с параметризованную инструкцию SQL, а два <xref:System.Web.UI.WebControls.ControlParameter> параметры добавляются <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> коллекции. Когда **отправить** по нажатию кнопки <xref:System.Web.UI.WebControls.Button.OnClick%2A> событие обрабатывается для вызова <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> метод явным образом.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Updating;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит перед операцией обновления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывать <xref:System.Web.UI.WebControls.SqlDataSourceView.Updating> событий для выполнения операций дополнительную инициализацию, относящиеся к приложению, для проверки значений параметров или для изменения значений параметров перед <xref:System.Web.UI.WebControls.SqlDataSource> элемент управления выполняет операцию обновления.  
  
 Соединение с источником данных не еще открыт при вызове делегата обработчика событий. Таким образом, невозможно отменить операцию непосредственно, путем вызова <xref:System.Data.Common.DbCommand.Cancel%2A> метод <xref:System.Data.Common.DbCommand> объекта, представленного <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> объекта. Тем не менее, можно отменить операцию базы данных, задав <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> свойство <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> для `true`.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 В следующем примере кода показано, как отображать данные, полученные из базы данных Microsoft SQL Server в <xref:System.Web.UI.WebControls.DropDownList> управления и обновить записи с помощью <xref:System.Web.UI.WebControls.TextBox> элемента управления. В примере показано, как использовать <xref:System.Data.Common.DbTransaction> объект для добавления контекст транзакции, при использовании <xref:System.Web.UI.WebControls.SqlDataSource> управления для обновления данных.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
  </Members>
</Type>