<Type Name="TreeNode" FullName="System.Web.UI.WebControls.TreeNode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d4c8ed5cf2e157b21cbb79ea8e00e4a365559249" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36379118" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TreeNode : ICloneable, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TreeNode extends System.Object implements class System.ICloneable, class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TreeNode" />
  <TypeSignature Language="VB.NET" Value="Public Class TreeNode&#xA;Implements ICloneable, IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeNode : ICloneable, System::Web::UI::IStateManager" />
  <TypeSignature Language="F#" Value="type TreeNode = class&#xA;    interface IStateManager&#xA;    interface ICloneable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true, "ChildNodes")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет узел в элементе управления <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView> Управления состоит из узлов. Каждая запись в дереве, называется узлом и представлен <xref:System.Web.UI.WebControls.TreeNode> объекта. Узел, содержащий другие узлы, называется *родительский узел*. Узел, содержащийся в другом узле, называется *дочерний узел*. Узел, не имеет дочерних узлов, называется *листовой узел*. Узел, который не содержится в другом узле, но является предком для всех узлов — *корневой узел*. Узел может быть родительским и дочерним, но корневой, и конечные узлы являются взаимоисключающими. Некоторые свойства visual и поведении узлов, определяются ли узел является *корневой*, *родительского*, или *конечные* узла.  
  
 Несмотря на то, что обычно дерево имеет только один корневой узел <xref:System.Web.UI.WebControls.TreeView> управления можно добавить несколько корневых узлов в структуру дерева. Это полезно при необходимости в отображении списка без единого корневого узла, как и список категорий продуктов.  
  
 Узел в первую очередь хранит данные в двух свойств <xref:System.Web.UI.WebControls.TreeNode.Text%2A> свойство и <xref:System.Web.UI.WebControls.TreeNode.Value%2A> свойства. Значение <xref:System.Web.UI.WebControls.TreeNode.Text%2A> свойство отображается в <xref:System.Web.UI.WebControls.TreeView> управления и <xref:System.Web.UI.WebControls.TreeNode.Value%2A> свойство используется для хранения любых дополнительных данных об узле, например данные, используемые для обработки событий обратной передачи. Узел также хранит путь от узла к его корневому узлу в <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> свойство. <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> Указывает позицию узла относительно корневого узла.  
  
> [!NOTE]
>  Узлы одного уровня должны иметь уникальное значение для <xref:System.Web.UI.WebControls.TreeNode.Value%2A> свойство; <xref:System.Web.UI.WebControls.TreeView> управления не может различать между различными узлами на том же уровне, которые имеют одинаковое значение. В этом случае, если пользователь щелкает узел, который имеет повторяющееся значение узла, отображается первым в <xref:System.Web.UI.WebControls.TreeView> выбирается элемент управления.  
  
 Объект <xref:System.Web.UI.WebControls.TreeNode> объекта состоит из следующих элементов пользовательского интерфейса четыре пользователя, которые можно настроить или скрыть:  
  
-   Расширение узла значка индикатора позволяет узнать, является ли узел развернутое, свернутой или не расширяемая.  
  
-   Флажок параметра связанный с узлом.  
  
-   Необязательный значок узла.  
  
-   Текст узла.  
  
 Можно указать, задав пользовательского образа для индикаторов расширяемый свертываемых и не расширяемый узел <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>, и <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> свойства <xref:System.Web.UI.WebControls.TreeView> класса. Значки индикатора узел расширения могут быть скрыты даже полностью, задав <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A> свойство <xref:System.Web.UI.WebControls.TreeView> класса `false`.  
  
 Чтобы отобразить флажок рядом с узлом, установите <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> свойство <xref:System.Web.UI.WebControls.TreeView> класса. Когда <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> свойству присвоено значение, отличное от `TreeNodeType.Node`, отображаются флажки рядом с помощью указанного типа узла. Можно выборочно переопределить флажок отдельный узел, установив узла <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A> свойство. При отображении типа "флажок" использовать <xref:System.Web.UI.WebControls.TreeNode.Checked%2A> свойства, чтобы определить, установлен ли флажок.  
  
 Можно отобразить изображение в узле, задав <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> свойство. Это изображение, отображаемое рядом с текстом узла.  
  
 Текст узла в <xref:System.Web.UI.WebControls.TreeView> элемент управления может быть в одном из двух режимов: режим выбора и режим навигации. По умолчанию узел находится в режиме выбора. Чтобы перевести узел в режим навигации, узел набора <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> свойство и значение, отличное от пустой строки (»»). Чтобы перевести узел в режим выбора, узел набора <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> свойства равным пустой строке.  
  
> [!NOTE]
>  Некоторые веб-браузеры имеют определенные ограничения, может повлиять на производительность <xref:System.Web.UI.WebControls.TreeView> элемента управления. Например Microsoft Internet Explorer 6.0 ограничен URL-адрес символ 2067 символов, передаче. Если количество символов в URL-адрес узла больше, чем это число, раскрытие узла завершится ошибкой, и исключение не возникает.  
  
 По умолчанию, нажимая на узел, который находится в режиме выбора выполняет обратный вызов страницы сервера и вызывает <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> событий. Можно указать другое событие для инициирования задав узла `SelectAction` свойство. Дополнительные сведения см. в разделе <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>. Чтобы определить, какой из узлов выполнен щелчок в режиме выбора, используйте <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> свойства <xref:System.Web.UI.WebControls.TreeView> элемента управления.  
  
 Если узел находится в режиме навигации, все события выбора отключаются для этого узла. Щелкнув по узлу в режиме навигации направляет пользователя на указанный URL-адрес. При необходимости можно задать <xref:System.Web.UI.WebControls.TreeNode.Target%2A> свойство, чтобы указать окно или фрейм, для отображения связанного содержимого.  
  
 <xref:System.Web.UI.WebControls.TreeNode> Класс содержит несколько свойств, которые используются для хранения состояния узла. Используйте <xref:System.Web.UI.WebControls.TreeNode.Selected%2A> свойство, чтобы определить, выбран ли узел. Чтобы определить, развернут ли узел, используйте <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> свойство. <xref:System.Web.UI.WebControls.TreeNode.DataBound%2A> Свойство используется для определения, является ли узел привязан к данным. Когда узел привязан к данным, базовый элемент данных доступны с помощью <xref:System.Web.UI.WebControls.TreeNode.DataItem%2A> свойство.  
  
 Этот класс предоставляет несколько свойств, помогающих определить позицию узла относительно других узлов в дереве. Используйте <xref:System.Web.UI.WebControls.TreeNode.Depth%2A> свойство, чтобы определить глубину узла. Можно получить список узлов, разделенных из текущего узла в его корневой узел с помощью <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> свойство. Чтобы определить родительский узел для узла, используйте <xref:System.Web.UI.WebControls.TreeNode.Parent%2A> свойство. Дочерние узлы осуществляется с помощью <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> коллекции.  
  
 В некоторых случаях не имеет смысла для статически заранее определить структуру дерева из-за размера данных или пользовательского содержимого, зависит от входных данных пользователя. По этой причине <xref:System.Web.UI.WebControls.TreeView> элемент управления поддерживает динамическое заполнение узлов. Узел может быть заполнен во время выполнения, когда она развернута. Обратите внимание, что может возникнуть непредвиденное поведение при использовании асинхронных узлов. Например при использовании фонового рабочего потока для асинхронного заполнения узлов дерева узла может не заполняется сразу на то, что элемент управления выполняет остальная часть жизненного цикла страницы. При обратной передаче задержка в создании узлов может вызвать проблемы при загрузке состояния просмотра элемента управления, но дерево узлов еще не заполнено.  Дополнительные сведения о динамическом заполнении узла см. в разделе <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> свойство.  
  
 Список начальных значений свойств для экземпляра <xref:System.Web.UI.WebControls.TreeNode>, в разделе <xref:System.Web.UI.WebControls.TreeNode.%23ctor%2A> конструктор.  
  
   
  
## Examples  
 В следующем примере кода показано, как задать фреймы для следующего примера кода.  
  
 [!code-aspx-csharp[TreeViewFrameSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameSet/CS/framecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameSet/VB/framevb.aspx#1)]  
  
 В следующем примере кода показано использование декларативного синтаксиса для создания <xref:System.Web.UI.WebControls.TreeNode> объекты в <xref:System.Web.UI.WebControls.TreeView> элемента управления. В этом примере используется с набором рамок предыдущего примера для отображения содержания.  
  
 [!code-aspx-csharp[TreeViewFrameExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameExample/CS/treeviewframecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameExample/VB/treeviewframevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.TreeView" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.Parent" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.Target" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
    <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.TreeNode" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.TreeNode" /> без текста или значения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор используется для инициализации нового экземпляра <xref:System.Web.UI.WebControls.TreeNode> класса со значениями по умолчанию.  
  
> [!NOTE]
>  При использовании этого конструктора, все свойства в <xref:System.Web.UI.WebControls.TreeNode> установлены значения по умолчанию. Убедитесь, что для задания свойств, при необходимости после создания объекта.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать этот конструктор для динамического добавления узла к <xref:System.Web.UI.WebControls.TreeView> элемента управления.  
  
 [!code-aspx-csharp[TreeNodeCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCtor/CS/treenodectorcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCtor/VB/treenodectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.TreeNode : string -&gt; System.Web.UI.WebControls.TreeNode" Usage="new System.Web.UI.WebControls.TreeNode text" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Текст, отображаемый для узла в элементе управления <see cref="T:System.Web.UI.WebControls.TreeView" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.TreeNode" /> с помощью указанного текста.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор используется для инициализации нового экземпляра <xref:System.Web.UI.WebControls.TreeNode> класса с помощью текст, заданный параметром `text` параметр.  
  
 В следующей таблице показаны исходное значение свойства для экземпляра <xref:System.Web.UI.WebControls.TreeNode>.  
  
|Свойство.|Исходное значение|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.TreeNode.Text%2A>|Значение параметра `text`.|  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать этот конструктор для динамического добавления узла к <xref:System.Web.UI.WebControls.TreeView> элемента управления.  
  
 [!code-aspx-csharp[TreeNodeCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCtor/CS/treenodectorcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCtor/VB/treenodectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, value As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text, System::String ^ value);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.TreeNode : string * string -&gt; System.Web.UI.WebControls.TreeNode" Usage="new System.Web.UI.WebControls.TreeNode (text, value)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Текст, отображаемый для узла в элементе управления <see cref="T:System.Web.UI.WebControls.TreeView" />.</param>
        <param name="value">Дополнительные данные об узле, как данные, используемые для обработки событий обратной передачи.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.TreeNode" />, используя указанные текст и значение.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор используется для инициализации нового экземпляра <xref:System.Web.UI.WebControls.TreeNode> класса, используя текст и значения, указанного в `text` и `value` параметров, соответственно.  
  
 Следующей таблице представлены исходные значения свойств для экземпляра класса <xref:System.Web.UI.WebControls.TreeNode>.  
  
|Свойство.|Исходное значение|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.TreeNode.Text%2A>|Значение параметра `text`.|  
|<xref:System.Web.UI.WebControls.TreeNode.Value%2A>|Значение параметра `value`.|  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать этот конструктор для динамического добавления узла к <xref:System.Web.UI.WebControls.TreeView> элемента управления.  
  
 [!code-aspx-csharp[TreeNodeCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCtor/CS/treenodectorcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCtor/VB/treenodectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected internal TreeNode (System.Web.UI.WebControls.TreeView owner, bool isRoot);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.TreeView owner, bool isRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.#ctor(System.Web.UI.WebControls.TreeView,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub New (owner As TreeView, isRoot As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; TreeNode(System::Web::UI::WebControls::TreeView ^ owner, bool isRoot);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.TreeNode : System.Web.UI.WebControls.TreeView * bool -&gt; System.Web.UI.WebControls.TreeNode" Usage="new System.Web.UI.WebControls.TreeNode (owner, isRoot)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.WebControls.TreeView" />
        <Parameter Name="isRoot" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="owner">Объект <see cref="T:System.Web.UI.WebControls.TreeView" />, который содержит новый <see cref="T:System.Web.UI.WebControls.TreeNode" />.</param>
        <param name="isRoot">
          <see langword="true" />, если <see cref="T:System.Web.UI.WebControls.TreeNode" /> является корневым узлом; в противном случае — <see langword="false" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.TreeNode" /> с помощью указанного владельца.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeTypes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text, string value, string imageUrl);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string value, string imageUrl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, value As String, imageUrl As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text, System::String ^ value, System::String ^ imageUrl);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.TreeNode : string * string * string -&gt; System.Web.UI.WebControls.TreeNode" Usage="new System.Web.UI.WebControls.TreeNode (text, value, imageUrl)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="imageUrl" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Текст, отображаемый для узла в элементе управления <see cref="T:System.Web.UI.WebControls.TreeView" />.</param>
        <param name="value">Дополнительные данные об узле, как данные, используемые для обработки событий обратной передачи.</param>
        <param name="imageUrl">URL-адрес изображения для отображения рядом с текстом узла.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.TreeNode" />, используя указанные текст, значение и URL-адрес изображения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор используется для инициализации нового экземпляра <xref:System.Web.UI.WebControls.TreeNode> класса с помощью текстового значения и указано URL-адрес изображения `text`, `value`, и `imageUrl` параметров, соответственно.  
  
 Следующей таблице представлены исходные значения свойств для экземпляра класса <xref:System.Web.UI.WebControls.TreeNode>.  
  
|Свойство.|Исходное значение|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.TreeNode.Text%2A>|Значение параметра `text`.|  
|<xref:System.Web.UI.WebControls.TreeNode.Value%2A>|Значение параметра `value`.|  
|<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>|Значение параметра `imageUrl`.|  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать этот конструктор для динамического добавления узла к <xref:System.Web.UI.WebControls.TreeView> элемента управления.  
  
 [!code-aspx-csharp[TreeNodeCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCtor/CS/treenodectorcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCtor/VB/treenodectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeNode (string text, string value, string imageUrl, string navigateUrl, string target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string text, string value, string imageUrl, string navigateUrl, string target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (text As String, value As String, imageUrl As String, navigateUrl As String, target As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeNode(System::String ^ text, System::String ^ value, System::String ^ imageUrl, System::String ^ navigateUrl, System::String ^ target);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.TreeNode : string * string * string * string * string -&gt; System.Web.UI.WebControls.TreeNode" Usage="new System.Web.UI.WebControls.TreeNode (text, value, imageUrl, navigateUrl, target)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="imageUrl" Type="System.String" />
        <Parameter Name="navigateUrl" Type="System.String" />
        <Parameter Name="target" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Текст, отображаемый для узла в элементе управления <see cref="T:System.Web.UI.WebControls.TreeView" />.</param>
        <param name="value">Дополнительные данные об узле, как данные, используемые для обработки событий обратной передачи.</param>
        <param name="imageUrl">URL-адрес изображения для отображения рядом с текстом узла.</param>
        <param name="navigateUrl">URL-адрес для перемещения при щелчке по узлу.</param>
        <param name="target">Целевое окно или фрейм, для отображения содержимого веб-страницы, на которую осуществляется переход при щелчке по узлу.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.TreeNode" />, используя указанные текст, значение, URL-адрес изображения, URL-адрес навигации и цель.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор используется для инициализации нового экземпляра <xref:System.Web.UI.WebControls.TreeNode> класса с помощью URL-адреса текста, значение, изображения и навигации и отображения цели, указанной по `text`, `value`, `imageUrl`, `navigateUrl`, и `target` параметры, соответственно.  
  
 Следующей таблице представлены исходные значения свойств для экземпляра класса <xref:System.Web.UI.WebControls.TreeNode>.  
  
|Свойство.|Исходное значение|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.TreeNode.Text%2A>|Значение параметра `text`.|  
|<xref:System.Web.UI.WebControls.TreeNode.Value%2A>|Значение параметра `value`.|  
|<xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>|Значение параметра `imageUrl`.|  
|<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>|Значение параметра `navigateUrl`.|  
|<xref:System.Web.UI.WebControls.TreeNode.Target%2A>|Значение параметра `target`.|  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать этот конструктор для динамического добавления узла к <xref:System.Web.UI.WebControls.TreeView> элемента управления.  
  
 [!code-aspx-csharp[TreeNodeCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCtor/CS/treenodectorcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCtor/VB/treenodectorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Target" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName="Checked">
      <MemberSignature Language="C#" Value="public bool Checked { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Checked" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Checked" />
      <MemberSignature Language="VB.NET" Value="Public Property Checked As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Checked { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Checked : bool with get, set" Usage="System.Web.UI.WebControls.TreeNode.Checked" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, выбран ли флаг узла.</summary>
        <value>Значение <see langword="true" />, если флаг узла установлен; в противном случае — <see langword="false" />. Значение по умолчанию: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда узел отображает типа "флажок" <xref:System.Web.UI.WebControls.TreeNode.Checked%2A> свойство обычно используется для указания того, установлен ли флажок. Если установлен флажок, связанный с узлом, узел автоматически добавляется <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> коллекцию <xref:System.Web.UI.WebControls.TreeView> элемента управления. <xref:System.Web.UI.WebControls.TreeNode.Checked%2A> Свойство также может использоваться для определения того, установлен ли флажок.  
  
> [!NOTE]
>  Чаще всего, чтобы определить, какие узлы в <xref:System.Web.UI.WebControls.TreeView> управления иметь установленными флажками проходя по <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> коллекции.  
  
 Значение этого свойства хранится в состоянии представления.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.TreeNode.Checked%2A> свойство, указывающее, установлен ли флажок для узла. Он инициализирует флажки узлов с глубиной одного выбранное состояние. Для правильной работы этого примера необходимо скопировать приведенный ниже образец данных XML в файл с именем Newsgroup.xml.  
  
 [!code-aspx-csharp[TreeNodeChecked#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeChecked/CS/treenodecheckedcs.aspx#1)]
 [!code-aspx-vb[TreeNodeChecked#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeChecked/VB/treenodecheckedvb.aspx#1)]  
  
 Ниже приведен образец XML-данных для предыдущего примера.  
  
```  
<category name="news.microsoft.com">  
    <group name="microsoft.public.dotnet.framework.aspnet"/>  
    <group name="microsoft.public.dotnet.framework.aspnet.mobile"/>  
    <group name="microsoft.public.dotnet.framework.aspnet.webservices"/>  
</category>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
      </Docs>
    </Member>
    <Member MemberName="ChildNodes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeCollection ChildNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeCollection ChildNodes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChildNodes As TreeNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeCollection ^ ChildNodes { System::Web::UI::WebControls::TreeNodeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ChildNodes : System.Web.UI.WebControls.TreeNodeCollection" Usage="System.Web.UI.WebControls.TreeNode.ChildNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />, содержащую дочерние узлы первого уровня для данного узла.</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" />, содержащая дочерние узлы первого уровня для данного узла.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> свойства <xref:System.Web.UI.WebControls.TreeNodeCollection> коллекцию, содержащую первого уровня дочерних узлов текущего узла. Эта коллекция обычно используется для перебора всех первого уровня дочерних узлов, или для доступа к определенной первого уровня дочерний узел текущего узла.  
  
 <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> Свойство также может использоваться для программного управления первого уровня дочерних узлов текущего узла. Добавить, вставки, удаления и получения <xref:System.Web.UI.WebControls.TreeNode> объекты из коллекции. Любые изменения коллекции будут автоматически отражены в <xref:System.Web.UI.WebControls.TreeView> управления в следующий раз при обновлении страницы.  
  
 Чтобы получить доступ к дочерним узлам далее вниз по дереву, используйте <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> свойство следующего уровня дочернего узла, чтобы перейти вниз по уровням узла.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> свойство для прохода по дереву.  
  
 [!code-aspx-csharp[TreeNodeCollectionCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionCount/CS/treenodecollectioncountcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionCount/VB/treenodecollectioncountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeCollection" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Parent" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected virtual object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.Clone" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="treeNode.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает новый экземпляр класса <see cref="T:System.Web.UI.WebControls.TreeNode" /> со свойствами для текущего экземпляра <see cref="T:System.Web.UI.WebControls.TreeNode" />.</summary>
        <returns>Новый экземпляр <see cref="T:System.Web.UI.WebControls.TreeNode" /> со свойствами для текущего экземпляра <see cref="T:System.Web.UI.WebControls.TreeNode" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это вспомогательный метод, который поддерживает <xref:System.ICloneable> интерфейс реализован <xref:System.Web.UI.WebControls.TreeNode>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ICloneable" />
      </Docs>
    </Member>
    <Member MemberName="Collapse">
      <MemberSignature Language="C#" Value="public void Collapse ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Collapse() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.Collapse" />
      <MemberSignature Language="VB.NET" Value="Public Sub Collapse ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Collapse();" />
      <MemberSignature Language="F#" Value="member this.Collapse : unit -&gt; unit" Usage="treeNode.Collapse " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Сворачивает текущий узел дерева.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.TreeNode.Collapse%2A> метод удобно свернуть текущего узла.  
  
> [!NOTE]
>  В качестве альтернативы можно также задать <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> свойства `false`.  
  
 Чтобы свернуть текущий узел и все его дочерние узлы, рассмотрите возможность использования <xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A> метод.  
  
 <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A> будет свернуть все узлы в дереве целиком.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.TreeNode.Collapse%2A> метод, чтобы программно свернуть узел в <xref:System.Web.UI.WebControls.TreeView> элемента управления. Для правильной работы этого примера необходимо скопировать приведенный ниже образец данных XML в файл с именем Book.xml.  
  
 [!code-aspx-csharp[TreeNodeExpand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeExpand/CS/treenodeexpandcs.aspx#1)]
 [!code-aspx-vb[TreeNodeExpand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeExpand/VB/treenodeexpandvb.aspx#1)]  
  
 Ниже приведен образец XML-данных для предыдущего примера.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Expanded" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.CollapseAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Expand" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="CollapseAll">
      <MemberSignature Language="C#" Value="public void CollapseAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CollapseAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.CollapseAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub CollapseAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CollapseAll();" />
      <MemberSignature Language="F#" Value="member this.CollapseAll : unit -&gt; unit" Usage="treeNode.CollapseAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Сворачивает текущий узел и все его дочерние узлы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A> метод удобно свернуть текущий узел и все его дочерние узлы.  
  
> [!NOTE]
>  В качестве альтернативы можно также задать <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> свойства текущего узла и всех его дочерних узлов в `false`.  
  
 Чтобы свернуть только текущего узла, рассмотрите возможность использования <xref:System.Web.UI.WebControls.TreeNode.Collapse%2A> метод.  
  
 <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A> будет свернуть все узлы в дереве целиком.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A> метод программно сворачивание узла и всех его дочерних узлов в <xref:System.Web.UI.WebControls.TreeView> элемента управления. Для правильной работы этого примера необходимо скопировать приведенный ниже образец данных XML в файл с именем Book.xml.  
  
 [!code-aspx-csharp[TreeNodeExpandAll#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeExpandAll/CS/treenodeexpandallcs.aspx#1)]
 [!code-aspx-vb[TreeNodeExpandAll#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeExpandAll/VB/treenodeexpandallvb.aspx#1)]  
  
 Ниже приведен образец XML-данных для предыдущего примера.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Expanded" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Collapse" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Expand" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="DataBound">
      <MemberSignature Language="C#" Value="public bool DataBound { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DataBound" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.DataBound" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBound As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool DataBound { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.DataBound : bool" Usage="System.Web.UI.WebControls.TreeNode.DataBound" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, определяющее, был ли данный узел создан при помощи привязки данных.</summary>
        <value>
          <see langword="true" />, если узел был создан при помощи привязки данных; в противном случае — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.DataBound%2A> Свойство используется для программного определения, был ли этот узел создан через привязку данных. Поскольку динамическое и статическое содержимое не может содержаться в том же узле, это свойство обычно используется при заполнении <xref:System.Web.UI.WebControls.TreeView> элемента управления динамически, чтобы определить, содержит ли узел статическое содержимое.  
  
 Значение этого свойства хранится в состоянии представления.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="DataItem">
      <MemberSignature Language="C#" Value="public object DataItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.DataItem" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItem : obj" Usage="System.Web.UI.WebControls.TreeNode.DataItem" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает элемент данных, привязанных к элементу управления.</summary>
        <value>
          <see cref="T:System.Object" /> представляет элемент данных, которое связанно с данным элементом управления. Значение по умолчанию — <see langword="null" />, определяющее, что узел не привязан ни к каким элементам данных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда <xref:System.Web.UI.WebControls.TreeView> элемент управления привязан к источнику данных, таких как <xref:System.Web.UI.WebControls.XmlDataSource> объекта, это свойство имеет значение к элементу данных, к которому привязан этот конкретный узел. Это свойство обычно используется для доступа к значениям элемента данных.  
  
> [!NOTE]
>  Это свойство доступно только после привязки данных.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.XmlDataSource" />
      </Docs>
    </Member>
    <Member MemberName="DataPath">
      <MemberSignature Language="C#" Value="public string DataPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.DataPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataPath : string" Usage="System.Web.UI.WebControls.TreeNode.DataPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает путь к данным, привязанных к узлу.</summary>
        <value>Путь к данным, привязанных к узлу. Данное значение происходит из иерархического источника данных, к которому привязан элемент управления <see cref="T:System.Web.UI.WebControls.TreeView" />. Значением по умолчанию является пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.DataPath%2A> Значение свойства обычно используется при вызове <xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A?displayProperty=nameWithType> метод для предоставления пути к данным связан с текущего узла. Этот метод возвращает <xref:System.Web.UI.HierarchicalDataSourceView?displayProperty=nameWithType> объект, содержащий данные по указанному пути.  
  
 Значение этого свойства хранится в состоянии представления.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="M:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView(System.String)" />
        <altmember cref="T:System.Web.UI.HierarchicalDataSourceControl" />
      </Docs>
    </Member>
    <Member MemberName="Depth">
      <MemberSignature Language="C#" Value="public int Depth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Depth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Depth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Depth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Depth { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Depth : int" Usage="System.Web.UI.WebControls.TreeNode.Depth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает глубину узла.</summary>
        <value>Глубина узла.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.TreeNode.Depth%2A> свойство, чтобы определить глубину узла. Глубина представляет количество уровней иерархии между узлом и корневым узлом. Например корневой узел имеет нулевую глубину вложенности. Является потомком корневого узла имеет глубину 1, и т. д.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать <xref:System.Web.UI.WebControls.TreeNode.Depth%2A> свойства, чтобы определить глубину узла. Инициализацию всех узлов, имеющих глубину 1, выбранное состояние. Для правильной работы этого примера необходимо скопировать приведенный ниже образец данных XML в файл с именем Newsgroup.xml.  
  
 [!code-aspx-csharp[TreeNodeChecked#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeChecked/CS/treenodecheckedcs.aspx#1)]
 [!code-aspx-vb[TreeNodeChecked#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeChecked/VB/treenodecheckedvb.aspx#1)]  
  
 Ниже приведен образец XML-данных для предыдущего примера.  
  
```  
<category name="news.microsoft.com">  
    <group name="microsoft.public.dotnet.framework.aspnet"/>  
    <group name="microsoft.public.dotnet.framework.aspnet.mobile"/>  
    <group name="microsoft.public.dotnet.framework.aspnet.webservices"/>  
</category>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="Expand">
      <MemberSignature Language="C#" Value="public void Expand ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Expand() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.Expand" />
      <MemberSignature Language="VB.NET" Value="Public Sub Expand ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Expand();" />
      <MemberSignature Language="F#" Value="member this.Expand : unit -&gt; unit" Usage="treeNode.Expand " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Раскрывает текущий узел дерева.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.TreeNode.Expand%2A> метод для удобного развертывания текущего узла.  
  
> [!NOTE]
>  В качестве альтернативы можно также задать <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> свойства `true`.  
  
 Чтобы развернуть текущего узла и всех его дочерних узлов, рассмотрите возможность использования <xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A> метод.  
  
 <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A> будет развернуть все узлы в дереве целиком.  
  
 Значение этого свойства хранится в состоянии представления.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.TreeNode.Expand%2A> метод, чтобы программными средствами, разверните узел в <xref:System.Web.UI.WebControls.TreeView> элемента управления. Для правильной работы этого примера необходимо скопировать приведенный ниже образец данных XML в файл с именем Book.xml.  
  
 [!code-aspx-csharp[TreeNodeExpand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeExpand/CS/treenodeexpandcs.aspx#1)]
 [!code-aspx-vb[TreeNodeExpand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeExpand/VB/treenodeexpandvb.aspx#1)]  
  
 Ниже приведен образец XML-данных для предыдущего примера.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Expanded" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Collapse" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.CollapseAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
      </Docs>
    </Member>
    <Member MemberName="ExpandAll">
      <MemberSignature Language="C#" Value="public void ExpandAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExpandAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.ExpandAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExpandAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExpandAll();" />
      <MemberSignature Language="F#" Value="member this.ExpandAll : unit -&gt; unit" Usage="treeNode.ExpandAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Раскрывает текущий узел и все его дочерние узлы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A> метод для удобного развертывания текущего узла и всех его дочерних узлов.  
  
> [!NOTE]
>  В качестве альтернативы можно также задать <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> свойства текущего узла и всех его дочерних узлов в `true`.  
  
 Чтобы развернуть только текущего узла, рассмотрите возможность использования <xref:System.Web.UI.WebControls.TreeNode.Expand%2A> метод.  
  
 <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A> будет развернуть все узлы в дереве целиком.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A> метод программно разверните узел и все его дочерние узлы в <xref:System.Web.UI.WebControls.TreeView> элемента управления. Для правильной работы этого примера необходимо скопировать приведенный ниже образец данных XML в файл с именем Book.xml.  
  
 [!code-aspx-csharp[TreeNodeExpandAll#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeExpandAll/CS/treenodeexpandallcs.aspx#1)]
 [!code-aspx-vb[TreeNodeExpandAll#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeExpandAll/VB/treenodeexpandallvb.aspx#1)]  
  
 Ниже приведен образец XML-данных для предыдущего примера.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Expanded" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Collapse" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.CollapseAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Expand" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
      </Docs>
    </Member>
    <Member MemberName="Expanded">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; Expanded { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; Expanded" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Expanded" />
      <MemberSignature Language="VB.NET" Value="Public Property Expanded As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; Expanded { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.Expanded : Nullable&lt;bool&gt; with get, set" Usage="System.Web.UI.WebControls.TreeNode.Expanded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Nullable`1&lt;System.Boolean&gt;), "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, является узел раскрытым.</summary>
        <value>
          <see langword="true" />, если узел раскрыт; в противном случае — <see langword="false" /> или <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> свойство для определения того, развернут ли узел.  
  
 Можно развернуть и свернуть узел путем вызова <xref:System.Web.UI.WebControls.TreeNode.Expand%2A> и <xref:System.Web.UI.WebControls.TreeNode.Collapse%2A> методов, соответственно. Можно также развернуть и свернуть узел и все его дочерние узлы, вызвав <xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A> и <xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A> методов, соответственно.  
  
 Поскольку <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> свойство является свойством тремя состояниями, в следующем фрагменте кода C# вызывает ошибку компиляции:  
  
```  
protected void TreeView1_SelectedNodeChanged(object sender, EventArgs e)  
{  
if (TreeView1.Nodes[0].Expanded)  
{  
// some work here   
}  
}  
```  
  
 Хотя VB.Net неявно приводит `Boolean` значение `NullableBoolean`, C# не поддерживает. Таким образом рекомендуется явно не проверять состояние свойства. Например, в следующих примерах кода в Visual Basic и C# явно проверить значение <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> свойства.  
  
 В следующем примере кода Visual Basic явным образом проверяется значение <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> свойства. В этом примере проверяется, если <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> свойству `True`; поэтому `Nothing` и `False` проваливания `If` инструкции.  
  
```  
If TreeView1.Nodes(0).Expanded = True Then 'some work hereEnd IF  
```  
  
 Данный пример кода C# явным образом проверяется значение <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> свойства. В этом примере проверяется, если <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> свойству `True`; поэтому `Null` и `False` проваливания `If` инструкции.  
  
```  
if( TreeView1.Nodes[0].Expanded == true ) { //some work here}  
```  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> свойства программными средствами, разверните узел. Он инициализирует все узлы с глубиной в развернутом состоянии. Обратите внимание, что при разворачивании корневой узел, его дочерних узлов уже открыты. Для правильной работы этого примера необходимо скопировать приведенный ниже образец данных XML в файл с именем Book.xml.  
  
 [!code-aspx-csharp[TreeNodeExpanded#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeExpanded/CS/treenodeexpandedcs.aspx#1)]
 [!code-aspx-vb[TreeNodeExpanded#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeExpanded/VB/treenodeexpandedvb.aspx#1)]  
  
 Ниже приведен образец XML-данных для предыдущего примера.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandDepth" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Collapse" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.CollapseAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Expand" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="ImageToolTip">
      <MemberSignature Language="C#" Value="public string ImageToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.ImageToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageToolTip : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.ImageToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает текст контекстных подсказок для изображения, отображаемого рядом с текстом узла.</summary>
        <value>Текст контекстных подсказок для изображения, отображаемого рядом с текстом узла. По умолчанию используется пустая строка (""), указывающая, что это свойство не задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда изображение отображается рядом с узлом (при <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> свойству), используйте <xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A> свойство, чтобы указать подсказка, отображаемая при наведении указателя мыши на изображение. Текст, который указывается предоставляет вспомогательных устройств с описанием изображения, которое может использоваться для предоставления более доступным.  
  
 Значение этого свойства хранится в состоянии представления.  
  
 Значение этого свойства, если задано, можно автоматически сохраняются в файл ресурсов с помощью средств конструктора. Дополнительные сведения см. в разделе <xref:System.ComponentModel.LocalizableAttribute> и [глобализации и локализации](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.TreeNode.ImageToolTip%2A> свойство, чтобы указать текст подсказки для изображения, отображаемого рядом с узлом. Для правильной работы этого примера необходимо предоставить свои собственные образы.  
  
 [!code-aspx-csharp[TreeNodeImageToolTip#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeImageToolTip/CS/treenodeimagetooltipcs.aspx#1)]
 [!code-aspx-vb[TreeNodeImageToolTip#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeImageToolTip/VB/treenodeimagetooltipvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ToolTip" />
      </Docs>
    </Member>
    <Member MemberName="ImageUrl">
      <MemberSignature Language="C#" Value="public string ImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.ImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageUrl : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.ImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает URL-адрес изображения для отображения рядом с текстом узла.</summary>
        <value>URL-адрес настраиваемого изображения для отображения рядом с текстом узла. По умолчанию свойство содержит пустую строку (""), показывающую, что значение свойства не задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> для указания пользовательского изображения для текущего узла в <xref:System.Web.UI.WebControls.TreeView> элемента управления. Это изображение отображается рядом с узлом и может быть в любом графическом формате (.jpg, .gif, .bmp и т. д.), при условии, что браузер клиента поддерживает этот формат.  
  
 Значение этого свойства хранится в состоянии представления.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> для предоставления пользовательского изображения для узла. Для правильной работы этого примера необходимо скопировать приведенный ниже образец данных XML в файл с именем Book.xml.  
  
 [!code-aspx-csharp[TreeViewTreeNodeDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodeDataBound/CS/treeviewtreenodedataboundcs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodeDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodeDataBound/VB/treeviewtreenodedataboundvb.aspx#1)]  
  
 Ниже приведен образец XML-данных для предыдущего примера.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
      </Docs>
    </Member>
    <Member MemberName="IsTrackingViewState">
      <MemberSignature Language="C#" Value="protected bool IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsTrackingViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTrackingViewState : bool" Usage="System.Web.UI.WebControls.TreeNode.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, отражающее сохранение изменений в состояние представления узла.</summary>
        <value>Значение <see langword="true" />, если элемент управления сохраняет состояние представления; в противном случае — значение <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected virtual void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadViewState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="abstract member LoadViewState : obj -&gt; unit&#xA;override this.LoadViewState : obj -&gt; unit" Usage="treeNode.LoadViewState state" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Объект <see cref="T:System.Object" />, который представляет состояние узла.</param>
        <summary>Загружает предварительно сохраненное состояние представления узла.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.LoadViewState%2A> Вспомогательный метод используется для загрузки ранее сохраненное состояние представления узла  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IStateManager.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="NavigateUrl">
      <MemberSignature Language="C#" Value="public string NavigateUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NavigateUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property NavigateUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NavigateUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NavigateUrl : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.NavigateUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает URL-адрес для перемещения при щелчке по узлу.</summary>
        <value>URL-адрес для перемещения при щелчке по узлу. По умолчанию свойство содержит пустую строку (""), показывающую, что значение свойства не задано.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Текст узла может быть в одном из двух режимов: режим выбора и режим навигации. По умолчанию узел находится в режиме выбора. Чтобы перевести узел в режим навигации, узел набора <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> свойство и значение, отличное от пустой строки.  
  
 Если узел находится в режиме навигации, все события выбора отключаются для этого узла. Щелкнув по узлу в режиме навигации ссылки пользователя на указанный URL-адрес. При необходимости можно задать <xref:System.Web.UI.WebControls.TreeNode.Target%2A> свойство, чтобы указать окно или фрейм, для отображения связанного содержимого.  
  
 Значение этого свойства хранится в состоянии представления.  
  
   
  
## Examples  
 В следующем примере кода показано, как задать фреймы для следующего примера кода.  
  
 [!code-aspx-csharp[TreeViewFrameSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameSet/CS/framecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameSet/VB/framevb.aspx#1)]  
  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> свойство, чтобы указать URL-адрес для перехода при щелчке по узлу. В этом примере используется с набором рамок предыдущего примера для отображения содержания.  
  
 [!code-aspx-csharp[TreeViewFrameExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameExample/CS/treeviewframecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameExample/VB/treeviewframevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Target" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNode Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNode Parent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNode ^ Parent { System::Web::UI::WebControls::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Web.UI.WebControls.TreeNode" Usage="System.Web.UI.WebControls.TreeNode.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает родительский узел текущего узла.</summary>
        <value>Объект <see cref="T:System.Web.UI.WebControls.TreeNode" />, который предоставляет родительский узел для текущего узла.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.Parent%2A> Возвращает <xref:System.Web.UI.WebControls.TreeNode> , представляющий родительский узел текущего узла. Обычно он используется для определения родительского узла или для доступа к свойствам родительского узла.  
  
> [!NOTE]
>  Корневой узел не имеет родительского узла.  
  
 Чтобы получить дочерние узлы текущего узла, используйте <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.TreeNode.Parent%2A> свойство для доступа к <xref:System.Web.UI.WebControls.TreeNode.Text%2A> свойство родительский узел текущего узла.  
  
 [!code-aspx-csharp[TreeNodeParent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeParent/CS/treenodeparentcs.aspx#1)]
 [!code-aspx-vb[TreeNodeParent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeParent/VB/treenodeparentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName="PopulateOnDemand">
      <MemberSignature Language="C#" Value="public bool PopulateOnDemand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PopulateOnDemand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
      <MemberSignature Language="VB.NET" Value="Public Property PopulateOnDemand As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PopulateOnDemand { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PopulateOnDemand : bool with get, set" Usage="System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, заполнен ли узел динамически.</summary>
        <value>
          <see langword="true" /> для динамического заполнения узла; иначе — <see langword="false" />. Значение по умолчанию: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В некоторых случаях не имеет смысла для статически заранее определить структуру дерева из-за размера данных или пользовательского содержимого, зависит от входных данных пользователя. По этой причине <xref:System.Web.UI.WebControls.TreeView> элемент управления поддерживает динамическое заполнение узлов. Когда узел <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> свойству `true`, этот узел заполняется во время выполнения с помощью события обратной передачи, если узел развернут. Для динамического заполнения узла, необходимо определить метод обработки событий, который заполняет узел для <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate> события.  
  
 Поддерживаемые браузеры можно также воспользоваться преимуществами заполнение узла на стороне клиента. Если включено, это позволяет <xref:System.Web.UI.WebControls.TreeView> управления динамически заполнить узел на стороне клиента при развертывании этого узла, что избавляет от необходимости отправки на сервер. Дополнительные сведения о заполнении клиентского узла см. в разделе <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>.  
  
 Значение этого свойства хранится в состоянии представления.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> свойство, указывающее, динамически заполнить узла.  
  
 [!code-aspx-csharp[TreeViewPopulateNodesFromClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-aspx-vb[TreeViewPopulateNodesFromClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
      </Docs>
    </Member>
    <Member MemberName="RenderPostText">
      <MemberSignature Language="C#" Value="protected virtual void RenderPostText (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RenderPostText(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.RenderPostText(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RenderPostText (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RenderPostText(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderPostText : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderPostText : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="treeNode.RenderPostText writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Объект <see cref="T:System.Web.UI.HtmlTextWriter" />, представляющий поток вывода для записи содержимого в веб-страницу.</param>
        <summary>Позволяет разработчикам узла создавать дополнительные способы отрисовки узла.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод может быть переопределен разработчиками элементов управления для добавления дополнительных методов отрисовки после отрисовки узла.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.RenderPreText(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderPreText">
      <MemberSignature Language="C#" Value="protected virtual void RenderPreText (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RenderPreText(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.RenderPreText(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RenderPreText (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RenderPreText(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderPreText : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderPreText : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="treeNode.RenderPreText writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Объект <see cref="T:System.Web.UI.HtmlTextWriter" />, представляющий поток вывода для записи содержимого в веб-страницу.</param>
        <summary>Позволяет разработчикам узла создавать дополнительные способы отрисовки узла.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод может быть переопределен разработчиками элементов управления для добавления дополнительных методов отрисовки до отрисовки узла.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.RenderPreText(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected virtual object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="abstract member SaveViewState : unit -&gt; obj&#xA;override this.SaveViewState : unit -&gt; obj" Usage="treeNode.SaveViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Сохраняет текущее состояние отображения узла.</summary>
        <returns>Объект <see cref="T:System.Object" />, содержащий сохраненное состояние узла.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.SaveViewState%2A> Метод — это вспомогательный метод, который вызывается узлом для сохранения своего состояния.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IStateManager.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public void Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.Select" />
      <MemberSignature Language="VB.NET" Value="Public Sub Select ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Select();" />
      <MemberSignature Language="F#" Value="member this.Select : unit -&gt; unit" Usage="treeNode.Select " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Выбирает текущий узел в элементе управления <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.TreeNode.Select%2A> метод для выбора текущего узла в <xref:System.Web.UI.WebControls.TreeView> элемента управления.  
  
 **Примечание** в качестве альтернативы можно выбрать текущего узла, задавая <xref:System.Web.UI.WebControls.TreeNode.Selected%2A> свойства `true`.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.TreeNode.Select%2A> метод, чтобы выбрать узел в <xref:System.Web.UI.WebControls.TreeView> элемента управления.  
  
 [!code-aspx-csharp[TreeNodeSelected2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeSelected2/CS/treenodeselected2cs.aspx#1)]
 [!code-aspx-vb[TreeNodeSelected2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeSelected2/VB/treenodeselected2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Selected" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
      </Docs>
    </Member>
    <Member MemberName="SelectAction">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeSelectAction SelectAction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TreeNodeSelectAction SelectAction" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectAction As TreeNodeSelectAction" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeSelectAction SelectAction { System::Web::UI::WebControls::TreeNodeSelectAction get(); void set(System::Web::UI::WebControls::TreeNodeSelectAction value); };" />
      <MemberSignature Language="F#" Value="member this.SelectAction : System.Web.UI.WebControls.TreeNodeSelectAction with get, set" Usage="System.Web.UI.WebControls.TreeNode.SelectAction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeSelectAction</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает события для генерации в случае выбора узла.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Web.UI.WebControls.TreeNodeSelectAction" />. Значение по умолчанию: <see langword="TreeNodeSelectAction.Select" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Текст узла в <xref:System.Web.UI.WebControls.TreeView> элемент управления может быть в одном из двух режимов: режим выбора и режим навигации. По умолчанию узел находится в режиме выбора. Чтобы перевести узел в режим навигации, узел набора <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> свойство и значение, отличное от пустой строки (»»). Чтобы перевести узел в режим выбора, узел набора <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> свойства равным пустой строке.  
  
> [!NOTE]
>  Если узел находится в режиме навигации, события выбора отключаются для этого узла. При щелчке узла будет направлять пользователя на указанный URL-адрес, а не передача страницы обратно на сервер и при возникновении события.  
  
 Если узел находится в режиме выбора, используйте <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> свойство, чтобы указать, какие события или событий, возникающие при выборе узла. В следующей таблице перечислены доступные параметры.  
  
|Выбор действия|Описание:|  
|----------------------|-----------------|  
|`TreeNodeSelectAction.Expand`|Переключает состояние узла между развернутым и свернутым. Вызывает <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> событий или <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> событий соответствующим образом.|  
|`TreeNodeSelectAction.None`|Не генерирует событий при выборе узла.|  
|`TreeNodeSelectAction.Select`|Вызывает событие <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> при выборе узла.|  
|`TreeNodeSelectAction.SelectExpand`|Вызывает оба <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> и <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> событий при выборе узла. Узлы только раскрываются и никогда не сворачиваются.|  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> Свойство не отображается в узле с его <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> свойство `TreeNodeSelectAction.None`.  
  
 Значение этого свойства хранится в состоянии представления.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> свойство, чтобы указать событие, возникающее при щелчке узла.  
  
 [!code-aspx-csharp[TreeViewPopulateNodesFromClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-aspx-vb[TreeViewPopulateNodesFromClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeSelectAction" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public bool Selected { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Selected" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Property Selected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Selected { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Selected : bool with get, set" Usage="System.Web.UI.WebControls.TreeNode.Selected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, выделен ли узел.</summary>
        <value>
          <see langword="true" />, если данный узел выделен; в противном случае <see langword="false" />. Значение по умолчанию: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.TreeNode.Selected%2A> свойство позволяет определить, выбран ли узел.  
  
> [!NOTE]
>  Несмотря на то, что свойство можно использовать для определения, выбран ли узел, он обычно используется <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> свойство.  
  
 Можно выбрать только один узел в одновременно <xref:System.Web.UI.WebControls.TreeView> управления при использовании этого свойства.  
  
> [!NOTE]
>  В качестве альтернативы можно выбрать узел с помощью <xref:System.Web.UI.WebControls.TreeNode.Select%2A> метод.  
  
 Значение этого свойства хранится в состоянии представления.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.TreeNode.Selected%2A> свойство, чтобы выбрать узел в <xref:System.Web.UI.WebControls.TreeView> элемента управления.  
  
 [!code-aspx-csharp[TreeNodeSelected2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeSelected2/CS/treenodeselected2cs.aspx#1)]
 [!code-aspx-vb[TreeNodeSelected2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeSelected2/VB/treenodeselected2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Select" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
      </Docs>
    </Member>
    <Member MemberName="ShowCheckBox">
      <MemberSignature Language="C#" Value="public Nullable&lt;bool&gt; ShowCheckBox { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Nullable`1&lt;bool&gt; ShowCheckBox" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.ShowCheckBox" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowCheckBox As Nullable(Of Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Nullable&lt;bool&gt; ShowCheckBox { Nullable&lt;bool&gt; get(); void set(Nullable&lt;bool&gt; value); };" />
      <MemberSignature Language="F#" Value="member this.ShowCheckBox : Nullable&lt;bool&gt; with get, set" Usage="System.Web.UI.WebControls.TreeNode.ShowCheckBox" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Nullable`1&lt;System.Boolean&gt;), "")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Boolean&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, отображается ли рядом с узлом флаг.</summary>
        <value>Значение <see langword="true" />, если флаг отображается; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView> Позволяет отображать флажок рядом с изображением узла. Используйте <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A> свойство для отображения или скрытия флажок для текущего узла.  
  
 Несмотря на то что <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A> свойство может использоваться для отображения флажков, это чаще используется <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=nameWithType> свойства <xref:System.Web.UI.WebControls.TreeView> элемента управления. <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=nameWithType> Свойство, однако на каждом типе узла, указанного в свойстве; таким образом, <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A?displayProperty=nameWithType> свойство часто используется для переопределения этого параметра для отдельного узла.  
  
 Поскольку <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=nameWithType> свойство является свойством тремя состояниями, в следующем фрагменте кода C# вызывает ошибку компиляции:  
  
```  
protected void TreeView1_SelectedNodeChanged(object sender, EventArgs e)  
{  
if (TreeView1.Nodes[0].Expanded)  
{  
// some work here   
}  
}  
```  
  
 Хотя VB.Net неявно приводит `Boolean` значение `NullableBoolean`, C# не поддерживает. Таким образом рекомендуется явно не проверять состояние свойства. Например, в следующих примерах кода в Visual Basic и C# явно проверить значение <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> свойства.  
  
 В следующем примере кода Visual Basic явным образом проверяется значение <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> свойства. В этом примере проверяется, если <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> свойству `True`; поэтому `Nothing` и `False` проваливания `If` инструкции.  
  
```  
If TreeView1.Nodes(0).Expanded = True Then 'some work hereEnd IF  
```  
  
 Данный пример кода C# явным образом проверяется значение <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> свойства. В этом примере проверяется, если <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> свойству `True`; поэтому `Null` и `False` проваливания `If` инструкции.  
  
```  
if( TreeView1.Nodes[0].Expanded == true ) { //some work here}  
```  
  
 Значение этого свойства хранится в состоянии представления.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A> свойство программно отображать и скрывать флажок для узла в <xref:System.Web.UI.WebControls.TreeView> элемента управления. Для правильной работы этого примера необходимо скопировать приведенный ниже образец данных XML в файл с именем Book.xml.  
  
 [!code-aspx-csharp[TreeNodeShowCheckBox#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeShowCheckBox/CS/treenodeshowcheckboxcs.aspx#1)]
 [!code-aspx-vb[TreeNodeShowCheckBox#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeShowCheckBox/VB/treenodeshowcheckboxvb.aspx#1)]  
  
 Ниже приведен образец XML-данных для предыдущего примера.  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает копию объекта <see cref="T:System.Web.UI.WebControls.TreeNode" />.</summary>
        <returns>Объект <see cref="T:System.Object" />, представляющий копию объекта <see cref="T:System.Web.UI.WebControls.TreeNode" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.System%23ICloneable%23Clone%2A> Используется метод <xref:System.Web.UI.WebControls.TreeNode> класса для создания копии самого себя.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.ICloneable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.IStateManager.IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.TreeNode.System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Описание этого члена см. в разделе <see cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />.</summary>
        <value>Значение, отражающее сохранение изменений в состояние представления узла.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться только тогда, когда <xref:System.Web.UI.WebControls.TreeNode> экземпляр приводится к <xref:System.Web.UI.IStateManager> интерфейса.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (state As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ state) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">Объект <see cref="T:System.Object" />, содержащий сохраненных значениях сведения о состоянии представления.</param>
        <summary>Загружает предварительно сохраненное состояние представления узла.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Сохраняет изменения состояния просмотра в <see cref="T:System.Object" />.</summary>
        <returns>Объект <see cref="T:System.Object" />, содержащий данные об изменении состояния представления.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Выдает объекту <see cref="T:System.Web.UI.WebControls.TreeNode" /> инструкции отслеживать изменения в его состоянии представления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 После вызова этого метода в серверном элементе управления <xref:System.Web.UI.Control.IsTrackingViewState%2A> возвращает `true`.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="T:System.Web.UI.StateItem" />
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает целевое окно или фрейм, для отображения содержимого веб-страницы, связанной с этим узлом.</summary>
        <value>Целевое окно или фрейм, для отображения связанного содержимого веб-страницы. Значения должны начинаться с буквы от "A" до "Z" (регистр учитывается), за исключением некоторых специальных значений, начинающиеся со знака подчеркивания, как показано в следующей таблице.  
  
 <list type="table"><listheader><term> Целевое значение </term><description> описание </description></listheader><item><term><see langword="_blank" /></term><description> отображает содержимое в новом окне без кадров.  </description></item><item><term><see langword="_parent" /></term><description> Отображает содержимое в родительском кадре.  </description></item><item><term><see langword="_search" /></term><description> Отображает содержимое в области поиска.  </description></item><item><term><see langword="_self" /></term><description> Отображает содержимое в фрейм, имеющий фокус.  </description></item><item><term><see langword="_top" /></term><description> Отображает содержимое в окне без кадров.  </description></item></list><block subset="none" type="note"><para> Обратитесь к документации браузера, чтобы определить, является ли <see langword="_search" /> значение поддерживается. Например, Microsoft Internet Explorer 5.0 и более поздних поддерживают <see langword="_search" /> целевое значение.  </para></block>  Значение по умолчанию — пустая строка ("»), обновляющая окно или фрейм, имеющий фокус.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.TreeNode.Target%2A> свойство, чтобы указать окно или фрейм, для отображения веб-содержимого, связанное с узлом при выборе этого узла.  
  
> [!NOTE]
>  Это свойство переопределяет параметр <xref:System.Web.UI.WebControls.TreeView.Target%2A> свойства <xref:System.Web.UI.WebControls.TreeView> элемента управления.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeNode.Target%2A> Свойство готовится к просмотру как `target` атрибута. `target` Атрибут `anchor` элементы не разрешена в определении типа документа XHTML 1.1. Не устанавливайте <xref:System.Web.UI.WebControls.TreeNode.Target%2A> свойство если выводимые данные для <xref:System.Web.UI.WebControls.TreeNode> объект должен быть 1.1 с XHTML. Дополнительные сведения см. в разделе [стандартам XHTML в Visual Studio и ASP.NET](http://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97).  
>   
>  При создании доступных веб-страниц, настоятельно рекомендуется избегать использования <xref:System.Web.UI.WebControls.TreeNode.Target%2A> свойство в другом окне. Дополнительные сведения см. в разделе [NIB: специальные возможности ASP.NET](http://msdn.microsoft.com/library/9b5f3e05-e88d-4248-a5f4-9e64850fa0ae).  
  
 Значение этого свойства хранится в состоянии представления.  
  
   
  
## Examples  
 В следующем примере кода показано, как задать фреймы для следующего примера.  
  
 [!code-aspx-csharp[TreeViewFrameSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameSet/CS/framecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameSet/VB/framevb.aspx#1)]  
  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.TreeNode.Target%2A> свойство, чтобы указать кадр, в котором для отображения связанного содержимого. В этом примере используется с набором рамок предыдущего примера для отображения содержания.  
  
 [!code-aspx-csharp[TreeViewFrameExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameExample/CS/treeviewframecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameExample/VB/treeviewframevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.Target" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.NavigateUrl" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает текст, отображаемый для узла в элементе управления <see cref="T:System.Web.UI.WebControls.TreeView" />.</summary>
        <value>Текст, отображаемый для узла в элементе управления <see cref="T:System.Web.UI.WebControls.TreeView" />. Значение по умолчанию — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.TreeNode.Text%2A> свойство определяет текст, отображаемый для узла в <xref:System.Web.UI.WebControls.TreeView> элемента управления.  
  
> [!NOTE]
>  Если <xref:System.Web.UI.WebControls.TreeNode.Text%2A> свойство содержит `null`, `get` метода доступа возвращает значение <xref:System.Web.UI.WebControls.TreeNode.Value%2A> свойства. Если <xref:System.Web.UI.WebControls.TreeNode.Value%2A> , в свою очередь, содержит `null`, <xref:System.String.Empty> возвращается.  
  
 Значение этого свойства хранится в состоянии представления.  
  
 Значение этого свойства, если задано, можно автоматически сохраняются в файл ресурсов с помощью средств конструктора. Дополнительные сведения см. в разделе <xref:System.ComponentModel.LocalizableAttribute> и [глобализации и локализации](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.TreeNode.Text%2A> свойство, чтобы указать текст для узла.  
  
 [!code-aspx-csharp[TreeViewFrameExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameExample/CS/treeviewframecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameExample/VB/treeviewframevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Value" />
      </Docs>
    </Member>
    <Member MemberName="ToggleExpandState">
      <MemberSignature Language="C#" Value="public void ToggleExpandState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ToggleExpandState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.ToggleExpandState" />
      <MemberSignature Language="VB.NET" Value="Public Sub ToggleExpandState ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ToggleExpandState();" />
      <MemberSignature Language="F#" Value="member this.ToggleExpandState : unit -&gt; unit" Usage="treeNode.ToggleExpandState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Выбирает между раскрытым и свернутым состояниями узла.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.TreeNode.ToggleExpandState%2A> метод чередовать развернутое и свернутое состояние для узла. Например, если узел свернута, вызов <xref:System.Web.UI.WebControls.TreeNode.ToggleExpandState%2A> метод разворачивает узел и наоборот.  
  
> [!NOTE]
>  В качестве альтернативы можно задать <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> свойство напрямую.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.TreeNode.ToggleExpandState%2A> метод чередовать развернутое и свернутое состояние для корневой узел <xref:System.Web.UI.WebControls.TreeView> элемента управления.  
  
 [!code-aspx-csharp[TreeNodeToggleExpandState#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeToggleExpandState/CS/treenodetoggleexpandstatecs.aspx#1)]
 [!code-aspx-vb[TreeNodeToggleExpandState#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeToggleExpandState/VB/treenodetoggleexpandstatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Expanded" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Collapse" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.CollapseAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.Expand" />
        <altmember cref="M:System.Web.UI.WebControls.TreeNode.ExpandAll" />
      </Docs>
    </Member>
    <Member MemberName="ToolTip">
      <MemberSignature Language="C#" Value="public string ToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.ToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTip : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.ToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает текст контекстной подсказки для этого узла.</summary>
        <value>Текст контекстной подсказки для этого узла. Значение по умолчанию — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A> свойство, чтобы указать текст подсказки для узла. Текст всплывающей подсказки отображается при наведении указателя мыши на узел.  
  
 Значение этого свойства, если задано, можно автоматически сохраняются в файл ресурсов с помощью средств конструктора. Дополнительные сведения см. в разделе <xref:System.ComponentModel.LocalizableAttribute> и [глобализации и локализации](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.TreeNode.ToolTip%2A> свойство, чтобы предоставить подсказки для узлов в <xref:System.Web.UI.WebControls.TreeView> элемента управления.  
  
 [!code-aspx-csharp[TreeNodeToolTip#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeToolTip/CS/treenodetooltipcs.aspx#1)]
 [!code-aspx-vb[TreeNodeToolTip#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeToolTip/VB/treenodetooltipvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ImageToolTip" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeNode.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void TrackViewState();" />
      <MemberSignature Language="F#" Value="member this.TrackViewState : unit -&gt; unit" Usage="treeNode.TrackViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Отмечает точку отсчета, с которой начинает отслеживание и сохранение изменений в состоянии отображения узла.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IStateManager.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public string Value { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Value" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.Value" />
      <MemberSignature Language="VB.NET" Value="Public Property Value As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Value { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Value : string with get, set" Usage="System.Web.UI.WebControls.TreeNode.Value" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает неотображаемое значение, используемое для хранения любых дополнительных данных об узле, как данных, используемые в событиях обратной передачи.</summary>
        <value>Дополнительная информация о неотображаемом узле. Значением по умолчанию является пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.Value%2A> Свойство используется в качестве дополнения <xref:System.Web.UI.WebControls.TreeNode.Text%2A> свойство путем сохранения любых дополнительных данных, связанный с узлом. Это значение не отображается в элементе управления и обычно используется для хранения данных для обработки событий обратной передачи.  
  
> [!NOTE]
>  Если <xref:System.Web.UI.WebControls.TreeNode.Value%2A> свойство содержит `null`, `get` метода доступа возвращает значение <xref:System.Web.UI.WebControls.TreeNode.Text%2A> свойства. Если <xref:System.Web.UI.WebControls.TreeNode.Text%2A> , в свою очередь, содержит `null`, <xref:System.String.Empty> возвращается.  
  
> [!NOTE]
>  Узлы одного уровня должны иметь уникальное значение для <xref:System.Web.UI.WebControls.TreeNode.Value%2A> свойство; <xref:System.Web.UI.WebControls.TreeView> управления не может различать между различными узлами на том же уровне, которые имеют одинаковое значение. В этом случае, если пользователь щелкает узел, который имеет повторяющееся значение узла, отображается первым в <xref:System.Web.UI.WebControls.TreeView> выбирается элемент управления.  
  
 Значение этого свойства хранится в состоянии представления.  
  
 Значение этого свойства, если задано, можно автоматически сохраняются в файл ресурсов с помощью средств конструктора. Дополнительные сведения см. в разделе <xref:System.ComponentModel.LocalizableAttribute> и [глобализации и локализации](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.TreeNode.Value%2A> свойства для хранения ключевого поля.  
  
 [!code-aspx-csharp[TreeViewPopulateNodesFromClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-aspx-vb[TreeViewPopulateNodesFromClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Text" />
      </Docs>
    </Member>
    <Member MemberName="ValuePath">
      <MemberSignature Language="C#" Value="public string ValuePath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValuePath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeNode.ValuePath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValuePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValuePath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ValuePath : string" Usage="System.Web.UI.WebControls.TreeNode.ValuePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает путь из корневого узла к текущему узлу.</summary>
        <value>Список с разделителями, содержащий значения узла, которые формируют путь от корневого узла к текущему.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> Свойство содержит список разделителями значения узла, которые формируют путь от корневого узла к текущему узлу. Используйте <xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A> свойство, чтобы указать знак-разделитель, используемый для разделения значений узлов. Это значение обычно используется при анализе списка для отдельных значений, или передать в качестве аргумента для <xref:System.Web.UI.WebControls.TreeView.FindNode%2A> метод <xref:System.Web.UI.WebControls.TreeView> класса.  
  
 В зависимости от значения, отображаемого в <xref:System.Web.UI.WebControls.TreeView> управления, разделителем может потребоваться изменить для предотвращения возможных конфликтов. Например если задать символ разделителя используется запятая, отображаемое значение не должен содержать запятые; в противном случае вы не сможете анализировать точно <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> свойство.  
  
> [!NOTE]
>  Узлы одного уровня должны иметь уникальное значение для <xref:System.Web.UI.WebControls.TreeNode.Value%2A> свойство; <xref:System.Web.UI.WebControls.TreeView> управления не может различать между различными узлами на том же уровне, которые имеют одинаковое значение. В этом случае, если пользователь щелкает узел, который имеет повторяющееся значение узла, отображается первым в <xref:System.Web.UI.WebControls.TreeView> выбирается элемент управления.  
  
   
  
## Examples  
 В следующем примере кода показано, как выполнить синтаксический анализ <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> свойство.  
  
 [!code-aspx-csharp[TreeViewPathSeparator2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPathSeparator2/CS/treeviewpathseparatorcs.aspx#1)]
 [!code-aspx-vb[TreeViewPathSeparator2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPathSeparator2/VB/treeviewpathseparatorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PathSeparator" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.FindNode(System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>