<Type Name="WizardStepBase" FullName="System.Web.UI.WebControls.WizardStepBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1bcac915f2864a6a11c114b034e34756fb1f5cd4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30599628" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class WizardStepBase : System.Web.UI.WebControls.View" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit WizardStepBase extends System.Web.UI.WebControls.View" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WizardStepBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class WizardStepBase&#xA;Inherits View" />
  <TypeSignature Language="C++ CLI" Value="public ref class WizardStepBase abstract : System::Web::UI::WebControls::View" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.View</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.WizardStepControlBuilder))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Реализует базовую функциональность, требуемую для какого-либо шага в элементе управления <see cref="T:System.Web.UI.WebControls.Wizard" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Невозможно непосредственно создать экземпляр <xref:System.Web.UI.WebControls.WizardStepBase> класса. Вместо этого данный класс наследуется <xref:System.Web.UI.WebControls.WizardStep> класса и <xref:System.Web.UI.WebControls.TemplatedWizardStep> класс для реализации базовой функциональности шаг в элемент управления, который выступает в качестве мастера.  
  
 Можно наследовать от <xref:System.Web.UI.WebControls.WizardStepBase> класса, чтобы создать пользовательский класс, который представляет уникальный шаг элемента управления мастера.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
    <altmember cref="T:System.Web.UI.WebControls.Wizard" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WizardStepBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WizardStepBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.WizardStepBase" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AllowReturn">
      <MemberSignature Language="C#" Value="public virtual bool AllowReturn { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowReturn" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.AllowReturn" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowReturn As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowReturn { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Filterable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, показывающее, может ли пользователь вернуться к текущему шагу из последующего шага в коллекции <see cref="T:System.Web.UI.WebControls.WizardStepCollection" />.</summary>
        <value>
          Значение <see langword="true" />, если пользователь может вернуться к текущему шагу; в противном случае — <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> Свойство можно использовать для принудительного применения линейной навигации в <xref:System.Web.UI.WebControls.Wizard> элемента управления. Если у каждого действия есть его <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> свойство `false`, пользователь не будет иметь возможность вернуться к шагу после доступа к его. Один сценарий, в котором можно использовать эту функциональность — запретить пользователю вернуться к шагу после его выполнения, так как данные в базе данных, как каждый шаг сохраняются завершено. При сохранении данных после каждого шага и разрешить пользователю вернуться к шагу и изменить сведения после его сохранения, сохраненные данные могут быть повреждены. Установив <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> свойства `false`, после шага ухода пользователя, он или она не будет для возврата к ней и изменять любые значения.  
  
 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> Свойство определяет, как и когда **Назад** кнопка не отображается. В следующей таблице описаны **Назад** кнопку поведение отрисовки.  
  
|Сценарий|Поведение|  
|--------------|--------------|  
|Линейный: Шаг 1 имеет <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> значение `false` и действий пользователя переходит к шагу 2.|Шаг 2 не отображается **Назад** кнопки.|  
|Нелинейная: Шаг 1 имеет <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> значение `false` и действий пользователя переходит к шагу 3.|Шаг 3 не отображает **Назад** кнопки.|  
|Кнопок боковой панели: Шаг 2 включает <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> значение `false` , <xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A> имеет значение `true`, и пользователь щелкает кнопки боковой панели.|На боковой панели, кнопок, автоматически отключаются при <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> равно `false`. Если пользователь нажимает кнопку, действие учитывается.|  
|Линейный и нелинейный с пользовательским шаблоном: У шага есть пользовательский навигационный шаблон.|Нет автоматически скрытие или отображение в случае <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> равно `false` при использовании шаблона для навигации. **Назад** кнопка должна быть необязательным в шаблоне.|  
|С помощью конструктора Visual Studio и <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A> : элемент управления имеет пять шагов, вы работаете на шаге 4 и запустите страницу.|Если шаг 4 — <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A>, то **Назад** переключатель отображается. **Назад** только кнопка скрыта для <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> значение <xref:System.Web.UI.WebControls.WizardStepType.Step> при предыдущем шаге, в журнале имеет <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> значение `false`. Поскольку сначала был отображен шаг 4 и отсутствуют шаги в журнале, **Назад** кнопка не скрыт.|  
|Запустить шаг и Нелинейная навигации: пользователь посещает шаг 3 и шаг 4 и шаг 1 имеет <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> значение <xref:System.Web.UI.WebControls.WizardStepType.Start>.|Мастер не добавляет **Назад** кнопка, если <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> равно <xref:System.Web.UI.WebControls.WizardStepType.Start> независимо от того, как пользователь переходит к этому шагу.|  
|Тому же шагу в журнале: Посещении шаг 3 где <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> равно <xref:System.Web.UI.WebControls.WizardStepType.Step> и пользователь не фиксирует их действия. Затем они щелкните кнопку возврата на шаге 3.|Мастер управления проверяет **Назад** шаг в журнале — «же» шаг, который он в настоящее время на. Если шаг совпадают, мастер управления просматривает журнал, чтобы определить, на предыдущем этапе «другой» и оснований отображение **Назад** кнопки и назначения на основе «другой шаг» в журнале.|  
  
> [!NOTE]
>  При <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> свойству `false`, но <xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A> свойство родительский элемент управления <xref:System.Web.UI.WebControls.WizardStepBase> имеет значение `true`, нажатие кнопки боковой панели не оказывает влияния. Обычно боковой панели отображается для предоставления нелинейного перехода, если не используются функциональные возможности нелинейного перехода, можно задать <xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A> свойства `false`.  
  
 Значение для данного свойства нельзя задать с помощью тем или тем таблиц стилей. Дополнительные сведения см. в разделе <xref:System.Web.UI.ThemeableAttribute> и [ASP.NET тем и обложек](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).  
  
   
  
## Examples  
 В следующем примере показано использование <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> свойство для остановки пользователям возвращение к шагу <xref:System.Web.UI.WebControls.Wizard> управления после уже был осуществлен. В примере `Step1` действия есть его <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> свойство `false`. Когда пользователь покидает `Step1` шаг, нет кнопки "Назад", которая отображается на `Step2` шаг.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepBaseAllowReturn#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseAllowReturn/CS/wizardstepbaseallowreturncs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepBaseAllowReturn#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseAllowReturn/VB/wizardstepbaseallowreturnvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, применяются ли темы к этому элементу управления.</summary>
        <value>
          <see langword="true" /> в случае использования тем, в противном случае — <see langword="false" />. Значение по умолчанию: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> Свойство указывает, включены ли темы для <xref:System.Web.UI.WebControls.WizardStepBase> элемента управления. <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> Свойства также влияет на включение темы для элементов управления, содержащихся в коллекции элементов управления. Когда <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> свойство `true`, обложки элементов управления для применения ищется каталоге темы приложения. Если обложки для конкретного элемента управления не существует в каталоге тем, обложки не применяется. Когда <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> свойство `false`, не производится поиск в каталоге темы и значение <xref:System.Web.UI.Control.SkinID%2A> свойство не используется.  
  
 Элемент управления может переопределить <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> родительского элемента управления или страницы, содержащей, заданным значением. Например если <xref:System.Web.UI.WebControls.WizardStepBase> управления имеет <xref:System.Web.UI.WebControls.WizardStepBase.EnableTheming%2A> значение `false`, можно выборочно применить темы к дочерним элементам управления, содержащихся в окне мастера, задав <xref:System.Web.UI.Control.EnableTheming%2A> свойства `true` на отдельных дочерних элементов управления.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableTheming" />
      </Docs>
    </Member>
    <Member MemberName="ID">
      <MemberSignature Language="C#" Value="public override string ID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.ID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает программный идентификатор, назначенный серверному элементу управления.</summary>
        <value>Программный идентификатор элемента управления.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> свойство для определения и ссылки на элемент управления шаг конкретного мастера на странице веб-форм. <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> Значение становится именем экземпляра элемента управления на странице; это позволяет легко получить доступ к определенному шагу в коде для этой страницы. Например, если задать <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> свойство <xref:System.Web.UI.WebControls.WizardStepBase> управления для «Шаг 1», можно ссылаться на дочерние элементы управления шага мастера в коде для этой страницы, как `Step1.Controls`.  
  
 <xref:System.Web.UI.WebControls.WizardStepBase> Управления гарантирует, что каждый шаг <xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A> элемент управления имеет допустимый уникальный идентификатор действия добавления или изменения во время разработки. Например, если значение <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> для шага во время разработки, не может соответствовать идентификатор еще один шаг, содержащихся в <xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A> элемента управления и он не может соответствовать <xref:System.Web.UI.Control.ID%2A> к содержащей <xref:System.Web.UI.WebControls.WizardStepBase.Wizard%2A> элемента управления.  
  
   
  
## Examples  
 В следующем примере кода определяется трех шагов мастера для <xref:System.Web.UI.WebControls.Wizard> элемента управления на странице веб-форм. В коде для страницы экземпляры шагов мастера именуются значениями своих Идентификаторов и к ним могут обращаться в коде как `WizardStep1`, `WizardStep2`, и `WizardStep3`.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardActiveStep#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStep/CS/wizardactivestepcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardActiveStep#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStep/VB/wizardactivestepvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Во время разработки свойству было присвоено недопустимое значение строки идентификатора.  
  
 - или -  
  
 Во время разработки свойству был присвоен тот же идентификатор, что и содержащему его элементу управления <see cref="P:System.Web.UI.WebControls.WizardStepBase.Wizard" />.  
  
 - или -  
  
 Во время разработки свойству был присвоен тот же идентификатор, что и другому шагу в содержащем его элементе управления <see cref="P:System.Web.UI.WebControls.WizardStepBase.Wizard" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">Объект <see cref="T:System.Object" />, представляющий восстанавливаемое состояние элемента управления.</param>
        <summary>Восстанавливает сведения о состоянии представления из предыдущего запроса страницы, сохраненного методом <see cref="M:System.Web.UI.WebControls.WebControl.SaveViewState" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public virtual string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает имя, соответствующее шагу элемента управления, работающего в качестве мастера.</summary>
        <value>Имя, соответствующее шагу элемента управления, работающего в качестве мастера.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WizardStepBase.Name%2A> Свойство возвращает строку, которая идентифицирует шаг элемента управления мастера. Если значение задано для <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> свойства <xref:System.Web.UI.WebControls.WizardStepBase.Name%2A> свойство возвращает это значение. Если не указано значение для <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> свойства <xref:System.Web.UI.WebControls.WizardStepBase.Name%2A> свойство возвращает значение <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> свойства. Если не указаны значения для любого <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> или <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> свойства <xref:System.Web.UI.WebControls.WizardStepBase.Name%2A> возвращает `null`.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WizardStepBase.Title" />
        <altmember cref="P:System.Web.UI.WebControls.WizardStepBase.ID" />
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected internal override void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnLoad(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected internal override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepBase.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Объект <see cref="T:System.Web.UI.HtmlTextWriter" />, представляющий выходной поток для отрисовки HTML-содержимого на стороне клиента.</param>
        <summary>Выводит содержимое дочерних элементов управления, принадлежащих элементу управления <see cref="T:System.Web.UI.WebControls.WizardStepBase" />, в указанный объект <see cref="T:System.Web.UI.HtmlTextWriter" />, который записывает визуализируемое содержимое на стороне клиента.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StepType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WizardStepType StepType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.WizardStepType StepType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.StepType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StepType As WizardStepType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WizardStepType StepType { System::Web::UI::WebControls::WizardStepType get(); void set(System::Web::UI::WebControls::WizardStepType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardStepType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает тип пользовательского интерфейса навигации, отображаемого для шага в элементе управления <see cref="T:System.Web.UI.WebControls.Wizard" />.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Web.UI.WebControls.WizardStepType" />. Значение по умолчанию — <see langword="WizardStepType.Auto" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> свойство, чтобы указать тип кнопки навигации для отображения для шага в <xref:System.Web.UI.WebControls.Wizard> элемента управления. Если указать значение для этого свойства, какие шаги помечены как <xref:System.Web.UI.WebControls.WizardStepType.Complete> отображается в отключенном состоянии на боковой панели.  
  
 Если значение этого свойства не указано, значение по умолчанию — `WizardStepType.Auto`.  
  
 В следующей таблице перечислены доступные параметры для <xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A> свойство и соответствующее поведение шага:  
  
 `WizardStepType.Auto`  
 Навигационный пользовательский Интерфейс, отображаемый для шага, определяется порядок, в котором объявлен этот шаг.  
  
 `WizardStepType.Complete`  
 Шаг является последним из отображаемых. Кнопки перехода не выводятся.  
  
 `WizardStepType.Finish`  
 Шаг является последним шагом сбора данных. Навигации отображаются кнопки Готово» и «назад.  
  
 `WizardStepType.Start`  
 Шаг является первым из отображаемых. Кнопка Назад не выводится.  
  
 `WizardStepType.Step`  
 Шаг располагается между началом и конечного этапа. Отображаются предыдущую и следующую кнопки навигации. Этот тип шага полезен для переопределения типа шага <xref:System.Web.UI.WebControls.WizardStepType.Auto>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Выбранное значение не является значением перечисления <see cref="T:System.Web.UI.WebControls.WizardStepType" />.</exception>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepType" />
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public virtual string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.Title" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает название шага в элементе управления <see cref="T:System.Web.UI.WebControls.Wizard" /> при включенной боковой панели.</summary>
        <value>Название шага в элементе управления <see cref="T:System.Web.UI.WebControls.Wizard" /> при включенной боковой панели. Значением по умолчанию является пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> свойство для отображения понятное название шага в <xref:System.Web.UI.WebControls.Wizard> управления, если включена функция боковой панели. Если <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> свойство не задано и боковую панель включена, значение <xref:System.Web.UI.WebControls.WizardStepBase.ID%2A> свойство будет отображаться для кнопки боковой панели.  
  
 Значение этого свойства, если задано, можно автоматически сохраняются в файл ресурсов с помощью средств конструктора. Дополнительные сведения см. в разделе <xref:System.ComponentModel.LocalizableAttribute> и [глобализации и локализации](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).  
  
   
  
## Examples  
 В следующем примере показано использование <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> свойство для отображения понятное название шага в <xref:System.Web.UI.WebControls.Wizard> элемента управления. В примере `Step1` не поддерживает его <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> свойство задано, поэтому оно отображается в <xref:System.Web.UI.WebControls.Wizard> управления как «WizardStep1». `Step2` у его <xref:System.Web.UI.WebControls.WizardStepBase.Title%2A> свойство задано, поэтому он отображается как «Шаг 2».  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepBaseTitle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseTitle/CS/wizardstepbasetitlecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepBaseTitle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepBaseTitle/VB/wizardstepbasetitlevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
        <altmember cref="P:System.Web.UI.WebControls.WizardStepBase.Name" />
      </Docs>
    </Member>
    <Member MemberName="Wizard">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Wizard Wizard { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Wizard Wizard" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepBase.Wizard" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Wizard As Wizard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Wizard ^ Wizard { System::Web::UI::WebControls::Wizard ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Wizard</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает элемент управления <see cref="T:System.Web.UI.WebControls.Wizard" />, который является родительским для объекта, производного от <see cref="T:System.Web.UI.WebControls.WizardStepBase" />.</summary>
        <value>Элемент управления <see cref="T:System.Web.UI.WebControls.Wizard" />, который является родительским для объекта, производного от <see cref="T:System.Web.UI.WebControls.WizardStepBase" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
      </Docs>
    </Member>
  </Members>
</Type>