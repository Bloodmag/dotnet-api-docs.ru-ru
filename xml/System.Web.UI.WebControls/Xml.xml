<Type Name="Xml" FullName="System.Web.UI.WebControls.Xml">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="439b55e2a784b5ff6bcd5cfe837c04d451b8ef19" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30599558" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Xml : System.Web.UI.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Xml extends System.Web.UI.Control" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Xml" />
  <TypeSignature Language="VB.NET" Value="Public Class Xml&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class Xml : System::Web::UI::Control" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("DocumentSource")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.XmlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.XmlBuilder))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false, true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Отображает документ XML без форматирования или использования таблицы стилей преобразования (XSLT).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В этом разделе.  
  
-   [Введение](#introduction)  
  
-   [Определения XML-данных](#specifying_xml_data)  
  
-   [Задание преобразования XSL](#specifying_an_xsl_transformation)  
  
-   [Декларативный синтаксис](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Вступление  
 Используйте <xref:System.Web.UI.WebControls.Xml> элемента управления для отображения содержимого документа XML без форматирования или использования преобразований XSL.  
  
<a name="specifying_xml_data"></a>   
## <a name="specifying-xml-data"></a>Определения XML-данных  
 XML-документ для отображения указывается при установке одного из трех свойств. Эти три свойства представляют различные типы XML-документов, которые могут быть отображены. Можно отобразить <xref:System.Xml.XmlDocument?displayProperty=nameWithType>, XML-строку или XML-файла, задав соответствующее свойство. Ниже перечислены свойства для задания XML-документа.  
  
|Свойство.|Описание:|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.Xml.Document%2A>|Задает XML-документа с помощью <xref:System.Xml.XmlDocument?displayProperty=nameWithType> объекта. **Предупреждение:** это свойство устарело. Используйте один из остальных свойств, перечисленные в этом разделе, для установки содержимого для XML <xref:System.Web.UI.WebControls.Xml> элемента управления.|  
|<xref:System.Web.UI.WebControls.Xml.DocumentContent%2A>|Задает XML-документ, используя строку. **Примечание:** это свойство обычно задается декларативно путем помещения текста между открывающим и закрывающим `<asp:Xml>` теги <xref:System.Web.UI.WebControls.Xml> элемента управления.|  
|<xref:System.Web.UI.WebControls.Xml.DocumentSource%2A>|Задает XML-документ с помощью файла.|  
  
> [!NOTE]
>  По крайней мере одно из свойств документа XML должно быть присвоено отображения документа XML. Если задано более одного свойства документа XML, отображается XML-документ, указанный в предыдущей установке свойств. Документы в других свойствах игнорируются.  
  
<a name="specifying_an_xsl_transformation"></a>   
## <a name="specifying-an-xsl-transformation"></a>Задание преобразования XSL  
 При необходимости можно указать таблицу стилей преобразований XSL (XSLT) для форматирования документа XML перед записью в выходной поток с помощью установки одного из двух свойств. Эти два свойства представляют различные типы таблиц стилей XSL-преобразования, можно использовать для форматирования XML-документа. Можно форматировать XML-документа с <xref:System.Xml.Xsl.XslCompiledTransform?displayProperty=nameWithType> объекта или XSL преобразования файла таблиц стилей, задав соответствующее свойство. Если ни одна таблица стилей XSL-преобразования, XML-документа отображается в формате по умолчанию. В следующей таблице перечислены свойства для задания таблиц стилей XSL-преобразования.  
  
|Свойство.|Описание:|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.Xml.Transform%2A>|Форматы XML-документа с помощью указанного <xref:System.Xml.Xsl.XslTransform?displayProperty=nameWithType> объекта. **Примечание:** использование <xref:System.Xml.Xsl.XslTransform?displayProperty=nameWithType> объект требует `Full Trust` разрешения.|  
|<xref:System.Web.UI.WebControls.Xml.TransformSource%2A>|Форматирование XML-документа с использованием указанного файла таблиц стилей XSL-преобразования.|  
  
> [!NOTE]
>  Таблица стилей XSL-преобразования является необязательным. Не нужно задавать <xref:System.Web.UI.WebControls.Xml.Transform%2A> или <xref:System.Web.UI.WebControls.Xml.TransformSource%2A> свойства. Если заданы оба свойства стилей XSL-преобразования, последний набор свойств определяет, какие таблицы стилей XSL-преобразования используется для форматирования XML-документа. Другое свойство игнорируется.  
  
 <xref:System.Web.UI.WebControls.Xml> Класс также предоставляет <xref:System.Web.UI.WebControls.Xml.TransformArgumentList%2A> свойство, которое позволяет указать таблицу стилей XSL-преобразования с дополнительными аргументами. Аргументы могут быть параметры преобразований XSL (XSLT) или объекты расширения.  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Декларативный синтаксис  
  
```  
<asp:Xml  
    DocumentSource="uri"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    SkinID="string"  
    TransformSource="string"  
    Visible="True|False"  
/>  
```  
  
   
  
## Examples  
 В следующем примере кода показано, как создать <xref:System.Xml.XmlDocument> и <xref:System.Xml.Xsl.XslTransform> объекты образец XML-файла и таблицу стилей XSL-преобразования. Объекты затем используются элементом управления XML для отображения XML-документа.  
  
 [!code-aspx-csharp[XmlClassExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/XmlClassExample/CS/xmlcs.aspx#1)]
 [!code-aspx-vb[XmlClassExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/XmlClassExample/VB/xmlvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.XmlDocument" />
    <altmember cref="T:System.Xml.Xsl.XslTransform" />
    <altmember cref="P:System.Web.UI.WebControls.Xml.Document" />
    <altmember cref="P:System.Web.UI.WebControls.Xml.DocumentContent" />
    <altmember cref="P:System.Web.UI.WebControls.Xml.DocumentSource" />
    <altmember cref="P:System.Web.UI.WebControls.Xml.TransformArgumentList" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Xml ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Xml.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Xml();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.WebControls.Xml" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddParsedSubObject">
      <MemberSignature Language="C#" Value="protected override void AddParsedSubObject (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddParsedSubObject(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Xml.AddParsedSubObject(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddParsedSubObject (obj As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddParsedSubObject(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Объект <see cref="T:System.Object" />, представляющий проанализированный элемент.</param>
        <summary>Уведомляет серверный элемент управления, что элемент XML или HTML был проанализирован, и добавляет элемент в серверный элемент управления объекта <see cref="T:System.Web.UI.ControlCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как переопределить <xref:System.Web.UI.WebControls.Xml.AddParsedSubObject%2A> метода в пользовательском <xref:System.Web.UI.WebControls.Xml> серверного элемента управления.  
  
 [!code-aspx-csharp[CustomXmlAddParsedSubObject#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomXmlAddParsedSubObject/CS/custom_xml_addparsedsubobjectcs.aspx#1)]
 [!code-aspx-vb[CustomXmlAddParsedSubObject#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomXmlAddParsedSubObject/VB/custom_xml_addparsedsubobjectvb.aspx#1)]  
  
 [!code-csharp[CustomXmlAddParsedSubObject#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomXmlAddParsedSubObject/CS/custom_xml_addparsedsubobject.cs#2)]
 [!code-vb[CustomXmlAddParsedSubObject#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomXmlAddParsedSubObject/VB/custom_xml_addparsedsubobject.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          Параметр <paramref name="obj" /> не является параметром типа <see cref="T:System.Web.UI.LiteralControl" />.</exception>
        <altmember cref="M:System.Web.UI.Control.AddParsedSubObject(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ClientID">
      <MemberSignature Language="C#" Value="public override string ClientID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Xml.ClientID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property ClientID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ClientID { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Переопределяет свойство <see cref="P:System.Web.UI.Control.ClientID" /> и возвращает идентификатор базового серверного элемента управления.</summary>
        <value>Идентификатор базового серверного элемента управления.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.Control.ClientID" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Xml.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Переопределяет свойство <see cref="P:System.Web.UI.Control.Controls" /> и возвращает базовую коллекцию <see cref="T:System.Web.UI.ControlCollection" />.</summary>
        <value>Базовая коллекция <see cref="T:System.Web.UI.ControlCollection" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Xml.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает новый объект <see cref="T:System.Web.UI.EmptyControlCollection" />.</summary>
        <returns>Всегда возвращает <see cref="T:System.Web.UI.EmptyControlCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Xml.CreateControlCollection%2A> Метод используется преимущественно разработчиками элементов управления расширения функциональности служб <xref:System.Web.UI.WebControls.Xml> элемента управления.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Document">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDocument Document { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlDocument Document" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Xml.Document" />
      <MemberSignature Language="VB.NET" Value="Public Property Document As XmlDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlDocument ^ Document { System::Xml::XmlDocument ^ get(); void set(System::Xml::XmlDocument ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Obsolete("The recommended alternative is the XPathNavigator property. Create a System.Xml.XPath.XPathDocument and call CreateNavigator() to create an XPathNavigator. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocument</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает документ <see cref="T:System.Xml.XmlDocument" /> для отображения в элементе управления <see cref="T:System.Web.UI.WebControls.Xml" />.</summary>
        <value>Документ <see cref="T:System.Xml.XmlDocument" /> для отображения в элементе управления <see cref="T:System.Web.UI.WebControls.Xml" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойство <xref:System.Web.UI.WebControls.Xml.Document%2A> является устаревшим. Чтобы указать XML, который будет отображаться в <xref:System.Web.UI.WebControls.Xml> управления, используйте <xref:System.Web.UI.WebControls.Xml.DocumentContent%2A> свойство или <xref:System.Web.UI.WebControls.Xml.DocumentSource%2A> свойства. Дополнительные сведения об этих вариантов см. в разделе о классе для <xref:System.Web.UI.WebControls.Xml> элемента управления.  
  
 XML-документ для отображения в <xref:System.Web.UI.WebControls.Xml> задан элемент управления в одном из трех способов. Можно указать <xref:System.Xml.XmlDocument?displayProperty=nameWithType> объекта, XML-строку или XML-файла, задав соответствующее свойство. <xref:System.Web.UI.WebControls.Xml.Document%2A> Свойство используется для указания <xref:System.Xml.XmlDocument?displayProperty=nameWithType> (представляющий XML-документа) для отображения в элементе управления.  
  
   
  
## Examples  
 В следующем примере кода показано, как создать <xref:System.Xml.XmlDocument> и <xref:System.Xml.Xsl.XslTransform> объекты образец XML-файла и таблицу стилей XSL-преобразования. Объекты затем используются элементом управления XML для отображения XML-документа.  
  
 [!code-aspx-csharp[XmlClassExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/XmlClassExample/CS/xmlcs.aspx#1)]
 [!code-aspx-vb[XmlClassExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/XmlClassExample/VB/xmlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlDocument" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.DocumentContent" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.DocumentSource" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.Transform" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.TransformSource" />
      </Docs>
    </Member>
    <Member MemberName="DocumentContent">
      <MemberSignature Language="C#" Value="public string DocumentContent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DocumentContent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Xml.DocumentContent" />
      <MemberSignature Language="VB.NET" Value="Public Property DocumentContent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DocumentContent { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Задает строку, содержащую документ XML, который будет отображен в элементе управления <see cref="T:System.Web.UI.WebControls.Xml" />.</summary>
        <value>Строка, содержащая документ XML, который будет отображен в элементе управления <see cref="T:System.Web.UI.WebControls.Xml" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XML-документ для отображения в <xref:System.Web.UI.WebControls.Xml> задан элемент управления в одном из трех способов. Можно указать <xref:System.Xml.XmlDocument?displayProperty=nameWithType> объекта, XML-строку или XML-файла, задав соответствующее свойство. <xref:System.Web.UI.WebControls.Xml.DocumentContent%2A> Свойство используется для указания XML-строку (представляющий XML-документа) для отображения в элементе управления. <xref:System.Web.UI.WebControls.Xml.DocumentContent%2A> Свойство не является обычно программным способом задать или установить в качестве атрибута элемента управления. Вместо этого XML-строка обычно имеет декларативно путем помещения текста между открывающим и закрывающим `<asp:Xml>` тегами элемента управления.  
  
> [!NOTE]
>  Несмотря на то что <xref:System.Web.UI.WebControls.Xml.DocumentContent%2A> свойство содержит оба `get` и `set` доступа к свойствам только `set` полезно метода доступа. Если вы используете `get` метод доступа, <xref:System.String.Empty?displayProperty=nameWithType> возвращается.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Xml.Document" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.DocumentSource" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.Transform" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.TransformSource" />
      </Docs>
    </Member>
    <Member MemberName="DocumentSource">
      <MemberSignature Language="C#" Value="public string DocumentSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DocumentSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Xml.DocumentSource" />
      <MemberSignature Language="VB.NET" Value="Public Property DocumentSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DocumentSource { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.XmlUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает путь к документу XML, который будет отображен в элементе управления <see cref="T:System.Web.UI.WebControls.Xml" />.</summary>
        <value>Путь к документу XML, который будет отображен в элементе управления <see cref="T:System.Web.UI.WebControls.Xml" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 XML-документ для отображения в <xref:System.Web.UI.WebControls.Xml> задан элемент управления в одном из трех способов. Можно указать <xref:System.Xml.XmlDocument?displayProperty=nameWithType> объекта, XML-строку или XML-файла, задав соответствующее свойство. <xref:System.Web.UI.WebControls.Xml.DocumentSource%2A> Свойство используется для указания пути к файлу XML (представляющего документ XML) для отображения в элементе управления. Можно использовать относительный или абсолютный путь. Относительный путь связывает местоположение файла в папку веб-форм или элементов управления, без указания полного пути на сервере. Путь задается относительно расположения веб-страницы. Это упрощает перемещение всего узла в другой каталог на сервере без обновления пути к файлу в коде. Абсолютный путь представляет полный путь, поэтому перемещение узла в другой каталог требует обновления кода.  
  
   
  
## Examples  
 В следующем примере кода показано, как отобразить XML-документа с помощью XSL-преобразования в <xref:System.Web.UI.WebControls.Xml> элемента управления.  
  
 [!code-aspx-csharp[XmlControlClassExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/XmlControlClassExample/CS/xmlcontrolcs.aspx#1)]
 [!code-aspx-vb[XmlControlClassExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/XmlControlClassExample/VB/xmlcontrolvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Xml.Document" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.DocumentContent" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.Transform" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.TransformSource" />
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Xml.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Переопределяет свойство <see cref="P:System.Web.UI.Control.EnableTheming" />. Данное свойство не поддерживается классом <see cref="T:System.Web.UI.WebControls.Xml" />.</summary>
        <value>Всегда возвращает значение <see langword="false" />. Данное свойство не поддерживается.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Xml.EnableTheming%2A> Свойство унаследовано от <xref:System.Web.UI.Control> класса, но не применяется к <xref:System.Web.UI.WebControls.Xml> класса. Любая попытка задать значение этого свойства вызывает <xref:System.NotSupportedException> исключение.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Предпринята попытка присвоить значение данному свойству.</exception>
      </Docs>
    </Member>
    <Member MemberName="FindControl">
      <MemberSignature Language="C#" Value="public override System.Web.UI.Control FindControl (string id);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Web.UI.Control FindControl(string id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Xml.FindControl(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function FindControl (id As String) As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Web::UI::Control ^ FindControl(System::String ^ id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="id">Идентификатор искомого элемента управления.</param>
        <summary>Ищет контейнер именования страниц для указанного серверного элемента управления.</summary>
        <returns>Указанный элемент управления; в противном случае значение <see langword="null" />, если указанный элемент управления не существует.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Focus">
      <MemberSignature Language="C#" Value="public override void Focus ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Focus() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Xml.Focus" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Focus ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Focus();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Переопределяет метод <see cref="M:System.Web.UI.Control.Focus" />. Этот метод не поддерживается классом <see cref="T:System.Web.UI.WebControls.Xml" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Xml.Focus%2A> Метод унаследован от <xref:System.Web.UI.Control> класс, но он не применим к <xref:System.Web.UI.WebControls.Xml> класса. Любая попытка вызова метода создает исключение <xref:System.NotSupportedException> исключение.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Предпринята попытка вызова данного метода.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetDesignModeState">
      <MemberSignature Language="C#" Value="protected override System.Collections.IDictionary GetDesignModeState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.IDictionary GetDesignModeState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Xml.GetDesignModeState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetDesignModeState () As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::IDictionary ^ GetDesignModeState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает данные времени разработки для элемента управления.</summary>
        <returns>Объект <see cref="T:System.Collections.IDictionary" />, содержащий данные времени разработки для элемента управления <see cref="T:System.Web.UI.WebControls.Xml" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Xml.GetDesignModeState%2A> — Вспомогательный метод, используемый для получения текущего состояния во время разработки <xref:System.Web.UI.WebControls.Xml> элемента управления.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasControls">
      <MemberSignature Language="C#" Value="public override bool HasControls ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool HasControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Xml.HasControls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function HasControls () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool HasControls();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Определяет наличие у серверного элемента управления дочерних элементов управления.</summary>
        <returns>
          Значение <see langword="true" />, если элемент управления содержит другие элементы управления; в противном случае —значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Xml.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (output As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="output" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="output">Результат выходного потока.</param>
        <summary>Преобразовывает результаты для просмотра в потоке вывода.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как переопределить <xref:System.Web.UI.WebControls.Xml.Render%2A> метод в серверного элемента управления, чтобы <xref:System.Web.UI.WebControls.Xml> управления всегда отображается с изображением.  
  
 [!code-aspx-csharp[CustomXmlRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomXmlRender/CS/custom_xml_rendercs.aspx#1)]
 [!code-aspx-vb[CustomXmlRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomXmlRender/VB/custom_xml_rendervb.aspx#1)]  
  
 [!code-csharp[CustomXmlRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomXmlRender/CS/custom_xml_render.cs#2)]
 [!code-vb[CustomXmlRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomXmlRender/VB/custom_xml_render.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public override string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Xml.SkinID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SkinID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkinID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Переопределяет свойство <see cref="P:System.Web.UI.Control.SkinID" />. Данное свойство не поддерживается классом <see cref="T:System.Web.UI.WebControls.Xml" />.</summary>
        <value>Всегда возвращает пустую строку (""). Данное свойство не поддерживается.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Xml.SkinID%2A> Свойство унаследовано от <xref:System.Web.UI.Control> класса, но не применяется к <xref:System.Web.UI.WebControls.Xml> класса. Любая попытка задать значение этого свойства вызывает <xref:System.NotSupportedException> исключение.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">Предпринята попытка присвоить значение данному свойству.</exception>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public System.Xml.Xsl.XslTransform Transform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Xsl.XslTransform Transform" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Xml.Transform" />
      <MemberSignature Language="VB.NET" Value="Public Property Transform As XslTransform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Xsl::XslTransform ^ Transform { System::Xml::Xsl::XslTransform ^ get(); void set(System::Xml::Xsl::XslTransform ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Xsl.XslTransform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает объект <see cref="T:System.Xml.Xsl.XslTransform" />, который используется для форматирования документа XML перед записью в поток вывода.</summary>
        <value>Объект <see cref="T:System.Xml.Xsl.XslTransform" />, используемый для форматирования документа XML перед записью в поток вывода.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При использовании <xref:System.Web.UI.WebControls.Xml> управления для отображения XML-документа, можно указать таблицу стилей Extensible Stylesheet Language Transformation (XSLT), который форматирует XML-документ перед записью в поток вывода. Можно форматировать документ XML с помощью <xref:System.Xml.Xsl.XslTransform?displayProperty=nameWithType> объект или файл таблицы стилей XSL-преобразования. Если никакой документ XSL-преобразования, XML-документа отображается в формате по умолчанию. <xref:System.Web.UI.WebControls.Xml.Transform%2A> Свойство используется для указания <xref:System.Xml.Xsl.XslTransform?displayProperty=nameWithType> объект (представляющий документ XSL-преобразования), используемый для форматирования документа XML перед записью в выходной поток.  
  
> [!NOTE]
>  С помощью <xref:System.Xml.Xsl.XslTransform?displayProperty=nameWithType> объект требует `Full Trust` разрешения.  
  
   
  
## Examples  
 В следующем примере кода показано, как создать <xref:System.Xml.XmlDocument> и <xref:System.Xml.Xsl.XslTransform> объекты образец XML-файла и таблицу стилей XSL-преобразования. Объекты затем используются элементом управления XML для отображения XML-документа.  
  
 [!code-aspx-csharp[XmlClassExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/XmlClassExample/CS/xmlcs.aspx#1)]
 [!code-aspx-vb[XmlClassExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/XmlClassExample/VB/xmlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Xsl.XslTransform" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.TransformSource" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.Document" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.DocumentContent" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.DocumentSource" />
      </Docs>
    </Member>
    <Member MemberName="TransformArgumentList">
      <MemberSignature Language="C#" Value="public System.Xml.Xsl.XsltArgumentList TransformArgumentList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Xsl.XsltArgumentList TransformArgumentList" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Xml.TransformArgumentList" />
      <MemberSignature Language="VB.NET" Value="Public Property TransformArgumentList As XsltArgumentList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Xsl::XsltArgumentList ^ TransformArgumentList { System::Xml::Xsl::XsltArgumentList ^ get(); void set(System::Xml::Xsl::XsltArgumentList ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Xsl.XsltArgumentList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий список необязательных аргументов, переданных таблице стилей и использованных при преобразовании XSL.</summary>
        <value>Объект <see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий список необязательных аргументов, переданных таблице стилей и использованных при преобразовании XSL.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.Xml.TransformArgumentList%2A> свойство, чтобы предоставить таблицу стилей XSL-преобразования с дополнительными аргументами. Аргументы могут быть параметры XSLT и объекты расширения.  
  
 Дополнительные сведения об использовании <xref:System.Xml.Xsl.XsltArgumentList?displayProperty=nameWithType> см. в описании [XsltArgumentList для параметров таблицы стилей и объекты расширения](~/docs/standard/data/xml/xsltargumentlist-for-style-sheet-parameters-and-extension-objects.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.Xsl.XsltArgumentList" />
      </Docs>
    </Member>
    <Member MemberName="TransformSource">
      <MemberSignature Language="C#" Value="public string TransformSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TransformSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Xml.TransformSource" />
      <MemberSignature Language="VB.NET" Value="Public Property TransformSource As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TransformSource { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.XslUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает путь к таблице стилей XSLT, применяемой для форматирования документа XML перед записью в поток вывода.</summary>
        <value>Путь к таблице стилей XSL преобразования XSL, применяемой для форматирования документа XML перед записью в поток вывода.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При использовании <xref:System.Web.UI.WebControls.Xml> управления для отображения XML-документа, можно указать таблицу стилей XSL-преобразования, форматирование документа XML перед записью в поток вывода. Либо можно форматировать XML-документа с <xref:System.Xml.Xsl.XslTransform?displayProperty=nameWithType> объекта или файла таблиц стилей XSL-преобразования. Если ни одна таблица стилей XSL-преобразования, XML-документа отображается в формате по умолчанию. <xref:System.Web.UI.WebControls.Xml.TransformSource%2A> Свойство используется для указания пути к файлу таблиц стилей XSL-преобразования (представляющий таблицу стилей XSL-преобразования), используемый для форматирования документа XML перед записью в выходной поток. Можно использовать относительный или абсолютный путь. Относительный путь связывает местоположение файла в папку веб-форм или элементов управления, без указания полного пути на сервере. Путь задается относительно расположения веб-страницы. Это упрощает перемещение всего узла в другой каталог на сервере без обновления пути к файлу в коде. Абсолютный путь представляет полный путь, поэтому перемещение узла в другой каталог требует обновления кода.  
  
   
  
## Examples  
 В следующем примере кода показано, как отобразить XML-документа с помощью XSL-преобразования в <xref:System.Web.UI.WebControls.Xml> элемента управления.  
  
 [!code-aspx-csharp[XmlControlClassExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/XmlControlClassExample/CS/xmlcontrolcs.aspx#1)]
 [!code-aspx-vb[XmlControlClassExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/XmlControlClassExample/VB/xmlcontrolvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Xml.Transform" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.Document" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.DocumentContent" />
        <altmember cref="P:System.Web.UI.WebControls.Xml.DocumentSource" />
      </Docs>
    </Member>
    <Member MemberName="XPathNavigator">
      <MemberSignature Language="C#" Value="public System.Xml.XPath.XPathNavigator XPathNavigator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XPath.XPathNavigator XPathNavigator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Xml.XPathNavigator" />
      <MemberSignature Language="VB.NET" Value="Public Property XPathNavigator As XPathNavigator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XPath::XPathNavigator ^ XPathNavigator { System::Xml::XPath::XPathNavigator ^ get(); void set(System::Xml::XPath::XPathNavigator ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XPath.XPathNavigator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает модель курсора для перехода и редактирования данных XML, связанных с элементом управления <see cref="T:System.Web.UI.WebControls.Xml" />.</summary>
        <value>Объект <see cref="T:System.Xml.XPath.XPathNavigator" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство можно использовать для связывания <xref:System.Xml.XPath.XPathNavigator> объекта с <xref:System.Web.UI.WebControls.Xml> элемента управления.  
  
 <xref:System.Xml.XPath.XPathNavigator> Создать объект из класса, который реализует <xref:System.Xml.XPath.IXPathNavigable> интерфейса, такие как <xref:System.Xml.XPath.XPathDocument> и <xref:System.Xml.XmlDocument> классы. <xref:System.Xml.XPath.XPathNavigator> объекты, созданные <xref:System.Xml.XPath.XPathDocument> объекты доступны только для чтения, и <xref:System.Xml.XPath.XPathNavigator> объектов, созданных <xref:System.Xml.XmlDocument> объекты можно изменять. <xref:System.Xml.XPath.XPathNavigator> Состояние только для чтения или для редактирования объекта определяется с помощью <xref:System.Xml.XPath.XPathNavigator.CanEdit%2A> свойство <xref:System.Xml.XPath.XPathNavigator> класса.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>