<Type Name="XmlDataSource" FullName="System.Web.UI.WebControls.XmlDataSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c393e577e4867ed73969b857155f8f0c054aa059" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30601368" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlDataSource : System.Web.UI.HierarchicalDataSourceControl, System.ComponentModel.IListSource, System.Web.UI.IDataSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlDataSource extends System.Web.UI.HierarchicalDataSourceControl implements class System.ComponentModel.IListSource, class System.Web.UI.IDataSource" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.XmlDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlDataSource&#xA;Inherits HierarchicalDataSourceControl&#xA;Implements IDataSource, IListSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlDataSource : System::Web::UI::HierarchicalDataSourceControl, System::ComponentModel::IListSource, System::Web::UI::IDataSource" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.HierarchicalDataSourceControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.IListSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IDataSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Transforming")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("DataFile")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.XmlDataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.XmlDataSource))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет источник XML-данных в элементы управления с привязкой к данным.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В этом разделе.  
  
-   [Введение](#introduction)  
  
-   [Источники XML-данных](#source_of_xml_data)  
  
-   [Обновление данных XML](#updating_xml_data)  
  
-   [Задание преобразования XSL](#specifying_an_xsl_transformation)  
  
-   [Фильтрация с помощью выражения XPath](#filtering_using_an_xpath_expression)  
  
-   [Кэширование](#caching)  
  
-   [Дополнительные возможности](#additional_features)  
  
-   [Объект представления данных](#data_view_object)  
  
-   [Декларативный синтаксис](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Вступление  
 <xref:System.Web.UI.WebControls.XmlDataSource> Элемент управления источника данных, представленных в XML-данных к элементам управления с привязкой к данным. <xref:System.Web.UI.WebControls.XmlDataSource> Элемент управления может использоваться элементами управления с привязкой к данным для отображения иерархических и табличных данных. <xref:System.Web.UI.WebControls.XmlDataSource> Элемент управления обычно используется для отображения иерархических данных XML в сценариях только для чтения. Поскольку <xref:System.Web.UI.WebControls.XmlDataSource> расширяет <xref:System.Web.UI.HierarchicalDataSourceControl> класса, он работает с иерархическими данными. <xref:System.Web.UI.WebControls.XmlDataSource> Управления также реализует <xref:System.Web.UI.IDataSource> интерфейса и работает с табличными, или список стилей, данные.  
  
> [!NOTE]
>  В целях безопасности, ни один из <xref:System.Web.UI.WebControls.XmlDataSource> свойства элемента управления, хранятся в состоянии представления. Так как это Техническая возможность декодирования содержимого состояния просмотра на стороне клиента, хранение конфиденциальных сведений о структуре данных или его содержимое может привести к создает угрозу раскрытия информации. Обратите внимание, что если необходимо хранить сведения, например <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> свойство в состоянии представления, можно включить шифрование для защиты содержимого, задав <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> на `@ Page` директивы.  
  
 Используйте разработчики <xref:System.Web.UI.WebControls.XmlDataSource> элемента управления для отображения XML-данных с помощью элементов управления с привязкой к данным.  
  
<a name="source_of_xml_data"></a>   
## <a name="sources-of-xml-data"></a>Источники XML-данных  
 <xref:System.Web.UI.WebControls.XmlDataSource> Обычно загружает XML-данные из файла XML, которая задана в <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> свойство. XML-данных также могут быть сохранены непосредственно на элемент управления источником данных в форме строки с помощью <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> свойство. Если требуется преобразовать XML-данных, перед отображением элементов управления с привязкой к данным, можно предоставить таблицу стилей Extensible Stylesheet Language (XSL) для преобразования. Обозначается как с XML-данные, обычно загрузки таблицы стилей из файла, <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> свойство, но также его можно сохранить в виде строки непосредственно с помощью <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> свойство.  
  
<a name="updating_xml_data"></a>   
## <a name="updating-xml-data"></a>Обновление данных XML  
 <xref:System.Web.UI.WebControls.XmlDataSource> Управления обычно используется в сценариях только для чтения данных которых элемент управления с привязкой к данным XML отображаются. Однако можно также использовать <xref:System.Web.UI.WebControls.XmlDataSource> элемента управления для редактирования XML-данных. Чтобы изменить XML-данные, вызовите <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> метод для извлечения <xref:System.Xml.XmlDataDocument> объект, который представляет собой в памяти представление XML-данных. Можно также использовать объектную модель, предоставляемые <xref:System.Xml.XmlDataDocument> и <xref:System.Xml.XmlNode> объекты, он содержит или использовать фильтрации выражения XPath для работы с данными в документе. При внесении изменений в памяти представление XML-данных можно сохранить на диске, вызвав <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> метод.  
  
 Существуют некоторые ограничения на возможности редактирования <xref:System.Web.UI.WebControls.XmlDataSource> управления:  
  
-   XML-данные, которые должны загружаться из XML-файла, который указывает <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> свойства не из встроенного формат XML, указанный в <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> свойство.  
  
-   XSLT-преобразования может быть указано в <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> или <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> свойства.  
  
-   <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> Метод не обрабатывает параллельные операции сохранения по различным запросам. Если более чем один пользователь редактирует файл XML через <xref:System.Web.UI.WebControls.XmlDataSource>, нет никакой гарантии, что все пользователи работают с теми же данными. Существует также возможность <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> сбой из-за те же проблемы параллелизма операции.  
  
<a name="specifying_an_xsl_transformation"></a>   
## <a name="specifying-an-xsl-transformation"></a>Задание преобразования XSL  
 Распространенной операцией с данными XML является их преобразование из одного набора данных XML в другой. <xref:System.Web.UI.WebControls.XmlDataSource> Элемент управления поддерживает преобразования XML с помощью <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> и <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> свойства, которые определяют таблицы стилей XSL для применения к XML-данных, прежде чем передается в элемент управления с привязкой к данным, и <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> свойства, которое позволяет Укажите динамические аргументы таблицы стилей XSLT для использования при преобразовании таблицы стилей XSL. При указании фильтрации с помощью выражения XPath <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> свойство, оно применяется после преобразования.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.XmlDataSource> Класс использует устаревший <xref:System.Xml.Xsl.XslTransform> классом для выполнения преобразований XSL. Если вы хотите использовать возможности таблицы стилей, введенные после <xref:System.Xml.Xsl.XslTransform> класс был объявлен устаревшим, применять их вручную с помощью <xref:System.Xml.Xsl.XslCompiledTransform> класса.  
  
<a name="filtering_using_an_xpath_expression"></a>   
## <a name="filtering-using-an-xpath-expression"></a>Фильтрация с помощью выражения XPath  
 По умолчанию <xref:System.Web.UI.WebControls.XmlDataSource> элемент управления загружает XML-данные в XML-файл, указанный параметром <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> свойства или найден, встроенный в <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> свойство, но можно фильтровать данные с помощью выражения XPath. <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> Свойство поддерживает синтаксис XPath фильтра, который применяется после загрузки и преобразования данных XML.  
  
<a name="caching"></a>   
## <a name="caching"></a>Кэширование  
 Для повышения производительности, кэширование для <xref:System.Web.UI.WebControls.XmlDataSource> элемента управления по умолчанию. Открытие и чтение XML-файла на сервере при каждом запросе страницы может снизить производительность приложения. Кэширование позволяет снизить нагрузку на сервер за счет использования памяти веб-сервера. в большинстве случаев это хороший компромисс. <xref:System.Web.UI.WebControls.XmlDataSource> Автоматически кэширует данные при <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> свойству `true`и <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> является свойство число секунд, в кэше хранятся данные перед кэш становится недействительным. Можно использовать <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> для дальнейшей точной настройки поведение кэширования элемента управления источника данных.  
  
<a name="additional_features"></a>   
## <a name="additional-features"></a>Дополнительные функции  
 В следующей таблице перечислены дополнительные возможности, поддерживаемые <xref:System.Web.UI.WebControls.XmlDataSource> элемента управления.  
  
|Возможность|Описание:|  
|----------------|-----------------|  
|Сортировка|Не поддерживаются данным <xref:System.Web.UI.WebControls.XmlDataSource> элемента управления.|  
|Фильтрация|<xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> Свойство может использоваться для фильтрации данных XML с помощью соответствующего выражения XPath.|  
|Разбивка на страницы|Не поддерживаются данным <xref:System.Web.UI.WebControls.XmlDataSource> элемента управления.|  
|Updating|Поддерживается, управляя <xref:System.Xml.XmlDataDocument> непосредственно и затем вызвать <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> метод.|  
|Удаление|Поддерживается, управляя <xref:System.Xml.XmlDataDocument> непосредственно и затем вызвать <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> метод.|  
|Вставка|Поддерживается, управляя <xref:System.Xml.XmlDataDocument> непосредственно и затем вызвать <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> метод.|  
|Кэширование|По умолчанию включен, с <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> , имеющим значение 0 (infinite) и <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> свойство <xref:System.Web.UI.DataSourceCacheExpiry.Absolute>.|  
  
<a name="data_view_object"></a>   
## <a name="data-view-object"></a>Объект представления данных  
 Поскольку <xref:System.Web.UI.WebControls.XmlDataSource> элемент управления поддерживает элементы управления с привязкой к данным для отображения иерархических данных, а также элементы управления для отображения табличных данных, элемент управления источником данных поддерживает несколько типов объектов представления источника данных для своих базовых данных XML. <xref:System.Web.UI.WebControls.XmlDataSource> Управления извлекает одно именованное <xref:System.Web.UI.WebControls.XmlDataSourceView> объекта при использовании с элементом управления с привязкой к данным, отображает табличные данные. <xref:System.Web.UI.IDataSource.GetViewNames%2A> Метод идентифицирует этот один с именем представления. При использовании с элементом управления с привязкой к данным, отображающий иерархические данные <xref:System.Web.UI.WebControls.XmlDataSource> извлекает элемент управления <xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView> для любой уникальный иерархических путей, передаваемых <xref:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView%2A> метод.  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Декларативный синтаксис  
  
```  
<asp:XmlDataSource  
    CacheDuration="string|Infinite"  
    CacheExpirationPolicy="Absolute|Sliding"  
    CacheKeyDependency="string"  
    DataFile="string"  
    EnableCaching="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnTransforming="Transforming event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    SkinID="string"  
    TransformArgumentList="string"  
    TransformFile="string"  
    Visible="True|False"  
    XPath="string"  
>  
    <Data>string</Data>  
    <Transform>string</Transform>  
</asp:XmlDataSource>  
```  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как использовать <xref:System.Web.UI.WebControls.XmlDataSource> управления <xref:System.Web.UI.WebControls.TreeView> элемента управления для отображения XML-данных из образца файла XML. Во втором примере показано, как использовать <xref:System.Web.UI.WebControls.XmlDataSource> шаблонный элемент управления <xref:System.Web.UI.WebControls.Repeater> управления для отображения данных XML.  
  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.XmlDataSource> управления <xref:System.Web.UI.WebControls.TreeView> управления для отображения данных XML. <xref:System.Web.UI.WebControls.XmlDataSource> Загружает XML-данные из XML-файла, обозначенную <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> свойство.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_1/CS/xmlds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_1/VB/xmlds1vb.aspx#1)]  
  
 В примере кода XML-файл содержит следующие данные:  
  
```  
<books>  
   <computerbooks>  
     <book title="Secrets of Silicon Valley" author="Sheryl Hunter"/>  
     <book title="Straight Talk About Computers" author="Dean Straight"/>  
     <book title="You Can Combat Computer Stress!" author="Marjorie Green"/>                  
   </computerbooks>  
   <cookbooks>  
     <book title="Silicon Valley Gastronomic Treats" author="Innes del Castill"/>  
   </cookbooks>  
</books>  
```  
  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.XmlDataSource> шаблонный элемент управления <xref:System.Web.UI.WebControls.Repeater> управления для отображения данных XML. <xref:System.Web.UI.WebControls.Repeater> Управления использует выражение XPath привязки данных для привязки к данным элементов в XML-документа, <xref:System.Web.UI.WebControls.XmlDataSource> представляет. Дополнительные сведения о `XPath` и `XPathSelect` синтаксис привязки данных в разделе <xref:System.Web.UI.XPathBinder> класса.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_14#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_14/CS/xmlds14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_14#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_14/VB/xmlds14vb.aspx#1)]  
  
 В примере кода XML-файл содержит следующие данные:  
  
```  
<?xml version="1.0" encoding="iso-8859-1"?>  
 <orders>  
   <order>  
     <customer id="12345" />  
     <customername>  
         <firstn>John</firstn>  
         <lastn>Smith</lastn>  
     </customername>  
     <transaction id="12345" />  
     <shipaddress>  
         <address1>1234 Tenth Avenue</address1>  
         <city>Bellevue</city>  
         <state>Washington</state>  
         <zip>98001</zip>  
     </shipaddress>  
     <summary>  
         <item dept="tools">screwdriver</item>  
         <item dept="tools">hammer</item>  
         <item dept="plumbing">fixture</item>  
     </summary>  
   </order>  
</orders>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Web.UI.IDataSource.GetViewNames" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlDataSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlDataSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Создает новый экземпляр класса <see cref="T:System.Web.UI.WebControls.XmlDataSource" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheDuration">
      <MemberSignature Language="C#" Value="public virtual int CacheDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheDuration" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.CacheDuration" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CacheDuration { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataSourceCacheDurationConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает длину промежутка времени (в секундах), в течение которого элемент управления источником данных кэширует извлеченные им данные.</summary>
        <value>Количество секунд, на протяжении которых элемент управления <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> кэширует результат операции извлечения. Значение по умолчанию — 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.XmlDataSource> Управления автоматически кэширует данные, если выполняются следующие условия:  
  
-   Свойству <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> задано значение `true`.  
  
-   <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> Свойству присвоено значение больше нуля, которое указывает количество секунд, в кэше хранятся данные перед кэш становится недействительным.  
  
 Любые изменения в <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> свойство или содержимое файла, содержащего XML-данных вызывает кэш недействительным.  
  
 По умолчанию <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> задано значение 0, означающее кэша не ограничена, и источник данных будет кэшировать данные, пока изменится XML-файл, от которого он зависит.  
  
 Поведение кэша регулируется сочетание длительность и <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> параметр. Если <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> равно <xref:System.Web.UI.DataSourceCacheExpiry.Absolute>, <xref:System.Web.UI.WebControls.XmlDataSource> управления кэширует данные в первой операции извлечения данных, хранит его в памяти того объема времени, заданного параметром <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>и делает недействительным после время закончился. Кэш обновляется при выполнении следующей операции. Если <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> равно <xref:System.Web.UI.DataSourceCacheExpiry.Sliding>, элемент управления источником данных кэширует данные в первой операции извлечения данных, но сбрасывает периода, за которые она содержит кэш после каждой последующей операции. Кэш истекает только при отсутствии активности в течение времени равно <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> с момента последнего извлечения данных.  
  
   
  
## Examples  
 В следующем примере кода показано включение кэширования при использовании <xref:System.Web.UI.WebControls.XmlDataSource> элемента управления для отображения данных, содержащихся в XML-файл. Кэширование при <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> свойству `true` и <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> присваивается количество секунд, кэширование данных элемента управления источником данных.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_16/CS/xmlds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_16/VB/xmlds16vb.aspx#1)]  
  
 В примере кода XML-файл содержит следующие данные:  
  
```  
<books>  
   <computerbooks>  
     <book title="Secrets of Silicon Valley" author="Sheryl Hunter"/>  
     <book title="Straight Talk About Computers" author="Dean Straight"/>  
     <book title="You Can Combat Computer Stress!" author="Marjorie Green"/>  
   </computerbooks>  
   <cookbooks>  
     <book title="Silicon Valley Gastronomic Treats" author="Innes del Castill"/>  
   </cookbooks>  
</books>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.EnableCaching" />
      </Docs>
    </Member>
    <Member MemberName="CacheExpirationPolicy">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheExpirationPolicy As DataSourceCacheExpiry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::DataSourceCacheExpiry CacheExpirationPolicy { System::Web::UI::DataSourceCacheExpiry get(); void set(System::Web::UI::DataSourceCacheExpiry value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceCacheExpiry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает политику истечения срока действия кэша, которая в сочетании со сроком кэширования описывает порядок кэширования в кэше, используемом элементом управления источником данных.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Web.UI.DataSourceCacheExpiry" />. Значением параметра политики истечения срока кэширования по умолчанию является <see cref="F:System.Web.UI.DataSourceCacheExpiry.Absolute" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поведение кэша определяется сочетанием <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> и <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> параметры. Если <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> равно <xref:System.Web.UI.DataSourceCacheExpiry.Absolute>, <xref:System.Web.UI.WebControls.XmlDataSource> кэширует данные в первой операции извлечения данных, хранит его в памяти того объема времени, заданного параметром <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>и делает недействительным после время закончился. Кэш обновляется при выполнении следующей операции. Если <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> равно <xref:System.Web.UI.DataSourceCacheExpiry.Sliding>, элемент управления источником данных кэширует данные в первой операции извлечения данных, но сбрасывает периода, за которые она содержит кэш после каждой последующей операции. Кэш истекает только в том случае, если отсутствует действие в течение времени равно <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> с момента последнего извлечения данных.  
  
   
  
## Examples  
 В следующем примере кода показано включение кэширования при использовании <xref:System.Web.UI.WebControls.XmlDataSource> элемента управления для отображения данных, содержащихся в XML-файл. Кэширование при <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> свойству `true` и <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> присваивается количество секунд, кэширование данных элемента управления источником данных.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_16/CS/xmlds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_16/VB/xmlds16vb.aspx#1)]  
  
 В примере кода XML-файл содержит следующие данные:  
  
```  
<books>  
   <computerbooks>  
     <book title="Secrets of Silicon Valley" author="Sheryl Hunter"/>  
     <book title="Straight Talk About Computers" author="Dean Straight"/>  
     <book title="You Can Combat Computer Stress!" author="Marjorie Green"/>                  
   </computerbooks>  
   <cookbooks>  
     <book title="Silicon Valley Gastronomic Treats" author="Innes del Castill"/>  
   </cookbooks>  
</books>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.EnableCaching" />
      </Docs>
    </Member>
    <Member MemberName="CacheKeyContext">
      <MemberSignature Language="C#" Value="public virtual string CacheKeyContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CacheKeyContext" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyContext" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheKeyContext As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CacheKeyContext { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение ключа кэша для элемента управления источником данных из состояния просмотра или добавляет ключ кэша в состояние просмотра.</summary>
        <value>Значение ключа кэша или пустая строка, если ключ кэша отсутствует в состоянии просмотра.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyContext%2A> Позволяет вручную создать ключ кэша для <xref:System.Web.UI.WebControls.XmlDataSource> элемента управления. Это необходимо только в том случае, если назначается объект, содержащий данные элемента управления, вместо указания файла, содержащего данные XML или XSLT. При назначении данных к элементу управления, данные не используется для создания ключа кэша. Вместо этого необходимо вручную создать уникальный ключ кэша, если планируется обновление объекта данных.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheKeyDependency">
      <MemberSignature Language="C#" Value="public virtual string CacheKeyDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CacheKeyDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheKeyDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CacheKeyDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает определенную пользователем зависимость ключа, связанную со всеми объектами кэша данных, созданными элементом управления источником данных. Срок действия всех объектов кэша истекает явным образом при истечении срока действия ключа.</summary>
        <value>Ключ, по которому идентифицируются все объекты кэша, созданные элементом управления <see cref="T:System.Web.UI.WebControls.XmlDataSource" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.XmlDataSource> Элемент управления поддерживает кэширование данных. При кэшировании данных <xref:System.Web.UI.WebControls.XmlDataSource> извлекает данные из кэша, а не из исходного файла данных. После истечения срока действия кэша, он извлекает данные из исходного файла и повторно кэширует данные.  
  
 Можно задать <xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A> свойство, чтобы создать зависимость между все записи кэша, созданные <xref:System.Web.UI.WebControls.XmlDataSource> управления и ключ. Все записи кэша программным путем можно нарушить в любое время с истекающим сроком действия ключа.  
  
 Из-за свойства, используемые для создания <xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A>, возможно, несколько <xref:System.Web.UI.WebControls.XmlDataSource> элементы управления могут использовать тот же кэш, в сценариях, где они загружаются и тех же данных из того же XML-файла и преобразования файла и с одинаковыми <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> и <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A>значение.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.EnableCaching" />
      </Docs>
    </Member>
    <Member MemberName="Data">
      <MemberSignature Language="C#" Value="public virtual string Data { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Data" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.Data" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Data As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Data { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.ComponentModel.MultilineStringConverter,System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает блок данных XML, к которому выполняется привязка элемента управления источником данных.</summary>
        <value>Строка встроенных данных XML, к которым привязывает элемент управления <see cref="T:System.Web.UI.WebControls.XmlDataSource" />. Значение по умолчанию — <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В декларативных сценариях <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> свойства, определенного как многострочный внутреннее свойство <xref:System.Web.UI.WebControls.XmlDataSource> объекта. Внутреннее свойство совместима с XML-данными, поскольку это дает возможность форматировать XML-данные любым способом, игнорируя проблемы заполнения знаков, такие как заполнение для символов кавычек.  
  
 Если оба <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> и <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> заданы свойства, <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> имеет приоритет и данные в XML-файл используется вместо XML-данных, указанной в <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> свойство.  
  
 Если изменить значение <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> свойства <xref:System.Web.UI.IDataSource.DataSourceChanged> события. Если включено кэширование и измените значение <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A>, кэш становится недействительным.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.XmlDataSource> управления для отображения встроенных XML-данных, содержащихся в <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> свойство с <xref:System.Web.UI.WebControls.TreeView> элемента управления.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_10/CS/xmlds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_10/VB/xmlds10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Выполняется загрузка документа.</exception>
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency" />
      </Docs>
    </Member>
    <Member MemberName="DataFile">
      <MemberSignature Language="C#" Value="public virtual string DataFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.XmlDataFileEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Задает имя XML-файла, к которому привязывается источник данных.</summary>
        <value>Абсолютный физический или относительный путь к XML-файлу, содержащему данные, представленные элементом управления <see cref="T:System.Web.UI.WebControls.XmlDataSource" />. Значение по умолчанию — <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если оба <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> и <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> заданы свойства, <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> имеет приоритет и данные в XML-файл используется вместо XML-данных, указанной в <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> свойство.  
  
 Если изменить значение <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> свойства <xref:System.Web.UI.IDataSource.DataSourceChanged> события. Если включено кэширование и измените значение <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>, кэш становится недействительным.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.XmlDataSource> управления для отображения XML-данные, содержащиеся в файле с <xref:System.Web.UI.WebControls.TreeView> элемента управления.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_1/CS/xmlds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_1/VB/xmlds1vb.aspx#1)]  
  
 В примере кода XML-файл содержит следующие данные:  
  
```  
<books>  
   <computerbooks>  
     <book title="Secrets of Silicon Valley" author="Sheryl Hunter"/>  
     <book title="Straight Talk About Computers" author="Dean Straight"/>  
     <book title="You Can Combat Computer Stress!" author="Marjorie Green"/>                  
   </computerbooks>  
   <cookbooks>  
     <book title="Silicon Valley Gastronomic Treats" author="Innes del Castill"/>  
   </cookbooks>  
</books>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Выполняется загрузка документа.</exception>
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.Data" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency" />
      </Docs>
    </Member>
    <Member MemberName="EnableCaching">
      <MemberSignature Language="C#" Value="public virtual bool EnableCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCaching" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.EnableCaching" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableCaching { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение позволяющее определить, включено ли кэширование для элемента управления <see cref="T:System.Web.UI.WebControls.XmlDataSource" />.</summary>
        <value>
          Значение <see langword="true" />, если кэширование данных для элемента управления источником данных включено; в противном случае — значение <see langword="false" />. Значение по умолчанию — <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.XmlDataSource> Управления автоматически кэширует данные при <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> свойству `true`. По умолчанию <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> задано значение 0, означающее кэша не ограничена, и источник данных будет кэшировать данные, пока изменится XML-файл, от которого он зависит. Если задать <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> свойство в значение больше 0 кэша хранит данные для этого количества секунд, прежде чем получить набор.  
  
 Если <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> свойству `true` и <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> имеет значение, записей кэша не обновляется автоматически при изменении параметров в списке аргументов для преобразования. В этом случае необходимо написать код для кэш становится недействительным, задав <xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода показано включение кэширования при использовании <xref:System.Web.UI.WebControls.XmlDataSource> элемента управления для отображения данных, содержащихся в XML-файл. Кэширование при <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> свойству `true` и <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> присваивается количество секунд, кэширование данных элемента управления источником данных.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_16/CS/xmlds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_16/VB/xmlds16vb.aspx#1)]  
  
 В примере кода XML-файл содержит следующие данные:  
  
```  
<books>  
   <computerbooks>  
     <book title="Secrets of Silicon Valley" author="Sheryl Hunter"/>  
     <book title="Straight Talk About Computers" author="Dean Straight"/>  
     <book title="You Can Combat Computer Stress!" author="Marjorie Green"/>                  
   </computerbooks>  
   <cookbooks>  
     <book title="Silicon Valley Gastronomic Treats" author="Innes del Castill"/>  
   </cookbooks>  
</books>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy" />
      </Docs>
    </Member>
    <Member MemberName="GetHierarchicalView">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HierarchicalDataSourceView GetHierarchicalView (string viewPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.HierarchicalDataSourceView GetHierarchicalView(string viewPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetHierarchicalView (viewPath As String) As HierarchicalDataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::HierarchicalDataSourceView ^ GetHierarchicalView(System::String ^ viewPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HierarchicalDataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewPath">Выражение XPath, указывающее узел, на основе которого строится текущее иерархическое представление.</param>
        <summary>Получает объект представления источника данных для элемента управления <see cref="T:System.Web.UI.WebControls.XmlDataSource" />. Значением параметра <paramref name="viewPath" /> может быть выражение XPath.</summary>
        <returns>Возвращает объект <see cref="T:System.Web.UI.WebControls.XmlHierarchicalDataSourceView" />, представляющий единственное представление данных, начиная с узла данных, заданного параметром <paramref name="viewPath" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно вызвать <xref:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView%2A> метод для извлечения <xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView> объекта, связанного с <xref:System.Web.UI.WebControls.XmlDataSource> элемента управления. При указании `viewPath` значение <xref:System.Web.UI.WebControls.XmlDataSource> управление возвращается объект представления источника данных, который представляет представление узла, идентифицируемого выражением `viewPath`, а также все его дочерние узлы. Если задать `viewPath` для <xref:System.String.Empty?displayProperty=nameWithType>, <xref:System.Web.UI.WebControls.XmlDataSource> управления проверяет <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> свойство для определения корневого узла, из которого необходимо создать представление источника данных. Если <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> свойство задано, <xref:System.Web.UI.WebControls.XmlDataSource> управления используется для возврата в одном представлении источника данных, каким образом `viewPath` используется выражение. Если <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> свойство не задано, <xref:System.Web.UI.WebControls.XmlDataSource> управление возвращается представление всех данных узлов в XML-данных.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXmlDocument">
      <MemberSignature Language="C#" Value="public System.Xml.XmlDocument GetXmlDocument ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.XmlDocument GetXmlDocument() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument" />
      <MemberSignature Language="VB.NET" Value="Public Function GetXmlDocument () As XmlDocument" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::XmlDocument ^ GetXmlDocument();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlDocument</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Загружает данные XML в память (непосредственно, из базового хранилища данных или из кэша) и возвращает их в форме объекта <see cref="T:System.Xml.XmlDataDocument" />.</summary>
        <returns>Объект <see cref="T:System.Xml.XmlDataDocument" />, представляющий данные XML, заданные в свойстве <see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /> или файле, указанном в свойстве <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />, с применением всех преобразований и запросов <see cref="P:System.Web.UI.WebControls.XmlDataSource.XPath" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> метод для прямого доступа к представление базовых XML-данных в памяти.  
  
 Можно управлять возвращаемый <xref:System.Xml.XmlDataDocument> объекта, а затем вызвать <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> для сохранения изменений в XML-файл, указанный параметром <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> свойство. Ряд требований, которые должны быть выполнены перед <xref:System.Xml.XmlDataDocument> объекта было сохранено успешно. Дополнительные сведения см. в описании метода <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. Первый пример демонстрирует, как использовать <xref:System.Web.UI.WebControls.XmlDataSource> управления <xref:System.Web.UI.WebControls.TreeView> управления для отображения и изменения XML-данные, содержащиеся в XML-файл. Во втором примере показано, как использовать <xref:System.Web.UI.WebControls.XmlDataSource> элемента управления с помощью шаблонного <xref:System.Web.UI.WebControls.Repeater> элемента управления для отображения и изменения XML-данные, содержащиеся в XML-файл.  
  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.XmlDataSource> управления <xref:System.Web.UI.WebControls.TreeView> управления для отображения и изменения XML-данные, содержащиеся в XML-файл. Данных обрабатывается в памяти с помощью <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> метод каждый раз при выборе <xref:System.Web.UI.WebControls.TreeView> узел и затем сохраненные в XML-файле. Наконец <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> будет вызван на <xref:System.Web.UI.WebControls.TreeView> управления для обновления данных, которые отображаются.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_17/CS/xmlds17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_17/VB/xmlds17vb.aspx#1)]  
  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.XmlDataSource> элемента управления с помощью шаблонного <xref:System.Web.UI.WebControls.Repeater> элемента управления для отображения и изменения XML-данные, содержащиеся в XML-файл. Как в предыдущем примере будут обрабатывать данные в памяти с помощью <xref:System.Xml.XmlDataDocument> извлекается с <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> метод. Наконец <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> будет вызван на <xref:System.Web.UI.WebControls.TreeView> управления для обновления данных, которые отображаются.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_18/CS/xmlds18cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_18/VB/xmlds18vb.aspx#1)]  
  
 В следующем примере кода XML-файл содержит следующие данные:  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
 <bookstore xmlns:bk="urn:samples">  
   <book genre="novel" publicationdate="1999" bk:ISBN="0000000000">  
     <title>Secrets of Silicon Valley</title>  
     <author>  
       <first-name>Sheryl</first-name>  
       <last-name>Hunter</last-name>  
     </author>  
     <price>24.95</price>"   
     </book>  
   <book genre="novel" publicationdate="1985" bk:ISBN="1111111111">  
     <title>Straight Talk About Computers</title>  
     <author>  
       <first-name>Dean</first-name>  
       <last-name>Straight</last-name>  
     </author>  
     <price>29.95</price>  
   </book>  
</bookstore>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">URL-адрес для свойства <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> задан, однако у элемента управления <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> отсутствуют надлежащие разрешения для веб-ресурса.</exception>
        <exception cref="T:System.NotSupportedException">URL-адрес для свойства <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> задан, однако он не соответствует протоколу HTTP.  
  
 \- или -  
  
 Относительный путь времени разработки не правильно сопоставлен конструктором перед использованием элемента управления <see cref="T:System.Web.UI.WebControls.XmlDataSource" />.  
  
 \- или -  
  
 Разрешено как кэширование, так и олицетворение клиента. Элемент управления <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> не поддерживает кэширование при разрешенном олицетворении клиента.</exception>
        <exception cref="T:System.Web.HttpException">Доступ по пути, заданному для свойства <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />, запрещен.</exception>
        <altmember cref="M:System.Web.UI.WebControls.XmlDataSource.Save" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />
      </Docs>
    </Member>
    <Member MemberName="OnTransforming">
      <MemberSignature Language="C#" Value="protected virtual void OnTransforming (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTransforming(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTransforming (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTransforming(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Web.UI.WebControls.XmlDataSource.Transforming" /> перед тем, как элемент управления <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> выполняет XSLT-преобразование данных XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
 Метод <xref:System.Web.UI.WebControls.XmlDataSource.OnTransforming%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.XmlDataSource> управления <xref:System.Web.UI.WebControls.TreeView> элемента управления для отображения преобразования XML-данных. Преобразование XML выполняется с помощью таблицы стилей, обозначенном <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> свойство. Кроме того, таблица стилей использует аргументы преобразования, которые передаются в элемент управления источником данных в <xref:System.Xml.Xsl.XsltArgumentList> объекта во время выполнения. В примере кода показан способ передачи <xref:System.Xml.Xsl.XsltArgumentList> объекта в элемент управления источником данных, обрабатывая <xref:System.Web.UI.WebControls.XmlDataSource.Transforming> набор событий с пользовательский обработчик событий, который определяется имя метода для <xref:System.Web.UI.WebControls.XmlDataSource.OnTransforming%2A> метод.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_9/CS/xmlds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_9/VB/xmlds9vb.aspx#1)]  
  
 В примере кода XML-файл содержит следующие данные:  
  
```  
<bookstore>  
   <genre name="fiction">  
     <book ISBN="0000000000">  
       <title>Secrets of Silicon Valley</title>  
       <price>12.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />             
         <chapter num="2" name="Body" />            
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
   <genre name="novel">  
     <book genre="novel" ISBN="1111111111">  
       <title>Straight Talk About Computers</title>  
       <price>24.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />   
         <chapter num="2" name="Body" />  
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
</bookstore>  
```  
  
 Преобразование XML выполняется с помощью следующей таблицы стилей.  
  
```  
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">  
 <xsl:param name="purchdate"/>  
 <xsl:template match="bookstore">  
   <bookstore>  
     <xsl:apply-templates select="genre"/>  
   </bookstore>  
 </xsl:template>  
 <xsl:template match="genre">  
   <genre>  
     <xsl:attribute name="name">  
       <xsl:value-of select="@name"/>  
     </xsl:attribute>  
     <xsl:apply-templates select="book"/>  
   </genre>  
 </xsl:template>  
 <xsl:template match="book">  
   <book>  
     <xsl:attribute name="ISBN">  
       <xsl:value-of select="@ISBN"/>  
     </xsl:attribute>  
     <xsl:attribute name="title">  
       <xsl:value-of select="title"/>  
       Price: <xsl:value-of select="price"/>  
           15% discount if purchased by: <xsl:value-of select="$purchdate"/>        
     </xsl:attribute>  
     <xsl:apply-templates select="chapters/chapter" />  
   </book>  
 </xsl:template>  
 <xsl:template match="chapter">  
   <chapter>  
     <xsl:attribute name="num">  
       <xsl:value-of select="@num"/>  
     </xsl:attribute>  
     <xsl:attribute name="name">  
       <xsl:value-of select="@name"/>  
     </xsl:attribute>  
     <xsl:apply-templates/>  
   </chapter>  
 </xsl:template>  
</xsl:stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)" /> в производном классе нужно убедиться, что для вызова <see cref="M:System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)" /> метод базового класса, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.XmlDataSource.Transforming" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.Transform" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.TransformFile" />
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlDataSource.Save" />
      <MemberSignature Language="VB.NET" Value="Public Sub Save ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Сохраняет на диске данные XML, хранимые в настоящий момент в памяти элементом управления <see cref="T:System.Web.UI.WebControls.XmlDataSource" />, если задано свойство <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Хотя <xref:System.Web.UI.WebControls.XmlDataSource> управления обычно используется в сценариях привязки к данным только для чтения, можно использовать <xref:System.Web.UI.WebControls.XmlDataSource> элемента управления для редактирования XML-данных в базовые данные XML. В этих сценариях загрузить XML-данные из XML-файла с <xref:System.Web.UI.WebControls.XmlDataSource> элемента управления. Можно изменить <xref:System.Xml.XmlDataDocument> в памяти с помощью <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> метода, а затем сохранить в файле XML-данных путем вызова <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> метод. Это для редактирования XML возможна в том случае, если выполняются следующие условия:  
  
-   XML-данных загружается из файла XML, обозначенном <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> свойства не из встроенных XML-данных, указанной в <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> свойство.  
  
-   Преобразования XSLT не указывается в <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> или <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> свойства.  
  
 <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> Метод не обрабатывает параллельные операции сохранения по различным запросам. Если более чем один пользователь редактирует файл XML через <xref:System.Web.UI.WebControls.XmlDataSource> управления, нет никакой гарантии, что все пользователи работают с теми же данными. Существует также возможность <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> сбой из-за те же проблемы параллелизма операции.  
  
   
  
## Examples  
 Этот раздел содержит два примера кода. В первом примере кода показано, как использовать <xref:System.Web.UI.WebControls.XmlDataSource> управления <xref:System.Web.UI.WebControls.TreeView> управления для отображения и изменения XML-данные, содержащиеся в XML-файл. Во втором примере кода демонстрируется использование <xref:System.Web.UI.WebControls.XmlDataSource> элемента управления с помощью шаблонного <xref:System.Web.UI.WebControls.Repeater> элемента управления для отображения и изменения XML-данные, содержащиеся в XML-файл.  
  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.XmlDataSource> управления <xref:System.Web.UI.WebControls.TreeView> управления для отображения и изменения XML-данные, содержащиеся в XML-файл. Данных обрабатывается в памяти с помощью <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> метод каждый раз при выборе <xref:System.Web.UI.WebControls.TreeView> узел и затем сохраненные в XML-файле. Наконец <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> будет вызван на <xref:System.Web.UI.WebControls.TreeView> управления для обновления данных, которые отображаются.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_17/CS/xmlds17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_17/VB/xmlds17vb.aspx#1)]  
  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.XmlDataSource> элемента управления с помощью шаблонного <xref:System.Web.UI.WebControls.Repeater> элемента управления для отображения и изменения XML-данные, содержащиеся в XML-файл. Как в предыдущем примере будут обрабатывать данные в памяти с помощью <xref:System.Xml.XmlDataDocument> объекта, полученного методом <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> метод. Наконец <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> будет вызван на <xref:System.Web.UI.WebControls.TreeView> управления для обновления данных, которые отображаются.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_18/CS/xmlds18cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_18/VB/xmlds18vb.aspx#1)]  
  
 В следующем примере кода XML-файл содержит следующие данные:  
  
```  
<?xml version="1.0" encoding="utf-8"?>  
 <bookstore xmlns:bk="urn:samples">  
   <book genre="novel" publicationdate="1999" bk:ISBN="0000000000">  
     <title>Secrets of Silicon Valley</title>  
     <author>  
       <first-name>Sheryl</first-name>  
       <last-name>Hunter</last-name>  
     </author>  
     <price>24.95</price>"   
     </book>  
   <book genre="novel" publicationdate="1985" bk:ISBN="1111111111">  
     <title>Straight Talk About Computers</title>  
     <author>  
       <first-name>Dean</first-name>  
       <last-name>Straight</last-name>  
     </author>  
     <price>29.95</price>  
   </book>  
</bookstore>  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Данные XML были загружены не с помощью свойства <see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" />, а с помощью свойства <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />.  
  
 \- или -  
  
 URL-адрес для свойства <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> задан, однако у элемента управления <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> отсутствуют надлежащие разрешения для веб-ресурса.</exception>
        <exception cref="T:System.NotSupportedException">URL-адрес для свойства <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" /> задан, однако он не соответствует протоколу HTTP.  
  
 \- или -  
  
 Относительный путь времени разработки не правильно сопоставлен конструктором перед использованием элемента управления <see cref="T:System.Web.UI.WebControls.XmlDataSource" />.</exception>
        <exception cref="T:System.Web.HttpException">Доступ по пути, заданному для свойства <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />, запрещен.</exception>
        <altmember cref="M:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.ContainsListCollection">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IListSource.ContainsListCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#ContainsListCollection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ContainsListCollection As Boolean Implements IListSource.ContainsListCollection" />
      <MemberSignature Language="C++ CLI" Value="property bool System.ComponentModel.IListSource.ContainsListCollection { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Описание этого члена см. в разделе <see cref="P:System.ComponentModel.IListSource.ContainsListCollection" />.</summary>
        <value>
          Значение <see langword="true" />, если коллекция является коллекцией объектов <see cref="T:System.Collections.IList" />; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться только тогда, когда <xref:System.Web.UI.WebControls.XmlDataSource> экземпляр приводится к <xref:System.ComponentModel.IListSource> интерфейса.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IListSource" />
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.GetList">
      <MemberSignature Language="C#" Value="System.Collections.IList IListSource.GetList ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IList System.ComponentModel.IListSource.GetList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#GetList" />
      <MemberSignature Language="VB.NET" Value="Function GetList () As IList Implements IListSource.GetList" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IList ^ System.ComponentModel.IListSource.GetList() = System::ComponentModel::IListSource::GetList;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Описание этого члена см. в разделе <see cref="M:System.ComponentModel.IListSource.GetList" />.</summary>
        <returns>Объект, реализующий интерфейс <see cref="T:System.Collections.IList" />, который можно привязать к источнику данных.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться только тогда, когда <xref:System.Web.UI.WebControls.XmlDataSource> экземпляр приводится к <xref:System.ComponentModel.IListSource> интерфейса.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.ComponentModel.IListSource" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataSource.DataSourceChanged">
      <MemberSignature Language="C#" Value="event EventHandler System.Web.UI.IDataSource.DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler System.Web.UI.IDataSource.DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Custom Event DataSourceChanged As EventHandler Implements System.Web.UI.IDataSource" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.IDataSource.DataSourceChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataSource.GetView">
      <MemberSignature Language="C#" Value="System.Web.UI.DataSourceView IDataSource.GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.DataSourceView System.Web.UI.IDataSource.GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetView (viewName As String) As DataSourceView Implements IDataSource.GetView" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Web::UI::DataSourceView ^ System.Web.UI.IDataSource.GetView(System::String ^ viewName) = System::Web::UI::IDataSource::GetView;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetView(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">Имя извлекаемого представления. Если задано значение <see cref="F:System.String.Empty" />, для элемента управления <see cref="T:System.Web.UI.WebControls.XmlDataSource" /> извлекается представление по умолчанию.</param>
        <summary>Возвращает названное представление источника данных, связанное с элементом управления источника данных.</summary>
        <returns>Возвращает именованный объект <see cref="T:System.Web.UI.WebControls.XmlDataSourceView" />, связанный с элементом управления <see cref="T:System.Web.UI.WebControls.XmlDataSource" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IDataSource.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataSource.GetViewNames">
      <MemberSignature Language="C#" Value="System.Collections.ICollection IDataSource.GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.ICollection System.Web.UI.IDataSource.GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Function GetViewNames () As ICollection Implements IDataSource.GetViewNames" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::ICollection ^ System.Web.UI.IDataSource.GetViewNames() = System::Web::UI::IDataSource::GetViewNames;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetViewNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Описание этого члена см. в разделе <see cref="M:System.Web.UI.IDataSource.GetViewNames" />.</summary>
        <returns>Объект, реализующий интерфейс <see cref="T:System.Collections.ICollection" /> и содержащий имена, представляющие список объектов представления, связанных с объектом <see cref="T:System.Web.UI.IDataSource" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться только тогда, когда <xref:System.Web.UI.WebControls.XmlDataSource> экземпляр приводится к <xref:System.Web.UI.IDataSource> интерфейса.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataSource" />
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public virtual string Transform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Transform" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.Transform" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Transform As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Transform { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.ComponentModel.MultilineStringConverter,System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает блок данных XSL, который определяет преобразование XSLT для данных XML, управление которыми осуществляется с помощью элемента управления <see cref="T:System.Web.UI.WebControls.XmlDataSource" />.</summary>
        <value>Строка встроенных данных XSL, которая определяет преобразование XML для данных, содержащихся в свойствах <see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /> или <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />. Значение по умолчанию — <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В декларативных сценариях <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> свойства, определенного как многострочный внутреннее свойство <xref:System.Web.UI.WebControls.XmlDataSource> объекта. Внутреннее свойство совместимо с данными таблицы стилей XSL, поскольку это дает возможность форматировать стилей любым способом, игнорируя проблемы заполнения знаков, такие как заполнение для символов кавычек.  
  
 Если оба <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> и <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> заданы свойства, <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> имеет приоритет и данные в файл таблицы стилей XSL (.xsl) используется вместо элементы таблицы стилей, указанный в <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> свойство. Если выражение XPath задается с помощью <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> свойство, оно применяется после преобразования данных XML.  
  
 Если изменить значение <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> свойства <xref:System.Web.UI.IDataSource.DataSourceChanged> события. Если включено кэширование и измените значение <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>, кэш становится недействительным.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.XmlDataSource> Класс использует устаревший <xref:System.Xml.Xsl.XslTransform> классом для выполнения преобразований XSL. Если вы хотите использовать возможности таблицы стилей, введенные после <xref:System.Xml.Xsl.XslTransform> класс был объявлен устаревшим, применять их вручную с помощью <xref:System.Xml.Xsl.XslCompiledTransform> класса.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.XmlDataSource> элемента управления с помощью шаблонного <xref:System.Web.UI.WebControls.Repeater> элемента управления для отображения преобразования XML-данных. Таблицы стилей, которая выполняет преобразование будет определен как встроенный по <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> свойство элемента управления источником данных.  
  
  
  
 В примере кода XML-файл содержит следующие данные:  
  
```  
<?xml version="1.0" encoding="iso-8859-1"?>  
 <orders>  
   <order>  
     <customer id="12345" />  
     <customername>  
         <firstn>Todd</firstn>  
         <lastn>Rowe</lastn>  
     </customername>  
     <transaction id="12345" />  
     <shipaddress>  
         <address1>1234 Tenth Avenue</address1>  
         <city>Bellevue</city>  
         <state>Washington</state>  
         <zip>98001</zip>  
     </shipaddress>  
     <summary>  
         <item dept="tools">screwdriver</item>  
         <item dept="tools">hammer</item>  
         <item dept="plumbing">fixture</item>  
     </summary>  
   </order>  
</orders>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Выполняется загрузка документа.</exception>
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.TransformFile" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency" />
      </Docs>
    </Member>
    <Member MemberName="TransformArgumentList">
      <MemberSignature Language="C#" Value="public virtual System.Xml.Xsl.XsltArgumentList TransformArgumentList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Xsl.XsltArgumentList TransformArgumentList" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TransformArgumentList As XsltArgumentList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Xml::Xsl::XsltArgumentList ^ TransformArgumentList { System::Xml::Xsl::XsltArgumentList ^ get(); void set(System::Xml::Xsl::XsltArgumentList ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Xsl.XsltArgumentList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Предоставляет список аргументов XSLT, используемых совместно с таблицей стилей, определенной свойствами <see cref="P:System.Web.UI.WebControls.XmlDataSource.Transform" /> или <see cref="P:System.Web.UI.WebControls.XmlDataSource.TransformFile" />, для выполнения преобразования данных XML.</summary>
        <value>Объект<see cref="T:System.Xml.Xsl.XsltArgumentList" />, содержащий параметры и объекты XSLT, применяемые к данным XML при загрузке этих данные элементом управления <see cref="T:System.Web.UI.WebControls.XmlDataSource" />. Значение по умолчанию — <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Задать <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> свойство при <xref:System.Web.UI.WebControls.XmlDataSource.Transforming> события убедитесь параметры XSLT доступны во время применения преобразования XSLT к XML-данных.  
  
 Если <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> свойству `true` и <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> имеет значение, записей кэша не обновляется автоматически при изменении параметров в списке аргументов для преобразования. В этом случае необходимо написать код для кэш становится недействительным, задав <xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.XmlDataSource> с <xref:System.Web.UI.WebControls.TreeView> элемента управления для отображения преобразования XML-данных. Преобразование XML выполняется с помощью таблицы стилей, обозначенном <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> свойство. Кроме того, таблица стилей использует аргументы преобразования, которые передаются в элемент управления источником данных в <xref:System.Xml.Xsl.XsltArgumentList> объекта во время выполнения. В примере кода показан способ передачи <xref:System.Xml.Xsl.XsltArgumentList> в элемент управления источником данных, обрабатывая <xref:System.Web.UI.WebControls.XmlDataSource.Transforming> событие с пользовательский обработчик событий.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_9/CS/xmlds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_9/VB/xmlds9vb.aspx#1)]  
  
 В примере кода XML-файл содержит следующие данные:  
  
```  
<bookstore>  
   <genre name="fiction">  
     <book ISBN="0000000000">  
       <title>Secrets of Silicon Valley</title>  
       <price>12.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />             
         <chapter num="2" name="Body" />            
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
   <genre name="novel">  
     <book genre="novel" ISBN="1111111111">  
       <title>Straight Talk About Computers</title>  
       <price>24.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />   
         <chapter num="2" name="Body" />  
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
</bookstore>  
```  
  
 Преобразование XML-данных выполняется с использованием следующей таблицы стилей.  
  
```  
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">  
 <xsl:param name="purchdate"/>  
 <xsl:template match="bookstore">  
   <bookstore>  
     <xsl:apply-templates select="genre"/>  
   </bookstore>  
 </xsl:template>  
 <xsl:template match="genre">  
   <genre>  
     <xsl:attribute name="name">  
       <xsl:value-of select="@name"/>  
     </xsl:attribute>  
     <xsl:apply-templates select="book"/>  
   </genre>  
 </xsl:template>  
 <xsl:template match="book">  
   <book>  
     <xsl:attribute name="ISBN">  
       <xsl:value-of select="@ISBN"/>  
     </xsl:attribute>  
     <xsl:attribute name="title">  
       <xsl:value-of select="title"/>  
       Price: <xsl:value-of select="price"/>  
           15% discount if purchased by: <xsl:value-of select="$purchdate"/>        
     </xsl:attribute>  
     <xsl:apply-templates select="chapters/chapter" />  
   </book>  
 </xsl:template>  
 <xsl:template match="chapter">  
   <chapter>  
     <xsl:attribute name="num">  
       <xsl:value-of select="@num"/>  
     </xsl:attribute>  
     <xsl:attribute name="name">  
       <xsl:value-of select="@name"/>  
     </xsl:attribute>  
     <xsl:apply-templates/>  
   </chapter>  
 </xsl:template>  
</xsl:stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.XmlDataSource.Transforming" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.Transform" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.TransformFile" />
      </Docs>
    </Member>
    <Member MemberName="TransformFile">
      <MemberSignature Language="C#" Value="public virtual string TransformFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TransformFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.TransformFile" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TransformFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TransformFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.XslTransformFileEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Задает имя XSL-файла (.xsl), который определяет преобразование XSLT для данных XML, управление которыми осуществляется с помощью элемента управления <see cref="T:System.Web.UI.WebControls.XmlDataSource" />.</summary>
        <value>Абсолютный физический или относительный путь к файлу таблицы стилей XSL, определяющему преобразование XML, выполняемое с данными, содержащимися в свойствах <see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /> или <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />. Значение по умолчанию — <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если оба <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> и <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> заданы свойства, <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> имеет приоритет и данные в файл таблицы стилей XSL (.xsl) используется вместо элементы таблицы стилей, указанный в <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> свойство. Если выражение XPath задается с помощью <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> свойство, оно применяется после преобразования данных XML.  
  
 Если изменить значение <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> свойства <xref:System.Web.UI.IDataSource.DataSourceChanged> события. Если включено кэширование и измените значение <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>, кэш становится недействительным.  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.XmlDataSource> Класс использует устаревший <xref:System.Xml.Xsl.XslTransform> классом для выполнения преобразований XSL. Если вы хотите использовать возможности таблицы стилей, введенные после <xref:System.Xml.Xsl.XslTransform> класс был объявлен устаревшим, применять их вручную с помощью <xref:System.Xml.Xsl.XslCompiledTransform> класса.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.XmlDataSource> управления и <xref:System.Web.UI.WebControls.TreeView> элемента управления для отображения преобразования XML-данных в веб-форму. Преобразование выполняется с помощью таблицы стилей, обозначенном <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> свойство. Можно также указать дополнительные аргументы преобразования для таблицу стилей с помощью <xref:System.Xml.Xsl.XsltArgumentList>. Дополнительные сведения см. в описании свойства <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A>.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_5/CS/xmlds5cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_5/VB/xmlds5vb.aspx#1)]  
  
 В примере кода XML-файл содержит следующие данные:  
  
```  
<bookstore>  
   <genre name="fiction">  
     <book ISBN="0000000000">  
       <title>Secrets of Silicon Valley</title>  
       <price>12.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />             
         <chapter num="2" name="Body" />            
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
   <genre name="novel">  
     <book genre="novel" ISBN="1111111111">  
       <title>Straight Talk About Computers</title>  
       <price>24.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />   
         <chapter num="2" name="Body" />  
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
</bookstore>  
```  
  
 Таблицы стилей XSL, который выполняет преобразование XML имеет следующую структуру:  
  
```  
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">  
 <xsl:template match="bookstore">  
   <bookstore>  
     <xsl:apply-templates select="genre"/>  
   </bookstore>  
 </xsl:template>  
 <xsl:template match="genre">  
   <genre>  
     <xsl:attribute name="name">  
       <xsl:value-of select="@name"/>  
     </xsl:attribute>  
     <xsl:apply-templates select="book"/>  
   </genre>  
 </xsl:template>  
 <xsl:template match="book">  
   <book>  
     <xsl:attribute name="ISBN">  
       <xsl:value-of select="@ISBN"/>  
     </xsl:attribute>  
     <xsl:attribute name="title">  
       <xsl:value-of select="title"/>  
     </xsl:attribute>  
     <xsl:attribute name="price">  
       <xsl:value-of select="price"/>  
     </xsl:attribute>  
     <xsl:apply-templates select="chapters/chapter" />  
   </book>  
 </xsl:template>  
 <xsl:template match="chapter">  
   <chapter>  
     <xsl:attribute name="num">  
       <xsl:value-of select="@num"/>  
     </xsl:attribute>  
     <xsl:attribute name="name">  
       <xsl:value-of select="@name"/>  
     </xsl:attribute>  
     <xsl:apply-templates/>  
   </chapter>  
 </xsl:template>  
</xsl:stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Выполняется загрузка документа.</exception>
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.Transform" />
        <altmember cref="P:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency" />
      </Docs>
    </Member>
    <Member MemberName="Transforming">
      <MemberSignature Language="C#" Value="public event EventHandler Transforming;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Transforming" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.XmlDataSource.Transforming" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Transforming As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Transforming;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит перед тем, как таблица стилей, определенная свойством <see cref="P:System.Web.UI.WebControls.XmlDataSource.Transform" /> или заданная с помощью свойства <see cref="P:System.Web.UI.WebControls.XmlDataSource.TransformFile" />, применяется к данным XML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обрабатывать <xref:System.Web.UI.WebControls.XmlDataSource.Transforming> событий для задания <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> свойство с <xref:System.Xml.Xsl.XsltArgumentList> перед <xref:System.Web.UI.WebControls.XmlDataSource> элемент управления выполняет преобразование XML.  
  
 Дополнительные сведения об обработке событий см. в разделе [NIB: Потребление событий](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.XmlDataSource> управления <xref:System.Web.UI.WebControls.TreeView> элемента управления для отображения преобразования XML-данных. Преобразование XML выполняется с помощью таблицы стилей, обозначенном <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> свойство. Кроме того, таблица стилей использует аргументы преобразования, которые передаются в элемент управления источником данных в <xref:System.Xml.Xsl.XsltArgumentList> во время выполнения. В примере кода показан способ передачи <xref:System.Xml.Xsl.XsltArgumentList> объекта в элемент управления источником данных, обрабатывая <xref:System.Web.UI.WebControls.XmlDataSource.Transforming> событие с пользовательский обработчик событий.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_9/CS/xmlds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_9/VB/xmlds9vb.aspx#1)]  
  
 В примере кода XML-файл содержит следующие данные:  
  
```  
<bookstore>  
   <genre name="fiction">  
     <book ISBN="0000000000">  
       <title>Secrets of Silicon Valley</title>  
       <price>12.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />             
         <chapter num="2" name="Body" />            
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
   <genre name="novel">  
     <book genre="novel" ISBN="1111111111">  
       <title>Straight Talk About Computers</title>  
       <price>24.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />   
         <chapter num="2" name="Body" />  
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
</bookstore>  
```  
  
 Преобразование XML-данных выполняется с использованием следующей таблицы стилей:  
  
```  
<xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform">  
 <xsl:param name="purchdate"/>  
 <xsl:template match="bookstore">  
   <bookstore>  
     <xsl:apply-templates select="genre"/>  
   </bookstore>  
 </xsl:template>  
 <xsl:template match="genre">  
   <genre>  
     <xsl:attribute name="name">  
       <xsl:value-of select="@name"/>  
     </xsl:attribute>  
     <xsl:apply-templates select="book"/>  
   </genre>  
 </xsl:template>  
 <xsl:template match="book">  
   <book>  
     <xsl:attribute name="ISBN">  
       <xsl:value-of select="@ISBN"/>  
     </xsl:attribute>  
     <xsl:attribute name="title">  
       <xsl:value-of select="title"/>  
       Price: <xsl:value-of select="price"/>  
           15% discount if purchased by: <xsl:value-of select="$purchdate"/>        
     </xsl:attribute>  
     <xsl:apply-templates select="chapters/chapter" />  
   </book>  
 </xsl:template>  
 <xsl:template match="chapter">  
   <chapter>  
     <xsl:attribute name="num">  
       <xsl:value-of select="@num"/>  
     </xsl:attribute>  
     <xsl:attribute name="name">  
       <xsl:value-of select="@name"/>  
     </xsl:attribute>  
     <xsl:apply-templates/>  
   </chapter>  
 </xsl:template>  
</xsl:stylesheet>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="XPath">
      <MemberSignature Language="C#" Value="public virtual string XPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.XmlDataSource.XPath" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property XPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ XPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Задает выражение XPath, которое нужно применить к данным XML, содержащимся в свойстве <see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /> или в XML-файле, заданном свойством <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />.</summary>
        <value>Строка, представляющая выражение XPath, которое можно использовать для фильтрации данных, содержащихся в свойстве <see cref="P:System.Web.UI.WebControls.XmlDataSource.Data" /> или в XML-файле, заданном свойством <see cref="P:System.Web.UI.WebControls.XmlDataSource.DataFile" />. Значение по умолчанию — <see cref="F:System.String.Empty" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения о выражениях привязки данных XPath см. в разделе [привязка табличного элемента управления к элементу управления XmlDataSource](http://msdn.microsoft.com/library/d6bf202f-6454-45fd-9424-e17f6c7eafe8).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется использование <xref:System.Web.UI.WebControls.XmlDataSource> элемента управления с помощью шаблонного <xref:System.Web.UI.WebControls.Repeater> элемента управления для отображения XML-данных, фильтрация которой выполнялась с использованием выражения XPath. В этом примере синтаксис XPath используется для фильтрации XML-данных при <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> задано свойство элемента управления источником данных и также привязывает элементы <xref:System.Web.UI.WebControls.Repeater> шаблон элемента управления к данным XML.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.XmlDataSource_8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_8/CS/xmlds8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.XmlDataSource_8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.XmlDataSource_8/VB/xmlds8vb.aspx#1)]  
  
 В примере кода XML-файл содержит следующие данные:  
  
```  
<bookstore>  
   <genre name="fiction">  
     <book ISBN="0000000000">  
       <title>Secrets of Silicon Valley</title>  
       <price>12.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />             
         <chapter num="2" name="Body" />            
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
   <genre name="novel">  
     <book genre="novel" ISBN="1111111111">  
       <title>Straight Talk About Computers</title>  
       <price>24.95</price>  
       <chapters>  
         <chapter num="1" name="Introduction" />   
         <chapter num="2" name="Body" />  
         <chapter num="3" name="Conclusion" />  
       </chapters>  
     </book>  
   </genre>  
</bookstore>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Выполняется загрузка документа.</exception>
      </Docs>
    </Member>
  </Members>
</Type>