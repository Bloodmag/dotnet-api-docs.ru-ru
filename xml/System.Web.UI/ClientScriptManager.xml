<Type Name="ClientScriptManager" FullName="System.Web.UI.ClientScriptManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="73373c29a93b5ff53507a84d4a623470605a172f" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39875301" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ClientScriptManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClientScriptManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ClientScriptManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClientScriptManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientScriptManager sealed" />
  <TypeSignature Language="F#" Value="type ClientScriptManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="13ad9-101">Определяет методы для управления клиентскими скриптами в веб-приложениях.</span>
      <span class="sxs-lookup">
        <span data-stu-id="13ad9-101">Defines methods for managing client scripts in Web applications.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13ad9-102"><xref:System.Web.UI.ClientScriptManager> Класс используется для управления клиентских скриптов и добавить их в веб-приложений.</span><span class="sxs-lookup"><span data-stu-id="13ad9-102">The <xref:System.Web.UI.ClientScriptManager> class is used to manage client scripts and add them to Web applications.</span></span> <span data-ttu-id="13ad9-103">Можно получить ссылку на <xref:System.Web.UI.ClientScriptManager> класса из <xref:System.Web.UI.Page.ClientScript%2A> свойство <xref:System.Web.UI.Page> объекта.</span><span class="sxs-lookup"><span data-stu-id="13ad9-103">You can get a reference to the <xref:System.Web.UI.ClientScriptManager> class from the <xref:System.Web.UI.Page.ClientScript%2A> property of the <xref:System.Web.UI.Page> object.</span></span>  
  
 <span data-ttu-id="13ad9-104">Можно добавить клиентский скрипт на веб-страницу декларативно, включив его в разметке HTML страницы.</span><span class="sxs-lookup"><span data-stu-id="13ad9-104">You can add a client script to a Web page declaratively by including the script in the HTML markup of the page.</span></span> <span data-ttu-id="13ad9-105">Тем не менее существуют ситуации, когда необходимо динамически добавить клиентского скрипта.</span><span class="sxs-lookup"><span data-stu-id="13ad9-105">However, there are situations when adding client script dynamically is needed.</span></span> <span data-ttu-id="13ad9-106">Чтобы добавить сценарий динамически, используйте <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> метод, <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> метод, <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> метод, или <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> метод, в зависимости от того, как и когда вы хотите добавить скрипт.</span><span class="sxs-lookup"><span data-stu-id="13ad9-106">To add a script dynamically, use the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method, the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method, the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method, or the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method, depending on when and how you want to add the script.</span></span> <span data-ttu-id="13ad9-107">Дополнительные сведения см. в разделе [как: Добавление клиентского сценария динамически для веб-страниц ASP.NET](http://msdn.microsoft.com/library/e89f1306-e43d-49ae-a66a-e18b71007666).</span><span class="sxs-lookup"><span data-stu-id="13ad9-107">For more information, see [How to: Add Client Script Dynamically to ASP.NET Web Pages](http://msdn.microsoft.com/library/e89f1306-e43d-49ae-a66a-e18b71007666).</span></span>  
  
 <span data-ttu-id="13ad9-108"><xref:System.Web.UI.ClientScriptManager> Класс однозначно определяет сценарии по ключу <xref:System.String> и <xref:System.Type>.</span><span class="sxs-lookup"><span data-stu-id="13ad9-108">The <xref:System.Web.UI.ClientScriptManager> class uniquely identifies scripts by a key <xref:System.String> and a <xref:System.Type>.</span></span> <span data-ttu-id="13ad9-109">Сценарии с один и тот же ключ и тип считаются повторяющимися.</span><span class="sxs-lookup"><span data-stu-id="13ad9-109">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="13ad9-110">Использование типа скрипта помогает избежать путаницы с похожими сценариями разным пользовательским элементам управления, которые могут использоваться на странице.</span><span class="sxs-lookup"><span data-stu-id="13ad9-110">Using the script type helps to avoid confusing similar scripts from different user controls that might be in use on the page.</span></span>  
  
 <span data-ttu-id="13ad9-111"><xref:System.Web.UI.ClientScriptManager> Класс может использоваться для обратных вызовов клиентов в ситуациях, когда желательно запустить серверный код из клиента без выполнения обратной передачи.</span><span class="sxs-lookup"><span data-stu-id="13ad9-111">The <xref:System.Web.UI.ClientScriptManager> class can be used to invoke client callbacks in situations when it is desirable to run server code from the client without performing a postback.</span></span> <span data-ttu-id="13ad9-112">Это называется выполнением обратного вызова каналу на сервер.</span><span class="sxs-lookup"><span data-stu-id="13ad9-112">This is referred to as performing an out-of-band callback to the server.</span></span> <span data-ttu-id="13ad9-113">В функции обратного вызова клиента функция клиентского скрипта отправляет асинхронный запрос веб-страницу ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="13ad9-113">In a client callback, a client script function sends an asynchronous request to an ASP.NET Web page.</span></span> <span data-ttu-id="13ad9-114">Веб-страницы запускает измененную версию обычного жизненного цикла для обработки обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="13ad9-114">The Web page runs a modified version of its normal life cycle to process the callback.</span></span> <span data-ttu-id="13ad9-115">Используйте <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> метод, чтобы получить ссылку на клиентскую функцию, которая, при вызове инициализирует обратный вызов клиента к событию сервера.</span><span class="sxs-lookup"><span data-stu-id="13ad9-115">Use the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method to obtain a reference to a client function that, when invoked, initiates a client callback to a server event.</span></span> <span data-ttu-id="13ad9-116">Дополнительные сведения см. в разделе [реализация клиента обратные вызовы без обратной передачи](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span><span class="sxs-lookup"><span data-stu-id="13ad9-116">For more information, see [Implementing Client Callbacks Without Postbacks](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13ad9-117">Обратные вызовы из сценария не будет работать в старых браузерах, которые не поддерживают объектной модели документа (DOM), и они требуют, что ECMAScript включено на стороне клиента.</span><span class="sxs-lookup"><span data-stu-id="13ad9-117">Script callbacks will not work in older browsers that do not support the Document Object Model (DOM), and they require that ECMAScript is enabled on the client.</span></span> <span data-ttu-id="13ad9-118">Чтобы проверить, если браузер поддерживает обратные вызовы, используйте <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> свойство, которое можно получить с помощью <xref:System.Web.HttpRequest.Browser%2A> свойства встроенных ASP.NET <xref:System.Web.HttpContext.Request%2A> объекта.</span><span class="sxs-lookup"><span data-stu-id="13ad9-118">To check if the browser supports callbacks, use the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> property, which is accessible through the <xref:System.Web.HttpRequest.Browser%2A> property of the ASP.NET intrinsic <xref:System.Web.HttpContext.Request%2A> object.</span></span>  
  
 <span data-ttu-id="13ad9-119">Используйте <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> метод и <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> метод для определения события обратной передачи клиента.</span><span class="sxs-lookup"><span data-stu-id="13ad9-119">Use the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method and the <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> method to define a client postback event.</span></span> <span data-ttu-id="13ad9-120">Эти методы позволяют функций клиентского скрипта, при вызове, чтобы заставить сервер для обратной передачи страницы.</span><span class="sxs-lookup"><span data-stu-id="13ad9-120">These methods enable client script functions, when invoked, to cause the server to post back to the page.</span></span> <span data-ttu-id="13ad9-121">События обратной передачи клиента отличается от обратного вызова клиента в том, что веб-страницы завершается нормальный жизненный цикл для обработки событий обратной передачи клиента.</span><span class="sxs-lookup"><span data-stu-id="13ad9-121">A client postback event is different from a client callback in that the Web page completes a normal life cycle to process the client postback event.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13ad9-122">Если вы используете <xref:System.Web.UI.WebControls.Button> управления и <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> свойство имеет значение `false`, можно использовать <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> метод, чтобы снова получить возможность управления обратной передачи событий для <xref:System.Web.UI.WebControls.Button> элемента управления.</span><span class="sxs-lookup"><span data-stu-id="13ad9-122">If you are using a <xref:System.Web.UI.WebControls.Button> control and the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is set to `false`, then you can use the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method to return the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 <span data-ttu-id="13ad9-123"><xref:System.Web.UI.WebControls.Button.OnClientClick%2A> Свойство <xref:System.Web.UI.WebControls.Button> управления <xref:System.Web.UI.WebControls.ImageButton> элемента управления, и <xref:System.Web.UI.WebControls.LinkButton> элемент управления можно использовать для запуска клиентского скрипта.</span><span class="sxs-lookup"><span data-stu-id="13ad9-123">The <xref:System.Web.UI.WebControls.Button.OnClientClick%2A> property of the <xref:System.Web.UI.WebControls.Button> control, <xref:System.Web.UI.WebControls.ImageButton> control, and <xref:System.Web.UI.WebControls.LinkButton> control can be used to run client script.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13ad9-124">В следующем примере кода демонстрируется использование <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> метод <xref:System.Web.UI.ClientScriptManager> класса.</span><span class="sxs-lookup"><span data-stu-id="13ad9-124">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="13ad9-125">Два клиентских скриптов определены на странице: `PopupScript`, который отображает предупреждение при загрузке страницы, и `ButtonClickScript`, определяющий клиентский обработчик для кнопка HTML `onClick` событий.</span><span class="sxs-lookup"><span data-stu-id="13ad9-125">Two client scripts are defined in the page: `PopupScript`, which displays an alert message when the page is loaded, and `ButtonClickScript`, which defines a client handler for an HTML button's `onClick` event.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Page" />
    <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback" />
    <altmember cref="P:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp" />
  </Docs>
  <Members>
    <MemberGroup MemberName="GetCallbackEventReference">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="13ad9-126">Получает ссылку на клиентскую функцию, которая при вызове инициализирует обратный вызов клиента к событию сервера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-126">Obtains a reference to a client function that, when invoked, initiates a client call back to a server event.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(class System.Web.UI.Control control, string argument, string clientCallback, string context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, System::String ^ clientCallback, System::String ^ context);" />
      <MemberSignature Language="F#" Value="member this.GetCallbackEventReference : System.Web.UI.Control * string * string * string -&gt; string" Usage="clientScriptManager.GetCallbackEventReference (control, argument, clientCallback, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="13ad9-127">Сервер <see cref="T:System.Web.UI.Control" />, обрабатывающий обратные вызовы клиента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-127">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span>
          </span>
          <span data-ttu-id="13ad9-128">Элемент управления должен реализовать интерфейс <see cref="T:System.Web.UI.ICallbackEventHandler" /> и предоставить метод <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-128">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="13ad9-129">Аргумент, передаваемый от клиентского скрипта серверу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-129">An argument passed from the client script to the server</span>
          </span>
          <span data-ttu-id="13ad9-130">
            <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-130">
              <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="clientCallback">
          <span data-ttu-id="13ad9-131">Имя клиентского обработчика событий, который принимает результаты успешно выполненного события сервера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-131">The name of the client event handler that receives the result of the successful server event.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="13ad9-132">Клиентский скрипт, оцениваемый на стороне клиента до инициализации обратного вызова.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-132">The client script that is evaluated on the client prior to initiating the callback.</span>
          </span>
          <span data-ttu-id="13ad9-133">Результат скрипта отправляется обратно клиентскому обработчику событий.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-133">The result of the script is passed back to the client event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13ad9-134">Получает ссылку на клиентскую функцию, которая при вызове инициализирует обратный вызов клиента к событию сервера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-134">Obtains a reference to a client function that, when invoked, initiates a client call back to a server event.</span>
          </span>
          <span data-ttu-id="13ad9-135">Клиентская функция для перегруженного метода включает указанный элемент управления, аргумент, клиентский скрипт и контекст.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-135">The client function for this overloaded method includes a specified control, argument, client script, and context.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="13ad9-136">Имя клиентской функции, осуществляющей обратный вызов клиента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-136">The name of a client function that invokes the client callback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13ad9-137"><xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> Метод выполняет обратный вызов из внешнего сервера, являющегося модификацией обычного жизненного цикла страницы.</span><span class="sxs-lookup"><span data-stu-id="13ad9-137">The <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> method performs an out-of-band callback to the server that is a modified version of a page's normal life cycle.</span></span> <span data-ttu-id="13ad9-138">Дополнительные сведения см. в разделе [реализация клиента обратные вызовы без обратной передачи](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span><span class="sxs-lookup"><span data-stu-id="13ad9-138">For more information, see [Implementing Client Callbacks Without Postbacks](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13ad9-139">При использовании обозревателя Microsoft Internet Explorer (версии 5.0 или более поздней версии), механизм обратного вызова сценарий реализуется с помощью Microsoft.XmlHttp COM-объекта и требуется браузер, чтобы задать выполнение элементов управления ActiveX.</span><span class="sxs-lookup"><span data-stu-id="13ad9-139">When the browser is Microsoft Internet Explorer (version 5.0 or later), the script callback mechanism is implemented through the Microsoft.XmlHttp COM object and requires the browser to be set to run ActiveX controls.</span></span> <span data-ttu-id="13ad9-140">Для других браузеров используется запрос XMLHttpRequest, с помощью браузера локального объекта модели (DOM).</span><span class="sxs-lookup"><span data-stu-id="13ad9-140">For other browsers, an XMLHttpRequest using the browser's local Document Object Model (DOM) is used.</span></span> <span data-ttu-id="13ad9-141">Чтобы проверить, поддерживает ли браузер обратные вызовы клиента, используйте <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="13ad9-141">To check whether a browser supports client callbacks, use the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> property.</span></span> <span data-ttu-id="13ad9-142">Чтобы проверить, поддерживает ли браузер XML по протоколу HTTP, используйте <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="13ad9-142">To check whether a browser supports XML over HTTP, use the <xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsXmlHttp%2A> property.</span></span> <span data-ttu-id="13ad9-143">Оба свойства, доступны через <xref:System.Web.HttpRequest.Browser%2A> свойства встроенных ASP.NET <xref:System.Web.HttpContext.Request%2A> объекта.</span><span class="sxs-lookup"><span data-stu-id="13ad9-143">Both properties are accessible through the <xref:System.Web.HttpRequest.Browser%2A> property of the intrinsic ASP.NET <xref:System.Web.HttpContext.Request%2A> object.</span></span>  
  
 <span data-ttu-id="13ad9-144"><xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> Перегрузки <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> метод выполняет обратный вызов синхронно с помощью XML по протоколу HTTP.</span><span class="sxs-lookup"><span data-stu-id="13ad9-144">The <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method performs a callback synchronously using XML over HTTP.</span></span> <span data-ttu-id="13ad9-145">При отправке данных синхронно в сценарии обратного вызова, синхронные обратные вызовы немедленно возвращаются и не блокируют браузер.</span><span class="sxs-lookup"><span data-stu-id="13ad9-145">When sending data synchronously in a callback scenario, synchronous callbacks return immediately and do not block the browser.</span></span> <span data-ttu-id="13ad9-146">В то же время, в браузере может выполняться не два синхронных обратных вызова.</span><span class="sxs-lookup"><span data-stu-id="13ad9-146">No two synchronous callbacks callback can execute at the same time in the browser.</span></span> <span data-ttu-id="13ad9-147">Если второй синхронный обратный вызов инициируется в том случае, пока он находится в состоянии ожидания, второй синхронный обратный вызов отменяет первый, и вернет только второй обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="13ad9-147">If a second synchronous callback is fired while one is currently pending, the second synchronous callback cancels the first and only the second callback will return.</span></span>  
  
 <span data-ttu-id="13ad9-148">Для асинхронной передачи данных, используйте одну из перегрузок, принимающих `useAsync` параметр, который возвращается логическое значение, определяющее, это поведение.</span><span class="sxs-lookup"><span data-stu-id="13ad9-148">To send data asynchronously, use one of the overloads that takes the `useAsync` parameter, which is a Boolean value controlling this behavior.</span></span> <span data-ttu-id="13ad9-149">В асинхронном сценарии может иметь несколько ждущих ответных вызовов; Тем не менее порядок, в котором они возвращаются в соответствии с порядком, в котором они были инициированы не гарантируется.</span><span class="sxs-lookup"><span data-stu-id="13ad9-149">In the asynchronous scenario you can have multiple pending callbacks; however, the order in which they return is not guaranteed to match the order in which they were initiated.</span></span>  
  
 <span data-ttu-id="13ad9-150">Кроме того, эта перегрузка <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> метод задает не клиентская функция для обработки случая, условий возникновения ошибки, создаваемые <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="13ad9-150">Additionally, this overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method specifies no client function to handle the case of an error condition generated by the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method.</span></span> <span data-ttu-id="13ad9-151">Чтобы указать обработчик обратного вызова клиента ошибки, используйте одну из перегрузок, принимающих `clientErrorCallback` параметра.</span><span class="sxs-lookup"><span data-stu-id="13ad9-151">To specify a client error callback handler, use one of the overloads that takes the `clientErrorCallback` parameter.</span></span>  
  
 <span data-ttu-id="13ad9-152"><xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> Метод принимает необязательную строку `argument` параметр и возвращает строку.</span><span class="sxs-lookup"><span data-stu-id="13ad9-152">The <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%28System.Web.UI.Control%2CSystem.String%2CSystem.String%2CSystem.String%29> method takes an optional string `argument` parameter and returns a string.</span></span> <span data-ttu-id="13ad9-153">Для передачи или получить несколько значений, производящие объединение значений во входных данных или возвращают строку, соответственно.</span><span class="sxs-lookup"><span data-stu-id="13ad9-153">To pass in or to receive multiple values, concatenate values in the input or return string, respectively.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13ad9-154">Избегайте использования состояния представления при реализации свойств страницы или элемента управления, которые необходимо обновлять во время операций обратного вызова сценария.</span><span class="sxs-lookup"><span data-stu-id="13ad9-154">Avoid using the view state in the implementation of page or control properties that need be updated during script callback operations.</span></span> <span data-ttu-id="13ad9-155">Если свойства должен быть устойчив запросов страниц, можно использовать состояние сеанса.</span><span class="sxs-lookup"><span data-stu-id="13ad9-155">If the properties are to survive page requests, you can use session state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13ad9-156">В следующем примере кода демонстрируется использование двух перегрузок <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> метод в сценарии обратного вызова клиента, который увеличивает целых чисел.</span><span class="sxs-lookup"><span data-stu-id="13ad9-156">The following code example demonstrates how to use two overloads of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method in a client callback scenario that increments integers.</span></span>  
  
 <span data-ttu-id="13ad9-157">Отображаются два механизма обратного вызова; различие между ними является использование `context` параметра.</span><span class="sxs-lookup"><span data-stu-id="13ad9-157">Two callback mechanisms are shown; the difference between them is the use of the `context` parameter.</span></span> <span data-ttu-id="13ad9-158">Объект `ReceiveServerData1` функцию обратного вызова клиента обеспечивается с помощью `context` параметра.</span><span class="sxs-lookup"><span data-stu-id="13ad9-158">A `ReceiveServerData1` client callback function is provided using the `context` parameter.</span></span> <span data-ttu-id="13ad9-159">Напротив `ReceiveServerData2` функцию обратного вызова клиента определяется в `<script>` блок на странице.</span><span class="sxs-lookup"><span data-stu-id="13ad9-159">In contrast, the `ReceiveServerData2` client callback function is defined in a `<script>` block on the page.</span></span> <span data-ttu-id="13ad9-160">Объект <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> метод является обработчиком сервера, на которое увеличивается значение, которое передается в него и <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> метод возвращает увеличенное значение как строка.</span><span class="sxs-lookup"><span data-stu-id="13ad9-160">A <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is the server handler that increments the value that is passed to it and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the incremented value as a string.</span></span> <span data-ttu-id="13ad9-161">Если <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> метод возвращает ошибку, а затем `ProcessCallBackError` вызове функции клиента.</span><span class="sxs-lookup"><span data-stu-id="13ad9-161">If the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method returns an error, then the `ProcessCallBackError` client function is called.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/cs/getcallbackeventreference.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/vb/getcallbackeventreference.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="13ad9-162">Указанный элемент управления <see cref="T:System.Web.UI.Control" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-162">The <see cref="T:System.Web.UI.Control" /> specified is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="13ad9-163">Указанный элемент управления <see cref="T:System.Web.UI.Control" /> не реализует интерфейс <see cref="T:System.Web.UI.ICallbackEventHandler" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-163">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context, bool useAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(class System.Web.UI.Control control, string argument, string clientCallback, string context, bool useAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, System::String ^ clientCallback, System::String ^ context, bool useAsync);" />
      <MemberSignature Language="F#" Value="member this.GetCallbackEventReference : System.Web.UI.Control * string * string * string * bool -&gt; string" Usage="clientScriptManager.GetCallbackEventReference (control, argument, clientCallback, context, useAsync)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="useAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="13ad9-164">Сервер <see cref="T:System.Web.UI.Control" />, обрабатывающий обратные вызовы клиента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-164">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span>
          </span>
          <span data-ttu-id="13ad9-165">Элемент управления должен реализовать интерфейс <see cref="T:System.Web.UI.ICallbackEventHandler" /> и предоставить метод <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-165">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="13ad9-166">Аргумент, передаваемый от клиентского скрипта серверу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-166">An argument passed from the client script to the server</span>
          </span>
          <span data-ttu-id="13ad9-167">
            <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-167">
              <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="clientCallback">
          <span data-ttu-id="13ad9-168">Имя клиентского обработчика событий, который принимает результаты успешно выполненного события сервера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-168">The name of the client event handler that receives the result of the successful server event.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="13ad9-169">Клиентский скрипт, оцениваемый на стороне клиента до инициализации обратного вызова.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-169">The client script that is evaluated on the client prior to initiating the callback.</span>
          </span>
          <span data-ttu-id="13ad9-170">Результат скрипта отправляется обратно клиентскому обработчику событий.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-170">The result of the script is passed back to the client event handler.</span>
          </span>
        </param>
        <param name="useAsync">
          <span data-ttu-id="13ad9-171">
            <see langword="true" /> для выполнения обратного вызова асинхронно; <see langword="false" /> для выполнения обратного вызова синхронно.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-171">
              <see langword="true" /> to perform the callback asynchronously; <see langword="false" /> to perform the callback synchronously.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13ad9-172">Получает ссылку на клиентскую функцию, которая при вызове инициализирует обратный вызов клиента к событиям сервера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-172">Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</span>
          </span>
          <span data-ttu-id="13ad9-173">Клиентская функция для перегруженного метода включает указанный элемент управления, аргумент, клиентский скрипт, контекст и логическое значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-173">The client function for this overloaded method includes a specified control, argument, client script, context, and Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="13ad9-174">Имя клиентской функции, осуществляющей обратный вызов клиента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-174">The name of a client function that invokes the client callback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13ad9-175">Эта перегрузка <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> метод требует `useAsync` параметр, который позволяет асинхронно выполнять обратный вызов клиента, задав значение `true`.</span><span class="sxs-lookup"><span data-stu-id="13ad9-175">This overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method requires a `useAsync` parameter, which allows you to perform the client callback asynchronously by setting the value to `true`.</span></span> <span data-ttu-id="13ad9-176">Версии перегрузки этого метода, не требующие `useAsync` параметру присвоить значение `false` по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="13ad9-176">The overload versions of this method that do not require the `useAsync` parameter set the value to `false` by default.</span></span>  
  
 <span data-ttu-id="13ad9-177">Дополнительные сведения об этом методе см. в разделе "Примечания" для перегрузки <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="13ad9-177">For more information on this method, see the remarks for the overload <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="13ad9-178">Указанный элемент управления <see cref="T:System.Web.UI.Control" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-178">The <see cref="T:System.Web.UI.Control" /> specified is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="13ad9-179">Указанный элемент управления <see cref="T:System.Web.UI.Control" /> не реализует интерфейс <see cref="T:System.Web.UI.ICallbackEventHandler" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-179">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (string target, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(string target, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCallbackEventReference (target As String, argument As String, clientCallback As String, context As String, clientErrorCallback As String, useAsync As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::String ^ target, System::String ^ argument, System::String ^ clientCallback, System::String ^ context, System::String ^ clientErrorCallback, bool useAsync);" />
      <MemberSignature Language="F#" Value="member this.GetCallbackEventReference : string * string * string * string * string * bool -&gt; string" Usage="clientScriptManager.GetCallbackEventReference (target, argument, clientCallback, context, clientErrorCallback, useAsync)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="clientErrorCallback" Type="System.String" />
        <Parameter Name="useAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="13ad9-180">Имя сервера <see cref="T:System.Web.UI.Control" />, обрабатывающего обратный вызов клиента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-180">The name of a server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span>
          </span>
          <span data-ttu-id="13ad9-181">Элемент управления должен реализовать интерфейс <see cref="T:System.Web.UI.ICallbackEventHandler" /> и предоставить метод <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-181">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="13ad9-182">Аргумент, передаваемый от клиентского скрипта серверу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-182">An argument passed from the client script to the server</span>
          </span>
          <span data-ttu-id="13ad9-183">
            <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-183">
              <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="clientCallback">
          <span data-ttu-id="13ad9-184">Имя клиентского обработчика событий, который принимает результаты успешно выполненного события сервера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-184">The name of the client event handler that receives the result of the successful server event.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="13ad9-185">Клиентский скрипт, оцениваемый на стороне клиента до инициализации обратного вызова.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-185">The client script that is evaluated on the client prior to initiating the callback.</span>
          </span>
          <span data-ttu-id="13ad9-186">Результат скрипта отправляется обратно клиентскому обработчику событий.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-186">The result of the script is passed back to the client event handler.</span>
          </span>
        </param>
        <param name="clientErrorCallback">
          <span data-ttu-id="13ad9-187">Имя клиентского обработчика событий, принимающего результат, когда в обработчике событий сервера возникает ошибка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-187">The name of the client event handler that receives the result when an error occurs in the server event handler.</span>
          </span>
        </param>
        <param name="useAsync">
          <span data-ttu-id="13ad9-188">
            <see langword="true" /> для выполнения обратного вызова асинхронно; <see langword="false" /> для выполнения обратного вызова синхронно.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-188">
              <see langword="true" /> to perform the callback asynchronously; <see langword="false" /> to perform the callback synchronously.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13ad9-189">Получает ссылку на клиентскую функцию, которая при вызове инициализирует обратный вызов клиента к событиям сервера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-189">Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</span>
          </span>
          <span data-ttu-id="13ad9-190">Клиентская функция для перегруженного метода включает указанную цель, аргумент, клиентский скрипт, контекст, обработчик ошибок и логическое значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-190">The client function for this overloaded method includes a specified target, argument, client script, context, error handler, and Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="13ad9-191">Имя клиентской функции, осуществляющей обратный вызов клиента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-191">The name of a client function that invokes the client callback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13ad9-192">Эта перегрузка <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> альбома `target` строковый параметр, а не <xref:System.Web.UI.Control> параметра.</span><span class="sxs-lookup"><span data-stu-id="13ad9-192">This overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method takes a `target` string parameter instead of a <xref:System.Web.UI.Control> parameter.</span></span> <span data-ttu-id="13ad9-193">Используйте этот перегруженный метод, при необходимости обратного вызова, чтобы вернуться назад, отличный от строка, содержащая <xref:System.Web.UI.Control.UniqueID%2A> элемента управления.</span><span class="sxs-lookup"><span data-stu-id="13ad9-193">Use this overload when you want the callback to go back to something other than a string containing the <xref:System.Web.UI.Control.UniqueID%2A> of the control.</span></span>  
  
 <span data-ttu-id="13ad9-194">Кроме того, эта перегрузка <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> метод требует `useAsync` и `clientErrorCallback` параметр.</span><span class="sxs-lookup"><span data-stu-id="13ad9-194">Additionally, this overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method requires a `useAsync` and a `clientErrorCallback` parameter.</span></span> <span data-ttu-id="13ad9-195">`useAsync` Служит для выполнения обратного вызова клиента в асинхронном режиме, задав значение `true`.</span><span class="sxs-lookup"><span data-stu-id="13ad9-195">The `useAsync` parameter allows you to perform the client callback asynchronously by setting the value to `true`.</span></span> <span data-ttu-id="13ad9-196">Версии перегрузки этого метода, не требующие `useAsync` параметру присвоить значение `false` по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="13ad9-196">The overload versions of this method that do not require the `useAsync` parameter set the value to `false` by default.</span></span> <span data-ttu-id="13ad9-197">`clientErrorCallback` Параметра можно задать имя клиентская функция, которая вызывается, если обработчик сервера <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> метода, возвращает сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="13ad9-197">The `clientErrorCallback` parameter allows you to define the name of the client function that is called if the server handler, the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method, returns an error.</span></span> <span data-ttu-id="13ad9-198">Версии перегрузки этого метода, не требующие `clientErrorCallback` параметру присвоить значение null.</span><span class="sxs-lookup"><span data-stu-id="13ad9-198">The overload versions of this method that do not require the `clientErrorCallback` parameter set the value to null.</span></span>  
  
 <span data-ttu-id="13ad9-199">Дополнительные сведения об этом методе см. в разделе "Примечания" для перегрузки <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="13ad9-199">For more information on this method, see the remarks for the overload <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13ad9-200">В следующем примере кода демонстрируется использование двух перегрузок <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> метод в сценарии обратного вызова клиента, который увеличивает целых чисел.</span><span class="sxs-lookup"><span data-stu-id="13ad9-200">The following code example demonstrates how to use two overloads of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method in a client callback scenario that increments integers.</span></span>  
  
 <span data-ttu-id="13ad9-201">Отображаются два механизма обратного вызова; различие между ними является использование `context` параметра.</span><span class="sxs-lookup"><span data-stu-id="13ad9-201">Two callback mechanisms are shown; the difference between them is the use of the `context` parameter.</span></span> <span data-ttu-id="13ad9-202">Объект `ReceiveServerData1` функцию обратного вызова клиента обеспечивается с помощью `context` параметра.</span><span class="sxs-lookup"><span data-stu-id="13ad9-202">A `ReceiveServerData1` client callback function is provided using the `context` parameter.</span></span> <span data-ttu-id="13ad9-203">Напротив `ReceiveServerData2` функцию обратного вызова клиента определяется в `<script>` блок на странице.</span><span class="sxs-lookup"><span data-stu-id="13ad9-203">In contrast, the `ReceiveServerData2` client callback function is defined in a `<script>` block on the page.</span></span> <span data-ttu-id="13ad9-204">Объект <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> метод является обработчиком сервера, на которое увеличивается значение, которое передается в него и <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> метод возвращает увеличенное значение как строка.</span><span class="sxs-lookup"><span data-stu-id="13ad9-204">A <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is the server handler that increments the value that is passed to it and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the incremented value as a string.</span></span> <span data-ttu-id="13ad9-205">Если <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> метод возвращает ошибку, то клиентская функция `ProcessCallBackError` вызывается.</span><span class="sxs-lookup"><span data-stu-id="13ad9-205">If the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method returns an error, then the client function `ProcessCallBackError` is called.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/cs/getcallbackeventreference.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager7/vb/getcallbackeventreference.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
        <altmember cref="P:System.Web.UI.Control.UniqueID" />
      </Docs>
    </Member>
    <Member MemberName="GetCallbackEventReference">
      <MemberSignature Language="C#" Value="public string GetCallbackEventReference (System.Web.UI.Control control, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetCallbackEventReference(class System.Web.UI.Control control, string argument, string clientCallback, string context, string clientErrorCallback, bool useAsync) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.Web.UI.Control,System.String,System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, System::String ^ clientCallback, System::String ^ context, System::String ^ clientErrorCallback, bool useAsync);" />
      <MemberSignature Language="F#" Value="member this.GetCallbackEventReference : System.Web.UI.Control * string * string * string * string * bool -&gt; string" Usage="clientScriptManager.GetCallbackEventReference (control, argument, clientCallback, context, clientErrorCallback, useAsync)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="clientCallback" Type="System.String" />
        <Parameter Name="context" Type="System.String" />
        <Parameter Name="clientErrorCallback" Type="System.String" />
        <Parameter Name="useAsync" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="13ad9-206">Сервер <see cref="T:System.Web.UI.Control" />, обрабатывающий обратные вызовы клиента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-206">The server <see cref="T:System.Web.UI.Control" /> that handles the client callback.</span>
          </span>
          <span data-ttu-id="13ad9-207">Элемент управления должен реализовать интерфейс <see cref="T:System.Web.UI.ICallbackEventHandler" /> и предоставить метод <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-207">The control must implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface and provide a <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="13ad9-208">Аргумент, передаваемый от клиентского скрипта методу <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> сервера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-208">An argument passed from the client script to the server <see cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" /> method.</span>
          </span>
        </param>
        <param name="clientCallback">
          <span data-ttu-id="13ad9-209">Имя клиентского обработчика событий, который принимает результаты успешно выполненного события сервера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-209">The name of the client event handler that receives the result of the successful server event.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="13ad9-210">Клиентский скрипт, оцениваемый на стороне клиента до инициализации обратного вызова.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-210">The client script that is evaluated on the client prior to initiating the callback.</span>
          </span>
          <span data-ttu-id="13ad9-211">Результат скрипта отправляется обратно клиентскому обработчику событий.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-211">The result of the script is passed back to the client event handler.</span>
          </span>
        </param>
        <param name="clientErrorCallback">
          <span data-ttu-id="13ad9-212">Имя клиентского обработчика событий, принимающего результат, когда в обработчике событий сервера возникает ошибка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-212">The name of the client event handler that receives the result when an error occurs in the server event handler.</span>
          </span>
        </param>
        <param name="useAsync">
          <span data-ttu-id="13ad9-213">
            <see langword="true" /> для выполнения обратного вызова асинхронно; <see langword="false" /> для выполнения обратного вызова синхронно.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-213">
              <see langword="true" /> to perform the callback asynchronously; <see langword="false" /> to perform the callback synchronously.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13ad9-214">Получает ссылку на клиентскую функцию, которая при вызове инициализирует обратный вызов клиента к событиям сервера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-214">Obtains a reference to a client function that, when invoked, initiates a client call back to server events.</span>
          </span>
          <span data-ttu-id="13ad9-215">Клиентская функция для перегруженного метода включает указанный элемент управления, аргумент, клиентский скрипт, контекст, обработчик ошибок и логическое значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-215">The client function for this overloaded method includes a specified control, argument, client script, context, error handler, and Boolean value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="13ad9-216">Имя клиентской функции, осуществляющей обратный вызов клиента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-216">The name of a client function that invokes the client callback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13ad9-217">Эта перегрузка <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> метод требует `useAsync` и `clientErrorCallback` параметр.</span><span class="sxs-lookup"><span data-stu-id="13ad9-217">This overload of the <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method requires a `useAsync` and a `clientErrorCallback` parameter.</span></span> <span data-ttu-id="13ad9-218">`useAsync` Служит для выполнения обратного вызова клиента в асинхронном режиме, задав значение `true`.</span><span class="sxs-lookup"><span data-stu-id="13ad9-218">The `useAsync` parameter allows you to perform the client callback asynchronously by setting the value to `true`.</span></span> <span data-ttu-id="13ad9-219">Версии перегрузки этого метода, не требующие `useAsync` параметру присвоить значение `false` по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="13ad9-219">The overload versions of this method that do not require the `useAsync` parameter set the value to `false` by default.</span></span> <span data-ttu-id="13ad9-220">`clientErrorCallback` Параметра можно задать имя клиентская функция, которая вызывается, если обработчик сервера ( <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> метод) возвращает сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="13ad9-220">The `clientErrorCallback` parameter allows you to define the name of the client function that is called if the server handler (the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method) returns an error.</span></span> <span data-ttu-id="13ad9-221">Версии перегрузки этого метода, не требующие `clientErrorCallback` параметру присвоить значение null.</span><span class="sxs-lookup"><span data-stu-id="13ad9-221">The overload versions of this method that do not require the `clientErrorCallback` parameter set the value to null.</span></span>  
  
 <span data-ttu-id="13ad9-222">Дополнительные сведения об этом методе см. в разделе "Примечания" для перегрузки <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="13ad9-222">For more information on this method, see the remarks for the overload <xref:System.Web.UI.ClientScriptManager.GetCallbackEventReference%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="13ad9-223">Указанный элемент управления <see cref="T:System.Web.UI.Control" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-223">The <see cref="T:System.Web.UI.Control" /> specified is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="13ad9-224">Указанный элемент управления <see cref="T:System.Web.UI.Control" /> не реализует интерфейс <see cref="T:System.Web.UI.ICallbackEventHandler" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-224">The <see cref="T:System.Web.UI.Control" /> specified does not implement the <see cref="T:System.Web.UI.ICallbackEventHandler" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.ICallbackEventHandler" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPostBackClientHyperlink">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="13ad9-225">Возвращает ссылку с добавленным <see langword="javascript:" /> в начале, которую можно использовать в клиентском событии для обратной передачи серверу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-225">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPostBackClientHyperlink">
      <MemberSignature Language="C#" Value="public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackClientHyperlink(class System.Web.UI.Control control, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackClientHyperlink(System::Web::UI::Control ^ control, System::String ^ argument);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackClientHyperlink : System.Web.UI.Control * string -&gt; string" Usage="clientScriptManager.GetPostBackClientHyperlink (control, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="13ad9-226">Серверный элемент управления, обрабатывающий обратную передачу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-226">The server control to process the postback.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="13ad9-227">Параметр, передаваемый серверному элементу управления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-227">The parameter passed to the server control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13ad9-228">Возвращает ссылку, с <see langword="javascript:" /> в начале, которую можно использовать в клиентском событии для обратной передачи серверу указанного элемента управления с указанными аргументами события.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-228">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server for the specified control and with the specified event arguments.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="13ad9-229">Строка, представляющая вызов JavaScript функции обратной передачи, включающей идентификатор целевого элемента управления и аргументы события.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-229">A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13ad9-230">С помощью <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> метод требует элемент управления, обрабатывающий обратную передачу для реализации <xref:System.Web.UI.IPostBackEventHandler> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="13ad9-230">Using the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method requires the control that handles the postback to implement the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="13ad9-231">Для реализации <xref:System.Web.UI.IPostBackEventHandler> интерфейс для <xref:System.Web.UI.Page>, используйте директиву.</span><span class="sxs-lookup"><span data-stu-id="13ad9-231">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>,  use the  directive.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13ad9-232">В следующем примере кода демонстрируется использование <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="13ad9-232">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A> method.</span></span> <span data-ttu-id="13ad9-233">Пользовательский элемент управления, `MyControl`, реализует <xref:System.Web.UI.IPostBackEventHandler> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="13ad9-233">The custom control, `MyControl`, implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="13ad9-234">При щелчке элемент привязки HTML на странице, <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> вызывается метод пользовательского элемента управления.</span><span class="sxs-lookup"><span data-stu-id="13ad9-234">When the HTML anchor element on the page is clicked, the <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> method of the custom control is invoked.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreferencecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreferencevb.aspx#1)]  
  
 <span data-ttu-id="13ad9-235">В следующем примере кода имеет ту же функциональность, что и предыдущий, но вместо пользовательского элемента управления, <xref:System.Web.UI.Page> класс реализует <xref:System.Web.UI.IPostBackEventHandler> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="13ad9-235">The following code example has the same functionality as the preceding one, except that instead of a custom control, the <xref:System.Web.UI.Page> class implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreference2cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreference2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackClientHyperlink">
      <MemberSignature Language="C#" Value="public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument, bool registerForEventValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackClientHyperlink(class System.Web.UI.Control control, string argument, bool registerForEventValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackClientHyperlink(System::Web::UI::Control ^ control, System::String ^ argument, bool registerForEventValidation);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackClientHyperlink : System.Web.UI.Control * string * bool -&gt; string" Usage="clientScriptManager.GetPostBackClientHyperlink (control, argument, registerForEventValidation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="registerForEventValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="13ad9-236">Серверный элемент управления, обрабатывающий обратную передачу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-236">The server control to process the postback.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="13ad9-237">Параметр, передаваемый серверному элементу управления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-237">The parameter passed to the server control.</span>
          </span>
        </param>
        <param name="registerForEventValidation">
          <span data-ttu-id="13ad9-238">
            <see langword="true" />, чтобы регистрировать событие обратной передачи для проверки; <see langword="false" />, чтобы не регистрировать событие обратной передачи для проверки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-238">
              <see langword="true" /> to register the postback event for validation; <see langword="false" /> to not register the post back event for validation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13ad9-239">Возвращает ссылку с добавленным <see langword="javascript:" /> в начале, которую можно использовать в клиентском событии для обратной передачи серверу для указанного элемента управления с указанными аргументами события и логическим обозначением, следует ли регистрировать обратную передачу для проверки события.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-239">Gets a reference, with <see langword="javascript:" /> appended to the beginning of it, that can be used in a client event to post back to the server for the specified control with the specified event arguments and Boolean indication whether to register the post back for event validation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="13ad9-240">Строка, представляющая вызов JavaScript функции обратной передачи, включающей идентификатор целевого элемента управления и аргументы события.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-240">A string representing a JavaScript call to the postback function that includes the target control's ID and event arguments.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13ad9-241">С помощью <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> метод требует элемент управления, обрабатывающий обратную передачу для реализации <xref:System.Web.UI.IPostBackEventHandler> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="13ad9-241">Using the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method requires the control that handles the postback to implement the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="13ad9-242">Для реализации <xref:System.Web.UI.IPostBackEventHandler> интерфейс для <xref:System.Web.UI.Page>, используйте директиву.</span><span class="sxs-lookup"><span data-stu-id="13ad9-242">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>, use the  directive.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPostBackEventReference">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="13ad9-243">Возвращает строку, которая может использоваться в клиентском событии для инициирования обратной передачи серверу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-243">Returns a string that can be used in a client event to cause postback to the server.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.PostBackOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.PostBackOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPostBackEventReference (options As PostBackOptions) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::PostBackOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackEventReference : System.Web.UI.PostBackOptions -&gt; string" Usage="clientScriptManager.GetPostBackEventReference options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Web.UI.PostBackOptions" />
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="13ad9-244">
            <see cref="T:System.Web.UI.PostBackOptions" />, определяющий обратную передачу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-244">A <see cref="T:System.Web.UI.PostBackOptions" /> that defines the postback.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13ad9-245">Возвращает строку, которая может использоваться в клиентском событии для инициирования обратной передачи серверу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-245">Returns a string that can be used in a client event to cause postback to the server.</span>
          </span>
          <span data-ttu-id="13ad9-246">Строка ссылки определяется указанным экземпляром <see cref="T:System.Web.UI.PostBackOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-246">The reference string is defined by the specified <see cref="T:System.Web.UI.PostBackOptions" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="13ad9-247">Строка, инициирующая клиентскую обратную передачу (при рассмотрении строки в качестве клиентского скрипта).</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-247">A string that, when treated as script on the client, initiates the client postback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13ad9-248">Для реализации <xref:System.Web.UI.IPostBackEventHandler> интерфейс для <xref:System.Web.UI.Page>, используйте директиву.</span><span class="sxs-lookup"><span data-stu-id="13ad9-248">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>,  use the  directive.</span></span>  
  
 <span data-ttu-id="13ad9-249"><xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Метод может использоваться с <xref:System.Web.UI.WebControls.Button> управления <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> свойство `false`.</span><span class="sxs-lookup"><span data-stu-id="13ad9-249">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="13ad9-250">В этом случае <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> возвращает клиентскую обратную передачу событий для <xref:System.Web.UI.WebControls.Button> элемента управления.</span><span class="sxs-lookup"><span data-stu-id="13ad9-250">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="13ad9-251">Значение параметра <see cref="T:System.Web.UI.PostBackOptions" /> равно <see langword="null" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-251">The <see cref="T:System.Web.UI.PostBackOptions" /> parameter is <see langword="null" /></span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="T:System.Web.UI.WebControls.Button" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.Control control, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.Control control, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::Control ^ control, System::String ^ argument);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackEventReference : System.Web.UI.Control * string -&gt; string" Usage="clientScriptManager.GetPostBackEventReference (control, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="13ad9-252">Серверный элемент управления <see cref="T:System.Web.UI.Control" />, обрабатывающий обратную передачу на сервер.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-252">The server <see cref="T:System.Web.UI.Control" /> that processes the postback on the server.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="13ad9-253">Строка необязательных аргументов для передачи элементу управления, обрабатывающему обратную передачу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-253">A string of optional arguments to pass to the control that processes the postback.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13ad9-254">Возвращает строку, которая может использоваться в клиентском событии для инициирования обратной передачи серверу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-254">Returns a string that can be used in a client event to cause postback to the server.</span>
          </span>
          <span data-ttu-id="13ad9-255">Строка ссылки определяется указанным элементом управления, обрабатывающим обратную передачу, и строчным аргументом с дополнительной информацией о событии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-255">The reference string is defined by the specified control that handles the postback and a string argument of additional event information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="13ad9-256">Строка, инициирующая — при рассмотрении ее в качестве скрипта на стороне клиента — обратную передачу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-256">A string that, when treated as script on the client, initiates the postback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13ad9-257">Для реализации <xref:System.Web.UI.IPostBackEventHandler> интерфейс для <xref:System.Web.UI.Page>, используйте директиву.</span><span class="sxs-lookup"><span data-stu-id="13ad9-257">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>,  use the  directive.</span></span>  
  
 <span data-ttu-id="13ad9-258"><xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Метод может использоваться с <xref:System.Web.UI.WebControls.Button> управления <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> свойство `false`.</span><span class="sxs-lookup"><span data-stu-id="13ad9-258">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="13ad9-259">В этом случае <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> возвращает клиентскую обратную передачу событий для <xref:System.Web.UI.WebControls.Button> элемента управления.</span><span class="sxs-lookup"><span data-stu-id="13ad9-259">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13ad9-260">В следующем примере кода демонстрируется использование <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="13ad9-260">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method.</span></span> <span data-ttu-id="13ad9-261">Пользовательский элемент управления, `MyControl`, реализует <xref:System.Web.UI.IPostBackEventHandler> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="13ad9-261">The custom control, `MyControl`, implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span> <span data-ttu-id="13ad9-262">При нажатии кнопки на странице <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> вызывается метод пользовательского элемента управления.</span><span class="sxs-lookup"><span data-stu-id="13ad9-262">When the button on the page is clicked, the <xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A> method of the custom control is invoked.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreferencecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreferencevb.aspx#1)]  
  
 <span data-ttu-id="13ad9-263">В следующем примере кода имеет ту же функциональность, что и предыдущий, но вместо пользовательского элемента управления, <xref:System.Web.UI.Page> класс реализует <xref:System.Web.UI.IPostBackEventHandler> интерфейс.</span><span class="sxs-lookup"><span data-stu-id="13ad9-263">The following code example has the same functionality as the preceding one, except that instead of a custom control, the <xref:System.Web.UI.Page> class implements the <xref:System.Web.UI.IPostBackEventHandler> interface.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/cs/getpostbackeventreference2cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager8#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager8/vb/getpostbackeventreference2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="13ad9-264">Указанное значение <see cref="T:System.Web.UI.Control" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-264">The specified <see cref="T:System.Web.UI.Control" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.PostBackOptions options, bool registerForEventValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.PostBackOptions options, bool registerForEventValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.PostBackOptions,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPostBackEventReference (options As PostBackOptions, registerForEventValidation As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::PostBackOptions ^ options, bool registerForEventValidation);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackEventReference : System.Web.UI.PostBackOptions * bool -&gt; string" Usage="clientScriptManager.GetPostBackEventReference (options, registerForEventValidation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Web.UI.PostBackOptions" />
        <Parameter Name="registerForEventValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="13ad9-265">
            <see cref="T:System.Web.UI.PostBackOptions" />, определяющий обратную передачу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-265">A <see cref="T:System.Web.UI.PostBackOptions" /> that defines the postback.</span>
          </span>
        </param>
        <param name="registerForEventValidation">
          <span data-ttu-id="13ad9-266">
            <see langword="true" /> для регистрации ссылки на событие для проверки; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-266">
              <see langword="true" /> to register the event reference for validation; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13ad9-267">Возвращает строку, которая может использоваться в клиентском событии для инициирования обратной передачи серверу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-267">Returns a string that can be used in a client event to cause postback to the server.</span>
          </span>
          <span data-ttu-id="13ad9-268">Строка ссылки определяется указанным объектом <see cref="T:System.Web.UI.PostBackOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-268">The reference string is defined by the specified <see cref="T:System.Web.UI.PostBackOptions" /> object.</span>
          </span>
          <span data-ttu-id="13ad9-269">По выбору регистрирует ссылку на событие для проверки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-269">Optionally, registers the event reference for validation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="13ad9-270">Строка, инициирующая клиентскую обратную передачу (при рассмотрении строки в качестве клиентского скрипта).</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-270">A string that, when treated as script on the client, initiates the client postback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13ad9-271">Для реализации <xref:System.Web.UI.IPostBackEventHandler> интерфейс для <xref:System.Web.UI.Page> , используйте директиву.</span><span class="sxs-lookup"><span data-stu-id="13ad9-271">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page> object, use the  directive.</span></span>  
  
 <span data-ttu-id="13ad9-272"><xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Метод может использоваться с <xref:System.Web.UI.WebControls.Button> управления <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> свойство `false`.</span><span class="sxs-lookup"><span data-stu-id="13ad9-272">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="13ad9-273">В этом случае <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> возвращает клиентскую обратную передачу событий для <xref:System.Web.UI.WebControls.Button> элемента управления.</span><span class="sxs-lookup"><span data-stu-id="13ad9-273">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 <span data-ttu-id="13ad9-274">Если `registerForEventValidation` — `true`, <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> вызовы методов <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> метод, чтобы зарегистрировать ссылку на событие для проверки с уникальным ИД элемента управления, представляющий клиентский элемент управления, который создает событие.</span><span class="sxs-lookup"><span data-stu-id="13ad9-274">If `registerForEventValidation` is `true`, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> method calls the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> method to register the event reference for validation with a unique control ID that represents the client control that is generating the event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="13ad9-275">Свойство <see cref="T:System.Web.UI.PostBackOptions" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-275">The <see cref="T:System.Web.UI.PostBackOptions" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="T:System.Web.UI.WebControls.Button" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackEventReference">
      <MemberSignature Language="C#" Value="public string GetPostBackEventReference (System.Web.UI.Control control, string argument, bool registerForEventValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetPostBackEventReference(class System.Web.UI.Control control, string argument, bool registerForEventValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetPostBackEventReference(System.Web.UI.Control,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetPostBackEventReference(System::Web::UI::Control ^ control, System::String ^ argument, bool registerForEventValidation);" />
      <MemberSignature Language="F#" Value="member this.GetPostBackEventReference : System.Web.UI.Control * string * bool -&gt; string" Usage="clientScriptManager.GetPostBackEventReference (control, argument, registerForEventValidation)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Web.UI.Control" />
        <Parameter Name="argument" Type="System.String" />
        <Parameter Name="registerForEventValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="control">
          <span data-ttu-id="13ad9-276">Серверный элемент управления <see cref="T:System.Web.UI.Control" />, обрабатывающий обратную передачу на сервер.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-276">The server <see cref="T:System.Web.UI.Control" /> that processes the postback on the server.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="13ad9-277">Строка необязательных аргументов для передачи элементу управления <c>control</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-277">A string of optional arguments to pass to <c>control</c>.</span>
          </span>
        </param>
        <param name="registerForEventValidation">
          <span data-ttu-id="13ad9-278">
            <see langword="true" /> для регистрации ссылки на событие для проверки; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-278">
              <see langword="true" /> to register the event reference for validation; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13ad9-279">Возвращает строку, которая может использоваться в клиентском событии для инициирования обратной передачи серверу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-279">Returns a string to use in a client event to cause postback to the server.</span>
          </span>
          <span data-ttu-id="13ad9-280">Строка ссылки определяется указанным элементом управления, обрабатывающим обратную передачу, и строчным аргументом с дополнительной информацией о событии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-280">The reference string is defined by the specified control that handles the postback and a string argument of additional event information.</span>
          </span>
          <span data-ttu-id="13ad9-281">По выбору регистрирует ссылку на событие для проверки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-281">Optionally, registers the event reference for validation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="13ad9-282">Строка, инициирующая — при рассмотрении ее в качестве скрипта на стороне клиента — обратную передачу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-282">A string that, when treated as script on the client, initiates the postback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13ad9-283">Для реализации <xref:System.Web.UI.IPostBackEventHandler> интерфейс для <xref:System.Web.UI.Page>, используйте директиву.</span><span class="sxs-lookup"><span data-stu-id="13ad9-283">To implement the <xref:System.Web.UI.IPostBackEventHandler> interface for a <xref:System.Web.UI.Page>, use the  directive.</span></span>  
  
 <span data-ttu-id="13ad9-284"><xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> Метод может использоваться с <xref:System.Web.UI.WebControls.Button> управления <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> свойство `false`.</span><span class="sxs-lookup"><span data-stu-id="13ad9-284">The <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method can be used with the <xref:System.Web.UI.WebControls.Button> control when the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`.</span></span> <span data-ttu-id="13ad9-285">В этом случае <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> возвращает клиентскую обратную передачу событий для <xref:System.Web.UI.WebControls.Button> элемента управления.</span><span class="sxs-lookup"><span data-stu-id="13ad9-285">In this scenario, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method returns the client postback event for the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 <span data-ttu-id="13ad9-286">Если `registerForEventValidation` имеет значение true, <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> вызовы методов <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> метод, чтобы зарегистрировать ссылку на событие для проверки с уникальным ИД элемента управления, представляющий клиентский элемент управления, который создает событие.</span><span class="sxs-lookup"><span data-stu-id="13ad9-286">If `registerForEventValidation` is true, the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%2CSystem.Boolean%29> method calls the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%28System.String%2CSystem.String%29> method to register the event reference for validation with a unique control ID that represents the client control that is generating the event.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="13ad9-287">Указанное значение <see cref="T:System.Web.UI.Control" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-287">The specified <see cref="T:System.Web.UI.Control" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="GetWebResourceUrl">
      <MemberSignature Language="C#" Value="public string GetWebResourceUrl (Type type, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetWebResourceUrl(class System.Type type, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetWebResourceUrl(Type ^ type, System::String ^ resourceName);" />
      <MemberSignature Language="F#" Value="member this.GetWebResourceUrl : Type * string -&gt; string" Usage="clientScriptManager.GetWebResourceUrl (type, resourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="13ad9-288">Тип ресурса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-288">The type of the resource.</span>
          </span>
        </param>
        <param name="resourceName">
          <span data-ttu-id="13ad9-289">Полное имя ресурса в сборке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-289">The fully qualified name of the resource in the assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13ad9-290">Возвращает ссылку URL-адреса на ресурс в сборке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-290">Gets a URL reference to a resource in an assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="13ad9-291">Ссылка URL-адреса на ресурс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-291">The URL reference to the resource.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13ad9-292"><xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> Метод возвращает ссылку URL-адреса ресурсов, внедренных в сборку.</span><span class="sxs-lookup"><span data-stu-id="13ad9-292">The <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> method returns a URL reference to a resource embedded in an assembly.</span></span> <span data-ttu-id="13ad9-293">Возвращаемая ссылка не является URL-кодированием.</span><span class="sxs-lookup"><span data-stu-id="13ad9-293">The returned reference is not URL encoded.</span></span> <span data-ttu-id="13ad9-294">Ресурсы можно файлы скриптов, изображений или статическим.</span><span class="sxs-lookup"><span data-stu-id="13ad9-294">Resources can be script files, images, or any static file.</span></span> <span data-ttu-id="13ad9-295">Указывается тип, на основе объекта, который будет осуществлять доступ к ресурсу.</span><span class="sxs-lookup"><span data-stu-id="13ad9-295">You specify the type based on the object that will be accessing the resource.</span></span>  
  
 <span data-ttu-id="13ad9-296">Зарегистрирован на странице веб-ресурс однозначно идентифицируется его имя и тип.</span><span class="sxs-lookup"><span data-stu-id="13ad9-296">A Web resource registered with the page is uniquely identified by its type and name.</span></span> <span data-ttu-id="13ad9-297">Страницы может быть зарегистрирован только один ресурс с заданным типом и пару "имя".</span><span class="sxs-lookup"><span data-stu-id="13ad9-297">Only one resource with a given type and name pair can be registered with the page.</span></span> <span data-ttu-id="13ad9-298">При попытке регистрации ресурса, который уже зарегистрирован создается дубликат зарегистрированного ресурса.</span><span class="sxs-lookup"><span data-stu-id="13ad9-298">Attempting to register a resource that is already registered does not create a duplicate of the registered resource.</span></span>  
  
 <span data-ttu-id="13ad9-299"><xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> Метод используется в сочетании с <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> метод для доступа к ресурсам, внедренным в сборки.</span><span class="sxs-lookup"><span data-stu-id="13ad9-299">The <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> method is used in conjunction with the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method for accessing resources embedded in assemblies.</span></span> <span data-ttu-id="13ad9-300">Дополнительные сведения об использовании ресурсов в приложениях, см. в разделе [ASP.NET Web Page Resources Overview](http://msdn.microsoft.com/library/0936b3b2-9e6e-4abe-9c06-364efef9dbbd).</span><span class="sxs-lookup"><span data-stu-id="13ad9-300">For more information on using resources in applications, see [ASP.NET Web Page Resources Overview](http://msdn.microsoft.com/library/0936b3b2-9e6e-4abe-9c06-364efef9dbbd).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13ad9-301">В следующем примере кода демонстрируется использование <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="13ad9-301">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.GetWebResourceUrl%2A> method.</span></span> <span data-ttu-id="13ad9-302">*Типа* параметра в этом примере присваивается тип класса в сборке, содержащей ресурс.</span><span class="sxs-lookup"><span data-stu-id="13ad9-302">The *type* parameter in this example is set to the type of class in the assembly containing the resource.</span></span> <span data-ttu-id="13ad9-303">`resourceName` Параметр указан с полный путь к ресурсу, который включает в себя пространство имен по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="13ad9-303">The `resourceName` parameter is specified with the fully qualified path to the resource, which includes the default namespace.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/clientscriptwebresource.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/clientscriptwebresource.aspx#1)]  
  
 <span data-ttu-id="13ad9-304">В следующем примере кода показано, как программно применять <xref:System.Web.UI.WebResourceAttribute> атрибут метаданных, чтобы пометить сборку для ресурсов, которые будут обслуживаться.</span><span class="sxs-lookup"><span data-stu-id="13ad9-304">The following code example demonstrates how to programmatically apply the <xref:System.Web.UI.WebResourceAttribute> metadata attribute to mark the assembly for the resources that will be served.</span></span> <span data-ttu-id="13ad9-305">Скомпилируйте следующий класс в библиотеке классов пространства имен по умолчанию, равным `Samples.AspNet.CS.Controls` или `Samples.AspNet.VB.Controls`в зависимости от языка вы используете.</span><span class="sxs-lookup"><span data-stu-id="13ad9-305">Compile the following class in a class library with a default namespace set to `Samples.AspNet.CS.Controls` or `Samples.AspNet.VB.Controls`, depending on what language you are using.</span></span>  
  
 [!code-csharp[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/resource.cs#2)]
 [!code-vb[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/resource.vb#2)]  
  
 <span data-ttu-id="13ad9-306">В этом примере требуется файл JavaScript с именем `Script_include.js`.</span><span class="sxs-lookup"><span data-stu-id="13ad9-306">This example requires a JavaScript file named `Script_include.js`.</span></span> <span data-ttu-id="13ad9-307">JS-файла является внедренного ресурса в сборку, содержащую `ClientScriptResourceLabel` объекта.</span><span class="sxs-lookup"><span data-stu-id="13ad9-307">The .js file is an embedded resource in the assembly that contains the `ClientScriptResourceLabel` object.</span></span> <span data-ttu-id="13ad9-308">Если вы используете Visual Studio], в окне свойств проекта библиотеки классов, задайте **действие при построении** для **внедренный ресурс** при выборе файла скрипта.</span><span class="sxs-lookup"><span data-stu-id="13ad9-308">If you are using Visual Studio], in the Properties window of the class library project, set **Build Action** to **Embedded Resource** when the script file is selected.</span></span> <span data-ttu-id="13ad9-309">При компиляции библиотеки из командной строки, служит для внедрения ресурса.</span><span class="sxs-lookup"><span data-stu-id="13ad9-309">If you are compiling the library at the command line, use the  switch to embed the resource.</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from resource script.'}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="13ad9-310">Имя веб-ресурса — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-310">The web resource name is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="13ad9-311">\- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-311">\- or -</span>
          </span>
          <span data-ttu-id="13ad9-312">Длина имени веб-ресурса равна 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-312">The web resource name has a length of zero.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)" />
        <altmember cref="T:System.Web.UI.WebResourceAttribute" />
        <altmember cref="T:System.Web.Handlers.AssemblyResourceLoader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsClientScriptBlockRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="13ad9-313">Определяет, зарегистрирован ли блок клиентского скрипта с объектом <see cref="T:System.Web.UI.Page" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-313">Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsClientScriptBlockRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptBlockRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptBlockRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsClientScriptBlockRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptBlockRegistered(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsClientScriptBlockRegistered : string -&gt; bool" Usage="clientScriptManager.IsClientScriptBlockRegistered key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="13ad9-314">Ключ блока клиентского скрипта, используемый для поиска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-314">The key of the client script block to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13ad9-315">Определяет, зарегистрирован ли блок клиентского скрипта с объектом <see cref="T:System.Web.UI.Page" />, используя указанный ключ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-315">Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="13ad9-316">
            <see langword="true" />, если блок клиентского скрипта зарегистрирован; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-316">
              <see langword="true" /> if the client script block is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13ad9-317">Вызовите этот метод перед вызовом <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> метод, чтобы избежать повторяющихся сценариев регистрации.</span><span class="sxs-lookup"><span data-stu-id="13ad9-317">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="13ad9-318">Это особенно важно в том случае, если сценарий требует большой объем серверных ресурсов.</span><span class="sxs-lookup"><span data-stu-id="13ad9-318">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="13ad9-319">Клиентский скрипт однозначно идентифицируется ключом и его тип.</span><span class="sxs-lookup"><span data-stu-id="13ad9-319">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="13ad9-320">Сценарии с один и тот же ключ и тип считаются повторяющимися.</span><span class="sxs-lookup"><span data-stu-id="13ad9-320">Scripts with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="13ad9-321">Эта перегрузка <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> метод вызывает перегрузку, принимающую оба `key` и `type` параметр с типом в качестве <xref:System.Web.UI.Page> объекта</span><span class="sxs-lookup"><span data-stu-id="13ad9-321">This overload of the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method calls the overload that takes both a `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object</span></span>  
  
   
  
## Examples  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs2.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb2.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock" />
      </Docs>
    </Member>
    <Member MemberName="IsClientScriptBlockRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptBlockRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptBlockRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptBlockRegistered(Type ^ type, System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsClientScriptBlockRegistered : Type * string -&gt; bool" Usage="clientScriptManager.IsClientScriptBlockRegistered (type, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="13ad9-322">Тип блока клиентского скрипта, используемый для поиска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-322">The type of the client script block to search for.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="13ad9-323">Ключ блока клиентского скрипта, используемый для поиска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-323">The key of the client script block to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13ad9-324">Определяет, зарегистрирован ли блок клиентского скрипта с объектом <see cref="T:System.Web.UI.Page" />, используя ключ и тип.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-324">Determines whether the client script block is registered with the <see cref="T:System.Web.UI.Page" /> object using a key and type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="13ad9-325">
            <see langword="true" />, если блок клиентского скрипта зарегистрирован; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-325">
              <see langword="true" /> if the client script block is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13ad9-326">Вызовите этот метод перед вызовом <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> метод, чтобы избежать повторяющихся сценариев регистрации.</span><span class="sxs-lookup"><span data-stu-id="13ad9-326">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="13ad9-327">Это особенно важно в том случае, если сценарий требует большой объем серверных ресурсов.</span><span class="sxs-lookup"><span data-stu-id="13ad9-327">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="13ad9-328">Клиентский скрипт однозначно идентифицируется ключом и его тип.</span><span class="sxs-lookup"><span data-stu-id="13ad9-328">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="13ad9-329">Сценарии с один и тот же ключ и тип считаются повторяющимися.</span><span class="sxs-lookup"><span data-stu-id="13ad9-329">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="13ad9-330">Указывается тип, на основе объекта, который будет осуществлять доступ к ресурсу.</span><span class="sxs-lookup"><span data-stu-id="13ad9-330">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="13ad9-331">Например при использовании `Page` экземпляр для доступа к ресурсу, можно указать `Page` типа.</span><span class="sxs-lookup"><span data-stu-id="13ad9-331">For instance, when using a `Page` instance to access the resource, you specify the `Page` type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13ad9-332">В следующем примере кода демонстрируется использование <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="13ad9-332">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method.</span></span> <span data-ttu-id="13ad9-333">Обратите внимание, что, если были удалены, логика для проверки существующего блок клиентского скрипта, будет не два повторяющихся клиентских скриптов в исходном коде HTML, отображаемой страницы поскольку <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> метод проверяет наличие дубликатов.</span><span class="sxs-lookup"><span data-stu-id="13ad9-333">Note that, if the logic to check for the existing client script block were removed, there would not be two duplicate client scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method checks for duplicates.</span></span> <span data-ttu-id="13ad9-334">Преимущество проверки заключается в сокращении ненужных вычислений.</span><span class="sxs-lookup"><span data-stu-id="13ad9-334">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="13ad9-335">Тип клиентского скрипта — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-335">The client script type is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered(System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsClientScriptIncludeRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="13ad9-336">Определяет, зарегистрировано ли включение клиентского скрипта с объектом <see cref="T:System.Web.UI.Page" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-336">Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsClientScriptIncludeRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptIncludeRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptIncludeRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsClientScriptIncludeRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptIncludeRegistered(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsClientScriptIncludeRegistered : string -&gt; bool" Usage="clientScriptManager.IsClientScriptIncludeRegistered key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="13ad9-337">Ключ включения клиентского скрипта, используемый для поиска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-337">The key of the client script include to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13ad9-338">Определяет, зарегистрировано ли включение клиентского скрипта с объектом <see cref="T:System.Web.UI.Page" />, используя указанный ключ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-338">Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="13ad9-339">
            <see langword="true" />, если включение клиентского скрипта зарегистрировано; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-339">
              <see langword="true" /> if the client script include is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13ad9-340">Вызовите этот метод перед вызовом <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> метод, чтобы избежать повторяющихся сценариев регистрации.</span><span class="sxs-lookup"><span data-stu-id="13ad9-340">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="13ad9-341">Это особенно важно в том случае, если сценарий требует большой объем серверных ресурсов.</span><span class="sxs-lookup"><span data-stu-id="13ad9-341">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="13ad9-342">Включение клиентского скрипта однозначно идентифицируется ключом и его тип.</span><span class="sxs-lookup"><span data-stu-id="13ad9-342">A client script include is uniquely identified by its key and its type.</span></span> <span data-ttu-id="13ad9-343">Сценарии с один и тот же ключ и тип считаются повторяющимися.</span><span class="sxs-lookup"><span data-stu-id="13ad9-343">Scripts with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="13ad9-344">Эта перегрузка <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> метод вызывает перегрузку, принимающую оба `key` и `type` параметр с типом в качестве <xref:System.Web.UI.Page> объекта.</span><span class="sxs-lookup"><span data-stu-id="13ad9-344">This overload of the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method calls the overload that takes both a `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude" />
      </Docs>
    </Member>
    <Member MemberName="IsClientScriptIncludeRegistered">
      <MemberSignature Language="C#" Value="public bool IsClientScriptIncludeRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsClientScriptIncludeRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsClientScriptIncludeRegistered(Type ^ type, System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsClientScriptIncludeRegistered : Type * string -&gt; bool" Usage="clientScriptManager.IsClientScriptIncludeRegistered (type, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="13ad9-345">Тип включения клиентского скрипта, используемый для поиска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-345">The type of the client script include to search for.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="13ad9-346">Ключ включения клиентского скрипта, используемый для поиска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-346">The key of the client script include to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13ad9-347">Определяет, зарегистрировано ли включение клиентского скрипта с объектом <see cref="T:System.Web.UI.Page" />, используя ключ и тип.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-347">Determines whether the client script include is registered with the <see cref="T:System.Web.UI.Page" /> object using a key and type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="13ad9-348">
            <see langword="true" />, если включение клиентского скрипта зарегистрировано; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-348">
              <see langword="true" /> if the client script include is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13ad9-349">Вызовите этот метод перед вызовом <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> включает метод, чтобы исключить регистрацию повторяющиеся клиентского скрипта.</span><span class="sxs-lookup"><span data-stu-id="13ad9-349">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method to avoid registering duplicate client script includes.</span></span> <span data-ttu-id="13ad9-350">Это особенно важно в том случае, если сценарий требует большой объем серверных ресурсов.</span><span class="sxs-lookup"><span data-stu-id="13ad9-350">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="13ad9-351">Включение клиентского скрипта однозначно идентифицируется ключом и его тип.</span><span class="sxs-lookup"><span data-stu-id="13ad9-351">A client script include is uniquely identified by its key and its type.</span></span> <span data-ttu-id="13ad9-352">Сценарии с один и тот же ключ и тип считаются повторяющимися.</span><span class="sxs-lookup"><span data-stu-id="13ad9-352">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="13ad9-353">Указывается тип, на основе объекта, который будет осуществлять доступ к ресурсу.</span><span class="sxs-lookup"><span data-stu-id="13ad9-353">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="13ad9-354">Например, при использовании экземпляра Page для доступа к ресурсу, указывается `Page` типа.</span><span class="sxs-lookup"><span data-stu-id="13ad9-354">For instance, when using a Page instance to access the resource, you specify the `Page` type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13ad9-355">В следующем примере кода демонстрируется использование <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="13ad9-355">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> method.</span></span> <span data-ttu-id="13ad9-356">Обратите внимание, что, если логика для проверки для существующего клиентского скрипта включают были удалены, будет не два повторяющихся клиентских скриптов в исходном коде HTML, отображаемой страницы поскольку <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> метод проверяет наличие дубликатов.</span><span class="sxs-lookup"><span data-stu-id="13ad9-356">Note that, if the logic to check for the existing client script include were removed, there would not be two duplicate client scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method checks for duplicates.</span></span> <span data-ttu-id="13ad9-357">Преимущество проверки заключается в сокращении ненужных вычислений.</span><span class="sxs-lookup"><span data-stu-id="13ad9-357">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/cs/clientscriptincludes.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/vb/clientscriptincludes.aspx#1)]  
  
 <span data-ttu-id="13ad9-358">В этом примере требуется файл JavaScript с именем `Script_include.js`, со следующим содержимым:</span><span class="sxs-lookup"><span data-stu-id="13ad9-358">This example requires a JavaScript file named `Script_include.js`, with the following contents:</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from include script.'}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="13ad9-359">Тип включения клиентского скрипта — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-359">The client script include type is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered(System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsOnSubmitStatementRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="13ad9-360">Определяет, зарегистрирован ли оператор OnSubmit с объектом <see cref="T:System.Web.UI.Page" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-360">Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsOnSubmitStatementRegistered">
      <MemberSignature Language="C#" Value="public bool IsOnSubmitStatementRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOnSubmitStatementRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsOnSubmitStatementRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOnSubmitStatementRegistered(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsOnSubmitStatementRegistered : string -&gt; bool" Usage="clientScriptManager.IsOnSubmitStatementRegistered key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="13ad9-361">Ключ оператора OnSubmit, используемый для поиска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-361">The key of the OnSubmit statement to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13ad9-362">Определяет, зарегистрирован ли оператор OnSubmit с объектом <see cref="T:System.Web.UI.Page" />, используя указанный ключ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-362">Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="13ad9-363">
            <see langword="true" />, если оператор OnSubmit зарегистрирован; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-363">
              <see langword="true" /> if the OnSubmit statement is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13ad9-364">Вызовите этот метод перед вызовом <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> метод, чтобы избежать повторяющихся инструкций OnSubmit регистрации.</span><span class="sxs-lookup"><span data-stu-id="13ad9-364">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method to avoid registering duplicate OnSubmit statements.</span></span> <span data-ttu-id="13ad9-365">Это особенно важно в том случае, если оператор требует большой объем серверных ресурсов.</span><span class="sxs-lookup"><span data-stu-id="13ad9-365">This is particularly important if the statement requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="13ad9-366">Оператор однозначно идентифицируется ключом и его тип.</span><span class="sxs-lookup"><span data-stu-id="13ad9-366">A statement is uniquely identified by its key and its type.</span></span> <span data-ttu-id="13ad9-367">Инструкции с один и тот же ключ и тип считаются повторяющимися.</span><span class="sxs-lookup"><span data-stu-id="13ad9-367">Statements with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="13ad9-368">Эта перегрузка <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> метод вызывает перегрузку, принимающую оба `key` и `type` параметр с типом в качестве <xref:System.Web.UI.Page> объекта</span><span class="sxs-lookup"><span data-stu-id="13ad9-368">This overload of the <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> method calls the overload that takes both a `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="IsOnSubmitStatementRegistered">
      <MemberSignature Language="C#" Value="public bool IsOnSubmitStatementRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsOnSubmitStatementRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsOnSubmitStatementRegistered(Type ^ type, System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsOnSubmitStatementRegistered : Type * string -&gt; bool" Usage="clientScriptManager.IsOnSubmitStatementRegistered (type, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="13ad9-369">Тип оператора OnSubmit, используемый для поиска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-369">The type of the OnSubmit statement to search for.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="13ad9-370">Ключ оператора OnSubmit, используемый для поиска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-370">The key of the OnSubmit statement to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13ad9-371">Определяет, зарегистрирован ли оператор OnSubmit с объектом <see cref="T:System.Web.UI.Page" />, используя указанные ключ и тип.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-371">Determines whether the OnSubmit statement is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key and type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="13ad9-372">
            <see langword="true" />, если оператор OnSubmit зарегистрирован; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-372">
              <see langword="true" /> if the OnSubmit statement is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13ad9-373">Вызовите этот метод перед вызовом <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> метод, чтобы исключить регистрацию повторяющихся инструкций.</span><span class="sxs-lookup"><span data-stu-id="13ad9-373">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method to avoid registering duplicate statements.</span></span> <span data-ttu-id="13ad9-374">Это особенно важно в том случае, если оператор требует большой объем серверных ресурсов.</span><span class="sxs-lookup"><span data-stu-id="13ad9-374">This is particularly important if the statement requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="13ad9-375">Оператор однозначно идентифицируется ключом и его тип.</span><span class="sxs-lookup"><span data-stu-id="13ad9-375">A statement is uniquely identified by its key and its type.</span></span> <span data-ttu-id="13ad9-376">Инструкции с один и тот же ключ и тип считаются повторяющимися.</span><span class="sxs-lookup"><span data-stu-id="13ad9-376">Statements with the same key and type are considered duplicates.</span></span> <span data-ttu-id="13ad9-377">Указывается тип, на основе объекта, который будет осуществлять доступ к ресурсу.</span><span class="sxs-lookup"><span data-stu-id="13ad9-377">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="13ad9-378">Например при использовании `Page` экземпляр для доступа к ресурсу, можно указать `Page` типа.</span><span class="sxs-lookup"><span data-stu-id="13ad9-378">For instance, when using a `Page` instance to access the resource, you specify the `Page` type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13ad9-379">В следующем примере кода демонстрируется использование <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="13ad9-379">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> method.</span></span> <span data-ttu-id="13ad9-380">Сценарий с именем `OnSubmitScript` зарегистрирован <xref:System.Web.UI.Page> таким образом, когда страницы отправки формы вызывается скрипт.</span><span class="sxs-lookup"><span data-stu-id="13ad9-380">A script named `OnSubmitScript` is registered with the <xref:System.Web.UI.Page> so that when the page's form is submitted the script is invoked.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/cs/clientscriptonsubmit.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/vb/clientscriptonsubmit.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="13ad9-381">Тип оператора OnSubmit — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-381">The OnSubmit statement type is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered(System.String)" />
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IsStartupScriptRegistered">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="13ad9-382">Определяет, зарегистрирован ли скрипт, активизируемый при запуске, с объектом <see cref="T:System.Web.UI.Page" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-382">Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IsStartupScriptRegistered">
      <MemberSignature Language="C#" Value="public bool IsStartupScriptRegistered (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsStartupScriptRegistered(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsStartupScriptRegistered (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsStartupScriptRegistered(System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsStartupScriptRegistered : string -&gt; bool" Usage="clientScriptManager.IsStartupScriptRegistered key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="13ad9-383">Ключ скрипта, активизируемого при запуске, для поиска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-383">The key of the startup script to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13ad9-384">Определяет, зарегистрирован ли скрипт, активизируемый при запуске, с объектом <see cref="T:System.Web.UI.Page" />, используя указанный ключ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-384">Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="13ad9-385">
            <see langword="true" />, если скрипт, активизируемый при запуске, зарегистрирован; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-385">
              <see langword="true" /> if the startup script is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13ad9-386">Вызовите этот метод перед вызовом <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> метод, чтобы избежать повторяющихся сценариев регистрации.</span><span class="sxs-lookup"><span data-stu-id="13ad9-386">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="13ad9-387">Это особенно важно в том случае, если сценарий требует большой объем серверных ресурсов.</span><span class="sxs-lookup"><span data-stu-id="13ad9-387">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="13ad9-388">Сценарий запуска однозначно идентифицируется ключом и его тип.</span><span class="sxs-lookup"><span data-stu-id="13ad9-388">A startup script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="13ad9-389">Сценарии с один и тот же ключ и тип считаются повторяющимися.</span><span class="sxs-lookup"><span data-stu-id="13ad9-389">Scripts with the same key and type are considered duplicates.</span></span>  
  
 <span data-ttu-id="13ad9-390">Эта перегрузка <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> метод вызывает перегрузку, которая принимает строку, оба `key` и `type` параметр с типом в качестве <xref:System.Web.UI.Page> объекта</span><span class="sxs-lookup"><span data-stu-id="13ad9-390">This overload of the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method calls the overload that takes both a string `key` and a `type` parameter with the type set as a <xref:System.Web.UI.Page> object</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterStartupScript" />
      </Docs>
    </Member>
    <Member MemberName="IsStartupScriptRegistered">
      <MemberSignature Language="C#" Value="public bool IsStartupScriptRegistered (Type type, string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsStartupScriptRegistered(class System.Type type, string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsStartupScriptRegistered(Type ^ type, System::String ^ key);" />
      <MemberSignature Language="F#" Value="member this.IsStartupScriptRegistered : Type * string -&gt; bool" Usage="clientScriptManager.IsStartupScriptRegistered (type, key)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="13ad9-391">Тип скрипта запуска, используемый при поиске.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-391">The type of the startup script to search for.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="13ad9-392">Ключ скрипта, активизируемого при запуске, для поиска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-392">The key of the startup script to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13ad9-393">Определяет, зарегистрирован ли скрипт, активизируемый при запуске, с объектом <see cref="T:System.Web.UI.Page" />, используя указанные ключ и тип.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-393">Determines whether the startup script is registered with the <see cref="T:System.Web.UI.Page" /> object using the specified key and type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="13ad9-394">
            <see langword="true" />, если скрипт, активизируемый при запуске, зарегистрирован; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-394">
              <see langword="true" /> if the startup script is registered; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13ad9-395">Вызовите этот метод перед вызовом <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> метод, чтобы избежать повторяющихся сценариев регистрации.</span><span class="sxs-lookup"><span data-stu-id="13ad9-395">Call this method before calling the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method to avoid registering duplicate scripts.</span></span> <span data-ttu-id="13ad9-396">Это особенно важно в том случае, если сценарий требует большой объем серверных ресурсов.</span><span class="sxs-lookup"><span data-stu-id="13ad9-396">This is particularly important if the script requires a large amount of server resources to create.</span></span>  
  
 <span data-ttu-id="13ad9-397">Сценарий запуска клиента однозначно идентифицируется ключом и его тип.</span><span class="sxs-lookup"><span data-stu-id="13ad9-397">A client startup script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="13ad9-398">Сценарии с один и тот же ключ и тип считаются повторяющимися.</span><span class="sxs-lookup"><span data-stu-id="13ad9-398">Scripts with the same key and type are considered duplicates.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13ad9-399">В следующем примере кода демонстрируется использование <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="13ad9-399">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method.</span></span> <span data-ttu-id="13ad9-400">Обратите внимание, что, если были удалены, логика для проверки существующего стартовый блок скрипта, будет не двух повторяющихся сценариев в исходном коде HTML, отображаемой страницы поскольку <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> метод проверяет наличие дубликатов.</span><span class="sxs-lookup"><span data-stu-id="13ad9-400">Note that, if the logic to check for the existing startup script block were removed, there would not be two duplicate startup scripts in the HTML source code of the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method checks for duplicates.</span></span> <span data-ttu-id="13ad9-401">Преимущество проверки заключается в сокращении ненужных вычислений.</span><span class="sxs-lookup"><span data-stu-id="13ad9-401">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="13ad9-402">Тип скрипта, активизируемого при запуске, — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-402">The startup script type is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered(System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterStartupScript" />
      </Docs>
    </Member>
    <Member MemberName="RegisterArrayDeclaration">
      <MemberSignature Language="C#" Value="public void RegisterArrayDeclaration (string arrayName, string arrayValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterArrayDeclaration(string arrayName, string arrayValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterArrayDeclaration (arrayName As String, arrayValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterArrayDeclaration(System::String ^ arrayName, System::String ^ arrayValue);" />
      <MemberSignature Language="F#" Value="member this.RegisterArrayDeclaration : string * string -&gt; unit" Usage="clientScriptManager.RegisterArrayDeclaration (arrayName, arrayValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arrayName" Type="System.String" />
        <Parameter Name="arrayValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="arrayName">
          <span data-ttu-id="13ad9-403">Имя массива для регистрации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-403">The array name to register.</span>
          </span>
        </param>
        <param name="arrayValue">
          <span data-ttu-id="13ad9-404">Значение или значения массива для регистрации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-404">The array value or values to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13ad9-405">Регистрирует объявление массива JavaScript с объектом <see cref="T:System.Web.UI.Page" />, используя имя массива и значение массива.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-405">Registers a JavaScript array declaration with the <see cref="T:System.Web.UI.Page" /> object using an array name and array value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13ad9-406"><xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> Проверяет, существует ли зарегистрированный массив с тем же именем, как имя, указанное в `arrayName` параметр и, если да, добавляет значения, указанные в `arrayValue` параметра.</span><span class="sxs-lookup"><span data-stu-id="13ad9-406">The <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> checks to see whether a registered array exists with the same name as the name specified in the `arrayName` parameter and, if so, adds the values specified in the `arrayValue` parameter.</span></span> <span data-ttu-id="13ad9-407">Так как базовый механизм хранения основана на <xref:System.Collections.ArrayList>, дубликаты разрешены.</span><span class="sxs-lookup"><span data-stu-id="13ad9-407">Because the underlying storage mechanism is based on an <xref:System.Collections.ArrayList>, duplicates are allowed.</span></span> <span data-ttu-id="13ad9-408">Если зарегистрированный массив с тем же именем, что `arrayName` параметр не существует, оно создается и значения в `arrayValue` параметр, добавленный к нему.</span><span class="sxs-lookup"><span data-stu-id="13ad9-408">If a registered array with the same name as the `arrayName` parameter does not exist, it is created and the values in the `arrayValue` parameter added to it.</span></span>  
  
 <span data-ttu-id="13ad9-409">Если требуется, чтобы строковые литералы в результирующий массив JavaScript, используйте одиночные кавычки (') или экранировать двойные кавычки (\\«) в `arrayValue` параметра.</span><span class="sxs-lookup"><span data-stu-id="13ad9-409">If you want string literals in the resulting JavaScript array, include single quotation marks (') or escaped double quotation marks (\\") in the `arrayValue` parameter.</span></span> <span data-ttu-id="13ad9-410">Значение `arrayValue` параметр должен быть один элемент.</span><span class="sxs-lookup"><span data-stu-id="13ad9-410">The value of the `arrayValue` parameter should be a single element.</span></span> <span data-ttu-id="13ad9-411">Если более одного значения должен быть добавлен в массив, несколько вызовов с помощью <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="13ad9-411">If more than one value needs to be added to the array, make multiple calls using the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13ad9-412">В следующем примере кода демонстрируется использование <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> и <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="13ad9-412">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> and <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> methods.</span></span> <span data-ttu-id="13ad9-413">В примере регистрируется массив и скрытое значение, а также определяет `OnClick` событие `<input>` кнопку, чтобы вычислить сумму двух значений массива и скрытое значение.</span><span class="sxs-lookup"><span data-stu-id="13ad9-413">The example registers an array and a hidden value and defines the `OnClick` event of an `<input>` button to calculate the sum of two values of the array and the hidden value.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/cs/clientscriptregisterarray.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/vb/clientscriptregisterarray.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="13ad9-414">
            <paramref name="arrayName" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-414">
              <paramref name="arrayName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.String.Split" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterClientScriptBlock">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="13ad9-415">Регистрирует клиентский скрипт с объектом <see cref="T:System.Web.UI.Page" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-415">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterClientScriptBlock">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptBlock (Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptBlock(class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptBlock(Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberSignature Language="F#" Value="member this.RegisterClientScriptBlock : Type * string * string -&gt; unit" Usage="clientScriptManager.RegisterClientScriptBlock (type, key, script)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="13ad9-416">Тип регистрируемого клиентского скрипта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-416">The type of the client script to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="13ad9-417">Ключ регистрируемого клиентского скрипта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-417">The key of the client script to register.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="13ad9-418">Константа регистрируемого клиентского скрипта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-418">The client script literal to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13ad9-419">Регистрирует клиентский скрипт с объектом <see cref="T:System.Web.UI.Page" />, используя тип, ключ и константу скрипта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-419">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a type, key, and script literal.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13ad9-420">Клиентский скрипт однозначно идентифицируется ключом и его тип.</span><span class="sxs-lookup"><span data-stu-id="13ad9-420">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="13ad9-421">Сценарии с один и тот же ключ и тип считаются повторяющимися.</span><span class="sxs-lookup"><span data-stu-id="13ad9-421">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="13ad9-422">Страницы может быть зарегистрирован только один скрипт с заданным типом и пару ключей.</span><span class="sxs-lookup"><span data-stu-id="13ad9-422">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="13ad9-423">Попытка зарегистрировать скрипт, который уже зарегистрирован создается дубликат скрипта.</span><span class="sxs-lookup"><span data-stu-id="13ad9-423">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="13ad9-424">Вызовите <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> метод, чтобы определить ли клиентский скрипт с заданной парой ключ и тип зарегистрирован и избежать ненужной попытки добавления скрипта.</span><span class="sxs-lookup"><span data-stu-id="13ad9-424">Call the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method to determine whether a client script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="13ad9-425">В этой перегрузке <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> метод, убедитесь, что он предоставлен в `script` параметра упаковывается в `<script>` элемент блока.</span><span class="sxs-lookup"><span data-stu-id="13ad9-425">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method, you must make sure that the script provided in the `script` parameter is wrapped in a `<script>` element block.</span></span>  
  
 <span data-ttu-id="13ad9-426"><xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Метод добавляет блок скрипта в начало отображаемой страницы.</span><span class="sxs-lookup"><span data-stu-id="13ad9-426">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method adds a script block to the top of the rendered page.</span></span> <span data-ttu-id="13ad9-427">Блоки скриптов не обязательно будут выводиться в порядке, в котором они зарегистрированы.</span><span class="sxs-lookup"><span data-stu-id="13ad9-427">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="13ad9-428">Если важен порядок блоков сценария, используйте <xref:System.Text.StringBuilder> для сбора скриптов вместе в одной строке, а затем зарегистрировать их все в один блок клиентского скрипта.</span><span class="sxs-lookup"><span data-stu-id="13ad9-428">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13ad9-429">В следующем примере кода демонстрируется использование <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="13ad9-429">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.clientscriptmanager12/cs/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.clientscriptmanager12/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptBlock">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptBlock (Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptBlock(class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptBlock(Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags);" />
      <MemberSignature Language="F#" Value="member this.RegisterClientScriptBlock : Type * string * string * bool -&gt; unit" Usage="clientScriptManager.RegisterClientScriptBlock (type, key, script, addScriptTags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="13ad9-430">Тип регистрируемого клиентского скрипта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-430">The type of the client script to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="13ad9-431">Ключ регистрируемого клиентского скрипта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-431">The key of the client script to register.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="13ad9-432">Константа регистрируемого клиентского скрипта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-432">The client script literal to register.</span>
          </span>
        </param>
        <param name="addScriptTags">
          <span data-ttu-id="13ad9-433">Логическое значение, указывающее, требуется ли добавление тегов скрипта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-433">A Boolean value indicating whether to add script tags.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13ad9-434">Регистрирует клиентский скрипт с объектом <see cref="T:System.Web.UI.Page" />, используя тип, ключ, константу скрипта и логическое значение, указывающее следует ли добавление тегов скрипта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-434">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a type, key, script literal, and Boolean value indicating whether to add script tags.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13ad9-435">Клиентский скрипт однозначно идентифицируется ключом и его тип.</span><span class="sxs-lookup"><span data-stu-id="13ad9-435">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="13ad9-436">Сценарии с один и тот же ключ и тип считаются повторяющимися.</span><span class="sxs-lookup"><span data-stu-id="13ad9-436">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="13ad9-437">Страницы может быть зарегистрирован только один скрипт с заданным типом и пару ключей.</span><span class="sxs-lookup"><span data-stu-id="13ad9-437">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="13ad9-438">Попытка зарегистрировать скрипт, который уже зарегистрирован создается дубликат скрипта.</span><span class="sxs-lookup"><span data-stu-id="13ad9-438">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="13ad9-439">Вызовите <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> метод, чтобы определить, зарегистрирован ли клиентский скрипт с заданной парой ключ и тип.</span><span class="sxs-lookup"><span data-stu-id="13ad9-439">Call the <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A> method to determine whether a client script with a given key and type pair is already registered.</span></span> <span data-ttu-id="13ad9-440">Это позволяет избежать ненужной попытки добавления скрипта.</span><span class="sxs-lookup"><span data-stu-id="13ad9-440">This lets you avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="13ad9-441">В этой перегрузке <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> метод, вы можете указывает, что скрипт в `script` параметр заключается в оболочку с `<script>` блока элементов с помощью `addScriptTags` параметра.</span><span class="sxs-lookup"><span data-stu-id="13ad9-441">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method, you can indicate whether the script provided in the `script` parameter is wrapped with a `<script>` element block by using the `addScriptTags` parameter.</span></span> <span data-ttu-id="13ad9-442">Установка `addScriptTags` для `true` указывает, что теги сценариев будут добавляться автоматически.</span><span class="sxs-lookup"><span data-stu-id="13ad9-442">Setting `addScriptTags` to `true` indicates that script tags will be added automatically.</span></span>  
  
 <span data-ttu-id="13ad9-443"><xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> Метод добавляет блок скрипта в начало отображаемой страницы.</span><span class="sxs-lookup"><span data-stu-id="13ad9-443">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method adds a script block to the top of the rendered page.</span></span> <span data-ttu-id="13ad9-444">Блоки скриптов не обязательно будут выводиться в порядке, в котором они зарегистрированы.</span><span class="sxs-lookup"><span data-stu-id="13ad9-444">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="13ad9-445">Если важен порядок блоков сценария, используйте <xref:System.Text.StringBuilder> для сбора скриптов вместе в одной строке, а затем зарегистрировать их все в один блок клиентского скрипта.</span><span class="sxs-lookup"><span data-stu-id="13ad9-445">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13ad9-446">В следующем примере кода демонстрируется использование <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="13ad9-446">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A> method.</span></span> <span data-ttu-id="13ad9-447">Обратите внимание, что `addScriptTags` параметр имеет значение `true` , начальный и закрывающий теги сценариев не включаются `script` параметра.</span><span class="sxs-lookup"><span data-stu-id="13ad9-447">Note that the `addScriptTags` parameter is set to `true` so the beginning and closing script tags are not included with the `script` parameter.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="13ad9-448">Тип блока клиентского скрипта — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-448">The client script block type is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock(System.Type,System.String,System.String)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterClientScriptInclude">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="13ad9-449">Регистрирует включение клиентского скрипта с объектом <see cref="T:System.Web.UI.Page" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-449">Registers the client script include with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterClientScriptInclude">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptInclude (string key, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptInclude(string key, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterClientScriptInclude (key As String, url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptInclude(System::String ^ key, System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.RegisterClientScriptInclude : string * string -&gt; unit" Usage="clientScriptManager.RegisterClientScriptInclude (key, url)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="13ad9-450">Ключ регистрируемого включения клиентского скрипта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-450">The key of the client script include to register.</span>
          </span>
        </param>
        <param name="url">
          <span data-ttu-id="13ad9-451">URL-адрес регистрируемого включения клиентского скрипта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-451">The URL of the client script include to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13ad9-452">Регистрирует клиентский скрипт с объектом <see cref="T:System.Web.UI.Page" />, используя ключ и URL-адрес, который позволяет вызывать скрипт из клиента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-452">Registers the client script with the <see cref="T:System.Web.UI.Page" /> object using a key and a URL, which enables the script to be called from the client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13ad9-453">Включение клиентского скрипта однозначно идентифицируется ключом и его тип.</span><span class="sxs-lookup"><span data-stu-id="13ad9-453">A client script include is uniquely identified by its key and its type.</span></span> <span data-ttu-id="13ad9-454">Сценарии с один и тот же ключ и тип считаются повторяющимися.</span><span class="sxs-lookup"><span data-stu-id="13ad9-454">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="13ad9-455">Страницы может быть зарегистрирован только один скрипт с заданным типом и пару ключей.</span><span class="sxs-lookup"><span data-stu-id="13ad9-455">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="13ad9-456">Попытка зарегистрировать скрипт, который уже зарегистрирован создается дубликат скрипта.</span><span class="sxs-lookup"><span data-stu-id="13ad9-456">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="13ad9-457">Вызовите <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> метод, чтобы определить ли включение клиентского скрипта с данным ключом и пара типа уже зарегистрирован и избежать ненужной попытки добавления скрипта.</span><span class="sxs-lookup"><span data-stu-id="13ad9-457">Call the <xref:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered%2A> method to determine whether a client script include with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13ad9-458">Чтобы разрешить URL-адрес клиента, используйте <xref:System.Web.UI.Control.ResolveClientUrl%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="13ad9-458">To resolve the client URL, use the <xref:System.Web.UI.Control.ResolveClientUrl%2A> method.</span></span> <span data-ttu-id="13ad9-459">Этот метод использует контекст URL-адрес, на котором он вызывается для разрешения пути.</span><span class="sxs-lookup"><span data-stu-id="13ad9-459">This method uses the context of the URL on which it is called to resolve the path.</span></span>  
  
 <span data-ttu-id="13ad9-460">Эта перегрузка <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> метод вызывает перегрузку, принимающую `key`, `URL`и `type` параметра.</span><span class="sxs-lookup"><span data-stu-id="13ad9-460">This overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method calls the overload that takes a `key`, a `URL`, and a `type` parameter.</span></span>  
  
 <span data-ttu-id="13ad9-461">Метод добавляет блок скрипта в верхней части отображаемой страницы.</span><span class="sxs-lookup"><span data-stu-id="13ad9-461">The method adds a script block at the top of the rendered page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13ad9-462">Дополнительные сведения, включая синтаксис, использование и пример, см. в разделе <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>.</span><span class="sxs-lookup"><span data-stu-id="13ad9-462">For related information, including syntax, usage, and an example, see <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptInclude">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptInclude (Type type, string key, string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptInclude(class System.Type type, string key, string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptInclude(Type ^ type, System::String ^ key, System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.RegisterClientScriptInclude : Type * string * string -&gt; unit" Usage="clientScriptManager.RegisterClientScriptInclude (type, key, url)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="13ad9-463">Тип регистрируемого включения клиентского скрипта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-463">The type of the client script include to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="13ad9-464">Ключ регистрируемого включения клиентского скрипта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-464">The key of the client script include to register.</span>
          </span>
        </param>
        <param name="url">
          <span data-ttu-id="13ad9-465">URL-адрес регистрируемого включения клиентского скрипта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-465">The URL of the client script include to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13ad9-466">Регистрирует включение клиентского скрипта с объектом <see cref="T:System.Web.UI.Page" />, используя тип, ключ и URL-адрес.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-466">Registers the client script include with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a URL.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13ad9-467">Эта перегрузка <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> альбома *ключ* и *URL-адрес* параметры для определения скрипта на, а также `type` включать параметр, чтобы указать идентификатор клиентского скрипта.</span><span class="sxs-lookup"><span data-stu-id="13ad9-467">This overload of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method takes *key* and *url* parameters to identify the script, as well as a `type` parameter to specify the identification of the client script include.</span></span> <span data-ttu-id="13ad9-468">Указывается тип, на основе объекта, который будет осуществлять доступ к ресурсу.</span><span class="sxs-lookup"><span data-stu-id="13ad9-468">You specify the type based on the object that will be accessing the resource.</span></span> <span data-ttu-id="13ad9-469">Например при использовании `Page` экземпляр для доступа к ресурсу, можно указать `Page` типа.</span><span class="sxs-lookup"><span data-stu-id="13ad9-469">For instance, when using a `Page` instance to access the resource, you specify the `Page` type.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="13ad9-470">Чтобы разрешить URL-адрес клиента, используйте <xref:System.Web.UI.Control.ResolveClientUrl%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="13ad9-470">To resolve the client URL, use the <xref:System.Web.UI.Control.ResolveClientUrl%2A> method.</span></span> <span data-ttu-id="13ad9-471">Этот метод использует контекст URL-адрес, на котором он вызывается для разрешения пути.</span><span class="sxs-lookup"><span data-stu-id="13ad9-471">This method uses the context of the URL on which it is called to resolve the path.</span></span>  
  
 <span data-ttu-id="13ad9-472">Этот метод добавляет блок скрипта в верхней части отображаемой страницы.</span><span class="sxs-lookup"><span data-stu-id="13ad9-472">This method adds a script block at the top of the rendered page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13ad9-473">В следующем примере кода демонстрируется использование <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="13ad9-473">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method.</span></span> <span data-ttu-id="13ad9-474">Обратите внимание, что если логику для проверки для существующего клиентского скрипта включают были удалены, будет по-прежнему не повторяющиеся клиентских скриптов в отображаемой странице поскольку <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> метод проверяет наличие дубликатов.</span><span class="sxs-lookup"><span data-stu-id="13ad9-474">Note that if the logic to check for the existing client script include were removed, there would still not be duplicate client scripts in the rendered page because the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude%2A> method checks for duplicates.</span></span> <span data-ttu-id="13ad9-475">Преимущество проверки заключается в сокращении ненужных вычислений.</span><span class="sxs-lookup"><span data-stu-id="13ad9-475">The benefit of checking is to reduce unnecessary computation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/cs/clientscriptincludes.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager2/vb/clientscriptincludes.aspx#1)]  
  
 <span data-ttu-id="13ad9-476">В этом примере требуется файл JavaScript с именем и со следующим содержимым:</span><span class="sxs-lookup"><span data-stu-id="13ad9-476">This example requires a JavaScript file named Script_include.js with the following contents:</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from include script.'}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="13ad9-477">Тип включения клиентского скрипта — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-477">The client script include type is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="13ad9-478">URL-адрес имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-478">The URL is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="13ad9-479">\- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-479">\- or -</span>
          </span>
          <span data-ttu-id="13ad9-480">URL пуст.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-480">The URL is empty.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude(System.String,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.IsClientScriptIncludeRegistered" />
      </Docs>
    </Member>
    <Member MemberName="RegisterClientScriptResource">
      <MemberSignature Language="C#" Value="public void RegisterClientScriptResource (Type type, string resourceName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterClientScriptResource(class System.Type type, string resourceName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterClientScriptResource(System.Type,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterClientScriptResource(Type ^ type, System::String ^ resourceName);" />
      <MemberSignature Language="F#" Value="member this.RegisterClientScriptResource : Type * string -&gt; unit" Usage="clientScriptManager.RegisterClientScriptResource (type, resourceName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="resourceName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="13ad9-481">Тип регистрируемого ресурса клиентского скрипта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-481">The type of the client script resource to register.</span>
          </span>
        </param>
        <param name="resourceName">
          <span data-ttu-id="13ad9-482">Имя регистрируемого ресурса клиентского скрипта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-482">The name of the client script resource to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13ad9-483">Регистрирует ресурс клиентского скрипта с объектом <see cref="T:System.Web.UI.Page" />, используя тип и имя ресурса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-483">Registers the client script resource with the <see cref="T:System.Web.UI.Page" /> object using a type and a resource name.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13ad9-484"><xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> Метод используется, если доступ к ресурсам скомпилированный из сборки через обработчик WebResource.axd HTTP.</span><span class="sxs-lookup"><span data-stu-id="13ad9-484">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method is used when accessing compiled-in resources from assemblies through the WebResource.axd HTTP handler.</span></span> <span data-ttu-id="13ad9-485"><xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> Метод регистрирует скрипт с <xref:System.Web.UI.Page> объекта и запрещает повторяющиеся сценариев.</span><span class="sxs-lookup"><span data-stu-id="13ad9-485">The <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method registers the script with the <xref:System.Web.UI.Page> object and prevents duplicate scripts.</span></span> <span data-ttu-id="13ad9-486">Этот метод создает оболочку содержимое URL-адрес ресурса с `<script>` элемент блока.</span><span class="sxs-lookup"><span data-stu-id="13ad9-486">This method wraps the contents of the resource URL with a `<script>` element block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13ad9-487">В следующем примере кода демонстрируется использование <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="13ad9-487">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptResource%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/clientscriptwebresource.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/clientscriptwebresource.aspx#1)]  
  
 <span data-ttu-id="13ad9-488">В следующем примере кода показано, как программно применять <xref:System.Web.UI.WebResourceAttribute> атрибут метаданных, чтобы пометить сборку для ресурсов, которые будут обслуживаться.</span><span class="sxs-lookup"><span data-stu-id="13ad9-488">The following code example demonstrates how to programmatically apply the <xref:System.Web.UI.WebResourceAttribute> metadata attribute to mark the assembly for the resources that will be served.</span></span>  
  
 [!code-csharp[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/cs/resource.cs#2)]
 [!code-vb[System.Web.UI.ClientScriptManager4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager4/vb/resource.vb#2)]  
  
 <span data-ttu-id="13ad9-489">В этом примере требуется файл JavaScript с именем `Script_include.js`, со следующим содержимым:</span><span class="sxs-lookup"><span data-stu-id="13ad9-489">This example requires a JavaScript file named `Script_include.js`, with the following contents:</span></span>  
  
```  
function DoClick() {Form1.Message.value='Text from resource script.'}  
```  
  
 <span data-ttu-id="13ad9-490">Скомпилируйте `Script_include.js` файл как ресурс в `Samples.AspNet.CS.Controls` сборку, содержащую `ClientScriptResourceLabel` класса.</span><span class="sxs-lookup"><span data-stu-id="13ad9-490">Compile the `Script_include.js` file as a resource in the `Samples.AspNet.CS.Controls` assembly that contains the `ClientScriptResourceLabel` class.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="13ad9-491">Имя клиентского ресурса — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-491">The client resource name is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="13ad9-492">\- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-492">\- or -</span>
          </span>
          <span data-ttu-id="13ad9-493">Длина имени клиентского ресурса равна 0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-493">The client resource name has a length of zero.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetWebResourceUrl(System.Type,System.String)" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.RegisterClientScriptInclude" />
        <altmember cref="T:System.Web.Handlers.AssemblyResourceLoader" />
        <altmember cref="T:System.Web.UI.WebResourceAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterExpandoAttribute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="13ad9-494">Регистрирует пару "имя-значение" как пользовательский (expando) атрибут указанного элемента управления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-494">Registers a name/value pair as a custom (expando) attribute of the specified control.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterExpandoAttribute">
      <MemberSignature Language="C#" Value="public void RegisterExpandoAttribute (string controlId, string attributeName, string attributeValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterExpandoAttribute(string controlId, string attributeName, string attributeValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterExpandoAttribute (controlId As String, attributeName As String, attributeValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterExpandoAttribute(System::String ^ controlId, System::String ^ attributeName, System::String ^ attributeValue);" />
      <MemberSignature Language="F#" Value="member this.RegisterExpandoAttribute : string * string * string -&gt; unit" Usage="clientScriptManager.RegisterExpandoAttribute (controlId, attributeName, attributeValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlId" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="attributeValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="controlId">
          <span data-ttu-id="13ad9-495">Элемент управления <see cref="T:System.Web.UI.Control" /> на странице, содержащей пользовательский атрибут.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-495">The <see cref="T:System.Web.UI.Control" /> on the page that contains the custom attribute.</span>
          </span>
        </param>
        <param name="attributeName">
          <span data-ttu-id="13ad9-496">Имя регистрируемого пользовательского атрибута.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-496">The name of the custom attribute to register.</span>
          </span>
        </param>
        <param name="attributeValue">
          <span data-ttu-id="13ad9-497">Значение пользовательского атрибута.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-497">The value of the custom attribute.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13ad9-498">Регистрирует пару "имя-значение" как пользовательский (expando) атрибут указанного элемента управления с указанными идентификатором, именем атрибута и значением атрибута.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-498">Registers a name/value pair as a custom (expando) attribute of the specified control given a control ID, attribute name, and attribute value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13ad9-499"><xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> Метод регистрирует пару имя значение как пользовательский (expando) атрибут на указанном <xref:System.Web.UI.Control>.</span><span class="sxs-lookup"><span data-stu-id="13ad9-499">The <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> method registers a name/value pair as a custom (expando) attribute on the specified <xref:System.Web.UI.Control>.</span></span> <span data-ttu-id="13ad9-500">Атрибут expando устанавливается динамически из кода JavaScript для сохранения совместимости разметки отображаемых элементов управления XHTML.</span><span class="sxs-lookup"><span data-stu-id="13ad9-500">The expando attribute is set dynamically from JavaScript to preserve XHTML compatibility for the rendered control's markup.</span></span> <span data-ttu-id="13ad9-501">Кавычки и обратные косые черты в пользовательский (expando) атрибут значения экранируются.</span><span class="sxs-lookup"><span data-stu-id="13ad9-501">Quotes and backslashes in the custom (expando) attribute's values are escaped.</span></span> <span data-ttu-id="13ad9-502">Если вы не хотите escape-кавычки и обратные косые черты, вызвать <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> перегрузки метода и задайте `encode` параметр `false`.</span><span class="sxs-lookup"><span data-stu-id="13ad9-502">If you do not want to escape quotes and backslashes, call the <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> overload method and set the `encode` parameter to `false`.</span></span>  
  
 <span data-ttu-id="13ad9-503">Если атрибут expando не найден или не найден элемент управления для добавления атрибута expando, клиентский скрипт по-прежнему создается, но не влияет на элемент управления.</span><span class="sxs-lookup"><span data-stu-id="13ad9-503">If the expando attribute is not found or the control to add the expando attribute to is not found, the client script is still emitted, but it will not affect the control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.JScript.Expando" />
      </Docs>
    </Member>
    <Member MemberName="RegisterExpandoAttribute">
      <MemberSignature Language="C#" Value="public void RegisterExpandoAttribute (string controlId, string attributeName, string attributeValue, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterExpandoAttribute(string controlId, string attributeName, string attributeValue, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterExpandoAttribute (controlId As String, attributeName As String, attributeValue As String, encode As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterExpandoAttribute(System::String ^ controlId, System::String ^ attributeName, System::String ^ attributeValue, bool encode);" />
      <MemberSignature Language="F#" Value="member this.RegisterExpandoAttribute : string * string * string * bool -&gt; unit" Usage="clientScriptManager.RegisterExpandoAttribute (controlId, attributeName, attributeValue, encode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlId" Type="System.String" />
        <Parameter Name="attributeName" Type="System.String" />
        <Parameter Name="attributeValue" Type="System.String" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="controlId">
          <span data-ttu-id="13ad9-504">Элемент управления <see cref="T:System.Web.UI.Control" /> на странице, содержащей пользовательский атрибут.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-504">The <see cref="T:System.Web.UI.Control" /> on the page that contains the custom attribute.</span>
          </span>
        </param>
        <param name="attributeName">
          <span data-ttu-id="13ad9-505">Имя регистрируемого пользовательского атрибута.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-505">The name of the custom attribute to register.</span>
          </span>
        </param>
        <param name="attributeValue">
          <span data-ttu-id="13ad9-506">Значение пользовательского атрибута.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-506">The value of the custom attribute.</span>
          </span>
        </param>
        <param name="encode">
          <span data-ttu-id="13ad9-507">Логическое значение, указывающее будет ли кодироваться регистрируемый пользовательский атрибут.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-507">A Boolean value indicating whether to encode the custom attribute to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13ad9-508">Регистрирует пару "имя-значение" как пользовательский (expando) атрибут указанного элемента управления с указанными идентификатором, именем атрибута, значением атрибута и логическим значением, определяющим, будет ли кодироваться значение атрибута.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-508">Registers a name/value pair as a custom (expando) attribute of the specified control given a control ID, an attribute name, an attribute value, and a Boolean value indicating whether to encode the attribute value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13ad9-509"><xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> Метод регистрирует пару имя значение как пользовательский (expando) атрибут на указанном <xref:System.Web.UI.Control>.</span><span class="sxs-lookup"><span data-stu-id="13ad9-509">The <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> method registers a name/value pair as a custom (expando) attribute on the specified <xref:System.Web.UI.Control>.</span></span> <span data-ttu-id="13ad9-510">Атрибут expando устанавливается динамически из кода JavaScript для сохранения совместимости разметки отображаемых элементов управления XHTML.</span><span class="sxs-lookup"><span data-stu-id="13ad9-510">The expando attribute is set dynamically from JavaScript to preserve XHTML compatibility for the rendered control's markup.</span></span> <span data-ttu-id="13ad9-511">Задайте `encode` параметр `true` Если необходимо экранировать кавычки и обратные косые черты в значении атрибута expando.</span><span class="sxs-lookup"><span data-stu-id="13ad9-511">Set the `encode` parameter to `true` if you need to escape quotes and backslashes in your expando attribute's value.</span></span>  
  
 <span data-ttu-id="13ad9-512">Если атрибут expando не найден или не найден элемент управления для добавления атрибута expando, клиентский скрипт по-прежнему создается, но не влияет на элемент управления.</span><span class="sxs-lookup"><span data-stu-id="13ad9-512">If the expando attribute is not found or the control to add the expando attribute to is not found, the client script is still emitted, but it will not affect the control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13ad9-513">В следующем примере кода демонстрируется использование <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> метод <xref:System.Web.UI.ClientScriptManager> класса.</span><span class="sxs-lookup"><span data-stu-id="13ad9-513">The following code example demonstrates how to use the <xref:System.Web.UI.ClientScriptManager.RegisterExpandoAttribute%2A> method of the <xref:System.Web.UI.ClientScriptManager> class.</span></span> <span data-ttu-id="13ad9-514">Клиентский скрипт в отображаемой странице наборах `title` атрибут `<span>` элемента.</span><span class="sxs-lookup"><span data-stu-id="13ad9-514">The client script in the rendered page sets the `title` attribute of a `<span>` element.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager6/cs/clientscriptexpando.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager6/vb/clientscriptexpando.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:Microsoft.JScript.Expando" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterForEventValidation">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="13ad9-515">Регистрирует ссылку на событие для проверки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-515">Registers an event reference for validation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterForEventValidation">
      <MemberSignature Language="C#" Value="public void RegisterForEventValidation (string uniqueId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForEventValidation(string uniqueId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForEventValidation (uniqueId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForEventValidation(System::String ^ uniqueId);" />
      <MemberSignature Language="F#" Value="member this.RegisterForEventValidation : string -&gt; unit" Usage="clientScriptManager.RegisterForEventValidation uniqueId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId">
          <span data-ttu-id="13ad9-516">Уникальный ИД, представляющий клиентский элемент управления, генерирующий событие.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-516">A unique ID representing the client control generating the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13ad9-517">Регистрирует ссылку на событие для проверки с уникальным ИД элемента управления, представляющим клиентский элемент управления, генерирующий событие.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-517">Registers an event reference for validation with a unique control ID representing the client control generating the event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13ad9-518">Дополнительные сведения и примеры см. в разделе <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="13ad9-518">For more information and examples, see the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13ad9-519">В следующем примере показано, как использовать <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> метод и <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> метод, чтобы зарегистрировать обратный вызов для проверки, а также способы проверки, что обратный вызов поступил со страницы.</span><span class="sxs-lookup"><span data-stu-id="13ad9-519">The following example shows how to use the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method in order to register a callback for validation, and how to validate that the callback originated from the page.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/cs/eventvalidation2cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/vb/eventvalidation2vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterForEventValidation">
      <MemberSignature Language="C#" Value="public void RegisterForEventValidation (System.Web.UI.PostBackOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForEventValidation(class System.Web.UI.PostBackOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.Web.UI.PostBackOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForEventValidation (options As PostBackOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForEventValidation(System::Web::UI::PostBackOptions ^ options);" />
      <MemberSignature Language="F#" Value="member this.RegisterForEventValidation : System.Web.UI.PostBackOptions -&gt; unit" Usage="clientScriptManager.RegisterForEventValidation options" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="options" Type="System.Web.UI.PostBackOptions" />
      </Parameters>
      <Docs>
        <param name="options">
          <span data-ttu-id="13ad9-520">Объект <see cref="T:System.Web.UI.PostBackOptions" />, определяющий, как создается клиентский скрипт JavaScript для инициации обратной передачи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-520">A <see cref="T:System.Web.UI.PostBackOptions" /> object that specifies how client JavaScript is generated to initiate a postback event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13ad9-521">Регистрирует ссылку на событие для проверки с <see cref="T:System.Web.UI.PostBackOptions" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-521">Registers an event reference for validation with <see cref="T:System.Web.UI.PostBackOptions" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13ad9-522">Дополнительные сведения и примеры см. в разделе <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="13ad9-522">For more information and examples, see the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.ValidateEvent" />
      </Docs>
    </Member>
    <Member MemberName="RegisterForEventValidation">
      <MemberSignature Language="C#" Value="public void RegisterForEventValidation (string uniqueId, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterForEventValidation(string uniqueId, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterForEventValidation (uniqueId As String, argument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterForEventValidation(System::String ^ uniqueId, System::String ^ argument);" />
      <MemberSignature Language="F#" Value="member this.RegisterForEventValidation : string * string -&gt; unit" Usage="clientScriptManager.RegisterForEventValidation (uniqueId, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId">
          <span data-ttu-id="13ad9-523">Уникальный ИД, представляющий клиентский элемент управления, генерирующий событие.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-523">A unique ID representing the client control generating the event.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="13ad9-524">Аргументы события, переданные вместе с клиентским событием.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-524">Event arguments passed with the client event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13ad9-525">Регистрирует ссылку на событие для проверки с уникальным ИД элемента управления, представляющим клиентский элемент управления, генерирующий событие, и аргументами события.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-525">Registers an event reference for validation with a unique control ID and event arguments representing the client control generating the event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13ad9-526">В следующем примере кода показано использование <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> метод и <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> метод, чтобы зарегистрировать обратный вызов для проверки и проверить, что обратный вызов поступил со страницы.</span><span class="sxs-lookup"><span data-stu-id="13ad9-526">The following code example demonstrates using the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method to register a callback for validation and to validate that the callback originated from the page.</span></span> <span data-ttu-id="13ad9-527">Для улучшения проверки, показано в примере, можно изменить проверки `argument` параметр, содержащий сведения, относящиеся к пользователю, например удостоверение или роль.</span><span class="sxs-lookup"><span data-stu-id="13ad9-527">To improve on the validation shown in the example, you could modify the validation `argument` parameter to contain information specific to the user such as an identity or role</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/cs/EventValidationCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/vb/EventValidationVB.aspx#1)]  
  
 <span data-ttu-id="13ad9-528">В следующем примере кода показано использование <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> метод, чтобы зарегистрировать обратный вызов для проверки.</span><span class="sxs-lookup"><span data-stu-id="13ad9-528">The following code example demonstrates using the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method to register a callback for validation.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.clientscriptmanager10/cs/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.clientscriptmanager10/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="13ad9-529">Метод вызывается до метода <see cref="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-529">The method is called prior to the <see cref="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" /> method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterHiddenField">
      <MemberSignature Language="C#" Value="public void RegisterHiddenField (string hiddenFieldName, string hiddenFieldInitialValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterHiddenField(string hiddenFieldName, string hiddenFieldInitialValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterHiddenField(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterHiddenField (hiddenFieldName As String, hiddenFieldInitialValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterHiddenField(System::String ^ hiddenFieldName, System::String ^ hiddenFieldInitialValue);" />
      <MemberSignature Language="F#" Value="member this.RegisterHiddenField : string * string -&gt; unit" Usage="clientScriptManager.RegisterHiddenField (hiddenFieldName, hiddenFieldInitialValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="hiddenFieldName" Type="System.String" />
        <Parameter Name="hiddenFieldInitialValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="hiddenFieldName">
          <span data-ttu-id="13ad9-530">Имя регистрируемого скрытого поля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-530">The name of the hidden field to register.</span>
          </span>
        </param>
        <param name="hiddenFieldInitialValue">
          <span data-ttu-id="13ad9-531">Начальное значение регистрируемого поля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-531">The initial value of the field to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13ad9-532">Регистрирует скрытое значение с объектом <see cref="T:System.Web.UI.Page" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-532">Registers a hidden value with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13ad9-533"><xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> Метод создает скрытый `<input>` элементов на подготовленной странице HTML.</span><span class="sxs-lookup"><span data-stu-id="13ad9-533">The <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> method creates a hidden `<input>` element on the rendered HTML page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13ad9-534">В следующем примере кода демонстрируется использование <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> и <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="13ad9-534">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A> and <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A> methods.</span></span> <span data-ttu-id="13ad9-535">В примере регистрируется массив и скрытое значение, а также определяет `OnClick` событие `<input>` кнопку, чтобы вычислить сумму двух значений массива и скрытое значение.</span><span class="sxs-lookup"><span data-stu-id="13ad9-535">The example registers an array and a hidden value and defines the `OnClick` event of an `<input>` button to calculate the sum of two values of the array and the hidden value.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/cs/clientscriptregisterarray.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager5#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager5/vb/clientscriptregisterarray.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="13ad9-536">
            <paramref name="hiddenFieldName" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-536">
              <paramref name="hiddenFieldName" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.WebControls.HiddenField" />
      </Docs>
    </Member>
    <Member MemberName="RegisterOnSubmitStatement">
      <MemberSignature Language="C#" Value="public void RegisterOnSubmitStatement (Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterOnSubmitStatement(class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterOnSubmitStatement(Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberSignature Language="F#" Value="member this.RegisterOnSubmitStatement : Type * string * string -&gt; unit" Usage="clientScriptManager.RegisterOnSubmitStatement (type, key, script)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="13ad9-537">Тип регистрируемого оператора OnSubmit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-537">The type of the OnSubmit statement to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="13ad9-538">Ключ регистрируемого оператора OnSubmit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-538">The key of the OnSubmit statement to register.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="13ad9-539">Константа скрипта регистрируемого оператора OnSubmit.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-539">The script literal of the OnSubmit statement to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13ad9-540">Регистрирует оператор OnSubmit с объектом <see cref="T:System.Web.UI.Page" />, используя тип, ключ и константу скрипта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-540">Registers an OnSubmit statement with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a script literal.</span>
          </span>
          <span data-ttu-id="13ad9-541">Оператор выполняется, если <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> представляется на рассмотрение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-541">The statement executes when the <see cref="T:System.Web.UI.HtmlControls.HtmlForm" /> is submitted.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13ad9-542">Оператор OnSubmit однозначно идентифицируется ключом и его тип.</span><span class="sxs-lookup"><span data-stu-id="13ad9-542">An OnSubmit statement is uniquely identified by its key and its type.</span></span> <span data-ttu-id="13ad9-543">Инструкции с один и тот же ключ и тип считаются повторяющимися.</span><span class="sxs-lookup"><span data-stu-id="13ad9-543">Statements with the same key and type are considered duplicates.</span></span> <span data-ttu-id="13ad9-544">Можно зарегистрировать только одну инструкцию с заданным типом и пара ключей со страницей.</span><span class="sxs-lookup"><span data-stu-id="13ad9-544">Only one statement with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="13ad9-545">При попытке регистрации инструкцию, которая уже зарегистрирована не создает копию выбранной инструкции.</span><span class="sxs-lookup"><span data-stu-id="13ad9-545">Attempting to register a statement that is already registered will not create a duplicate of the statement.</span></span>  
  
 <span data-ttu-id="13ad9-546">Вызовите <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> метод, чтобы определить, зарегистрирован ли оператор OnSubmit с заданной парой ключ и тип и избежать ненужной попытки добавления скрипта.</span><span class="sxs-lookup"><span data-stu-id="13ad9-546">Call the <xref:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered%2A> method to determine whether an OnSubmit statement is already registered with a given key and type pair and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="13ad9-547">`script` Параметр <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> метод может содержать нескольких команд сценария, поскольку они правильно разделенные точкой с запятой (;).</span><span class="sxs-lookup"><span data-stu-id="13ad9-547">The `script` parameter of the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method can contain multiple script commands as long as they are properly delimited with a semicolon (;).</span></span>  
  
 <span data-ttu-id="13ad9-548"><xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> Добавляет скрипт, который выполняется перед отправкой страницы и дает возможность отменить отправку.</span><span class="sxs-lookup"><span data-stu-id="13ad9-548">The <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> adds a script that is executed before the page is submitted and gives you an opportunity to cancel the submission.</span></span>  
  
 <span data-ttu-id="13ad9-549">Дополнительные сведения о HTML-формы и `OnSubmit` атрибут, см. в разделе [World Wide Web Consortium (W3C) веб-сайт](http://go.microsoft.com/fwlink/?linkid=37125).</span><span class="sxs-lookup"><span data-stu-id="13ad9-549">For more information on HTML forms and the `OnSubmit` attribute, see the [World Wide Web Consortium (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13ad9-550">В следующем примере кода демонстрируется использование <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="13ad9-550">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/cs/clientscriptonsubmit.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager3/vb/clientscriptonsubmit.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="13ad9-551">
            <paramref name="type" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-551">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.UI.HtmlControls.HtmlForm" />
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.IsOnSubmitStatementRegistered" />
      </Docs>
    </Member>
    <MemberGroup MemberName="RegisterStartupScript">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="13ad9-552">Регистрирует скрипт, активизируемый при запуске, с объектом <see cref="T:System.Web.UI.Page" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-552">Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RegisterStartupScript">
      <MemberSignature Language="C#" Value="public void RegisterStartupScript (Type type, string key, string script);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterStartupScript(class System.Type type, string key, string script) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterStartupScript(Type ^ type, System::String ^ key, System::String ^ script);" />
      <MemberSignature Language="F#" Value="member this.RegisterStartupScript : Type * string * string -&gt; unit" Usage="clientScriptManager.RegisterStartupScript (type, key, script)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="13ad9-553">Тип регистрируемого скрипта, активизируемого при запуске.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-553">The type of the startup script to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="13ad9-554">Ключ регистрируемого скрипта, активизируемого при запуске.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-554">The key of the startup script to register.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="13ad9-555">Константа регистрируемого скрипта, активизируемого при запуске.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-555">The startup script literal to register.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13ad9-556">Регистрирует скрипт, активизируемый при запуске, с объектом <see cref="T:System.Web.UI.Page" />, используя тип, ключ и константу скрипта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-556">Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, and a script literal.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13ad9-557">Клиентский скрипт однозначно идентифицируется ключом и его тип.</span><span class="sxs-lookup"><span data-stu-id="13ad9-557">A client script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="13ad9-558">Сценарии с один и тот же ключ и тип считаются повторяющимися.</span><span class="sxs-lookup"><span data-stu-id="13ad9-558">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="13ad9-559">Страницы может быть зарегистрирован только один скрипт с заданным типом и пару ключей.</span><span class="sxs-lookup"><span data-stu-id="13ad9-559">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="13ad9-560">Попытка зарегистрировать скрипт, который уже зарегистрирован создается дубликат скрипта.</span><span class="sxs-lookup"><span data-stu-id="13ad9-560">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="13ad9-561">Вызовите <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> метод, чтобы определить ли сценарий запуска с заданной парой ключ и тип зарегистрирован и избежать ненужной попытки добавления скрипта.</span><span class="sxs-lookup"><span data-stu-id="13ad9-561">Call the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method to determine whether a startup script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="13ad9-562">В этой перегрузке <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> метод, убедитесь, что он предоставлен в `script` параметр заключается в оболочку с `<script>` элемент блока.</span><span class="sxs-lookup"><span data-stu-id="13ad9-562">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method, you must make sure that the script provided in the `script` parameter is wrapped with a `<script>` element block.</span></span>  
  
 <span data-ttu-id="13ad9-563">Блок скрипта, добавленные <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> выполняется метод, когда страница уже загружена, но перед <xref:System.Web.UI.Control.OnLoad%2A> события.</span><span class="sxs-lookup"><span data-stu-id="13ad9-563">The script block added by the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method executes when the page finishes loading but before the page's <xref:System.Web.UI.Control.OnLoad%2A> event is raised.</span></span> <span data-ttu-id="13ad9-564">Блоки скриптов не обязательно будут выводиться в порядке, в котором они зарегистрированы.</span><span class="sxs-lookup"><span data-stu-id="13ad9-564">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="13ad9-565">Если важен порядок блоков сценария, используйте <xref:System.Text.StringBuilder> для сбора скриптов вместе в одной строке, а затем зарегистрировать их все в один блок клиентского скрипта.</span><span class="sxs-lookup"><span data-stu-id="13ad9-565">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13ad9-566">В следующем примере кода демонстрируется использование <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="13ad9-566">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method.</span></span> <span data-ttu-id="13ad9-567">Обратите внимание, что начальный и закрывающий теги сценариев, включаются в `script` параметра.</span><span class="sxs-lookup"><span data-stu-id="13ad9-567">Note that the beginning and closing script tags are included within the `script` parameter.</span></span> <span data-ttu-id="13ad9-568">Для скрипта, теги, добавляемые на основе параметра дополнительный параметр, см. в разделе <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="13ad9-568">To have the script tags added based on an additional parameter setting, see the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager11#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.ui.clientscriptmanager11/cs/default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager11#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.ui.clientscriptmanager11/vb/default.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterStartupScript">
      <MemberSignature Language="C#" Value="public void RegisterStartupScript (Type type, string key, string script, bool addScriptTags);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterStartupScript(class System.Type type, string key, string script, bool addScriptTags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterStartupScript(Type ^ type, System::String ^ key, System::String ^ script, bool addScriptTags);" />
      <MemberSignature Language="F#" Value="member this.RegisterStartupScript : Type * string * string * bool -&gt; unit" Usage="clientScriptManager.RegisterStartupScript (type, key, script, addScriptTags)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="script" Type="System.String" />
        <Parameter Name="addScriptTags" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="13ad9-569">Тип регистрируемого скрипта, активизируемого при запуске.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-569">The type of the startup script to register.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="13ad9-570">Ключ регистрируемого скрипта, активизируемого при запуске.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-570">The key of the startup script to register.</span>
          </span>
        </param>
        <param name="script">
          <span data-ttu-id="13ad9-571">Константа регистрируемого скрипта, активизируемого при запуске.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-571">The startup script literal to register.</span>
          </span>
        </param>
        <param name="addScriptTags">
          <span data-ttu-id="13ad9-572">Логическое значение, указывающее, требуется ли добавление тегов скрипта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-572">A Boolean value indicating whether to add script tags.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13ad9-573">Регистрирует клиентский скрипт с объектом <see cref="T:System.Web.UI.Page" />, используя тип, ключ, константу скрипта и логическое значение, указывающее следует ли добавлять теги скрипта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-573">Registers the startup script with the <see cref="T:System.Web.UI.Page" /> object using a type, a key, a script literal, and a Boolean value indicating whether to add script tags.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="13ad9-574">Сценарий запуска однозначно идентифицируется ключом и его тип.</span><span class="sxs-lookup"><span data-stu-id="13ad9-574">A startup script is uniquely identified by its key and its type.</span></span> <span data-ttu-id="13ad9-575">Сценарии с один и тот же ключ и тип считаются повторяющимися.</span><span class="sxs-lookup"><span data-stu-id="13ad9-575">Scripts with the same key and type are considered duplicates.</span></span> <span data-ttu-id="13ad9-576">Страницы может быть зарегистрирован только один скрипт с заданным типом и пару ключей.</span><span class="sxs-lookup"><span data-stu-id="13ad9-576">Only one script with a given type and key pair can be registered with the page.</span></span> <span data-ttu-id="13ad9-577">Попытка зарегистрировать скрипт, который уже зарегистрирован создается дубликат скрипта.</span><span class="sxs-lookup"><span data-stu-id="13ad9-577">Attempting to register a script that is already registered does not create a duplicate of the script.</span></span>  
  
 <span data-ttu-id="13ad9-578">Вызовите <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> метод, чтобы определить ли сценарий запуска с заданной парой ключ и тип зарегистрирован и избежать ненужной попытки добавления скрипта.</span><span class="sxs-lookup"><span data-stu-id="13ad9-578">Call the <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A> method to determine whether a startup script with a given key and type pair is already registered and avoid unnecessarily attempting to add the script.</span></span>  
  
 <span data-ttu-id="13ad9-579">В этой перегрузке <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> метод, вы можете указывает, что скрипт в `script` параметр заключается в оболочку с `<script>` блока элементов с помощью `addScriptTags` параметра.</span><span class="sxs-lookup"><span data-stu-id="13ad9-579">In this overload of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method, you can indicate whether the script provided in the `script` parameter is wrapped with a `<script>` element block by using the `addScriptTags` parameter.</span></span> <span data-ttu-id="13ad9-580">Установка `addScriptTags` для `true` указывает, что теги сценариев будут добавляться автоматически.</span><span class="sxs-lookup"><span data-stu-id="13ad9-580">Setting `addScriptTags` to `true` indicates that script tags will be added automatically.</span></span>  
  
 <span data-ttu-id="13ad9-581">Блок скрипта, добавленные <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> выполняется метод, когда страница уже загружена, но перед <xref:System.Web.UI.Control.OnLoad%2A> события.</span><span class="sxs-lookup"><span data-stu-id="13ad9-581">The script block added by the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method executes when the page finishes loading but before the page's <xref:System.Web.UI.Control.OnLoad%2A> event is raised.</span></span> <span data-ttu-id="13ad9-582">Блоки скриптов не обязательно будут выводиться в порядке, в котором они зарегистрированы.</span><span class="sxs-lookup"><span data-stu-id="13ad9-582">The script blocks are not guaranteed to be output in the order they are registered.</span></span> <span data-ttu-id="13ad9-583">Если важен порядок блоков сценария, используйте <xref:System.Text.StringBuilder> для сбора скриптов вместе в одной строке, а затем зарегистрировать их все в один блок клиентского скрипта.</span><span class="sxs-lookup"><span data-stu-id="13ad9-583">If the order of the script blocks is important, use a <xref:System.Text.StringBuilder> object to gather the scripts together in a single string, and then register them all in a single client script block.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="13ad9-584">В следующем примере кода демонстрируется использование <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="13ad9-584">The following code example demonstrates the use of the <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A> method.</span></span> <span data-ttu-id="13ad9-585">Обратите внимание, что `addScriptTags` параметр имеет значение `false` , начальный и закрывающий теги сценариев входят в состав `script` параметра.</span><span class="sxs-lookup"><span data-stu-id="13ad9-585">Note that the `addScriptTags` parameter is set to `false` so the beginning and closing script tags are included with the `script` parameter.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/cs/page_registerstartupscriptcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager1/vb/page_registerstartupscriptvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="13ad9-586">
            <paramref name="type" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-586">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterStartupScript(System.Type,System.String,System.String)" />
        <altmember cref="F:System.Web.UI.HtmlTextWriterTag.Script" />
      </Docs>
    </Member>
    <MemberGroup MemberName="ValidateEvent">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="13ad9-587">Проверяет клиентское событие.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-587">Validates a client event.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ValidateEvent">
      <MemberSignature Language="C#" Value="public void ValidateEvent (string uniqueId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateEvent(string uniqueId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateEvent (uniqueId As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateEvent(System::String ^ uniqueId);" />
      <MemberSignature Language="F#" Value="member this.ValidateEvent : string -&gt; unit" Usage="clientScriptManager.ValidateEvent uniqueId" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId">
          <span data-ttu-id="13ad9-588">Уникальный ИД, представляющий клиентский элемент управления, генерирующий событие.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-588">A unique ID representing the client control generating the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13ad9-589">Проверяет клиентское событие, зарегистрированное для проверки, используя метод <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-589">Validates a client event that was registered for event validation using the <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" /> method.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ValidateEvent">
      <MemberSignature Language="C#" Value="public void ValidateEvent (string uniqueId, string argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ValidateEvent(string uniqueId, string argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ClientScriptManager.ValidateEvent(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ValidateEvent (uniqueId As String, argument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ValidateEvent(System::String ^ uniqueId, System::String ^ argument);" />
      <MemberSignature Language="F#" Value="member this.ValidateEvent : string * string -&gt; unit" Usage="clientScriptManager.ValidateEvent (uniqueId, argument)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="uniqueId" Type="System.String" />
        <Parameter Name="argument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="uniqueId">
          <span data-ttu-id="13ad9-590">Уникальный ИД, представляющий клиентский элемент управления, генерирующий событие.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-590">A unique ID representing the client control generating the event.</span>
          </span>
        </param>
        <param name="argument">
          <span data-ttu-id="13ad9-591">Аргументы события, переданные вместе с клиентским событием.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-591">The event arguments passed with the client event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="13ad9-592">Проверяет клиентское событие, зарегистрированное для проверки, используя метод <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-592">Validates a client event that was registered for event validation using the <see cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" /> method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="13ad9-593">В следующем примере кода показано использование <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> метод и <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> метод, чтобы зарегистрировать обратный вызов для проверки и проверить, что обратный вызов поступил со страницы.</span><span class="sxs-lookup"><span data-stu-id="13ad9-593">The following code example demonstrates using the <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A> method and the <xref:System.Web.UI.ClientScriptManager.ValidateEvent%2A> method to register a callback for validation and to validate that the callback originated from the page.</span></span> <span data-ttu-id="13ad9-594">Для улучшения проверки, показано ниже, можно изменить проверки `argument` параметр, содержащий сведения, относящиеся к пользователю, например удостоверение или роль.</span><span class="sxs-lookup"><span data-stu-id="13ad9-594">To improve on the validation shown here, you could modify the validation `argument` parameter to contain information specific to the user such as an identity or role</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/cs/EventValidationCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.ClientScriptManager9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ClientScriptManager9/vb/EventValidationVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="13ad9-595">Свойство <paramref name="uniqueId" /> имеет значение <see langword="null" /> или является пустой строкой ("").</span>
          <span class="sxs-lookup">
            <span data-stu-id="13ad9-595">
              <paramref name="uniqueId" /> is <see langword="null" /> or an empty string ("").</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.UI.ClientScriptManager.RegisterForEventValidation(System.String,System.String)" />
      </Docs>
    </Member>
  </Members>
</Type>