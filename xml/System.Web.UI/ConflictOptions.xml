<Type Name="ConflictOptions" FullName="System.Web.UI.ConflictOptions">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ab3cd7d259dad0e74ecfbc9e7ed7d3f48beb26c7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30604968" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum ConflictOptions" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ConflictOptions extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ConflictOptions" />
  <TypeSignature Language="VB.NET" Value="Public Enum ConflictOptions" />
  <TypeSignature Language="C++ CLI" Value="public enum class ConflictOptions" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>Определяет, как элемент управления источником данных ASP.NET обрабатывает конфликты данных при обновлении или удалении данных.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Одновременное управление — метод, используемый хранилищами данных для управления чтением и изменения в хранилище, когда несколько пользователей получают доступ и управление те же данные данных. Например один клиент считывает данные и представляет их пользователю, пока другой клиент считывает те же данные и представляет их с другим пользователем. Если для обоих пользователей обновлять данные и отправляют их в хранилище данных, неожиданный результат может произойти, так как клиенты могут обновлять разные значения для тех же данных. Это считается конфликтом.  
  
 `ConflictDetection` Свойство, которое определено для элементов управления источниками данных ASP.NET используется для определения того, как элемент управления обрабатывает конфликты данных в хранилище базовых данных при использует хранилище базовых данных оптимистической блокировки и delete или операция обновления выполнить.  
  
 По умолчанию `ConflictDetection` свойству OverwriteChanges, что означает управления источником данных перезапишет любые изменения, внесенные в строку данных между элементом управления источником данных сначала прочитать данные из строки и время обновления строки. Первичный ключ используется для размещения строки данных, которая будет обновлена или удалена, но не выполняются другие проверки данных. Если элемент управления источником данных настроен для использования параметра CompareAllValues, тем не менее, элемент управления передает исходные данные в `oldValues` коллекции `Update` и `Delete` методов, чтобы могла создавать логику для обновления или удаления данных только в том случае, если Эти значения соответствуют значениям в настоящее время в хранилище данных. Совпадающие значения указывают, что данные не изменились со времени считывания.  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
    <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection" />
    <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />
    <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ConflictDetection" />
  </Docs>
  <Members>
    <Member MemberName="CompareAllValues">
      <MemberSignature Language="C#" Value="CompareAllValues" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.ConflictOptions CompareAllValues = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ConflictOptions.CompareAllValues" />
      <MemberSignature Language="VB.NET" Value="CompareAllValues" />
      <MemberSignature Language="C++ CLI" Value="CompareAllValues" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>Элемент управления источником данных использует коллекцию <paramref name="oldValues" /> методов <see langword="Update" /> и <see langword="Delete" /> для определения того, изменялись ли данные другим процессом.</summary>
      </Docs>
    </Member>
    <Member MemberName="OverwriteChanges">
      <MemberSignature Language="C#" Value="OverwriteChanges" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Web.UI.ConflictOptions OverwriteChanges = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.ConflictOptions.OverwriteChanges" />
      <MemberSignature Language="VB.NET" Value="OverwriteChanges" />
      <MemberSignature Language="C++ CLI" Value="OverwriteChanges" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>Элемент управления источником данных перезаписывает все значения в строке данных собственными значениями для этой строки.</summary>
      </Docs>
    </Member>
  </Members>
</Type>