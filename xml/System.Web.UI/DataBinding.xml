<Type Name="DataBinding" FullName="System.Web.UI.DataBinding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2e915345435b8c5e768afcc088fce8f6170747f8" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30607138" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class DataBinding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit DataBinding extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.DataBinding" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class DataBinding" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataBinding sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Содержит сведения об одном выражении привязки данных в ASP.NET серверном элементе управления, облегчающие конструкторам быстрой разработки приложений (RAD) таким, как Microsoft Visual Studio, создавать выражения привязки данных во время разработки. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Каждое выражение привязки данных в серверном элементе управления представлен во время разработки с помощью экземпляра <xref:System.Web.UI.DataBinding> класса. Серверный элемент управления, содержащий одно или несколько выражений привязки данных имеет <xref:System.Web.UI.DataBindingCollection> , содержащий <xref:System.Web.UI.DataBinding> объектов. Эта коллекция доступна через <xref:System.Web.UI.Control> класс, реализующий <xref:System.Web.UI.IDataBindingsAccessor> интерфейса. При создании пользовательского конструктора RAD, используете эту реализацию для доступа к коллекции. Любой <xref:System.Web.UI.DataBinding> или <xref:System.Web.UI.DataBindingCollection> объекты, связанные с серверным элементом управления существуют только во время разработки. Они не существуют во время выполнения и, следовательно, недоступны во время выполнения.  
  
   
  
## Examples  
 В следующем примере кода создается <xref:System.Web.UI.DataBinding> объекта и задается равным существующий объект в элементе управления <xref:System.Web.UI.DataBindingCollection> коллекцию, для которой `propertyName` параметр со значением `Text`. Если коллекция содержит <xref:System.Web.UI.DataBinding> объекта с `propertyName` значение `Text`, этот код возвращает значение объекта <xref:System.Web.UI.DataBinding.Expression%2A> свойство. Если объект отсутствует, возвращается пустая строка (»»).  
  
 [!code-csharp[DataBinding_Sample1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#2)]
 [!code-vb[DataBinding_Sample1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.DataBinder" />
    <altmember cref="T:System.Web.UI.DataBindingCollection" />
    <altmember cref="T:System.Web.UI.IDataBindingsAccessor" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataBinding (string propertyName, Type propertyType, string expression);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string propertyName, class System.Type propertyType, string expression) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinding.#ctor(System.String,System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (propertyName As String, propertyType As Type, expression As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataBinding(System::String ^ propertyName, Type ^ propertyType, System::String ^ expression);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="expression" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">Свойство, к которому требуется привязать данные.</param>
        <param name="propertyType">Тип свойства .NET Framework, к которому требуется привязать данные.</param>
        <param name="expression">Обрабатываемое выражение привязки данных.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.DataBinding" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода создается <xref:System.Web.UI.DataBinding> объекта и задается равным существующий объект в элементе управления <xref:System.Web.UI.DataBindingCollection> коллекцию, для которой `propertyName` параметр со значением `Text`. Если коллекция содержит <xref:System.Web.UI.DataBinding> объекта с `propertyName` значение `Text`, этот код возвращает значение объекта <xref:System.Web.UI.DataBinding.Expression%2A> свойство. Если объект отсутствует, возвращается пустая строка (»»).  
  
 [!code-csharp[DataBinding_Sample1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#3)]
 [!code-vb[DataBinding_Sample1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.DataBinder" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinding.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Объект, который требуется сравнить с текущим объектом <see cref="T:System.Web.UI.DataBinding" />.</param>
        <summary>Определяет, является ли указанный объект тем же экземпляром класса <see cref="T:System.Web.UI.DataBinding" />, что и текущий объект.</summary>
        <returns>
          Значение <see langword="true" />, если имена свойств привязки данных совпадают; в противном случае — значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.DataBinding.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="Expression">
      <MemberSignature Language="C#" Value="public string Expression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Expression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataBinding.Expression" />
      <MemberSignature Language="VB.NET" Value="Public Property Expression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Expression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает обрабатываемое выражение привязки данных.</summary>
        <value>Обрабатываемое выражение привязки данных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода создается <xref:System.Web.UI.DataBinding> объекта и задается равным существующий объект в элементе управления <xref:System.Web.UI.DataBindingCollection> коллекцию, для которой `propertyName` параметр со значением `Text`. Если коллекция содержит <xref:System.Web.UI.DataBinding> объекта с `propertyName` значение `Text`, этот код возвращает значение объекта <xref:System.Web.UI.DataBinding.Expression%2A> свойство. Если объект отсутствует, возвращается пустая строка (»»).  
  
 [!code-csharp[DataBinding_Sample1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#3)]
 [!code-vb[DataBinding_Sample1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.DataBinding.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Получает хэш-код экземпляра объекта <see cref="T:System.Web.UI.DataBinding" />.</summary>
        <returns>Хэш-код в виде 32-разрядного целого числа со знаком.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.DataBinding> объекты размещаются в <xref:System.Web.UI.DataBindingCollection> объект, доступный только во время разработки. Коллекция является хэш-таблицу, представляющий привязку данных для элемента управления. Может существовать только одна привязка для свойства, поэтому вычисление хэша код соответствует <xref:System.Web.UI.DataBinding.Equals%2A?displayProperty=nameWithType> реализации и учитываются только имя свойства в учетную запись.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.DataBinding.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="PropertyName">
      <MemberSignature Language="C#" Value="public string PropertyName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PropertyName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataBinding.PropertyName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PropertyName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает имя свойства ASP.NET серверного элемента управления, к которому требуется привязать данные.</summary>
        <value>Свойство, к которому требуется привязать данные.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода объявляются три переменные `dataBindingOutput1`, `dataBindingOutput2`, и `dataBindingOutput3`, который доступ различных свойств <xref:System.Web.UI.DataBinding> объекта, `myDataBinding2`. Затем он назначает значение <xref:System.Web.UI.DataBinding.PropertyName%2A> свойства `dataBindingOutput1`, объединяются со строкой «имя свойства есть» и записывает значения в файл.  
  
 [!code-csharp[DataBinding_Sample1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#6)]
 [!code-vb[DataBinding_Sample1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyType">
      <MemberSignature Language="C#" Value="public Type PropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PropertyType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.DataBinding.PropertyType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ PropertyType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает тип .NET Framework для свойства ASP.NET серверного элемента управления с привязкой к данным.</summary>
        <value>Тип .NET Framework для свойства привязки данных.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода объявляются три переменные `dataBindingOutput1`, `dataBindingOutput2`, и `dataBindingOutput3`, который доступ различных свойств <xref:System.Web.UI.DataBinding> объекта, `myDataBinding2`. <xref:System.Web.UI.DataBinding.PropertyType%2A> Присваивается значение свойства `dataBindingOutput2` и сцепляется со строкой «тип свойства является» и записывает значения в файл.  
  
 [!code-csharp[DataBinding_Sample1#6](~/samples/snippets/csharp/VS_Snippets_WebNet/DataBinding_Sample1/CS/databinding_samp1.cs#6)]
 [!code-vb[DataBinding_Sample1#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/DataBinding_Sample1/VB/databinding_samp1.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>