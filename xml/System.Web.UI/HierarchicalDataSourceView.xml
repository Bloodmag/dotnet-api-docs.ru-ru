<Type Name="HierarchicalDataSourceView" FullName="System.Web.UI.HierarchicalDataSourceView">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6198043756253bdff184ffb3753a3ff9780d1910" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30606798" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class HierarchicalDataSourceView" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HierarchicalDataSourceView extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.HierarchicalDataSourceView" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HierarchicalDataSourceView" />
  <TypeSignature Language="C++ CLI" Value="public ref class HierarchicalDataSourceView abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет представление данных на узле или коллекции узов в иерархической структуре данных для элемента управления <see cref="T:System.Web.UI.HierarchicalDataSourceControl" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET поддерживает архитектуру привязки данных, позволяющий веб-сервера управления для привязки к данным и представлять их согласованным образом. Элемент управления, связывающие данные, называются элементами управления с привязкой к данным, а классы, облегчающие эту привязку, называются элементами управления источниками данных. Элементы управления источников данных могут представлять любой источник данных: файл, поток, реляционную базу данных, бизнес-объект и т. д. Представления данных элемент управления источником данных к элементам управления с привязкой к данным, независимо от источника или формата базовых данных согласованным образом.  
  
 Элементы управления источников данных, представляющих иерархические данные являются производными от абстрактного <xref:System.Web.UI.HierarchicalDataSourceControl> класса. Элемент управления источником данных можно считать сочетание управления объект источника данных и связанных с ним представлений базовых данных, представленных объектами представления источника данных. Элементы управления источника иерархических данных поддерживают иерархическое представление для всех уровней иерархии данных, которые они представляют. Представления источников данных не являются именованными, таких как <xref:System.Web.UI.DataSourceView> объектов, связанных с <xref:System.Web.UI.DataSourceControl> управления, но идентифицируются по их уникальным иерархический путь.  
  
 Представления источников данных определяют возможности элемента управления источником данных. Все представления объектов источника данных, включая <xref:System.Web.UI.HierarchicalDataSourceView>, поддерживают извлечение данных из базового источника данных с помощью <xref:System.Web.UI.HierarchicalDataSourceView.Select%2A> метод, который возвращает иерархический список данных в виде <xref:System.Web.UI.IHierarchicalEnumerable> объекта. Все данные источника объектов при необходимости поддерживать базовый набор возможностей, включая операции, такие как представление <xref:System.Web.UI.DataSourceView.Insert%2A>, <xref:System.Web.UI.DataSourceView.Update%2A>, <xref:System.Web.UI.DataSourceView.Delete%2A>и сортировка. Элемент управления с привязкой к данным может обнаруживать просмотреть возможности элемента управления источника данных, получая связанного источника данных с помощью <xref:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView%2A> метод и запрос к представлению, во время разработки или во время выполнения. <xref:System.Web.UI.HierarchicalDataSourceView> в настоящее время не поддерживает <xref:System.Web.UI.DataSourceView.Insert%2A>, <xref:System.Web.UI.DataSourceView.Update%2A> или <xref:System.Web.UI.DataSourceView.Delete%2A> операций.  
  
   
  
## Examples  
 В следующем примере кода показано, как наследовать класс из <xref:System.Web.UI.HierarchicalDataSourceView> класс для извлечения данных из хранилища иерархических данных, в этом случае в файловой системе. `FileSystemDataSourceView` Класс является строго типизированным <xref:System.Web.UI.HierarchicalDataSourceView> экземпляр, который позволяет иерархических серверных элементов управления, таких как <xref:System.Web.UI.WebControls.TreeView> привязать элемент управления `FileSystemDataSource` управления и отобразить сведения о файловой системе. По соображениям безопасности сведения о файловой системе отображается только в том случае, если элемент управления источником данных используется на локальном узле, скрипты с проверкой подлинности и запускается только с виртуальным каталогом, в которой находится страница веб-форм, с помощью элемента управления источником данных. В противном случае `viewPath` переданный конструктору параметр может использоваться для создания представления, основанного на пути текущей файловой системы. Данный пример кода является частью большего примера, приведенного для <xref:System.Web.UI.HierarchicalDataSourceControl> класса.  
  
 [!code-csharp[Urtue.Samples.Alexkr.FileSystemDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/CS/filesystemdatasource.cs#3)]
 [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/VB/filesystemdatasource.vb#3)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>При наследовании от класса <see cref="T:System.Web.UI.HierarchicalDataSourceView" /> необходимо переопределить следующий член: <see cref="M:System.Web.UI.HierarchicalDataSourceView.Select" />.</para>
    </block>
    <altmember cref="T:System.Web.UI.DataSourceView" />
    <altmember cref="T:System.Web.UI.HierarchicalDataSourceControl" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HierarchicalDataSourceView ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HierarchicalDataSourceView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HierarchicalDataSourceView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.HierarchicalDataSourceView" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public abstract System.Web.UI.IHierarchicalEnumerable Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.UI.IHierarchicalEnumerable Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.HierarchicalDataSourceView.Select" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Select () As IHierarchicalEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Web::UI::IHierarchicalEnumerable ^ Select();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IHierarchicalEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает список всех элементов данных в представлении.</summary>
        <returns>Коллекция <see cref="T:System.Web.UI.IHierarchicalEnumerable" /> элементов данных.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.HierarchicalDataSourceView.Select%2A> Возвращает <xref:System.Web.UI.IHierarchicalEnumerable> коллекция элементов данных в текущем представлении. Можно вызвать <xref:System.Collections.IEnumerable.GetEnumerator%2A> метода <xref:System.Collections.IEnumerator> объекта и прохода по коллекции элементов данных.  
  
   
  
## Examples  
 В следующем примере кода показано, как переопределить <xref:System.Web.UI.HierarchicalDataSourceView.Select%2A> метод в класс, производный от <xref:System.Web.UI.HierarchicalDataSourceView> класса для извлечения иерархические <xref:System.IO.FileSystemInfo> данных из файловой системы. По соображениям безопасности сведения о файловой системе отображается только в том случае, если элемент управления источником данных используется на локальном узле, скрипты с проверкой подлинности и запускается только с виртуальным каталогом, в которой находится страница веб-форм, с помощью элемента управления источником данных. В противном случае `viewPath` параметр, передаваемый конструктору объекта представления могут использоваться для создания представления, основанного на пути текущей файловой системы. Данный пример кода является частью большего примера, приведенного для <xref:System.Web.UI.HierarchicalDataSourceControl> класса.  
  
 [!code-csharp[Urtue.Samples.Alexkr.FileSystemDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/CS/filesystemdatasource.cs#3)]
 [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Urtue.Samples.Alexkr.FileSystemDataSource_1/VB/filesystemdatasource.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IEnumerable" />
        <altmember cref="T:System.Web.UI.IHierarchicalEnumerable" />
      </Docs>
    </Member>
  </Members>
</Type>