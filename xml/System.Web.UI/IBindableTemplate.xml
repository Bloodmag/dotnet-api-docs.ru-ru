<Type Name="IBindableTemplate" FullName="System.Web.UI.IBindableTemplate">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b4f1138bb1eff9cf9e7995a28c8cc960df5d3ac6" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30608308" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IBindableTemplate : System.Web.UI.ITemplate" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IBindableTemplate implements class System.Web.UI.ITemplate" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.IBindableTemplate" />
  <TypeSignature Language="VB.NET" Value="Public Interface IBindableTemplate&#xA;Implements ITemplate" />
  <TypeSignature Language="C++ CLI" Value="public interface class IBindableTemplate : System::Web::UI::ITemplate" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ITemplate</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Предоставляет способ для ASP.NET элементов управления, связанных с данными, таких как <see cref="T:System.Web.UI.WebControls.DetailsView" /> и <see cref="T:System.Web.UI.WebControls.FormView" />, автоматически привязываться к ASP.NET элементам управления источниками данных внутри разделов шаблонного содержимого.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.IBindableTemplate> Интерфейс обеспечивает для элементов управления с привязкой к данным ASP.NET, такие как <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.GridView>, и <xref:System.Web.UI.WebControls.FormView>, для привязки данных, предоставленных управления источником данных ASP.NET, такие как <xref:System.Web.UI.WebControls.ObjectDataSource> или <xref:System.Web.UI.WebControls.SqlDataSource>, когда элемент управления с привязкой к данным включает шаблонного содержимого.  
  
> [!NOTE]
>  Разработчики страниц не реализуют <xref:System.Web.UI.IBindableTemplate> интерфейса. Разработчикам, создающим пользовательские элементы управления с привязкой к данным может управлять <xref:System.Web.UI.IBindableTemplate> объектов в реализации <xref:System.Web.UI.WebControls.DataBoundControl.PerformDataBinding%2A> и <xref:System.Web.UI.WebControls.GridView.ExtractRowValues%2A> методов, но не реализуют собственные <xref:System.Web.UI.IBindableTemplate> объектов.  
  
 Элементы управления с привязкой к данным как <xref:System.Web.UI.WebControls.GridView> обычно знают деревьев их дочерних элементов управления, таким образом привязка значений к ним, извлечения значения из них и передачи этих значений между элементом управления с привязкой к данным и элемент управления источником данных, когда происходит привязка данных . Однако, если разработчик страницы определяет шаблонное содержимое для элемента управления с привязкой к данным, дочерних элементов управления в шаблоне не видимы для родительского элемента управления с привязкой к данным: родитель может визуализировать дочернего содержимого (так как элементы управления успешно себя визуализируют), но не может извлекать значения этих дочерних элементов управления для передачи управления источника связанных данных update, insert или операции удаления. В сценариях привязки данных шаблонное содержимое не прозрачно для родительского элемента управления с привязкой к данным. `Bind` Синтаксис делает элемент управления с привязкой к данным для извлечения значений из элемента управления с привязкой к данным внутри <xref:System.Web.UI.IBindableTemplate> экземпляра.  
  
 Привязка к данным может быть односторонние или двухсторонние привязки. (Эти инструкции привязки определяются <xref:System.ComponentModel.BindingDirection> перечисления.) Односторонняя привязка данных — любая привязка данных выполняется в исходящем направлении, из элемента управления источника данных для элемента управления с привязкой данных; Например любой сценарий считывания данных включает в себя одностороннюю привязку данных. Для привязки данных можно использовать синтаксис односторонней привязки (`<%# Eval("fieldname") %>`) внутри шаблонного содержимого и не нужно использовать синтаксиса двухсторонней привязки данных ASP.NET. Двухстороннюю привязку данных описывает привязку данных в входящего трафика из элемента управления с привязкой к данным в элемент управления источником данных. Автоматического редактирования, вставки и удаления сценариев с помощью ASP.NET привязкой к данным и источников данных, двусторонние сценарии привязки данных. Эти сценарии используют выражения привязки данных (`<%# Bind("fieldname") %>`). <xref:System.Web.UI.IBindableTemplate> Интерфейса и инфраструктура ASP.NET поддерживают автоматическое, декларативный, двухстороннюю привязку данных между элементами управления источника данных ASP.NET и шаблонного содержимого. Дополнительные сведения о выражениях привязки данных ASP.NET и синтаксисе см. в разделе [привязка к базам данных](http://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742) и [Общие сведения о выражениях привязки данных](http://msdn.microsoft.com/library/14cdd57d-0f82-4667-b503-73e1a96f136a).  
  
 Чаще всего определяется декларативно шаблонного содержимого для элементов управления с привязкой к данным. В следующей таблице описаны процессы, которые чаще всего используются для привязки шаблонных данных к элементам управления с привязкой к данным.  
  
|Элемент управления с привязкой к данным|Процесс|  
|-------------------------|-------------|  
|<xref:System.Web.UI.WebControls.DetailsView>|Элемент управления с привязкой к данным привязан к данным с помощью `DataSourceID` свойство элемента управления источником данных и содержимом шаблонов определено в <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A>, <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> или <xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A> свойства.|  
|<xref:System.Web.UI.WebControls.GridView>|Элемент управления с привязкой к данным привязан к данным с помощью `DataSourceID` свойство элемента управления источником данных и содержимом шаблонов определено в <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> или <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> свойства. <xref:System.Web.UI.WebControls.GridView> Управления не поддерживает операции вставки.|  
|<xref:System.Web.UI.WebControls.FormView>|Привязанного элемента управления с привязкой к данным с помощью `DataSourceID` свойства и содержимое шаблонного определяется в <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>, <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>, или <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> свойства, или в <xref:System.Web.UI.WebControls.TemplateField> объекта.|  
  
 <xref:System.Web.UI.WebControls.DataList> И <xref:System.Web.UI.WebControls.Repeater> элементы управления не поддерживают автоматическое двустороннее сценарии привязки данных.  
  
 ASP.NET неявно создает <xref:System.Web.UI.IBindableTemplate> объекта при синтаксическом анализе шаблонного содержимого, который привязывает элемент управления источником данных ASP.NET в шаблоне. В частности, синтаксический анализатор ASP.NET создает экземпляр <xref:System.Web.UI.CompiledBindableTemplateBuilder> класса при синтаксическом анализе шаблонного содержимого, которое использует синтаксис привязки к данным ASP.NET и содержит серверные элементы управления ASP.NET, поддерживающих привязку данных. Элементы управления сервера ASP.NET этих помечаются <xref:System.ComponentModel.BindableAttribute> атрибута.  
  
 <xref:System.Web.UI.IBindableTemplate> Интерфейс определяет один метод <xref:System.Web.UI.IBindableTemplate.ExtractValues%2A>. Этот метод определено для двусторонней привязки данных, таким образом, чтобы элемент управления с привязкой к данным может автоматически извлекать из шаблонного содержимого пары имя значение и передавать их к элементу управления источником данных во время выполнения. Для автоматического данные привязки для успешного выполнения, имена полей, извлеченных из шаблонного содержимого по <xref:System.Web.UI.IBindableTemplate.ExtractValues%2A> метод должен соответствовать именам параметров в элемент управления источником данных. Вызов разработчики управляют <xref:System.Web.UI.IBindableTemplate.ExtractValues%2A> метод явным образом только в пределах их реализации <xref:System.Web.UI.WebControls.FormView.ExtractRowValues%2A> или другой аналогичный метод пользовательского элемента управления с привязкой к данным.  
  
   
  
## Examples  
 В следующем примере кода показано, как <xref:System.Web.UI.WebControls.FormView> управления декларативно можно определить шаблонного содержимого, привязка к данным, предоставленным <xref:System.Web.UI.WebControls.SqlDataSource> управлять и отображать и изменять существующие записи. Средство синтаксического анализа ASP.NET анализирует шаблонного содержимого и создает <xref:System.Web.UI.IBindableTemplate> объекта во время выполнения, который может выполнять привязку значения из <xref:System.Web.UI.WebControls.SqlDataSource> элемента управления в области привязки данных, определенные в шаблоне обоих одностороннего синтаксисом привязки данных ASP.NET (`<%# Eval("fieldname") %>`) и синтаксиса двухсторонней привязки данных (`<%# Bind("fieldname") %>`).  
  
> [!IMPORTANT]
>  Этот элемент управления имеет текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности. По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов. Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).  
  
 [!code-aspx-csharp[FormView#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormView/CS/formvieweditcs.aspx#1)]
 [!code-aspx-vb[FormView#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormView/VB/formvieweditvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ITemplate" />
    <altmember cref="T:System.Web.UI.CompiledBindableTemplateBuilder" />
    <altmember cref="T:System.Web.UI.ExtractTemplateValuesMethod" />
    <altmember cref="T:System.ComponentModel.BindableAttribute" />
    <altmember cref="T:System.ComponentModel.BindingDirection" />
  </Docs>
  <Members>
    <Member MemberName="ExtractValues">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary ExtractValues (System.Web.UI.Control container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Specialized.IOrderedDictionary ExtractValues(class System.Web.UI.Control container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Function ExtractValues (container As Control) As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Specialized::IOrderedDictionary ^ ExtractValues(System::Web::UI::Control ^ container);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="container">Объект <see cref="T:System.Web.UI.Control" />, из которого извлекаются пары "имя—значение" и передаются элементом управления, связанным с данными, в элемент управления источника связанных данных при помощи скриптов двусторонней привязки данных.</param>
        <summary>При реализации классом извлекает внутри шаблонного содержимого набор пар "имя-значение" для значений, связанных с помощью синтаксиса двухсторонней привязки ASP.NET.</summary>
        <returns>
          <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> пар "имя-значение". В этих парах имя представляет собой имя элемента управления внутри шаблонного содержимого, а значением является текущее значение свойства, связанное с помощью синтаксиса двухсторонней привязки данных ASP.NET.</returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <see cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" /> Метод должен соответствовать следующим правилам:  
  
-   Если для данного поля существует более одной привязки, используется последняя обнаруженная привязка.  
  
-   Чтобы ссылаться на идентификатор элемента управления в <see cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" /> метода, элемент управления также должен иметь идентификатор свойства, определенного пользователем во время синтаксического анализа. Если идентификатор не существует, это приведет к ошибке синтаксического анализа.  
  
-   Двустороннее синтаксис привязки к данным ASP.NET допустим только в <see cref="T:System.Web.UI.ITemplate" /> или <see cref="T:System.Web.UI.IBindableTemplate" /> свойства элемента управления с привязкой к данным.</para>
        </block>
        <altmember cref="T:System.Web.UI.CompiledBindableTemplateBuilder" />
        <altmember cref="T:System.Web.UI.ExtractTemplateValuesMethod" />
      </Docs>
    </Member>
  </Members>
</Type>