<Type Name="ICallbackEventHandler" FullName="System.Web.UI.ICallbackEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7c825a3f80dfb1fd33e27c2eb4f80d07877ee835" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ICallbackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ICallbackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ICallbackEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Interface ICallbackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public interface class ICallbackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="311a5-101">Указывает, что элемент управления может быть целевым объектом события обратного вызова на сервере.</span>
      <span class="sxs-lookup">
        <span data-stu-id="311a5-101">Used to indicate that a control can be the target of a callback event on the server.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="311a5-102">Реализуйте <xref:System.Web.UI.ICallbackEventHandler> интерфейса для пользовательского элемента управления, необходимо получать события обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="311a5-102">Implement the <xref:System.Web.UI.ICallbackEventHandler> interface for any custom control that needs to receive callback events.</span></span> <span data-ttu-id="311a5-103">Дополнительные сведения см. в разделе [реализация клиента обратные вызовы без обратной передачи](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span><span class="sxs-lookup"><span data-stu-id="311a5-103">For more information, see [Implementing Client Callbacks Without Postbacks](http://msdn.microsoft.com/library/dfaaa7d4-e1f2-4322-b2f5-796e0419f185).</span></span>  
  
 <span data-ttu-id="311a5-104">Примеры элементов управления, реализующих <xref:System.Web.UI.ICallbackEventHandler> интерфейс включает <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, и <xref:System.Web.UI.WebControls.TreeView> элементов управления.</span><span class="sxs-lookup"><span data-stu-id="311a5-104">Examples of controls that implement the <xref:System.Web.UI.ICallbackEventHandler> interface include the <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, and <xref:System.Web.UI.WebControls.TreeView> controls.</span></span> <span data-ttu-id="311a5-105">Когда события обратного вызова обращается элемент управления, реализующий <xref:System.Web.UI.ICallbackEventHandler> интерфейс, <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> метод вызывается для обработки события, передавая аргумент события в качестве параметра и <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> метод возвращает результат обратного вызова.</span><span class="sxs-lookup"><span data-stu-id="311a5-105">When a callback event targets a control that implements the <xref:System.Web.UI.ICallbackEventHandler> interface, the <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> method is called to handle the event, passing the event argument as a parameter and the <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> method returns the result of the callback.</span></span>  
  
 <span data-ttu-id="311a5-106">Элементы управления, которые извлекают данные из элемента управления источником данных во время обратного вызова выполняется синхронно или асинхронно.</span><span class="sxs-lookup"><span data-stu-id="311a5-106">Controls that retrieve data from a data source control during callback can do so synchronously or asynchronously.</span></span> <span data-ttu-id="311a5-107">Элементы управления ASP.NET, например <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, и <xref:System.Web.UI.WebControls.TreeView> реализуются синхронно.</span><span class="sxs-lookup"><span data-stu-id="311a5-107">ASP.NET controls like <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, and <xref:System.Web.UI.WebControls.TreeView> are implemented synchronously.</span></span> <span data-ttu-id="311a5-108">Синхронные обратные вызовы не препятствуют пользователь работает в браузере.</span><span class="sxs-lookup"><span data-stu-id="311a5-108">Synchronous callbacks do not prevent the user from working in the browser.</span></span> <span data-ttu-id="311a5-109">В синхронном режиме может выполняться только один обратный вызов одновременно, со последний вызов более высокий приоритет.</span><span class="sxs-lookup"><span data-stu-id="311a5-109">In synchronous mode, only one callback at a time can execute, with the last callback taking precedence.</span></span> <span data-ttu-id="311a5-110">При реализации веб-элемента управления для поддержки асинхронного поведения одновременно может быть повышен нескольких обратных вызовов.</span><span class="sxs-lookup"><span data-stu-id="311a5-110">When a Web control is implemented to support asynchronous behavior, multiple callbacks can be raised simultaneously.</span></span> <span data-ttu-id="311a5-111">Дополнительные сведения об асинхронном программировании см. в разделе [на основе событий асинхронного шаблона (EAP)](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-eap.md).</span><span class="sxs-lookup"><span data-stu-id="311a5-111">For details on asynchronous programming, see [Event-based Asynchronous Pattern (EAP)](~/docs/standard/asynchronous-programming-patterns/event-based-asynchronous-pattern-eap.md).</span></span>  
  
 <span data-ttu-id="311a5-112">Можно указать, отображается ли события обратного вызова, исходящие из пользовательского интерфейса путем реализации управления <xref:System.Web.UI.ICallbackEventHandler> интерфейс проверяются.</span><span class="sxs-lookup"><span data-stu-id="311a5-112">You can specify whether callback events originating from the user interface rendered by a control implementing the <xref:System.Web.UI.ICallbackEventHandler> interface are validated.</span></span> <span data-ttu-id="311a5-113">Проверка событий — рекомендуется.</span><span class="sxs-lookup"><span data-stu-id="311a5-113">Validation of events is a good security practice.</span></span> <span data-ttu-id="311a5-114">Однако для повышения производительности можно отключить его.</span><span class="sxs-lookup"><span data-stu-id="311a5-114">However, for performance reasons you can disable it.</span></span> <span data-ttu-id="311a5-115">Для контроля событий выполняется ли проверка на события обратного вызова, задайте `enableEventValidation` атрибут [@ Page](http://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) директива или `enableEventValidation` атрибут [страницы элемент (схема параметров ASP.NET)](http://msdn.microsoft.com/library/4123bb66-3fe4-4d62-b70e-33758656b458) файла Web.config.</span><span class="sxs-lookup"><span data-stu-id="311a5-115">To control whether event validation is performed on callback events, set the `enableEventValidation` attribute of the [@ Page](http://msdn.microsoft.com/library/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) directive or the `enableEventValidation` attribute of the [pages Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/4123bb66-3fe4-4d62-b70e-33758656b458) of the Web.config file.</span></span> <span data-ttu-id="311a5-116">Если задать <xref:System.Web.UI.Page.EnableEventValidation%2A> свойства в коде, установите его в `Page_Init` фазы обработки страницы.</span><span class="sxs-lookup"><span data-stu-id="311a5-116">If you set the <xref:System.Web.UI.Page.EnableEventValidation%2A> property in code, set it in the `Page_Init` phase of page processing.</span></span> <span data-ttu-id="311a5-117">Дополнительные сведения о безопасности соотношения между проверки событий производительностью см. в разделе [Общие сведения о производительности ASP.NET](http://msdn.microsoft.com/library/f882bf1b-a009-4312-ac06-74370ffabc0b).</span><span class="sxs-lookup"><span data-stu-id="311a5-117">For more information on balancing the security benefit of event validation with its performance cost, see [ASP.NET Performance Overview](http://msdn.microsoft.com/library/f882bf1b-a009-4312-ac06-74370ffabc0b).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetCallbackEventReference" />
    <altmember cref="M:System.Web.UI.WebControls.DetailsView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
    <altmember cref="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
    <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
  </Docs>
  <Members>
    <Member MemberName="GetCallbackResult">
      <MemberSignature Language="C#" Value="public string GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ICallbackEventHandler.GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCallbackResult () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetCallbackResult();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="311a5-118">Возвращает результаты события обратного вызова, предназначенного для элемента управления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="311a5-118">Returns the results of a callback event that targets a control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="311a5-119">Результат обратного вызова.</span>
          <span class="sxs-lookup">
            <span data-stu-id="311a5-119">The result of the callback.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="311a5-120">Исключения, создаваемые <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> не помешает <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> из вызываемой и возвращения результата.</span><span class="sxs-lookup"><span data-stu-id="311a5-120">Exceptions thrown in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> will not prevent <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> from being called and returning a result.</span></span> <span data-ttu-id="311a5-121">Чтобы предотвратить <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> возвращали результат, установить флаг, когда исключение <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> и возвращается пустая строка из <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>.</span><span class="sxs-lookup"><span data-stu-id="311a5-121">To prevent <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> from returning a result, set a flag when an exception is thrown in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> and return an empty string from <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.GetCallbackResult" />
        <altmember cref="M:System.Web.UI.WebControls.DetailsView.GetCallbackResult" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.GetCallbackResult" />
      </Docs>
    </Member>
    <Member MemberName="RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="public void RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RaiseCallbackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RaiseCallbackEvent(System::String ^ eventArgument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">
          <span data-ttu-id="311a5-122">Строка, которая предоставляет аргумент события, передаваемый обработчику событий.</span>
          <span class="sxs-lookup">
            <span data-stu-id="311a5-122">A string that represents an event argument to pass to the event handler.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="311a5-123">Обработка события обратного вызова, предназначенного для элемента управления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="311a5-123">Processes a callback event that targets a control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="311a5-124">Когда `null` используется как параметр аргумента события сериализуется строка «null» и отправлен обратно на сервер.</span><span class="sxs-lookup"><span data-stu-id="311a5-124">When `null` is used as the event argument parameter, the string is serialized to "null" and sent back to the server.</span></span> <span data-ttu-id="311a5-125">Поскольку невозможно провести различие между `null` и «null», следует избегать использования `null` параметров аргумента с обратных вызовов.</span><span class="sxs-lookup"><span data-stu-id="311a5-125">Because there is no way to distinguish between `null` and "null", you should avoid using `null` argument parameters with callbacks.</span></span>  
  
 <span data-ttu-id="311a5-126">Исключения, создаваемые <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> не помешает <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> из вызываемой и возвращения результата.</span><span class="sxs-lookup"><span data-stu-id="311a5-126">Exceptions thrown in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> will not prevent <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> from being called and returning a result.</span></span> <span data-ttu-id="311a5-127">Чтобы предотвратить <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> возвращали результат, установить флаг, когда исключение <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> и возвращается пустая строка из <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>.</span><span class="sxs-lookup"><span data-stu-id="311a5-127">To prevent <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A> from returning a result, set a flag when an exception is thrown in <xref:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent%2A> and return an empty string from <xref:System.Web.UI.ICallbackEventHandler.GetCallbackResult%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetCallbackEventReference" />
        <altmember cref="M:System.Web.UI.WebControls.GridView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
        <altmember cref="M:System.Web.UI.ICallbackEventHandler.GetCallbackResult" />
      </Docs>
    </Member>
  </Members>
</Type>