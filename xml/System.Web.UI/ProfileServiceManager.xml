<Type Name="ProfileServiceManager" FullName="System.Web.UI.ProfileServiceManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="14b0a8b0e76f3072acef6e482b3c64d775f4f177" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37530359" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ProfileServiceManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ProfileServiceManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ProfileServiceManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ProfileServiceManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ProfileServiceManager" />
  <TypeSignature Language="F#" Value="type ProfileServiceManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Path")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.EmptyStringExpandableObjectConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Конфигурирует набор предварительно загруженных профилей и расположение пользовательских реализаций службы профиля.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.ProfileServiceManager> Класс соответствует <xref:System.Web.UI.ScriptManager.ProfileService%2A> свойство, которое можно добавить <xref:System.Web.UI.ScriptManager> или <xref:System.Web.UI.ScriptManagerProxy> элемента управления.  
  
 Можно использовать <xref:System.Web.UI.ProfileServiceManager> для указания набора свойств профиля, которые будут предварительно загружены при отображении страницы и будут доступны для клиентского скрипта. Кроме того вместо того чтобы использовать встроенный профиль веб-службы, предоставляемые возможности AJAX ASP.NET, можно использовать этот класс для предоставления пути альтернативной реализации веб-службы, который будет использоваться для загрузки и сохранения свойств профиля из скрипта.  
  
 Чтобы использовать службу профилей в приложении, необходимо включить его в файле конфигурации. Если вы используете встроенный профиль веб-службы и нет необходимости предварительной загрузки свойств, у вас нет явного объявления службы Диспетчер профиля на странице.  
  
 Чтобы декларативно задать набор предварительно загруженных свойства или пользовательского профиля веб-службы, включите `<ProfileService>` элемент внутри `<asp:ScriptManager>` элемента на странице, как показано в следующем примере.  
  
```  
<asp:ScriptManager ID="SM1" runat="server">  
  <ProfileService LoadProperties="propertyA,propertyB" Path="MyProfileService.asmx" />  
</asp:ScriptManager>  
```  
  
 Можно настроить программным путем предварительной загрузки свойств или использовать пользовательский профиль веб-службы для службы профиля.  
  
 Следующий пример показывает базовую структуру класса, должен быть реализован в настраиваемом профиле веб-службы.  
  
  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Configuration.ScriptingProfileServiceSection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ProfileServiceManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ProfileServiceManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ProfileServiceManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.ProfileServiceManager" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadProperties">
      <MemberSignature Language="C#" Value="public string[] LoadProperties { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] LoadProperties" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ProfileServiceManager.LoadProperties" />
      <MemberSignature Language="VB.NET" Value="Public Property LoadProperties As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::String ^&gt; ^ LoadProperties { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LoadProperties : string[] with get, set" Usage="System.Web.UI.ProfileServiceManager.LoadProperties" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает массив, содержащий свойства профиля, которые будут доступны пользовательскому скрипту.</summary>
        <value>Массив строк, содержащий имена свойств профилей, которые будут предварительно загружены и доступны для клиентского скрипта.  Значение по умолчанию — пустой массив.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Web.UI.ProfileServiceManager.LoadProperties%2A> содержит по крайней мере одной строки, который соответствует имени свойства профиля, то служба встроенный профиль в веб-приложение получает данные профиля текущего пользователя для каждого из свойств указанного профиля. Значения свойств профиля сериализуются и становятся доступными для клиентского скрипта посредством [свойства поля](http://msdn.microsoft.com/library/ebce3c40-7017-482b-94df-91f7448fda05) коллекции.  
  
> [!NOTE]
>  Чтобы задать это свойство декларативно, используйте разделенный запятыми список имен свойств. Для значений сгруппированных свойств, используйте синтаксис *GroupName*.* PropertyName*.  
  
 Когда <xref:System.Web.UI.ProfileServiceManager.LoadProperties%2A> — пустой массив, профиль не содержит данных.  
  
 <xref:System.Web.UI.ProfileServiceManager.LoadProperties%2A> Свойство может быть указано в <xref:System.Web.UI.ScriptManager> управления или связанным <xref:System.Web.UI.ScriptManagerProxy> элемента управления. Когда <xref:System.Web.UI.ProfileServiceManager.LoadProperties%2A> устанавливается на обоих <xref:System.Web.UI.ScriptManager> управления и на одном или нескольких <xref:System.Web.UI.ScriptManagerProxy> элементов управления, набор свойств определяется путем объединения всех указанных свойств. Повторяющиеся свойства игнорируются.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Свойство <see cref="P:System.Web.UI.ProfileServiceManager.LoadProperties" /> включает имена свойств, которые не входят в текущую схему профиля приложения.</exception>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ProfileServiceManager.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Path : string with get, set" Usage="System.Web.UI.ProfileServiceManager.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает путь пользовательской реализации профиля веб-службы.</summary>
        <value>Путь пользовательской реализации профиля веб-службы.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Разрешены относительные виртуальные пути, абсолютные виртуальные пути и полные пути.  
  
 Если <xref:System.Web.UI.ProfileServiceManager.Path%2A> свойство не задано, возвращается значение <xref:System.String.Empty>. В этом случае возможности AJAX ASP.NET затем будет использовать встроенный профиль веб-службы, соответствующий по следующему пути внутреннее значение по умолчанию: ~ / ScriptServices_ProfileService.asmx. То же поведение возникает при задании <xref:System.Web.UI.ProfileServiceManager.Path%2A> быть пустое значение или `null`.  
  
 <xref:System.Web.UI.ProfileServiceManager.Path%2A> можно указать в <xref:System.Web.UI.ScriptManager> управления или связанным <xref:System.Web.UI.ScriptManagerProxy> элемента управления. Когда <xref:System.Web.UI.ProfileServiceManager.Path%2A> составляет <xref:System.Web.UI.ScriptManagerProxy> уровня, соблюдении следующих условий:  
  
-   При наличии нескольких учетных записей-посредников в иерархии элементов управления, <xref:System.Web.UI.ProfileServiceManager.Path%2A> не обязательно устанавливать на каждом экземпляре прокси-сервера.  
  
-   Если <xref:System.Web.UI.ProfileServiceManager.Path%2A> явно задается в экземпляре прокси-сервера, значение должно быть одинаковым для всех других прокси, на которых это свойство задается явным образом.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Более одного уникального пути задано в иерархии элементов управления.</exception>
      </Docs>
    </Member>
  </Members>
</Type>