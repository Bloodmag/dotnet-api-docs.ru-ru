<Type Name="PropertyConverter" FullName="System.Web.UI.PropertyConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8e4fa003a89453e9e035239458c30b9c73f74e80" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30607358" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class PropertyConverter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit PropertyConverter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.PropertyConverter" />
  <TypeSignature Language="VB.NET" Value="Public Class PropertyConverter" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyConverter abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Содержит вспомогательные функции для преобразования значений свойств в строки и из строк.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.PropertyConverter> Класс используется платформой страницы ASP.NET и не предназначен для вызова непосредственно из программного кода. Можно использовать <xref:System.Enum> структуры для преобразования строковых значений из перечислителей, или <xref:System.ComponentModel.TypeConverter> для преобразования объектов.  
  
 ]]></format>
    </remarks>
    <forInternalUseOnly />
  </Docs>
  <Members>
    <Member MemberName="EnumFromString">
      <MemberSignature Language="C#" Value="public static object EnumFromString (Type enumType, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object EnumFromString(class System.Type enumType, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PropertyConverter.EnumFromString(System.Type,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EnumFromString (enumType As Type, value As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ EnumFromString(Type ^ enumType, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="enumType">
          <see cref="T:System.Type" />, представляющий тип перечисления, создаваемый на основе параметра <c>value</c>.</param>
        <param name="value">
          <see cref="T:System.String" />, где представлено значение в перечислителе.</param>
        <summary>Преобразует строковое представление в значение указанного типа перечисления.</summary>
        <returns>Перечисление типа <paramref name="enumType" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.PropertyConverter.EnumFromString%2A> Метод используется для преобразования значения перечисления в эквивалентное строковое значение.  
  
> [!NOTE]
>  Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения. Чтобы преобразовать строковое значение в его эквивалент перечисления значение, используйте <xref:System.Enum.Parse%2A?displayProperty=nameWithType> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Параметр <paramref name="enumType" /> или <paramref name="value" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          Параметр <paramref name="enumType" /> не является классом <see cref="T:System.Enum" />.  
  
 \- или -  
  
 Параметр <paramref name="value" /> является пустой строкой ("") или содержит только пробелы.  
  
 \- или -  
  
 В параметре <paramref name="value" /> задано имя, не являющееся именем одной из именованных констант, определенных для данного перечисления.</exception>
        <forInternalUseOnly />
        <altmember cref="M:System.Enum.Parse(System.Type,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="EnumToString">
      <MemberSignature Language="C#" Value="public static string EnumToString (Type enumType, object enumValue);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string EnumToString(class System.Type enumType, object enumValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PropertyConverter.EnumToString(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function EnumToString (enumType As Type, enumValue As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ EnumToString(Type ^ enumType, System::Object ^ enumValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enumType" Type="System.Type" />
        <Parameter Name="enumValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="enumType">
          <see cref="T:System.Type" />, представляющий тип перечисления для параметра <c>enumValue</c>.</param>
        <param name="enumValue">Преобразуемое значение.</param>
        <summary>Преобразует значение указанного перечисляемого типа в эквивалентное строковое представление.</summary>
        <returns>Строковое представление параметра <paramref name="enumValue" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.PropertyConverter.EnumToString%2A> Метод используется для преобразования значения перечисления в эквивалентное строковое представление.  
  
> [!NOTE]
>  Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения. Для преобразования значения перечисления в эквивалентное ему строковое представление, используйте <xref:System.Enum.Format%2A?displayProperty=nameWithType> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значение параметра <paramref name="enumType" /> или параметра <paramref name="enumValue" /> — <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="enumType" /> не принадлежит к типу <see cref="T:System.Enum" />.  
  
 \- или -  
  
 Параметр <paramref name="enumValue" /> содержит значение из перечисления другого типа, чем <paramref name="enumType" />.  
  
 \- или -  
  
 Тип параметра <paramref name="enumValue" /> не является базовым типом параметра <paramref name="enumType" />.</exception>
        <forInternalUseOnly />
        <altmember cref="M:System.Enum.Format(System.Type,System.Object,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ObjectFromString">
      <MemberSignature Language="C#" Value="public static object ObjectFromString (Type objType, System.Reflection.MemberInfo propertyInfo, string value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig object ObjectFromString(class System.Type objType, class System.Reflection.MemberInfo propertyInfo, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.PropertyConverter.ObjectFromString(System.Type,System.Reflection.MemberInfo,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ObjectFromString (objType As Type, propertyInfo As MemberInfo, value As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Object ^ ObjectFromString(Type ^ objType, System::Reflection::MemberInfo ^ propertyInfo, System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="objType" Type="System.Type" />
        <Parameter Name="propertyInfo" Type="System.Reflection.MemberInfo" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="objType">Тип <see cref="T:System.Type" />, создаваемый из <c>value</c>.</param>
        <param name="propertyInfo">Свойства для использования при преобразовании.</param>
        <param name="value">
          <see cref="T:System.String" /> для преобразования в объект.</param>
        <summary>Преобразует строковое значение в указанный тип объекта.</summary>
        <returns>Объект типа <paramref name="objType" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.PropertyConverter.ObjectFromString%2A> Метод позволяет преобразовать строковое значение в объект.  
  
> [!NOTE]
>  Данный член предназначен для поддержки платформы .NET Framework и не должен вызываться напрямую из кода приложения. Чтобы преобразовать строковое значение объекта, используйте `Parse` метода для этого объекта, если объект предоставляет `Parse` метод. Например <xref:System.Int32> объект может быть создан из строки с помощью <xref:System.Int32.Parse%2A> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">Объект типа, указанного параметром <paramref name="objType" />, не может создаваться из параметра <paramref name="value" />.</exception>
        <forInternalUseOnly />
      </Docs>
    </Member>
  </Members>
</Type>