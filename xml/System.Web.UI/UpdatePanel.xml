<Type Name="UpdatePanel" FullName="System.Web.UI.UpdatePanel">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="408ee6868cabe5710de38771644ba2d12c62470d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30610818" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class UpdatePanel : System.Web.UI.Control, System.Web.UI.IAttributeAccessor, System.Web.UI.IUpdatePanel" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit UpdatePanel extends System.Web.UI.Control implements class System.Web.UI.IAttributeAccessor, class System.Web.UI.IUpdatePanel" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.UpdatePanel" />
  <TypeSignature Language="VB.NET" Value="Public Class UpdatePanel&#xA;Inherits Control&#xA;Implements IAttributeAccessor, IUpdatePanel" />
  <TypeSignature Language="C++ CLI" Value="public ref class UpdatePanel : System::Web::UI::Control, System::Web::UI::IAttributeAccessor, System::Web::UI::IUpdatePanel" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IAttributeAccessor</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IUpdatePanel</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Triggers")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.UpdatePanelDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(EmbeddedResourceFinder), "System.Web.Resources.UpdatePanel.bmp")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Включает частичное отображение разделов страниц без обратной передачи.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В этом разделе.  
  
-   [Введение](#introduction)  
  
-   [Обновление содержимого UpdatePanel](#refreshing_updatepanel_content)  
  
-   [Использование UpdatePanel](#updatepanel_usage)  
  
-   [Применение стилей](#applying_styles)  
  
-   [Декларативный синтаксис](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>Вступление  
 <xref:System.Web.UI.UpdatePanel> элементы управления входят центра обеспечения функциональности AJAX в ASP.NET. Они используются с <xref:System.Web.UI.ScriptManager> управления для поддержки частичной отрисовки страницы. Частичную отрисовку страницы уменьшает потребность в синхронных обратных передач и обновления страницы, когда нужно обновить только часть страницы. Частичную отрисовку страницы улучшает взаимодействие с пользователем, так как это снижает мерцание экрана, которое происходит при обратной передаче всей страницы и повышает интерактивность веб-страницы.  
  
<a name="refreshing_updatepanel_content"></a>   
## <a name="refreshing-updatepanel-content"></a>Обновление содержимого UpdatePanel  
 При включении частичной отрисовке страницы элемент управления может выполнять обратную передачу, обновляет страницы в целом или асинхронной обратной передачи, который обновляет содержимое одного или нескольких <xref:System.Web.UI.UpdatePanel> элементов управления. Является ли элемент управления вызывает асинхронной обратной передачи и обновления <xref:System.Web.UI.UpdatePanel> управления зависит от следующих:  
  
-   Если <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> свойство <xref:System.Web.UI.UpdatePanel> задано для элемента управления <xref:System.Web.UI.UpdatePanelUpdateMode.Always>, <xref:System.Web.UI.UpdatePanel> обновления на каждой обратной передачи, рассчитанная на странице содержимого элемента управления. Это включает асинхронные обратные передачи из элементов управления, находящихся внутри других <xref:System.Web.UI.UpdatePanel> элементов управления и обратные передачи от элементов управления, не находящихся внутри <xref:System.Web.UI.UpdatePanel> элементов управления.  
  
-   Если <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> свойству <xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>, <xref:System.Web.UI.UpdatePanel> обновление содержимого элемента управления в следующих обстоятельствах:  
  
    -   При вызове <xref:System.Web.UI.UpdatePanel.Update%2A> метод <xref:System.Web.UI.UpdatePanel> управления явным образом.  
  
    -   Когда <xref:System.Web.UI.UpdatePanel> управления вложен в другой <xref:System.Web.UI.UpdatePanel> управления и родительской панели обновляется.  
  
    -   При обратной передаче вызвана элемент управления, который определяется в качестве триггера с помощью `Triggers` свойства <xref:System.Web.UI.UpdatePanel> элемента управления. В этом случае элемент управления прямо инициирует обновление содержимого панели. Элемент управления может быть внутри или вне <xref:System.Web.UI.UpdatePanel> элемента управления, связанный с триггером.  
  
    -   Когда <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> свойству `true` и является дочерним элементом управления <xref:System.Web.UI.UpdatePanel> управления вызывает обратную передачу. Вложенные дочерние элементы управления <xref:System.Web.UI.UpdatePanel> не вызывают обновление родительского <xref:System.Web.UI.UpdatePanel> управления, если только они определены явно как триггеры.  
  
 Сочетание параметра <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> свойства `false` и <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> свойства <xref:System.Web.UI.UpdatePanelUpdateMode.Always> запрещено и вызовет исключение.  
  
 Когда <xref:System.Web.UI.UpdatePanel> асинхронном повторном, выполняемой элементом управления, он добавляет заголовок HTTP. Некоторые учетные записи-посредники удалите этот заголовок HTTP. В этом случае сервер обрабатывает запрос как обычную обратную передачу, который приводит к возникновению ошибки клиента. Чтобы устранить эту проблему, вставьте настраиваемого поля формы, при выполнении асинхронной записи. Затем проверьте заголовок или настраиваемое поле формы в серверном коде.  
  
<a name="updatepanel_usage"></a>   
## <a name="updatepanel-usage"></a>Использование UpdatePanel  
 Можно использовать несколько <xref:System.Web.UI.UpdatePanel> элементы управления для обновления различных страниц областей независимо друг от друга. При страницы, которая содержит один или несколько <xref:System.Web.UI.UpdatePanel> элементов управления сначала отображаются, все содержимое всех <xref:System.Web.UI.UpdatePanel> элементов управления и отсылается в браузер. При последующих асинхронных обратных передачах, содержимое каждого <xref:System.Web.UI.UpdatePanel> управления не могут быть обновлены, в зависимости от параметров панели и клиентской или серверной логики для отдельных панелей.  
  
 Можно также использовать <xref:System.Web.UI.UpdatePanel> элементов управления в следующих сценариях:  
  
-   В пользовательских элементах управления.  
  
-   На страницах.  
  
-   Вложено в другой <xref:System.Web.UI.UpdatePanel> элементов управления.  
  
-   Элементы управления внутри шаблона, такие как <xref:System.Web.UI.WebControls.GridView> или <xref:System.Web.UI.WebControls.Repeater> элементов управления.  
  
 <xref:System.Web.UI.UpdatePanel> элементы управления можно добавить декларативно или программно.  
  
 Можно добавить <xref:System.Web.UI.UpdatePanel> управлять программными средствами, но нельзя программно добавить триггеры. Для создания поведения триггера, можно зарегистрировать элемент управления на странице как элемент управления асинхронной обратной передачи. Это делается путем вызова <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> метод <xref:System.Web.UI.ScriptManager> элемента управления. Затем можно создать обработчик событий, который выполняется в ответ на асинхронную обратную передачу, а в обработчике вызов <xref:System.Web.UI.UpdatePanel.Update%2A> метод <xref:System.Web.UI.UpdatePanel> элемента управления.  
  
<a name="applying_styles"></a>   
## <a name="applying-styles"></a>Применение стилей  
 <xref:System.Web.UI.UpdatePanel> Элемент управления принимает атрибуты expando. Это позволяет задать класс CSS для HTMLelements, подготовки к просмотру элементов управления. Например можно создать разметку, показано в следующем примере:  
  
```  
<asp:UpdatePanel runat="server" class="myStyle">  
</asp:UpdatePanel>   
```  
  
 Разметку в предыдущем примере элементы HTML, аналогично приведенным ниже, при запуске страницы:  
  
```  
<div id="ctl00_MainContent_UpdatePanel1" class="MyStyle">  
</div>  
```  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>Декларативный синтаксис  
  
```  
<asp:UpdatePanel  
    ChildrenAsTriggers="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    RenderMode="Block|Inline"  
    runat="server"  
    SkinID="string"  
    UpdateMode="Always|Conditional"  
    Visible="True|False"  
>  
    <ContentTemplate>  
        <!-- child controls -->  
    </ContentTemplate>  
    <Triggers>  
        <asp:AsyncPostBackTrigger   
            ControlID="string"  
            EventName="string"  
        />  
        <asp:PostBackTrigger   
            ControlID="string"  
        />  
    </Triggers>  
</asp:UpdatePanel>  
```  
  
   
  
## Examples  
 Ниже приведены примеры различных вариантах использования <xref:System.Web.UI.UpdatePanel> элемента управления.  
  
 **Элементы управления внутри элемента управления UpdatePanel**  
  
 Следующий пример показывает способ размещения элементов управления внутри <xref:System.Web.UI.UpdatePanel> управления для уменьшения мерцания экрана при отправке данных на сервере. В этом примере <xref:System.Web.UI.WebControls.Calendar> и <xref:System.Web.UI.WebControls.DropDownList> управления находятся внутри <xref:System.Web.UI.UpdatePanel> элемента управления. По умолчанию <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> свойство <xref:System.Web.UI.UpdatePanelUpdateMode.Always> и <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> свойство `true`. Поэтому дочерние элементы управления панели вызвать асинхронной обратной передачи.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/CS/UpdatePanelExample1CS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/VB/UpdatePanelExample1VB.aspx#1)]  
  
 **Сценарии главный/подчиненный с элементами управления UpdatePanel**  
  
 В следующем примере <xref:System.Web.UI.UpdatePanel> элемент управления используется в сценарии главного и подчиненного представлений, который показывает заказы и сведения о заказе из базы данных "Борей". Один <xref:System.Web.UI.UpdatePanel> управления содержит <xref:System.Web.UI.WebControls.GridView> элемент управления, отображающий список заказов. Второй <xref:System.Web.UI.UpdatePanel> управления содержит <xref:System.Web.UI.WebControls.DetailsView> элемент управления, который отображает сведения об одном порядке. При выборе заказа из первой таблицы во второй таблице показаны данные для этого заказа. Вторая таблица обновляется асинхронно на основании выбора в первой таблице. Операции сортировки и разбиения по сводной таблице заказов также вызывают частичное обновление.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/CS/UpdatePanelExample2CS.aspx#2)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/VB/UpdatePanelExample2VB.aspx#2)]  
  
 Если поместить <xref:System.Web.UI.WebControls.GridView> управления внутри <xref:System.Web.UI.UpdatePanel> параметры управления <xref:System.Web.UI.WebControls.GridView> элемента управления <xref:System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks%2A> свойства `true` не поддерживается. Тем не менее поскольку <xref:System.Web.UI.UpdatePanel> элемент управления поддерживает асинхронные обратные передачи любой обратных передач, которые изменяют <xref:System.Web.UI.WebControls.GridView> управления внутри <xref:System.Web.UI.UpdatePanel> управления вызвать совпадает с поведением сортировку и разбиение по страницам обратных вызовов.  
  
 **С помощью элемента управления UpdatePanel в шаблоне**  
  
 В следующем примере <xref:System.Web.UI.UpdatePanel> управления используется в шаблоне элемента из <xref:System.Web.UI.WebControls.GridView> элемента управления. <xref:System.Web.UI.UpdatePanel> элементы управления в каждой строке данных создаются автоматически. Каждая строка <xref:System.Web.UI.UpdatePanel> управления содержит <xref:System.Web.UI.WebControls.Label> управления для отображения количество товара в этой строке и <xref:System.Web.UI.WebControls.Button> управления уменьшение и увеличение количества.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel#3](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/CS/UpdatePanelExample3CS.aspx#3)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel#3](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel/VB/UpdatePanelExample3VB.aspx#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.ScriptManager" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public UpdatePanel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; UpdatePanel();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.UpdatePanel" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор используется для инициализации нового экземпляра <xref:System.Web.UI.UpdatePanel> класса. Для динамического добавления <xref:System.Web.UI.UpdatePanel> управления на страницу, создайте новый <xref:System.Web.UI.UpdatePanel> экземпляра, а затем добавьте дочерних элементов управления к объекту управления, которые доступны в экземпляре <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> свойство.  
  
   
  
## Examples  
 В следующем примере показано, как динамически создать <xref:System.Web.UI.UpdatePanel> управления и добавьте его на страницу. При нажатии кнопки внутри <xref:System.Web.UI.UpdatePanel> управления, сообщение обновляется с указанием даты и времени. Дочерние элементы управления добавляются с помощью <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> свойство.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/CS/UpdatePanelConstructorCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/VB/UpdatePanelConstructorVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.UpdateMode" />
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Web.UI.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::AttributeCollection ^ Attributes { System::Web::UI::AttributeCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.WebSysDescription("WebControl_Attributes")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает коллекцию атрибутов каскадной таблицы стилей (CSS) для элемента управления <see cref="T:System.Web.UI.UpdatePanel" />.</summary>
        <value>Имена правил стиля CSS в коллекции атрибутов.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.Attributes%2A> Свойство содержит коллекцию атрибутов стиля CSS, которые могут использоваться в заключающей `div` элемент <xref:System.Web.UI.UpdatePanel> элемента управления.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChildrenAsTriggers">
      <MemberSignature Language="C#" Value="public bool ChildrenAsTriggers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ChildrenAsTriggers" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" />
      <MemberSignature Language="VB.NET" Value="Public Property ChildrenAsTriggers As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ChildrenAsTriggers { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее изменяют ли содержимое панели обратные передачи из непосредственных дочерних элементов управления <see cref="T:System.Web.UI.UpdatePanel" />.</summary>
        <value>
          <see langword="true" />, если обратные передачи из непосредственных дочерних элементов управления <see cref="T:System.Web.UI.UpdatePanel" /> обновляют содержимое панели; в противном случае — <see langword="false" />. Значение по умолчанию: <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Задать <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> свойства `true` Если обратные передачи из непосредственных дочерних элементов <xref:System.Web.UI.UpdatePanel> управления могут обновление содержимого панели. Вложенные дочерние элементы управления <xref:System.Web.UI.UpdatePanel> обновления родительского объекта не приведет к элементам управления <xref:System.Web.UI.UpdatePanel> содержимое элемента управления только при вызове <xref:System.Web.UI.UpdatePanel.Update%2A> метод явным образом определить дочерние элементы управления, как триггеры.  
  
> [!NOTE]
>  Когда <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> свойству <xref:System.Web.UI.UpdatePanelUpdateMode.Always> и <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> свойству `false`, <xref:System.InvalidOperationException> исключения во время <xref:System.Web.UI.UpdatePanel.OnPreRender%2A> метод. Это сочетание свойств не допускается для <xref:System.Web.UI.UpdatePanel> элемента управления.  
  
 Сценарии, где можно задать <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> для `false` при наличии двух <xref:System.Web.UI.UpdatePanel> элементов управления и требуется обратной передачи из первой панели, чтобы обновить содержимое второй панели, но не обновлять его собственного содержимого. Например Первая панель может быть список продуктов и второй панели может быть корзины.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.UpdateMode" />
        <altmember cref="M:System.Web.UI.UpdatePanel.OnPreRender(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ContentTemplate">
      <MemberSignature Language="C#" Value="public System.Web.UI.ITemplate ContentTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ContentTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.ContentTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Property ContentTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ITemplate ^ ContentTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateInstance</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает шаблон, определяющий содержимое элемента управления <see cref="T:System.Web.UI.UpdatePanel" />.</summary>
        <value>Экземпляр <see cref="T:System.Web.UI.ITemplate" />, определяющий содержимое элемента управления <see cref="T:System.Web.UI.UpdatePanel" />. Значение по умолчанию: <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> Свойство содержит содержимое, которое появляется в <xref:System.Web.UI.UpdatePanel> управления при его отрисовке. Содержимое шаблона можно создать декларативно или программно. Шаблон содержимого для <xref:System.Web.UI.UpdatePanel> элемента управления — это шаблон одного экземпляра. Таким образом, свойства элементов управления, он содержит может осуществляться на странице без использования <xref:System.Web.UI.Page.FindControl%2A> метод. Дополнительные сведения см. в разделе <xref:System.Web.UI.TemplateInstanceAttribute> Общие сведения о классе.  
  
 Для добавления элементов к <xref:System.Web.UI.UpdatePanel> управления декларативно, добавьте `<ContentTemplate>` элемент между открывающим и закрывающим тегами элемента <xref:System.Web.UI.UpdatePanel> элемента управления. Внутри `<ContentTemplate>` теги элементов, объявите другие элементы управления и HTML-элементов.  
  
 Для добавления элементов к <xref:System.Web.UI.UpdatePanel> управления динамически, используйте <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> свойство, которое можно добавить дочерние элементы управления без необходимости создавать пользовательский шаблон, который реализует <xref:System.Web.UI.ITemplate> интерфейса.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Свойство <see cref="P:System.Web.UI.UpdatePanel.ContentTemplate" /> элемента управления <see cref="T:System.Web.UI.UpdatePanel" /> устанавливается после создания шаблона или после создания контейнера шаблона содержимого.</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
        <altmember cref="T:System.Web.UI.TemplateInstanceAttribute" />
        <altmember cref="T:System.Web.UI.ITemplate" />
      </Docs>
    </Member>
    <Member MemberName="ContentTemplateContainer">
      <MemberSignature Language="C#" Value="public System.Web.UI.Control ContentTemplateContainer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.Control ContentTemplateContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentTemplateContainer As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::Control ^ ContentTemplateContainer { System::Web::UI::Control ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект элемента управления, к которому можно программно добавлять дочерние элементы управления.</summary>
        <value>Объект <see cref="T:System.Web.UI.Control" />, определяющий содержимое элемента управления <see cref="T:System.Web.UI.UpdatePanel" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> Позволяет программно добавить дочерние элементы управления для <xref:System.Web.UI.UpdatePanel> управления без необходимости определения пользовательский шаблон, который наследует от <xref:System.Web.UI.ITemplate> интерфейса. При добавлении содержимого в <xref:System.Web.UI.UpdatePanel> управления декларативно или с помощью конструктора, следует добавлять содержимое в <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> свойства с помощью `<ContentTemplate>` элемента.  
  
   
  
## Examples  
 В следующем примере показано, как программно задать <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> свойства <xref:System.Web.UI.UpdatePanel> элемента управления. <xref:System.Web.UI.WebControls.Label.Text%2A> Свойство <xref:System.Web.UI.WebControls.Label> элемента управления задано `Button1` нажата.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/CS/UpdatePanelConstructorCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.Constructor/VB/UpdatePanelConstructorVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplate" />
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override sealed System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Web.UI.ControlCollection" />, содержащий дочерние элементы управления для элемента управления <see cref="T:System.Web.UI.UpdatePanel" />.</summary>
        <value>Коллекция дочерних элементов управления для элемента управления <see cref="T:System.Web.UI.UpdatePanel" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.Controls%2A> Переопределяется из базового <xref:System.Web.UI.Control> класса и запечатанными для предотвращения дополнительных наследования. Добавить элементы управления для <xref:System.Web.UI.UpdatePanel> управления декларативно, создайте `<ContentTemplate>` внутри <xref:System.Web.UI.UpdatePanel> разметку элемента управления. Чтобы добавить элементы управления для <xref:System.Web.UI.UpdatePanel> управления программными средствами, используйте <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> свойство.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Был вызван один из методов <see cref="M:System.Web.UI.ControlCollection.Add(System.Web.UI.Control)" />, <see cref="M:System.Web.UI.ControlCollection.AddAt(System.Int32,System.Web.UI.Control)" />, <see cref="M:System.Web.UI.ControlCollection.Clear" />, <see cref="M:System.Web.UI.ControlCollection.Remove(System.Web.UI.Control)" /> или <see cref="M:System.Web.UI.ControlCollection.RemoveAt(System.Int32)" /> класса <see cref="T:System.Web.UI.ControlCollection" />. Для изменения содержимого элемента управления <see cref="T:System.Web.UI.UpdatePanel" />, измените дочерние элементы управления свойства <see cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />.</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
      </Docs>
    </Member>
    <Member MemberName="CreateContentTemplateContainer">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.Control CreateContentTemplateContainer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.Control CreateContentTemplateContainer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.CreateContentTemplateContainer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateContentTemplateContainer () As Control" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::Control ^ CreateContentTemplateContainer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.Control</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает объект <see cref="T:System.Web.UI.Control" />, действующий как контейнер для дочернего элемента управления, определяющего содержание элемента управления <see cref="T:System.Web.UI.UpdatePanel" />.</summary>
        <returns>Контейнер <see cref="T:System.Web.UI.Control" /> для содержимого элемента управления <see cref="T:System.Web.UI.UpdatePanel" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод предназначен для использования разработчиками элементов управления, которые хотят расширить <xref:System.Web.UI.UpdatePanel> элемента управления. Например, в производных классах можно обеспечить различные корневые элементы управления, который выступает в роли контейнера для вашего <xref:System.Web.UI.UpdatePanel> содержимого элемента управления. Реализация по умолчанию возвращает <xref:System.Web.UI.Control> объекта.  
  
   
  
## Examples  
 В следующем примере показан способ переопределения <xref:System.Web.UI.UpdatePanel.CreateContentTemplateContainer%2A> метода в пользовательском <xref:System.Web.UI.UpdatePanel> управления для подготовки к просмотру всегда `<fieldset>` и `<legend>` элементы для содержимого панели. Пользовательский <xref:System.Web.UI.UpdatePanel> управления определяет открытое свойство с именем `GroupingText` именно строкового литерала в `<legend>` элемент.  
  
 Настраиваемый <xref:System.Web.UI.UpdatePanel> управления с именем `CustomUpdatePanel` является производным от <xref:System.Web.UI.UpdatePanel> и переопределяет <xref:System.Web.UI.UpdatePanel.CreateContentTemplateContainer%2A> метод. Поместите `CustomUpdatePanel` класса исходного кода в папке App_Code веб-сайта.  
  
 [!code-csharp[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#2](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/CS/App_Code/CustomUpdatePanel.cs#2)]
 [!code-vb[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#2](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/VB/App_Code/CustomUpdatePanel.vb#2)]  
  
 Пользовательский <xref:System.Web.UI.UpdatePanel> управления используется на странице так же, как <xref:System.Web.UI.UpdatePanel> элемента управления. В следующем примере показано страницу, которая содержит пользовательский <xref:System.Web.UI.UpdatePanel> элемента управления.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/CS/UpdatePanelCreateContentTemplateContainerCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.CreateContentTemplateContainer/VB/UpdatePanelCreateContentTemplateContainerVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplate" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override sealed System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает коллекцию всех элементов управления, содержащихся в элементе управления <see cref="T:System.Web.UI.UpdatePanel" />.</summary>
        <returns>Объект <see cref="T:System.Web.UI.ControlCollection" />, состоящий из всех элементов управления, определяющих содержимое элемента управления <see cref="T:System.Web.UI.UpdatePanel" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.CreateControlCollection%2A> Метод используется разработчиками элементов управления.  
  
 Так как этот метод является защищенным и запечатанными, она доступна как классы, производные от <xref:System.Web.UI.UpdatePanel> класс, но он не может быть переопределен. Этот метод переопределяет базовую реализацию для возврата специализированный <xref:System.Web.UI.ControlCollection> , создающий исключение <xref:System.InvalidOperationException> при <xref:System.Web.UI.ControlCollection.Add%2A>, <xref:System.Web.UI.ControlCollection.AddAt%2A>, <xref:System.Web.UI.ControlCollection.Clear%2A>, <xref:System.Web.UI.ControlCollection.Remove%2A>, или <xref:System.Web.UI.ControlCollection.RemoveAt%2A> метод <xref:System.Web.UI.ControlCollection> класс вызывается. Для изменения содержимого элемента управления <xref:System.Web.UI.UpdatePanel>, измените дочерние элементы управления свойства <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="protected internal virtual void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.Initialize" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void Initialize();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Инициализирует коллекцию триггеров элемента управления <see cref="T:System.Web.UI.UpdatePanel" />, если разрешена частичная отрисовка страницы.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если частичная отрисовка не включена, триггеры, определенные в <xref:System.Web.UI.UpdatePanel.Triggers%2A> свойства не инициализируются, так как они не оказывают влияния. <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> Свойство <xref:System.Web.UI.ScriptManager> управления получает или задает значение, указывающее, включено ли частичной отрисовке страницы. <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A> Свойство <xref:System.Web.UI.ScriptManager> управления получает или задает значение, указывающее, поддерживается ли частичной отрисовке страницы.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении <see cref="M:System.Web.UI.UpdatePanel.Initialize" /> метод, убедитесь, что вызов базового класса, чтобы зарегистрировать триггеры, если включена частичной отрисовке страницы.</para>
        </block>
        <altmember cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" />
        <altmember cref="P:System.Web.UI.ScriptManager.SupportsPartialRendering" />
      </Docs>
    </Member>
    <Member MemberName="IsInPartialRendering">
      <MemberSignature Language="C#" Value="public bool IsInPartialRendering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInPartialRendering" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.IsInPartialRendering" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInPartialRendering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInPartialRendering { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее обновляется ли элемент управления <see cref="T:System.Web.UI.UpdatePanel" /> в результате асинхронной обратной передачи.</summary>
        <value>
          <see langword="true" />, если текущий элемент управления <see cref="T:System.Web.UI.UpdatePanel" /> модифицируется в результате асинхронной обратной передачи; в противном случае — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.IsInPartialRendering%2A> Свойство предназначено для использования разработчиками элементов управления, чтобы определить, когда <xref:System.Web.UI.UpdatePanel> управления обновляется в результате асинхронной обратной передачи. При разработке страницы, используйте <xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A> свойство, чтобы определить, обрабатывает ли страница в результате асинхронной обратной передачи.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.ScriptManager.IsInAsyncPostBack" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.EventArgs" />, содержащий данные о событии.</param>
        <summary>Вызывает событие <see cref="E:System.Web.UI.Control.Init" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel> Элемента управления <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> во время создания экземпляра свойства <xref:System.Web.UI.UpdatePanel.OnInit%2A> метод.  
  
 <xref:System.Web.UI.UpdatePanel.OnInit%2A> Метод используется разработчиками элементов управления для расширения функциональных возможностей <xref:System.Web.UI.UpdatePanel> элемента управления.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Свойство <see cref="P:System.Web.UI.UpdatePanel.ContentTemplate" /> определяется после того, как уже было создано свойство <see cref="P:System.Web.UI.UpdatePanel.ContentTemplateContainer" />.</exception>
        <block subset="none" type="overrides">
          <para>При переопределении <see cref="M:System.Web.UI.UpdatePanel.OnInit(System.EventArgs)" /> метод в производном классе, убедитесь, что для вызова <see cref="M:System.Web.UI.UpdatePanel.OnInit(System.EventArgs)" /> метод базового класса, чтобы зарегистрированные делегаты можно получить событие.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected internal override void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnLoad(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.EventArgs" />, содержащий данные о событии.</param>
        <summary>Возбуждает событие <see cref="E:System.Web.UI.Control.Load" /> для элемента управления <see cref="T:System.Web.UI.UpdatePanel" /> и вызывает метод <see cref="M:System.Web.UI.UpdatePanel.Initialize" />, если частичная отрисовка страницы не разрешена.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>При переопределении <see cref="M:System.Web.UI.UpdatePanel.OnLoad(System.EventArgs)" /> метод, убедитесь, что вызов базового класса, чтобы <see cref="E:System.Web.UI.Control.Load" /> возникает событие.</para>
        </block>
        <altmember cref="M:System.Web.UI.UpdatePanel.Initialize" />
        <altmember cref="P:System.Web.UI.ScriptManager.EnablePartialRendering" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.EventArgs" />, содержащий данные о событии.</param>
        <summary>Вызывает событие <see cref="E:System.Web.UI.Control.PreRender" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.OnPreRender%2A> Метод используется разработчиками элементов управления для расширения функциональных возможностей <xref:System.Web.UI.UpdatePanel> элемента управления.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Свойство <see cref="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" /> установлено в <see langword="false" />, а свойство <see cref="P:System.Web.UI.UpdatePanel.UpdateMode" /> установлено в <see cref="F:System.Web.UI.UpdatePanelUpdateMode.Always" />.</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" />
        <altmember cref="P:System.Web.UI.UpdatePanel.UpdateMode" />
      </Docs>
    </Member>
    <Member MemberName="OnUnload">
      <MemberSignature Language="C#" Value="protected internal override void OnUnload (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnUnload(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.OnUnload(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnUnload (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnUnload(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Вызывает базовое событие <see cref="E:System.Web.UI.Control.Unload" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.OnUnload%2A> Метод используется разработчиками элементов управления для расширения функциональных возможностей <xref:System.Web.UI.UpdatePanel> управления  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Объект <see cref="T:System.Web.UI.HtmlTextWriter" />, представляющий выходной поток для отрисовки содержимого HTML.</param>
        <summary>Вызывает событие <see cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.Render%2A> Метод используется разработчиками элементов управления для расширения функциональных возможностей <xref:System.Web.UI.UpdatePanel> элемента управления.  
  
 <xref:System.Web.UI.UpdatePanel.Render%2A> Метод записывает отображаемого содержимого <xref:System.Web.UI.UpdatePanel> управления для браузера с помощью предоставленного <xref:System.Web.UI.HtmlTextWriter> объекта. При переопределении <xref:System.Web.UI.UpdatePanel.Render%2A> метод в производном классе, убедитесь, что для вызова <xref:System.Web.UI.UpdatePanel.Render%2A> метод базового класса, чтобы дочерние элементы управления из <xref:System.Web.UI.UpdatePanel> подготавливаются к просмотру элемента управления.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderChildren">
      <MemberSignature Language="C#" Value="protected internal override void RenderChildren (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderChildren(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.RenderChildren(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderChildren (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderChildren(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Объект <see cref="T:System.Web.UI.HtmlTextWriter" />, представляющий выходной поток для отрисовки содержимого HTML.</param>
        <summary>Вызывает событие <see cref="M:System.Web.UI.UpdatePanel.RenderChildren(System.Web.UI.HtmlTextWriter)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.RenderChildren%2A> Метод используется разработчиками элементов управления для расширения функциональных возможностей <xref:System.Web.UI.UpdatePanel> элемента управления.  
  
 <xref:System.Web.UI.UpdatePanel.RenderChildren%2A> Метод записывает отображаемого содержимого <xref:System.Web.UI.UpdatePanel> управления для браузера с помощью предоставленного <xref:System.Web.UI.HtmlTextWriter> объекта. При переопределении <xref:System.Web.UI.UpdatePanel.RenderChildren%2A> метод в производном классе, убедитесь, что для вызова <xref:System.Web.UI.UpdatePanel.RenderChildren%2A> метод базового класса, чтобы дочерние элементы управления из <xref:System.Web.UI.UpdatePanel> подготавливаются к просмотру элемента управления.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RenderMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.UpdatePanelRenderMode RenderMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.UpdatePanelRenderMode RenderMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.RenderMode" />
      <MemberSignature Language="VB.NET" Value="Public Property RenderMode As UpdatePanelRenderMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::UpdatePanelRenderMode RenderMode { System::Web::UI::UpdatePanelRenderMode get(); void set(System::Web::UI::UpdatePanelRenderMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.UpdatePanelRenderMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, заключено ли содержимое элемента управления <see cref="T:System.Web.UI.UpdatePanel" /> в элемент <see langword="&lt;div&gt;" /> или <see langword="&lt;span&gt;" /> HTML.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Web.UI.UpdatePanelRenderMode" />. Значение по умолчанию — <see cref="F:System.Web.UI.UpdatePanelRenderMode.Block" />, так что содержание панели заключено в элемент <see langword="&lt;div&gt;" /> HTML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Web.UI.UpdatePanel.RenderMode%2A> свойству <xref:System.Web.UI.UpdatePanelRenderMode.Inline>, содержимое <xref:System.Web.UI.UpdatePanel> управления подготавливается к просмотру в формате HTML `<span>` элемента. Если <xref:System.Web.UI.UpdatePanel.RenderMode%2A> свойству <xref:System.Web.UI.UpdatePanelRenderMode.Block>, он отображается внутри HTML `<div>` элемента.  
  
   
  
## Examples  
 Следующий пример показывает, как задать <xref:System.Web.UI.UpdatePanel.RenderMode%2A> свойства декларативно. <xref:System.Web.UI.UpdatePanel> Управления с именем `UpdatePanel1` подготавливается к просмотру в HTML- `<span>` элемента. Если <xref:System.Web.UI.UpdatePanel.RenderMode%2A> было присвоено свойству <xref:System.Web.UI.UpdatePanelRenderMode.Block>, из-за каким образом будет выглядеть несвязанном полученный абзаца HTML `<div>` элемент подготавливается к просмотру.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.RenderMode#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.RenderMode/CS/UpdatePanelRenderModeCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.RenderMode#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.RenderMode/VB/UpdatePanelRenderModeVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.UpdatePanelRenderMode" />
      </Docs>
    </Member>
    <Member MemberName="RequiresUpdate">
      <MemberSignature Language="C#" Value="protected internal virtual bool RequiresUpdate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.RequiresUpdate" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property RequiresUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property bool RequiresUpdate { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, будет ли обновляться содержимое элемента управления <see cref="T:System.Web.UI.UpdatePanel" />.</summary>
        <value>
          <see langword="true" />, если содержание элемента управления <see cref="T:System.Web.UI.UpdatePanel" /> будет обновляться; в противном случае — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию <xref:System.Web.UI.UpdatePanel.RequiresUpdate%2A> возвращает `true` Если <xref:System.Web.UI.UpdatePanel.Update%2A> явно вызван метод или если <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> свойству <xref:System.Web.UI.UpdatePanelUpdateMode.Always>.  
  
 Это свойство предназначено для использования разработчиками элементов управления, которые хотят расширить <xref:System.Web.UI.UpdatePanel> элемента управления. Например, в производных классах можно предоставить дополнительную логику, чтобы определить, является ли <xref:System.Web.UI.UpdatePanel> управления должны быть обновлены.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.GetAttribute">
      <MemberSignature Language="C#" Value="string IAttributeAccessor.GetAttribute (string key);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.IAttributeAccessor.GetAttribute(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetAttribute (key As String) As String Implements IAttributeAccessor.GetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Web.UI.IAttributeAccessor.GetAttribute(System::String ^ key) = System::Web::UI::IAttributeAccessor::GetAttribute;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Имя атрибута.</param>
        <summary>Возвращает атрибут веб-элемента управления с заданным именем.</summary>
        <returns>Значение атрибута.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Web.UI.UpdatePanel> приведен к типу интерфейса <xref:System.Web.UI.IAttributeAccessor>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.SetAttribute">
      <MemberSignature Language="C#" Value="void IAttributeAccessor.SetAttribute (string key, string value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IAttributeAccessor.SetAttribute(string key, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub SetAttribute (key As String, value As String) Implements IAttributeAccessor.SetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IAttributeAccessor.SetAttribute(System::String ^ key, System::String ^ value) = System::Web::UI::IAttributeAccessor::SetAttribute;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Имя атрибута, который нужно установить.</param>
        <param name="value">Значение атрибута, которое нужно присвоить.</param>
        <summary>Задает значение заданного атрибута элемента управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Web.UI.UpdatePanel> приведен к типу интерфейса <xref:System.Web.UI.IAttributeAccessor>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Triggers">
      <MemberSignature Language="C#" Value="public System.Web.UI.UpdatePanelTriggerCollection Triggers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.UpdatePanelTriggerCollection Triggers" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.Triggers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Triggers As UpdatePanelTriggerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::UpdatePanelTriggerCollection ^ Triggers { System::Web::UI::UpdatePanelTriggerCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UpdatePanelTriggerCollectionEditor, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.UpdatePanelTriggerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Web.UI.UpdatePanelTriggerCollection" />, содержащий объекты <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> и <see cref="T:System.Web.UI.PostBackTrigger" />, которые были декларативно зарегистрированы для элемента управления <see cref="T:System.Web.UI.UpdatePanel" />.</summary>
        <value>Коллекция объектов типов <see cref="T:System.Web.UI.AsyncPostBackTrigger" /> и <see cref="T:System.Web.UI.PostBackTrigger" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.UpdatePanel.Triggers%2A> Свойство возвращает коллекцию всех триггеров, которые были определены для <xref:System.Web.UI.UpdatePanel> элемента управления. (Могут быть определены триггеры декларативно с помощью **коллекции UpdatePanelTrigger** диалоговое окно в конструкторе или с помощью `<Triggers>` элемент <xref:System.Web.UI.UpdatePanel> элемента управления.) Сюда входит <xref:System.Web.UI.AsyncPostBackTrigger> и <xref:System.Web.UI.PostBackTrigger> объектов.  
  
 Декларативные триггеры, определенные в <xref:System.Web.UI.UpdatePanel.Triggers%2A> коллекции не отслеживаются в состоянии представления.  
  
 Когда элемент управления, который представляет собой контейнер именования используется как триггер, все его дочерние элементы управления, вызывающие обратную передачу, ведут себя как триггеры.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.UpdatePanelTriggerCollection" />
        <altmember cref="T:System.Web.UI.UpdatePanelTrigger" />
        <altmember cref="T:System.Web.UI.AsyncPostBackTrigger" />
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl(System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterPostBackControl(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public void Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.UpdatePanel.Update" />
      <MemberSignature Language="VB.NET" Value="Public Sub Update ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Update();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Вызывает обновление содержимого элемента управления <see cref="T:System.Web.UI.UpdatePanel" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если страница включена для частичной отрисовки страницы, при вызове <xref:System.Web.UI.UpdatePanel.Update%2A> метода <xref:System.Web.UI.UpdatePanel> обновление содержимого элемента управления в браузере. Вызовите <xref:System.Web.UI.UpdatePanel.Update%2A> метод при наличии кода сервера, который необходимо выполнить, чтобы определить ли <xref:System.Web.UI.UpdatePanel> управления должны быть обновлены. Если вы планируете использовать <xref:System.Web.UI.UpdatePanel.Update%2A> задать метод, <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> свойства <xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>. Если требуется решение для обновления панели в серверную логику, убедитесь, что <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> свойство `false` и не явные определены триггеры для панели.  
  
 В сценарии разработки обычно страницы Если задание триггеров или <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> свойство `true` для <xref:System.Web.UI.UpdatePanel> управления <xref:System.Web.UI.UpdatePanel.Update%2A> метод автоматически вызывается во время жизненного цикла страницы.  
  
 Если <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> свойство не определено для <xref:System.Web.UI.UpdatePanel> управления панели будут обновляться.  
  
   
  
## Examples  
 В следующем примере используется <xref:System.Web.UI.UpdatePanel.Update%2A> метод для обновления содержимого <xref:System.Web.UI.UpdatePanel> управления при более чем пяти секунд, прошедших с момента последнего обновления.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/CS/UpdatePanelUpdateModeCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/VB/UpdatePanelUpdateModeVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">Свойству <see cref="P:System.Web.UI.UpdatePanel.UpdateMode" /> задано значение <see cref="F:System.Web.UI.UpdatePanelUpdateMode.Always" />.  
  
 \- или –  
  
 Метод <see cref="M:System.Web.UI.UpdatePanel.Update" /> вызывается во время или после события <see cref="M:System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)" /> страницы.</exception>
        <altmember cref="P:System.Web.UI.UpdatePanel.ContentTemplate" />
        <altmember cref="M:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="UpdateMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.UpdatePanelUpdateMode UpdateMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.UpdatePanelUpdateMode UpdateMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.UpdatePanel.UpdateMode" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateMode As UpdatePanelUpdateMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::UpdatePanelUpdateMode UpdateMode { System::Web::UI::UpdatePanelUpdateMode get(); void set(System::Web::UI::UpdatePanelUpdateMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.UpdatePanelUpdateMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, когда обновляется содержимое элемента управления <see cref="T:System.Web.UI.UpdatePanel" />.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Web.UI.UpdatePanelUpdateMode" />. Значение по умолчанию: <see cref="F:System.Web.UI.UpdatePanelUpdateMode.Always" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда <xref:System.Web.UI.UpdatePanel> управления не находится в другой <xref:System.Web.UI.UpdatePanel> управления панели обновляется в соответствии с параметрами <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> и <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> свойства, а также коллекцию триггеров. Когда <xref:System.Web.UI.UpdatePanel> управления находится внутри другой <xref:System.Web.UI.UpdatePanel> управления дочерней панели обновляется автоматически при обновлении родительской панели.  
  
 Содержимое <xref:System.Web.UI.UpdatePanel> обновлен элемент управления в следующих случаях:  
  
-   Если <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> свойству <xref:System.Web.UI.UpdatePanelUpdateMode.Always>, <xref:System.Web.UI.UpdatePanel> обновления содержимого элемента управления на каждой обратной передачи, вводимые в любом месте на странице. Это включает асинхронные обратные передачи из элементов управления, находящихся внутри других <xref:System.Web.UI.UpdatePanel> элементов управления и обратные передачи от элементов управления, не находящихся внутри <xref:System.Web.UI.UpdatePanel> элементов управления.  
  
-   Если <xref:System.Web.UI.UpdatePanel> управления вложен в другой <xref:System.Web.UI.UpdatePanel> управления и обновление родительской панели обновляется.  
  
-   Если <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> свойству <xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>, и возникает одно из следующих условий:  
  
    -   Можно вызвать <xref:System.Web.UI.UpdatePanel.Update%2A> метод <xref:System.Web.UI.UpdatePanel> управления явным образом.  
  
    -   Обратная передача вызвана элемент управления, который определяется в качестве триггера с помощью <xref:System.Web.UI.UpdatePanel.Triggers%2A> свойства <xref:System.Web.UI.UpdatePanel> элемента управления. В этом случае элемент управления прямо инициирует обновление содержимого панели. Элемент управления может быть внутри или вне <xref:System.Web.UI.UpdatePanel> элемента управления, которая определяет триггер.  
  
    -   <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> Свойству `true` и является дочерним элементом управления <xref:System.Web.UI.UpdatePanel> управления вызывает обратную передачу. Дочерний элемент управления вложенного <xref:System.Web.UI.UpdatePanel> обновление для внешнего управления не вызывает <xref:System.Web.UI.UpdatePanel> элемента управления, если оно явно определено как триггер.  
  
   
  
## Examples  
 В следующем примере показано, как использовать свойство <xref:System.Web.UI.UpdatePanel.UpdateMode%2A>. В примере объявляются два <xref:System.Web.UI.UpdatePanel> элементов управления. В первой панели <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> свойству <xref:System.Web.UI.UpdatePanelUpdateMode.Conditional>. Второй панели <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> равно <xref:System.Web.UI.UpdatePanelUpdateMode.Always>. Кнопка за пределами обеих панелей зарегистрирован как элемент управления асинхронной обратной передачи, вызвав <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> метод <xref:System.Web.UI.ScriptManager> элемента управления. На кнопке панели `Click` обработчик событий <xref:System.Web.UI.UpdatePanel.Update%2A> вызывается метод первой панели, если более чем пяти секунд, прошедших с момента его последнего обновления. В этом сценарии содержимое панели обновляется только в том случае, если последнего обновления панели прошло более 5 секунд. Содержимое второй панели обновляется всегда.  
  
 [!code-aspx-csharp[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/csharp/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/CS/UpdatePanelUpdateModeCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.UpdatePanel.UpdateMode#1](~/samples/snippets/visualbasic/VS_Snippets_Atlas/System.Web.UI.UpdatePanel.UpdateMode/VB/UpdatePanelUpdateModeVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Указанный тип не является одним из значений <see cref="T:System.Web.UI.UpdatePanelUpdateMode" />.</exception>
        <altmember cref="T:System.Web.UI.UpdatePanelUpdateMode" />
        <altmember cref="M:System.Web.UI.UpdatePanel.Update" />
        <altmember cref="P:System.Web.UI.UpdatePanel.ChildrenAsTriggers" />
      </Docs>
    </Member>
  </Members>
</Type>