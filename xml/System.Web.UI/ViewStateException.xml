<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ViewStateException.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a96557c46b0c067684a9680f548bb1037bc62c76.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a96557c46b0c067684a9680f548bb1037bc62c76</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.ViewStateException">
          <source>Represents the exception that is thrown when the view state cannot be loaded or validated.</source>
          <target state="translated">Представляет исключение, которое вызывается при невозможности загрузки или проверки состояния представления.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Web.UI.ViewStateException">
          <source>This class cannot be inherited.</source>
          <target state="translated">Этот класс не наследуется.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>If an exception occurs when the page loads the view-state information, the page creates a <ph id="ph1">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object and passes it as an inner exception within an <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> exception.</source>
          <target state="translated">Если возникает исключение при загрузке сведений состояния просмотра страницы, страница создает <ph id="ph1">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> объекта и передает его в качестве внутреннего исключения в <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> исключение.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> exception is re-thrown to be handled by the application.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> Повторно вызывается для обработки приложением.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> class stores information about the exception in the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException.Message%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> Класс хранит сведения об исключении в <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException.Message%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>If the request has permission to access the <ph id="ph1">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> property, then the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException.Message%2A&gt;</ph> property contains the values returned from the <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException.RemoteAddress%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.ViewStateException.RemotePort%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Web.UI.ViewStateException.UserAgent%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Web.UI.ViewStateException.PersistedState%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Web.UI.ViewStateException.Referer%2A&gt;</ph>, and <ph id="ph8">&lt;xref:System.Web.UI.ViewStateException.Path%2A&gt;</ph> properties; otherwise, the <ph id="ph9">&lt;xref:System.Web.UI.ViewStateException.Message%2A&gt;</ph> property contains a generic view-state error message.</source>
          <target state="translated">Если в запросе есть разрешение на доступ к <ph id="ph1">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> свойства, а затем <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException.Message%2A&gt;</ph> свойство содержит значения, возвращенные <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException.RemoteAddress%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.ViewStateException.RemotePort%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Web.UI.ViewStateException.UserAgent%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Web.UI.ViewStateException.PersistedState%2A&gt;</ph>, <ph id="ph7">&lt;xref:System.Web.UI.ViewStateException.Referer%2A&gt;</ph>, и <ph id="ph8">&lt;xref:System.Web.UI.ViewStateException.Path%2A&gt;</ph> Свойства; в противном случае <ph id="ph9">&lt;xref:System.Web.UI.ViewStateException.Message%2A&gt;</ph> свойство содержит сообщение об ошибке общего состояния представления.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>A view-state exception can be the result of a Message Authentication Codes (MAC) validation error.</source>
          <target state="translated">Исключение состояния представления может быть результатом ошибки проверки кодов проверки подлинности сообщения (MAC).</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>If the page attribute <ph id="ph1">`enableViewStateMac`</ph> is set to <ph id="ph2">`true`</ph>, view-state information is encoded with a MAC identifier.</source>
          <target state="translated">Если атрибут страницы <ph id="ph1">`enableViewStateMac`</ph> равно <ph id="ph2">`true`</ph>, сведения о состоянии представления кодируются с идентификатором MAC.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>When the view-state information is posted back to the server, the page verifies the encoding to ensure that it has not been altered by the user.</source>
          <target state="translated">При отправке сведений о состоянии представления обратно серверу страница проверяет кодировку, чтобы убедиться, что он не был изменен пользователем.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>If the page cannot validate the MAC encoding on the view-state information, it will throw an <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> exception with the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object as an inner exception.</source>
          <target state="translated">Если страница не может проверить MAC кодирования информации состояния представления, он будет вызывать <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> исключения с <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> объект в качестве внутреннего исключения.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>For MAC validation to succeed, the view-state information must be hashed by the same key when it is sent and received.</source>
          <target state="translated">MAC чтобы проверка прошла успешно сведения о состоянии представления необходимо выполнить хэширование тем же ключом, при отправки и получения.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>Within a Web farm, the machine key on each server should be set to a common key.</source>
          <target state="translated">В веб-ферме ключ компьютера на каждом сервере должно быть присвоено значение общего ключа.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> collection of property settings.</source>
          <target state="translated">В следующем примере кода показано, как реализовать метод, который выполняет десериализацию строки в кодировке base64 и возвращает <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> набор свойств.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph> method can throw an <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> exception that contains a <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object as an inner exception.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph> Метод может вызвать исключение <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> исключение, которое содержит <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> объект в качестве внутреннего исключения.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.ViewStateException">
          <source>The example shows how you can catch an <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> exception and retrieve the properties from the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object.</source>
          <target state="translated">В примере показано, как может перехватывать <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> исключение и извлечения свойств из <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ViewStateException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.ViewStateException" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Web.UI.ViewStateException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ViewStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">Объект, содержащий сериализованные данные объекта.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ViewStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The contextual information about the source or destination.</source>
          <target state="translated">Контекстные сведения об источнике или назначении.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Web.UI.ViewStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.ViewStateException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Web.UI.ViewStateException" /&gt;</ph> с сериализованными данными.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Web.UI.ViewStateException.IsConnected">
          <source>Gets a value indicating whether the client is currently connected to the server.</source>
          <target state="translated">Возвращает значение, указывающее подключен ли клиент к серверу в данный момент.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.IsConnected">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the client is still connected to the server; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, если клиент подключен в данный момент; в противном случае — <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.IsConnected">
          <source>This property returns the same value as calling the <ph id="ph1">&lt;xref:System.Web.HttpResponse.IsClientConnected%2A&gt;</ph> property.</source>
          <target state="translated">Это свойство возвращает то же значение, что и вызов метода <ph id="ph1">&lt;xref:System.Web.HttpResponse.IsClientConnected%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.IsConnected">
          <source>The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> collection of property settings.</source>
          <target state="translated">В следующем примере кода показано, как реализовать метод, который выполняет десериализацию строки в кодировке base64 и возвращает <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> набор свойств.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.IsConnected">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph> method can throw an <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> exception that contains a <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object as an inner exception.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph> Метод может вызвать исключение <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> исключение, которое содержит <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> объект в качестве внутреннего исключения.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.IsConnected">
          <source>The example shows how you can catch an <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> exception and retrieve the properties from the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object.</source>
          <target state="translated">В примере показано, как может перехватывать <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> исключение и извлечения свойств из <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="P:System.Web.UI.ViewStateException.Message">
          <source>Gets debugging information about the HTTP request that resulted in a view-state exception.</source>
          <target state="translated">Возвращает отладочную информацию о HTTP-запросе, вызвавшем исключение состояния представления.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Message">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the formatted message with information about the exception.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> содержит отформатированное сообщение со сведениями об исключении.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Message">
          <source>If the request does not have permission to access the server variables, then this property returns a generic view-state error message.</source>
          <target state="translated">Если запрос не имеет разрешения на доступ к переменных сервера, это свойство возвращает сообщение об ошибке общего состояния представления.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Message">
          <source>If the request does have permission to access server variables, the <ph id="ph1">&lt;xref:System.Web.UI.ViewStateException.Message%2A&gt;</ph> property contains the values returned from the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException.RemoteAddress%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException.RemotePort%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.ViewStateException.UserAgent%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Web.UI.ViewStateException.PersistedState%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Web.UI.ViewStateException.Referer%2A&gt;</ph>, and <ph id="ph7">&lt;xref:System.Web.UI.ViewStateException.Path%2A&gt;</ph> properties.</source>
          <target state="translated">Если запрос имеет разрешение на доступ к переменным сервера <ph id="ph1">&lt;xref:System.Web.UI.ViewStateException.Message%2A&gt;</ph> свойство содержит значения, возвращенные <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException.RemoteAddress%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException.RemotePort%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Web.UI.ViewStateException.UserAgent%2A&gt;</ph>, <ph id="ph5">&lt;xref:System.Web.UI.ViewStateException.PersistedState%2A&gt;</ph>, <ph id="ph6">&lt;xref:System.Web.UI.ViewStateException.Referer%2A&gt;</ph>, и <ph id="ph7">&lt;xref:System.Web.UI.ViewStateException.Path%2A&gt;</ph> свойства.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="P:System.Web.UI.ViewStateException.Path">
          <source>Gets the path of the HTTP request that resulted in a view-state exception.</source>
          <target state="translated">Возвращает путь HTTP-запроса, вызвавшего исключение состояния представления.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Path">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the path from the request.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> содержит путь из запроса.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Path">
          <source>This property returns the same value as the <ph id="ph1">`PATH_INFO`</ph> variable in the <ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> property.</source>
          <target state="translated">Это свойство возвращает то же значение, что <ph id="ph1">`PATH_INFO`</ph> переменных в <ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Path">
          <source>It returns the portion of the path after the host name.</source>
          <target state="translated">Возвращает часть пути после имени узла.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Path">
          <source>For example, in the URL <ph id="ph1">http://www.contoso.com/virdir/page.html</ph>, <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException.Path%2A&gt;</ph> would return /virdir/page.html.</source>
          <target state="translated">Например, в URL-адрес <ph id="ph1">http://www.contoso.com/virdir/page.html</ph>, <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException.Path%2A&gt;</ph> вернет /virdir/page.html.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Path">
          <source>The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> collection of property settings.</source>
          <target state="translated">В следующем примере кода показано, как реализовать метод, который выполняет десериализацию строки в кодировке base64 и возвращает <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> набор свойств.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Path">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph> method can throw an <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> exception that contains a <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object as an inner exception.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph> Метод может вызвать исключение <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> исключение, которое содержит <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> объект в качестве внутреннего исключения.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Path">
          <source>The example shows how you can catch an <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> exception and retrieve the properties from the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object.</source>
          <target state="translated">В примере показано, как может перехватывать <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> исключение и извлечения свойств из <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Web.UI.ViewStateException.PersistedState">
          <source>Gets the contents of the view-state string that, when read, caused the view-state exception.</source>
          <target state="translated">Возвращает содержимое строки состояния представления, чтение которой вызвало исключение состояния представления.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.PersistedState">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the view-state values that caused the view-state exception.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> содержит значения состояния представления, вызвавшие исключение состояния представления.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="P:System.Web.UI.ViewStateException.Referer">
          <source>Gets the URL of the page that linked to the page where the view-state exception occurred.</source>
          <target state="translated">Возвращает URL-адрес страницы, связанной со страницей, в которой произошло исключение состояния представления.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Referer">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the HTTP referrer.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> содержит HTTP-источник ссылок.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Referer">
          <source>This property returns the same value as the <ph id="ph1">`HTTP_REFERER`</ph> variable in the <ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> property.</source>
          <target state="translated">Это свойство возвращает то же значение, что <ph id="ph1">`HTTP_REFERER`</ph> переменных в <ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Referer">
          <source>The value is an empty string ("") if no previous request linked to the page.</source>
          <target state="translated">Значение является пустой строкой ("»), если нет предыдущего запроса связанный со страницей.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Referer">
          <source>The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> collection of property settings.</source>
          <target state="translated">В следующем примере кода показано, как реализовать метод, который выполняет десериализацию строки в кодировке base64 и возвращает <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> набор свойств.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Referer">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph> method can throw an <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> exception that contains a <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object as an inner exception.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph> Метод может вызвать исключение <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> исключение, которое содержит <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> объект в качестве внутреннего исключения.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.Referer">
          <source>The example shows how you can catch an <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> exception and retrieve the properties from the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object.</source>
          <target state="translated">В примере показано, как может перехватывать <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> исключение и извлечения свойств из <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="P:System.Web.UI.ViewStateException.RemoteAddress">
          <source>Gets the IP address of the HTTP request that resulted in a view-state exception.</source>
          <target state="translated">Возвращает IP-адрес HTTP-запроса, вызвавшего исключение состояния представления.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.RemoteAddress">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the remote IP address of the client.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> содержит IP-адрес сайта удаленного клиента.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.RemoteAddress">
          <source>This property returns the same value as the <ph id="ph1">`REMOTE_ADDR`</ph> variable in the <ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> property.</source>
          <target state="translated">Это свойство возвращает то же значение, что <ph id="ph1">`REMOTE_ADDR`</ph> переменных в <ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.Web.UI.ViewStateException.RemotePort">
          <source>Gets the port number of the HTTP request that resulted in a view-state exception.</source>
          <target state="translated">Возвращает номер порта HTTP-запроса, вызвавшего исключение состояния представления.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.RemotePort">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the remote port number.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> содержит номер удаленного порта.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.RemotePort">
          <source>This property returns the same value as the <ph id="ph1">`REMOTE_PORT`</ph> variable in the <ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> property.</source>
          <target state="translated">Это свойство возвращает то же значение, что <ph id="ph1">`REMOTE_PORT`</ph> переменных в <ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="P:System.Web.UI.ViewStateException.UserAgent">
          <source>Gets the browser type of the HTTP request that resulted in a view-state exception.</source>
          <target state="translated">Возвращает тип браузера HTTP-запроса, вызвавшего исключение состояния представления.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.UserAgent">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> containing the user agent, which is typically the browser type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> содержит сведения об агенте пользователя, который обычно является типом браузера.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.UserAgent">
          <source>This property returns the same value as the <ph id="ph1">`HTTP_USER_AGENT`</ph> variable in the <ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> property.</source>
          <target state="translated">Это свойство возвращает то же значение, что <ph id="ph1">`HTTP_USER_AGENT`</ph> переменных в <ph id="ph2">&lt;xref:System.Web.HttpRequest.ServerVariables%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.UserAgent">
          <source>The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> collection of property settings.</source>
          <target state="translated">В следующем примере кода показано, как реализовать метод, который выполняет десериализацию строки в кодировке base64 и возвращает <ph id="ph1">&lt;xref:System.Collections.ICollection&gt;</ph> набор свойств.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.UserAgent">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph> method can throw an <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> exception that contains a <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object as an inner exception.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A&gt;</ph> Метод может вызвать исключение <ph id="ph2">&lt;xref:System.Web.HttpException&gt;</ph> исключение, которое содержит <ph id="ph3">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> объект в качестве внутреннего исключения.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.ViewStateException.UserAgent">
          <source>The example shows how you can catch an <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> exception and retrieve the properties from the <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> object.</source>
          <target state="translated">В примере показано, как может перехватывать <ph id="ph1">&lt;xref:System.Web.HttpException&gt;</ph> исключение и извлечения свойств из <ph id="ph2">&lt;xref:System.Web.UI.ViewStateException&gt;</ph> объекта.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>