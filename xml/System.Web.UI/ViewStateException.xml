<Type Name="ViewStateException" FullName="System.Web.UI.ViewStateException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a96557c46b0c067684a9680f548bb1037bc62c76" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30609468" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ViewStateException : Exception" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ViewStateException extends System.Exception implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ViewStateException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ViewStateException&#xA;Inherits Exception" />
  <TypeSignature Language="C++ CLI" Value="public ref class ViewStateException sealed : Exception" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет исключение, которое вызывается при невозможности загрузки или проверки состояния представления. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если возникает исключение при загрузке сведений состояния просмотра страницы, страница создает <xref:System.Web.UI.ViewStateException> объекта и передает его в качестве внутреннего исключения в <xref:System.Web.HttpException> исключение. <xref:System.Web.HttpException> Повторно вызывается для обработки приложением.  
  
 <xref:System.Web.UI.ViewStateException> Класс хранит сведения об исключении в <xref:System.Web.UI.ViewStateException.Message%2A> свойство. Если в запросе есть разрешение на доступ к <xref:System.Web.HttpRequest.ServerVariables%2A> свойства, а затем <xref:System.Web.UI.ViewStateException.Message%2A> свойство содержит значения, возвращенные <xref:System.Web.UI.ViewStateException.RemoteAddress%2A>, <xref:System.Web.UI.ViewStateException.RemotePort%2A>, <xref:System.Web.UI.ViewStateException.UserAgent%2A>, <xref:System.Web.UI.ViewStateException.PersistedState%2A>, <xref:System.Web.UI.ViewStateException.Referer%2A>, и <xref:System.Web.UI.ViewStateException.Path%2A> Свойства; в противном случае <xref:System.Web.UI.ViewStateException.Message%2A> свойство содержит сообщение об ошибке общего состояния представления.  
  
 Исключение состояния представления может быть результатом ошибки проверки кодов проверки подлинности сообщения (MAC). Если атрибут страницы `enableViewStateMac` равно `true`, сведения о состоянии представления кодируются с идентификатором MAC. При отправке сведений о состоянии представления обратно серверу страница проверяет кодировку, чтобы убедиться, что он не был изменен пользователем. Если страница не может проверить MAC кодирования информации состояния представления, он будет вызывать <xref:System.Web.HttpException> исключения с <xref:System.Web.UI.ViewStateException> объект в качестве внутреннего исключения.  
  
 MAC чтобы проверка прошла успешно сведения о состоянии представления необходимо выполнить хэширование тем же ключом, при отправки и получения. В веб-ферме ключ компьютера на каждом сервере должно быть присвоено значение общего ключа.  
  
   
  
## Examples  
 В следующем примере кода показано, как реализовать метод, который выполняет десериализацию строки в кодировке base64 и возвращает <xref:System.Collections.ICollection> набор свойств. <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> Метод может вызвать исключение <xref:System.Web.HttpException> исключение, которое содержит <xref:System.Web.UI.ViewStateException> объект в качестве внутреннего исключения. В примере показано, как может перехватывать <xref:System.Web.HttpException> исключение и извлечения свойств из <xref:System.Web.UI.ViewStateException> объекта.  
  
 [!code-csharp[System.Web.UI.ViewStateException#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ViewStateException/CS/Class1.cs#2)]
 [!code-vb[System.Web.UI.ViewStateException#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ViewStateException/VB/Class1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Configuration.MachineKeySection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ViewStateException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ViewStateException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ViewStateException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.ViewStateException" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Configuration.MachineKeySection" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ViewStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Объект, содержащий сериализованные данные объекта.</param>
        <param name="context">Контекстные сведения об источнике или назначении.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.ViewStateException" /> с сериализованными данными.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConnected">
      <MemberSignature Language="C#" Value="public bool IsConnected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConnected" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.IsConnected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsConnected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsConnected { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее подключен ли клиент к серверу в данный момент.</summary>
        <value>
          <see langword="true" />, если клиент подключен в данный момент; в противном случае — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство возвращает то же значение, что и вызов метода <xref:System.Web.HttpResponse.IsClientConnected%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода показано, как реализовать метод, который выполняет десериализацию строки в кодировке base64 и возвращает <xref:System.Collections.ICollection> набор свойств. <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> Метод может вызвать исключение <xref:System.Web.HttpException> исключение, которое содержит <xref:System.Web.UI.ViewStateException> объект в качестве внутреннего исключения. В примере показано, как может перехватывать <xref:System.Web.HttpException> исключение и извлечения свойств из <xref:System.Web.UI.ViewStateException> объекта.  
  
 [!code-csharp[System.Web.UI.ViewStateException#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ViewStateException/CS/Class1.cs#2)]
 [!code-vb[System.Web.UI.ViewStateException#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ViewStateException/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpResponse" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public override string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.Message" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Message { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает отладочную информацию о HTTP-запросе, вызвавшем исключение состояния представления.</summary>
        <value>
          <see cref="T:System.String" /> содержит отформатированное сообщение со сведениями об исключении.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если запрос не имеет разрешения на доступ к переменных сервера, это свойство возвращает сообщение об ошибке общего состояния представления. Если запрос имеет разрешение на доступ к переменным сервера <xref:System.Web.UI.ViewStateException.Message%2A> свойство содержит значения, возвращенные <xref:System.Web.UI.ViewStateException.RemoteAddress%2A>, <xref:System.Web.UI.ViewStateException.RemotePort%2A>, <xref:System.Web.UI.ViewStateException.UserAgent%2A>, <xref:System.Web.UI.ViewStateException.PersistedState%2A>, <xref:System.Web.UI.ViewStateException.Referer%2A>, и <xref:System.Web.UI.ViewStateException.Path%2A> свойства.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает путь HTTP-запроса, вызвавшего исключение состояния представления.</summary>
        <value>
          <see cref="T:System.String" /> содержит путь из запроса.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство возвращает то же значение, что `PATH_INFO` переменных в <xref:System.Web.HttpRequest.ServerVariables%2A> свойство. Возвращает часть пути после имени узла. Например, в URL-адрес http://www.contoso.com/virdir/page.html, <xref:System.Web.UI.ViewStateException.Path%2A> вернет /virdir/page.html.  
  
   
  
## Examples  
 В следующем примере кода показано, как реализовать метод, который выполняет десериализацию строки в кодировке base64 и возвращает <xref:System.Collections.ICollection> набор свойств. <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> Метод может вызвать исключение <xref:System.Web.HttpException> исключение, которое содержит <xref:System.Web.UI.ViewStateException> объект в качестве внутреннего исключения. В примере показано, как может перехватывать <xref:System.Web.HttpException> исключение и извлечения свойств из <xref:System.Web.UI.ViewStateException> объекта.  
  
 [!code-csharp[System.Web.UI.ViewStateException#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ViewStateException/CS/Class1.cs#2)]
 [!code-vb[System.Web.UI.ViewStateException#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ViewStateException/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistedState">
      <MemberSignature Language="C#" Value="public string PersistedState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PersistedState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.PersistedState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PersistedState As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PersistedState { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает содержимое строки состояния представления, чтение которой вызвало исключение состояния представления.</summary>
        <value>
          <see cref="T:System.String" /> содержит значения состояния представления, вызвавшие исключение состояния представления.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Referer">
      <MemberSignature Language="C#" Value="public string Referer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Referer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.Referer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Referer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Referer { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает URL-адрес страницы, связанной со страницей, в которой произошло исключение состояния представления.</summary>
        <value>
          <see cref="T:System.String" /> содержит HTTP-источник ссылок.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство возвращает то же значение, что `HTTP_REFERER` переменных в <xref:System.Web.HttpRequest.ServerVariables%2A> свойство. Значение является пустой строкой ("»), если нет предыдущего запроса связанный со страницей.  
  
   
  
## Examples  
 В следующем примере кода показано, как реализовать метод, который выполняет десериализацию строки в кодировке base64 и возвращает <xref:System.Collections.ICollection> набор свойств. <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> Метод может вызвать исключение <xref:System.Web.HttpException> исключение, которое содержит <xref:System.Web.UI.ViewStateException> объект в качестве внутреннего исключения. В примере показано, как может перехватывать <xref:System.Web.HttpException> исключение и извлечения свойств из <xref:System.Web.UI.ViewStateException> объекта.  
  
 [!code-csharp[System.Web.UI.ViewStateException#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ViewStateException/CS/Class1.cs#2)]
 [!code-vb[System.Web.UI.ViewStateException#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ViewStateException/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteAddress">
      <MemberSignature Language="C#" Value="public string RemoteAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RemoteAddress" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.RemoteAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RemoteAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RemoteAddress { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает IP-адрес HTTP-запроса, вызвавшего исключение состояния представления.</summary>
        <value>
          <see cref="T:System.String" /> содержит IP-адрес сайта удаленного клиента.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство возвращает то же значение, что `REMOTE_ADDR` переменных в <xref:System.Web.HttpRequest.ServerVariables%2A> свойство.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemotePort">
      <MemberSignature Language="C#" Value="public string RemotePort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RemotePort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.RemotePort" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RemotePort As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RemotePort { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает номер порта HTTP-запроса, вызвавшего исключение состояния представления.</summary>
        <value>
          <see cref="T:System.String" /> содержит номер удаленного порта.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство возвращает то же значение, что `REMOTE_PORT` переменных в <xref:System.Web.HttpRequest.ServerVariables%2A> свойство.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserAgent">
      <MemberSignature Language="C#" Value="public string UserAgent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserAgent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.UserAgent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserAgent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserAgent { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает тип браузера HTTP-запроса, вызвавшего исключение состояния представления.</summary>
        <value>
          <see cref="T:System.String" /> содержит сведения об агенте пользователя, который обычно является типом браузера.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство возвращает то же значение, что `HTTP_USER_AGENT` переменных в <xref:System.Web.HttpRequest.ServerVariables%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода показано, как реализовать метод, который выполняет десериализацию строки в кодировке base64 и возвращает <xref:System.Collections.ICollection> набор свойств. <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> Метод может вызвать исключение <xref:System.Web.HttpException> исключение, которое содержит <xref:System.Web.UI.ViewStateException> объект в качестве внутреннего исключения. В примере показано, как может перехватывать <xref:System.Web.HttpException> исключение и извлечения свойств из <xref:System.Web.UI.ViewStateException> объекта.  
  
 [!code-csharp[System.Web.UI.ViewStateException#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ViewStateException/CS/Class1.cs#2)]
 [!code-vb[System.Web.UI.ViewStateException#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ViewStateException/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>