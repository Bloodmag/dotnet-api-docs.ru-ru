<Type Name="ViewStateException" FullName="System.Web.UI.ViewStateException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9112f3522e33130b35a0c92fd086e74cb8fcfc6e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36375413" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ViewStateException : Exception" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit ViewStateException extends System.Exception implements class System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.ViewStateException" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ViewStateException&#xA;Inherits Exception" />
  <TypeSignature Language="C++ CLI" Value="public ref class ViewStateException sealed : Exception" />
  <TypeSignature Language="F#" Value="type ViewStateException = class&#xA;    inherit Exception&#xA;    interface ISerializable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Exception</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="dc5ef-101">Представляет исключение, которое вызывается при невозможности загрузки или проверки состояния представления.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dc5ef-101">Represents the exception that is thrown when the view state cannot be loaded or validated.</span>
      </span>
      <span data-ttu-id="dc5ef-102">Этот класс не наследуется.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dc5ef-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc5ef-103">Если возникает исключение при загрузке сведений состояния просмотра страницы, страница создает <xref:System.Web.UI.ViewStateException> объекта и передает его в качестве внутреннего исключения в <xref:System.Web.HttpException> исключение.</span><span class="sxs-lookup"><span data-stu-id="dc5ef-103">If an exception occurs when the page loads the view-state information, the page creates a <xref:System.Web.UI.ViewStateException> object and passes it as an inner exception within an <xref:System.Web.HttpException> exception.</span></span> <span data-ttu-id="dc5ef-104"><xref:System.Web.HttpException> Повторно вызывается для обработки приложением.</span><span class="sxs-lookup"><span data-stu-id="dc5ef-104">The <xref:System.Web.HttpException> exception is re-thrown to be handled by the application.</span></span>  
  
 <span data-ttu-id="dc5ef-105"><xref:System.Web.UI.ViewStateException> Класс хранит сведения об исключении в <xref:System.Web.UI.ViewStateException.Message%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="dc5ef-105">The <xref:System.Web.UI.ViewStateException> class stores information about the exception in the <xref:System.Web.UI.ViewStateException.Message%2A> property.</span></span> <span data-ttu-id="dc5ef-106">Если в запросе есть разрешение на доступ к <xref:System.Web.HttpRequest.ServerVariables%2A> свойства, а затем <xref:System.Web.UI.ViewStateException.Message%2A> свойство содержит значения, возвращенные <xref:System.Web.UI.ViewStateException.RemoteAddress%2A>, <xref:System.Web.UI.ViewStateException.RemotePort%2A>, <xref:System.Web.UI.ViewStateException.UserAgent%2A>, <xref:System.Web.UI.ViewStateException.PersistedState%2A>, <xref:System.Web.UI.ViewStateException.Referer%2A>, и <xref:System.Web.UI.ViewStateException.Path%2A> Свойства; в противном случае <xref:System.Web.UI.ViewStateException.Message%2A> свойство содержит сообщение об ошибке общего состояния представления.</span><span class="sxs-lookup"><span data-stu-id="dc5ef-106">If the request has permission to access the <xref:System.Web.HttpRequest.ServerVariables%2A> property, then the <xref:System.Web.UI.ViewStateException.Message%2A> property contains the values returned from the <xref:System.Web.UI.ViewStateException.RemoteAddress%2A>, <xref:System.Web.UI.ViewStateException.RemotePort%2A>, <xref:System.Web.UI.ViewStateException.UserAgent%2A>, <xref:System.Web.UI.ViewStateException.PersistedState%2A>, <xref:System.Web.UI.ViewStateException.Referer%2A>, and <xref:System.Web.UI.ViewStateException.Path%2A> properties; otherwise, the <xref:System.Web.UI.ViewStateException.Message%2A> property contains a generic view-state error message.</span></span>  
  
 <span data-ttu-id="dc5ef-107">Исключение состояния представления может быть результатом ошибки проверки кодов проверки подлинности сообщения (MAC).</span><span class="sxs-lookup"><span data-stu-id="dc5ef-107">A view-state exception can be the result of a Message Authentication Codes (MAC) validation error.</span></span> <span data-ttu-id="dc5ef-108">Если атрибут страницы `enableViewStateMac` равно `true`, сведения о состоянии представления кодируются с идентификатором MAC.</span><span class="sxs-lookup"><span data-stu-id="dc5ef-108">If the page attribute `enableViewStateMac` is set to `true`, view-state information is encoded with a MAC identifier.</span></span> <span data-ttu-id="dc5ef-109">При отправке сведений о состоянии представления обратно серверу страница проверяет кодировку, чтобы убедиться, что он не был изменен пользователем.</span><span class="sxs-lookup"><span data-stu-id="dc5ef-109">When the view-state information is posted back to the server, the page verifies the encoding to ensure that it has not been altered by the user.</span></span> <span data-ttu-id="dc5ef-110">Если страница не может проверить MAC кодирования информации состояния представления, он будет вызывать <xref:System.Web.HttpException> исключения с <xref:System.Web.UI.ViewStateException> объект в качестве внутреннего исключения.</span><span class="sxs-lookup"><span data-stu-id="dc5ef-110">If the page cannot validate the MAC encoding on the view-state information, it will throw an <xref:System.Web.HttpException> exception with the <xref:System.Web.UI.ViewStateException> object as an inner exception.</span></span>  
  
 <span data-ttu-id="dc5ef-111">MAC чтобы проверка прошла успешно сведения о состоянии представления необходимо выполнить хэширование тем же ключом, при отправки и получения.</span><span class="sxs-lookup"><span data-stu-id="dc5ef-111">For MAC validation to succeed, the view-state information must be hashed by the same key when it is sent and received.</span></span> <span data-ttu-id="dc5ef-112">В веб-ферме ключ компьютера на каждом сервере должно быть присвоено значение общего ключа.</span><span class="sxs-lookup"><span data-stu-id="dc5ef-112">Within a Web farm, the machine key on each server should be set to a common key.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc5ef-113">В следующем примере кода показано, как реализовать метод, который выполняет десериализацию строки в кодировке base64 и возвращает <xref:System.Collections.ICollection> набор свойств.</span><span class="sxs-lookup"><span data-stu-id="dc5ef-113">The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings.</span></span> <span data-ttu-id="dc5ef-114"><xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> Метод может вызвать исключение <xref:System.Web.HttpException> исключение, которое содержит <xref:System.Web.UI.ViewStateException> объект в качестве внутреннего исключения.</span><span class="sxs-lookup"><span data-stu-id="dc5ef-114">The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a <xref:System.Web.UI.ViewStateException> object as an inner exception.</span></span> <span data-ttu-id="dc5ef-115">В примере показано, как может перехватывать <xref:System.Web.HttpException> исключение и извлечения свойств из <xref:System.Web.UI.ViewStateException> объекта.</span><span class="sxs-lookup"><span data-stu-id="dc5ef-115">The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the <xref:System.Web.UI.ViewStateException> object.</span></span>  
  
 [!code-csharp[System.Web.UI.ViewStateException#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ViewStateException/CS/Class1.cs#2)]
 [!code-vb[System.Web.UI.ViewStateException#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ViewStateException/VB/Class1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Configuration.MachineKeySection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ViewStateException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ViewStateException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ViewStateException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dc5ef-116">Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.ViewStateException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc5ef-116">Initializes a new instance of the <see cref="T:System.Web.UI.ViewStateException" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Configuration.MachineKeySection" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.ViewStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="viewStateException.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="dc5ef-117">Объект, содержащий сериализованные данные объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc5ef-117">The object that holds the serialized object data.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="dc5ef-118">Контекстные сведения об источнике или назначении.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc5ef-118">The contextual information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dc5ef-119">Инициализирует новый экземпляр класса <see cref="T:System.Web.UI.ViewStateException" /> с сериализованными данными.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc5ef-119">Initializes a new instance of the <see cref="T:System.Web.UI.ViewStateException" /> class with serialized data.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConnected">
      <MemberSignature Language="C#" Value="public bool IsConnected { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConnected" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.IsConnected" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsConnected As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsConnected { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsConnected : bool" Usage="System.Web.UI.ViewStateException.IsConnected" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc5ef-120">Возвращает значение, указывающее подключен ли клиент к серверу в данный момент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc5ef-120">Gets a value indicating whether the client is currently connected to the server.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc5ef-121">
            <see langword="true" />, если клиент подключен в данный момент; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc5ef-121">
              <see langword="true" /> if the client is still connected to the server; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc5ef-122">Это свойство возвращает то же значение, что и вызов метода <xref:System.Web.HttpResponse.IsClientConnected%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="dc5ef-122">This property returns the same value as calling the <xref:System.Web.HttpResponse.IsClientConnected%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc5ef-123">В следующем примере кода показано, как реализовать метод, который выполняет десериализацию строки в кодировке base64 и возвращает <xref:System.Collections.ICollection> набор свойств.</span><span class="sxs-lookup"><span data-stu-id="dc5ef-123">The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings.</span></span> <span data-ttu-id="dc5ef-124"><xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> Метод может вызвать исключение <xref:System.Web.HttpException> исключение, которое содержит <xref:System.Web.UI.ViewStateException> объект в качестве внутреннего исключения.</span><span class="sxs-lookup"><span data-stu-id="dc5ef-124">The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a <xref:System.Web.UI.ViewStateException> object as an inner exception.</span></span> <span data-ttu-id="dc5ef-125">В примере показано, как может перехватывать <xref:System.Web.HttpException> исключение и извлечения свойств из <xref:System.Web.UI.ViewStateException> объекта.</span><span class="sxs-lookup"><span data-stu-id="dc5ef-125">The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the <xref:System.Web.UI.ViewStateException> object.</span></span>  
  
 [!code-csharp[System.Web.UI.ViewStateException#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ViewStateException/CS/Class1.cs#2)]
 [!code-vb[System.Web.UI.ViewStateException#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ViewStateException/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpResponse" />
      </Docs>
    </Member>
    <Member MemberName="Message">
      <MemberSignature Language="C#" Value="public override string Message { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Message" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.Message" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Message As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Message { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Message : string" Usage="System.Web.UI.ViewStateException.Message" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc5ef-126">Возвращает отладочную информацию о HTTP-запросе, вызвавшем исключение состояния представления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc5ef-126">Gets debugging information about the HTTP request that resulted in a view-state exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc5ef-127">
            <see cref="T:System.String" /> содержит отформатированное сообщение со сведениями об исключении.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc5ef-127">A <see cref="T:System.String" /> containing the formatted message with information about the exception.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc5ef-128">Если запрос не имеет разрешения на доступ к переменных сервера, это свойство возвращает сообщение об ошибке общего состояния представления.</span><span class="sxs-lookup"><span data-stu-id="dc5ef-128">If the request does not have permission to access the server variables, then this property returns a generic view-state error message.</span></span> <span data-ttu-id="dc5ef-129">Если запрос имеет разрешение на доступ к переменным сервера <xref:System.Web.UI.ViewStateException.Message%2A> свойство содержит значения, возвращенные <xref:System.Web.UI.ViewStateException.RemoteAddress%2A>, <xref:System.Web.UI.ViewStateException.RemotePort%2A>, <xref:System.Web.UI.ViewStateException.UserAgent%2A>, <xref:System.Web.UI.ViewStateException.PersistedState%2A>, <xref:System.Web.UI.ViewStateException.Referer%2A>, и <xref:System.Web.UI.ViewStateException.Path%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="dc5ef-129">If the request does have permission to access server variables, the <xref:System.Web.UI.ViewStateException.Message%2A> property contains the values returned from the <xref:System.Web.UI.ViewStateException.RemoteAddress%2A>, <xref:System.Web.UI.ViewStateException.RemotePort%2A>, <xref:System.Web.UI.ViewStateException.UserAgent%2A>, <xref:System.Web.UI.ViewStateException.PersistedState%2A>, <xref:System.Web.UI.ViewStateException.Referer%2A>, and <xref:System.Web.UI.ViewStateException.Path%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.Path" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Path : string" Usage="System.Web.UI.ViewStateException.Path" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc5ef-130">Возвращает путь HTTP-запроса, вызвавшего исключение состояния представления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc5ef-130">Gets the path of the HTTP request that resulted in a view-state exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc5ef-131">
            <see cref="T:System.String" /> содержит путь из запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc5ef-131">A <see cref="T:System.String" /> containing the path from the request.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc5ef-132">Это свойство возвращает то же значение, что `PATH_INFO` переменных в <xref:System.Web.HttpRequest.ServerVariables%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="dc5ef-132">This property returns the same value as the `PATH_INFO` variable in the <xref:System.Web.HttpRequest.ServerVariables%2A> property.</span></span> <span data-ttu-id="dc5ef-133">Возвращает часть пути после имени узла.</span><span class="sxs-lookup"><span data-stu-id="dc5ef-133">It returns the portion of the path after the host name.</span></span> <span data-ttu-id="dc5ef-134">Например, в URL-адрес http://www.contoso.com/virdir/page.html, <xref:System.Web.UI.ViewStateException.Path%2A> вернет /virdir/page.html.</span><span class="sxs-lookup"><span data-stu-id="dc5ef-134">For example, in the URL http://www.contoso.com/virdir/page.html, <xref:System.Web.UI.ViewStateException.Path%2A> would return /virdir/page.html.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc5ef-135">В следующем примере кода показано, как реализовать метод, который выполняет десериализацию строки в кодировке base64 и возвращает <xref:System.Collections.ICollection> набор свойств.</span><span class="sxs-lookup"><span data-stu-id="dc5ef-135">The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings.</span></span> <span data-ttu-id="dc5ef-136"><xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> Метод может вызвать исключение <xref:System.Web.HttpException> исключение, которое содержит <xref:System.Web.UI.ViewStateException> объект в качестве внутреннего исключения.</span><span class="sxs-lookup"><span data-stu-id="dc5ef-136">The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a <xref:System.Web.UI.ViewStateException> object as an inner exception.</span></span> <span data-ttu-id="dc5ef-137">В примере показано, как может перехватывать <xref:System.Web.HttpException> исключение и извлечения свойств из <xref:System.Web.UI.ViewStateException> объекта.</span><span class="sxs-lookup"><span data-stu-id="dc5ef-137">The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the <xref:System.Web.UI.ViewStateException> object.</span></span>  
  
 [!code-csharp[System.Web.UI.ViewStateException#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ViewStateException/CS/Class1.cs#2)]
 [!code-vb[System.Web.UI.ViewStateException#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ViewStateException/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PersistedState">
      <MemberSignature Language="C#" Value="public string PersistedState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PersistedState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.PersistedState" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PersistedState As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PersistedState { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PersistedState : string" Usage="System.Web.UI.ViewStateException.PersistedState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc5ef-138">Возвращает содержимое строки состояния представления, чтение которой вызвало исключение состояния представления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc5ef-138">Gets the contents of the view-state string that, when read, caused the view-state exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc5ef-139">
            <see cref="T:System.String" /> содержит значения состояния представления, вызвавшие исключение состояния представления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc5ef-139">A <see cref="T:System.String" /> containing the view-state values that caused the view-state exception.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Referer">
      <MemberSignature Language="C#" Value="public string Referer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Referer" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.Referer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Referer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Referer { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Referer : string" Usage="System.Web.UI.ViewStateException.Referer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc5ef-140">Возвращает URL-адрес страницы, связанной со страницей, в которой произошло исключение состояния представления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc5ef-140">Gets the URL of the page that linked to the page where the view-state exception occurred.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc5ef-141">
            <see cref="T:System.String" /> содержит HTTP-источник ссылок.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc5ef-141">A <see cref="T:System.String" /> containing the HTTP referrer.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc5ef-142">Это свойство возвращает то же значение, что `HTTP_REFERER` переменных в <xref:System.Web.HttpRequest.ServerVariables%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="dc5ef-142">This property returns the same value as the `HTTP_REFERER` variable in the <xref:System.Web.HttpRequest.ServerVariables%2A> property.</span></span> <span data-ttu-id="dc5ef-143">Значение является пустой строкой ("»), если нет предыдущего запроса связанный со страницей.</span><span class="sxs-lookup"><span data-stu-id="dc5ef-143">The value is an empty string ("") if no previous request linked to the page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc5ef-144">В следующем примере кода показано, как реализовать метод, который выполняет десериализацию строки в кодировке base64 и возвращает <xref:System.Collections.ICollection> набор свойств.</span><span class="sxs-lookup"><span data-stu-id="dc5ef-144">The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings.</span></span> <span data-ttu-id="dc5ef-145"><xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> Метод может вызвать исключение <xref:System.Web.HttpException> исключение, которое содержит <xref:System.Web.UI.ViewStateException> объект в качестве внутреннего исключения.</span><span class="sxs-lookup"><span data-stu-id="dc5ef-145">The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a <xref:System.Web.UI.ViewStateException> object as an inner exception.</span></span> <span data-ttu-id="dc5ef-146">В примере показано, как может перехватывать <xref:System.Web.HttpException> исключение и извлечения свойств из <xref:System.Web.UI.ViewStateException> объекта.</span><span class="sxs-lookup"><span data-stu-id="dc5ef-146">The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the <xref:System.Web.UI.ViewStateException> object.</span></span>  
  
 [!code-csharp[System.Web.UI.ViewStateException#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ViewStateException/CS/Class1.cs#2)]
 [!code-vb[System.Web.UI.ViewStateException#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ViewStateException/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoteAddress">
      <MemberSignature Language="C#" Value="public string RemoteAddress { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RemoteAddress" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.RemoteAddress" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RemoteAddress As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RemoteAddress { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemoteAddress : string" Usage="System.Web.UI.ViewStateException.RemoteAddress" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc5ef-147">Возвращает IP-адрес HTTP-запроса, вызвавшего исключение состояния представления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc5ef-147">Gets the IP address of the HTTP request that resulted in a view-state exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc5ef-148">
            <see cref="T:System.String" /> содержит IP-адрес сайта удаленного клиента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc5ef-148">A <see cref="T:System.String" /> containing the remote IP address of the client.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc5ef-149">Это свойство возвращает то же значение, что `REMOTE_ADDR` переменных в <xref:System.Web.HttpRequest.ServerVariables%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="dc5ef-149">This property returns the same value as the `REMOTE_ADDR` variable in the <xref:System.Web.HttpRequest.ServerVariables%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemotePort">
      <MemberSignature Language="C#" Value="public string RemotePort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RemotePort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.RemotePort" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RemotePort As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RemotePort { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RemotePort : string" Usage="System.Web.UI.ViewStateException.RemotePort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc5ef-150">Возвращает номер порта HTTP-запроса, вызвавшего исключение состояния представления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc5ef-150">Gets the port number of the HTTP request that resulted in a view-state exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc5ef-151">
            <see cref="T:System.String" /> содержит номер удаленного порта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc5ef-151">A <see cref="T:System.String" /> containing the remote port number.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc5ef-152">Это свойство возвращает то же значение, что `REMOTE_PORT` переменных в <xref:System.Web.HttpRequest.ServerVariables%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="dc5ef-152">This property returns the same value as the `REMOTE_PORT` variable in the <xref:System.Web.HttpRequest.ServerVariables%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UserAgent">
      <MemberSignature Language="C#" Value="public string UserAgent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UserAgent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.ViewStateException.UserAgent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UserAgent As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UserAgent { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UserAgent : string" Usage="System.Web.UI.ViewStateException.UserAgent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dc5ef-153">Возвращает тип браузера HTTP-запроса, вызвавшего исключение состояния представления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc5ef-153">Gets the browser type of the HTTP request that resulted in a view-state exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dc5ef-154">
            <see cref="T:System.String" /> содержит сведения об агенте пользователя, который обычно является типом браузера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dc5ef-154">A <see cref="T:System.String" /> containing the user agent, which is typically the browser type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dc5ef-155">Это свойство возвращает то же значение, что `HTTP_USER_AGENT` переменных в <xref:System.Web.HttpRequest.ServerVariables%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="dc5ef-155">This property returns the same value as the `HTTP_USER_AGENT` variable in the <xref:System.Web.HttpRequest.ServerVariables%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dc5ef-156">В следующем примере кода показано, как реализовать метод, который выполняет десериализацию строки в кодировке base64 и возвращает <xref:System.Collections.ICollection> набор свойств.</span><span class="sxs-lookup"><span data-stu-id="dc5ef-156">The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings.</span></span> <span data-ttu-id="dc5ef-157"><xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> Метод может вызвать исключение <xref:System.Web.HttpException> исключение, которое содержит <xref:System.Web.UI.ViewStateException> объект в качестве внутреннего исключения.</span><span class="sxs-lookup"><span data-stu-id="dc5ef-157">The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a <xref:System.Web.UI.ViewStateException> object as an inner exception.</span></span> <span data-ttu-id="dc5ef-158">В примере показано, как может перехватывать <xref:System.Web.HttpException> исключение и извлечения свойств из <xref:System.Web.UI.ViewStateException> объекта.</span><span class="sxs-lookup"><span data-stu-id="dc5ef-158">The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the <xref:System.Web.UI.ViewStateException> object.</span></span>  
  
 [!code-csharp[System.Web.UI.ViewStateException#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.ViewStateException/CS/Class1.cs#2)]
 [!code-vb[System.Web.UI.ViewStateException#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.ViewStateException/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>