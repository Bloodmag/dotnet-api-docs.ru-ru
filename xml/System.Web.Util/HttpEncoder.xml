<Type Name="HttpEncoder" FullName="System.Web.Util.HttpEncoder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4e35efb72622eb52376091974f022482dc3d28df" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30610068" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HttpEncoder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi HttpEncoder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Util.HttpEncoder" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpEncoder" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpEncoder" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="7471f-101">Предоставляет логику кодирования и декодирования.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7471f-101">Provides encoding and decoding logic.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7471f-102">Этот класс содержит логику, используемый методами в классах, таких как кодирования и декодирования <xref:System.Web.HttpUtility>, <xref:System.Web.HttpServerUtility>, и <xref:System.Net.HttpResponseHeader>.</span><span class="sxs-lookup"><span data-stu-id="7471f-102">The class contains encoding and decoding logic that is used by methods in classes such as <xref:System.Web.HttpUtility>, <xref:System.Web.HttpServerUtility>, and <xref:System.Net.HttpResponseHeader>.</span></span>  
  
 <span data-ttu-id="7471f-103">Можно наследовать от <xref:System.Web.Util.HttpEncoder> класса и переопределить его поведение для настройки по умолчанию кодирования и декодирования поведения ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="7471f-103">You can inherit from the <xref:System.Web.Util.HttpEncoder> class and override its behavior to customize the default encoding and decoding behavior of ASP.NET.</span></span> <span data-ttu-id="7471f-104">Затем установите <xref:System.Web.Configuration.HttpRuntimeSection.EncoderType%2A> свойство <xref:System.Web.Configuration.HttpRuntimeSection> класса, чтобы настроить пользовательский класс.</span><span class="sxs-lookup"><span data-stu-id="7471f-104">You then set the <xref:System.Web.Configuration.HttpRuntimeSection.EncoderType%2A> property of the <xref:System.Web.Configuration.HttpRuntimeSection> class to configure your custom class.</span></span>  
  
 <span data-ttu-id="7471f-105">Пользовательский класс для кодирования и декодирования, который является производным от <xref:System.Web.Util.HttpEncoder> можно переопределить встроенных ASP.NET кодирования и декодирования поведение или изменить только выбранные его аспекты.</span><span class="sxs-lookup"><span data-stu-id="7471f-105">A custom class for encoding and decoding that derives from <xref:System.Web.Util.HttpEncoder> can override the built-in ASP.NET encoding and decoding behavior or change only selected aspects of it.</span></span>  
  
 <span data-ttu-id="7471f-106">Можно настроить пользовательский тип кодировки для в ASP.NET, чтобы заменить или дополнить кодирования следующее поведение:</span><span class="sxs-lookup"><span data-stu-id="7471f-106">You can configure the custom encoding type for in ASP.NET to replace or supplement the following encoding behavior:</span></span>  
  
-   <span data-ttu-id="7471f-107">Кодировка HTML</span><span class="sxs-lookup"><span data-stu-id="7471f-107">HTML encoding</span></span>  
  
-   <span data-ttu-id="7471f-108">Кодировка атрибута HTML</span><span class="sxs-lookup"><span data-stu-id="7471f-108">HTML attribute encoding</span></span>  
  
-   <span data-ttu-id="7471f-109">Кодирование URL-адресов</span><span class="sxs-lookup"><span data-stu-id="7471f-109">URL encoding</span></span>  
  
-   <span data-ttu-id="7471f-110">Кодировка URL-путь</span><span class="sxs-lookup"><span data-stu-id="7471f-110">URL path encoding</span></span>  
  
-   <span data-ttu-id="7471f-111">Имя заголовка HTTP и заголовок значение кодировки</span><span class="sxs-lookup"><span data-stu-id="7471f-111">HTTP header name and header value encoding</span></span>  
  
 <span data-ttu-id="7471f-112">По умолчанию приложения ASP.NET настроены для использования <xref:System.Web.Security.AntiXss.AntiXssEncoder> типа для всех выходных кодировки.</span><span class="sxs-lookup"><span data-stu-id="7471f-112">By default, ASP.NET applications are configured to use the <xref:System.Web.Security.AntiXss.AntiXssEncoder> type for all output encoding.</span></span>  
  
 <span data-ttu-id="7471f-113">В следующем примере из показан файл Web.config уровня приложения как <xref:System.Web.Security.AntiXss.AntiXssEncoder> тип задается для приложения ASP.NET:</span><span class="sxs-lookup"><span data-stu-id="7471f-113">The following example from an application-level Web.config file shows how the <xref:System.Web.Security.AntiXss.AntiXssEncoder> type is set for an ASP.NET application:</span></span>  
  
 `<httpRuntime requestValidationMode="4.5" encoderType="System.Web.Security.AntiXss.AntiXssEncoder, System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"/>`  
  
 <span data-ttu-id="7471f-114">Параметр конфигурации в примере устанавливается <xref:System.Web.Security.AntiXss.AntiXssEncoder> класса для выполнения всех выходных данных кодировку в приложении.</span><span class="sxs-lookup"><span data-stu-id="7471f-114">The configuration setting in the example sets the <xref:System.Web.Security.AntiXss.AntiXssEncoder> class to perform all output encoding in the application.</span></span> <span data-ttu-id="7471f-115">Дополнительные сведения см. в разделе <xref:System.Web.Security.AntiXss.AntiXssEncoder> Общие сведения о классе.</span><span class="sxs-lookup"><span data-stu-id="7471f-115">For more information, see the <xref:System.Web.Security.AntiXss.AntiXssEncoder> class overview.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>
        <span data-ttu-id="7471f-116">При создании пользовательского кодировщика класса и переопределить базовые методы базового класса, производного декодера исключение может любой из переопределенных методов.</span>
        <span class="sxs-lookup">
          <span data-stu-id="7471f-116">When you create a custom encoder class and override the base methods of the base class, the derived encoder might throw an exception from any of the overridden methods.</span>
        </span>
        <span data-ttu-id="7471f-117">Однако в следующих случаях создания такого исключения может привести к непредвиденному поведению в ASP.NET:</span>
        <span class="sxs-lookup">
          <span data-stu-id="7471f-117">However, in the following cases throwing such an exception could lead to unexpected behavior in ASP.NET:</span>
        </span>  
  
-   <span data-ttu-id="7471f-118">При создании платформой ASP.NET страница ошибки, вызванные необрабатываемое исключение, вызванное исключение из пользовательского кодировщика, ASP.NET не пытается закодировать вывод сообщения об ошибке, вызывая пользовательский кодировщик.</span><span class="sxs-lookup"><span data-stu-id="7471f-118">If ASP.NET is rendering an error page that is caused by an unhandled exception that was thrown from a custom encoder, ASP.NET does not attempt to encode its error output by calling into the custom encoder.</span></span><span data-ttu-id="7471f-119">Это позволяет избежать ошибки рекурсивной.</span><span class="sxs-lookup"><span data-stu-id="7471f-119">This avoids recursive error conditions.</span></span>  
  
-   <span data-ttu-id="7471f-120">Когда ASP.NET отправляет заголовки HTTP для служб IIS, ASP.NET не имеет возможности для необработанных исключений.</span><span class="sxs-lookup"><span data-stu-id="7471f-120">When ASP.NET is sending HTTP headers to IIS, ASP.NET has no provision for unhandled exceptions.</span></span><span data-ttu-id="7471f-121">Таким образом будут отображаться стандартной страницы ошибок для ASP.NET (если параметры конфигурации позволяет эту страницу для отображения).</span><span class="sxs-lookup"><span data-stu-id="7471f-121">Therefore, the standard ASP.NET error page will be rendered (if configuration settings allows this page to be displayed).</span></span></para>
    </block>
    <altmember cref="T:System.Web.HttpUtility" />
    <altmember cref="T:System.Web.HttpServerUtility" />
    <altmember cref="T:System.Web.Configuration.HttpRuntimeSection" />
    <altmember cref="T:System.Web.Security.AntiXss.AntiXssEncoder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpEncoder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7471f-122">Инициализирует новый экземпляр класса <see cref="T:System.Web.Util.HttpEncoder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7471f-122">Initializes a new instance of the <see cref="T:System.Web.Util.HttpEncoder" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.Web.Util.HttpEncoder Current { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Util.HttpEncoder Current" />
      <MemberSignature Language="DocId" Value="P:System.Web.Util.HttpEncoder.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Current As HttpEncoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Util::HttpEncoder ^ Current { System::Web::Util::HttpEncoder ^ get(); void set(System::Web::Util::HttpEncoder ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Util.HttpEncoder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7471f-123">Получает или задает тип <see cref="T:System.Web.Util.HttpEncoder" />, который будет использован в приложении.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7471f-123">Gets or set the <see cref="T:System.Web.Util.HttpEncoder" /> type that will be used in an application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7471f-124">Ссылка на тип кодирования-декодирования, который будет использован.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7471f-124">A reference to the encoder/decoder type that will be used.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7471f-125">Если производный <xref:System.Web.Util.HttpEncoder> в файле конфигурации указан тип <xref:System.Web.Util.HttpEncoder.Current%2A> свойство возвращает ссылку на пользовательский тип.</span><span class="sxs-lookup"><span data-stu-id="7471f-125">If a derived <xref:System.Web.Util.HttpEncoder> type is specified in the configuration file, the <xref:System.Web.Util.HttpEncoder.Current%2A> property returns a reference to the custom type.</span></span> <span data-ttu-id="7471f-126">Тем не менее, если используется не пользовательский кодировщик, свойство возвращает ссылку на значение по умолчанию ASP.NET <xref:System.Web.Util.HttpEncoder> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="7471f-126">However, if no custom encoder is used, the property returns a reference to the default ASP.NET <xref:System.Web.Util.HttpEncoder> instance.</span></span>  
  
 <span data-ttu-id="7471f-127"><xref:System.Web.Util.HttpEncoder.Current%2A> Свойство не является потокобезопасным.</span><span class="sxs-lookup"><span data-stu-id="7471f-127">The <xref:System.Web.Util.HttpEncoder.Current%2A> property is not thread-safe.</span></span> <span data-ttu-id="7471f-128">Если установлено только в приложении `Application_Start` метода, так как `Application_Start` выполняется в одном потоке.</span><span class="sxs-lookup"><span data-stu-id="7471f-128">Set this property only in the application's `Application_Start` method, because `Application_Start` runs on a single thread.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7471f-129">Экземпляр кодировщика, назначаемый данному свойству, имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7471f-129">The encoder instance that is being assigned to this property is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Web.Util.HttpEncoder Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Util.HttpEncoder Default" />
      <MemberSignature Language="DocId" Value="P:System.Web.Util.HttpEncoder.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As HttpEncoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Util::HttpEncoder ^ Default { System::Web::Util::HttpEncoder ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Util.HttpEncoder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7471f-130">Получает ссылку на кодировщик ASP.NET по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7471f-130">Gets a reference to the default encoder for ASP.NET.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7471f-131">Ссылка на кодировщик по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7471f-131">A reference to the default encoder.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7471f-132">Распространенные проблемы кодирования, ASP.NET по умолчанию — <xref:System.Web.Util.HttpEncoder.UrlEncode%2A> поведение преобразует пробелы в символ «+».</span><span class="sxs-lookup"><span data-stu-id="7471f-132">A common encoding issue is that the default ASP.NET <xref:System.Web.Util.HttpEncoder.UrlEncode%2A> behavior converts spaces into the "+" character.</span></span> <span data-ttu-id="7471f-133">Исторически символ «+» был соглашение о Интернет для кодирования пробельные символы в URL-адрес в форме более удобной для чтения.</span><span class="sxs-lookup"><span data-stu-id="7471f-133">Historically, the "+" character has been an Internet convention for encoding space characters in a URL into a more human-readable manner.</span></span> <span data-ttu-id="7471f-134">Тем не менее, в соответствии со стандартами, пробел должен кодироваться как «% 20» и вместо как символ «+».</span><span class="sxs-lookup"><span data-stu-id="7471f-134">However, according to standards, the space character is supposed to be encoded as "%20" and instead of as the "+" character.</span></span> <span data-ttu-id="7471f-135">ASP.NET позволяет реализовать более совместимый кодирования алгоритм стандартов.</span><span class="sxs-lookup"><span data-stu-id="7471f-135">ASP.NET lets you implement a more standards compliant encoding algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderNameValueEncode">
      <MemberSignature Language="C#" Value="protected internal virtual void HeaderNameValueEncode (string headerName, string headerValue, out string encodedHeaderName, out string encodedHeaderValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void HeaderNameValueEncode(string headerName, string headerValue, [out] string&amp; encodedHeaderName, [out] string&amp; encodedHeaderValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.HeaderNameValueEncode(System.String,System.String,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub HeaderNameValueEncode (headerName As String, headerValue As String, ByRef encodedHeaderName As String, ByRef encodedHeaderValue As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void HeaderNameValueEncode(System::String ^ headerName, System::String ^ headerValue, [Runtime::InteropServices::Out] System::String ^ % encodedHeaderName, [Runtime::InteropServices::Out] System::String ^ % encodedHeaderValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="headerName" Type="System.String" />
        <Parameter Name="headerValue" Type="System.String" />
        <Parameter Name="encodedHeaderName" Type="System.String&amp;" RefType="out" />
        <Parameter Name="encodedHeaderValue" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="headerName">
          <span data-ttu-id="7471f-136">Имя HTTP-заголовка, которое необходимо закодировать.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7471f-136">The HTTP header name to encode.</span>
          </span>
        </param>
        <param name="headerValue">
          <span data-ttu-id="7471f-137">Значение HTTP-заголовка, которое необходимо закодировать.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7471f-137">The HTTP header value to encode.</span>
          </span>
        </param>
        <param name="encodedHeaderName">
          <span data-ttu-id="7471f-138">Этот метод возвращает кодированное имя для использования в HTTP-заголовке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7471f-138">When this method returns, contains the encoded name to use for an HTTP header.</span>
          </span>
          <span data-ttu-id="7471f-139">Этот параметр передается неинициализированным.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7471f-139">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <param name="encodedHeaderValue">
          <span data-ttu-id="7471f-140">Этот метод возвращает кодированное значение для использования в HTTP-заголовке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7471f-140">When this method returns, contains the encoded value to use for an HTTP header.</span>
          </span>
          <span data-ttu-id="7471f-141">Этот параметр передается неинициализированным.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7471f-141">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7471f-142">Кодирует имя и значение заголовка в строку, которая может быть использована в HTTP-заголовке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7471f-142">Encodes a header name and value into a string that can be used as an HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7471f-143"><xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A> Метод принимает входные строки из `headerName` и `headerValue` параметры и кодирует их.</span><span class="sxs-lookup"><span data-stu-id="7471f-143">The <xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A> method takes input strings from the `headerName` and `headerValue` parameters and encodes them.</span></span> <span data-ttu-id="7471f-144">Закодированные значения возвращаются как выходные параметры.</span><span class="sxs-lookup"><span data-stu-id="7471f-144">The encoded values are returned as out parameters.</span></span>  
  
 <span data-ttu-id="7471f-145"><xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A> Метод использует следующую логику для кодирования имен заголовков и значений:</span><span class="sxs-lookup"><span data-stu-id="7471f-145">The <xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A> method uses the following logic to encode header names and values:</span></span>  
  
-   <span data-ttu-id="7471f-146">Все символы Юникода, значение которого меньше, чем символ ASCII 32, за исключением символа ASCII 9, URL-адреса в формате `%NN` где `N` символы представляют шестнадцатеричные значения.</span><span class="sxs-lookup"><span data-stu-id="7471f-146">All characters whose Unicode value is less than ASCII character 32, except ASCII character 9, are URL-encoded into a format of `%NN` where the `N` characters represent hexadecimal values.</span></span>  
  
-   <span data-ttu-id="7471f-147">Символ ASCII 9 (символ горизонтальной табуляции) не является URL-адреса.</span><span class="sxs-lookup"><span data-stu-id="7471f-147">ASCII character 9 (the horizontal tab character) is not URL-encoded.</span></span>  
  
-   <span data-ttu-id="7471f-148">Символ ASCII 127 кодируется как `%7F`.</span><span class="sxs-lookup"><span data-stu-id="7471f-148">ASCII character 127 is encoded as `%7F`.</span></span>  
  
-   <span data-ttu-id="7471f-149">Все остальные символы не кодируются.</span><span class="sxs-lookup"><span data-stu-id="7471f-149">All other characters are not encoded.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="7471f-150">Несмотря на то, что этот метод может использоваться для значений Юникода, обычно используется для значений в диапазоне ASCII.</span><span class="sxs-lookup"><span data-stu-id="7471f-150">Although this method can be used for Unicode values, it is typically used for values in the ASCII range.</span></span>  
  
 <span data-ttu-id="7471f-151">Реализация по умолчанию <xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A> метод возвращает значение `headerValue` в `encodedHeaderValue` Если `headerValue` — `null` или является пустой строкой.</span><span class="sxs-lookup"><span data-stu-id="7471f-151">The default implementation of the <xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A> method returns the value of `headerValue` in `encodedHeaderValue` if `headerValue` is `null` or is an empty string.</span></span> <span data-ttu-id="7471f-152">Аналогичным образом, реализация по умолчанию возвращает значение `headerName` в `encodedHeaderName` Если `headerName` — `null` или является пустой строкой.</span><span class="sxs-lookup"><span data-stu-id="7471f-152">Similarly, the default implementation returns the value of `headerName` in `encodedHeaderName` if `headerName` is `null` or is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlAttributeEncode">
      <MemberSignature Language="C#" Value="protected internal virtual void HtmlAttributeEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void HtmlAttributeEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub HtmlAttributeEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void HtmlAttributeEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7471f-153">Кодируемая строка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7471f-153">The string to encode.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="7471f-154">Модуль записи текста, в который необходимо записать закодированное значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7471f-154">The text writer to write the encoded value to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7471f-155">Кодирует входящее значение в строку, которая может быть вставлена в HTML-атрибут, ограниченный одинарными или двойными кавычками.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7471f-155">Encodes an incoming value into a string that can be inserted into an HTML attribute that is delimited by using single or double quotation marks.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7471f-156"><xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A> Метод кодирует символы с помощью стандартных сущностей HTML.</span><span class="sxs-lookup"><span data-stu-id="7471f-156">The <xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A> method encodes characters by using the standard HTML entities.</span></span> <span data-ttu-id="7471f-157">Например `<` (левая угловая скобка) кодируется как `&lt;` и `\` (обратная косая черта) кодируется как `&#92;`.</span><span class="sxs-lookup"><span data-stu-id="7471f-157">For example, the `<` (left angle bracket) is encoded as `&lt;` and the `\` (backslash) is encoded as `&#92;`.</span></span>  
  
 <span data-ttu-id="7471f-158">Можно безопасно использовать <xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A> в одиночных кавычках и двойные кавычки атрибутов.</span><span class="sxs-lookup"><span data-stu-id="7471f-158">It is safe to use <xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A> within single-quoted and double-quoted attributes.</span></span> <span data-ttu-id="7471f-159">Значения необходимо заключать в кавычки.</span><span class="sxs-lookup"><span data-stu-id="7471f-159">The values must be quoted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7471f-160">Свойство <paramref name="output" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7471f-160">
              <paramref name="output" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="protected internal virtual void HtmlDecode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void HtmlDecode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.HtmlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub HtmlDecode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void HtmlDecode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7471f-161">Декодируемая строка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7471f-161">The string to decode.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="7471f-162">Модуль записи текста, в который необходимо записать декодированное значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7471f-162">The text writer to write the decoded value to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7471f-163">Декодирует значение из строки в кодировке HTML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7471f-163">Decodes a value from an HTML-encoded string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7471f-164">В следующей таблице перечислены последовательности символов, которые может декодировать логика декодирования ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="7471f-164">The following table lists the character sequences that the ASP.NET decoding logic can decode.</span></span>  
  
|<span data-ttu-id="7471f-165">Последовательность символов</span><span class="sxs-lookup"><span data-stu-id="7471f-165">Character sequence</span></span>|<span data-ttu-id="7471f-166">Правило</span><span class="sxs-lookup"><span data-stu-id="7471f-166">Rule</span></span>|  
|------------------------|----------|  
|<span data-ttu-id="7471f-167">`&#NNN;` (десятичные коды символов ASCII).</span><span class="sxs-lookup"><span data-stu-id="7471f-167">`&#NNN;` (decimal codes for ASCII characters).</span></span>|<span data-ttu-id="7471f-168">Декодируется как указанный знак ASCII.</span><span class="sxs-lookup"><span data-stu-id="7471f-168">Decoded as the specified ASCII character.</span></span> <span data-ttu-id="7471f-169">Последовательность символов начинается с первой цифры после символа # и завершается точкой с запятой.</span><span class="sxs-lookup"><span data-stu-id="7471f-169">The character sequence starts at the first digit after the # character and finishes at the semicolon.</span></span>|  
|<span data-ttu-id="7471f-170">`&#xZZ;` (шестнадцатеричные коды символов ASCII).</span><span class="sxs-lookup"><span data-stu-id="7471f-170">`&#xZZ;` (hexadecimal codes for ASCII characters).</span></span>|<span data-ttu-id="7471f-171">Декодируется как указанный знак ASCII.</span><span class="sxs-lookup"><span data-stu-id="7471f-171">Decoded as the specified ASCII character.</span></span> <span data-ttu-id="7471f-172">Кодированной форме символ с помощью шестнадцатеричных символов, а не значение десятичного числа.</span><span class="sxs-lookup"><span data-stu-id="7471f-172">The encoded form specifies the character by using hexadecimal characters instead of a decimal value.</span></span> <span data-ttu-id="7471f-173">Последовательность символов начинается с первой цифры после символа # и завершается точкой с запятой.</span><span class="sxs-lookup"><span data-stu-id="7471f-173">The character sequence starts at the first digit after the # character and finishes at the semicolon.</span></span>|  
|<span data-ttu-id="7471f-174">Именованные сущности HTML.</span><span class="sxs-lookup"><span data-stu-id="7471f-174">Named HTML entities.</span></span>|<span data-ttu-id="7471f-175">Декодируется как эквивалентный знак ASCII.</span><span class="sxs-lookup"><span data-stu-id="7471f-175">Decoded as the equivalent ASCII character.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7471f-176">Свойство <paramref name="output" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7471f-176">
              <paramref name="output" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="protected internal virtual void HtmlEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void HtmlEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub HtmlEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void HtmlEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7471f-177">Кодируемая строка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7471f-177">The string to encode.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="7471f-178">Модуль записи текста, в который необходимо записать закодированное значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7471f-178">The text writer to write the encoded value to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7471f-179">Зашифровывает строку в строку в кодировке HTML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7471f-179">Encodes a string into an HTML-encoded string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7471f-180">В следующей таблице перечислены последовательности символов, которые может декодировать логика кодирования ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="7471f-180">The following table lists the character sequences that the ASP.NET encoding logic can decode.</span></span>  
  
|<span data-ttu-id="7471f-181">Знак</span><span class="sxs-lookup"><span data-stu-id="7471f-181">Character</span></span>|<span data-ttu-id="7471f-182">Кодируется как</span><span class="sxs-lookup"><span data-stu-id="7471f-182">Encoded as</span></span>|  
|---------------|----------------|  
|<span data-ttu-id="7471f-183">`<` (левая угловая скобка)</span><span class="sxs-lookup"><span data-stu-id="7471f-183">`<` (left angle bracket)</span></span>|`&lt;`|  
|<span data-ttu-id="7471f-184">`>` (правая угловая скобка)</span><span class="sxs-lookup"><span data-stu-id="7471f-184">`>` (right angle bracket)</span></span>|`&gt;`|  
|<span data-ttu-id="7471f-185">`"` (двойные кавычки)</span><span class="sxs-lookup"><span data-stu-id="7471f-185">`"` (double quotation marks)</span></span>|`&quot;`|  
|<span data-ttu-id="7471f-186">`&` (амперсанд)</span><span class="sxs-lookup"><span data-stu-id="7471f-186">`&` (ampersand)</span></span>|`&amp;`|  
|<span data-ttu-id="7471f-187">`\` (обратная косая черта)</span><span class="sxs-lookup"><span data-stu-id="7471f-187">`\` (backslash)</span></span>|`&#92;`|  
|<span data-ttu-id="7471f-188">Знаки ASCII от 160 до 255.</span><span class="sxs-lookup"><span data-stu-id="7471f-188">ASCII characters from 160 to 255</span></span>|<span data-ttu-id="7471f-189">`&#NNN;`, где `NNN` — код из трех цифр десятичного знака</span><span class="sxs-lookup"><span data-stu-id="7471f-189">`&#NNN;`, where `NNN` is the three-digit decimal character code</span></span>|  
  
 <span data-ttu-id="7471f-190">При переопределении <xref:System.Web.Util.HttpEncoder.HtmlEncode%2A> метода, должны создаваться выходные данные, также можно безопасно в двойных кавычках или одиночные кавычки атрибутов HTML.</span><span class="sxs-lookup"><span data-stu-id="7471f-190">If you override the <xref:System.Web.Util.HttpEncoder.HtmlEncode%2A> method, you must produce output that is also safe within double-quoted or single-quoted HTML attributes.</span></span> <span data-ttu-id="7471f-191">Это обеспечивает соблюдение синтаксического анализа Razor обработчика, где разметки и кода могут быть объединены, таких как \<тег attr =»@value«>.</span><span class="sxs-lookup"><span data-stu-id="7471f-191">This accommodates parsing by the Razor engine, where markup and code can be combined, such as \<tag attr="@value">.</span></span> <span data-ttu-id="7471f-192">Кроме того @ оператор не является контекстно зависимые при обработке обработчиком Razor, поэтому он вызывает <xref:System.Web.Util.HttpEncoder.HtmlEncode%2A> вместо <xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A>.</span><span class="sxs-lookup"><span data-stu-id="7471f-192">In addition, the @ operator is not context-aware when processed by the Razor engine, therefore it calls <xref:System.Web.Util.HttpEncoder.HtmlEncode%2A> rather than <xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7471f-193">Свойство <paramref name="output" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7471f-193">
              <paramref name="output" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="JavaScriptStringEncode">
      <MemberSignature Language="C#" Value="protected internal virtual string JavaScriptStringEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string JavaScriptStringEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.JavaScriptStringEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function JavaScriptStringEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ JavaScriptStringEncode(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7471f-194">Кодируемая строка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7471f-194">The string to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7471f-195">Кодирует строку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7471f-195">Encodes a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7471f-196">Закодированная строка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7471f-196">An encoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7471f-197">Кодировка URL гарантирует, что все браузеры правильную передачу текста в строках URL-адрес.</span><span class="sxs-lookup"><span data-stu-id="7471f-197">URL encoding makes sure that all browsers correctly transmit text in URL strings.</span></span> <span data-ttu-id="7471f-198">Такие символы, как знак вопроса (?), амперсанд (&), косая черта (/) и пробелы могут обрезать или обозревателем.</span><span class="sxs-lookup"><span data-stu-id="7471f-198">Characters such as a question mark (?), ampersand (&), slash (/), and spaces might be truncated or corrupted by some browsers.</span></span> <span data-ttu-id="7471f-199">Таким образом эти символы должны быть закодированы.</span><span class="sxs-lookup"><span data-stu-id="7471f-199">Therefore, these characters must be encoded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="protected internal virtual byte[] UrlEncode (byte[] bytes, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance unsigned int8[] UrlEncode(unsigned int8[] bytes, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.UrlEncode(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function UrlEncode (bytes As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ UrlEncode(cli::array &lt;System::Byte&gt; ^ bytes, int offset, int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="7471f-200">Массив байтов, который необходимо закодировать.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7471f-200">An array of bytes to encode.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="7471f-201">Позиция в массиве <c>bytes</c>, с которой начинается кодирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7471f-201">The position in the <c>bytes</c> array at which to begin encoding.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="7471f-202">Количество кодируемых элементов массива <c>bytes</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7471f-202">The number of items in the <c>bytes</c> array to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7471f-203">Кодирует массив недопустимых в URL-адресе символов в шестнадцатеричный эквивалент сущности знака.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7471f-203">Encodes an array of characters that are not allowed in a URL into a hexadecimal character-entity equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7471f-204">Массив кодируемых символов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7471f-204">An array of encoded characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7471f-205"><xref:System.Web.Util.HttpEncoder.UrlEncode%2A> Метод вызывается методом несколько методов кодирования URL-адрес в <xref:System.Web.HttpUtility> класса.</span><span class="sxs-lookup"><span data-stu-id="7471f-205">The <xref:System.Web.Util.HttpEncoder.UrlEncode%2A> method is called by several URL encoding methods in the <xref:System.Web.HttpUtility> class.</span></span>  
  
 <span data-ttu-id="7471f-206"><xref:System.Web.Util.HttpEncoder.UrlEncode%2A> Метод кодирует в URL-адрес любой символ, не входящий в набор ASCII символов, которое считается безопасным URL-адрес.</span><span class="sxs-lookup"><span data-stu-id="7471f-206">The <xref:System.Web.Util.HttpEncoder.UrlEncode%2A> method URL-encodes any character that is not in the set of ASCII characters that is considered to be URL-safe.</span></span> <span data-ttu-id="7471f-207">Пробелы кодируются в формате ASCII "`+"` символов.</span><span class="sxs-lookup"><span data-stu-id="7471f-207">Spaces are encoded as the ASCII "`+"` character.</span></span> <span data-ttu-id="7471f-208">Безопасные URL-адреса символы включают символы ASCI (от A до Z и-z), цифры (0-9) и некоторые знаки препинания.</span><span class="sxs-lookup"><span data-stu-id="7471f-208">URL-safe ASCII characters include the ASCI characters (A to Z and a to z), numerals (0 to 9), and some punctuation marks.</span></span> <span data-ttu-id="7471f-209">В следующей таблице перечислены знаки пунктуации, которые считаются безопасными URL-адрес символами ASCII.</span><span class="sxs-lookup"><span data-stu-id="7471f-209">The following table lists the punctuation marks that are considered URL-safe ASCII characters.</span></span>  
  
|<span data-ttu-id="7471f-210">Знак</span><span class="sxs-lookup"><span data-stu-id="7471f-210">Character</span></span>|<span data-ttu-id="7471f-211">Описание:</span><span class="sxs-lookup"><span data-stu-id="7471f-211">Description</span></span>|  
|---------------|-----------------|  
|-|<span data-ttu-id="7471f-212">Дефис</span><span class="sxs-lookup"><span data-stu-id="7471f-212">Hyphen</span></span>|  
|<span data-ttu-id="7471f-213">_</span><span class="sxs-lookup"><span data-stu-id="7471f-213">_</span></span>|<span data-ttu-id="7471f-214">Символ подчеркивания</span><span class="sxs-lookup"><span data-stu-id="7471f-214">Underscore</span></span>|  
|<span data-ttu-id="7471f-215">.</span><span class="sxs-lookup"><span data-stu-id="7471f-215">.</span></span>|<span data-ttu-id="7471f-216">Период (точка)</span><span class="sxs-lookup"><span data-stu-id="7471f-216">Period (dot)</span></span>|  
|<span data-ttu-id="7471f-217">!</span><span class="sxs-lookup"><span data-stu-id="7471f-217">!</span></span>|<span data-ttu-id="7471f-218">Восклицательный знак</span><span class="sxs-lookup"><span data-stu-id="7471f-218">Exclamation mark</span></span>|  
|*|<span data-ttu-id="7471f-219">Звездочка</span><span class="sxs-lookup"><span data-stu-id="7471f-219">Asterisk (star)</span></span>|  
|<span data-ttu-id="7471f-220">(</span><span class="sxs-lookup"><span data-stu-id="7471f-220">(</span></span>|<span data-ttu-id="7471f-221">Открывающая скобка</span><span class="sxs-lookup"><span data-stu-id="7471f-221">Opening parenthesis</span></span>|  
|<span data-ttu-id="7471f-222">)</span><span class="sxs-lookup"><span data-stu-id="7471f-222">)</span></span>|<span data-ttu-id="7471f-223">Закрывающая круглая скобка</span><span class="sxs-lookup"><span data-stu-id="7471f-223">Closing parenthesis</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7471f-224">
            <paramref name="offset" /> меньше нуля или больше, чем длина массива <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7471f-224">
              <paramref name="offset" /> is less than zero or greater than the length of the <paramref name="bytes" /> array.</span>
          </span>
          <span data-ttu-id="7471f-225">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="7471f-225">-or-</span>
          </span>
          <span data-ttu-id="7471f-226">
            <paramref name="count" /> меньше нуля, или <paramref name="count" /> плюс <paramref name="offset" /> больше, чем длина массива <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7471f-226">
              <paramref name="count" /> is less than zero or <paramref name="count" /> plus <paramref name="offset" /> is greater than the length of the <paramref name="bytes" /> array.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7471f-227">Свойство <paramref name="bytes" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7471f-227">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UrlPathEncode">
      <MemberSignature Language="C#" Value="protected internal virtual string UrlPathEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string UrlPathEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.UrlPathEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function UrlPathEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ UrlPathEncode(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7471f-228">Кодируемая строка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7471f-228">The string to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7471f-229">Кодирует часть URL-адреса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7471f-229">Encodes a subsection of a URL.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7471f-230">Строка в URL-кодировке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7471f-230">A URL-encoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7471f-231">Метод <xref:System.Web.Util.HttpEncoder.UrlPathEncode%2A> вызывается методом <xref:System.Web.HttpUtility.UrlPathEncode%2A>.</span><span class="sxs-lookup"><span data-stu-id="7471f-231">The <xref:System.Web.Util.HttpEncoder.UrlPathEncode%2A> method is called by the <xref:System.Web.HttpUtility.UrlPathEncode%2A> method.</span></span> <span data-ttu-id="7471f-232"><xref:System.Web.HttpUtility.UrlPathEncode%2A> Метод выполняет следующие действия:</span><span class="sxs-lookup"><span data-stu-id="7471f-232">The <xref:System.Web.HttpUtility.UrlPathEncode%2A> method performs the following steps:</span></span>  
  
-   <span data-ttu-id="7471f-233">Применяет логику кодирования <xref:System.Web.Util.HttpEncoder.UrlPathEncode%2A> метод только части пути URL-адреса (что исключает строки запроса).</span><span class="sxs-lookup"><span data-stu-id="7471f-233">Applies the encoding logic of the <xref:System.Web.Util.HttpEncoder.UrlPathEncode%2A> method to only the path part of the URL (which excludes the query string).</span></span> <span data-ttu-id="7471f-234">Метод предполагает, что URL-адрес кодируется как строка UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7471f-234">The method assumes that the URL is encoded as a UTF-8 string.</span></span>  
  
-   <span data-ttu-id="7471f-235">Кодирует отличные от пробелов, чтобы в результирующую строку, закодированную используется только подмножество первых 128 символов ASCII.</span><span class="sxs-lookup"><span data-stu-id="7471f-235">Encodes non-spaces so that only a subset of the first 128 ASCII characters is used in the resulting encoded string.</span></span> <span data-ttu-id="7471f-236">Любые символы Юникода значение 128 и меньше, 32 и меньше, в кодировке URL.</span><span class="sxs-lookup"><span data-stu-id="7471f-236">Any characters at Unicode value 128 and greater, or 32 and less, are URL-encoded.</span></span>  
  
-   <span data-ttu-id="7471f-237">Кодирует пробелы как % 20.</span><span class="sxs-lookup"><span data-stu-id="7471f-237">Encodes spaces as %20.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>