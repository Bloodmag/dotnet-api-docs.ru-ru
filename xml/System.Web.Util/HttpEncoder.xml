<Type Name="HttpEncoder" FullName="System.Web.Util.HttpEncoder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d4bac60268ba6ef9b0edfa417efcbd211763d938" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36575155" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HttpEncoder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi HttpEncoder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Util.HttpEncoder" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpEncoder" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpEncoder" />
  <TypeSignature Language="F#" Value="type HttpEncoder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web.Services</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="7f2a9-101">Предоставляет логику кодирования и декодирования.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7f2a9-101">Provides encoding and decoding logic.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f2a9-102">Этот класс содержит логику, используемый методами в классах, таких как кодирования и декодирования <xref:System.Web.HttpUtility>, <xref:System.Web.HttpServerUtility>, и <xref:System.Net.HttpResponseHeader>.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-102">The class contains encoding and decoding logic that is used by methods in classes such as <xref:System.Web.HttpUtility>, <xref:System.Web.HttpServerUtility>, and <xref:System.Net.HttpResponseHeader>.</span></span>  
  
 <span data-ttu-id="7f2a9-103">Можно наследовать от <xref:System.Web.Util.HttpEncoder> класса и переопределить его поведение для настройки по умолчанию кодирования и декодирования поведения ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-103">You can inherit from the <xref:System.Web.Util.HttpEncoder> class and override its behavior to customize the default encoding and decoding behavior of ASP.NET.</span></span> <span data-ttu-id="7f2a9-104">Затем установите <xref:System.Web.Configuration.HttpRuntimeSection.EncoderType%2A> свойство <xref:System.Web.Configuration.HttpRuntimeSection> класса, чтобы настроить пользовательский класс.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-104">You then set the <xref:System.Web.Configuration.HttpRuntimeSection.EncoderType%2A> property of the <xref:System.Web.Configuration.HttpRuntimeSection> class to configure your custom class.</span></span>  
  
 <span data-ttu-id="7f2a9-105">Пользовательский класс для кодирования и декодирования, который является производным от <xref:System.Web.Util.HttpEncoder> можно переопределить встроенных ASP.NET кодирования и декодирования поведение или изменить только выбранные его аспекты.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-105">A custom class for encoding and decoding that derives from <xref:System.Web.Util.HttpEncoder> can override the built-in ASP.NET encoding and decoding behavior or change only selected aspects of it.</span></span>  
  
 <span data-ttu-id="7f2a9-106">Можно настроить пользовательский тип кодировки для в ASP.NET, чтобы заменить или дополнить кодирования следующее поведение:</span><span class="sxs-lookup"><span data-stu-id="7f2a9-106">You can configure the custom encoding type for in ASP.NET to replace or supplement the following encoding behavior:</span></span>  
  
-   <span data-ttu-id="7f2a9-107">Кодировка HTML</span><span class="sxs-lookup"><span data-stu-id="7f2a9-107">HTML encoding</span></span>  
  
-   <span data-ttu-id="7f2a9-108">Кодировка атрибута HTML</span><span class="sxs-lookup"><span data-stu-id="7f2a9-108">HTML attribute encoding</span></span>  
  
-   <span data-ttu-id="7f2a9-109">Кодирование URL-адресов</span><span class="sxs-lookup"><span data-stu-id="7f2a9-109">URL encoding</span></span>  
  
-   <span data-ttu-id="7f2a9-110">Кодировка URL-путь</span><span class="sxs-lookup"><span data-stu-id="7f2a9-110">URL path encoding</span></span>  
  
-   <span data-ttu-id="7f2a9-111">Имя заголовка HTTP и заголовок значение кодировки</span><span class="sxs-lookup"><span data-stu-id="7f2a9-111">HTTP header name and header value encoding</span></span>  
  
 <span data-ttu-id="7f2a9-112">По умолчанию приложения ASP.NET настроены для использования <xref:System.Web.Security.AntiXss.AntiXssEncoder> типа для всех выходных кодировки.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-112">By default, ASP.NET applications are configured to use the <xref:System.Web.Security.AntiXss.AntiXssEncoder> type for all output encoding.</span></span>  
  
 <span data-ttu-id="7f2a9-113">В следующем примере из показан файл Web.config уровня приложения как <xref:System.Web.Security.AntiXss.AntiXssEncoder> тип задается для приложения ASP.NET:</span><span class="sxs-lookup"><span data-stu-id="7f2a9-113">The following example from an application-level Web.config file shows how the <xref:System.Web.Security.AntiXss.AntiXssEncoder> type is set for an ASP.NET application:</span></span>  
  
 `<httpRuntime requestValidationMode="4.5" encoderType="System.Web.Security.AntiXss.AntiXssEncoder, System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"/>`  
  
 <span data-ttu-id="7f2a9-114">Параметр конфигурации в примере устанавливается <xref:System.Web.Security.AntiXss.AntiXssEncoder> класса для выполнения всех выходных данных кодировку в приложении.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-114">The configuration setting in the example sets the <xref:System.Web.Security.AntiXss.AntiXssEncoder> class to perform all output encoding in the application.</span></span> <span data-ttu-id="7f2a9-115">Дополнительные сведения см. в разделе <xref:System.Web.Security.AntiXss.AntiXssEncoder> Общие сведения о классе.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-115">For more information, see the <xref:System.Web.Security.AntiXss.AntiXssEncoder> class overview.</span></span>  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="7f2a9-116">
        <para>При создании пользовательского кодировщика класса и переопределить базовые методы базового класса, производного декодера исключение может любой из переопределенных методов. Однако в следующих случаях создания такого исключения может привести к непредвиденному поведению в ASP.NET:-Если ASP.NET готовится к просмотру страница ошибки, вызванные необрабатываемое исключение, вызванное исключение из пользовательского кодировщика, ASP.NET не пытается закодировать его o ошибки выходные данные во, вызывая пользовательский кодировщик. Это позволяет избежать ошибки рекурсивной.  — Если ASP.NET отправки заголовков HTTP в IIS, ASP.NET не имеет возможности для необработанных исключений. Таким образом будут отображаться стандартной страницы ошибок для ASP.NET (если параметры конфигурации позволяет эту страницу для отображения).</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="7f2a9-116">
          <para>When you create a custom encoder class and override the base methods of the base class, the derived encoder might throw an exception from any of the overridden methods. However, in the following cases throwing such an exception could lead to unexpected behavior in ASP.NET:  -   If ASP.NET is rendering an error page that is caused by an unhandled exception that was thrown from a custom encoder, ASP.NET does not attempt to encode its error output by calling into the custom encoder. This avoids recursive error conditions.  -   When ASP.NET is sending HTTP headers to IIS, ASP.NET has no provision for unhandled exceptions. Therefore, the standard ASP.NET error page will be rendered (if configuration settings allows this page to be displayed).</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Web.HttpUtility" />
    <altmember cref="T:System.Web.HttpServerUtility" />
    <altmember cref="T:System.Web.Configuration.HttpRuntimeSection" />
    <altmember cref="T:System.Web.Security.AntiXss.AntiXssEncoder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpEncoder ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpEncoder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7f2a9-117">Инициализирует новый экземпляр класса <see cref="T:System.Web.Util.HttpEncoder" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2a9-117">Initializes a new instance of the <see cref="T:System.Web.Util.HttpEncoder" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Current">
      <MemberSignature Language="C#" Value="public static System.Web.Util.HttpEncoder Current { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Util.HttpEncoder Current" />
      <MemberSignature Language="DocId" Value="P:System.Web.Util.HttpEncoder.Current" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Current As HttpEncoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Util::HttpEncoder ^ Current { System::Web::Util::HttpEncoder ^ get(); void set(System::Web::Util::HttpEncoder ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Current : System.Web.Util.HttpEncoder with get, set" Usage="System.Web.Util.HttpEncoder.Current" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Util.HttpEncoder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7f2a9-118">Получает или задает тип <see cref="T:System.Web.Util.HttpEncoder" />, который будет использован в приложении.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2a9-118">Gets or set the <see cref="T:System.Web.Util.HttpEncoder" /> type that will be used in an application.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7f2a9-119">Ссылка на тип кодирования-декодирования, который будет использован.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2a9-119">A reference to the encoder/decoder type that will be used.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f2a9-120">Если производный <xref:System.Web.Util.HttpEncoder> в файле конфигурации указан тип <xref:System.Web.Util.HttpEncoder.Current%2A> свойство возвращает ссылку на пользовательский тип.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-120">If a derived <xref:System.Web.Util.HttpEncoder> type is specified in the configuration file, the <xref:System.Web.Util.HttpEncoder.Current%2A> property returns a reference to the custom type.</span></span> <span data-ttu-id="7f2a9-121">Тем не менее, если используется не пользовательский кодировщик, свойство возвращает ссылку на значение по умолчанию ASP.NET <xref:System.Web.Util.HttpEncoder> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-121">However, if no custom encoder is used, the property returns a reference to the default ASP.NET <xref:System.Web.Util.HttpEncoder> instance.</span></span>  
  
 <span data-ttu-id="7f2a9-122"><xref:System.Web.Util.HttpEncoder.Current%2A> Свойство не является потокобезопасным.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-122">The <xref:System.Web.Util.HttpEncoder.Current%2A> property is not thread-safe.</span></span> <span data-ttu-id="7f2a9-123">Если установлено только в приложении `Application_Start` метода, так как `Application_Start` выполняется в одном потоке.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-123">Set this property only in the application's `Application_Start` method, because `Application_Start` runs on a single thread.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7f2a9-124">Экземпляр кодировщика, назначаемый данному свойству, имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2a9-124">The encoder instance that is being assigned to this property is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Default">
      <MemberSignature Language="C#" Value="public static System.Web.Util.HttpEncoder Default { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Web.Util.HttpEncoder Default" />
      <MemberSignature Language="DocId" Value="P:System.Web.Util.HttpEncoder.Default" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Default As HttpEncoder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Web::Util::HttpEncoder ^ Default { System::Web::Util::HttpEncoder ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Default : System.Web.Util.HttpEncoder" Usage="System.Web.Util.HttpEncoder.Default" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Util.HttpEncoder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7f2a9-125">Получает ссылку на кодировщик ASP.NET по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2a9-125">Gets a reference to the default encoder for ASP.NET.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7f2a9-126">Ссылка на кодировщик по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2a9-126">A reference to the default encoder.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f2a9-127">Распространенные проблемы кодирования, ASP.NET по умолчанию — <xref:System.Web.Util.HttpEncoder.UrlEncode%2A> поведение преобразует пробелы в символ «+».</span><span class="sxs-lookup"><span data-stu-id="7f2a9-127">A common encoding issue is that the default ASP.NET <xref:System.Web.Util.HttpEncoder.UrlEncode%2A> behavior converts spaces into the "+" character.</span></span> <span data-ttu-id="7f2a9-128">Исторически символ «+» был соглашение о Интернет для кодирования пробельные символы в URL-адрес в форме более удобной для чтения.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-128">Historically, the "+" character has been an Internet convention for encoding space characters in a URL into a more human-readable manner.</span></span> <span data-ttu-id="7f2a9-129">Тем не менее, в соответствии со стандартами, пробел должен кодироваться как «% 20» и вместо как символ «+».</span><span class="sxs-lookup"><span data-stu-id="7f2a9-129">However, according to standards, the space character is supposed to be encoded as "%20" and instead of as the "+" character.</span></span> <span data-ttu-id="7f2a9-130">ASP.NET позволяет реализовать более совместимый кодирования алгоритм стандартов.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-130">ASP.NET lets you implement a more standards compliant encoding algorithm.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderNameValueEncode">
      <MemberSignature Language="C#" Value="protected internal virtual void HeaderNameValueEncode (string headerName, string headerValue, out string encodedHeaderName, out string encodedHeaderValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void HeaderNameValueEncode(string headerName, string headerValue, [out] string&amp; encodedHeaderName, [out] string&amp; encodedHeaderValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.HeaderNameValueEncode(System.String,System.String,System.String@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub HeaderNameValueEncode (headerName As String, headerValue As String, ByRef encodedHeaderName As String, ByRef encodedHeaderValue As String)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void HeaderNameValueEncode(System::String ^ headerName, System::String ^ headerValue, [Runtime::InteropServices::Out] System::String ^ % encodedHeaderName, [Runtime::InteropServices::Out] System::String ^ % encodedHeaderValue);" />
      <MemberSignature Language="F#" Value="abstract member HeaderNameValueEncode : string * string *  *  -&gt; unit&#xA;override this.HeaderNameValueEncode : string * string *  *  -&gt; unit" Usage="httpEncoder.HeaderNameValueEncode (headerName, headerValue, encodedHeaderName, encodedHeaderValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="headerName" Type="System.String" />
        <Parameter Name="headerValue" Type="System.String" />
        <Parameter Name="encodedHeaderName" Type="System.String&amp;" RefType="out" />
        <Parameter Name="encodedHeaderValue" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="headerName">
          <span data-ttu-id="7f2a9-131">Имя HTTP-заголовка, которое необходимо закодировать.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2a9-131">The HTTP header name to encode.</span>
          </span>
        </param>
        <param name="headerValue">
          <span data-ttu-id="7f2a9-132">Значение HTTP-заголовка, которое необходимо закодировать.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2a9-132">The HTTP header value to encode.</span>
          </span>
        </param>
        <param name="encodedHeaderName">
          <span data-ttu-id="7f2a9-133">Этот метод возвращает кодированное имя для использования в HTTP-заголовке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2a9-133">When this method returns, contains the encoded name to use for an HTTP header.</span>
          </span>
          <span data-ttu-id="7f2a9-134">Этот параметр передается неинициализированным.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2a9-134">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <param name="encodedHeaderValue">
          <span data-ttu-id="7f2a9-135">Этот метод возвращает кодированное значение для использования в HTTP-заголовке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2a9-135">When this method returns, contains the encoded value to use for an HTTP header.</span>
          </span>
          <span data-ttu-id="7f2a9-136">Этот параметр передается неинициализированным.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2a9-136">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2a9-137">Кодирует имя и значение заголовка в строку, которая может быть использована в HTTP-заголовке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2a9-137">Encodes a header name and value into a string that can be used as an HTTP header.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f2a9-138"><xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A> Метод принимает входные строки из `headerName` и `headerValue` параметры и кодирует их.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-138">The <xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A> method takes input strings from the `headerName` and `headerValue` parameters and encodes them.</span></span> <span data-ttu-id="7f2a9-139">Закодированные значения возвращаются как выходные параметры.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-139">The encoded values are returned as out parameters.</span></span>  
  
 <span data-ttu-id="7f2a9-140"><xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A> Метод использует следующую логику для кодирования имен заголовков и значений:</span><span class="sxs-lookup"><span data-stu-id="7f2a9-140">The <xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A> method uses the following logic to encode header names and values:</span></span>  
  
-   <span data-ttu-id="7f2a9-141">Все символы Юникода, значение которого меньше, чем символ ASCII 32, за исключением символа ASCII 9, URL-адреса в формате `%NN` где `N` символы представляют шестнадцатеричные значения.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-141">All characters whose Unicode value is less than ASCII character 32, except ASCII character 9, are URL-encoded into a format of `%NN` where the `N` characters represent hexadecimal values.</span></span>  
  
-   <span data-ttu-id="7f2a9-142">Символ ASCII 9 (символ горизонтальной табуляции) не является URL-адреса.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-142">ASCII character 9 (the horizontal tab character) is not URL-encoded.</span></span>  
  
-   <span data-ttu-id="7f2a9-143">Символ ASCII 127 кодируется как `%7F`.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-143">ASCII character 127 is encoded as `%7F`.</span></span>  
  
-   <span data-ttu-id="7f2a9-144">Все остальные символы не кодируются.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-144">All other characters are not encoded.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="7f2a9-145">Несмотря на то, что этот метод может использоваться для значений Юникода, обычно используется для значений в диапазоне ASCII.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-145">Although this method can be used for Unicode values, it is typically used for values in the ASCII range.</span></span>  
  
 <span data-ttu-id="7f2a9-146">Реализация по умолчанию <xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A> метод возвращает значение `headerValue` в `encodedHeaderValue` Если `headerValue` — `null` или является пустой строкой.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-146">The default implementation of the <xref:System.Web.Util.HttpEncoder.HeaderNameValueEncode%2A> method returns the value of `headerValue` in `encodedHeaderValue` if `headerValue` is `null` or is an empty string.</span></span> <span data-ttu-id="7f2a9-147">Аналогичным образом, реализация по умолчанию возвращает значение `headerName` в `encodedHeaderName` Если `headerName` — `null` или является пустой строкой.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-147">Similarly, the default implementation returns the value of `headerName` in `encodedHeaderName` if `headerName` is `null` or is an empty string.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HtmlAttributeEncode">
      <MemberSignature Language="C#" Value="protected internal virtual void HtmlAttributeEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void HtmlAttributeEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.HtmlAttributeEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub HtmlAttributeEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void HtmlAttributeEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="abstract member HtmlAttributeEncode : string * System.IO.TextWriter -&gt; unit&#xA;override this.HtmlAttributeEncode : string * System.IO.TextWriter -&gt; unit" Usage="httpEncoder.HtmlAttributeEncode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7f2a9-148">Кодируемая строка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2a9-148">The string to encode.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="7f2a9-149">Модуль записи текста, в который необходимо записать закодированное значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2a9-149">The text writer to write the encoded value to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2a9-150">Кодирует входящее значение в строку, которая может быть вставлена в HTML-атрибут, ограниченный одинарными или двойными кавычками.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2a9-150">Encodes an incoming value into a string that can be inserted into an HTML attribute that is delimited by using single or double quotation marks.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f2a9-151"><xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A> Метод кодирует символы с помощью стандартных сущностей HTML.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-151">The <xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A> method encodes characters by using the standard HTML entities.</span></span> <span data-ttu-id="7f2a9-152">Например `<` (левая угловая скобка) кодируется как `&lt;` и `\` (обратная косая черта) кодируется как `&#92;`.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-152">For example, the `<` (left angle bracket) is encoded as `&lt;` and the `\` (backslash) is encoded as `&#92;`.</span></span>  
  
 <span data-ttu-id="7f2a9-153">Можно безопасно использовать <xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A> в одиночных кавычках и двойные кавычки атрибутов.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-153">It is safe to use <xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A> within single-quoted and double-quoted attributes.</span></span> <span data-ttu-id="7f2a9-154">Значения необходимо заключать в кавычки.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-154">The values must be quoted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7f2a9-155">Свойство <paramref name="output" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2a9-155">
              <paramref name="output" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HtmlDecode">
      <MemberSignature Language="C#" Value="protected internal virtual void HtmlDecode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void HtmlDecode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.HtmlDecode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub HtmlDecode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void HtmlDecode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="abstract member HtmlDecode : string * System.IO.TextWriter -&gt; unit&#xA;override this.HtmlDecode : string * System.IO.TextWriter -&gt; unit" Usage="httpEncoder.HtmlDecode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7f2a9-156">Декодируемая строка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2a9-156">The string to decode.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="7f2a9-157">Модуль записи текста, в который необходимо записать декодированное значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2a9-157">The text writer to write the decoded value to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2a9-158">Декодирует значение из строки в кодировке HTML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2a9-158">Decodes a value from an HTML-encoded string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f2a9-159">В следующей таблице перечислены последовательности символов, которые может декодировать логика декодирования ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-159">The following table lists the character sequences that the ASP.NET decoding logic can decode.</span></span>  
  
|<span data-ttu-id="7f2a9-160">Последовательность символов</span><span class="sxs-lookup"><span data-stu-id="7f2a9-160">Character sequence</span></span>|<span data-ttu-id="7f2a9-161">Правило</span><span class="sxs-lookup"><span data-stu-id="7f2a9-161">Rule</span></span>|  
|------------------------|----------|  
|<span data-ttu-id="7f2a9-162">`&#NNN;` (десятичные коды символов ASCII).</span><span class="sxs-lookup"><span data-stu-id="7f2a9-162">`&#NNN;` (decimal codes for ASCII characters).</span></span>|<span data-ttu-id="7f2a9-163">Декодируется как указанный знак ASCII.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-163">Decoded as the specified ASCII character.</span></span> <span data-ttu-id="7f2a9-164">Последовательность символов начинается с первой цифры после символа # и завершается точкой с запятой.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-164">The character sequence starts at the first digit after the # character and finishes at the semicolon.</span></span>|  
|<span data-ttu-id="7f2a9-165">`&#xZZ;` (шестнадцатеричные коды символов ASCII).</span><span class="sxs-lookup"><span data-stu-id="7f2a9-165">`&#xZZ;` (hexadecimal codes for ASCII characters).</span></span>|<span data-ttu-id="7f2a9-166">Декодируется как указанный знак ASCII.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-166">Decoded as the specified ASCII character.</span></span> <span data-ttu-id="7f2a9-167">Кодированной форме символ с помощью шестнадцатеричных символов, а не значение десятичного числа.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-167">The encoded form specifies the character by using hexadecimal characters instead of a decimal value.</span></span> <span data-ttu-id="7f2a9-168">Последовательность символов начинается с первой цифры после символа # и завершается точкой с запятой.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-168">The character sequence starts at the first digit after the # character and finishes at the semicolon.</span></span>|  
|<span data-ttu-id="7f2a9-169">Именованные сущности HTML.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-169">Named HTML entities.</span></span>|<span data-ttu-id="7f2a9-170">Декодируется как эквивалентный знак ASCII.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-170">Decoded as the equivalent ASCII character.</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7f2a9-171">Свойство <paramref name="output" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2a9-171">
              <paramref name="output" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="protected internal virtual void HtmlEncode (string value, System.IO.TextWriter output);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void HtmlEncode(string value, class System.IO.TextWriter output) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.HtmlEncode(System.String,System.IO.TextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub HtmlEncode (value As String, output As TextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void HtmlEncode(System::String ^ value, System::IO::TextWriter ^ output);" />
      <MemberSignature Language="F#" Value="abstract member HtmlEncode : string * System.IO.TextWriter -&gt; unit&#xA;override this.HtmlEncode : string * System.IO.TextWriter -&gt; unit" Usage="httpEncoder.HtmlEncode (value, output)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
        <Parameter Name="output" Type="System.IO.TextWriter" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7f2a9-172">Кодируемая строка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2a9-172">The string to encode.</span>
          </span>
        </param>
        <param name="output">
          <span data-ttu-id="7f2a9-173">Модуль записи текста, в который необходимо записать закодированное значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2a9-173">The text writer to write the encoded value to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2a9-174">Зашифровывает строку в строку в кодировке HTML.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2a9-174">Encodes a string into an HTML-encoded string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f2a9-175">В следующей таблице перечислены последовательности символов, которые может декодировать логика кодирования ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-175">The following table lists the character sequences that the ASP.NET encoding logic can decode.</span></span>  
  
|<span data-ttu-id="7f2a9-176">Знак</span><span class="sxs-lookup"><span data-stu-id="7f2a9-176">Character</span></span>|<span data-ttu-id="7f2a9-177">Кодируется как</span><span class="sxs-lookup"><span data-stu-id="7f2a9-177">Encoded as</span></span>|  
|---------------|----------------|  
|<span data-ttu-id="7f2a9-178">`<` (левая угловая скобка)</span><span class="sxs-lookup"><span data-stu-id="7f2a9-178">`<` (left angle bracket)</span></span>|`&lt;`|  
|<span data-ttu-id="7f2a9-179">`>` (правая угловая скобка)</span><span class="sxs-lookup"><span data-stu-id="7f2a9-179">`>` (right angle bracket)</span></span>|`&gt;`|  
|<span data-ttu-id="7f2a9-180">`"` (двойные кавычки)</span><span class="sxs-lookup"><span data-stu-id="7f2a9-180">`"` (double quotation marks)</span></span>|`&quot;`|  
|<span data-ttu-id="7f2a9-181">`&` (амперсанд)</span><span class="sxs-lookup"><span data-stu-id="7f2a9-181">`&` (ampersand)</span></span>|`&amp;`|  
|<span data-ttu-id="7f2a9-182">`\` (обратная косая черта)</span><span class="sxs-lookup"><span data-stu-id="7f2a9-182">`\` (backslash)</span></span>|`&#92;`|  
|<span data-ttu-id="7f2a9-183">Знаки ASCII от 160 до 255.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-183">ASCII characters from 160 to 255</span></span>|<span data-ttu-id="7f2a9-184">`&#NNN;`, где `NNN` — код из трех цифр десятичного знака</span><span class="sxs-lookup"><span data-stu-id="7f2a9-184">`&#NNN;`, where `NNN` is the three-digit decimal character code</span></span>|  
  
 <span data-ttu-id="7f2a9-185">При переопределении <xref:System.Web.Util.HttpEncoder.HtmlEncode%2A> метода, должны создаваться выходные данные, также можно безопасно в двойных кавычках или одиночные кавычки атрибутов HTML.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-185">If you override the <xref:System.Web.Util.HttpEncoder.HtmlEncode%2A> method, you must produce output that is also safe within double-quoted or single-quoted HTML attributes.</span></span> <span data-ttu-id="7f2a9-186">Это обеспечивает соблюдение синтаксического анализа Razor обработчика, где разметки и кода могут быть объединены, таких как \<тег attr =»@value«>.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-186">This accommodates parsing by the Razor engine, where markup and code can be combined, such as \<tag attr="@value">.</span></span> <span data-ttu-id="7f2a9-187">Кроме того @ оператор не является контекстно зависимые при обработке обработчиком Razor, поэтому он вызывает <xref:System.Web.Util.HttpEncoder.HtmlEncode%2A> вместо <xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A>.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-187">In addition, the @ operator is not context-aware when processed by the Razor engine, therefore it calls <xref:System.Web.Util.HttpEncoder.HtmlEncode%2A> rather than <xref:System.Web.Util.HttpEncoder.HtmlAttributeEncode%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7f2a9-188">Свойство <paramref name="output" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2a9-188">
              <paramref name="output" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="JavaScriptStringEncode">
      <MemberSignature Language="C#" Value="protected internal virtual string JavaScriptStringEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string JavaScriptStringEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.JavaScriptStringEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function JavaScriptStringEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ JavaScriptStringEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member JavaScriptStringEncode : string -&gt; string&#xA;override this.JavaScriptStringEncode : string -&gt; string" Usage="httpEncoder.JavaScriptStringEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7f2a9-189">Кодируемая строка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2a9-189">The string to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2a9-190">Кодирует строку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2a9-190">Encodes a string.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7f2a9-191">Закодированная строка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2a9-191">An encoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f2a9-192">Кодировка URL гарантирует, что все браузеры правильную передачу текста в строках URL-адрес.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-192">URL encoding makes sure that all browsers correctly transmit text in URL strings.</span></span> <span data-ttu-id="7f2a9-193">Такие символы, как знак вопроса (?), амперсанд (&), косая черта (/) и пробелы могут обрезать или обозревателем.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-193">Characters such as a question mark (?), ampersand (&), slash (/), and spaces might be truncated or corrupted by some browsers.</span></span> <span data-ttu-id="7f2a9-194">Таким образом эти символы должны быть закодированы.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-194">Therefore, these characters must be encoded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UrlEncode">
      <MemberSignature Language="C#" Value="protected internal virtual byte[] UrlEncode (byte[] bytes, int offset, int count);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance unsigned int8[] UrlEncode(unsigned int8[] bytes, int32 offset, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.UrlEncode(System.Byte[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function UrlEncode (bytes As Byte(), offset As Integer, count As Integer) As Byte()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual cli::array &lt;System::Byte&gt; ^ UrlEncode(cli::array &lt;System::Byte&gt; ^ bytes, int offset, int count);" />
      <MemberSignature Language="F#" Value="abstract member UrlEncode : byte[] * int * int -&gt; byte[]&#xA;override this.UrlEncode : byte[] * int * int -&gt; byte[]" Usage="httpEncoder.UrlEncode (bytes, offset, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bytes" Type="System.Byte[]" />
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bytes">
          <span data-ttu-id="7f2a9-195">Массив байтов, который необходимо закодировать.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2a9-195">An array of bytes to encode.</span>
          </span>
        </param>
        <param name="offset">
          <span data-ttu-id="7f2a9-196">Позиция в массиве <c>bytes</c>, с которой начинается кодирование.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2a9-196">The position in the <c>bytes</c> array at which to begin encoding.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="7f2a9-197">Количество кодируемых элементов массива <c>bytes</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2a9-197">The number of items in the <c>bytes</c> array to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2a9-198">Кодирует массив недопустимых в URL-адресе символов в шестнадцатеричный эквивалент сущности знака.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2a9-198">Encodes an array of characters that are not allowed in a URL into a hexadecimal character-entity equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7f2a9-199">Массив кодируемых символов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2a9-199">An array of encoded characters.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f2a9-200"><xref:System.Web.Util.HttpEncoder.UrlEncode%2A> Метод вызывается методом несколько методов кодирования URL-адрес в <xref:System.Web.HttpUtility> класса.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-200">The <xref:System.Web.Util.HttpEncoder.UrlEncode%2A> method is called by several URL encoding methods in the <xref:System.Web.HttpUtility> class.</span></span>  
  
 <span data-ttu-id="7f2a9-201"><xref:System.Web.Util.HttpEncoder.UrlEncode%2A> Метод кодирует в URL-адрес любой символ, не входящий в набор ASCII символов, которое считается безопасным URL-адрес.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-201">The <xref:System.Web.Util.HttpEncoder.UrlEncode%2A> method URL-encodes any character that is not in the set of ASCII characters that is considered to be URL-safe.</span></span> <span data-ttu-id="7f2a9-202">Пробелы кодируются в формате ASCII "`+"` символов.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-202">Spaces are encoded as the ASCII "`+"` character.</span></span> <span data-ttu-id="7f2a9-203">Безопасные URL-адреса символы включают символы ASCI (от A до Z и-z), цифры (0-9) и некоторые знаки препинания.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-203">URL-safe ASCII characters include the ASCI characters (A to Z and a to z), numerals (0 to 9), and some punctuation marks.</span></span> <span data-ttu-id="7f2a9-204">В следующей таблице перечислены знаки пунктуации, которые считаются безопасными URL-адрес символами ASCII.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-204">The following table lists the punctuation marks that are considered URL-safe ASCII characters.</span></span>  
  
|<span data-ttu-id="7f2a9-205">Знак</span><span class="sxs-lookup"><span data-stu-id="7f2a9-205">Character</span></span>|<span data-ttu-id="7f2a9-206">Описание:</span><span class="sxs-lookup"><span data-stu-id="7f2a9-206">Description</span></span>|  
|---------------|-----------------|  
|-|<span data-ttu-id="7f2a9-207">Дефис</span><span class="sxs-lookup"><span data-stu-id="7f2a9-207">Hyphen</span></span>|  
|<span data-ttu-id="7f2a9-208">_</span><span class="sxs-lookup"><span data-stu-id="7f2a9-208">_</span></span>|<span data-ttu-id="7f2a9-209">Символ подчеркивания</span><span class="sxs-lookup"><span data-stu-id="7f2a9-209">Underscore</span></span>|  
|<span data-ttu-id="7f2a9-210">.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-210">.</span></span>|<span data-ttu-id="7f2a9-211">Период (точка)</span><span class="sxs-lookup"><span data-stu-id="7f2a9-211">Period (dot)</span></span>|  
|<span data-ttu-id="7f2a9-212">!</span><span class="sxs-lookup"><span data-stu-id="7f2a9-212">!</span></span>|<span data-ttu-id="7f2a9-213">Восклицательный знак</span><span class="sxs-lookup"><span data-stu-id="7f2a9-213">Exclamation mark</span></span>|  
|*|<span data-ttu-id="7f2a9-214">Звездочка</span><span class="sxs-lookup"><span data-stu-id="7f2a9-214">Asterisk (star)</span></span>|  
|<span data-ttu-id="7f2a9-215">(</span><span class="sxs-lookup"><span data-stu-id="7f2a9-215">(</span></span>|<span data-ttu-id="7f2a9-216">Открывающая скобка</span><span class="sxs-lookup"><span data-stu-id="7f2a9-216">Opening parenthesis</span></span>|  
|<span data-ttu-id="7f2a9-217">)</span><span class="sxs-lookup"><span data-stu-id="7f2a9-217">)</span></span>|<span data-ttu-id="7f2a9-218">Закрывающая круглая скобка</span><span class="sxs-lookup"><span data-stu-id="7f2a9-218">Closing parenthesis</span></span>|  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="7f2a9-219">
            <paramref name="offset" /> меньше нуля или больше, чем длина массива <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2a9-219">
              <paramref name="offset" /> is less than zero or greater than the length of the <paramref name="bytes" /> array.</span>
          </span>
          <span data-ttu-id="7f2a9-220">-или- <paramref name="count" /> меньше нуля, или <paramref name="count" /> плюс <paramref name="offset" /> больше, чем длина массива <paramref name="bytes" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2a9-220">-or-  <paramref name="count" /> is less than zero or <paramref name="count" /> plus <paramref name="offset" /> is greater than the length of the <paramref name="bytes" /> array.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7f2a9-221">Свойство <paramref name="bytes" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2a9-221">
              <paramref name="bytes" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UrlPathEncode">
      <MemberSignature Language="C#" Value="protected internal virtual string UrlPathEncode (string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string UrlPathEncode(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Util.HttpEncoder.UrlPathEncode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function UrlPathEncode (value As String) As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ UrlPathEncode(System::String ^ value);" />
      <MemberSignature Language="F#" Value="abstract member UrlPathEncode : string -&gt; string&#xA;override this.UrlPathEncode : string -&gt; string" Usage="httpEncoder.UrlPathEncode value" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Services</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="7f2a9-222">Кодируемая строка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2a9-222">The string to encode.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7f2a9-223">Кодирует часть URL-адреса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2a9-223">Encodes a subsection of a URL.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7f2a9-224">Строка в URL-кодировке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7f2a9-224">A URL-encoded string.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7f2a9-225">Метод <xref:System.Web.Util.HttpEncoder.UrlPathEncode%2A> вызывается методом <xref:System.Web.HttpUtility.UrlPathEncode%2A>.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-225">The <xref:System.Web.Util.HttpEncoder.UrlPathEncode%2A> method is called by the <xref:System.Web.HttpUtility.UrlPathEncode%2A> method.</span></span> <span data-ttu-id="7f2a9-226"><xref:System.Web.HttpUtility.UrlPathEncode%2A> Метод выполняет следующие действия:</span><span class="sxs-lookup"><span data-stu-id="7f2a9-226">The <xref:System.Web.HttpUtility.UrlPathEncode%2A> method performs the following steps:</span></span>  
  
-   <span data-ttu-id="7f2a9-227">Применяет логику кодирования <xref:System.Web.Util.HttpEncoder.UrlPathEncode%2A> метод только части пути URL-адреса (что исключает строки запроса).</span><span class="sxs-lookup"><span data-stu-id="7f2a9-227">Applies the encoding logic of the <xref:System.Web.Util.HttpEncoder.UrlPathEncode%2A> method to only the path part of the URL (which excludes the query string).</span></span> <span data-ttu-id="7f2a9-228">Метод предполагает, что URL-адрес кодируется как строка UTF-8.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-228">The method assumes that the URL is encoded as a UTF-8 string.</span></span>  
  
-   <span data-ttu-id="7f2a9-229">Кодирует отличные от пробелов, чтобы в результирующую строку, закодированную используется только подмножество первых 128 символов ASCII.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-229">Encodes non-spaces so that only a subset of the first 128 ASCII characters is used in the resulting encoded string.</span></span> <span data-ttu-id="7f2a9-230">Любые символы Юникода значение 128 и меньше, 32 и меньше, в кодировке URL.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-230">Any characters at Unicode value 128 and greater, or 32 and less, are URL-encoded.</span></span>  
  
-   <span data-ttu-id="7f2a9-231">Кодирует пробелы как % 20.</span><span class="sxs-lookup"><span data-stu-id="7f2a9-231">Encodes spaces as %20.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>