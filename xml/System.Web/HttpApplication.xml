<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HttpApplication.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5763b66da8b1dceadda77652804c5bae9caa303a5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">763b66da8b1dceadda77652804c5bae9caa303a5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Defines the methods, properties, and events that are common to all application objects in an ASP.NET application.</source>
          <target state="translated">Определяет методы, свойства и события, являющиеся общими для всех объектов в приложении ASP.NET.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>This class is the base class for applications that are defined by the user in the Global.asax file.</source>
          <target state="translated">Этот класс является базовым для приложений, определенных пользователем в файле Global.asax.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>Instances of the <ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> class are created in the ASP.NET infrastructure, not by the user directly.</source>
          <target state="translated">Экземпляры <ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> класса создаются в инфраструктуре ASP.NET не напрямую пользователем.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>One instance of the <ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> class is used to process many requests in its lifetime.</source>
          <target state="translated">Один экземпляр <ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> класс используется для обработки большого числа запросов за время его существования.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>However, it can process only one request at a time.</source>
          <target state="translated">Тем не менее он может обрабатывать одновременно только один запрос.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>Thus, member variables can be used to store per-request data.</source>
          <target state="translated">Таким образом переменные-члены могут использоваться для хранения данных для каждого запроса.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>An application raises events that can be handled by custom modules that implement the <ph id="ph1">&lt;xref:System.Web.IHttpModule&gt;</ph> interface or by event handler code that is defined in the Global.asax file.</source>
          <target state="translated">Приложение вызывает события, которые могут быть обработаны пользовательские модули, реализующие <ph id="ph1">&lt;xref:System.Web.IHttpModule&gt;</ph> интерфейса или путем код обработчика событий, который определен в файле Global.asax файла.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>Custom modules that implement the <ph id="ph1">&lt;xref:System.Web.IHttpModule&gt;</ph> interface can be put in the App_Code folder or in a DLL in the Bin folder.</source>
          <target state="translated">Пользовательские модули, реализующие <ph id="ph1">&lt;xref:System.Web.IHttpModule&gt;</ph> интерфейса могут быть помещены в папку App_Code, или в библиотеку DLL в папке Bin.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> впервые появился в платформе .NET Framework версии 3.5.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в статье <bpt id="p1">[</bpt>Версии и зависимости платформы .NET Framework<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>When running IIS 7.0 in Integrated mode, custom modules in the App_Code folder or Bin folder apply to all requests in the request pipeline.</source>
          <target state="translated">При запуске IIS 7.0 в интегрированном режиме, пользовательские модули в папке App_Code или в папке Bin применяются ко всем запросам в конвейере.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>Event handler code in the Global.asax file only applies to requests that are mapped to an ASP.NET handler.</source>
          <target state="translated">Код обработчика событий в файле Global.asax применяется только к запросам, которые сопоставляются обработчику ASP.NET.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The application events are raised in the following order:</source>
          <target state="translated">События приложения вызываются в следующем порядке:</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>After the <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostResolveRequestCache&gt;</ph> event and before the <ph id="ph2">&lt;xref:System.Web.HttpApplication.PostMapRequestHandler&gt;</ph> event, an event handler (which is a page that corresponds to the request URL) is created.</source>
          <target state="translated">После <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostResolveRequestCache&gt;</ph> событий и перед <ph id="ph2">&lt;xref:System.Web.HttpApplication.PostMapRequestHandler&gt;</ph> создается событие, обработчик событий (который является страницей, соответствующий URL-адрес запроса).</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>When a server is running IIS 7.0 in Integrated mode and at least the .NET Framework version 3.0, the <ph id="ph1">&lt;xref:System.Web.HttpApplication.MapRequestHandler&gt;</ph> event is raised.</source>
          <target state="translated">Когда сервер работает под управлением IIS 7.0 в интегрированном режиме и по крайней мере .NET Framework версии 3.0, <ph id="ph1">&lt;xref:System.Web.HttpApplication.MapRequestHandler&gt;</ph> события.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>When a server is running IIS 7.0 in Classic mode or an earlier version of IIS, this event cannot be handled.</source>
          <target state="translated">Если сервер работает IIS 7.0 в классическом режиме или более ранней версии служб IIS, невозможно обработать это событие.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The event handler is executed.</source>
          <target state="translated">Выполняется обработчик события.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>After the <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostReleaseRequestState&gt;</ph> event is raised, any existing response filters will filter the output.</source>
          <target state="translated">После <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostReleaseRequestState&gt;</ph> события, все существующие фильтры ответ будет фильтр выходных данных.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>This event is supported in IIS 7.0 Integrated mode and at least the .NET Framework 3.0</source>
          <target state="translated">Данное событие поддерживается в интегрированном режиме IIS 7.0 и по крайней мере .NET Framework 3.0</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>This event is supported IIS 7.0 Integrated mode and at least the .NET Framework 3.0</source>
          <target state="translated">Это событие не поддерживается интегрированном режиме IIS 7.0 и по крайней мере .NET Framework 3.0</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The following two examples demonstrate how to use the <ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> class and its events.</source>
          <target state="translated">В следующих двух примерах демонстрируются способы использования <ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> класса и его событий.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The first example demonstrates how to create a custom HTTP module and connect an event to it.</source>
          <target state="translated">Первый пример показано, как создать пользовательский HTTP-модуль и подключения события к нему.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The second example demonstrates how to modify the Web.config file.</source>
          <target state="translated">Во втором примере показано, как изменить файл Web.config.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The following example demonstrates how to create a custom HTTP module and connect the <ph id="ph1">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> event to the HTTP module.</source>
          <target state="translated">Ниже приведен пример, как создать пользовательский HTTP-модуль и присоединить <ph id="ph1">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> событий для HTTP-модуля.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>HTTP modules intercept each request to Web application resources, thereby allowing you to filter client requests.</source>
          <target state="translated">HTTP-модули перехватывают все запросы к ресурсам веб-приложений, позволяя пользователю фильтровать запросы клиентов.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>Any HTTP module that subscribes to an <ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> event must implement the <ph id="ph2">&lt;xref:System.Web.IHttpModule&gt;</ph> interface.</source>
          <target state="translated">Любой HTTP-модуль, который подписан <ph id="ph1">&lt;xref:System.Web.HttpApplication&gt;</ph> события необходимо реализовать <ph id="ph2">&lt;xref:System.Web.IHttpModule&gt;</ph> интерфейса.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>Before an event in a custom HTTP module can occur, you must modify the configuration settings in the Web.config file to notify ASP.NET about the HTTP module.</source>
          <target state="translated">Прежде чем может возникнуть событие в пользовательский модуль HTTP, необходимо изменить параметры конфигурации в файле Web.config для уведомления о HTTP-модуля ASP.NET.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The following example shows the appropriate configuration setting in the <ph id="ph1">`httpModules`</ph> section of the Web.config file.</source>
          <target state="translated">В следующем примере показано соответствующий параметр конфигурации в <ph id="ph1">`httpModules`</ph> раздел файла Web.config.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The following setting applies to IIS 7.0 Classic mode and to earlier versions of IIS.</source>
          <target state="translated">Следующий параметр применяется для классического режима IIS 7.0 и более ранних версий IIS.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>The following setting applies to IIS 7.0 Integrated mode.</source>
          <target state="translated">Следующий параметр применяется в интегрированном режиме IIS 7.0.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.HttpApplication" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Web.HttpApplication" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.AcquireRequestState">
          <source>Occurs when ASP.NET acquires the current state (for example, session state) that is associated with the current request.</source>
          <target state="translated">Происходит при достижении ASP.NET текущего состояния (например, состояния сеанса), связанного с текущим запросом.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AcquireRequestState">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> event is raised after the event handler has been created.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> Событие возникает после создания обработчика событий.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AcquireRequestState">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Дополнительные сведения об обработке событий см. в разделе <bpt id="p1">[</bpt>NIB: Потребление событий<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AcquireRequestState">
          <source>For an example of handling the <ph id="ph1">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> event, see the <ph id="ph2">&lt;xref:System.Web.HttpApplication&gt;</ph> overview topic.</source>
          <target state="translated">Пример обработки <ph id="ph1">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> событий, в разделе <ph id="ph2">&lt;xref:System.Web.HttpApplication&gt;</ph> раздела.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>, который начинает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>, который завершает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>, который начинает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>, который завершает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</source>
          <target state="translated">Связанное состояние для добавления в асинхронное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>, который начинает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>, который завершает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>, который начинает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>, который завершает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph>.</source>
          <target state="translated">Связанное состояние для добавления в асинхронное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthenticateRequest" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>, который начинает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>, который завершает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>, который начинает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>, который завершает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</source>
          <target state="translated">Связанное состояние для добавления в асинхронное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AcquireRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.AuthorizeRequest" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>, который начинает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>, который завершает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>, который начинает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>, который завершает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph>.</source>
          <target state="translated">Связанное состояние для добавления в асинхронное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnBeginRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.BeginRequest" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>, который начинает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>, который завершает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>, который начинает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>, который завершает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>.</source>
          <target state="translated">Связанное состояние для добавления в асинхронное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnEndRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnLogRequestAsync%2A&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnLogRequestAsync%2A&gt;</ph> впервые появился в платформе .NET Framework версии 3.5.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в статье <bpt id="p1">[</bpt>Версии и зависимости платформы .NET Framework<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>, который начинает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>, который завершает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnLogRequestAsync%2A&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnLogRequestAsync%2A&gt;</ph> впервые появился в платформе .NET Framework версии 3.5.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в статье <bpt id="p1">[</bpt>Версии и зависимости платформы .NET Framework<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>, который начинает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>, который завершает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>.</source>
          <target state="translated">Связанное состояние для добавления в асинхронное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnMapRequestHandlerAsync%2A&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnMapRequestHandlerAsync%2A&gt;</ph> впервые появился в платформе .NET Framework версии 3.5.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в статье <bpt id="p1">[</bpt>Версии и зависимости платформы .NET Framework<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>, который начинает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>, который завершает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnMapRequestHandlerAsync%2A&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnMapRequestHandlerAsync%2A&gt;</ph> впервые появился в платформе .NET Framework версии 3.5.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в статье <bpt id="p1">[</bpt>Версии и зависимости платформы .NET Framework<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>, который начинает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>, который завершает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph>.</source>
          <target state="translated">Связанное состояние для добавления в асинхронное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.MapRequestHandler" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>, который начинает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>, который завершает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>, который начинает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>, который завершает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph>.</source>
          <target state="translated">Связанное состояние для добавления в асинхронное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAcquireRequestState" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="Overload:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="Overload:System.Web.HttpApplication.AddOnPostAcquireRequestStateAsync" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>, который начинает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>, который завершает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthenticateRequest" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>, который начинает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>, который завершает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated">Связанное состояние для добавления в асинхронное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthenticateRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>, который начинает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>, который завершает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>, который начинает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>, который завершает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</source>
          <target state="translated">Связанное состояние для добавления в асинхронное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostAuthorizeRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostAuthorizeRequest" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnPostLogRequestAsync%2A&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnPostLogRequestAsync%2A&gt;</ph> впервые появился в платформе .NET Framework версии 3.5.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.HttpApplication">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в статье <bpt id="p1">[</bpt>Версии и зависимости платформы .NET Framework<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>, который начинает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>, который завершает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnPostLogRequestAsync%2A&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.AddOnPostLogRequestAsync%2A&gt;</ph> впервые появился в платформе .NET Framework версии 3.5.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в статье <bpt id="p1">[</bpt>Версии и зависимости платформы .NET Framework<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>, который начинает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>, который завершает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph>.</source>
          <target state="translated">Связанное состояние для добавления в асинхронное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostLogRequestAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostLogRequest" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>, который начинает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>, который завершает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>, который начинает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>, который завершает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> collection.</source>
          <target state="translated">Связанное состояние для добавления в асинхронную коллекцию <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostMapRequestHandlerAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostMapRequestHandler" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>, который начинает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>, который завершает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>, который начинает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>, который завершает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated">Связанное состояние для добавления в асинхронное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostReleaseRequestState" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>, который начинает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>, который завершает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>, который начинает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>, который завершает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated">Связанное состояние для добавления в асинхронное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostRequestHandlerExecute" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>, который начинает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>, который завершает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>, который начинает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>, который завершает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated">Связанное состояние для добавления в асинхронное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostResolveRequestCache" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>, который начинает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>, который завершает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the event.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>, который начинает асинхронную обработку события.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>, который завершает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated">Связанное состояние для добавления в асинхронное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPostUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PostUpdateRequestCache" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>, который начинает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>, который завершает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>, который начинает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>, который завершает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> collection.</source>
          <target state="translated">Связанное состояние для добавления в асинхронную коллекцию <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnPreRequestHandlerExecuteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.PreRequestHandlerExecute" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>, который начинает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>, который завершает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>, который начинает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>, который завершает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph>.</source>
          <target state="translated">Связанное состояние для добавления в асинхронное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnReleaseRequestStateAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ReleaseRequestState" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> event handler to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>, который начинает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>, который завершает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> event handler to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>, который начинает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>, который завершает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph>.</source>
          <target state="translated">Связанное состояние для добавления в асинхронное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnResolveRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> event handler to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.ResolveRequestCache" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="T:System.Web.HttpApplication">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>, который начинает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>, который завершает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph> that starts asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.BeginEventHandler" /&gt;</ph>, который начинает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph> that ends asynchronous processing of the <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated">Делегат <ph id="ph1">&lt;see cref="T:System.Web.EndEventHandler" /&gt;</ph>, который завершает асинхронную обработку события <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>The associated state to add to the asynchronous <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph>.</source>
          <target state="translated">Связанное состояние для добавления в асинхронное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.AddOnUpdateRequestCacheAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)">
          <source>Adds the specified <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> event to the collection of asynchronous <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> event handlers for the current request.</source>
          <target state="translated">Добавляет заданное событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> в коллекцию обработчиков асинхронных событий <ph id="ph2">&lt;see cref="E:System.Web.HttpApplication.UpdateRequestCache" /&gt;</ph> текущего запроса.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Application">
          <source>Gets the current state of an application.</source>
          <target state="translated">Получает текущее состояние приложения.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Application">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> for the current request.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Web.HttpApplicationState" /&gt;</ph> для текущего запроса.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Application">
          <source>The current state of an application consists of a key/value dictionary of application-wide objects that you can use to store both .NET Framework objects and scalar values that are related to multiple Web requests from multiple clients.</source>
          <target state="translated">Текущее состояние приложения состоит из словарь ключей и значений объектов уровня приложения, которые можно использовать для хранения объектов платформы .NET Framework и скалярных значений, связанных с несколькими веб-запросы от нескольких клиентов.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.AuthenticateRequest">
          <source>Occurs when a security module has established the identity of the user.</source>
          <target state="translated">Происходит при установлении модулем безопасности удостоверения пользователя.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AuthenticateRequest">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthenticateRequest&gt;</ph> event signals that the configured authentication mechanism has authenticated the current request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthenticateRequest&gt;</ph> Событие сигнализирует о том, что механизм проверки подлинности прошел проверку подлинности текущего запроса.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AuthenticateRequest">
          <source>Subscribing to the <ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthenticateRequest&gt;</ph> event ensures that the request will be authenticated before processing the attached module or event handler.</source>
          <target state="translated">Подписка на <ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthenticateRequest&gt;</ph> событий обеспечивает проверку запроса перед обработкой вложенный модуль или обработчик событий.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AuthenticateRequest">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Дополнительные сведения об обработке событий см. в разделе <bpt id="p1">[</bpt>NIB: Потребление событий<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.AuthorizeRequest">
          <source>Occurs when a security module has verified user authorization.</source>
          <target state="translated">Происходит после проверки модулем безопасности авторизации пользователя.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AuthorizeRequest">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthorizeRequest&gt;</ph> event signals that ASP.NET has authorized the current request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthorizeRequest&gt;</ph> Событие сообщает, что ASP.NET права текущего запроса.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AuthorizeRequest">
          <source>Subscribing to the <ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthorizeRequest&gt;</ph> event ensures that the request will be authenticated and authorized before processing the attached module or event handler.</source>
          <target state="translated">Подписка на <ph id="ph1">&lt;xref:System.Web.HttpApplication.AuthorizeRequest&gt;</ph> событий гарантирует, что запрос будет аутентификации и авторизации перед обработкой вложенный модуль или обработчик событий.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.AuthorizeRequest">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Дополнительные сведения об обработке событий см. в разделе <bpt id="p1">[</bpt>NIB: Потребление событий<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.BeginRequest">
          <source>Occurs as the first event in the HTTP pipeline chain of execution when ASP.NET responds to a request.</source>
          <target state="translated">Происходит в качестве первого события в цепи выполнения конвейера НТТР при ответе ASP.NET на соответствующий запрос.</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.BeginRequest">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.BeginRequest&gt;</ph> event signals the creation of any given new request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.BeginRequest&gt;</ph> Событие сигнализирует о создании любого нового запроса.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.BeginRequest">
          <source>This event is always raised and is always the first event to occur during the processing of a request.</source>
          <target state="translated">Это событие всегда возникает и всегда является первым при обработке запроса.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.BeginRequest">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Дополнительные сведения об обработке событий см. в разделе <bpt id="p1">[</bpt>NIB: Потребление событий<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.CompleteRequest">
          <source>Causes ASP.NET to bypass all events and filtering in the HTTP pipeline chain of execution and directly execute the <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph> event.</source>
          <target state="translated">Приводит к игнорированию в ASP.NET всех событий и фильтрации в цепи выполнения конвейера HTTP и напрямую выполняет событие <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.EndRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Context">
          <source>Gets HTTP-specific information about the current request.</source>
          <target state="translated">Получает сведения о текущем запросе, связанные с HTTP.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Context">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> for the current request.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> для текущего запроса.</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.Dispose">
          <source>Disposes the <ph id="ph1">&lt;see cref="T:System.Web.HttpApplication" /&gt;</ph> instance.</source>
          <target state="translated">Удаляет экземпляр <ph id="ph1">&lt;see cref="T:System.Web.HttpApplication" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.Request%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.HttpApplication.Response%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.HttpApplication.Session%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Web.HttpApplication.Application%2A&gt;</ph> properties are not available for use when the <ph id="ph5">&lt;xref:System.Web.HttpApplication.Dispose%2A&gt;</ph> method executes.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.Request%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.HttpApplication.Response%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.HttpApplication.Session%2A&gt;</ph>, И <ph id="ph4">&lt;xref:System.Web.HttpApplication.Application%2A&gt;</ph> свойства недоступны для использования при <ph id="ph5">&lt;xref:System.Web.HttpApplication.Dispose%2A&gt;</ph> выполнения метода.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.Dispose">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.Dispose%2A&gt;</ph> method calls the <ph id="ph2">&lt;xref:System.Web.IHttpModule.Dispose%2A&gt;</ph> method on each of the registered <ph id="ph3">&lt;xref:System.Web.Configuration.SystemWebSectionGroup.HttpModules%2A&gt;</ph> in the application instance and raises the <ph id="ph4">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.Dispose%2A&gt;</ph> Вызовы метода <ph id="ph2">&lt;xref:System.Web.IHttpModule.Dispose%2A&gt;</ph> метод для каждого зарегистрированного <ph id="ph3">&lt;xref:System.Web.Configuration.SystemWebSectionGroup.HttpModules%2A&gt;</ph> в экземпляре приложения и вызывает <ph id="ph4">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph> событий.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.Dispose">
          <source>When overriding <ph id="ph1">&lt;see cref="M:System.Web.HttpApplication.Dispose" /&gt;</ph> in a derived class, make sure to call the base class's <ph id="ph2">&lt;see cref="M:System.Web.HttpApplication.Dispose" /&gt;</ph> method so that registered delegates receive the event.</source>
          <target state="translated">При переопределении метода <ph id="ph1">&lt;see cref="M:System.Web.HttpApplication.Dispose" /&gt;</ph> в производном классе, убедитесь, что вызов базового класса <ph id="ph2">&lt;see cref="M:System.Web.HttpApplication.Dispose" /&gt;</ph> метод, чтобы зарегистрированные делегаты получили событие.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.Disposed">
          <source>Occurs when the application is disposed.</source>
          <target state="translated">Происходит при удалении приложения.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Disposed">
          <source>When you create a <ph id="ph1">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph> delegate, you identify the method that handles the event.</source>
          <target state="translated">При создании делегата <ph id="ph1">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph> следует определить метод обработки события.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Disposed">
          <source>To associate the event with your event handler, add an instance of the <ph id="ph1">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph> delegate to the event.</source>
          <target state="translated">Чтобы связать событие с обработчиком событий, добавьте экземпляр <ph id="ph1">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph> делегата для события.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Disposed">
          <source>The event handler is called whenever the event occurs, unless you remove the <ph id="ph1">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph> delegate.</source>
          <target state="translated">Обработчик событий вызывается всякий раз, когда происходит событие, пока не будет удален <ph id="ph1">&lt;xref:System.Web.HttpApplication.Disposed&gt;</ph> делегата.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Disposed">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Дополнительные сведения об обработке событий см. в разделе <bpt id="p1">[</bpt>NIB: Потребление событий<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.EndRequest">
          <source>Occurs as the last event in the HTTP pipeline chain of execution when ASP.NET responds to a request.</source>
          <target state="translated">Происходит в качестве последнего события в цепи выполнения конвейера НТТР при ответе ASP.NET на соответствующий запрос.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.EndRequest">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.EndRequest&gt;</ph> event is always raised when the <ph id="ph2">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph> method is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.EndRequest&gt;</ph> Всегда является событие возникает, когда <ph id="ph2">&lt;xref:System.Web.HttpApplication.CompleteRequest%2A&gt;</ph> вызывается метод.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.EndRequest">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Дополнительные сведения об обработке событий см. в разделе <bpt id="p1">[</bpt>NIB: Потребление событий<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.Error">
          <source>Occurs when an unhandled exception is thrown.</source>
          <target state="translated">Возникает при вызове необработанного исключения.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Error">
          <source>The exception that raises the <ph id="ph1">&lt;xref:System.Web.HttpApplication.Error&gt;</ph> event can be accessed by a call to the <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.GetLastError%2A&gt;</ph> method.</source>
          <target state="translated">Исключение, которое вызывает <ph id="ph1">&lt;xref:System.Web.HttpApplication.Error&gt;</ph> событие может быть доступно с помощью вызова <ph id="ph2">&lt;xref:System.Web.HttpServerUtility.GetLastError%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Error">
          <source>If your application generates custom error output, suppress the default error message that is generated by ASP.NET by a call to the <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.ClearError%2A&gt;</ph> method.</source>
          <target state="translated">Если приложение создает выходные данные для настраиваемой ошибки, подавить сообщение по умолчанию, который создается ASP.NET с помощью вызова <ph id="ph1">&lt;xref:System.Web.HttpServerUtility.ClearError%2A&gt;</ph> метод.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Error">
          <source>If your Web application contains XML Web services, you cannot use the <ph id="ph1">&lt;xref:System.Web.HttpApplication.Error&gt;</ph> event for global exception handling of those services.</source>
          <target state="translated">Если веб-приложение содержит веб-служб XML, нельзя использовать <ph id="ph1">&lt;xref:System.Web.HttpApplication.Error&gt;</ph> событий для обработки исключений глобального этих служб.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Error">
          <source>The HTTP handler for XML Web services consumes any exception that occurs in an XML Web service and converts it to a SOAP fault before the <ph id="ph1">&lt;xref:System.Web.HttpApplication.Error&gt;</ph> being called.</source>
          <target state="translated">Обработчик HTTP для веб-служб XML использует любое исключение, которое возникает в веб-служб XML и преобразует его в ошибку SOAP, прежде чем <ph id="ph1">&lt;xref:System.Web.HttpApplication.Error&gt;</ph> вызова.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Error">
          <source>To handle XML Web service exceptions, build a SOAP extension to process Web service exceptions in a custom global exception handler.</source>
          <target state="translated">Чтобы обработать исключения XML-веб-службы, сборки расширение SOAP для обработки исключений веб-службы в пользовательских глобального обработчика исключений.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.Error">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Дополнительные сведения об обработке событий см. в разделе <bpt id="p1">[</bpt>NIB: Потребление событий<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Events">
          <source>Gets the list of event handler delegates that process all application events.</source>
          <target state="translated">Получает список делегатов обработчиков событий, которые обрабатывают все события приложения.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Events">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventHandlerList" /&gt;</ph> that contains the names of the event handler delegates.</source>
          <target state="translated">Список <ph id="ph1">&lt;see cref="T:System.ComponentModel.EventHandlerList" /&gt;</ph>, содержащий имена делегатов обработчиков событий.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> that provides references to intrinsic server objects that are used to service HTTP requests.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph>, который предоставляет ссылки на внутренние объекты сервера, используемые для обработки HTTP-запросов.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>Gets the name of the default output-cache provider that is configured for a Web site.</source>
          <target state="translated">Получает имя поставщика кэша вывода по умолчанию, заданного в конфигурации веб-сайта.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>The name of the default provider.</source>
          <target state="translated">Имя поставщика по умолчанию.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>You can override this method and use it to return the name of any output-cache provider that is configured for a Web site.</source>
          <target state="translated">Можно переопределить этот метод и использовать его для возвращения имени любого поставщика кэша вывода, настроенного для веб-сайта.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>ASP.NET retrieves a reference to the named provider and uses it to store output-cache data for the currently executing request.</source>
          <target state="translated">ASP.NET получает ссылку на именованный поставщик и использует его для хранения данных кэша вывода для текущего выполняемого запроса.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>By default, in ASP.NET, all HTTP responses, rendered pages, and controls use the in-memory output cache.</source>
          <target state="translated">По умолчанию в ASP.NET все HTTP-ответы, отображенные страницы и элементы управления используют кэш вывода в памяти.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>You can change the default output-cache provider that is used for a Web application by specifying a different provider name for <ph id="ph1">`defaultProvider`</ph>.</source>
          <target state="translated">Можно изменить поставщика кэша вывода по умолчанию, используемый для веб-приложения, указав имя другого поставщика <ph id="ph1">`defaultProvider`</ph>.</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>In addition, you can select different output-cache providers for individual control and for individual requests.</source>
          <target state="translated">Кроме того можно выбрать разные поставщики кэша вывода для отдельных элементов управления и для отдельных запросов.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>The easiest way to choose a different output-cache provider for different Web user controls is to do so declaratively by using the new <ph id="ph1">`providerName`</ph> attribute in a page or control directive, as shown in the following example:</source>
          <target state="translated">Самый простой способ выбрать другой поставщик кэша вывода для разных пользовательских элементов управления заключается в осуществлении декларативно с помощью нового <ph id="ph1">`providerName`</ph> атрибута в директиве страницы или элемента управления, как показано в следующем примере:</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>To specify a different output cache provider for an HTTP request, you override this method in the Global.asax file to programmatically specify which provider to use for a specific request.</source>
          <target state="translated">Чтобы указать другого поставщика кэша вывода для HTTP-запроса, переопределите этот метод в файле Global.asax, чтобы программно указать, какой поставщик для определенного запроса.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>For more information, see <bpt id="p1">[</bpt>ASP.NET Caching Overview<ept id="p1">](http://msdn.microsoft.com/library/5ec28012-4972-4dc3-b3e8-9d20401fe11d)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>Общие сведения о кэшировании в ASP.NET<ept id="p1">](http://msdn.microsoft.com/library/5ec28012-4972-4dc3-b3e8-9d20401fe11d)</ept>.</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source>The following example shows how to programmatically specify the cache provider named <ph id="ph1">`DiskCache`</ph> for any HTTP request that goes to the Advanced.aspx page.</source>
          <target state="translated">Приведенный ниже показано, как программно задать поставщик кэша, с именем <ph id="ph1">`DiskCache`</ph> для любого запроса HTTP, переход к странице Advanced.aspx.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.GetOutputCacheProviderName(System.Web.HttpContext)">
          <source><ph id="ph1">&lt;paramref name="context" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or is an empty string.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="context" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph> или является пустой строкой.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> object that contains information about the current Web request.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph>, содержащий сведения о текущем веб-запросе.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)">
          <source>The custom string that specifies which cached response is used to respond to the current request.</source>
          <target state="translated">Пользовательская строка, указывающая, какой именно кэшированный ответ применяется для ответа на текущий запрос.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)">
          <source>Provides an application-wide implementation of the <ph id="ph1">&lt;see cref="P:System.Web.UI.PartialCachingAttribute.VaryByCustom" /&gt;</ph> property.</source>
          <target state="translated">Предоставляет реализацию свойства <ph id="ph1">&lt;see cref="P:System.Web.UI.PartialCachingAttribute.VaryByCustom" /&gt;</ph> уровня приложения.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)">
          <source>If the value of the <ph id="ph1">&lt;paramref name="custom" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="&amp;quot;browser&amp;quot;" /&gt;</ph>, the browser's <ph id="ph3">&lt;see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Type" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Если параметру <ph id="ph1">&lt;paramref name="custom" /&gt;</ph> задано значение <ph id="ph2">&lt;see langword="&amp;quot;browser&amp;quot;" /&gt;</ph>, то свойство <ph id="ph3">&lt;see cref="P:System.Web.Configuration.HttpCapabilitiesBase.Type" /&gt;</ph> браузера, в противном случае — значение <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)">
          <source>You can override <ph id="ph1">&lt;xref:System.Web.HttpApplication.GetVaryByCustomString%2A&gt;</ph> to add a new method for calculating custom vary-by values that are based on the current request.</source>
          <target state="translated">Можно переопределить <ph id="ph1">&lt;xref:System.Web.HttpApplication.GetVaryByCustomString%2A&gt;</ph> Чтобы добавить новый метод для расчета пользовательских переменных, основанных на текущий запрос.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)">
          <source>The implementation has to call the base class for custom values that it does not recognize.</source>
          <target state="translated">Реализацию должен вызывать базовый класс для пользовательских значений, которые не распознает.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.GetVaryByCustomString(System.Web.HttpContext,System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Cache Versions of a Page Using Custom Strings<ept id="p1">](http://msdn.microsoft.com/library/b6c73735-a3cd-4d19-ba4d-0431881b0db0)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>как: версии кэша с помощью страницы настраиваемых строк<ept id="p1">](http://msdn.microsoft.com/library/b6c73735-a3cd-4d19-ba4d-0431881b0db0)</ept>.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.Init">
          <source>Executes custom initialization code after all event handler modules have been added.</source>
          <target state="translated">Выполняет пользовательский код инициализации после добавления всех модулей обработчиков событий.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.Init">
          <source>In a derived class, you can override the <ph id="ph1">&lt;xref:System.Web.HttpApplication.Init%2A&gt;</ph> method to add custom one-time initialization code.</source>
          <target state="translated">В производном классе, можно переопределить <ph id="ph1">&lt;xref:System.Web.HttpApplication.Init%2A&gt;</ph> метод, чтобы добавить пользовательский код однократной инициализации.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.LogRequest">
          <source>Occurs just before ASP.NET performs any logging for the current request.</source>
          <target state="translated">Происходит непосредственно перед выполнением в ASP.NET любой операции с журналом для текущего запроса.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.LogRequest">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph> event is raised even if an error occurs.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph> События даже при возникновении ошибки.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.LogRequest">
          <source>You can provide an event handler for the <ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph> event to provide custom logging for the request.</source>
          <target state="translated">Можно предоставить обработчик событий для <ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph> событий для предоставления настраиваемого протоколирования для запроса.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.LogRequest">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Дополнительные сведения об обработке событий см. в разделе <bpt id="p1">[</bpt>NIB: Потребление событий<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.LogRequest">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph> впервые появился в платформе .NET Framework версии 3.5.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.LogRequest">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в статье <bpt id="p1">[</bpt>Версии и зависимости платформы .NET Framework<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.LogRequest">
          <source>The following example demonstrates how to provide an event handler for the <ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph> event.</source>
          <target state="translated">В следующем примере показано, как предоставить обработчик событий для <ph id="ph1">&lt;xref:System.Web.HttpApplication.LogRequest&gt;</ph> события.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.LogRequest">
          <source>The event handler also handles several other events.</source>
          <target state="translated">Кроме того, обработчик событий обрабатывает несколько событий.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.LogRequest">
          <source>Therefore, the <ph id="ph1">&lt;xref:System.Web.HttpContext.CurrentNotification%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.HttpContext.IsPostNotification%2A&gt;</ph> properties are used to determine what code to run.</source>
          <target state="translated">Таким образом <ph id="ph1">&lt;xref:System.Web.HttpContext.CurrentNotification%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Web.HttpContext.IsPostNotification%2A&gt;</ph> свойства используются для определения того, что код для выполнения.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.MapRequestHandler">
          <source>Occurs when the handler is selected to respond to the request.</source>
          <target state="translated">Происходит при выборе обработчика для ответа на запрос.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.MapRequestHandler">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.MapRequestHandler&gt;</ph> event is used by the ASP.NET infrastructure to determine the request handler for the current request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.MapRequestHandler&gt;</ph> Событий используется инфраструктурой ASP.NET для определения обработчика запроса для текущего запроса.</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.MapRequestHandler">
          <source>For more information, see <bpt id="p1">[</bpt>How to: Register HTTP Handlers<ept id="p1">](http://msdn.microsoft.com/library/d5633f9a-03fb-4ccc-a799-dc67d656fa60)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>как: Регистрация обработчиков HTTP<ept id="p1">](http://msdn.microsoft.com/library/d5633f9a-03fb-4ccc-a799-dc67d656fa60)</ept>.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.MapRequestHandler">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Дополнительные сведения об обработке событий см. в разделе <bpt id="p1">[</bpt>NIB: Потребление событий<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.MapRequestHandler">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.MapRequestHandler&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.MapRequestHandler&gt;</ph> впервые появился в платформе .NET Framework версии 3.5.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.MapRequestHandler">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в статье <bpt id="p1">[</bpt>Версии и зависимости платформы .NET Framework<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Modules">
          <source>Gets the collection of modules for the current application.</source>
          <target state="translated">Получает коллекцию модулей для текущего приложения.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Modules">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.HttpModuleCollection" /&gt;</ph> that contains the names of the modules for the application.</source>
          <target state="translated">Коллекция <ph id="ph1">&lt;see cref="T:System.Web.HttpModuleCollection" /&gt;</ph>, которая содержит имена модулей для приложения.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.OnExecuteRequestStep(System.Action{System.Web.HttpContextBase,System.Action})">
          <source>The callback method.</source>
          <target state="translated">Метод обратного вызова.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.OnExecuteRequestStep(System.Action{System.Web.HttpContextBase,System.Action})">
          <source>Specifies a callback to invoke when a request execution step is executed.</source>
          <target state="translated">Указывает метод обратного вызова, который вызывается при выполнении этапа выполнения запроса.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.OnExecuteRequestStep(System.Action{System.Web.HttpContextBase,System.Action})">
          <source>This method provides extensibility to the ASP.NET pipeline to make it easy for developers to implement features in ambient context scenarios and build libraries that care about ASP.NET execution flow (for example, tracing, profiling, diagnostics, and transactions).</source>
          <target state="translated">Этот метод обеспечивает расширяемость конвейера ASP.NET, чтобы облегчить разработчикам реализации возможностей в окружающем контексте сценариев и создания библиотек, которых интересует потока выполнения ASP.NET (например, трассировку, профилирование, диагностики и транзакций).</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostAcquireRequestState">
          <source>Occurs when the request state (for example, session state) that is associated with the current request has been obtained.</source>
          <target state="translated">Происходит при получении состояния запроса (например, состояния сеанса), связанного с текущим запросом.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAcquireRequestState">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAcquireRequestState&gt;</ph> event is raised after the <ph id="ph2">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> event has occurred.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAcquireRequestState&gt;</ph> Событие вызывается после <ph id="ph2">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> произошло событие.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAcquireRequestState">
          <source>Functionality that subscribes to the <ph id="ph1">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> event can access any data that is processed by the <ph id="ph2">&lt;xref:System.Web.HttpApplication.PostAcquireRequestState&gt;</ph>.</source>
          <target state="translated">Функциональные возможности, которая подписывается на <ph id="ph1">&lt;xref:System.Web.HttpApplication.AcquireRequestState&gt;</ph> событий можно доступ к данным, который обрабатывается средствами <ph id="ph2">&lt;xref:System.Web.HttpApplication.PostAcquireRequestState&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAcquireRequestState">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Дополнительные сведения об обработке событий см. в разделе <bpt id="p1">[</bpt>NIB: Потребление событий<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostAuthenticateRequest">
          <source>Occurs when a security module has established the identity of the user.</source>
          <target state="translated">Происходит при установлении модулем безопасности удостоверения пользователя.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAuthenticateRequest">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest&gt;</ph> event is raised after the <ph id="ph2">&lt;xref:System.Web.HttpApplication.AuthenticateRequest&gt;</ph> event has occurred.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest&gt;</ph> Событие вызывается после <ph id="ph2">&lt;xref:System.Web.HttpApplication.AuthenticateRequest&gt;</ph> произошло событие.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAuthenticateRequest">
          <source>Functionality that subscribes to the <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest&gt;</ph> event can access any data that is processed by the <ph id="ph2">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest&gt;</ph>.</source>
          <target state="translated">Функциональные возможности, которая подписывается на <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest&gt;</ph> событий можно доступ к данным, который обрабатывается средствами <ph id="ph2">&lt;xref:System.Web.HttpApplication.PostAuthenticateRequest&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAuthenticateRequest">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Дополнительные сведения об обработке событий см. в разделе <bpt id="p1">[</bpt>NIB: Потребление событий<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostAuthorizeRequest">
          <source>Occurs when the user for the current request has been authorized.</source>
          <target state="translated">Происходит после проверки прав доступа пользователя для текущего запроса.</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAuthorizeRequest">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthorizeRequest&gt;</ph> event signals that ASP.NET has authorized the current request.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthorizeRequest&gt;</ph> Событие сообщает, что ASP.NET права текущего запроса.</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAuthorizeRequest">
          <source>Subscribing to the <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthorizeRequest&gt;</ph> event ensures authentication and authorization of the request before processing the attached module or event handler.</source>
          <target state="translated">Подписка на <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostAuthorizeRequest&gt;</ph> событий обеспечивает проверку подлинности и авторизацию запроса перед обработкой вложенный модуль или обработчик событий.</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostAuthorizeRequest">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Дополнительные сведения об обработке событий см. в разделе <bpt id="p1">[</bpt>NIB: Потребление событий<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostLogRequest">
          <source>Occurs when ASP.NET has completed processing all the event handlers for the <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph> event.</source>
          <target state="translated">Происходит после завершения приложением ASP.NET выполнения всех обработчиков события <ph id="ph1">&lt;see cref="E:System.Web.HttpApplication.LogRequest" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostLogRequest">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Дополнительные сведения об обработке событий см. в разделе <bpt id="p1">[</bpt>NIB: Потребление событий<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostLogRequest">
          <source><ph id="ph1">&lt;xref:System.Web.HttpApplication.PostLogRequest&gt;</ph> is introduced in the .NET Framework version 3.5.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.PostLogRequest&gt;</ph> впервые появился в платформе .NET Framework версии 3.5.</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostLogRequest">
          <source>For more information, see <bpt id="p1">[</bpt>Versions and Dependencies<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в статье <bpt id="p1">[</bpt>Версии и зависимости платформы .NET Framework<ept id="p1">](~/docs/framework/migration-guide/versions-and-dependencies.md)</ept>.</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostMapRequestHandler">
          <source>Occurs when ASP.NET has mapped the current request to the appropriate event handler.</source>
          <target state="translated">Происходит после сопоставления в приложении ASP.NET текущего запроса с подходящим обработчиком событий.</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostMapRequestHandler">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Дополнительные сведения об обработке событий см. в разделе <bpt id="p1">[</bpt>NIB: Потребление событий<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostReleaseRequestState">
          <source>Occurs when ASP.NET has completed executing all request event handlers and the request state data has been stored.</source>
          <target state="translated">Происходит после завершения в приложении ASP.NET выполнения всех обработчиков событий запроса и сохранения данных состояния запроса.</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostReleaseRequestState">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Дополнительные сведения об обработке событий см. в разделе <bpt id="p1">[</bpt>NIB: Потребление событий<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostRequestHandlerExecute">
          <source>Occurs when the ASP.NET event handler (for example, a page or an XML Web service) finishes execution.</source>
          <target state="translated">Происходит после завершения выполнения обработчика событий приложения ASP.NET (например, страницы или веб-службы XML).</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostRequestHandlerExecute">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Дополнительные сведения об обработке событий см. в разделе <bpt id="p1">[</bpt>NIB: Потребление событий<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostResolveRequestCache">
          <source>Occurs when ASP.NET bypasses execution of the current event handler and allows a caching module to serve a request from the cache.</source>
          <target state="translated">Происходит, если в приложении ASP.NET обходится выполнение текущего обработчика событий и выдается в модуль кэширования разрешение на обслуживание запроса из кэша.</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostResolveRequestCache">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Дополнительные сведения об обработке событий см. в разделе <bpt id="p1">[</bpt>NIB: Потребление событий<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PostUpdateRequestCache">
          <source>Occurs when ASP.NET finishes updating caching modules and storing responses that are used to serve subsequent requests from the cache.</source>
          <target state="translated">Происходит при завершении в приложении ASP.NET обновления модулей кэширования и сохранения ответов, которые используются для обслуживания последующих запросов из кэша.</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostUpdateRequestCache">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostUpdateRequestCache&gt;</ph> event is raised after the <ph id="ph2">&lt;xref:System.Web.HttpApplication.UpdateRequestCache&gt;</ph> event has occurred.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.PostUpdateRequestCache&gt;</ph> Событие вызывается после <ph id="ph2">&lt;xref:System.Web.HttpApplication.UpdateRequestCache&gt;</ph> произошло событие.</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostUpdateRequestCache">
          <source>When the <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostUpdateRequestCache&gt;</ph> is raised, ASP.NET has completed processing code and the content of the cache is finalized.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Web.HttpApplication.PostUpdateRequestCache&gt;</ph> является событие, ASP.NET завершение обработки кода и финализации содержимого кэша.</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PostUpdateRequestCache">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Дополнительные сведения об обработке событий см. в разделе <bpt id="p1">[</bpt>NIB: Потребление событий<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PreRequestHandlerExecute">
          <source>Occurs just before ASP.NET starts executing an event handler (for example, a page or an XML Web service).</source>
          <target state="translated">Происходит непосредственно перед началом выполнения обработчика событий (например страницы или веб-службы XML) в приложении ASP.NET.</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreRequestHandlerExecute">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Дополнительные сведения об обработке событий см. в разделе <bpt id="p1">[</bpt>NIB: Потребление событий<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PreSendRequestContent">
          <source>Occurs just before ASP.NET sends content to the client.</source>
          <target state="translated">Происходит в ASP.NET перед отправкой содержимого клиенту.</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestContent">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.PreSendRequestContent&gt;</ph> event may occur multiple times.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.PreSendRequestContent&gt;</ph> Событие может происходить несколько раз.</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestContent">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Дополнительные сведения об обработке событий см. в разделе <bpt id="p1">[</bpt>NIB: Потребление событий<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestContent">
          <source>Do not use <ph id="ph1">`PreSendRequestContent`</ph> with managed modules that implement <ph id="ph2">`IHttpModule`</ph>.</source>
          <target state="translated">Не используйте <ph id="ph1">`PreSendRequestContent`</ph> с управляемых модулей, которые реализуют <ph id="ph2">`IHttpModule`</ph>.</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestContent">
          <source>Setting these properties can cause issues with asynchronous requests.</source>
          <target state="translated">Настройка этих свойств может вызвать трудности в асинхронных запросов.</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestContent">
          <source>The combination of Application Requested Routing (ARR) and websockets might lead to access violation exceptions that can cause w3wp to crash.</source>
          <target state="translated">Сочетание маршрутизации запрошенный приложений (ARR) и websockets может стать причиной исключения нарушения прав доступа, которые могут вызвать w3wp к сбою.</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestContent">
          <source>For example, iiscore!W3_CONTEXT_BASE::GetIsLastNotification+68 in iiscore.dll has caused an access violation exception (0xC0000005).</source>
          <target state="translated">Например, iiscore! W3_CONTEXT_BASE::GetIsLastNotification + 68 в iiscore.dll вызвала нарушение прав доступа (0xC0000005).</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.PreSendRequestHeaders">
          <source>Occurs just before ASP.NET sends HTTP headers to the client.</source>
          <target state="translated">Происходит в ASP.NET перед отправкой НТТР-заголовков клиенту.</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestHeaders">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Дополнительные сведения об обработке событий см. в разделе <bpt id="p1">[</bpt>NIB: Потребление событий<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestHeaders">
          <source>Do not use <ph id="ph1">`PreSendRequestHeaders`</ph> with managed modules that implement <ph id="ph2">`IHttpModule`</ph>.</source>
          <target state="translated">Не используйте <ph id="ph1">`PreSendRequestHeaders`</ph> с управляемых модулей, которые реализуют <ph id="ph2">`IHttpModule`</ph>.</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestHeaders">
          <source>Setting these properties can cause issues with asynchronous requests.</source>
          <target state="translated">Настройка этих свойств может вызвать трудности в асинхронных запросов.</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestHeaders">
          <source>The combination of Application Requested Routing (ARR) and websockets might lead to access violation exceptions that can cause w3wp to crash.</source>
          <target state="translated">Сочетание маршрутизации запрошенный приложений (ARR) и websockets может стать причиной исключения нарушения прав доступа, которые могут вызвать w3wp к сбою.</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.PreSendRequestHeaders">
          <source>For example, iiscore!W3_CONTEXT_BASE::GetIsLastNotification+68 in iiscore.dll has caused an access violation exception (0xC0000005).</source>
          <target state="translated">Например, iiscore! W3_CONTEXT_BASE::GetIsLastNotification + 68 в iiscore.dll вызвала нарушение прав доступа (0xC0000005).</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.RegisterModule(System.Type)">
          <source>The type of the module.</source>
          <target state="translated">Тип модуля.</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.RegisterModule(System.Type)">
          <source>Registers an application module.</source>
          <target state="translated">Регистрирует модуль приложения.</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.ReleaseRequestState">
          <source>Occurs after ASP.NET finishes executing all request event handlers.</source>
          <target state="translated">Происходит в ASP.NET после завершения выполнения всех обработчиков событий запроса.</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.ReleaseRequestState">
          <source>This event causes state modules to save the current state data.</source>
          <target state="translated">При возникновении этого события модули состояния сохраняют данные текущего состояния.</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.ReleaseRequestState">
          <source>When the <ph id="ph1">&lt;xref:System.Web.HttpApplication.ReleaseRequestState&gt;</ph> event is raised, the application is finished with the request and ASP.NET is signaled to store the request state.</source>
          <target state="translated">При <ph id="ph1">&lt;xref:System.Web.HttpApplication.ReleaseRequestState&gt;</ph> события, приложение готово в запросе и получает сигнал ASP.NET для хранения состояния запроса.</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.ReleaseRequestState">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Дополнительные сведения об обработке событий см. в разделе <bpt id="p1">[</bpt>NIB: Потребление событий<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Request">
          <source>Gets the intrinsic request object for the current request.</source>
          <target state="translated">Получает внутренний объект запроса для текущего запроса.</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Request">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> object that the application is processing.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph>, обрабатываемый приложением.</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Request">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> object is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Web.HttpRequest" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.RequestCompleted">
          <source>Occurs when the managed objects that are associated with the request have been released.</source>
          <target state="translated">Возникает, когда управляемые объекты, связанные с запросом, были освобождены.</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.RequestCompleted">
          <source>The <ph id="ph1">&lt;xref:System.Web.HttpApplication.RequestCompleted&gt;</ph> event is called after all managed modules and handlers in the ASP.NET pipeline have been called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.HttpApplication.RequestCompleted&gt;</ph> Событие вызывается после все управляемые модули и обработчики в конвейере ASP.NET был вызван.</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.RequestCompleted">
          <source>It enables modules to clean up resources after all managed modules and handlers have executed.</source>
          <target state="translated">Она позволяет модулей очистить ресурсы, которые выполнены после того как все управляемые модули и обработчики.</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.RequestCompleted">
          <source>Use this event if you require a specific time to explicitly dispose of managed resources that you created during a request.</source>
          <target state="translated">Используйте это событие, если требуется определенное время, чтобы явно освободить управляемые ресурсы, которые были созданы во время запроса.</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.ResolveRequestCache">
          <source>Occurs when ASP.NET finishes an authorization event to let the caching modules serve requests from the cache, bypassing execution of the event handler (for example, a page or an XML Web service).</source>
          <target state="translated">Происходит в ASP.NET при завершении события авторизации, позволяющего модулям кэширования обрабатывать запросы кэша, игнорируя выполнение обработчика событий (например, страницы или веб-службы XML).</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.ResolveRequestCache">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Дополнительные сведения об обработке событий см. в разделе <bpt id="p1">[</bpt>NIB: Потребление событий<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Response">
          <source>Gets the intrinsic response object for the current request.</source>
          <target state="translated">Получает внутренний объект ответа для текущего запроса.</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Response">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.HttpResponse" /&gt;</ph> object that the application is processing.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Web.HttpResponse" /&gt;</ph>, обрабатываемый приложением.</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Response">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.HttpResponse" /&gt;</ph> object is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Web.HttpResponse" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Server">
          <source>Gets the intrinsic server object for the current request.</source>
          <target state="translated">Получает внутренний объект сервера для текущего запроса.</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Server">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.HttpServerUtility" /&gt;</ph> object that the application is processing.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Web.HttpServerUtility" /&gt;</ph>, обрабатываемый приложением.</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Session">
          <source>Gets the intrinsic session object that provides access to session data.</source>
          <target state="translated">Получает внутренний объект сеанса, предоставляющий доступ к данным сеанса.</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Session">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.SessionState.HttpSessionState" /&gt;</ph> object for the current session.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Web.SessionState.HttpSessionState" /&gt;</ph> для текущего сеанса.</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Session">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.SessionState.HttpSessionState" /&gt;</ph> object is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Web.SessionState.HttpSessionState" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.Site">
          <source>Gets or sets a site interface for an <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph> implementation.</source>
          <target state="translated">Получает или задает интерфейс веб-узла для реализации <ph id="ph1">&lt;see cref="T:System.ComponentModel.IComponent" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.Site">
          <source>An <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph> object that allows a container to manage and communicate with its child components.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.ComponentModel.ISite" /&gt;</ph>, позволяющий контейнеру управлять и взаимодействовать с его дочерними компонентами.</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> that provides references to intrinsic server objects that are used to service HTTP requests.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph>, который предоставляет ссылки на внутренние объекты сервера, используемые для обработки HTTP-запросов.</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph> to call when the asynchronous method call is complete.</source>
          <target state="translated">Метод <ph id="ph1">&lt;see cref="T:System.AsyncCallback" /&gt;</ph>, который вызывается после завершения асинхронного вызова метода.</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>cb<ept id="p1">&lt;/c&gt;</ept> parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the delegate is not called.</source>
          <target state="translated">Если параметр <bpt id="p1">&lt;c&gt;</bpt>cb<ept id="p1">&lt;/c&gt;</ept> имеет значение <ph id="ph1">&lt;see langword="null" /&gt;</ph>, то делегат не вызывается.</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
          <source>Any extra data that is required to process the request.</source>
          <target state="translated">Любые дополнительные данные, которые необходимы для обработки запроса.</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
          <source>Initiates an asynchronous call to the HTTP event handler.</source>
          <target state="translated">Запускает асинхронный вызов обработчика событий НТТР.</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that contains information about the status of the process.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>, содержащий сведения о состоянии процесса.</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph> that contains information about the status of the process.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IAsyncResult" /&gt;</ph>, содержащий сведения о состоянии процесса.</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)">
          <source>Provides an asynchronous process <ph id="ph1">&lt;see langword="End" /&gt;</ph> method when the process finishes.</source>
          <target state="translated">Предоставляет метод <ph id="ph1">&lt;see langword="End" /&gt;</ph> асинхронного процесса после завершения процесса.</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.System#Web#IHttpAsyncHandler#EndProcessRequest(System.IAsyncResult)">
          <source>You can use the <ph id="ph1">&lt;xref:System.Web.HttpApplication.System%23Web%23IHttpAsyncHandler%23EndProcessRequest%2A&gt;</ph> method to raise any exceptions that are caught during the asynchronous process.</source>
          <target state="translated">Можно использовать <ph id="ph1">&lt;xref:System.Web.HttpApplication.System%23Web%23IHttpAsyncHandler%23EndProcessRequest%2A&gt;</ph> метода для вызова исключения, перехваченные во время асинхронного процесса.</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable">
          <source>Gets a <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph> value indicating whether another request can use the <ph id="ph2">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> object.</source>
          <target state="translated">Получает значение типа <ph id="ph1">&lt;see langword="Boolean" /&gt;</ph>, позволяющее определить, может ли другой запрос использовать объект <ph id="ph2">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> object is reusable; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если объект <ph id="ph2">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> доступен для повторного использования, в противном случае — значение <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.System#Web#IHttpHandler#IsReusable">
          <source>To explicitly set the <ph id="ph1">`IsReusable`</ph> property to <ph id="ph2">`true`</ph> or <ph id="ph3">`false`</ph>, provide code that overrides the <ph id="ph4">`IsReusable`</ph> property accessor.</source>
          <target state="translated">Чтобы явно задать <ph id="ph1">`IsReusable`</ph> свойства <ph id="ph2">`true`</ph> или <ph id="ph3">`false`</ph>, предоставить код, который переопределяет <ph id="ph4">`IsReusable`</ph> доступа к свойству.</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph> that provides references to the intrinsic server objects that are used to service HTTP requests.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Web.HttpContext" /&gt;</ph>, предоставляющий ссылки к внутренним серверным объектам, используемым для обслуживания HTTP-запросов.</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
          <source>Enables processing of HTTP Web requests by a custom HTTP handler that implements the <ph id="ph1">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph> interface.</source>
          <target state="translated">Разрешает обработку веб-запросов НТТР пользовательским обработчиком HTTP-данных, который реализует интерфейс <ph id="ph1">&lt;see cref="T:System.Web.IHttpHandler" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
          <source>Classes that inherit the <ph id="ph1">&lt;xref:System.Web.IHttpModule&gt;</ph> and <ph id="ph2">&lt;xref:System.Web.IHttpHandler&gt;</ph> interfaces are provided as a reference to an <ph id="ph3">&lt;xref:System.Web.HttpContext&gt;</ph> object for the current HTTP request.</source>
          <target state="translated">Классы, наследующие <ph id="ph1">&lt;xref:System.Web.IHttpModule&gt;</ph> и <ph id="ph2">&lt;xref:System.Web.IHttpHandler&gt;</ph> интерфейсы предоставляются как ссылка на <ph id="ph3">&lt;xref:System.Web.HttpContext&gt;</ph> объект для текущего HTTP-запроса.</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
          <source>The object provides access to the intrinsic <ph id="ph1">`Request`</ph>, <ph id="ph2">`Response`</ph>, and <ph id="ph3">`Server`</ph> objects for the request.</source>
          <target state="translated">Объект предоставляет доступ к встроенным <ph id="ph1">`Request`</ph>, <ph id="ph2">`Response`</ph>, и <ph id="ph3">`Server`</ph> объектов для запроса.</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Web.HttpApplication.System#Web#IHttpHandler#ProcessRequest(System.Web.HttpContext)">
          <source>In all cases.</source>
          <target state="translated">Во всех случаях.</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="E:System.Web.HttpApplication.UpdateRequestCache">
          <source>Occurs when ASP.NET finishes executing an event handler in order to let caching modules store responses that will be used to serve subsequent requests from the cache.</source>
          <target state="translated">Происходит в ASP.NET при завершении выполнения обработчика событий с целью предоставления возможности модулям кэширования сохранять ответы, которые будут использоваться для обслуживания последующих запросов кэша.</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.HttpApplication.UpdateRequestCache">
          <source>For more information about how to handle events, see <bpt id="p1">[</bpt>NIB: Consuming Events<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</source>
          <target state="translated">Дополнительные сведения об обработке событий см. в разделе <bpt id="p1">[</bpt>NIB: Потребление событий<ept id="p1">](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)</ept>.</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.User">
          <source>Gets the intrinsic user object for the current request.</source>
          <target state="translated">Получает внутренний объект пользователя для текущего запроса.</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.HttpApplication.User">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Principal.IPrincipal" /&gt;</ph> object that represents the current authenticated or anonymous user.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Security.Principal.IPrincipal" /&gt;</ph>, предоставляющий текущего анонимного пользователя или пользователя, для которого была выполнена проверка подлинности.</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="P:System.Web.HttpApplication.User">
          <source>The <ph id="ph1">&lt;see cref="T:System.Security.Principal.IPrincipal" /&gt;</ph> object is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Security.Principal.IPrincipal" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>