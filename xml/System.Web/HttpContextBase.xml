<Type Name="HttpContextBase" FullName="System.Web.HttpContextBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7eced3f09ed80bb5b2027bdd68e4550f0e5d27e4" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class HttpContextBase : IServiceProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit HttpContextBase extends System.Object implements class System.IServiceProvider" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpContextBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class HttpContextBase&#xA;Implements IServiceProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpContextBase abstract : IServiceProvider" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IServiceProvider</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Abstractions, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e1b72-101">Служит базовым классом для классов, содержащих НТТР-данные об отдельном НТТР-запросе.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e1b72-101">Serves as the base class for classes that contain HTTP-specific information about an individual HTTP request.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1b72-102"><xref:System.Web.HttpContextBase> Класс является абстрактным классом, содержащий те же члены, что <xref:System.Web.HttpContext> класса.</span><span class="sxs-lookup"><span data-stu-id="e1b72-102">The <xref:System.Web.HttpContextBase> class is an abstract class that contains the same members as the <xref:System.Web.HttpContext> class.</span></span> <span data-ttu-id="e1b72-103"><xref:System.Web.HttpContextBase> Класс позволяет создавать производные классы, которые представляют собой своего рода <xref:System.Web.HttpContext> класса, но, можно настроить и который работать за пределами конвейера ASP.NET.</span><span class="sxs-lookup"><span data-stu-id="e1b72-103">The <xref:System.Web.HttpContextBase> class enables you to create derived classes that are like the <xref:System.Web.HttpContext> class, but that you can customize and that work outside the ASP.NET pipeline.</span></span> <span data-ttu-id="e1b72-104">При выполнении модульного тестирования производный класс обычно используется для реализации элементов с настраиваемым поведением, тестируемый сценарий, которое тестируется.</span><span class="sxs-lookup"><span data-stu-id="e1b72-104">When you perform unit testing, you typically use a derived class to implement members with customized behavior that fulfills the scenario you are testing.</span></span>  
  
 <span data-ttu-id="e1b72-105">Класс <xref:System.Web.HttpContextWrapper> является производным от класса <xref:System.Web.HttpContextBase>.</span><span class="sxs-lookup"><span data-stu-id="e1b72-105">The <xref:System.Web.HttpContextWrapper> class derives from the <xref:System.Web.HttpContextBase> class.</span></span> <span data-ttu-id="e1b72-106"><xref:System.Web.HttpContextWrapper> Класс служит оболочкой для <xref:System.Web.HttpContext> класса.</span><span class="sxs-lookup"><span data-stu-id="e1b72-106">The <xref:System.Web.HttpContextWrapper> class serves as a wrapper for the <xref:System.Web.HttpContext> class.</span></span> <span data-ttu-id="e1b72-107">Во время выполнения, обычно используется экземпляр <xref:System.Web.HttpContextWrapper> класса для вызова членов на <xref:System.Web.HttpContext> объекта.</span><span class="sxs-lookup"><span data-stu-id="e1b72-107">At run time, you typically use an instance of the <xref:System.Web.HttpContextWrapper> class to call members on the <xref:System.Web.HttpContext> object.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpContextBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpContextBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e1b72-108">Инициализирует класс для использования экземпляром унаследованного класса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-108">Initializes the class for use by an inherited class instance.</span>
          </span>
          <span data-ttu-id="e1b72-109">Этот конструктор может вызываться только унаследованным классом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-109">This constructor can only be called by an inherited class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AcceptWebSocketRequest">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e1b72-110">При реализации в производном классе принимает запрос <see cref="T:System.Web.WebSockets.AspNetWebSocket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-110">When implemented in a derived class, accepts an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AcceptWebSocketRequest">
      <MemberSignature Language="C#" Value="public virtual void AcceptWebSocketRequest (Func&lt;System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task&gt; userFunc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AcceptWebSocketRequest(class System.Func`2&lt;class System.Web.WebSockets.AspNetWebSocketContext, class System.Threading.Tasks.Task&gt; userFunc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AcceptWebSocketRequest (userFunc As Func(Of AspNetWebSocketContext, Task))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AcceptWebSocketRequest(Func&lt;System::Web::WebSockets::AspNetWebSocketContext ^, System::Threading::Tasks::Task ^&gt; ^ userFunc);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userFunc" Type="System.Func&lt;System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="userFunc">
          <span data-ttu-id="e1b72-111">Пользовательская функция.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-111">The user function.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e1b72-112">При реализации в производном классе принимает запрос <see cref="T:System.Web.WebSockets.AspNetWebSocket" />, используя указанную пользовательскую функцию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-112">When implemented in a derived class, accepts an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request using the specified user function.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AcceptWebSocketRequest">
      <MemberSignature Language="C#" Value="public virtual void AcceptWebSocketRequest (Func&lt;System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task&gt; userFunc, System.Web.WebSockets.AspNetWebSocketOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AcceptWebSocketRequest(class System.Func`2&lt;class System.Web.WebSockets.AspNetWebSocketContext, class System.Threading.Tasks.Task&gt; userFunc, class System.Web.WebSockets.AspNetWebSocketOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task},System.Web.WebSockets.AspNetWebSocketOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AcceptWebSocketRequest (userFunc As Func(Of AspNetWebSocketContext, Task), options As AspNetWebSocketOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AcceptWebSocketRequest(Func&lt;System::Web::WebSockets::AspNetWebSocketContext ^, System::Threading::Tasks::Task ^&gt; ^ userFunc, System::Web::WebSockets::AspNetWebSocketOptions ^ options);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="userFunc" Type="System.Func&lt;System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task&gt;" />
        <Parameter Name="options" Type="System.Web.WebSockets.AspNetWebSocketOptions" />
      </Parameters>
      <Docs>
        <param name="userFunc">
          <span data-ttu-id="e1b72-113">Пользовательская функция.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-113">The user function.</span>
          </span>
        </param>
        <param name="options">
          <span data-ttu-id="e1b72-114">Объект параметров.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-114">The options object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e1b72-115">При реализации в производном классе принимает запрос <see cref="T:System.Web.WebSockets.AspNetWebSocket" />, используя указанные пользовательскую функцию и объект параметров.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-115">When implemented in a derived class, accepts an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request using the specified user function and options object.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddError">
      <MemberSignature Language="C#" Value="public virtual void AddError (Exception errorInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddError(class System.Exception errorInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.AddError(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddError (errorInfo As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddError(Exception ^ errorInfo);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="errorInfo" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="errorInfo">
          <span data-ttu-id="e1b72-116">Исключение, добавляемое в коллекцию исключений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-116">The exception to add to the exception collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e1b72-117">При переопределении в производном классе добавляет исключение в коллекцию исключений для текущего HTTP-запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-117">When overridden in a derived class, adds an exception to the exception collection for the current HTTP request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="e1b72-118">Всегда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-118">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AddOnRequestCompleted">
      <MemberSignature Language="C#" Value="public virtual System.Web.ISubscriptionToken AddOnRequestCompleted (Action&lt;System.Web.HttpContextBase&gt; callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.ISubscriptionToken AddOnRequestCompleted(class System.Action`1&lt;class System.Web.HttpContextBase&gt; callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.AddOnRequestCompleted(System.Action{System.Web.HttpContextBase})" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function AddOnRequestCompleted (callback As Action(Of HttpContextBase)) As ISubscriptionToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::ISubscriptionToken ^ AddOnRequestCompleted(Action&lt;System::Web::HttpContextBase ^&gt; ^ callback);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ISubscriptionToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Action&lt;System.Web.HttpContextBase&gt;" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="e1b72-119">Объект контекста HTTP.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-119">The HTTP context object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e1b72-120">При реализации в производном классе создает виртуальное событие, происходящее при завершении HTTP-части запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-120">When implemented in a derived class, raises a virtual event that occurs when the HTTP part of the request is ending.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e1b72-121">Токен подписки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-121">The subscription token.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1b72-122">Это событие возникает перед <xref:System.Web.WebSockets.AspNetWebSocket> начинает соединение.</span><span class="sxs-lookup"><span data-stu-id="e1b72-122">This event occurs before the <xref:System.Web.WebSockets.AspNetWebSocket> connection begins.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AllErrors">
      <MemberSignature Language="C#" Value="public virtual Exception[] AllErrors { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception[] AllErrors" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.AllErrors" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property AllErrors As Exception()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;Exception ^&gt; ^ AllErrors { cli::array &lt;Exception ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1b72-123">При переопределении в производном классе получает массив ошибок (если таковые имеются), которые накопились за время обработки HTTP-запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-123">When overridden in a derived class, gets an array of errors (if any) that accumulated when an HTTP request was being processed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1b72-124">Массив объектов <see cref="T:System.Exception" /> для текущего HTTP-запроса или значение <see langword="null" />, если обработка HTTP-запроса прошла без ошибок.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-124">An array of <see cref="T:System.Exception" /> objects for the current HTTP request, or <see langword="null" /> if no errors accumulated during the HTTP request processing.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="e1b72-125">Всегда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-125">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AllowAsyncDuringSyncStages">
      <MemberSignature Language="C#" Value="public virtual bool AllowAsyncDuringSyncStages { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowAsyncDuringSyncStages" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.AllowAsyncDuringSyncStages" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowAsyncDuringSyncStages As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowAsyncDuringSyncStages { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1b72-126">При реализации в производном классе получает или задает значение, указывающее, разрешены ли асинхронные операции в ходе обработки запроса ASP.NET, когда они не ожидаются.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-126">When implemented in a derived class, gets or sets a value that indicates whether asynchronous operations are allowed during parts of ASP.NET request processing when they are not expected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1b72-127">Значение <see langword="false" />, если платформа ASP.NET создает исключение, когда асинхронный интерфейс API используется в момент, когда это не предусмотрено; в противном случае — значение <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-127">
              <see langword="false" /> if ASP.NET will throw an exception when the asynchronous API is used at a time when it is not expected; otherwise, <see langword="true" />.</span>
          </span>
          <span data-ttu-id="e1b72-128">Значение по умолчанию — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-128">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1b72-129">Дополнительные сведения см. в разделе <xref:System.Web.HttpContext.AllowAsyncDuringSyncStages%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e1b72-129">For more information, see <xref:System.Web.HttpContext.AllowAsyncDuringSyncStages%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Application">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpApplicationStateBase Application { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpApplicationStateBase Application" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Application" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Application As HttpApplicationStateBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpApplicationStateBase ^ Application { System::Web::HttpApplicationStateBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpApplicationStateBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1b72-130">При переопределении в производном классе получает объект <see cref="T:System.Web.HttpApplicationState" /> для текущего HTTP-запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-130">When overridden in a derived class, gets the <see cref="T:System.Web.HttpApplicationState" /> object for the current HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1b72-131">Объект состояния приложения для текущего HTTP-запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-131">The application state object for the current HTTP request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="e1b72-132">Всегда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-132">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ApplicationInstance">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpApplication ApplicationInstance { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpApplication ApplicationInstance" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.ApplicationInstance" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ApplicationInstance As HttpApplication" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpApplication ^ ApplicationInstance { System::Web::HttpApplication ^ get(); void set(System::Web::HttpApplication ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpApplication</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1b72-133">При переопределении в производном классе Возвращает или задает объект <see cref="T:System.Web.HttpApplication" /> для текущего HTTP-запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-133">When overridden in a derived class, gets or sets the <see cref="T:System.Web.HttpApplication" /> object for the current HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1b72-134">Объект для текущего HTTP-запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-134">The object for the current HTTP request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="e1b72-135">Всегда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-135">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AsyncPreloadMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.Configuration.AsyncPreloadModeFlags AsyncPreloadMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Configuration.AsyncPreloadModeFlags AsyncPreloadMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.AsyncPreloadMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AsyncPreloadMode As AsyncPreloadModeFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Configuration::AsyncPreloadModeFlags AsyncPreloadMode { System::Web::Configuration::AsyncPreloadModeFlags get(); void set(System::Web::Configuration::AsyncPreloadModeFlags value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Configuration.AsyncPreloadModeFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1b72-136">При реализации в производном классе получает или задает объект, содержащий флаги, которые относятся к асинхронному режиму предварительной загрузки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-136">When implemented in a derived class, gets or sets an object that contains flags that pertain to asynchronous preload mode.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1b72-137">Объект, содержащий флаги, которые относятся к асинхронному режиму предварительной загрузки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-137">An object that contains flags that pertain to asynchronous preload mode.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cache">
      <MemberSignature Language="C#" Value="public virtual System.Web.Caching.Cache Cache { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Caching.Cache Cache" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Cache" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Cache As Cache" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Caching::Cache ^ Cache { System::Web::Caching::Cache ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Caching.Cache</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1b72-138">При переопределении в производном классе получает объект <see cref="T:System.Web.Caching.Cache" /> для текущего домена приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-138">When overridden in a derived class, gets the <see cref="T:System.Web.Caching.Cache" /> object for the current application domain.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1b72-139">Кэш для текущего домена приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-139">The cache for the current application domain.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="e1b72-140">Всегда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-140">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ClearError">
      <MemberSignature Language="C#" Value="public virtual void ClearError ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ClearError() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.ClearError" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ClearError ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ClearError();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e1b72-141">При переопределении в производном классе удаляет все ошибки текущего HTTP-запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-141">When overridden in a derived class, clears all errors for the current HTTP request.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="e1b72-142">Всегда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-142">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CurrentHandler">
      <MemberSignature Language="C#" Value="public virtual System.Web.IHttpHandler CurrentHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.IHttpHandler CurrentHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.CurrentHandler" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CurrentHandler As IHttpHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::IHttpHandler ^ CurrentHandler { System::Web::IHttpHandler ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1b72-143">При переопределении в производном классе получает объект <see cref="T:System.Web.IHttpHandler" />, представляющий выполняющийся в данный момент обработчик.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-143">When overridden in a derived class, gets the <see cref="T:System.Web.IHttpHandler" /> object that represents the handler that is currently executing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1b72-144">Объект, представляющий выполняющийся в данный момент обработчик.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-144">An object that represents the currently executing handler.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="e1b72-145">Всегда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-145">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CurrentNotification">
      <MemberSignature Language="C#" Value="public virtual System.Web.RequestNotification CurrentNotification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.RequestNotification CurrentNotification" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.CurrentNotification" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CurrentNotification As RequestNotification" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::RequestNotification CurrentNotification { System::Web::RequestNotification get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.RequestNotification</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1b72-146">При переопределении в производном классе получает значение <see cref="T:System.Web.RequestNotification" />, которое указывает событие <see cref="T:System.Web.HttpApplication" />, которое обрабатывается в текущий момент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-146">When overridden in a derived class, gets a <see cref="T:System.Web.RequestNotification" /> value that indicates the <see cref="T:System.Web.HttpApplication" /> event that is currently processing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1b72-147">Одно из значений перечисления <see cref="T:System.Web.RequestNotification" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-147">One of the <see cref="T:System.Web.RequestNotification" /> values.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="e1b72-148">Всегда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-148">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="DisposeOnPipelineCompleted">
      <MemberSignature Language="C#" Value="public virtual System.Web.ISubscriptionToken DisposeOnPipelineCompleted (IDisposable target);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.ISubscriptionToken DisposeOnPipelineCompleted(class System.IDisposable target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.DisposeOnPipelineCompleted(System.IDisposable)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function DisposeOnPipelineCompleted (target As IDisposable) As ISubscriptionToken" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::ISubscriptionToken ^ DisposeOnPipelineCompleted(IDisposable ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.ISubscriptionToken</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.IDisposable" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="e1b72-149">Объект, метод <see cref="M:System.IDisposable.Dispose" /> которого должен вызываться при завершении части соединения <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-149">The object whose <see cref="M:System.IDisposable.Dispose" /> method must be called when the <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection part of the request is completed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e1b72-150">При реализации в производном классе разрешает вызов метода <see cref="M:System.IDisposable.Dispose" /> объекта при завершении части соединения <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> этого запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-150">When implemented in a derived class, enables an object's <see cref="M:System.IDisposable.Dispose" /> method to be called when the <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection part of this request is completed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e1b72-151">Токен подписки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-151">The subscription token.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Error">
      <MemberSignature Language="C#" Value="public virtual Exception Error { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Error" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Error" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Error As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property Exception ^ Error { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1b72-152">При переопределении в производном классе получает первую ошибку (если таковая имеется), возникшую при обработке HTTP-запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-152">When overridden in a derived class, gets the first error (if any) that accumulated when an HTTP request was being processed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1b72-153">Первое исключение для текущего процесса HTTP-запроса или ответа; в противном случае — значение <see langword="null" />, если во время обработки HTTP-запроса ошибки не были накоплены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-153">The first exception for the current HTTP request/response process, or <see langword="null" /> if no errors accumulated during the HTTP request processing.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="e1b72-154">Всегда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-154">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetGlobalResourceObject">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e1b72-155">При переопределении в производном классе получает ресурс на уровне приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-155">When overridden in a derived class, gets an application-level resource.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetGlobalResourceObject">
      <MemberSignature Language="C#" Value="public virtual object GetGlobalResourceObject (string classKey, string resourceKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetGlobalResourceObject(string classKey, string resourceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.GetGlobalResourceObject(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlobalResourceObject (classKey As String, resourceKey As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetGlobalResourceObject(System::String ^ classKey, System::String ^ resourceKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="classKey" Type="System.String" />
        <Parameter Name="resourceKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="classKey">
          <span data-ttu-id="e1b72-156">Строка, представляющая свойство <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> запрошенного объекта ресурса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-156">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> property of the requested resource object.</span>
          </span>
        </param>
        <param name="resourceKey">
          <span data-ttu-id="e1b72-157">Строка, представляющая свойство <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> запрошенного объекта ресурса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-157">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> property of the requested resource object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e1b72-158">При переопределении в производном классе получает объект ресурса на уровне приложения на основе указанных свойств <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> и <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-158">When overridden in a derived class, gets an application-level resource object based on the specified <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> and <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> properties.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e1b72-159">Запрошенный объект ресурса на уровне приложения или значение <see langword="null" />, если соответствующий объект ресурса не найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-159">The requested application-level resource object, or <see langword="null" /> if no matching resource object is found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="e1b72-160">Всегда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-160">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetGlobalResourceObject">
      <MemberSignature Language="C#" Value="public virtual object GetGlobalResourceObject (string classKey, string resourceKey, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetGlobalResourceObject(string classKey, string resourceKey, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.GetGlobalResourceObject(System.String,System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGlobalResourceObject (classKey As String, resourceKey As String, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetGlobalResourceObject(System::String ^ classKey, System::String ^ resourceKey, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="classKey" Type="System.String" />
        <Parameter Name="resourceKey" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="classKey">
          <span data-ttu-id="e1b72-161">Строка, представляющая свойство <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> запрошенного объекта ресурса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-161">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> property of the requested resource object.</span>
          </span>
        </param>
        <param name="resourceKey">
          <span data-ttu-id="e1b72-162">Строка, представляющая свойство <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> запрошенного объекта ресурса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-162">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> property of the requested resource object.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="e1b72-163">Строка, представляющая объект <see cref="T:System.Globalization.CultureInfo" /> запрошенного ресурса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-163">A string that represents the <see cref="T:System.Globalization.CultureInfo" /> object of the requested resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e1b72-164">При переопределении в производном классе получает объект ресурса на уровне приложения на основе указанных свойств <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> и <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> и объекта <see cref="T:System.Globalization.CultureInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-164">When overridden in a derived class, gets an application-level resource object based on the specified <see cref="P:System.Web.Compilation.ResourceExpressionFields.ClassKey" /> and <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> properties, and on the <see cref="T:System.Globalization.CultureInfo" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e1b72-165">Запрошенный объект ресурса на уровне приложения, который локализован для указанного языка и региональных параметров, или значение <see langword="null" />, если соответствующий объект ресурса не найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-165">The requested application-level resource object, which is localized for the specified culture, or <see langword="null" /> if no matching resource object is found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="e1b72-166">Всегда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-166">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLocalResourceObject">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e1b72-167">При переопределении в производном классе получает ресурс на уровне страницы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-167">When overridden in a derived class, gets a page-level resource.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLocalResourceObject">
      <MemberSignature Language="C#" Value="public virtual object GetLocalResourceObject (string virtualPath, string resourceKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetLocalResourceObject(string virtualPath, string resourceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.GetLocalResourceObject(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLocalResourceObject (virtualPath As String, resourceKey As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetLocalResourceObject(System::String ^ virtualPath, System::String ^ resourceKey);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="resourceKey" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="e1b72-168">Строка, представляющая свойство <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> объекта локального ресурса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-168">A string that represents the <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> property of the local resource object.</span>
          </span>
        </param>
        <param name="resourceKey">
          <span data-ttu-id="e1b72-169">Строка, представляющая свойство <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> запрошенного объекта ресурса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-169">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> property of the requested resource object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e1b72-170">При переопределении в производном классе получает объект ресурса на уровне страницы на основе указанных свойств <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> и <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-170">When overridden in a derived class, gets a page-level resource object based on the specified <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> and <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> properties.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e1b72-171">Запрошенный объект ресурса на уровне страницы или значение <see langword="null" />, если соответствующий объект ресурса не найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-171">The requested page-level resource object, or <see langword="null" /> if no matching resource object is found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="e1b72-172">Всегда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-172">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetLocalResourceObject">
      <MemberSignature Language="C#" Value="public virtual object GetLocalResourceObject (string virtualPath, string resourceKey, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetLocalResourceObject(string virtualPath, string resourceKey, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.GetLocalResourceObject(System.String,System.String,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetLocalResourceObject (virtualPath As String, resourceKey As String, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetLocalResourceObject(System::String ^ virtualPath, System::String ^ resourceKey, System::Globalization::CultureInfo ^ culture);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="resourceKey" Type="System.String" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="e1b72-173">Строка, представляющая свойство <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> объекта локального ресурса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-173">A string that represents the <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> property of the local resource object.</span>
          </span>
        </param>
        <param name="resourceKey">
          <span data-ttu-id="e1b72-174">Строка, представляющая свойство <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> запрошенного объекта ресурса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-174">A string that represents the <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> property of the requested resource object.</span>
          </span>
        </param>
        <param name="culture">
          <span data-ttu-id="e1b72-175">Строка, представляющая объект <see cref="T:System.Globalization.CultureInfo" /> запрошенного объекта ресурса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-175">A string that represents the <see cref="T:System.Globalization.CultureInfo" /> object of the requested resource object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e1b72-176">При переопределении в производном классе получает объект ресурса на уровне страницы на основе указанных свойств <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> и <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> и объекта <see cref="T:System.Globalization.CultureInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-176">When overridden in a derived class, gets a page-level resource object based on the specified <see cref="P:System.Web.Compilation.ExpressionBuilderContext.VirtualPath" /> and <see cref="P:System.Web.Compilation.ResourceExpressionFields.ResourceKey" /> properties, and on the <see cref="T:System.Globalization.CultureInfo" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e1b72-177">Запрошенный объект локального ресурса, который локализован для указанного языка и региональных параметров, или значение <see langword="null" />, если соответствующий объект ресурса не найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-177">The requested local resource object, which is localized for the specified culture, or <see langword="null" /> if no matching resource object is found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="e1b72-178">Всегда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-178">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetSection">
      <MemberSignature Language="C#" Value="public virtual object GetSection (string sectionName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetSection(string sectionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.GetSection(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetSection (sectionName As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetSection(System::String ^ sectionName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sectionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="sectionName">
          <span data-ttu-id="e1b72-179">Путь к разделу конфигурации (в формате XPath) и имя элемента конфигурации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-179">The configuration section path (in XPath format) and the configuration element name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e1b72-180">При переопределении в производном классе получает указанный раздел конфигурации для конфигурации текущего приложения, заданной по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-180">When overridden in a derived class, gets the specified configuration section of the current application's default configuration.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e1b72-181">Указанный раздел или значение <see langword="null" />, если раздел не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-181">The specified section, or <see langword="null" /> if the section does not exist.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="e1b72-182">Всегда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-182">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetService">
      <MemberSignature Language="C#" Value="public virtual object GetService (Type serviceType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetService(class System.Type serviceType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.GetService(System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetService (serviceType As Type) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetService(Type ^ serviceType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="serviceType">
          <span data-ttu-id="e1b72-183">Тип объекта службы для получения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-183">The type of service object to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e1b72-184">При переопределении в производном классе возвращает объект для текущего типа службы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-184">When overridden in a derived class, returns an object for the current service type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e1b72-185">Текущий тип службы или значение <see langword="null" />, если служба не найдена.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-185">The current service type, or <see langword="null" /> if no service is found.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="e1b72-186">Всегда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-186">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Handler">
      <MemberSignature Language="C#" Value="public virtual System.Web.IHttpHandler Handler { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.IHttpHandler Handler" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Handler" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Handler As IHttpHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::IHttpHandler ^ Handler { System::Web::IHttpHandler ^ get(); void set(System::Web::IHttpHandler ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1b72-187">При переопределении в производном классе Возвращает или задает объект <see cref="T:System.Web.IHttpHandler" />, отвечающий за обработку HTTP-запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-187">When overridden in a derived class, gets or sets the <see cref="T:System.Web.IHttpHandler" /> object that is responsible for processing the HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1b72-188">Объект, отвечающий за обработку HTTP-запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-188">The object that is responsible for processing the HTTP request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="e1b72-189">Всегда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-189">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsCustomErrorEnabled">
      <MemberSignature Language="C#" Value="public virtual bool IsCustomErrorEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCustomErrorEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.IsCustomErrorEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsCustomErrorEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsCustomErrorEnabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1b72-190">При переопределении в производном классе получает значение, указывающее, включены ли настраиваемые ошибки для текущего HTTP-запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-190">When overridden in a derived class, gets a value that indicates whether custom errors are enabled for the current HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1b72-191">Значение <see langword="true" />, если настраиваемые ошибки включены; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-191">
              <see langword="true" /> if custom errors are enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="e1b72-192">Всегда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-192">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDebuggingEnabled">
      <MemberSignature Language="C#" Value="public virtual bool IsDebuggingEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDebuggingEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.IsDebuggingEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsDebuggingEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsDebuggingEnabled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1b72-193">При переопределении в производном классе получает значение, указывающее, находится ли текущий HTTP-запрос в режиме отладки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-193">When overridden in a derived class, gets a value that indicates whether the current HTTP request is in debug mode.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1b72-194">Значение <see langword="true" />, если запрос выполняется в режиме отладки; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-194">
              <see langword="true" /> if the request is in debug mode; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="e1b72-195">Всегда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-195">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsPostNotification">
      <MemberSignature Language="C#" Value="public virtual bool IsPostNotification { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPostNotification" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.IsPostNotification" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsPostNotification As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsPostNotification { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1b72-196">При переопределении в производном классе получает значение, указывающее, завершена ли обработка события <see cref="T:System.Web.HttpApplication" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-196">When overridden in a derived class, gets a value that indicates whether an <see cref="T:System.Web.HttpApplication" /> event has finished processing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1b72-197">
            <see langword="true" />, если обработка события завершена; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-197">
              <see langword="true" /> if the event has finished processing; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="e1b72-198">Всегда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-198">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsWebSocketRequest">
      <MemberSignature Language="C#" Value="public virtual bool IsWebSocketRequest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWebSocketRequest" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.IsWebSocketRequest" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsWebSocketRequest As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsWebSocketRequest { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1b72-199">При реализации в производном классе получает значение, указывающее, является ли запрос запросом подключения <see cref="T:System.Web.WebSockets.AspNetWebSocket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-199">When implemented in a derived class, gets a value that indicates whether the request is an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1b72-200">Значение <see langword="true" />, если запрос является запросом <see cref="T:System.Web.WebSockets.AspNetWebSocket" />; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-200">
              <see langword="true" /> if the request is an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWebSocketRequestUpgrading">
      <MemberSignature Language="C#" Value="public virtual bool IsWebSocketRequestUpgrading { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWebSocketRequestUpgrading" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.IsWebSocketRequestUpgrading" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsWebSocketRequestUpgrading As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsWebSocketRequestUpgrading { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1b72-201">При реализации в производном классе получает значение, указывающее, обновляется ли соединение HTTP до соединения <see cref="T:System.Web.WebSockets.AspNetWebSocket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-201">When implemented in a derived class, gets a value that indicates whether the connection is upgrading from an HTTP connection to an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1b72-202">Значение <see langword="true" />, если соединение обновляется; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-202">
              <see langword="true" /> if the connection is upgrading; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public virtual System.Collections.IDictionary Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IDictionary Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Items" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Items As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::IDictionary ^ Items { System::Collections::IDictionary ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1b72-203">При переопределении в производном классе получает коллекцию ключей и значений, которую можно использовать для систематизации данных и обмена ими между модулем и обработчиком во время выполнения HTTP-запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-203">When overridden in a derived class, gets a key/value collection that can be used to organize and share data between a module and a handler during an HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1b72-204">Коллекция ключей и значений, предоставляющая доступ к отдельному значению в коллекции с помощью указанного ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-204">A key/value collection that provides access to an individual value in the collection by using a specified key.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="e1b72-205">Всегда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-205">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="PageInstrumentation">
      <MemberSignature Language="C#" Value="public virtual System.Web.Instrumentation.PageInstrumentationService PageInstrumentation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Instrumentation.PageInstrumentationService PageInstrumentation" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.PageInstrumentation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PageInstrumentation As PageInstrumentationService" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Instrumentation::PageInstrumentationService ^ PageInstrumentation { System::Web::Instrumentation::PageInstrumentationService ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Instrumentation.PageInstrumentationService</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1b72-206">При реализации в производном классе получает ссылку на экземпляр службы инструментария страниц для данного запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-206">When implemented in a derived class, gets a reference to the page-instrumentation service instance for this request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1b72-207">Экземпляр службы инструментирования страниц для данного запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-207">The page-instrumentation service instance for this request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousHandler">
      <MemberSignature Language="C#" Value="public virtual System.Web.IHttpHandler PreviousHandler { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.IHttpHandler PreviousHandler" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.PreviousHandler" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PreviousHandler As IHttpHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::IHttpHandler ^ PreviousHandler { System::Web::IHttpHandler ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1b72-208">При переопределении в производном классе получает объект <see cref="T:System.Web.IHttpHandler" /> для родительского обработчика.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-208">When overridden in a derived class, gets the <see cref="T:System.Web.IHttpHandler" /> object for the parent handler.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1b72-209">Объект <see cref="T:System.Web.IHttpHandler" />, представляющий родительский обработчик, или значение <see langword="null" />, если родительский обработчик не найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-209">An <see cref="T:System.Web.IHttpHandler" /> object that represents the parent handler, or <see langword="null" /> if no parent handler was found.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="e1b72-210">Всегда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-210">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Profile">
      <MemberSignature Language="C#" Value="public virtual System.Web.Profile.ProfileBase Profile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Profile.ProfileBase Profile" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Profile" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Profile As ProfileBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Profile::ProfileBase ^ Profile { System::Web::Profile::ProfileBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Profile.ProfileBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1b72-211">При переопределении в производном классе получает объект <see cref="T:System.Web.Profile.ProfileBase" /> для текущего профиля пользователя.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-211">When overridden in a derived class, gets the <see cref="T:System.Web.Profile.ProfileBase" /> object for the current user profile.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1b72-212">Объект, представляющий текущий профиль пользователя, если в файле конфигурации приложения определены свойства профиля и для приложения разрешено использование профилей; в противном случае — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-212">If the profile properties are defined in the application configuration file and profiles are enabled for the application, an object that represents the current user profile; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="e1b72-213">Всегда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-213">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemapHandler">
      <MemberSignature Language="C#" Value="public virtual void RemapHandler (System.Web.IHttpHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemapHandler(class System.Web.IHttpHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.RemapHandler(System.Web.IHttpHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemapHandler (handler As IHttpHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemapHandler(System::Web::IHttpHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handler" Type="System.Web.IHttpHandler" />
      </Parameters>
      <Docs>
        <param name="handler">
          <span data-ttu-id="e1b72-214">Объект, который обрабатывает запрос.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-214">The object that should process the request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e1b72-215">При переопределении в производном классе задает обработчик для запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-215">When overridden in a derived class, specifies a handler for the request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1b72-216">Если задать `handler` для `null`, обработчик по умолчанию используется для обработки запроса.</span><span class="sxs-lookup"><span data-stu-id="e1b72-216">If you set `handler` to `null`, the default handler is used to process the request.</span></span> <span data-ttu-id="e1b72-217">Можно задать `handler` обработчик синхронный или асинхронный обработчик.</span><span class="sxs-lookup"><span data-stu-id="e1b72-217">You can set `handler` to either an asynchronous handler or to an synchronous handler.</span></span> <span data-ttu-id="e1b72-218">Необходимо реализовать обработчик <xref:System.Web.IHttpHandler> интерфейса.</span><span class="sxs-lookup"><span data-stu-id="e1b72-218">The handler must implement the <xref:System.Web.IHttpHandler> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="e1b72-219">Производный тип не может реализовать данный метод.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-219">A derived type fails to implement this method.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Request">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpRequestBase Request { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpRequestBase Request" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Request" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Request As HttpRequestBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpRequestBase ^ Request { System::Web::HttpRequestBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpRequestBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1b72-220">При переопределении в производном классе получает объект <see cref="T:System.Web.HttpRequest" /> для текущего HTTP-запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-220">When overridden in a derived class, gets the <see cref="T:System.Web.HttpRequest" /> object for the current HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1b72-221">Текущий HTTP-запрос.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-221">The current HTTP request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="e1b72-222">Всегда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-222">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Response">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpResponseBase Response { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpResponseBase Response" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Response" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Response As HttpResponseBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpResponseBase ^ Response { System::Web::HttpResponseBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpResponseBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1b72-223">При переопределении в производном классе получает объект <see cref="T:System.Web.HttpResponse" /> для текущего HTTP-ответа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-223">When overridden in a derived class, gets the <see cref="T:System.Web.HttpResponse" /> object for the current HTTP response.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1b72-224">Текущий HTTP-ответ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-224">The current HTTP response.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="e1b72-225">Всегда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-225">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="RewritePath">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e1b72-226">При переопределении в производном классе назначает внутренний путь перезаписи, благодаря которому URL-адрес запроса может отличаться от внутреннего пути к ресурсу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-226">When overridden in a derived class, assigns an internal rewrite path, which lets the request URL differ from the internal path of the resource.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="RewritePath">
      <MemberSignature Language="C#" Value="public virtual void RewritePath (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RewritePath(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.RewritePath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RewritePath (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RewritePath(System::String ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="e1b72-227">Замещающий путь.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-227">The replacement path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e1b72-228">При переопределении в производном классе перезаписывает URL-адрес, используя заданный путь.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-228">When overridden in a derived class, rewrites the URL by using the specified path.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="e1b72-229">Всегда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-229">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RewritePath">
      <MemberSignature Language="C#" Value="public virtual void RewritePath (string path, bool rebaseClientPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RewritePath(string path, bool rebaseClientPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.RewritePath(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RewritePath (path As String, rebaseClientPath As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RewritePath(System::String ^ path, bool rebaseClientPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="rebaseClientPath" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="e1b72-230">Замещающий путь.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-230">The replacement path.</span>
          </span>
        </param>
        <param name="rebaseClientPath">
          <span data-ttu-id="e1b72-231">Значение <see langword="true" /> для сброса виртуального пути; значение <see langword="false" /> для сохранения виртуального пути без изменений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-231">
              <see langword="true" /> to reset the virtual path; <see langword="false" /> to keep the virtual path unchanged.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e1b72-232">При переопределении в производном классе перезаписывает URL-адрес, используя заданный путь и значение, которое указывает, был ли изменен виртуальный путь к ресурсам сервера.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-232">When overridden in a derived class, rewrites the URL by using the specified path and a value that specifies whether the virtual path for server resources is modified.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="e1b72-233">Всегда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-233">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RewritePath">
      <MemberSignature Language="C#" Value="public virtual void RewritePath (string filePath, string pathInfo, string queryString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RewritePath(string filePath, string pathInfo, string queryString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.RewritePath(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RewritePath (filePath As String, pathInfo As String, queryString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RewritePath(System::String ^ filePath, System::String ^ pathInfo, System::String ^ queryString);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="pathInfo" Type="System.String" />
        <Parameter Name="queryString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filePath">
          <span data-ttu-id="e1b72-234">Замещающий путь.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-234">The replacement path.</span>
          </span>
        </param>
        <param name="pathInfo">
          <span data-ttu-id="e1b72-235">Дополнительные сведения о пути для ресурса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-235">Additional path information for a resource.</span>
          </span>
        </param>
        <param name="queryString">
          <span data-ttu-id="e1b72-236">Строка запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-236">The request query string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e1b72-237">При переопределении в производном классе перезаписывает URL-адрес, используя указанный путь, сведения о пути и данные строки запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-237">When overridden in a derived class, rewrites the URL by using the specified path, path information, and query string information.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="e1b72-238">Всегда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-238">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RewritePath">
      <MemberSignature Language="C#" Value="public virtual void RewritePath (string filePath, string pathInfo, string queryString, bool setClientFilePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RewritePath(string filePath, string pathInfo, string queryString, bool setClientFilePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.RewritePath(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RewritePath (filePath As String, pathInfo As String, queryString As String, setClientFilePath As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RewritePath(System::String ^ filePath, System::String ^ pathInfo, System::String ^ queryString, bool setClientFilePath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
        <Parameter Name="pathInfo" Type="System.String" />
        <Parameter Name="queryString" Type="System.String" />
        <Parameter Name="setClientFilePath" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="filePath">
          <span data-ttu-id="e1b72-239">Замещающий путь.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-239">The replacement path.</span>
          </span>
        </param>
        <param name="pathInfo">
          <span data-ttu-id="e1b72-240">Дополнительные сведения о пути для ресурса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-240">Additional path information for a resource.</span>
          </span>
        </param>
        <param name="queryString">
          <span data-ttu-id="e1b72-241">Строка запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-241">The request query string.</span>
          </span>
        </param>
        <param name="setClientFilePath">
          <span data-ttu-id="e1b72-242">Значение <see langword="true" /> для присвоения пути к файлу, используемому для ресурсов клиента, в качестве значения параметра <c>filePath</c>; в противном случае значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-242">
              <see langword="true" /> to set the file path used for client resources to the value of the <c>filePath</c> parameter; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e1b72-243">Пи переопределении в производном классе перезаписывает URL-адрес, используя заданный путь, сведения о пути, данные строки запроса и значение, которое указывает, был ли задан путь к файлу клиента как путь перезаписи.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-243">When overridden in a derived class, rewrites the URL by using the specified path, path information, query string information, and a value that specifies whether the client file path is set to the rewrite path.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="e1b72-244">Всегда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-244">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Server">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpServerUtilityBase Server { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpServerUtilityBase Server" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Server" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Server As HttpServerUtilityBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpServerUtilityBase ^ Server { System::Web::HttpServerUtilityBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpServerUtilityBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1b72-245">При переопределении в производном классе получает объект <see cref="T:System.Web.HttpServerUtility" />, предоставляющий методы, которые используются при обработке веб-запросов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-245">When overridden in a derived class, gets the <see cref="T:System.Web.HttpServerUtility" /> object that provides methods that are used when Web requests are being processed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1b72-246">Вспомогательный объект сервера для текущего HTTP-запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-246">The server utility object for the current HTTP request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="e1b72-247">Всегда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-247">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Session">
      <MemberSignature Language="C#" Value="public virtual System.Web.HttpSessionStateBase Session { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpSessionStateBase Session" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Session" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Session As HttpSessionStateBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::HttpSessionStateBase ^ Session { System::Web::HttpSessionStateBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpSessionStateBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1b72-248">При переопределении в производном классе получает объект <see cref="T:System.Web.SessionState.HttpSessionState" /> для текущего HTTP-запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-248">When overridden in a derived class, gets the <see cref="T:System.Web.SessionState.HttpSessionState" /> object for the current HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1b72-249">Объект состояния сеанса для текущего HTTP-запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-249">The session-state object for the current HTTP request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="e1b72-250">Всегда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-250">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SetSessionStateBehavior">
      <MemberSignature Language="C#" Value="public virtual void SetSessionStateBehavior (System.Web.SessionState.SessionStateBehavior sessionStateBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetSessionStateBehavior(valuetype System.Web.SessionState.SessionStateBehavior sessionStateBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpContextBase.SetSessionStateBehavior(System.Web.SessionState.SessionStateBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetSessionStateBehavior(System::Web::SessionState::SessionStateBehavior sessionStateBehavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sessionStateBehavior" Type="System.Web.SessionState.SessionStateBehavior" />
      </Parameters>
      <Docs>
        <param name="sessionStateBehavior">
          <span data-ttu-id="e1b72-251">Одно из значений перечисления, которое задает необходимый тип поведения состояния сеанса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-251">One of the enumeration values that specifies what type of session state behavior is required.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e1b72-252">При переопределении в производном классе задает тип поведения состояния сеанса, который необходим для поддержки HTTP-запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-252">When overridden in a derived class, sets the type of session state behavior that is required to support an HTTP request.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1b72-253"><xref:System.Web.HttpContextBase.SetSessionStateBehavior%2A> Метод предоставляет базовый метод, который должен быть реализован с помощью классов, наследующих от данного типа.</span><span class="sxs-lookup"><span data-stu-id="e1b72-253">The <xref:System.Web.HttpContextBase.SetSessionStateBehavior%2A> method provides a base method that must be implemented by classes that inherit from this type.</span></span> <span data-ttu-id="e1b72-254">В этот метод реализуется ASP.NET <xref:System.Web.HttpContextWrapper> и <xref:System.Web.HttpContext> классы.</span><span class="sxs-lookup"><span data-stu-id="e1b72-254">ASP.NET implements this method in the <xref:System.Web.HttpContextWrapper> and <xref:System.Web.HttpContext> classes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="e1b72-255">Производный тип не может реализовать данный метод.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-255">A derived type fails to implement this method.</span>
          </span>
        </exception>
        <altmember cref="M:System.Web.HttpContext.SetSessionStateBehavior(System.Web.SessionState.SessionStateBehavior)" />
      </Docs>
    </Member>
    <Member MemberName="SkipAuthorization">
      <MemberSignature Language="C#" Value="public virtual bool SkipAuthorization { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SkipAuthorization" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.SkipAuthorization" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SkipAuthorization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SkipAuthorization { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1b72-256">При переопределении в производном классе Возвращает или задает значение, указывающее, должен ли объект <see cref="T:System.Web.Security.UrlAuthorizationModule" /> пропускать проверку подлинности текущего запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-256">When overridden in a derived class, gets or sets a value that specifies whether the <see cref="T:System.Web.Security.UrlAuthorizationModule" /> object should skip the authorization check for the current request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1b72-257">Значение <see langword="true" />, если объект <see cref="T:System.Web.Security.UrlAuthorizationModule" /> должен пропускать проверку авторизации; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-257">
              <see langword="true" /> if <see cref="T:System.Web.Security.UrlAuthorizationModule" /> should skip the authorization check; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="e1b72-258">Всегда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-258">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ThreadAbortOnTimeout">
      <MemberSignature Language="C#" Value="public virtual bool ThreadAbortOnTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThreadAbortOnTimeout" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.ThreadAbortOnTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ThreadAbortOnTimeout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ThreadAbortOnTimeout { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1b72-259">При реализации в производном классе получает или задает значение, указывающее, должна ли исполняющая среда ASP.NET вызывать метод <see cref="M:System.Threading.Thread.Abort" /> в потоке, обслуживающем этот запрос, при истечении времени ожидания для запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-259">When implemented in a derived class, gets or sets a value that specifies whether the ASP.NET runtime should call <see cref="M:System.Threading.Thread.Abort" /> on the thread that is servicing this request when the request times out.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1b72-260">
            <see langword="true" /> если метод <see cref="M:System.Threading.Thread.Abort" /> будет вызываться, когда истекает время ожидания потока; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-260">
              <see langword="true" /> if <see cref="M:System.Threading.Thread.Abort" /> will be called when the thread times out; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e1b72-261">Значение по умолчанию: <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-261">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1b72-262">Дополнительные сведения см. в разделе <xref:System.Web.HttpContext.ThreadAbortOnTimeout%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e1b72-262">For more information, see <xref:System.Web.HttpContext.ThreadAbortOnTimeout%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Timestamp">
      <MemberSignature Language="C#" Value="public virtual DateTime Timestamp { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTime Timestamp" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Timestamp" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Timestamp As DateTime" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTime Timestamp { DateTime get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1b72-263">При переопределении в производном классе получает начальную метку времени текущего HTTP-запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-263">When overridden in a derived class, gets the initial timestamp of the current HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1b72-264">Метка времени текущего HTTP-запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-264">The timestamp of the current HTTP request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="e1b72-265">Всегда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-265">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Trace">
      <MemberSignature Language="C#" Value="public virtual System.Web.TraceContext Trace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.TraceContext Trace" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.Trace" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Trace As TraceContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::TraceContext ^ Trace { System::Web::TraceContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.TraceContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1b72-266">При переопределении в производном классе получает объект <see cref="T:System.Web.TraceContext" /> для текущего HTTP-ответа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-266">When overridden in a derived class, gets the <see cref="T:System.Web.TraceContext" /> object for the current HTTP response.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1b72-267">Объект трассировки для текущего HTTP-ответа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-267">The trace object for the current HTTP response.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="e1b72-268">Всегда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-268">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="User">
      <MemberSignature Language="C#" Value="public virtual System.Security.Principal.IPrincipal User { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.Principal.IPrincipal User" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.User" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property User As IPrincipal" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::Principal::IPrincipal ^ User { System::Security::Principal::IPrincipal ^ get(); void set(System::Security::Principal::IPrincipal ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.IPrincipal</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1b72-269">При переопределении в производном классе получает или задает сведения о безопасности для текущего HTTP-запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-269">When overridden in a derived class, gets or sets security information for the current HTTP request.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1b72-270">Объект, содержащий сведения о безопасности для текущего HTTP-запроса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-270">An object that contains security information for the current HTTP request.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.NotImplementedException">
          <span data-ttu-id="e1b72-271">Всегда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-271">Always.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="WebSocketNegotiatedProtocol">
      <MemberSignature Language="C#" Value="public virtual string WebSocketNegotiatedProtocol { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WebSocketNegotiatedProtocol" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.WebSocketNegotiatedProtocol" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property WebSocketNegotiatedProtocol As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ WebSocketNegotiatedProtocol { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1b72-272">При реализации в производном классе получает сведения о согласованном протоколе, которые были отправлены сервером клиенту для соединения <see cref="T:System.Web.WebSockets.AspNetWebSocket" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-272">When implemented in a derived class, gets the negotiated protocol that was sent from the server to the client for an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> connection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1b72-273">Согласованный протокол.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-273">The negotiated protocol.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WebSocketRequestedProtocols">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; WebSocketRequestedProtocols { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;string&gt; WebSocketRequestedProtocols" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpContextBase.WebSocketRequestedProtocols" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property WebSocketRequestedProtocols As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::Generic::IList&lt;System::String ^&gt; ^ WebSocketRequestedProtocols { System::Collections::Generic::IList&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e1b72-274">При реализации в производном классе получает упорядоченный список протоколов, запрошенных клиентом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-274">When implemented in a derived class, gets the ordered list of protocols that were requested by the client.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e1b72-275">Запрошенные протоколы или значение <see langword="null" />, если это не запрос <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> или если список не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e1b72-275">The requested protocols, or <see langword="null" /> if this is not an <see cref="T:System.Web.WebSockets.AspNetWebSocket" /> request or if no list is present.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>