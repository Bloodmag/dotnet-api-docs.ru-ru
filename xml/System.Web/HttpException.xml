<Type Name="HttpException" FullName="System.Web.HttpException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1864e8fe52f0eb87b7c23fbfe505d15cf9681ede" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class HttpException : System.Runtime.InteropServices.ExternalException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit HttpException extends System.Runtime.InteropServices.ExternalException" />
  <TypeSignature Language="DocId" Value="T:System.Web.HttpException" />
  <TypeSignature Language="VB.NET" Value="Public Class HttpException&#xA;Inherits ExternalException" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpException : System::Runtime::InteropServices::ExternalException" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.InteropServices.ExternalException</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="eaa62-101">Описывает исключение, которое возникает при обработке HTTP-запросов.</span>
      <span class="sxs-lookup">
        <span data-stu-id="eaa62-101">Describes an exception that occurred during the processing of HTTP requests.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eaa62-102"><xref:System.Web.HttpException> Класс является классом исключений HTTP-протокол, позволяющий ASP.NET для создания информации об исключении.</span><span class="sxs-lookup"><span data-stu-id="eaa62-102">The <xref:System.Web.HttpException> class is an HTTP-specific exception class that enables ASP.NET to generate exception information.</span></span> <span data-ttu-id="eaa62-103">Дополнительные сведения о генерации и обработке исключений см. в разделе [исключения](http://msdn.microsoft.com/library/f99a1d29-a2a8-47af-9707-9909f9010735).</span><span class="sxs-lookup"><span data-stu-id="eaa62-103">For more information about throwing and handling exceptions, see [Exceptions](http://msdn.microsoft.com/library/f99a1d29-a2a8-47af-9707-9909f9010735).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eaa62-104">В следующем примере кода демонстрируется использование <xref:System.Web.HttpException> класса для формирования настраиваемых исключений.</span><span class="sxs-lookup"><span data-stu-id="eaa62-104">The following code example demonstrates how to use the <xref:System.Web.HttpException> class to raise customized exceptions.</span></span> <span data-ttu-id="eaa62-105">`Button_Click` Метод определяет, какая кнопка была нажата и затем вызывает метод `CheckNumber` или `CheckBoolean` метод.</span><span class="sxs-lookup"><span data-stu-id="eaa62-105">The `Button_Click` method determines which button was clicked, and then calls either the `CheckNumber` or `CheckBoolean` method.</span></span> <span data-ttu-id="eaa62-106">Если введенное пользователем значение в текстовом поле не соответствует ожидаемому типу <xref:System.Web.HttpException> создается исключение и вызывается с настраиваемым сообщением, в зависимости от типа ошибки.</span><span class="sxs-lookup"><span data-stu-id="eaa62-106">If the user-entered value in the text box does not correspond to the expected type, an <xref:System.Web.HttpException> exception is created and thrown with a customized message based on the error type.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="eaa62-107">В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности.</span><span class="sxs-lookup"><span data-stu-id="eaa62-107">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="eaa62-108">По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов.</span><span class="sxs-lookup"><span data-stu-id="eaa62-108">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="eaa62-109">Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span><span class="sxs-lookup"><span data-stu-id="eaa62-109">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[HttpException#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpException/cs/httpexceptioncs.aspx#1)]
 [!code-aspx-vb[HttpException#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpException/vb/httpexceptionvb.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="eaa62-110">Инициализирует новый экземпляр класса <see cref="T:System.Web.HttpException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaa62-110">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eaa62-111">Выполняет инициализацию нового экземпляра класса <see cref="T:System.Web.HttpException" /> и создает пустой объект <see cref="T:System.Web.HttpException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaa62-111">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class and creates an empty <see cref="T:System.Web.HttpException" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eaa62-112">При обработке исключений, его можно использовать для захвата ряд исключений, связанных с внешней исключения в ответ на внутреннее исключение.</span><span class="sxs-lookup"><span data-stu-id="eaa62-112">When handling exceptions, it can be useful to capture a series of related exceptions with the outer exception being thrown in response to an inner exception.</span></span>  
  
 <span data-ttu-id="eaa62-113">Ссылка на внутреннее исключение, вызвавшее исключение внешнего доступна через <xref:System.Exception.InnerException%2A> свойства внешнего исключения.</span><span class="sxs-lookup"><span data-stu-id="eaa62-113">A reference to the inner exception that caused the outer exception is available from the <xref:System.Exception.InnerException%2A> property of the outer exception.</span></span> <span data-ttu-id="eaa62-114">Этот механизм сохраняет сведения об ошибке, переданные в более ранних исключениях, включая исходные исключения, предоставляя возможность создания более значимых внешних исключений.</span><span class="sxs-lookup"><span data-stu-id="eaa62-114">This mechanism preserves the error information that is carried by earlier exceptions, including the original exceptions, while allowing you to create more meaningful outer exceptions.</span></span> <span data-ttu-id="eaa62-115">Дополнительные сведения см. в разделе <xref:System.Exception.InnerException%2A>.</span><span class="sxs-lookup"><span data-stu-id="eaa62-115">For more information, see <xref:System.Exception.InnerException%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eaa62-116">В следующем примере кода показано <xref:System.Web.HttpException.%23ctor%2A> конструктор <xref:System.Web.HttpException> класса.</span><span class="sxs-lookup"><span data-stu-id="eaa62-116">The following code example demonstrates the <xref:System.Web.HttpException.%23ctor%2A> constructor of the <xref:System.Web.HttpException> class.</span></span> <span data-ttu-id="eaa62-117">`CheckNumber` Метод введенное пользователем значение в текстовое поле и проверяет, является ли это целое число.</span><span class="sxs-lookup"><span data-stu-id="eaa62-117">The `CheckNumber` method accepts a user-entered value through a text box and checks whether it is an integer.</span></span> <span data-ttu-id="eaa62-118">Если значение не является целым числом, создается исключение и создается новый <xref:System.Web.HttpException> объект создается и исключение.</span><span class="sxs-lookup"><span data-stu-id="eaa62-118">If the value is not an integer, an exception is thrown, and then a new <xref:System.Web.HttpException> object is created and thrown.</span></span> <span data-ttu-id="eaa62-119">Что исключение перехватывается в `Button_Click` обработчик событий и сообщение об ошибке отображается в браузере.</span><span class="sxs-lookup"><span data-stu-id="eaa62-119">That exception is caught in the `Button_Click` event handler and the error message is displayed on the browser.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="eaa62-120">В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности.</span><span class="sxs-lookup"><span data-stu-id="eaa62-120">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="eaa62-121">По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов.</span><span class="sxs-lookup"><span data-stu-id="eaa62-121">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="eaa62-122">Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span><span class="sxs-lookup"><span data-stu-id="eaa62-122">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[HttpException_Constructor1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpException_Constructor1/CS/httpexception_constructor1.cs.aspx#1)]
 [!code-aspx-vb[HttpException_Constructor1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpException_Constructor1/VB/httpexception_constructor1.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpException(System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="eaa62-123">Сообщение об ошибке, отображаемое клиенту при создании исключения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaa62-123">The error message displayed to the client when the exception is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eaa62-124">Выполняет инициализацию нового экземпляра класса <see cref="T:System.Web.HttpException" /> с заданным сообщением об ошибке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaa62-124">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class using a supplied error message.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eaa62-125">В следующем примере кода показано <xref:System.Web.HttpException.%23ctor%2A> конструктор <xref:System.Web.HttpException> класса.</span><span class="sxs-lookup"><span data-stu-id="eaa62-125">The following code example demonstrates the <xref:System.Web.HttpException.%23ctor%2A> constructor of the <xref:System.Web.HttpException> class.</span></span> <span data-ttu-id="eaa62-126"><xref:System.Web.HttpException> Возникает, если введенное пользователем значение равно 0.</span><span class="sxs-lookup"><span data-stu-id="eaa62-126">An <xref:System.Web.HttpException> is thrown if a user-entered value is 0.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="eaa62-127">В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности.</span><span class="sxs-lookup"><span data-stu-id="eaa62-127">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="eaa62-128">По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов.</span><span class="sxs-lookup"><span data-stu-id="eaa62-128">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="eaa62-129">Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span><span class="sxs-lookup"><span data-stu-id="eaa62-129">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-csharp[Classic HttpException.HttpException1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpException.HttpException1 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpException.HttpException1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpException.HttpException1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpException (int httpCode, string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 httpCode, string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.#ctor(System.Int32,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (httpCode As Integer, message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpException(int httpCode, System::String ^ message);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="httpCode" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="httpCode">
          <span data-ttu-id="eaa62-130">Код состояния HTTP ответа, пересылаемый клиенту, соответствующему данной ошибке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaa62-130">The HTTP response status code sent to the client corresponding to this error.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="eaa62-131">Сообщение об ошибке, отображаемое клиенту при создании исключения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaa62-131">The error message displayed to the client when the exception is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eaa62-132">Выполняет инициализацию нового экземпляра класса <see cref="T:System.Web.HttpException" />, используя код состояния HTTP-ответа и сообщение об ошибке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaa62-132">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class using an HTTP response status code and an error message.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected HttpException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; HttpException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="eaa62-133">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, хранящий сериализованные данные объекта, относящиеся к выдаваемому исключению.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaa62-133">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="eaa62-134">Контекст <see cref="T:System.Runtime.Serialization.StreamingContext" />, который содержит контекстные сведения об источнике или назначении.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaa62-134">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that holds the contextual information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eaa62-135">Инициализирует новый экземпляр класса <see cref="T:System.Web.HttpException" /> с сериализованными данными.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaa62-135">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class with serialized data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eaa62-136"><xref:System.Web.HttpException.%23ctor%2A> Конструктор вызывается в процессе десериализации для воссоздания объекта исключения, переданного в потоке.</span><span class="sxs-lookup"><span data-stu-id="eaa62-136">The <xref:System.Web.HttpException.%23ctor%2A> constructor is called during deserialization to reconstitute the exception object that is transmitted over a stream.</span></span> <span data-ttu-id="eaa62-137">Дополнительные сведения см. в разделе [сериализации XML и SOAP](~/docs/standard/serialization/xml-and-soap-serialization.md).</span><span class="sxs-lookup"><span data-stu-id="eaa62-137">For more information, see [XML and SOAP Serialization](~/docs/standard/serialization/xml-and-soap-serialization.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpException(System::String ^ message, Exception ^ innerException);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="eaa62-138">Сообщение об ошибке, отображаемое клиенту при создании исключения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaa62-138">The error message displayed to the client when the exception is thrown.</span>
          </span>
        </param>
        <param name="innerException">
          <span data-ttu-id="eaa62-139">Метод <see cref="P:System.Exception.InnerException" /> (при наличии), вызвавший текущее исключение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaa62-139">The <see cref="P:System.Exception.InnerException" />, if any, that threw the current exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eaa62-140">Выполняет инициализацию нового экземпляра класса <see cref="T:System.Web.HttpException" />, используя сообщение об ошибке и свойство <see cref="P:System.Exception.InnerException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaa62-140">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class using an error message and the <see cref="P:System.Exception.InnerException" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eaa62-141">При обработке исключений, его можно использовать для захвата ряд исключений, связанных с внешней исключения в ответ на внутреннее исключение.</span><span class="sxs-lookup"><span data-stu-id="eaa62-141">When handling exceptions, it can be useful to capture a series of related exceptions with the outer exception being thrown in response to an inner exception.</span></span>  
  
 <span data-ttu-id="eaa62-142">Ссылка на внутреннее исключение, вызвавшее исключение внешнего доступна через <xref:System.Exception.InnerException%2A> свойства внешнего исключения.</span><span class="sxs-lookup"><span data-stu-id="eaa62-142">A reference to the inner exception that caused the outer exception is available from the <xref:System.Exception.InnerException%2A> property of the outer exception.</span></span> <span data-ttu-id="eaa62-143">Этот механизм сохраняет сведения об ошибке, переданные в более ранних исключениях, включая исходные исключения, предоставляя возможность создания более значимых внешних исключений.</span><span class="sxs-lookup"><span data-stu-id="eaa62-143">This mechanism preserves the error information that is carried by earlier exceptions, including the original exceptions, while allowing you to create more meaningful outer exceptions.</span></span> <span data-ttu-id="eaa62-144">Дополнительные сведения см. в разделе <xref:System.Exception.InnerException%2A>.</span><span class="sxs-lookup"><span data-stu-id="eaa62-144">For more information, see <xref:System.Exception.InnerException%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eaa62-145">В следующем примере кода показано <xref:System.Web.HttpException.%23ctor%2A> конструктор <xref:System.Web.HttpException> класса.</span><span class="sxs-lookup"><span data-stu-id="eaa62-145">The following code example demonstrates the <xref:System.Web.HttpException.%23ctor%2A> constructor of the <xref:System.Web.HttpException> class.</span></span> <span data-ttu-id="eaa62-146">`CheckNumber` Метод введенное пользователем значение в текстовое поле и проверяет, является ли это целое число.</span><span class="sxs-lookup"><span data-stu-id="eaa62-146">The `CheckNumber` method accepts a user-entered value through a text box and checks whether it is an integer.</span></span> <span data-ttu-id="eaa62-147">Если значение не является целым числом, возникает исключение, а затем в блоке catch новый <xref:System.Web.HttpException> объект создается и исключение.</span><span class="sxs-lookup"><span data-stu-id="eaa62-147">If the value is not an integer, an exception is thrown, and then in the catch block, a new <xref:System.Web.HttpException> object is created and thrown.</span></span> <span data-ttu-id="eaa62-148">Что исключение перехватывается в `Button_Click` обработчик событий и сообщение об ошибке отображается в браузере.</span><span class="sxs-lookup"><span data-stu-id="eaa62-148">That exception is caught in the `Button_Click` event handler and the error message is displayed on the browser.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="eaa62-149">В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности.</span><span class="sxs-lookup"><span data-stu-id="eaa62-149">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="eaa62-150">По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов.</span><span class="sxs-lookup"><span data-stu-id="eaa62-150">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="eaa62-151">Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span><span class="sxs-lookup"><span data-stu-id="eaa62-151">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[HttpException_Constructor2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpException_Constructor2/CS/httpexception_constructor2.cs.aspx#1)]
 [!code-aspx-vb[HttpException_Constructor2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpException_Constructor2/VB/httpexception_constructor2.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpException (string message, int hr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, int32 hr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.#ctor(System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, hr As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpException(System::String ^ message, int hr);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="hr" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="eaa62-152">Сообщение об ошибке, отображаемое клиенту при создании исключения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaa62-152">The error message displayed to the client when the exception is thrown.</span>
          </span>
        </param>
        <param name="hr">
          <span data-ttu-id="eaa62-153">Код исключения с описанием ошибки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaa62-153">The exception code that defines the error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eaa62-154">Выполняет инициализацию нового экземпляра класса <see cref="T:System.Web.HttpException" />, используя сообщение об ошибке и код исключения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaa62-154">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class using an error message and an exception code.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eaa62-155">В следующем примере кода показано <xref:System.Web.HttpException.%23ctor%2A> конструктор <xref:System.Web.HttpException> класса.</span><span class="sxs-lookup"><span data-stu-id="eaa62-155">The following code example demonstrates the <xref:System.Web.HttpException.%23ctor%2A> constructor of the <xref:System.Web.HttpException> class.</span></span> <span data-ttu-id="eaa62-156"><xref:System.Web.HttpException> Исключение вызывается, если введенное пользователем значение равно 0.</span><span class="sxs-lookup"><span data-stu-id="eaa62-156">An <xref:System.Web.HttpException> exception is thrown if a user-entered value is 0.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="eaa62-157">В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности.</span><span class="sxs-lookup"><span data-stu-id="eaa62-157">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="eaa62-158">По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов.</span><span class="sxs-lookup"><span data-stu-id="eaa62-158">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="eaa62-159">Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span><span class="sxs-lookup"><span data-stu-id="eaa62-159">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-csharp[Classic HttpException.HttpException2 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic HttpException.HttpException2 Example/CS/source.cs#1)]
 [!code-vb[Classic HttpException.HttpException2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic HttpException.HttpException2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpException (int httpCode, string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 httpCode, string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.#ctor(System.Int32,System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (httpCode As Integer, message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpException(int httpCode, System::String ^ message, Exception ^ innerException);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="httpCode" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="httpCode">
          <span data-ttu-id="eaa62-160">Код состояния HTTP-ответа, отображаемый клиентом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaa62-160">The HTTP response status code displayed on the client.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="eaa62-161">Сообщение об ошибке, отображаемое клиенту при создании исключения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaa62-161">The error message displayed to the client when the exception is thrown.</span>
          </span>
        </param>
        <param name="innerException">
          <span data-ttu-id="eaa62-162">Метод <see cref="P:System.Exception.InnerException" /> (при наличии), вызвавший текущее исключение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaa62-162">The <see cref="P:System.Exception.InnerException" />, if any, that threw the current exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eaa62-163">Выполняет инициализацию нового экземпляра класса <see cref="T:System.Web.HttpException" />, используя код состояния HTTP-ответа, сообщение об ошибке и свойство <see cref="P:System.Exception.InnerException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaa62-163">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class using an HTTP response status code, an error message, and the <see cref="P:System.Exception.InnerException" /> property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eaa62-164">При обработке исключений, его можно использовать для захвата ряд исключений, связанных с внешней исключения в ответ на внутреннее исключение.</span><span class="sxs-lookup"><span data-stu-id="eaa62-164">When handling exceptions, it can be useful to capture a series of related exceptions with the outer exception being thrown in response to an inner exception.</span></span>  
  
 <span data-ttu-id="eaa62-165">Ссылка на внутреннее исключение, вызвавшее исключение внешнего доступна через <xref:System.Exception.InnerException%2A> свойства внешнего исключения.</span><span class="sxs-lookup"><span data-stu-id="eaa62-165">A reference to the inner exception that caused the outer exception is available from the <xref:System.Exception.InnerException%2A> property of the outer exception.</span></span> <span data-ttu-id="eaa62-166">Этот механизм сохраняет сведения об ошибке, переданные в более ранних исключениях, включая исходные исключения, предоставляя возможность создания более значимых внешних исключений.</span><span class="sxs-lookup"><span data-stu-id="eaa62-166">This mechanism preserves the error information that is carried by earlier exceptions, including the original exceptions, while allowing you to create more meaningful outer exceptions.</span></span> <span data-ttu-id="eaa62-167">Дополнительные сведения см. в разделе <xref:System.Exception.InnerException%2A>.</span><span class="sxs-lookup"><span data-stu-id="eaa62-167">For more information, see <xref:System.Exception.InnerException%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="eaa62-168">В следующем примере кода показано <xref:System.Web.HttpException.%23ctor%2A> конструктор <xref:System.Web.HttpException> класса.</span><span class="sxs-lookup"><span data-stu-id="eaa62-168">The following code example demonstrates the <xref:System.Web.HttpException.%23ctor%2A> constructor of the <xref:System.Web.HttpException> class.</span></span> <span data-ttu-id="eaa62-169">`CheckNumber` Метод введенное пользователем значение и проверяет, является ли это целое число.</span><span class="sxs-lookup"><span data-stu-id="eaa62-169">The `CheckNumber` method accepts a user-entered value and checks whether it is an integer.</span></span> <span data-ttu-id="eaa62-170">Если значение не является целым числом, создается исключение и создается новый <xref:System.Web.HttpException> создается объект, содержащий код состояния HTTP-ответа, сообщение об исключении и любое внутреннее исключение.</span><span class="sxs-lookup"><span data-stu-id="eaa62-170">If the value is not an integer, an exception is thrown, and then a new <xref:System.Web.HttpException> object containing the HTTP response status code, the exception's message, and any inner exception is created.</span></span> <span data-ttu-id="eaa62-171">Что исключение перехватывается в `Button_Click` отображаются обработчик событий и сообщение об ошибке, код ошибки и внутреннее исключение.</span><span class="sxs-lookup"><span data-stu-id="eaa62-171">That exception is caught in the `Button_Click` event handler and the error message, error code, and inner exception are displayed.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="eaa62-172">В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности.</span><span class="sxs-lookup"><span data-stu-id="eaa62-172">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="eaa62-173">По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов.</span><span class="sxs-lookup"><span data-stu-id="eaa62-173">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="eaa62-174">Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span><span class="sxs-lookup"><span data-stu-id="eaa62-174">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[HttpException_Constructor3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpException_Constructor3/CS/httpexception_constructor3.cs.aspx#1)]
 [!code-aspx-vb[HttpException_Constructor3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpException_Constructor3/VB/httpexception_constructor3.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HttpException (int httpCode, string message, int hr);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 httpCode, string message, int32 hr) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.#ctor(System.Int32,System.String,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (httpCode As Integer, message As String, hr As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HttpException(int httpCode, System::String ^ message, int hr);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="httpCode" Type="System.Int32" />
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="hr" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="httpCode">
          <span data-ttu-id="eaa62-175">Код состояния HTTP-ответа, отображаемый клиентом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaa62-175">The HTTP response status code displayed on the client.</span>
          </span>
        </param>
        <param name="message">
          <span data-ttu-id="eaa62-176">Сообщение об ошибке, отображаемое клиенту при создании исключения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaa62-176">The error message displayed to the client when the exception is thrown.</span>
          </span>
        </param>
        <param name="hr">
          <span data-ttu-id="eaa62-177">Код исключения с описанием ошибки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaa62-177">The exception code that defines the error.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eaa62-178">Выполняет инициализацию нового экземпляра класса <see cref="T:System.Web.HttpException" />, используя код состояния HTTP-ответа, сообщение об ошибке и код исключения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaa62-178">Initializes a new instance of the <see cref="T:System.Web.HttpException" /> class using an HTTP response status code, an error message, and an exception code.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="eaa62-179">В следующем примере кода показано <xref:System.Web.HttpException.%23ctor%2A> конструктор <xref:System.Web.HttpException> класса.</span><span class="sxs-lookup"><span data-stu-id="eaa62-179">The following code example demonstrates the <xref:System.Web.HttpException.%23ctor%2A> constructor of the <xref:System.Web.HttpException> class.</span></span> <span data-ttu-id="eaa62-180">Имя и адрес электронной почты пользователя вводятся пользователем в предоставляемых текстовых полях.</span><span class="sxs-lookup"><span data-stu-id="eaa62-180">The user name and email information are entered by the user in the provided text boxes.</span></span> <span data-ttu-id="eaa62-181">Если любой из поля оставлены пустыми, <xref:System.Web.HttpException> объект создается и исключение.</span><span class="sxs-lookup"><span data-stu-id="eaa62-181">If any of the text boxes are left blank, an <xref:System.Web.HttpException> object is created and thrown.</span></span> <span data-ttu-id="eaa62-182">Код ошибки <xref:System.Web.HttpException> получается путем <xref:System.Web.HttpException.GetHttpCode%2A> метод и отображается на веб-странице.</span><span class="sxs-lookup"><span data-stu-id="eaa62-182">The error code of the <xref:System.Web.HttpException> is obtained by the <xref:System.Web.HttpException.GetHttpCode%2A> method and displayed on the Web page.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="eaa62-183">В этом примере имеется текстовое поле, принимающее вводимые пользователем данные, что является потенциальной угрозой безопасности.</span><span class="sxs-lookup"><span data-stu-id="eaa62-183">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="eaa62-184">По умолчанию данные, вводимые пользователем на веб-страницах ASP.NET, проверяются на наличие скриптов и HTML-элементов.</span><span class="sxs-lookup"><span data-stu-id="eaa62-184">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="eaa62-185">Дополнительные сведения см. в разделе [Общие сведения об использовании сценариев](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span><span class="sxs-lookup"><span data-stu-id="eaa62-185">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[HttpException_Constructor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/HttpException_Constructor/CS/httpexception_constructor5.cs.aspx#1)]
 [!code-aspx-vb[HttpException_Constructor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/HttpException_Constructor/VB/httpexception_constructor5.vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName="CreateFromLastError">
      <MemberSignature Language="C#" Value="public static System.Web.HttpException CreateFromLastError (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Web.HttpException CreateFromLastError(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.CreateFromLastError(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateFromLastError (message As String) As HttpException" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Web::HttpException ^ CreateFromLastError(System::String ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.HttpException</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">
          <span data-ttu-id="eaa62-186">Сообщение об ошибке, отображаемое клиенту при создании исключения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaa62-186">The error message displayed to the client when the exception is thrown.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eaa62-187">Создает новое исключение <see cref="T:System.Web.HttpException" /> на основе кода ошибки, возвращенного методом <see langword="GetLastError()" /> интерфейса Win32 API.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaa62-187">Creates a new <see cref="T:System.Web.HttpException" /> exception based on the error code that is returned from the Win32 API <see langword="GetLastError()" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eaa62-188">Исключение <see cref="T:System.Web.HttpException" />, которое создано с использованием кода ошибки, возвращенного при вызове метода <see langword="GetLastError()" /> интерфейса Win32 API.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaa62-188">An <see cref="T:System.Web.HttpException" /> based on the error code that is returned from a call to the Win32 API <see langword="GetLastError()" /> method.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName="GetHtmlErrorMessage">
      <MemberSignature Language="C#" Value="public string GetHtmlErrorMessage ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetHtmlErrorMessage() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.GetHtmlErrorMessage" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHtmlErrorMessage () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetHtmlErrorMessage();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eaa62-189">Возвращает HTML-сообщение об ошибке для возврата клиенту.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaa62-189">Gets the HTML error message to return to the client.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eaa62-190">HTML-сообщение об ошибке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaa62-190">The HTML error message.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName="GetHttpCode">
      <MemberSignature Language="C#" Value="public int GetHttpCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetHttpCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.GetHttpCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHttpCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetHttpCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="eaa62-191">Возвращает код состояния HTTP-ответа для передачи клиенту.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaa62-191">Gets the HTTP response status code to return to the client.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="eaa62-192">Ненулевой HTTP-код, представляющий исключение или код свойства <see cref="P:System.Exception.InnerException" />; в противном случае — код 500 состояния HTTP-ответа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaa62-192">A non-zero HTTP code representing the exception or the <see cref="P:System.Exception.InnerException" /> code; otherwise, HTTP response status code 500.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eaa62-193">Если ненулевое значение HTTP-кодом, он возвращается.</span><span class="sxs-lookup"><span data-stu-id="eaa62-193">If there is a non-zero HTTP code, it is returned.</span></span> <span data-ttu-id="eaa62-194">В противном случае <xref:System.Exception.InnerException%2A> возвращается код.</span><span class="sxs-lookup"><span data-stu-id="eaa62-194">Otherwise, the <xref:System.Exception.InnerException%2A> code is returned.</span></span> <span data-ttu-id="eaa62-195">Если ни одна из <xref:System.Exception.InnerException%2A> кода и HTTP-кодом ненулевой недоступны, возвращается код состояния ответа HTTP 500.</span><span class="sxs-lookup"><span data-stu-id="eaa62-195">If neither an <xref:System.Exception.InnerException%2A> code nor a non-zero HTTP code is available, the HTTP response status code 500 is returned.</span></span> <span data-ttu-id="eaa62-196">Дополнительные сведения о кодах состояния ответа HTTP см. в разделе определения кодов состояния протокола передачи гипертекста - HTTP/1.1 по всему миру [широкий Web Consortium (W3C) веб-сайта](http://go.microsoft.com/fwlink/?linkid=37125).</span><span class="sxs-lookup"><span data-stu-id="eaa62-196">For more information on HTTP response status codes, see the Status Code Definitions of the Hypertext Transfer Protocol - HTTP/1.1 on the World [Wide Web Consortium (W3C) Web site](http://go.microsoft.com/fwlink/?linkid=37125).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Exception.InnerException" />
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.HttpException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">
          <span data-ttu-id="eaa62-197">Объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />, хранящий сериализованные данные объекта, относящиеся к выдаваемому исключению.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaa62-197">The <see cref="T:System.Runtime.Serialization.SerializationInfo" /> that holds the serialized object data about the exception being thrown.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="eaa62-198">Контекст <see cref="T:System.Runtime.Serialization.StreamingContext" />, который содержит контекстные сведения об источнике или назначении.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaa62-198">The <see cref="T:System.Runtime.Serialization.StreamingContext" /> that holds the contextual information about the source or destination.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="eaa62-199">Возвращает сведения об исключении и добавляет их в объект <see cref="T:System.Runtime.Serialization.SerializationInfo" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaa62-199">Gets information about the exception and adds it to the <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="eaa62-200"><xref:System.Web.HttpException.GetObjectData%2A> Метод добавляет сведения об исключении для <xref:System.Runtime.Serialization.SerializationInfo> , предназначенные для сериализации объекта.</span><span class="sxs-lookup"><span data-stu-id="eaa62-200">The <xref:System.Web.HttpException.GetObjectData%2A> method adds information about the exception to the <xref:System.Runtime.Serialization.SerializationInfo> object that is targeted for serialization.</span></span> <span data-ttu-id="eaa62-201">В процессе десериализации исключение воссоздается из <xref:System.Runtime.Serialization.SerializationInfo> , переданного в потоке.</span><span class="sxs-lookup"><span data-stu-id="eaa62-201">During deserialization, the exception is reconstituted from the <xref:System.Runtime.Serialization.SerializationInfo> that is transmitted over the stream.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
      </Docs>
    </Member>
    <Member MemberName="WebEventCode">
      <MemberSignature Language="C#" Value="public int WebEventCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 WebEventCode" />
      <MemberSignature Language="DocId" Value="P:System.Web.HttpException.WebEventCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WebEventCode As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int WebEventCode { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="eaa62-202">Получает коды событий, связанные с HTTP-исключением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaa62-202">Gets the event codes that are associated with the HTTP exception.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="eaa62-203">Целое число, представляющее код веб-события.</span>
          <span class="sxs-lookup">
            <span data-stu-id="eaa62-203">An integer representing a Web event code.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>