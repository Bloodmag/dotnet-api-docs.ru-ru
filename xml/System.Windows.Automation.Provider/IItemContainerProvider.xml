<Type Name="IItemContainerProvider" FullName="System.Windows.Automation.Provider.IItemContainerProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3defb7d71b31a08b3dff8bc6ed67b4bb1f6b080c" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36371286" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IItemContainerProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IItemContainerProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.IItemContainerProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface IItemContainerProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class IItemContainerProvider" />
  <TypeSignature Language="F#" Value="type IItemContainerProvider = interface" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("e747770b-39ce-4382-ab30-d8fb3f336f24")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет методы, позволяющие приложению искать элементы в контейнере как в виртуализированном списке.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот интерфейс должен быть реализован в контейнерах, поддерживающих виртуализацию и нет других средств поиска виртуализованных элементов.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="FindItemByProperty">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.Provider.IRawElementProviderSimple FindItemByProperty (System.Windows.Automation.Provider.IRawElementProviderSimple startAfter, int propertyId, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Automation.Provider.IRawElementProviderSimple FindItemByProperty(class System.Windows.Automation.Provider.IRawElementProviderSimple startAfter, int32 propertyId, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.IItemContainerProvider.FindItemByProperty(System.Windows.Automation.Provider.IRawElementProviderSimple,System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindItemByProperty (startAfter As IRawElementProviderSimple, propertyId As Integer, value As Object) As IRawElementProviderSimple" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Automation::Provider::IRawElementProviderSimple ^ FindItemByProperty(System::Windows::Automation::Provider::IRawElementProviderSimple ^ startAfter, int propertyId, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member FindItemByProperty : System.Windows.Automation.Provider.IRawElementProviderSimple * int * obj -&gt; System.Windows.Automation.Provider.IRawElementProviderSimple" Usage="iItemContainerProvider.FindItemByProperty (startAfter, propertyId, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Provider.IRawElementProviderSimple</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startAfter" Type="System.Windows.Automation.Provider.IRawElementProviderSimple" />
        <Parameter Name="propertyId" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="startAfter">Элемент в контейнере, после которого следует начать поиск.</param>
        <param name="propertyId">Свойство, содержащее извлекаемое значение.</param>
        <param name="value">Извлекаемое значение.</param>
        <summary>Извлекает элемент по указанному значению свойства.</summary>
        <returns>Первый элемент, соответствующий критерию поиска; в противном случае — значение <see langword="null" />, если критерию не соответствует ни один элемент.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Задать `propertyId` параметр `0` для извлечения следующего элемента после `startAfter`, независимо от значения, указанного в `value`. Задать `startAfter` для `null` для начала поиска с первого элемента.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>