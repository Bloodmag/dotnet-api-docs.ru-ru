<Type Name="ISynchronizedInputProvider" FullName="System.Windows.Automation.Provider.ISynchronizedInputProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4210b594b0569d3486a26fd3d5c83bf4e5cae999" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30614938" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface ISynchronizedInputProvider" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISynchronizedInputProvider" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.Provider.ISynchronizedInputProvider" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISynchronizedInputProvider" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISynchronizedInputProvider" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationProvider</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.Guid("29db1a06-02ce-4cf7-9b42-565d4fab20ee")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.InterfaceType</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет методы для упрощения доступа клиента автоматизации пользовательского интерфейса к элементам управления, поддерживающим синхронизированный ввод.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализуйте этот интерфейс в поставщике автоматизации пользовательского интерфейса, который должна поддерживать <xref:System.Windows.Automation.SynchronizedInputPattern> шаблон элемента управления.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Cancel">
      <MemberSignature Language="C#" Value="public void Cancel ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Cancel() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ISynchronizedInputProvider.Cancel" />
      <MemberSignature Language="VB.NET" Value="Public Sub Cancel ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Cancel();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Останавливает ожидание входных данных.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если поставщик в данный момент ожидает ввода данных, он возвращается к нормальной работе.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartListening">
      <MemberSignature Language="C#" Value="public void StartListening (System.Windows.Automation.SynchronizedInputType inputType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void StartListening(valuetype System.Windows.Automation.SynchronizedInputType inputType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.Provider.ISynchronizedInputProvider.StartListening(System.Windows.Automation.SynchronizedInputType)" />
      <MemberSignature Language="VB.NET" Value="Public Sub StartListening (inputType As SynchronizedInputType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StartListening(System::Windows::Automation::SynchronizedInputType inputType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationProvider</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="inputType" Type="System.Windows.Automation.SynchronizedInputType" />
      </Parameters>
      <Docs>
        <param name="inputType">Тип ожидаемых входных данных.</param>
        <summary>Означает, что поставщик начал ожидать входные данные указанного типа.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда WPF обнаруживает соответствие ввода, проверяется маршрут входящих событий. Если элемент модели автоматизации, который ожидает ввода не маршрута, входные данные удаляются и <xref:System.Windows.Automation.SynchronizedInputPattern.InputDiscardedEvent> события. Если входных данных, полученных элемент автоматизации прослушивание для данного типа <xref:System.Windows.Automation.SynchronizedInputPattern.InputReachedTargetEvent> событие, вызванное; в противном случае — <xref:System.Windows.Automation.SynchronizedInputPattern.InputReachedOtherElementEvent> события.  
  
 После получения входных данных, поставщик завершает прослушивание и продолжается в обычном режиме.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>