<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ITextRangeProvider.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-81070f4" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1e344e59-9d8e-481b-978a-09f2e01be86c1bb24a3af3df2a2b923b36a2f7d70e5b19004804.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1bb24a3af3df2a2b923b36a2f7d70e5b19004804</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f9e3295b6cc303a611a73a84c4b27f9da792ad0d</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/26/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Automation.Provider.ITextRangeProvider">
          <source>Exposes methods and properties to support UI Automation client access to a span of continuous text in a text container that implements <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Provider.ITextProvider" /&gt;</ph>.</source>
          <target state="translated">Предоставляет методы и свойства для поддержки доступа клиента автоматизации пользовательского интерфейса к диапазону непрерывного текста в текстовом контейнере, реализующем <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Provider.ITextProvider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.Provider.ITextRangeProvider">
          <source>Implemented on a UI Automation provider that must support the <ph id="ph1">&lt;xref:System.Windows.Automation.TextPattern&gt;</ph> control pattern.</source>
          <target state="translated">Реализация поставщика автоматизации пользовательского интерфейса, в который должна поддерживать <ph id="ph1">&lt;xref:System.Windows.Automation.TextPattern&gt;</ph> шаблон элемента управления.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Automation.Provider.ITextRangeProvider">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRange&gt;</ph> can represent an insertion point, a subset, or all of the text in a <ph id="ph2">&lt;xref:System.Windows.Automation.TextPattern&gt;</ph> container.</source>
          <target state="translated">Объект <ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRange&gt;</ph> может представлять точку вставки, часть или весь текст в <ph id="ph2">&lt;xref:System.Windows.Automation.TextPattern&gt;</ph> контейнера.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.AddToSelection">
          <source>Adds to the collection of highlighted text in a text container that supports multiple, disjoint selections.</source>
          <target state="translated">Добавляет в коллекцию выделенного текста в текстовом контейнере, поддерживающем раздельное множественное выделение.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.AddToSelection">
          <source>The text insertion point moves to the area of the new selection.</source>
          <target state="translated">Точка вставки текста перемещается в область новое выделение.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.AddToSelection">
          <source>Providing a degenerate text range moves the insertion point.</source>
          <target state="translated">Предоставление вырожденный диапазон перемещает курсор.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.AddToSelection">
          <source>If text provider does not support multiple, disjoint selections (that is, <ph id="ph1">&lt;see cref="P:System.Windows.Automation.Provider.ITextProvider.SupportedTextSelection" /&gt;</ph> must have a value of <ph id="ph2">&lt;see langword="Multiple" /&gt;</ph>).</source>
          <target state="translated">Если поставщик текста не поддерживает раздельное множественное выделение (то есть, <ph id="ph1">&lt;see cref="P:System.Windows.Automation.Provider.ITextProvider.SupportedTextSelection" /&gt;</ph> должно иметь значение <ph id="ph2">&lt;see langword="Multiple" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Clone">
          <source>Returns a new <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" /&gt;</ph> identical to the original <ph id="ph2">&lt;see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" /&gt;</ph> and inheriting all properties of the original.</source>
          <target state="translated">Возвращает новый <ph id="ph1">&lt;see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" /&gt;</ph>, идентичный исходному <ph id="ph2">&lt;see cref="T:System.Windows.Automation.Provider.ITextRangeProvider" /&gt;</ph> и наследующий все его свойства.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Clone">
          <source>The new text range.</source>
          <target state="translated">Новый текстовый диапазон.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Clone">
          <source>A null reference (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic) is never returned.</source>
          <target state="translated">Пустая ссылка (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> в Visual Basic) никогда не возвращается.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Clone">
          <source>The new range can be manipulated independently from the original.</source>
          <target state="translated">Новый диапазон можно управлять независимо от исходных.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Compare(System.Windows.Automation.Provider.ITextRangeProvider)">
          <source>A text range to compare</source>
          <target state="translated">Текстовый диапазон для сравнения.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Compare(System.Windows.Automation.Provider.ITextRangeProvider)">
          <source>Returns a value that indicates whether the span (the <ph id="ph1">&lt;see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /&gt;</ph> endpoint to the <ph id="ph2">&lt;see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /&gt;</ph> endpoint) of a text range is the same as another text range.</source>
          <target state="translated">Возвращает значение, указывающее, является ли расположение (от конечной точки <ph id="ph1">&lt;see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /&gt;</ph> до конечной точки <ph id="ph2">&lt;see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /&gt;</ph>) текстового диапазона таким же, как расположение другого текстового диапазона.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Compare(System.Windows.Automation.Provider.ITextRangeProvider)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the span of both text ranges is identical; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если расположение текстовых диапазонов идентично; в противном случае — <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Compare(System.Windows.Automation.Provider.ITextRangeProvider)">
          <source>If the range being compared does not come from the same text provider.</source>
          <target state="translated">Если сравниваемый диапазон не принадлежит тому же поставщику текста.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
          <source>The <ph id="ph1">&lt;see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /&gt;</ph> endpoint of the caller.</source>
          <target state="translated">Конечная точка <ph id="ph1">&lt;see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /&gt;</ph> или <ph id="ph2">&lt;see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /&gt;</ph> вызывающего объекта.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
          <source>The target range for comparison.</source>
          <target state="translated">Целевой диапазон для сравнения.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
          <source>The <ph id="ph1">&lt;see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /&gt;</ph> endpoint of the target.</source>
          <target state="translated">Конечная точка <ph id="ph1">&lt;see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /&gt;</ph> или <ph id="ph2">&lt;see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /&gt;</ph> целевого объекта.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
          <source>Returns a value that specifies whether two text ranges have identical endpoints.</source>
          <target state="translated">Возвращает значение, указывающее, имеют ли два текстовых диапазона одинаковые конечные точки.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
          <source>Returns a negative value if the caller's endpoint occurs earlier in the text than the target endpoint.</source>
          <target state="translated">Возвращает отрицательное значение, если конечная точка вызывающего объекта размещена ближе к началу, чем конечная точка целевого объекта.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
          <source>Returns zero if the caller's endpoint is at the same location as the target endpoint.</source>
          <target state="translated">Возвращает значение нуль, если конечные точки вызывающего и целевого объектов имеют одинаковое расположение.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
          <source>Returns a positive value if the caller's endpoint occurs later in the text than the target endpoint.</source>
          <target state="translated">Возвращает положительное значение, если конечная точка вызывающего объекта размещена дальше конечной точки целевого объекта.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.CompareEndpoints(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
          <source>If <ph id="ph1">&lt;paramref name="targetRange" /&gt;</ph> is from a different text provider.</source>
          <target state="translated">Если <ph id="ph1">&lt;paramref name="targetRange" /&gt;</ph> принадлежит другому поставщику текста.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)">
          <source>The textual unit.</source>
          <target state="translated">Единица текста.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)">
          <source>Expands the text range to the specified text unit.</source>
          <target state="translated">Расширяет текстовый диапазон до заданной единицы текста.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)">
          <source>If the range is already an exact quantity of the specified units then it remains unchanged.</source>
          <target state="translated">Если диапазон уже точное количество заданных единицах измерения, он остается неизменным.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)">
          <source>There is a series of steps are involved behind the scenes in order for the <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A&gt;</ph> method to execute successfully.</source>
          <target state="translated">Имеется ряд шагов, участвующих в фоновом в порядке для <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A&gt;</ph> для успешного выполнения метода.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)">
          <source>The text range is normalized; that is, the text range is collapsed to a degenerate range at the <ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start&gt;</ph> endpoint, which makes the <ph id="ph2">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End&gt;</ph> endpoint superfluous.</source>
          <target state="translated">Текстовый диапазон нормализован, т. е. он свернут до вырожденного диапазона в конечной точке <ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start&gt;</ph> , что делает конечную точку <ph id="ph2">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End&gt;</ph> избыточной.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)">
          <source>This step is necessary to remove ambiguity in situations where a text range spans <ph id="ph1">`unit`</ph> boundaries; for example, "{The U}RL <bpt id="p1">[</bpt><ph id="ph2">http://www.microsoft.com</ph><ept id="p1">](http://www.microsoft.com)</ept> is embedded in text" where "{" and "}" are the text range endpoints.</source>
          <target state="translated">Этот шаг необходим для устранения неоднозначности в случаях, когда текстовый диапазон охватывает <ph id="ph1">`unit`</ph> границы; например,» {U} RL <bpt id="p1">[</bpt> <ph id="ph2">http://www.microsoft.com</ph> <ept id="p1">](http://www.microsoft.com)</ept> внедряется в текст» где «{» и «}», конечные точки диапазона текста.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)">
          <source>The resulting range is moved backward in the <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A&gt;</ph> to the beginning of the requested <ph id="ph2">`unit`</ph> boundary.</source>
          <target state="translated">Результирующий диапазон перемещается в <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A&gt;</ph> в начало запрошенной границы <ph id="ph2">`unit`</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)">
          <source>The range is moved forward or backward in the <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A&gt;</ph> by the requested number of <ph id="ph2">`unit`</ph> boundaries.</source>
          <target state="translated">Диапазон перемещается вперед или назад в <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A&gt;</ph> на запрошенное число границ <ph id="ph2">`unit`</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)">
          <source>The range is then expanded from a degenerate range state by moving the <ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End&gt;</ph> endpoint by one requested <ph id="ph2">`unit`</ph> boundary.</source>
          <target state="translated">Затем диапазон расширяется из вырожденного состояния путем перемещения конечной точки <ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End&gt;</ph> на одну запрошенную границу <ph id="ph2">`unit`</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)">
          <source><bpt id="p1">![</bpt>Range adjustments by Move &amp; ExpandToEnclosingUnit<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-moveandexpand-examples.png "</bpt>Range adjustments by Move &amp; ExpandToEnclosingUnit<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>Настройка диапазона Move &amp; ExpandToEnclosingUnit<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-moveandexpand-examples.png "</bpt>диапазона Move &amp; ExpandToEnclosingUnit<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)">
          <source>Examples of how a text range is adjusted for Move() and ExpandToEnclosingUnit()</source>
          <target state="translated">Примеры корректировки текстового диапазона для Move() и ExpandToEnclosingUnit()</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)">
          <source>These steps are necessary since it is common for a screen reader to read out a full word, sentence, or entire paragraph at the insertion point or any virtual cursor position.</source>
          <target state="translated">Эти шаги необходимы, так как часто для чтения с экрана считывают полного слова, предложение или абзац в точке вставки или другой виртуальной позиции курсора.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit%2A&gt;</ph> respects both hidden and visible text.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit%2A&gt;</ph> соблюдает скрытым и видимым текстом.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit%2A&gt;</ph> defers to the next largest <ph id="ph2">&lt;xref:System.Windows.Automation.Text.TextUnit&gt;</ph> supported if the given <ph id="ph3">&lt;xref:System.Windows.Automation.Text.TextUnit&gt;</ph> is not supported by the control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit%2A&gt;</ph> откладывает до следующего наибольшего <ph id="ph2">&lt;xref:System.Windows.Automation.Text.TextUnit&gt;</ph> поддерживаемого Если данного <ph id="ph3">&lt;xref:System.Windows.Automation.Text.TextUnit&gt;</ph> не поддерживается элементом управления.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.ExpandToEnclosingUnit(System.Windows.Automation.Text.TextUnit)">
          <source>The order, from smallest unit to largest, is listed below.</source>
          <target state="translated">Порядок от наименьшей единицы к максимальному, указанных ниже.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute(System.Int32,System.Object,System.Boolean)">
          <source>The attribute to search for.</source>
          <target state="translated">Искомый атрибут.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute(System.Int32,System.Object,System.Boolean)">
          <source>The attribute value to search for.</source>
          <target state="translated">Искомое значение атрибута.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute(System.Int32,System.Object,System.Boolean)">
          <source>This value must match the type specified for the attribute.</source>
          <target state="translated">Это значение должно соответствовать заданному для атрибута типу.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute(System.Int32,System.Object,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the last occurring text range should be returned instead of the first; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если вместо первого должно быть возвращено последнее вхождение текстового диапазона; в противном случае — <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute(System.Int32,System.Object,System.Boolean)">
          <source>Returns a text range subset that has the specified attribute value.</source>
          <target state="translated">Возвращает подмножество текстового диапазона, имеющее заданное значение атрибута.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute(System.Int32,System.Object,System.Boolean)">
          <source>A text range having a matching attribute and attribute value; otherwise null (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated">Текстовый диапазон, имеющий соответствующий атрибут с заданным значением; в противном случае — NULL (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> в Visual Basic).</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.FindAttribute(System.Int32,System.Object,System.Boolean)">
          <source>There is no differentiation between hidden and visible text.</source>
          <target state="translated">Нет никакой разницы между скрытым и видимым текстом.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.FindText(System.String,System.Boolean,System.Boolean)">
          <source>The text string to search for.</source>
          <target state="translated">Искомая текстовая строка.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.FindText(System.String,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the last occurring text range should be returned instead of the first; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если вместо первого должно быть возвращено последнее вхождение текстового диапазона; в противном случае — <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.FindText(System.String,System.Boolean,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if case should be ignored; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если регистр следует игнорировать; в противном случае — <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.FindText(System.String,System.Boolean,System.Boolean)">
          <source>Returns a text range subset that contains the specified text.</source>
          <target state="translated">Возвращает подмножество текстового диапазона, содержащее заданный текст.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.FindText(System.String,System.Boolean,System.Boolean)">
          <source>A text range matching the specified text; otherwise null (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated">Текстовый диапазон, соответствующий заданному тексту; в противном случае — NULL (<ph id="ph1">&lt;see langword="Nothing" /&gt;</ph> в Visual Basic).</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.FindText(System.String,System.Boolean,System.Boolean)">
          <source>There is no differentiation between hidden and visible text.</source>
          <target state="translated">Нет никакой разницы между скрытым и видимым текстом.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(System.Int32)">
          <source>The text attribute.</source>
          <target state="translated">Атрибут текста.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(System.Int32)">
          <source>Retrieves the value of the specified attribute across the text range.</source>
          <target state="translated">Возвращает значение заданного атрибута для текстового диапазона.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(System.Int32)">
          <source>Retrieves an object representing the value of the specified attribute.</source>
          <target state="translated">Извлекает объект, представляющий значение заданного атрибута.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(System.Int32)">
          <source>For example, <bpt id="p1">&lt;c&gt;</bpt>GetAttributeValue(TextPattern.FontNameAttribute)<ept id="p1">&lt;/c&gt;</ept> would return a string that represents the font name of the text range while <bpt id="p2">&lt;c&gt;</bpt>GetAttributeValue(TextPattern.IsItalicAttribute)<ept id="p2">&lt;/c&gt;</ept> would return a value of type <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>.</source>
          <target state="translated">Например, <bpt id="p1">&lt;c&gt;</bpt>GetAttributeValue(TextPattern.FontNameAttribute)<ept id="p1">&lt;/c&gt;</ept> вернет строку, представляющую имя шрифта текстового диапазона, а <bpt id="p2">&lt;c&gt;</bpt>GetAttributeValue(TextPattern.IsItalicAttribute)<ept id="p2">&lt;/c&gt;</ept> вернет значение типа <ph id="ph1">&lt;see cref="T:System.Boolean" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(System.Int32)">
          <source>Returns <ph id="ph1">&lt;see cref="F:System.Windows.Automation.TextPattern.MixedAttributeValue" /&gt;</ph> if the value of the specified attribute varies over the text range.</source>
          <target state="translated">Возвращает <ph id="ph1">&lt;see cref="F:System.Windows.Automation.TextPattern.MixedAttributeValue" /&gt;</ph>, если значение заданного атрибута различается в пределах текстового диапазона.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(System.Int32)">
          <source>Returns <ph id="ph1">&lt;see cref="F:System.Windows.Automation.AutomationElement.NotSupported" /&gt;</ph> if the specified attribute is not supported by the provider or the control.</source>
          <target state="translated">Возвращает <ph id="ph1">&lt;see cref="F:System.Windows.Automation.AutomationElement.NotSupported" /&gt;</ph>, если заданный атрибут не поддерживается поставщиком или элементом управления.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(System.Int32)">
          <source>There is no differentiation between hidden and visible text.</source>
          <target state="translated">Нет никакой разницы между скрытым и видимым текстом.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetAttributeValue(System.Int32)">
          <source>If the specified attribute is not valid.</source>
          <target state="translated">Если указанный атрибут недопустим.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetBoundingRectangles">
          <source>Retrieves a collection of bounding rectangles for each fully or partially visible line of text in a text range.</source>
          <target state="translated">Возвращает коллекцию ограничивающих прямоугольников для каждой полностью или частично видимой строки текста в текстовом диапазоне.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetBoundingRectangles">
          <source>An array of bounding rectangles for each full or partial line of text in a text range.</source>
          <target state="translated">Массив ограничивающих прямоугольников для каждой полной или частичной строки текста в текстовом диапазоне.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetBoundingRectangles">
          <source>An empty array for a degenerate range.</source>
          <target state="translated">Для вырожденного диапазона — пустой массив.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetBoundingRectangles">
          <source>An empty array for a text range that has screen coordinates placing it completely off-screen, scrolled out of view, or obscured by an overlapping window.</source>
          <target state="translated">Пустой массив, если экранные координаты текстового диапазона которого полностью находятся вне экрана, он перемещен за пределы экрана в результате прокрутки или заслонен другим окном.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetChildren">
          <source>Retrieves a collection of all embedded objects that fall within the text range.</source>
          <target state="translated">Возвращает коллекцию всех внедренных объектов, попадающих в текстовый диапазон.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetChildren">
          <source>A collection of child objects that fall within the range.</source>
          <target state="translated">Коллекция дочерних объектов, попадающих в текстовый диапазон.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetChildren">
          <source>Children that overlap with the text range but are not entirely enclosed by it will also be included in the collection.</source>
          <target state="translated">Дочерний объект, пересекающийся с текстовым диапазоном, но не полностью в нем находящийся, также будет включен в коллекцию.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetChildren">
          <source>Returns an empty collection if there are no child objects.</source>
          <target state="translated">Возвращает пустую коллекцию, если нет ни одного дочернего объекта.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetEnclosingElement">
          <source>Returns the innermost control that encloses the text range.</source>
          <target state="translated">Возвращает самый внутренний элемент управления, который содержит текстовый диапазон.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetEnclosingElement">
          <source>The enclosing control, typically the text provider that supplies the text range.</source>
          <target state="translated">Охватывающий элемент управления, обычно поставщик текста, предоставляющий текстовый диапазон.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetEnclosingElement">
          <source>However, if the text provider supports child elements such as tables or hyperlinks, then the enclosing element could be a descendant of the text provider.</source>
          <target state="translated">Однако если поставщик текста содержит дочерние элементы управления, такие как таблицы или гиперссылки, охватывающий элемент должен быть наследником поставщика текста.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetText(System.Int32)">
          <source>The maximum length of the string to return.</source>
          <target state="translated">Максимальная длина возвращаемой строки.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetText(System.Int32)">
          <source>Use <bpt id="p1">&lt;c&gt;</bpt>-1<ept id="p1">&lt;/c&gt;</ept> if no limit is required.</source>
          <target state="translated">Если длина не ограничена, задайте значение <bpt id="p1">&lt;c&gt;</bpt>–1<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetText(System.Int32)">
          <source>Retrieves the plain text of the range.</source>
          <target state="translated">Возвращает содержимое текстового диапазона в виде обычного текста.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetText(System.Int32)">
          <source>The plain text of the text range, possibly truncated at the specified <ph id="ph1">&lt;paramref name="maxLength" /&gt;</ph>.</source>
          <target state="translated">Содержимое текстового диапазона в виде обычного текста, возможно, обрезанное до заданной в параметре <ph id="ph1">&lt;paramref name="maxLength" /&gt;</ph> длины.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetText(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.GetText%2A&gt;</ph> respects both hidden and visible text.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.GetText%2A&gt;</ph> соблюдает скрытым и видимым текстом.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetText(System.Int32)">
          <source>If <ph id="ph1">`maxLength`</ph> is greater than the length of the text span of the caller, the string returned will be the plain text of the text range.</source>
          <target state="translated">Если <ph id="ph1">`maxLength`</ph> больше, чем длина диапазона текста вызывающего объекта, возвращаемая строка будет текстового диапазона в виде обычного текста.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetText(System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.GetText%2A&gt;</ph> will not be affected by the order of endpoints in the text flow; it will always return the text between the Start and End endpoints of the text range in the logical text flow order.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.GetText%2A&gt;</ph> не влияет на порядком конечных точек в размещение текста; он всегда возвращает текст между конечными точками начала и окончания текстового диапазона в логическом порядке текстового потока.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.GetText(System.Int32)">
          <source>If <ph id="ph1">&lt;paramref name="maxLength" /&gt;</ph> is less than -1.</source>
          <target state="translated">Если значение параметра <ph id="ph1">&lt;paramref name="maxLength" /&gt;</ph> меньше -1.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>The text unit boundary.</source>
          <target state="translated">Граница единицы текста.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>The number of text units to move.</source>
          <target state="translated">Количество единиц текста, на которое следует выполнить перемещение.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>A positive value moves the text range forward, a negative value moves the text range backward, and 0 has no effect.</source>
          <target state="translated">Положительное значение соответствует перемещению текстового диапазона вперед, отрицательное — назад, а при значении 0 перемещение не выполняется.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>Moves the text range the specified number of text units.</source>
          <target state="translated">Перемещает текстовый диапазон на заданное количество единиц текста.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>The number of units actually moved.</source>
          <target state="translated">Количество единиц текста, на которое выполнено перемещение.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>This can be less than the number requested if either of the new text range endpoints is greater than or less than the <ph id="ph1">&lt;see cref="P:System.Windows.Automation.Provider.ITextProvider.DocumentRange" /&gt;</ph> endpoints.</source>
          <target state="translated">Оно может быть меньше запрошенного количества, если одна из новых конечных точек текстового диапазона больше или меньше конечных точек <ph id="ph1">&lt;see cref="P:System.Windows.Automation.Provider.ITextProvider.DocumentRange" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>When it is necessary to traverse the content of a text range, a series of steps are involved behind the scenes in order for the <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A&gt;</ph> method to execute successfully.</source>
          <target state="translated">Для обхода содержимого текстового диапазона в фоновом режиме применяется ряд шагов для успешного выполнения метода <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>The text range is normalized; that is, the text range is collapsed to a degenerate range at the <ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start&gt;</ph> endpoint, which makes the <ph id="ph2">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End&gt;</ph> endpoint superfluous.</source>
          <target state="translated">Текстовый диапазон нормализован, т. е. он свернут до вырожденного диапазона в конечной точке <ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start&gt;</ph> , что делает конечную точку <ph id="ph2">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End&gt;</ph> избыточной.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>This step is necessary to remove ambiguity in situations where a text range spans <ph id="ph1">`unit`</ph> boundaries; for example, "{The U}RL <bpt id="p1">[</bpt><ph id="ph2">http://www.microsoft.com</ph><ept id="p1">](http://www.microsoft.com)</ept> is embedded in text" where "{" and "}" are the text range endpoints.</source>
          <target state="translated">Этот шаг необходим для устранения неоднозначности в случаях, когда текстовый диапазон охватывает <ph id="ph1">`unit`</ph> границы; например,» {U} RL <bpt id="p1">[</bpt> <ph id="ph2">http://www.microsoft.com</ph> <ept id="p1">](http://www.microsoft.com)</ept> внедряется в текст» где «{» и «}», конечные точки диапазона текста.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>The resulting range is moved backward in the <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A&gt;</ph> to the beginning of the requested <ph id="ph2">`unit`</ph> boundary.</source>
          <target state="translated">Результирующий диапазон перемещается в <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A&gt;</ph> в начало запрошенной границы <ph id="ph2">`unit`</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>The range is moved forward or backward in the <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A&gt;</ph> by the requested number of <ph id="ph2">`unit`</ph> boundaries.</source>
          <target state="translated">Диапазон перемещается вперед или назад в <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A&gt;</ph> на запрошенное число границ <ph id="ph2">`unit`</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>The range is then expanded from a degenerate range state by moving the <ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End&gt;</ph> endpoint by one requested <ph id="ph2">`unit`</ph> boundary.</source>
          <target state="translated">Затем диапазон расширяется из вырожденного состояния путем перемещения конечной точки <ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End&gt;</ph> на одну запрошенную границу <ph id="ph2">`unit`</ph>.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source><bpt id="p1">![</bpt>Range adjustments by Move &amp; ExpandToEnclosingUnit<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-moveandexpand-examples.png "</bpt>Range adjustments by Move &amp; ExpandToEnclosingUnit<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>Настройка диапазона Move &amp; ExpandToEnclosingUnit<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-moveandexpand-examples.png "</bpt>диапазона Move &amp; ExpandToEnclosingUnit<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>Examples of how a text range is adjusted for Move() and ExpandToEnclosingUnit()</source>
          <target state="translated">Примеры корректировки текстового диапазона для Move() и ExpandToEnclosingUnit()</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>The textual content (or inner text) of a text container and an embedded object, such as a hyperlink or table cell, is exposed as a single, continuous text stream in both the control view and the content view of the <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph> tree; object boundaries are ignored.</source>
          <target state="translated">Текстовое содержимое (или внутренний текст) контейнера текста и внедренного объекта, например гиперссылки или ячейки таблицы, представляется как один непрерывный текстовый поток и в представлении элемента управления и в представлении содержимого дерева <ph id="ph1">[!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]</ph>. Границы объекта игнорируются.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source><bpt id="p1">![</bpt>Text ranges spanned by embedded objects.<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-embeddedobjecttextranges.png "</bpt>Text ranges spanned by embedded objects.<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>Текст, разделенный вставленными объектами. <ept id="p1">]</ept> <bpt id="p2">(~/add/media/uia-textpattern-embeddedobjecttextranges.png "</bpt>Текст, разделенный вставленными объектами.<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>Example of a text stream with embedded objects and their range spans</source>
          <target state="translated">Пример текстового потока с внедренными объектами и их диапазонами</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A&gt;</ph> respects both hidden and visible text.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A&gt;</ph> соблюдает скрытым и видимым текстом.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A&gt;</ph> defers to the next largest <ph id="ph2">&lt;xref:System.Windows.Automation.Text.TextUnit&gt;</ph> supported if the given <ph id="ph3">&lt;xref:System.Windows.Automation.Text.TextUnit&gt;</ph> is not supported by the control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A&gt;</ph> откладывает до следующего наибольшего <ph id="ph2">&lt;xref:System.Windows.Automation.Text.TextUnit&gt;</ph> поддерживаемого Если данного <ph id="ph3">&lt;xref:System.Windows.Automation.Text.TextUnit&gt;</ph> не поддерживается элементом управления.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>The order, from smallest unit to largest, is listed below.</source>
          <target state="translated">Порядок от наименьшей единицы к максимальному, указанных ниже.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Move(System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>The text is not altered in any way, the text range just spans a different part of the text.</source>
          <target state="translated">Текст никоим образом не изменяется, текстовый диапазон просто распространяется в другую часть текста.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
          <source>The endpoint to move.</source>
          <target state="translated">Перемещаемая конечная точка.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
          <source>Another range from the same text provider.</source>
          <target state="translated">Второй диапазон от того же поставщика текста.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
          <source>An endpoint on the other range.</source>
          <target state="translated">Конечная точка второго диапазона.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
          <source>Moves one endpoint of a text range to the specified endpoint of a second text range.</source>
          <target state="translated">Перемещает конечную точку текстового диапазона в заданную конечную точку второго текстового диапазона.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByRange(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Provider.ITextRangeProvider,System.Windows.Automation.Text.TextPatternRangeEndpoint)">
          <source>If the endpoint being moved crosses the other endpoint of the same text range then that other endpoint is moved also, resulting in a degenerate range and ensuring the correct ordering of the endpoints (that is, <ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start&gt;</ph> is always less than or equal to <ph id="ph2">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End&gt;</ph>).</source>
          <target state="translated">Если другой конечной точке же текстовый диапазон пересекает перемещения конечной точки, а затем этой конечной точки перемещаются также приведет к вырожденный диапазон и убедившись в правильный порядок конечных точек (то есть <ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start&gt;</ph> , всегда меньше или равно <ph id="ph2">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>The endpoint to move.</source>
          <target state="translated">Перемещаемая конечная точка.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>The textual unit for moving.</source>
          <target state="translated">Перемещаемая единица текста.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>The number of units to move.</source>
          <target state="translated">Число перемещаемых единиц.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>A positive value moves the endpoint forward.</source>
          <target state="translated">При положительном значении выполняется перемещение вперед.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>A negative value moves backward.</source>
          <target state="translated">При отрицательном значении выполняется перемещение назад.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>A value of 0 has no effect.</source>
          <target state="translated">При значении 0 перемещение не выполняется.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>Moves one endpoint of the text range the specified number of text units within the document range.</source>
          <target state="translated">Перемещает конечную точку текстового диапазона на заданное количество единиц текста в диапазоне всего документа.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>The number of units actually moved, which can be less than the number requested if moving the endpoint runs into the beginning or end of the document.</source>
          <target state="translated">Количество единиц, на которое выполнено перемещение; оно может быть меньше запрошенного количества единиц, если при перемещении конечная точка достигает начала или конца документа.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>When it is necessary to traverse the content of a text range, a series of steps are involved behind the scenes in order for the <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A&gt;</ph> method to execute successfully.</source>
          <target state="translated">Для обхода содержимого текстового диапазона в фоновом режиме применяется ряд шагов для успешного выполнения метода <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.Move%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>The text range is normalized; that is, the text range is collapsed to a degenerate range at the <ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start&gt;</ph> endpoint, which makes the <ph id="ph2">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End&gt;</ph> endpoint superfluous.</source>
          <target state="translated">Текстовый диапазон нормализован, т. е. он свернут до вырожденного диапазона в конечной точке <ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start&gt;</ph> , что делает конечную точку <ph id="ph2">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End&gt;</ph> избыточной.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>This step is necessary to remove ambiguity in situations where a text range spans <ph id="ph1">`unit`</ph> boundaries; for example, "{The U}RL <bpt id="p1">[</bpt><ph id="ph2">http://www.microsoft.com</ph><ept id="p1">](http://www.microsoft.com)</ept> is embedded in text" where "{" and "}" are the text range endpoints.</source>
          <target state="translated">Этот шаг необходим для устранения неоднозначности в случаях, когда текстовый диапазон охватывает <ph id="ph1">`unit`</ph> границы; например,» {U} RL <bpt id="p1">[</bpt> <ph id="ph2">http://www.microsoft.com</ph> <ept id="p1">](http://www.microsoft.com)</ept> внедряется в текст» где «{» и «}», конечные точки диапазона текста.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>The resulting range is moved backward in the <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A&gt;</ph> to the beginning of the requested <ph id="ph2">`unit`</ph> boundary.</source>
          <target state="translated">Результирующий диапазон перемещается в <ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextProvider.DocumentRange%2A&gt;</ph> в начало запрошенной границы <ph id="ph2">`unit`</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>The range is then expanded from a degenerate range state by moving the <ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End&gt;</ph> endpoint by one requested <ph id="ph2">`unit`</ph> boundary.</source>
          <target state="translated">Затем диапазон расширяется из вырожденного состояния путем перемещения конечной точки <ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.End&gt;</ph> на одну запрошенную границу <ph id="ph2">`unit`</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source><bpt id="p1">![</bpt>Range adjustments by Move &amp; ExpandToEnclosingUnit<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-moveandexpand-examples.png "</bpt>Range adjustments by Move &amp; ExpandToEnclosingUnit<ept id="p2">")</ept></source>
          <target state="translated"><bpt id="p1">![</bpt>Настройка диапазона Move &amp; ExpandToEnclosingUnit<ept id="p1">]</ept><bpt id="p2">(~/add/media/uia-textpattern-moveandexpand-examples.png "</bpt>диапазона Move &amp; ExpandToEnclosingUnit<ept id="p2">")</ept></target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>Examples of how a text range is adjusted for Move() and ExpandToEnclosingUnit()</source>
          <target state="translated">Примеры корректировки текстового диапазона для Move() и ExpandToEnclosingUnit()</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit%2A&gt;</ph> defers to the next largest <ph id="ph2">&lt;xref:System.Windows.Automation.Text.TextUnit&gt;</ph> supported if the given <ph id="ph3">&lt;xref:System.Windows.Automation.Text.TextUnit&gt;</ph> is not supported by the control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit%2A&gt;</ph> откладывает до следующего наибольшего <ph id="ph2">&lt;xref:System.Windows.Automation.Text.TextUnit&gt;</ph> поддерживаемого Если данного <ph id="ph3">&lt;xref:System.Windows.Automation.Text.TextUnit&gt;</ph> не поддерживается элементом управления.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.MoveEndpointByUnit(System.Windows.Automation.Text.TextPatternRangeEndpoint,System.Windows.Automation.Text.TextUnit,System.Int32)">
          <source>The order, from smallest unit to largest, is listed below.</source>
          <target state="translated">Порядок от наименьшей единицы к максимальному, указанных ниже.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.RemoveFromSelection">
          <source>Removes a highlighted section of text, corresponding to the caller's <ph id="ph1">&lt;see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /&gt;</ph> and <ph id="ph2">&lt;see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /&gt;</ph> endpoints, from the collection of highlighted text in a text container that supports multiple, disjoint selections.</source>
          <target state="translated">Удаляет выделенный текст, соответствующий конечным точкам <ph id="ph1">&lt;see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /&gt;</ph> и <ph id="ph2">&lt;see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /&gt;</ph> вызывающего объекта, из коллекции выделенного текста в текстовом контейнере, поддерживающем раздельное множественное выделение.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.RemoveFromSelection">
          <source>The text insertion point will move to the area of the removed highlight.</source>
          <target state="translated">Точка вставки текста будет перемещаются в область удаленного выделения.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.RemoveFromSelection">
          <source>Providing a degenerate text range will move the insertion point.</source>
          <target state="translated">Предоставление вырожденный диапазон переместит курсор.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.RemoveFromSelection">
          <source>If text provider does not support multiple, disjoint selections (for example, <ph id="ph1">&lt;see cref="P:System.Windows.Automation.TextPattern.SupportedTextSelection" /&gt;</ph> must have a value of <ph id="ph2">&lt;see langword="Multiple" /&gt;</ph>).</source>
          <target state="translated">Если поставщик текста не поддерживает раздельное множественное выделение (например, <ph id="ph1">&lt;see cref="P:System.Windows.Automation.TextPattern.SupportedTextSelection" /&gt;</ph> должно иметь значение <ph id="ph2">&lt;see langword="Multiple" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the text control should be scrolled so the text range is flush with the top of the viewport; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if it should be flush with the bottom of the viewport.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если текстовый элемент управления должен выполнить прокрутку так, чтобы текстовый диапазон отобразился у верхней границы окна просмотра; <ph id="ph2">&lt;see langword="false" /&gt;</ph>, если текстовый диапазон должен отобразиться у верхней границы окна просмотра.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView(System.Boolean)">
          <source>Causes the text control to scroll vertically until the text range is visible in the viewport.</source>
          <target state="translated">Заставляет текстовый элемент управления выполнять вертикальную прокрутку, пока текстовый диапазон не появится в окне просмотра.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView(System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView%2A&gt;</ph> respects both hidden and visible text.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView%2A&gt;</ph> соблюдает скрытым и видимым текстом.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.ScrollIntoView(System.Boolean)">
          <source>If the text range is hidden, the text control will scroll only if the hidden text has an anchor in the viewport.</source>
          <target state="translated">Если текстовый диапазон является скрытым, текстовый элемент управления будет прокручиваться только в том случае, если скрытый текст имеет привязку в окне просмотра.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Select">
          <source>Highlights text in the text control corresponding to the text range <ph id="ph1">&lt;see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /&gt;</ph> and <ph id="ph2">&lt;see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /&gt;</ph> endpoints.</source>
          <target state="translated">Выделяет в текстовом элементе управления текст, соответствующий конечным точкам <ph id="ph1">&lt;see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start" /&gt;</ph> и <ph id="ph2">&lt;see cref="F:System.Windows.Automation.Text.TextPatternRangeEndpoint.End" /&gt;</ph> текстового диапазона.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Select">
          <source>If a degenerate text range is provided, the text insertion point will move to the <ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start&gt;</ph> endpoint of the text range.</source>
          <target state="translated">Если указано вырожденного диапазона точка вставки текста перейдет <ph id="ph1">&lt;xref:System.Windows.Automation.Text.TextPatternRangeEndpoint.Start&gt;</ph> конечную точку текстового диапазона.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="M:System.Windows.Automation.Provider.ITextRangeProvider.Select">
          <source>Occurs when text selection is not supported by the text control.</source>
          <target state="translated">Возникает, когда выделение текста не поддерживается в элементе управления текстом.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>