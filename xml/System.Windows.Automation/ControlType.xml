<Type Name="ControlType" FullName="System.Windows.Automation.ControlType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="76936aa39b73f442e9c050239c3cb30a303a1115" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30619728" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ControlType : System.Windows.Automation.AutomationIdentifier" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ControlType extends System.Windows.Automation.AutomationIdentifier" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Automation.ControlType" />
  <TypeSignature Language="VB.NET" Value="Public Class ControlType&#xA;Inherits AutomationIdentifier" />
  <TypeSignature Language="C++ CLI" Value="public ref class ControlType : System::Windows::Automation::AutomationIdentifier" />
  <AssemblyInfo>
    <AssemblyName>UIAutomationTypes</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Automation.AutomationIdentifier</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Определяет тип элемента управления пользовательского интерфейса.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.ControlType> наследует от <xref:System.Windows.Automation.AutomationIdentifier> и используется для определения типа элементов управления, представленного <xref:System.Windows.Automation.AutomationElement>. Тип элемента управления определяется разработчиком поставщика автоматизации пользовательского интерфейса.  
  
 Этот класс содержит статические поля, которые сами являются <xref:System.Windows.Automation.ControlType> объектов, чтобы определить стандартные типы элементов управления. Имеется также <xref:System.Windows.Automation.ControlType.Custom> тип для элементов управления, которые не соответствуют одному из определенных типов.  
  
 — Единственный случай, где может изменить тип элемента управления для элемента управления во время выполнения, когда элемент управления поддерживает <xref:System.Windows.Automation.MultipleViewPattern>. Например, [!INCLUDE[TLA2#tla_win32](~/includes/tla2sharptla-win32-md.md)] представление, которое может быть списка <xref:System.Windows.Automation.ControlType.DataGrid> или <xref:System.Windows.Automation.ControlType.List>, в зависимости от текущего представления.  
  
 Типы элемента управления не имеют эквивалентов для шаблонов элементов управления. Элемент управления может быть только одного типа, но он может поддерживать несколько шаблонов или не шаблоны, в зависимости от своих функций.  
  
 Подробные сведения о различных типах элементов управления см [типы элементов управления автоматизации пользовательского интерфейса](~/docs/framework/ui-automation/ui-automation-control-types.md).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Button">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Button;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Button" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Button" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Button As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Button;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет элемент управления "Кнопка".</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Кнопки выполняют одно действие при нажатии.  
  
 Кнопка может использоваться как отдельный элемент управления или как вложенный элемент управления в другом типе элемента управления. Например стрелку раскрывающегося списка в поле со списком находится кнопка. При использовании как вложенный кнопка находится в представлении элемента управления [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] дерева (не в представлении содержимого).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Calendar">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Calendar;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Calendar" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Calendar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Calendar As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Calendar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет элемент управления "Календарь", например, управляющий элемент выбора даты.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckBox">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType CheckBox;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType CheckBox" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.CheckBox" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CheckBox As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ CheckBox;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет элемент управления "Флажок".</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Флажок может использоваться как отдельный элемент управления или как вложенный элемент управления в другом типе элемента управления.  Например флажок в начале строки в элемент управления DataGrid, который используется для выбора строки (используется для манипулирования содержимым) отображается в представлении элемента управления, но не в представлении содержимого. Тем не менее отмеченный флажок в форме, которая представляет данные, находится в представлениях содержимого и элемента управления.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ComboBox">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType ComboBox;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType ComboBox" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.ComboBox" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ComboBox As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ ComboBox;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет элемент управления "Поле со списком".</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Существуют две разновидности элемент управления ComboBox. Списком представляет, пользователь может выбрать из списка. Для редактирования поля со списком представляет список вариантов и также имеет редактируемый текст области, где пользователь может ввести Выбор продлен вариантами, указанными в списке.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Custom">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Custom;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Custom" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Custom" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Custom As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Custom;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет элемент управления, который не относится к одному из определенных типов элементов управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.ControlType.Custom> Указывает тип элемента управления, элемент управления, который определяется как один из типов стандартных элементов управления (таких как <xref:System.Windows.Automation.ControlType.Button> или <xref:System.Windows.Automation.ControlType.Calendar>).  
  
 Разработчики элементов управления должна проверять другие типы элементов управления, прежде чем определять свой элемент управления как <xref:System.Windows.Automation.ControlType.Custom> типа, чтобы убедиться в том, что их управления не предоставляет те же функциональные возможности, как один из определенных типов элементов управления элемента управления.  
  
 Объект <xref:System.Windows.Automation.ControlType.Custom> типа элемента управления требует дополнительной работы поставщика, чтобы реализовать [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)]. Кроме того клиенты автоматизации пользовательского интерфейса не будет иметь возможность предвидеть структуру элемента управления, взаимодействие с клавиатурой и возможные шаблоны элементов управления на основе типа элемента управления элемента управления.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataGrid">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType DataGrid;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType DataGrid" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.DataGrid" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DataGrid As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ DataGrid;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет элемент управления "Сетка данных".</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если ячейки содержат только текст, тип элемента управления должен быть <xref:System.Windows.Automation.ControlType.Table>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataItem">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType DataItem;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType DataItem" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.DataItem" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DataItem As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ DataItem;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет элемент управления "Элемент данных".</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Windows.Automation.ControlType.DataItem> является сложного элемента, который может содержать много других элементов управления.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Document">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Document;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Document" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Document" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Document As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Document;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет элемент управления "Документ".</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Документ содержит текстовое содержимое более одной строки.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Edit">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Edit;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Edit" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Edit" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Edit As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Edit;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет элемент управления редактирования, например, текстовое поле.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.ControlType.Edit> Элемент управления может использоваться как отдельный элемент управления или как вложенный элемент управления в другом типе элемента управления.  Например, область, где пользователь может ввести значение в поле со списком является <xref:System.Windows.Automation.ControlType.Edit> элемента управления, и в этом случае элемент управления не является частью представления содержимого.  
  
 <xref:System.Windows.Automation.ControlType.Edit> элементы управления также может представлять элементы управления, содержащие пароли. <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.IsPassword%2A> Свойство позволяет продуктов, таких как средства чтения с экрана, чтобы решить, следует ли Показать содержимое.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNeverSupportedPatterns">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationPattern[] GetNeverSupportedPatterns ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationPattern[] GetNeverSupportedPatterns() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.ControlType.GetNeverSupportedPatterns" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNeverSupportedPatterns () As AutomationPattern()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Automation::AutomationPattern ^&gt; ^ GetNeverSupportedPatterns();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationPattern[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает идентификаторы шаблонов, которые не поддерживаются типом элемента управления.</summary>
        <returns>Массив идентификаторов шаблонов [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)].</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод полезен для клиентов автоматизации пользовательского интерфейса, таких как платформы тестирования для реализации поставщика, который необходимо найти все шаблоны элементов управления, которые не допускаются для данного типа элемента.  
  
   
  
## Examples  
 В следующем примере вызывается <xref:System.Windows.Automation.ControlType.GetNeverSupportedPatterns%2A> на каждый тип из <xref:System.Windows.Automation.ControlType> содержащихся в виде статического поля в <xref:System.Windows.Automation.ControlType> класса.  
  
 [!code-csharp[UIAControlTypePatterns_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAControlTypePatterns_snip/CSharp/GetPatternsForm.cs#101)]
 [!code-vb[UIAControlTypePatterns_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAControlTypePatterns_snip/visualbasic/getpatternsform.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequiredPatternSets">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationPattern[][] GetRequiredPatternSets ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationPattern[][] GetRequiredPatternSets() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.ControlType.GetRequiredPatternSets" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRequiredPatternSets () As AutomationPattern()()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;cli::array &lt;System::Windows::Automation::AutomationPattern ^&gt; ^&gt; ^ GetRequiredPatternSets();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationPattern[][]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает массив наборов требуемых шаблонов.</summary>
        <returns>Массив наборов требуемых шаблонов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Каждый элемент массива содержит массив шаблонов, и каждый элемент, который имеет данный тип элемента управления должен поддерживать хотя бы один из этих массивов.  
  
 Этот метод полезен для клиентов автоматизации пользовательского интерфейса, которые необходимо найти все возможные шаблоны, такие как тестирование структуры для реализации поставщика.  
  
   
  
## Examples  
 В следующем примере вызывается <xref:System.Windows.Automation.ControlType.GetRequiredPatternSets%2A> на каждый тип из <xref:System.Windows.Automation.ControlType> содержащихся в виде статического поля в <xref:System.Windows.Automation.ControlType> класса.  
  
 [!code-csharp[UIAControlTypePatterns_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAControlTypePatterns_snip/CSharp/GetPatternsForm.cs#101)]
 [!code-vb[UIAControlTypePatterns_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAControlTypePatterns_snip/visualbasic/getpatternsform.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRequiredProperties">
      <MemberSignature Language="C#" Value="public System.Windows.Automation.AutomationProperty[] GetRequiredProperties ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Automation.AutomationProperty[] GetRequiredProperties() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.ControlType.GetRequiredProperties" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRequiredProperties () As AutomationProperty()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Automation::AutomationProperty ^&gt; ^ GetRequiredProperties();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.AutomationProperty[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает массив необходимого свойства [!INCLUDE[TLA#tla_id#plural](~/includes/tlasharptla-idsharpplural-md.md)] для данного типа элемента управления.</summary>
        <returns>Массив свойства [!INCLUDE[TLA2#tla_id#plural](~/includes/tla2sharptla-idsharpplural-md.md)].</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод полезен для клиентов автоматизации пользовательского интерфейса, которые необходимо найти все возможные свойства, такие как тестирование структуры для реализации поставщика.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Group">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Group;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Group" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Group" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Group As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Group;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет групповой элемент управления, который действует как контейнер для других элементов управления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Группа — контейнерный элемент управления, который содержит разными типами элементов управления и используется для логически связывать эти элементы управления.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Header">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Header;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Header" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Header" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Header As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Header;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет элемент управления заголовка, который является контейнером для меток строк и столбцов данных.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderItem">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType HeaderItem;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType HeaderItem" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.HeaderItem" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HeaderItem As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ HeaderItem;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет элемент заголовка, который является меткой для строки или столбца данных.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Hyperlink">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Hyperlink;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Hyperlink" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Hyperlink" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Hyperlink As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Hyperlink;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет элемент управления "Гиперссылка".</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Элемент управления гиперссылки переходит к указанному [!INCLUDE[TLA#tla_url](~/includes/tlasharptla-url-md.md)] при щелчке элемента управления.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Image">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Image;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Image" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Image" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Image As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Image;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет элемент управления "Изображение".</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.ControlType.Image> Типа элемента управления может использоваться как отдельный элемент управления или как вложенный элемент управления в другом типе элемента управления.  Например кнопки используется изображение вместо текста для указания его функциональные возможности для пользователя.  
  
 При использовании только для оформления в представление элемента управления появится изображение [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] дерева (не в представлении содержимого).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="List">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType List;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType List" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.List" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly List As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ List;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет элемент управления "Список", например, список.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Windows.Automation.ControlType.List> является типом элемента управления, который содержит <xref:System.Windows.Automation.ControlType.ListItem> и (возможно) <xref:System.Windows.Automation.ControlType.Group> типы элементов управления.  
  
 Объект <xref:System.Windows.Automation.ControlType.List> элемент управления может использоваться как отдельный элемент управления или как вложенный элемент управления в другом типе элемента управления. Например, поле со списком имеет <xref:System.Windows.Automation.ControlType.List> элемент управления, содержащий варианты, доступные при нажатии кнопки раскрывающегося списка. При использовании как вложенный, <xref:System.Windows.Automation.ControlType.List> только в представлении элемента управления [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] дерева (не в представлении содержимого).  
  
 При использовании как вложенный, <xref:System.Windows.Automation.ControlType.List> не имеет `Name` свойства присвоено.  
  
 Объект <xref:System.Windows.Automation.ControlType.List> может содержать <xref:System.Windows.Automation.ControlType.DataItem> элементов управления.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ListItem">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType ListItem;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType ListItem" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.ListItem" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ListItem As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ ListItem;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет элемент управления элемента списка, который является дочерним элементом для элемента управления "Список".</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Windows.Automation.ControlType.Header> также может быть потомком элемента управления списком.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LocalizedControlType">
      <MemberSignature Language="C#" Value="public string LocalizedControlType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LocalizedControlType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Automation.ControlType.LocalizedControlType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LocalizedControlType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LocalizedControlType { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает описание типа элемента управления.</summary>
        <value>Локализованное описание типа элемента управления, такие как "кнопка".</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере находятся все типы элементов управления с помощью отражения и их <xref:System.Windows.Automation.ControlType.LocalizedControlType%2A> свойства выводятся вместе с другими данными.  
  
 [!code-csharp[UIAControlTypePatterns_snip#101](~/samples/snippets/csharp/VS_Snippets_Wpf/UIAControlTypePatterns_snip/CSharp/GetPatternsForm.cs#101)]
 [!code-vb[UIAControlTypePatterns_snip#101](~/samples/snippets/visualbasic/VS_Snippets_Wpf/UIAControlTypePatterns_snip/visualbasic/getpatternsform.vb#101)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupById">
      <MemberSignature Language="C#" Value="public static System.Windows.Automation.ControlType LookupById (int id);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Automation.ControlType LookupById(int32 id) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Automation.ControlType.LookupById(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LookupById (id As Integer) As ControlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Automation::ControlType ^ LookupById(int id);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="id" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="id">Идентификатор типа элемента управления.</param>
        <summary>Извлекает объект <see cref="T:System.Windows.Automation.ControlType" />, который инкапсулирует заданный числовой идентификатор.</summary>
        <returns>To be added.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обычно определяется тип элемента управления <xref:System.Windows.Automation.ControlType> объекта. Этот метод дает возможность создания такого объекта, когда известен только числовой идентификатор.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Menu">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Menu;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Menu" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Menu" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Menu As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Menu;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет элемент управления "Меню", например, меню верхнего уровня в окне приложения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Меню — это контейнер для коллекции элементов меню. для экземпляра, элемент управления, которое появится под **файл** при щелчке, которая содержит **New**, **откройте**, и т. д.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuBar">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType MenuBar;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType MenuBar" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.MenuBar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MenuBar As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ MenuBar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет элемент управления "Строка меню", который обычно содержит набор меню верхнего уровня.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Windows.Automation.ControlType.MenuBar> тип элемента управления представляет контейнер для набора меню верхнего уровня приложения.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MenuItem">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType MenuItem;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType MenuItem" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.MenuItem" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MenuItem As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ MenuItem;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет элемент управления "Пункт меню".</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Windows.Automation.ControlType.MenuItem> является дочерним элементом <xref:System.Windows.Automation.ControlType.Menu> или <xref:System.Windows.Automation.ControlType.MenuBar> элемента управления.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pane">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Pane;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Pane" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Pane" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Pane As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Pane;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет элемент управления "Область".</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Windows.Automation.ControlType.Pane> позволяет визуально отделить содержимого в <xref:System.Windows.Automation.ControlType.Window>. Как правило, пользователь переходит между панелями, нажимая клавишу TAB, F6 или CTRL + TAB, в зависимости от контекста.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProgressBar">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType ProgressBar;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType ProgressBar" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.ProgressBar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ProgressBar As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ ProgressBar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет элемент управления "Индикатор выполнения", который визуально показывает ход выполнения длительной операции.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RadioButton">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType RadioButton;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType RadioButton" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.RadioButton" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RadioButton As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ RadioButton;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет элемент управления "Переключатель", который является механизмом выбора, позволяющим выбрать не более одного элемента в группе.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ScrollBar">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType ScrollBar;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType ScrollBar" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.ScrollBar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ScrollBar As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ ScrollBar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет элемент управления "Полоса прокрутки", например, полосу прокрутки в окне приложения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Windows.Automation.ControlType.ScrollBar> типа элемента управления с набором кнопок и которые позволяют пользователю с помощью мыши для прокрутки содержимого окна или контейнера элемента управления thumb.  
  
 Используйте <xref:System.Windows.Automation.AutomationElement.AutomationElementInformation.AutomationId%2A> свойство для различения <xref:System.Windows.Automation.ControlType.Button> элементы, соответствующие большого инкремента, значительно уменьшается, малого инкремента и декремента малых кнопок.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Separator">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Separator;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Separator" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Separator" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Separator As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Separator;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет разделитель, который создает визуальное разделение элементов управления, например, меню и панелей инструментов.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Slider">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Slider;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Slider" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Slider" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Slider As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Slider;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет элемент управления "Ползунок".</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Windows.Automation.ControlType.Slider> типа элемента управления состоит из набора кнопок, связанных с <xref:System.Windows.Automation.ControlType.Edit> управления, дать пользователю возможность выбрать набор элементов или задать числовое значение в диапазоне.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Spinner">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Spinner;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Spinner" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Spinner" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Spinner As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Spinner;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет элемент управления "Счетчик".</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Windows.Automation.ControlType.Spinner> типа элемента управления состоит из набора кнопок, которые позволяют пользователю для выбора из набора элементов или задать числовое значение в диапазоне.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SplitButton">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType SplitButton;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType SplitButton" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.SplitButton" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SplitButton As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ SplitButton;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет кнопку списка, которая выполняет действие по умолчанию, а также может раскрыть список других возможных действий.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StatusBar">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType StatusBar;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType StatusBar" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.StatusBar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StatusBar As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ StatusBar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет элемент управления "Строка состояния".</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Automation.ControlType.StatusBar> типы элементов управления чаще всего subcontrols из <xref:System.Windows.Automation.ControlType.Window> типа элемента управления [!INCLUDE[TLA2#tla_uiautomation](~/includes/tla2sharptla-uiautomation-md.md)] элементов.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tab">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Tab;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Tab" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Tab" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Tab As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Tab;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет элемент управления "Вкладка".</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Windows.Automation.ControlType.Tab> — тип элемента управления, который содержит по крайней мере один <xref:System.Windows.Automation.ControlType.TabItem> дочернего элемента управления.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TabItem">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType TabItem;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType TabItem" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.TabItem" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TabItem As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ TabItem;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет элемент управления "Элемент вкладки", который представляет страницу элемента управления "Вкладка".</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Table">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Table;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Table" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Table" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Table As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Table;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет таблицу.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Windows.Automation.ControlType.Table> тип элемента управления аналогичен <xref:System.Windows.Automation.ControlType.DataGrid> , но содержит только текст. Таблицы могут также содержать <xref:System.Windows.Automation.ControlType.Header> типы элементов управления.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Text;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Text" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Text" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Text As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Text;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет элемент управления редактирования, например, текстовое поле или текстовое поле в формате RTF.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Windows.Automation.ControlType.Text> элемент управления может использоваться как отдельный элемент управления, такие как <xref:System.Windows.Automation.ControlType.Edit> управления, или в качестве подкомпонента, таких как область <xref:System.Windows.Automation.ControlType.ComboBox> где пользователь может ввести значение.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Thumb">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Thumb;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Thumb" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Thumb" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Thumb As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Thumb;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет элемент управления в полосе прокрутки, который можно перетащить в другое положение.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Windows.Automation.ControlType.Thumb> управления используется входить в состав <xref:System.Windows.Automation.ControlType.ScrollBar> типа элемента управления. Как вложенный <xref:System.Windows.Automation.ControlType.Thumb> не имеет <xref:System.Windows.Automation.AutomationElement.NameProperty>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleBar">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType TitleBar;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType TitleBar" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.TitleBar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TitleBar As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ TitleBar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет заголовок окна.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolBar">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType ToolBar;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType ToolBar" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.ToolBar" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ToolBar As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ ToolBar;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет панель инструментов, например, элемент управления, содержащий набор кнопок в окне приложения.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolTip">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType ToolTip;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType ToolTip" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.ToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ToolTip As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ ToolTip;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет элемент управления "Подсказка" — информационное окно, которое отображается после наведения указателя на элемент управления или иногда после перехода на элемент управления с помощью клавиатуры (клавиша табуляции).</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Tree">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Tree;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Tree" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Tree" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Tree As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Tree;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет элемент управления "Дерево".</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Windows.Automation.ControlType.Tree> типа элемента управления — это контейнер для иерархическое расположение <xref:System.Windows.Automation.ControlType.TreeItem> или <xref:System.Windows.Automation.ControlType.DataItem> типы элементов управления.  
  
 Каждый узел дерева может содержать другие узлы.  Узел, содержащий дочерние узлы, которые могут отображаться как развернут или свернут.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TreeItem">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType TreeItem;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType TreeItem" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.TreeItem" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TreeItem As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ TreeItem;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет узел в элементе управления <see cref="F:System.Windows.Automation.ControlType.TreeItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Windows.Automation.ControlType.TreeItem> типа элемента управления может использоваться только как вложенный из <xref:System.Windows.Automation.ControlType.Tree> элемента управления.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Window">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.Automation.ControlType Window;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.Automation.ControlType Window" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Automation.ControlType.Window" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Window As ControlType " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::Automation::ControlType ^ Window;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>UIAutomationTypes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.ControlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Определяет рамку окна, которая содержит дочерние объекты.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Элементы управления этого типа всегда поддерживать <xref:System.Windows.Automation.WindowPattern>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>