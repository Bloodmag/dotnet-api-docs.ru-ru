<Type Name="Button" FullName="System.Windows.Controls.Button">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c15b6b6ec577e736eb33ed1a41fcc550c20ab6ac" />
    <Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="11/17/2018" />
    <Meta Name="ms.locfileid" Value="51866183" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Button : System.Windows.Controls.Primitives.ButtonBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Button extends System.Windows.Controls.Primitives.ButtonBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.Button" />
  <TypeSignature Language="VB.NET" Value="Public Class Button&#xA;Inherits ButtonBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class Button : System::Windows::Controls::Primitives::ButtonBase" />
  <TypeSignature Language="F#" Value="type Button = class&#xA;    inherit ButtonBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Controls.Primitives.ButtonBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="64035-101">Представляет элемент управления "Кнопка Windows", который будет реагировать на событие <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="64035-101">Represents a Windows button control, which reacts to the <see cref="E:System.Windows.Controls.Primitives.ButtonBase.Click" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64035-102"><xref:System.Windows.Controls.Button> Класс наследуется непосредственно от <xref:System.Windows.Controls.Primitives.ButtonBase?displayProperty=nameWithType> класса.</span><span class="sxs-lookup"><span data-stu-id="64035-102">The <xref:System.Windows.Controls.Button> class inherits directly from the <xref:System.Windows.Controls.Primitives.ButtonBase?displayProperty=nameWithType> class.</span></span>  
  
 <span data-ttu-id="64035-103">**Модель содержимого:** <xref:System.Windows.Controls.Button> является <xref:System.Windows.Controls.ContentControl>.</span><span class="sxs-lookup"><span data-stu-id="64035-103">**Content Model:** <xref:System.Windows.Controls.Button> is a <xref:System.Windows.Controls.ContentControl>.</span></span> <span data-ttu-id="64035-104">Его свойство содержимого — <xref:System.Windows.Controls.ContentControl.Content%2A>.</span><span class="sxs-lookup"><span data-stu-id="64035-104">Its content property is <xref:System.Windows.Controls.ContentControl.Content%2A>.</span></span>  
  
 <span data-ttu-id="64035-105">Обрабатывать <xref:System.Windows.Controls.Primitives.ButtonBase.Click?displayProperty=nameWithType> событий, чтобы ответить, когда пользователь нажимает кнопку <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="64035-105">Handle the <xref:System.Windows.Controls.Primitives.ButtonBase.Click?displayProperty=nameWithType> event to respond when the user clicks a <xref:System.Windows.Controls.Button>.</span></span>  
  
 <span data-ttu-id="64035-106"><xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A> Метки метод <xref:System.Windows.UIElement.MouseLeftButtonDown> событие как обработанное.</span><span class="sxs-lookup"><span data-stu-id="64035-106">The <xref:System.Windows.Controls.Primitives.ButtonBase.OnMouseLeftButtonDown%2A> method marks the <xref:System.Windows.UIElement.MouseLeftButtonDown> event as handled.</span></span> <span data-ttu-id="64035-107">Реагировать на <xref:System.Windows.UIElement.MouseLeftButtonDown> событий, присоединить обработчик событий <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> события или вызов <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> с `handledEventsToo` присвоено `true`.</span><span class="sxs-lookup"><span data-stu-id="64035-107">To respond to the <xref:System.Windows.UIElement.MouseLeftButtonDown> event, attach an event handler to the <xref:System.Windows.ContentElement.PreviewMouseLeftButtonDown> event, or call <xref:System.Windows.UIElement.AddHandler%28System.Windows.RoutedEvent%2CSystem.Delegate%2CSystem.Boolean%29> with `handledEventsToo` set to `true`.</span></span>  
  
## <a name="customizing-the-button-control"></a><span data-ttu-id="64035-108">Настройка элемента управления Button</span><span class="sxs-lookup"><span data-stu-id="64035-108">Customizing the Button Control</span></span>  
 <span data-ttu-id="64035-109">Чтобы применить значения свойств к нескольким <xref:System.Windows.Controls.Button> можно использовать элементы управления <xref:System.Windows.FrameworkElement.Style%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="64035-109">To apply the same property settings to multiple <xref:System.Windows.Controls.Button> controls, use the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="64035-110">Вы можете изменить значение по умолчанию <xref:System.Windows.Controls.ControlTemplate> предоставить уникальный внешний вид элемента управления.</span><span class="sxs-lookup"><span data-stu-id="64035-110">You can modify the default <xref:System.Windows.Controls.ControlTemplate> to give the control a unique appearance.</span></span> <span data-ttu-id="64035-111">Дополнительные сведения о создании <xref:System.Windows.Controls.ControlTemplate>, см. в разделе [Настройка внешнего вида существующего элемента управления путем создания объекта ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="64035-111">For more information about creating a <xref:System.Windows.Controls.ControlTemplate>, see [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  <span data-ttu-id="64035-112">Чтобы увидеть части и состояния, относящиеся к <xref:System.Windows.Controls.Button>, см. в разделе [стили и шаблоны кнопок](~/docs/framework/wpf/controls/button-styles-and-templates.md).</span><span class="sxs-lookup"><span data-stu-id="64035-112">To see the parts and states that are specific to the <xref:System.Windows.Controls.Button>, see [Button Styles and Templates](~/docs/framework/wpf/controls/button-styles-and-templates.md).</span></span>  
  
 <span data-ttu-id="64035-113">Свойства зависимостей для данного элемента управления могут быть заданы посредством стиля элемента управления по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="64035-113">Dependency properties for this control might be set by the control’s default style.</span></span>  <span data-ttu-id="64035-114">Если свойство имеет значение стилем по умолчанию, может измениться со значения по умолчанию, когда элемент управления отображается в приложении.</span><span class="sxs-lookup"><span data-stu-id="64035-114">If a property is set by a default style, the property might change from its default value when the control appears in the application.</span></span> <span data-ttu-id="64035-115">Стиль по умолчанию определяется, какая тема рабочего стола используется, когда приложение выполняется.</span><span class="sxs-lookup"><span data-stu-id="64035-115">The default style is determined by which desktop theme is used when the application is running.</span></span>  <span data-ttu-id="64035-116">Дополнительные сведения см. в разделе [темы WPF по умолчанию](https://go.microsoft.com/fwlink/?LinkID=158252).</span><span class="sxs-lookup"><span data-stu-id="64035-116">For more information, see [Default WPF Themes](https://go.microsoft.com/fwlink/?LinkID=158252).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64035-117">Свойства visual будет действовать только если это свойство является одновременно в <xref:System.Windows.Controls.Button> управления шаблона по умолчанию и задается с помощью.</span><span class="sxs-lookup"><span data-stu-id="64035-117">Setting a visual property will only have an effect if that property is both present in <xref:System.Windows.Controls.Button> control's default template and is set by using a .</span></span> <span data-ttu-id="64035-118">Список визуальных свойств можно найти в разделе «Изменение Visual структуру управления» [Настройка внешнего вида существующего элемента управления путем создания объекта ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span><span class="sxs-lookup"><span data-stu-id="64035-118">You can find a list of visual properties in the "Changing the Visual Structure of a Control" section in [Customizing the Appearance of an Existing Control by Creating a ControlTemplate](~/docs/framework/wpf/controls/customizing-the-appearance-of-an-existing-control.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="64035-119">В следующем примере показано три кнопки, которые реагируют на нажатие тремя разными способами.</span><span class="sxs-lookup"><span data-stu-id="64035-119">The following example shows three buttons that respond to clicks in three different ways.</span></span>  
  
-   <span data-ttu-id="64035-120">При наведении указателя мыши: первая кнопка меняет цвет, когда пользователь наводит указатель мыши на кнопку.</span><span class="sxs-lookup"><span data-stu-id="64035-120">Hover: the first button changes colors when the user hovers with the mouse over the button.</span></span>  
  
-   <span data-ttu-id="64035-121">Нажатие: для второй кнопки необходимо что нажать указатель мыши находится над кнопкой.</span><span class="sxs-lookup"><span data-stu-id="64035-121">Press: the second button requires that the mouse be pressed while the mouse pointer is over the button.</span></span>  
  
-   <span data-ttu-id="64035-122">Выпуск: третий не сбрасывает цвет фона кнопки, пока не нажата и отпущена кнопка мыши.</span><span class="sxs-lookup"><span data-stu-id="64035-122">Release: the third does not reset the background color of the buttons until the mouse is pressed and released on the button.</span></span>  
  
 [!code-xaml[ClickModes_snip#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ClickModes_snip/CSharp/Pane1.xaml#1)]  
  
 [!code-csharp[ClickModes_snip#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ClickModes_snip/CSharp/Pane1.xaml.cs#2)]
 [!code-vb[ClickModes_snip#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClickModes_snip/VisualBasic/Window1.xaml.vb#2)]  
  
 ]]></format>
    </remarks>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkID=160053">
      <span data-ttu-id="64035-123">Пример коллекции элементов управления WPF</span>
      <span class="sxs-lookup">
        <span data-stu-id="64035-123">WPF Controls Gallery Sample</span>
      </span>
    </related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Button ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Button.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Button();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="64035-124">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Controls.Button" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64035-124">Initializes a new instance of the <see cref="T:System.Windows.Controls.Button" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCancel">
      <MemberSignature Language="C#" Value="public bool IsCancel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCancel" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Button.IsCancel" />
      <MemberSignature Language="VB.NET" Value="Public Property IsCancel As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCancel { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsCancel : bool with get, set" Usage="System.Windows.Controls.Button.IsCancel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64035-125">Возвращает или задает значение, указывающее, является ли <see cref="T:System.Windows.Controls.Button" /> кнопкой "Отмена".</span>
          <span class="sxs-lookup">
            <span data-stu-id="64035-125">Gets or sets a value that indicates whether a <see cref="T:System.Windows.Controls.Button" /> is a Cancel button.</span>
          </span>
          <span data-ttu-id="64035-126">Для активации кнопки "Отмена" можно нажать клавишу ESC.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64035-126">A user can activate the Cancel button by pressing the ESC key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64035-127">
            <see langword="true" />, если <see cref="T:System.Windows.Controls.Button" /> является кнопкой "Отмена"; в противном случае <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64035-127">
              <see langword="true" /> if the <see cref="T:System.Windows.Controls.Button" /> is a Cancel button; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="64035-128">Значение по умолчанию — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64035-128">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64035-129">При задании <xref:System.Windows.Controls.Button.IsCancel%2A> свойство кнопки `true`, создании <xref:System.Windows.Controls.Button> , зарегистрированного с помощью <xref:System.Windows.Input.AccessKeyManager>.</span><span class="sxs-lookup"><span data-stu-id="64035-129">When you set the <xref:System.Windows.Controls.Button.IsCancel%2A> property of a button to `true`, you create a <xref:System.Windows.Controls.Button> that is registered with the <xref:System.Windows.Input.AccessKeyManager>.</span></span> <span data-ttu-id="64035-130">Кнопка активизируется при нажатии клавиши ESC.</span><span class="sxs-lookup"><span data-stu-id="64035-130">The button is then activated when a user presses the ESC key.</span></span>  
  
<a name="dependencyPropertyInfo_IsCancel"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="64035-131">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="64035-131">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="64035-132">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="64035-132">Identifier field</span></span>|<xref:System.Windows.Controls.Button.IsCancelProperty>|  
|<span data-ttu-id="64035-133">Значение свойства метаданных `true`</span><span class="sxs-lookup"><span data-stu-id="64035-133">Metadata properties set to `true`</span></span>|<span data-ttu-id="64035-134">Нет</span><span class="sxs-lookup"><span data-stu-id="64035-134">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="64035-135">В следующем примере показано, как это свойство используется для создания кнопки "Отмена".</span><span class="sxs-lookup"><span data-stu-id="64035-135">The following example shows how to use this property to create a Cancel button.</span></span>  
  
 [!code-xaml[ButtonProps_snip#2](~/samples/snippets/csharp/VS_Snippets_Wpf/ButtonProps_snip/CSharp/Page1.xaml#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCancelProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsCancelProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsCancelProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Button.IsCancelProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsCancelProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsCancelProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsCancelProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Button.IsCancelProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64035-136">Идентифицирует свойство зависимостей <see cref="P:System.Windows.Controls.Button.IsCancel" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64035-136">Identifies the <see cref="P:System.Windows.Controls.Button.IsCancel" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefault">
      <MemberSignature Language="C#" Value="public bool IsDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefault" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Button.IsDefault" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDefault { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsDefault : bool with get, set" Usage="System.Windows.Controls.Button.IsDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64035-137">Возвращает или задает значение, указывающее, является ли <see cref="T:System.Windows.Controls.Button" /> кнопкой по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64035-137">Gets or sets a value that indicates whether a <see cref="T:System.Windows.Controls.Button" /> is the default button.</span>
          </span>
          <span data-ttu-id="64035-138">Пользователь вызывает кнопку по умолчанию нажатием клавиши ВВОД.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64035-138">A user invokes the default button by pressing the ENTER key.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64035-139">
            <see langword="true" />, если <see cref="T:System.Windows.Controls.Button" /> является кнопкой по умолчанию; в противном случае <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64035-139">
              <see langword="true" /> if the <see cref="T:System.Windows.Controls.Button" /> is the default button; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="64035-140">Значение по умолчанию — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64035-140">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64035-141">При задании <xref:System.Windows.Controls.Button.IsDefault%2A> свойство кнопки `true`, зарегистрировать кнопка с <xref:System.Windows.Input.AccessKeyManager> таким образом, пользователь может вызвать кнопки, нажав клавишу ВВОД.</span><span class="sxs-lookup"><span data-stu-id="64035-141">When you set the <xref:System.Windows.Controls.Button.IsDefault%2A> property of a button to `true`, you register the button with the <xref:System.Windows.Input.AccessKeyManager> so that a user can invoke the button by pressing the ENTER key.</span></span>  
  
<a name="dependencyPropertyInfo_IsDefault"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="64035-142">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="64035-142">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="64035-143">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="64035-143">Identifier field</span></span>|<xref:System.Windows.Controls.Button.IsDefaultProperty>|  
|<span data-ttu-id="64035-144">Значение свойства метаданных `true`</span><span class="sxs-lookup"><span data-stu-id="64035-144">Metadata properties set to `true`</span></span>|<span data-ttu-id="64035-145">Нет</span><span class="sxs-lookup"><span data-stu-id="64035-145">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="64035-146">В следующем примере показано, как определить кнопку как кнопку по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="64035-146">The following example shows how to specify a button as the default button.</span></span>  
  
 [!code-xaml[ButtonProps_snip#1](~/samples/snippets/csharp/VS_Snippets_Wpf/ButtonProps_snip/CSharp/Page1.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaulted">
      <MemberSignature Language="C#" Value="public bool IsDefaulted { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefaulted" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.Button.IsDefaulted" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDefaulted As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDefaulted { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsDefaulted : bool" Usage="System.Windows.Controls.Button.IsDefaulted" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64035-147">Получает значение, которое указывает, является ли <see cref="T:System.Windows.Controls.Button" /> кнопкой, которая активизируется нажатием клавиши ВВОД.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64035-147">Gets a value that indicates whether a <see cref="T:System.Windows.Controls.Button" /> is the button that is activated when a user presses ENTER.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="64035-148">
            <see langword="true" />, если кнопка активизируется при нажатии клавиши ВВОД; в противном случае <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64035-148">
              <see langword="true" /> if the button is activated when the user presses ENTER; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="64035-149">Значение по умолчанию — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64035-149">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="64035-150"><xref:System.Windows.Controls.Button.IsDefaulted%2A> Свойство `true` при <xref:System.Windows.Controls.Button.IsDefault%2A> свойству `true` и элемент управления, который имеет фокус не принимает ввод в качестве входных данных.</span><span class="sxs-lookup"><span data-stu-id="64035-150">The <xref:System.Windows.Controls.Button.IsDefaulted%2A> property is `true` when the <xref:System.Windows.Controls.Button.IsDefault%2A> property is set to `true` and the control that has focus does not accept ENTER as input.</span></span>  <span data-ttu-id="64035-151">Например, в **запуска** диалоговом окне **ОК** кнопка является кнопкой по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="64035-151">For example, in the **Run** dialog box, the **OK** button is the default button.</span></span> <span data-ttu-id="64035-152">Когда фокус находится в текстовом поле <xref:System.Windows.Controls.Button.IsDefaulted%2A> на **ОК** кнопка `true` так, как пользователи могут активировать кнопку, нажав клавишу ВВОД.</span><span class="sxs-lookup"><span data-stu-id="64035-152">When focus is on the text box, <xref:System.Windows.Controls.Button.IsDefaulted%2A> on the **OK** button is `true` because a user can activate the button by pressing ENTER.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="64035-153">Если кнопки по умолчанию находится в фокусе, <xref:System.Windows.Controls.Button.IsDefaulted%2A> является `false`.</span><span class="sxs-lookup"><span data-stu-id="64035-153">If the default button has focus, <xref:System.Windows.Controls.Button.IsDefaulted%2A> is `false`.</span></span> <span data-ttu-id="64035-154">Это обусловлено <xref:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown%2A> метод обрабатывает ввод, и нет необходимости для <xref:System.Windows.Controls.Button.IsDefaulted%2A> будет присвоено `true`.</span><span class="sxs-lookup"><span data-stu-id="64035-154">This is because the <xref:System.Windows.Controls.Primitives.ButtonBase.OnKeyDown%2A> method handles ENTER, and it is not necessary for <xref:System.Windows.Controls.Button.IsDefaulted%2A> to be set to `true`.</span></span>  
  
<a name="dependencyPropertyInfo_IsDefaulted"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="64035-155">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="64035-155">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="64035-156">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="64035-156">Identifier field</span></span>|<xref:System.Windows.Controls.Button.IsDefaultedProperty>|  
|<span data-ttu-id="64035-157">Значение свойства метаданных `true`</span><span class="sxs-lookup"><span data-stu-id="64035-157">Metadata properties set to `true`</span></span>|<span data-ttu-id="64035-158">Нет</span><span class="sxs-lookup"><span data-stu-id="64035-158">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="64035-159">В следующем примере показано, как определить ли <xref:System.Windows.Controls.Button.IsDefaulted%2A> свойство `true` для кнопки по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="64035-159">The following example shows how to determine whether the <xref:System.Windows.Controls.Button.IsDefaulted%2A> property is `true` for a default button.</span></span>  
  
 [!code-csharp[ButtonProps_snip#3](~/samples/snippets/csharp/VS_Snippets_Wpf/ButtonProps_snip/CSharp/Page1.xaml.cs#3)]
 [!code-vb[ButtonProps_snip#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ButtonProps_snip/VisualBasic/Window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultedProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsDefaultedProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsDefaultedProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Button.IsDefaultedProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsDefaultedProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsDefaultedProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsDefaultedProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Button.IsDefaultedProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64035-160">Идентифицирует свойство зависимостей <see cref="P:System.Windows.Controls.Button.IsDefaulted" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64035-160">Identifies the <see cref="P:System.Windows.Controls.Button.IsDefaulted" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefaultProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsDefaultProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsDefaultProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Controls.Button.IsDefaultProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsDefaultProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsDefaultProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsDefaultProperty : System.Windows.DependencyProperty" Usage="System.Windows.Controls.Button.IsDefaultProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="64035-161">Идентифицирует свойство зависимостей <see cref="P:System.Windows.Controls.Button.IsDefault" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64035-161">Identifies the <see cref="P:System.Windows.Controls.Button.IsDefault" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected override void OnClick ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClick() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Button.OnClick" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClick ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClick();" />
      <MemberSignature Language="F#" Value="override this.OnClick : unit -&gt; unit" Usage="button.OnClick " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="64035-162">Вызывается при нажатии <see cref="T:System.Windows.Controls.Button" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64035-162">Called when a <see cref="T:System.Windows.Controls.Button" /> is clicked.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreateAutomationPeer">
      <MemberSignature Language="C#" Value="protected override System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Automation.Peers.AutomationPeer OnCreateAutomationPeer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.Button.OnCreateAutomationPeer" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnCreateAutomationPeer () As AutomationPeer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Automation::Peers::AutomationPeer ^ OnCreateAutomationPeer();" />
      <MemberSignature Language="F#" Value="override this.OnCreateAutomationPeer : unit -&gt; System.Windows.Automation.Peers.AutomationPeer" Usage="button.OnCreateAutomationPeer " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Automation.Peers.AutomationPeer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="64035-163">Создает для этого элемента управления соответствующий <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" /> в пределах инфраструктуры [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="64035-163">Creates an appropriate <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" /> for this control as part of the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] infrastructure.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="64035-164">
            <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" /> для этого элемента управления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="64035-164">A <see cref="T:System.Windows.Automation.Peers.ButtonAutomationPeer" /> for this control.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>