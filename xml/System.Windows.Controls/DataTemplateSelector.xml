<Type Name="DataTemplateSelector" FullName="System.Windows.Controls.DataTemplateSelector">
  <TypeSignature Language="C#" Value="public class DataTemplateSelector" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit DataTemplateSelector extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.DataTemplateSelector" />
  <TypeSignature Language="VB.NET" Value="Public Class DataTemplateSelector" />
  <TypeSignature Language="C++ CLI" Value="public ref class DataTemplateSelector" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="6004a-101">Предоставляет способ выбрать <see cref="T:System.Windows.DataTemplate" /> на основе объекта данных и элемента с привязкой к данным.</span><span class="sxs-lookup"><span data-stu-id="6004a-101">Provides a way to choose a <see cref="T:System.Windows.DataTemplate" /> based on the data object and the data-bound element.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6004a-102">Как правило, создаются <xref:System.Windows.Controls.DataTemplateSelector> при наличии более одного <xref:System.Windows.DataTemplate> для одного типа объектов, и вы хотите указать собственную логику для выбора <xref:System.Windows.DataTemplate> для применения на основе свойств каждого объекта данных.</span><span class="sxs-lookup"><span data-stu-id="6004a-102">Typically, you create a <xref:System.Windows.Controls.DataTemplateSelector> when you have more than one <xref:System.Windows.DataTemplate> for the same type of objects and you want to supply your own logic to choose a <xref:System.Windows.DataTemplate> to apply based on the properties of each data object.</span></span> <span data-ttu-id="6004a-103">Обратите внимание, что при наличии объекты разных типов можно задать <xref:System.Windows.DataTemplate.DataType%2A> свойство <xref:System.Windows.DataTemplate>.</span><span class="sxs-lookup"><span data-stu-id="6004a-103">Note that if you have objects of different types you can set the <xref:System.Windows.DataTemplate.DataType%2A> property on the <xref:System.Windows.DataTemplate>.</span></span> <span data-ttu-id="6004a-104">Если это сделать, то нет необходимости создавать <xref:System.Windows.Controls.DataTemplateSelector>.</span><span class="sxs-lookup"><span data-stu-id="6004a-104">If you do that then there is no need to create a <xref:System.Windows.Controls.DataTemplateSelector>.</span></span> <span data-ttu-id="6004a-105">Кроме того, если имеются объекты одного типа, но с разными свойствами, также можно с помощью <xref:System.Windows.DataTrigger> или преобразователь данных.</span><span class="sxs-lookup"><span data-stu-id="6004a-105">Furthermore, if you have objects of the same type but with different properties, you can also consider using a <xref:System.Windows.DataTrigger> or a data converter.</span></span> <span data-ttu-id="6004a-106">Более подробную информацию см. в разделе [Общие сведения о шаблонах данных](~/docs/framework/wpf/data/data-templating-overview.md).</span><span class="sxs-lookup"><span data-stu-id="6004a-106">For more information, see [Data Templating Overview](~/docs/framework/wpf/data/data-templating-overview.md).</span></span>  
  
 <span data-ttu-id="6004a-107">Чтобы создать селектор шаблона, создайте класс, наследующий от <xref:System.Windows.Controls.DataTemplateSelector> и Переопределите <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6004a-107">To create a template selector, create a class that inherits from <xref:System.Windows.Controls.DataTemplateSelector> and override the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method.</span></span> <span data-ttu-id="6004a-108">После определения класса можно назначить экземпляр класса для свойства выбора шаблона вашего элемента.</span><span class="sxs-lookup"><span data-stu-id="6004a-108">Once your class is defined you can assign an instance of the class to the template selector property of your element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6004a-109">В этом примере источник привязки является списком `Task` объектов.</span><span class="sxs-lookup"><span data-stu-id="6004a-109">In this example, the binding source is a list of `Task` objects.</span></span> <span data-ttu-id="6004a-110">Одно из свойств объекта `Task` объект `Priority`.</span><span class="sxs-lookup"><span data-stu-id="6004a-110">One of the properties of a `Task` object is `Priority`.</span></span> <span data-ttu-id="6004a-111">Имеется два шаблона данных определено, `myTaskTemplate` и `importantTaskTemplate`.</span><span class="sxs-lookup"><span data-stu-id="6004a-111">There are two data templates defined, `myTaskTemplate` and `importantTaskTemplate`.</span></span>  
  
 <span data-ttu-id="6004a-112">Чтобы указать логику, чтобы определить, какие <xref:System.Windows.DataTemplate> для использования на основе `Priority` значение объекта данных, создать подкласс <xref:System.Windows.Controls.DataTemplateSelector> и Переопределите <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6004a-112">To supply logic to choose which <xref:System.Windows.DataTemplate> to use based on the `Priority` value of the data object, create a subclass of <xref:System.Windows.Controls.DataTemplateSelector> and override the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method.</span></span> <span data-ttu-id="6004a-113">В следующем примере <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> метод предоставляет логику для возвращения соответствующего шаблона, основанного на значении `Priority` свойство.</span><span class="sxs-lookup"><span data-stu-id="6004a-113">In the following example, the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method provides logic to return the appropriate template based on the value of the `Priority` property.</span></span> <span data-ttu-id="6004a-114">Шаблон для возврата находится в ресурсах <xref:System.Windows.Window> элемента.</span><span class="sxs-lookup"><span data-stu-id="6004a-114">The template to return is found in the resources of the enveloping <xref:System.Windows.Window> element.</span></span>  
  
 [!code-csharp[DataTemplatingIntro_snip#DTSClass](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/TaskListDataTemplateSelector.cs#dtsclass)]
 [!code-vb[DataTemplatingIntro_snip#DTSClass](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataTemplatingIntro_snip/visualbasic/tasklistdatatemplateselector.vb#dtsclass)]  
  
 <span data-ttu-id="6004a-115">Затем можно объявить `TaskListDataTemplateSelector` как ресурс:</span><span class="sxs-lookup"><span data-stu-id="6004a-115">We can then declare the `TaskListDataTemplateSelector` as a resource:</span></span>  
  
 [!code-xaml[DataTemplatingIntro_snip#R1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#r1)]  
[!code-xaml[DataTemplatingIntro_snip#DTS](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#dts)]  
[!code-xaml[DataTemplatingIntro_snip#R2](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#r2)]  
  
 <span data-ttu-id="6004a-116">Чтобы использовать ресурс селектор шаблона, назначьте его <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> свойство <xref:System.Windows.Controls.ListBox>.</span><span class="sxs-lookup"><span data-stu-id="6004a-116">To use the template selector resource, assign it to the <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> property of the <xref:System.Windows.Controls.ListBox>.</span></span> <span data-ttu-id="6004a-117"><xref:System.Windows.Controls.ListBox> Вызовы <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> метод `TaskListDataTemplateSelector` для каждого элемента в коллекции.</span><span class="sxs-lookup"><span data-stu-id="6004a-117">The <xref:System.Windows.Controls.ListBox> calls the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method of the `TaskListDataTemplateSelector` for each of the items in the underlying collection.</span></span> <span data-ttu-id="6004a-118">Вызов передает объект данных в качестве параметра элемента.</span><span class="sxs-lookup"><span data-stu-id="6004a-118">The call passes the data object as the item parameter.</span></span> <span data-ttu-id="6004a-119"><xref:System.Windows.DataTemplate> , Возвращаемый метод затем применяется к объекту данных.</span><span class="sxs-lookup"><span data-stu-id="6004a-119">The <xref:System.Windows.DataTemplate> that is returned by the method is then applied to that data object.</span></span>  
  
 [!code-xaml[DataTemplatingIntro_snip#ItemTemplateSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#itemtemplateselector)]  
  
 <span data-ttu-id="6004a-120">Полный пример см. в разделе [Вводная часть примера стилизации и использования шаблонов](http://go.microsoft.com/fwlink/?LinkID=160009).</span><span class="sxs-lookup"><span data-stu-id="6004a-120">For the complete sample, see [Introduction to Data Templating Sample](http://go.microsoft.com/fwlink/?LinkID=160009).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DataTemplateSelector ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataTemplateSelector.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DataTemplateSelector();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="6004a-121">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Controls.DataTemplateSelector" />.</span><span class="sxs-lookup"><span data-stu-id="6004a-121">Initializes a new instance of the <see cref="T:System.Windows.Controls.DataTemplateSelector" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Windows.DataTemplate SelectTemplate (object item, System.Windows.DependencyObject container);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.DataTemplate SelectTemplate(object item, class System.Windows.DependencyObject container) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.DataTemplateSelector.SelectTemplate(System.Object,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function SelectTemplate (item As Object, container As DependencyObject) As DataTemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::DataTemplate ^ SelectTemplate(System::Object ^ item, System::Windows::DependencyObject ^ container);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DataTemplate</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="container" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="6004a-122">Объект данных, для которого можно выбрать шаблон.</span><span class="sxs-lookup"><span data-stu-id="6004a-122">The data object for which to select the template.</span></span></param>
        <param name="container"><span data-ttu-id="6004a-123">Объект с привязкой к данным.</span><span class="sxs-lookup"><span data-stu-id="6004a-123">The data-bound object.</span></span></param>
        <summary><span data-ttu-id="6004a-124">При переопределении производного класса возвращает шаблон <see cref="T:System.Windows.DataTemplate" />, основанный на настраиваемой логике.</span><span class="sxs-lookup"><span data-stu-id="6004a-124">When overridden in a derived class, returns a <see cref="T:System.Windows.DataTemplate" /> based on custom logic.</span></span></summary>
        <returns><span data-ttu-id="6004a-125">Возвращает тип <see cref="T:System.Windows.DataTemplate" /> или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6004a-125">Returns a <see cref="T:System.Windows.DataTemplate" /> or <see langword="null" />.</span></span> <span data-ttu-id="6004a-126">Значение по умолчанию — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="6004a-126">The default value is <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6004a-127">Как правило при наличии более одного шаблона данных, определенного для одного типа объектов используйте селектор шаблона.</span><span class="sxs-lookup"><span data-stu-id="6004a-127">Typically, you use a template selector when you have more than one data template defined for the same type of objects.</span></span> <span data-ttu-id="6004a-128">Например если источник привязки является список список студентов и необходимо применить определенный шаблон для учащихся неполный рабочий день.</span><span class="sxs-lookup"><span data-stu-id="6004a-128">For example, if your binding source is list a list of student objects and you want to apply a particular template to the part-time students.</span></span> <span data-ttu-id="6004a-129">Это можно сделать, создав класс, наследующий от <xref:System.Windows.Controls.DataTemplateSelector> и переопределение <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6004a-129">You can do this by creating a class that inherits from <xref:System.Windows.Controls.DataTemplateSelector> and overriding the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method.</span></span> <span data-ttu-id="6004a-130">После определения класса можно назначить экземпляр класса для свойства выбора шаблона вашего элемента.</span><span class="sxs-lookup"><span data-stu-id="6004a-130">Once your class is defined you can assign an instance of the class to the template selector property of your element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6004a-131">В этом примере источник привязки является списком `Task` объектов.</span><span class="sxs-lookup"><span data-stu-id="6004a-131">In this example, the binding source is a list of `Task` objects.</span></span> <span data-ttu-id="6004a-132">Одно из свойств объекта `Task` объект `Priority`.</span><span class="sxs-lookup"><span data-stu-id="6004a-132">One of the properties of a `Task` object is `Priority`.</span></span> <span data-ttu-id="6004a-133">Имеется два шаблона данных определено, `myTaskTemplate` и `importantTaskTemplate`.</span><span class="sxs-lookup"><span data-stu-id="6004a-133">There are two data templates defined, `myTaskTemplate` and `importantTaskTemplate`.</span></span>  
  
 <span data-ttu-id="6004a-134">Чтобы указать логику, чтобы определить, какие <xref:System.Windows.DataTemplate> для использования на основе `Priority` значение объекта данных, создать подкласс <xref:System.Windows.Controls.DataTemplateSelector> и Переопределите <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="6004a-134">To supply logic to choose which <xref:System.Windows.DataTemplate> to use based on the `Priority` value of the data object, create a subclass of <xref:System.Windows.Controls.DataTemplateSelector> and override the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method.</span></span> <span data-ttu-id="6004a-135">В следующем примере <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> метод предоставляет логику для возвращения соответствующего шаблона, основанного на значении `Priority` свойство.</span><span class="sxs-lookup"><span data-stu-id="6004a-135">In the following example, the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method provides logic to return the appropriate template based on the value of the `Priority` property.</span></span> <span data-ttu-id="6004a-136">Шаблон для возврата находится в ресурсах <xref:System.Windows.Window> элемента.</span><span class="sxs-lookup"><span data-stu-id="6004a-136">The template to return is found in the resources of the enveloping <xref:System.Windows.Window> element.</span></span>  
  
 [!code-csharp[DataTemplatingIntro_snip#DTSClass](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/TaskListDataTemplateSelector.cs#dtsclass)]
 [!code-vb[DataTemplatingIntro_snip#DTSClass](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DataTemplatingIntro_snip/visualbasic/tasklistdatatemplateselector.vb#dtsclass)]  
  
 <span data-ttu-id="6004a-137">Затем можно объявить `TaskListDataTemplateSelector` как ресурс:</span><span class="sxs-lookup"><span data-stu-id="6004a-137">We can then declare the `TaskListDataTemplateSelector` as a resource:</span></span>  
  
 [!code-xaml[DataTemplatingIntro_snip#R1](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#r1)]  
[!code-xaml[DataTemplatingIntro_snip#DTS](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#dts)]  
[!code-xaml[DataTemplatingIntro_snip#R2](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#r2)]  
  
 <span data-ttu-id="6004a-138">Чтобы использовать ресурс селектор шаблона, назначьте его <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> свойство <xref:System.Windows.Controls.ListBox>.</span><span class="sxs-lookup"><span data-stu-id="6004a-138">To use the template selector resource, assign it to the <xref:System.Windows.Controls.ItemsControl.ItemTemplateSelector%2A> property of the <xref:System.Windows.Controls.ListBox>.</span></span> <span data-ttu-id="6004a-139"><xref:System.Windows.Controls.ListBox> Вызовы <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> метод `TaskListDataTemplateSelector` для каждого элемента в коллекции.</span><span class="sxs-lookup"><span data-stu-id="6004a-139">The <xref:System.Windows.Controls.ListBox> calls the <xref:System.Windows.Controls.DataTemplateSelector.SelectTemplate%2A> method of the `TaskListDataTemplateSelector` for each of the items in the underlying collection.</span></span> <span data-ttu-id="6004a-140">Вызов передает объект данных в качестве параметра элемента.</span><span class="sxs-lookup"><span data-stu-id="6004a-140">The call passes the data object as the item parameter.</span></span> <span data-ttu-id="6004a-141"><xref:System.Windows.DataTemplate> , Возвращаемый метод затем применяется к объекту данных.</span><span class="sxs-lookup"><span data-stu-id="6004a-141">The <xref:System.Windows.DataTemplate> that is returned by the method is then applied to that data object.</span></span>  
  
 [!code-xaml[DataTemplatingIntro_snip#ItemTemplateSelector](~/samples/snippets/csharp/VS_Snippets_Wpf/DataTemplatingIntro_snip/CSharp/Window1.xaml#itemtemplateselector)]  
  
 <span data-ttu-id="6004a-142">Полный пример см. в разделе [Вводная часть примера стилизации и использования шаблонов](http://go.microsoft.com/fwlink/?LinkID=160009).</span><span class="sxs-lookup"><span data-stu-id="6004a-142">For the complete sample, see [Introduction to Data Templating Sample](http://go.microsoft.com/fwlink/?LinkID=160009).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>