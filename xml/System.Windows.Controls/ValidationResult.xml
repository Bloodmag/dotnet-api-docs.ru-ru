<Type Name="ValidationResult" FullName="System.Windows.Controls.ValidationResult">
  <TypeSignature Language="C#" Value="public class ValidationResult" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ValidationResult extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Controls.ValidationResult" />
  <TypeSignature Language="VB.NET" Value="Public Class ValidationResult" />
  <TypeSignature Language="C++ CLI" Value="public ref class ValidationResult" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="9a294-101">Представляет результат, возвращенный методом <see cref="T:System.Windows.Controls.ValidationRule" />.<see cref="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)" /></span><span class="sxs-lookup"><span data-stu-id="9a294-101">Represents the result returned by the <see cref="T:System.Windows.Controls.ValidationRule" />.<see cref="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)" /></span></span> <span data-ttu-id="9a294-102">и показывающий, удовлетворяет ли проверяемое значение правилу <see cref="T:System.Windows.Controls.ValidationRule" />.</span><span class="sxs-lookup"><span data-stu-id="9a294-102">method that indicates whether the checked value passed the <see cref="T:System.Windows.Controls.ValidationRule" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a294-103">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Модель привязки данных позволяет связать <xref:System.Windows.Data.Binding.ValidationRules%2A> с вашей <xref:System.Windows.Data.Binding> или <xref:System.Windows.Data.MultiBinding> объекта.</span><span class="sxs-lookup"><span data-stu-id="9a294-103">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding model enables you to associate <xref:System.Windows.Data.Binding.ValidationRules%2A> with your <xref:System.Windows.Data.Binding> or <xref:System.Windows.Data.MultiBinding> object.</span></span> <span data-ttu-id="9a294-104">Можно создать настраиваемые правила путем создания подкласса <xref:System.Windows.Controls.ValidationRule> класса и реализация <xref:System.Windows.Controls.ValidationRule.Validate%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="9a294-104">You can create custom rules by subclassing the <xref:System.Windows.Controls.ValidationRule> class and implementing the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method.</span></span> <span data-ttu-id="9a294-105"><xref:System.Windows.Controls.ValidationRule.Validate%2A> Возвращает <xref:System.Windows.Controls.ValidationResult> объект для создания отчета, является ли допустимым отмеченное значение.</span><span class="sxs-lookup"><span data-stu-id="9a294-105">The <xref:System.Windows.Controls.ValidationRule.Validate%2A> method returns a <xref:System.Windows.Controls.ValidationResult> object to report whether the checked value is valid.</span></span>  
  
 <span data-ttu-id="9a294-106">Подробное описание процесса проверки, в разделе «Проверка данных» в [Общие сведения о привязке данных](~/docs/framework/wpf/data/data-binding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="9a294-106">For a detailed discussion of the validation process, see "Data Validation" in [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a294-107">Пример реализации правила проверки, которому входное значение как недопустимое, если он содержит алфавитно цифровые символы или за пределами нижнюю и верхнюю границу.</span><span class="sxs-lookup"><span data-stu-id="9a294-107">The following example shows the implementation of a validation rule that marks the input value as invalid if it contains non-numeric characters or outside the lower and upper bounds.</span></span> <span data-ttu-id="9a294-108">Если значение является недопустимым, <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> свойство и <xref:System.Windows.Controls.ValidationResult.IsValid%2A> свойство возвращаемого <xref:System.Windows.Controls.ValidationResult> присваивается соответствующее сообщение об ошибке и `false` соответственно.</span><span class="sxs-lookup"><span data-stu-id="9a294-108">If the value is invalid, the <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> property and the <xref:System.Windows.Controls.ValidationResult.IsValid%2A> property of the returned <xref:System.Windows.Controls.ValidationResult> are set to the appropriate error message and `false` respectively.</span></span>  
  
 <span data-ttu-id="9a294-109">Полный пример см. в разделе [как: реализация проверки привязки](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).</span><span class="sxs-lookup"><span data-stu-id="9a294-109">For the complete example, see [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).</span></span>  
  
 [!code-csharp[BindValidation#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/AgeRangeRule.cs#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ValidationResult (bool isValid, object errorContent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(bool isValid, object errorContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationResult.#ctor(System.Boolean,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (isValid As Boolean, errorContent As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ValidationResult(bool isValid, System::Object ^ errorContent);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="isValid" Type="System.Boolean" />
        <Parameter Name="errorContent" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="isValid"><span data-ttu-id="9a294-110">Признак допустимости значения, проверяемого на соответствие правилу <see cref="T:System.Windows.Controls.ValidationRule" />.</span><span class="sxs-lookup"><span data-stu-id="9a294-110">Whether or not the value checked against the <see cref="T:System.Windows.Controls.ValidationRule" /> is valid.</span></span></param>
        <param name="errorContent"><span data-ttu-id="9a294-111">Сведения о недопустимости.</span><span class="sxs-lookup"><span data-stu-id="9a294-111">Information about the invalidity.</span></span></param>
        <summary><span data-ttu-id="9a294-112">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Controls.ValidationResult" />.</span><span class="sxs-lookup"><span data-stu-id="9a294-112">Initializes a new instance of the <see cref="T:System.Windows.Controls.ValidationResult" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a294-113">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Модель привязки данных позволяет связать <xref:System.Windows.Data.Binding.ValidationRules%2A> с вашей <xref:System.Windows.Data.Binding> или <xref:System.Windows.Data.MultiBinding> объекта.</span><span class="sxs-lookup"><span data-stu-id="9a294-113">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding model enables you to associate <xref:System.Windows.Data.Binding.ValidationRules%2A> with your <xref:System.Windows.Data.Binding> or <xref:System.Windows.Data.MultiBinding> object.</span></span> <span data-ttu-id="9a294-114">Можно создать настраиваемые правила путем создания подкласса <xref:System.Windows.Controls.ValidationRule> класса и реализация <xref:System.Windows.Controls.ValidationRule.Validate%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="9a294-114">You can create custom rules by subclassing the <xref:System.Windows.Controls.ValidationRule> class and implementing the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method.</span></span> <span data-ttu-id="9a294-115"><xref:System.Windows.Controls.ValidationRule.Validate%2A> Возвращает <xref:System.Windows.Controls.ValidationResult> объект для создания отчета, является ли допустимым отмеченное значение.</span><span class="sxs-lookup"><span data-stu-id="9a294-115">The <xref:System.Windows.Controls.ValidationRule.Validate%2A> method returns a <xref:System.Windows.Controls.ValidationResult> object to report whether the checked value is valid.</span></span>  
  
 <span data-ttu-id="9a294-116">Подробное описание процесса проверки, в разделе «Проверка данных» в [Общие сведения о привязке данных](~/docs/framework/wpf/data/data-binding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="9a294-116">For a detailed discussion of the validation process, see "Data Validation" in [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a294-117">Пример реализации правила проверки, которому входное значение как недопустимое, если он содержит алфавитно цифровые символы или за пределами нижнюю и верхнюю границу.</span><span class="sxs-lookup"><span data-stu-id="9a294-117">The following example shows the implementation of a validation rule that marks the input value as invalid if it contains non-numeric characters or outside the lower and upper bounds.</span></span> <span data-ttu-id="9a294-118">Если значение является недопустимым, <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> свойство и <xref:System.Windows.Controls.ValidationResult.IsValid%2A> свойство возвращаемого <xref:System.Windows.Controls.ValidationResult> присваивается соответствующее сообщение об ошибке и `false` соответственно.</span><span class="sxs-lookup"><span data-stu-id="9a294-118">If the value is invalid, the <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> property and the <xref:System.Windows.Controls.ValidationResult.IsValid%2A> property of the returned <xref:System.Windows.Controls.ValidationResult> are set to the appropriate error message and `false` respectively.</span></span>  
  
 <span data-ttu-id="9a294-119">Полный пример см. в разделе [как: реализация проверки привязки](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).</span><span class="sxs-lookup"><span data-stu-id="9a294-119">For the complete example, see [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).</span></span>  
  
 [!code-csharp[BindValidation#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/AgeRangeRule.cs#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationResult.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="9a294-120">Первый экземпляр <see cref="T:System.Windows.Controls.ValidationResult" /> для сравнения.</span><span class="sxs-lookup"><span data-stu-id="9a294-120">The <see cref="T:System.Windows.Controls.ValidationResult" /> instance to compare.</span></span></param>
        <summary><span data-ttu-id="9a294-121">Проверяет указанный экземпляр и текущий экземпляр <see cref="T:System.Windows.Controls.ValidationResult" /> на равенство значений.</span><span class="sxs-lookup"><span data-stu-id="9a294-121">Compares the specified instance and the current instance of <see cref="T:System.Windows.Controls.ValidationResult" /> for value equality.</span></span></summary>
        <returns>
          <span data-ttu-id="9a294-122"><see langword="true" />, если <paramref name="obj" /> и данный экземпляр <see cref="T:System.Windows.Controls.ValidationResult" /> имеют одинаковые значения.</span><span class="sxs-lookup"><span data-stu-id="9a294-122"><see langword="true" /> if <paramref name="obj" /> and this instance of <see cref="T:System.Windows.Controls.ValidationResult" />.have the same values.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a294-123">Этот метод вызывается методом переопределения оператор.</span><span class="sxs-lookup"><span data-stu-id="9a294-123">This method is called by the operator overrides.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorContent">
      <MemberSignature Language="C#" Value="public object ErrorContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ErrorContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationResult.ErrorContent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorContent As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ErrorContent { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a294-124">Получает объект с дополнительными сведениями о недопустимости.</span><span class="sxs-lookup"><span data-stu-id="9a294-124">Gets an object that provides additional information about the invalidity.</span></span></summary>
        <value><span data-ttu-id="9a294-125">Объект с дополнительными сведениями о недопустимости.</span><span class="sxs-lookup"><span data-stu-id="9a294-125">An object that provides additional information about the invalidity.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a294-126">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Модель привязки данных позволяет связать <xref:System.Windows.Data.Binding.ValidationRules%2A> с вашей <xref:System.Windows.Data.Binding> или <xref:System.Windows.Data.MultiBinding> объекта.</span><span class="sxs-lookup"><span data-stu-id="9a294-126">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding model enables you to associate <xref:System.Windows.Data.Binding.ValidationRules%2A> with your <xref:System.Windows.Data.Binding> or <xref:System.Windows.Data.MultiBinding> object.</span></span> <span data-ttu-id="9a294-127">Можно создать настраиваемые правила путем создания подкласса <xref:System.Windows.Controls.ValidationRule> класса и реализация <xref:System.Windows.Controls.ValidationRule.Validate%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="9a294-127">You can create custom rules by subclassing the <xref:System.Windows.Controls.ValidationRule> class and implementing the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method.</span></span> <span data-ttu-id="9a294-128"><xref:System.Windows.Controls.ValidationRule.Validate%2A> Возвращает <xref:System.Windows.Controls.ValidationResult> объект для создания отчета, является ли допустимым отмеченное значение.</span><span class="sxs-lookup"><span data-stu-id="9a294-128">The <xref:System.Windows.Controls.ValidationRule.Validate%2A> method returns a <xref:System.Windows.Controls.ValidationResult> object to report whether the checked value is valid.</span></span>  
  
 <span data-ttu-id="9a294-129">Подробное описание процесса проверки, в разделе «Проверка данных» в [Общие сведения о привязке данных](~/docs/framework/wpf/data/data-binding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="9a294-129">For a detailed discussion of the validation process, see "Data Validation" in [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a294-130">Пример реализации правила проверки, которому входное значение как недопустимое, если он содержит алфавитно цифровые символы или за пределами нижнюю и верхнюю границу.</span><span class="sxs-lookup"><span data-stu-id="9a294-130">The following example shows the implementation of a validation rule that marks the input value as invalid if it contains non-numeric characters or outside the lower and upper bounds.</span></span> <span data-ttu-id="9a294-131">Если значение является недопустимым, <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> свойство и <xref:System.Windows.Controls.ValidationResult.IsValid%2A> свойство возвращаемого <xref:System.Windows.Controls.ValidationResult> присваивается соответствующее сообщение об ошибке и `false` соответственно.</span><span class="sxs-lookup"><span data-stu-id="9a294-131">If the value is invalid, the <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> property and the <xref:System.Windows.Controls.ValidationResult.IsValid%2A> property of the returned <xref:System.Windows.Controls.ValidationResult> are set to the appropriate error message and `false` respectively.</span></span>  
  
 <span data-ttu-id="9a294-132">Полный пример см. в разделе [как: реализация проверки привязки](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).</span><span class="sxs-lookup"><span data-stu-id="9a294-132">For the complete example, see [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).</span></span>  
  
 [!code-csharp[BindValidation#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/AgeRangeRule.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationResult.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="9a294-133">Возвращает хэш-код для модуля чтения данных <see cref="T:System.Windows.Controls.ValidationResult" />.</span><span class="sxs-lookup"><span data-stu-id="9a294-133">Returns the hash code for this <see cref="T:System.Windows.Controls.ValidationResult" />.</span></span></summary>
        <returns><span data-ttu-id="9a294-134">Хэш-код для этого экземпляра <see cref="T:System.Windows.Controls.ValidationResult" />.</span><span class="sxs-lookup"><span data-stu-id="9a294-134">The hash code for this <see cref="T:System.Windows.Controls.ValidationResult" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValid">
      <MemberSignature Language="C#" Value="public bool IsValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValid" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationResult.IsValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsValid { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a294-135">Получает значение, показывающее, допустимо ли значение, проверяемое на соответствие правилу <see cref="T:System.Windows.Controls.ValidationRule" />.</span><span class="sxs-lookup"><span data-stu-id="9a294-135">Gets a value that indicates whether the value checked against the <see cref="T:System.Windows.Controls.ValidationRule" /> is valid.</span></span></summary>
        <value>
          <span data-ttu-id="9a294-136"><see langword="true" />, если значение допустимо, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9a294-136"><see langword="true" /> if the value is valid; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="9a294-137">Значение по умолчанию — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9a294-137">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="9a294-138">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Модель привязки данных позволяет связать <xref:System.Windows.Data.Binding.ValidationRules%2A> с вашей <xref:System.Windows.Data.Binding> или <xref:System.Windows.Data.MultiBinding> объекта.</span><span class="sxs-lookup"><span data-stu-id="9a294-138">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding model enables you to associate <xref:System.Windows.Data.Binding.ValidationRules%2A> with your <xref:System.Windows.Data.Binding> or <xref:System.Windows.Data.MultiBinding> object.</span></span> <span data-ttu-id="9a294-139">Можно создать настраиваемые правила путем создания подкласса <xref:System.Windows.Controls.ValidationRule> класса и реализация <xref:System.Windows.Controls.ValidationRule.Validate%2A> метода.</span><span class="sxs-lookup"><span data-stu-id="9a294-139">You can create custom rules by subclassing the <xref:System.Windows.Controls.ValidationRule> class and implementing the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method.</span></span> <span data-ttu-id="9a294-140"><xref:System.Windows.Controls.ValidationRule.Validate%2A> Возвращает <xref:System.Windows.Controls.ValidationResult> объект для создания отчета, является ли допустимым отмеченное значение.</span><span class="sxs-lookup"><span data-stu-id="9a294-140">The <xref:System.Windows.Controls.ValidationRule.Validate%2A> method returns a <xref:System.Windows.Controls.ValidationResult> object to report whether the checked value is valid.</span></span>  
  
 <span data-ttu-id="9a294-141">Подробное описание процесса проверки, в разделе «Проверка данных» в [Общие сведения о привязке данных](~/docs/framework/wpf/data/data-binding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="9a294-141">For a detailed discussion of the validation process, see "Data Validation" in [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="9a294-142">Пример реализации правила проверки, которому входное значение как недопустимое, если он содержит алфавитно цифровые символы или за пределами нижнюю и верхнюю границу.</span><span class="sxs-lookup"><span data-stu-id="9a294-142">The following example shows the implementation of a validation rule that marks the input value as invalid if it contains non-numeric characters or outside the lower and upper bounds.</span></span> <span data-ttu-id="9a294-143">Если значение является недопустимым, <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> свойство и <xref:System.Windows.Controls.ValidationResult.IsValid%2A> свойство возвращаемого <xref:System.Windows.Controls.ValidationResult> присваивается соответствующее сообщение об ошибке и `false` соответственно.</span><span class="sxs-lookup"><span data-stu-id="9a294-143">If the value is invalid, the <xref:System.Windows.Controls.ValidationResult.ErrorContent%2A> property and the <xref:System.Windows.Controls.ValidationResult.IsValid%2A> property of the returned <xref:System.Windows.Controls.ValidationResult> are set to the appropriate error message and `false` respectively.</span></span>  
  
 <span data-ttu-id="9a294-144">Полный пример см. в разделе [как: реализация проверки привязки](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).</span><span class="sxs-lookup"><span data-stu-id="9a294-144">For the complete example, see [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).</span></span>  
  
 [!code-csharp[BindValidation#3](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/AgeRangeRule.cs#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Controls.ValidationRule.Validate(System.Object,System.Globalization.CultureInfo)" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Controls.ValidationResult left, System.Windows.Controls.ValidationResult right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Windows.Controls.ValidationResult left, class System.Windows.Controls.ValidationResult right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationResult.op_Equality(System.Windows.Controls.ValidationResult,System.Windows.Controls.ValidationResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As ValidationResult, right As ValidationResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Controls::ValidationResult ^ left, System::Windows::Controls::ValidationResult ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Controls.ValidationResult" />
        <Parameter Name="right" Type="System.Windows.Controls.ValidationResult" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="9a294-145">Первый экземпляр для сравнения.</span><span class="sxs-lookup"><span data-stu-id="9a294-145">The first instance to compare.</span></span></param>
        <param name="right"><span data-ttu-id="9a294-146">Второй экземпляр для сравнения.</span><span class="sxs-lookup"><span data-stu-id="9a294-146">The second instance to compare.</span></span></param>
        <summary><span data-ttu-id="9a294-147">Сравнивает два объекта <see cref="T:System.Windows.Controls.ValidationResult" /> на равенство значений.</span><span class="sxs-lookup"><span data-stu-id="9a294-147">Compares two <see cref="T:System.Windows.Controls.ValidationResult" /> objects for value equality.</span></span></summary>
        <returns>
          <span data-ttu-id="9a294-148">Значение <see langword="true" />, если эти два объекта равны; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9a294-148"><see langword="true" /> if the two objects are equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Controls.ValidationResult left, System.Windows.Controls.ValidationResult right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Windows.Controls.ValidationResult left, class System.Windows.Controls.ValidationResult right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Controls.ValidationResult.op_Inequality(System.Windows.Controls.ValidationResult,System.Windows.Controls.ValidationResult)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As ValidationResult, right As ValidationResult) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Controls::ValidationResult ^ left, System::Windows::Controls::ValidationResult ^ right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.Controls.ValidationResult" />
        <Parameter Name="right" Type="System.Windows.Controls.ValidationResult" />
      </Parameters>
      <Docs>
        <param name="left"><span data-ttu-id="9a294-149">Первый экземпляр для сравнения.</span><span class="sxs-lookup"><span data-stu-id="9a294-149">The first instance to compare.</span></span></param>
        <param name="right"><span data-ttu-id="9a294-150">Второй экземпляр для сравнения.</span><span class="sxs-lookup"><span data-stu-id="9a294-150">The second instance to compare.</span></span></param>
        <summary><span data-ttu-id="9a294-151">Сравнивает два объекта <see cref="T:System.Windows.Controls.ValidationResult" /> на неравенство значений.</span><span class="sxs-lookup"><span data-stu-id="9a294-151">Compares two <see cref="T:System.Windows.Controls.ValidationResult" /> objects for value inequality.</span></span></summary>
        <returns>
          <span data-ttu-id="9a294-152"><see langword="true" />, если значения не равны; в противном случае <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="9a294-152"><see langword="true" /> if the values are not equal; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidResult">
      <MemberSignature Language="C#" Value="public static System.Windows.Controls.ValidationResult ValidResult { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Controls.ValidationResult ValidResult" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Controls.ValidationResult.ValidResult" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ValidResult As ValidationResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Controls::ValidationResult ^ ValidResult { System::Windows::Controls::ValidationResult ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ValidationResult</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="9a294-153">Получает допустимый экземпляр объекта <see cref="T:System.Windows.Controls.ValidationResult" />.</span><span class="sxs-lookup"><span data-stu-id="9a294-153">Gets a valid instance of <see cref="T:System.Windows.Controls.ValidationResult" />.</span></span></summary>
        <value><span data-ttu-id="9a294-154">Допустимый экземпляр объекта <see cref="T:System.Windows.Controls.ValidationResult" />.</span><span class="sxs-lookup"><span data-stu-id="9a294-154">A valid instance of <see cref="T:System.Windows.Controls.ValidationResult" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>