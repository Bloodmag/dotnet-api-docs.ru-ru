<Type Name="Binding" FullName="System.Windows.Data.Binding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b494c904e9e37c94748406bd0f7931b61046db17" />
    <Meta Name="ms.sourcegitcommit" Value="f9e3295b6cc303a611a73a84c4b27f9da792ad0d" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/26/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Binding : System.Windows.Data.BindingBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Binding extends System.Windows.Data.BindingBase" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.Binding" />
  <TypeSignature Language="VB.NET" Value="Public Class Binding&#xA;Inherits BindingBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class Binding : System::Windows::Data::BindingBase" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Data.BindingBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="80fd3-101">Предоставляет высокоуровневый доступ к определению привязки, соединяющей свойства целевых объектов привязки (как правило, элементов WPF) и любой источник данных (например, базу данных, XML-файл или любой объект, который содержит данные).</span>
      <span class="sxs-lookup">
        <span data-stu-id="80fd3-101">Provides high-level access to the definition of a binding, which connects the properties of binding target objects (typically, WPF elements), and any data source (for example, a database, an XML file, or any object that contains data).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80fd3-102">Привязка данных [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] предоставляет приложениям простой и последовательный способ представления данных и взаимодействия с ними.</span><span class="sxs-lookup"><span data-stu-id="80fd3-102">[!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] data binding provides a simple and consistent way for applications to present and interact with data.</span></span> <span data-ttu-id="80fd3-103">Привязка данных позволяет синхронизировать значения свойств двух различных объектов.</span><span class="sxs-lookup"><span data-stu-id="80fd3-103">Data binding enables you to synchronize the values of the properties of two different objects.</span></span>  
  
 <span data-ttu-id="80fd3-104">Чтобы установить привязку, используйте <xref:System.Windows.Data.Binding> класс или один из других классов, наследующих <xref:System.Windows.Data.BindingBase>.</span><span class="sxs-lookup"><span data-stu-id="80fd3-104">To establish a binding, use the <xref:System.Windows.Data.Binding> class or one of the other classes that inherit <xref:System.Windows.Data.BindingBase>.</span></span> <span data-ttu-id="80fd3-105">Независимо от того, какой объект привязке и особенностей источника данных, каждая привязка соответствует модели, показанной на следующем рисунке.</span><span class="sxs-lookup"><span data-stu-id="80fd3-105">Regardless of what object you are binding and the nature of your data source, each binding follows the model illustrated by the following figure.</span></span>  
  
 <span data-ttu-id="80fd3-106">![Основная схема привязки данных](~/add/media/databindingmostbasic.png "основная схема привязки данных")</span><span class="sxs-lookup"><span data-stu-id="80fd3-106">![Basic data binding diagram](~/add/media/databindingmostbasic.png "Basic data binding diagram")</span></span>  
  
 <span data-ttu-id="80fd3-107">На рисунке представлены следующие основные [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] концепции привязки данных.</span><span class="sxs-lookup"><span data-stu-id="80fd3-107">The figure demonstrates the following fundamental [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding concepts.</span></span>  
  
-   <span data-ttu-id="80fd3-108">Каждая привязка обычно состоит из следующих четырех компонентов: целевой объект привязки, к целевому свойству источника привязки и <xref:System.Windows.Data.Binding.Path%2A> значению в источнике привязки для использования.</span><span class="sxs-lookup"><span data-stu-id="80fd3-108">Each binding typically has these four components: a binding target object, a target property, a binding source, and a <xref:System.Windows.Data.Binding.Path%2A> to the value in the binding source to use.</span></span> <span data-ttu-id="80fd3-109">Например, если требуется связать содержимое <xref:System.Windows.Controls.TextBox> к свойству имени сотрудника объекта целевой объект является <xref:System.Windows.Controls.TextBox>, имеет свойство target <xref:System.Windows.Controls.TextBox.Text%2A> , значением является имя и исходный объект является сотрудника объект.</span><span class="sxs-lookup"><span data-stu-id="80fd3-109">For example, if you want to bind the content of a <xref:System.Windows.Controls.TextBox> to the Name property of an Employee object, your target object is the <xref:System.Windows.Controls.TextBox>, the target property is the <xref:System.Windows.Controls.TextBox.Text%2A> property, the value to use is Name, and the source object is the Employee object.</span></span>  
  
-   <span data-ttu-id="80fd3-110">Целевое свойство должно быть свойством зависимостей.</span><span class="sxs-lookup"><span data-stu-id="80fd3-110">The target property must be a dependency property.</span></span> <span data-ttu-id="80fd3-111">Это также означает, что нельзя привязать поле.</span><span class="sxs-lookup"><span data-stu-id="80fd3-111">This also means that you cannot bind a field.</span></span> <span data-ttu-id="80fd3-112">Большинство свойств <xref:System.Windows.UIElement> объекты являются свойствами зависимости и большинства свойств зависимостей, за исключением того, доступных только для чтения, по умолчанию поддерживает привязку данных.</span><span class="sxs-lookup"><span data-stu-id="80fd3-112">Most properties of <xref:System.Windows.UIElement> objects are dependency properties and most dependency properties, except read-only ones, support data binding by default.</span></span> <span data-ttu-id="80fd3-113">(Только <xref:System.Windows.DependencyObject> типы могут определять свойства зависимостей и все <xref:System.Windows.UIElement> объекты являются производными от <xref:System.Windows.DependencyObject>.)</span><span class="sxs-lookup"><span data-stu-id="80fd3-113">(Only <xref:System.Windows.DependencyObject> types can define dependency properties and all <xref:System.Windows.UIElement> objects derive from <xref:System.Windows.DependencyObject>.)</span></span>  
  
-   <span data-ttu-id="80fd3-114">Несмотря на то что это не указано на рисунке, следует отметить, что источник привязки не обязан быть пользовательским объектом [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)].</span><span class="sxs-lookup"><span data-stu-id="80fd3-114">Although not specified in the figure, it should be noted that the binding source object is not restricted to being a custom [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object.</span></span> <span data-ttu-id="80fd3-115">Привязка данных [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] поддерживает данные в виде объектов [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] и [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="80fd3-115">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding supports data in the form of [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] objects and [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)].</span></span> <span data-ttu-id="80fd3-116">Представлены некоторые, возможно, источник привязки <xref:System.Windows.UIElement>, любой объект списка [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] объекта, с которым связан [!INCLUDE[TLA#tla_adonet](~/includes/tlasharptla-adonet-md.md)] данных или веб-служб и XmlNode, содержащий ваш [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] данных.</span><span class="sxs-lookup"><span data-stu-id="80fd3-116">To provide some examples, your binding source may be a <xref:System.Windows.UIElement>, any list object, a [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object that is associated with [!INCLUDE[TLA#tla_adonet](~/includes/tlasharptla-adonet-md.md)] data or Web Services, or an XmlNode that contains your [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] data.</span></span>  
  
 <span data-ttu-id="80fd3-117">Используйте <xref:System.Windows.Data.Binding.Mode%2A> свойство, чтобы указать направление потока данных.</span><span class="sxs-lookup"><span data-stu-id="80fd3-117">Use the <xref:System.Windows.Data.Binding.Mode%2A> property to specify the direction of the data flow.</span></span> <span data-ttu-id="80fd3-118">Для обнаружения изменений в источнике односторонняя или двусторонняя привязка, источник должен применять механизм уведомлений об изменениях подходящего свойства например <xref:System.ComponentModel.INotifyPropertyChanged>.</span><span class="sxs-lookup"><span data-stu-id="80fd3-118">To detect source changes in one-way or two-way bindings, the source must implement a suitable property change notification mechanism such as <xref:System.ComponentModel.INotifyPropertyChanged>.</span></span> <span data-ttu-id="80fd3-119">Пример см. в разделе [как: реализуют уведомления об изменении свойства](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md).</span><span class="sxs-lookup"><span data-stu-id="80fd3-119">For an example, see [How to: Implement Property Change Notification](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md).</span></span> <span data-ttu-id="80fd3-120"><xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> Свойство указывает расписание обновлений источника.</span><span class="sxs-lookup"><span data-stu-id="80fd3-120">The <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> property specifies the timing of source updates.</span></span> <span data-ttu-id="80fd3-121">Дополнительные сведения см. в разделе «Основные данные привязки основные понятия» в [Общие сведения о привязке данных](~/docs/framework/wpf/data/data-binding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="80fd3-121">For more information, see "Basic Data Binding Concepts" in [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
<a name="xamlAttributeUsage_PriorityBinding"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="80fd3-122">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="80fd3-122">XAML Attribute Usage</span></span>  
  
```  
<object property="{Binding  declaration}"/>  
```  
  
<a name="xamlValues_PriorityBinding"></a>   
## <a name="xaml-values"></a><span data-ttu-id="80fd3-123">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="80fd3-123">XAML Values</span></span>  
 <span data-ttu-id="80fd3-124">*declaration*</span><span class="sxs-lookup"><span data-stu-id="80fd3-124">*declaration*</span></span>  
 <span data-ttu-id="80fd3-125">Ноль или более атрибута назначения предложения, разделенных запятыми (,).</span><span class="sxs-lookup"><span data-stu-id="80fd3-125">Zero or more attribute-assignment clauses separated by commas (,).</span></span> <span data-ttu-id="80fd3-126">Дополнительные сведения см. в разделе [привязки расширения разметки](~/docs/framework/wpf/advanced/binding-markup-extension.md) или [объявления Общие сведения о привязке](~/docs/framework/wpf/data/binding-declarations-overview.md).</span><span class="sxs-lookup"><span data-stu-id="80fd3-126">For more information, see [Binding Markup Extension](~/docs/framework/wpf/advanced/binding-markup-extension.md) or [Binding Declarations Overview](~/docs/framework/wpf/data/binding-declarations-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Data.MultiBinding" />
    <altmember cref="T:System.Windows.Data.PriorityBinding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="80fd3-127">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Data.Binding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-127">Initializes a new instance of the <see cref="T:System.Windows.Data.Binding" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="80fd3-128">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Data.Binding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-128">Initializes a new instance of the <see cref="T:System.Windows.Data.Binding" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Binding (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Binding(System::String ^ path);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="80fd3-129">Начальный <see cref="P:System.Windows.Data.Binding.Path" /> для привязки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-129">The initial <see cref="P:System.Windows.Data.Binding.Path" /> for the binding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80fd3-130">Инициализация нового экземпляра  класса <see cref="T:System.Windows.Data.Binding" /> с начальным путем.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-130">Initializes a new instance of the <see cref="T:System.Windows.Data.Binding" /> class with an initial path.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSourceUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void AddSourceUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddSourceUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.AddSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddSourceUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddSourceUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="80fd3-131">
            <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающие событие.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-131">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="80fd3-132">Добавляемый обработчик.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-132">The handler to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80fd3-133">Добавляет обработчик для вложенного события <see cref="E:System.Windows.Data.Binding.SourceUpdated" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-133">Adds a handler for the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80fd3-134">Этот метод поддерживает использование вложенного события в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="80fd3-134">This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddTargetUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void AddTargetUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddTargetUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.AddTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddTargetUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddTargetUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="80fd3-135">
            <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающие событие.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-135">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="80fd3-136">Добавляемый обработчик.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-136">The handler to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80fd3-137">Добавляет обработчик для вложенного события <see cref="E:System.Windows.Data.Binding.TargetUpdated" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-137">Adds a handler for the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80fd3-138">Этот метод поддерживает использование вложенного события в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="80fd3-138">This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AsyncState">
      <MemberSignature Language="C#" Value="public object AsyncState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object AsyncState" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.AsyncState" />
      <MemberSignature Language="VB.NET" Value="Public Property AsyncState As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ AsyncState { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80fd3-139">Получает или задает непрозрачные данные, передаваемые в диспетчер асинхронных данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-139">Gets or sets opaque data passed to the asynchronous data dispatcher.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80fd3-140">Данные, передаваемые в диспетчер асинхронных данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-140">Data passed to the asynchronous data dispatcher.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Data.Binding.IsAsync" />
        <altmember cref="P:System.Windows.Data.ObjectDataProvider.IsAsynchronous" />
        <altmember cref="P:System.Windows.Data.XmlDataProvider.IsAsynchronous" />
      </Docs>
    </Member>
    <Member MemberName="BindsDirectlyToSource">
      <MemberSignature Language="C#" Value="public bool BindsDirectlyToSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BindsDirectlyToSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.BindsDirectlyToSource" />
      <MemberSignature Language="VB.NET" Value="Public Property BindsDirectlyToSource As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BindsDirectlyToSource { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80fd3-141">Возвращает или задает значение, указывающее, следует ли вычислять <see cref="P:System.Windows.Data.Binding.Path" /> относительно элемента данных или относительно объекта <see cref="T:System.Windows.Data.DataSourceProvider" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-141">Gets or sets a value that indicates whether to evaluate the <see cref="P:System.Windows.Data.Binding.Path" /> relative to the data item or the <see cref="T:System.Windows.Data.DataSourceProvider" /> object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80fd3-142">
            <see langword="false" />, чтобы путь вычислялся относительно самого элемента, иначе <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-142">
              <see langword="false" /> to evaluate the path relative to the data item itself; otherwise, <see langword="true" />.</span>
          </span>
          <span data-ttu-id="80fd3-143">Значение по умолчанию: <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-143">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80fd3-144">Обычное поведение (если это свойство имеет `false`) включает специальной обработки для <xref:System.Windows.Data.DataSourceProvider> объектов.</span><span class="sxs-lookup"><span data-stu-id="80fd3-144">The normal behavior (when this property is `false`) includes special treatment for <xref:System.Windows.Data.DataSourceProvider> objects.</span></span> <span data-ttu-id="80fd3-145">В этом случае результатом является механизм привязки <xref:System.Windows.Data.Binding.Path%2A> относительно объекта, полученные из <xref:System.Windows.Data.DataSourceProvider.Data%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="80fd3-145">In this case, the binding engine evaluates the <xref:System.Windows.Data.Binding.Path%2A> relative to the object obtained from the <xref:System.Windows.Data.DataSourceProvider.Data%2A> property.</span></span> <span data-ttu-id="80fd3-146">Кроме того, привязка прослушивает <xref:System.Windows.Data.DataSourceProvider.DataChanged> событие и реагирует соответствующим образом.</span><span class="sxs-lookup"><span data-stu-id="80fd3-146">In addition, the binding listens for the <xref:System.Windows.Data.DataSourceProvider.DataChanged> event and reacts accordingly.</span></span> <span data-ttu-id="80fd3-147">Присвоение этому свойству `true` переопределяет это поведение и предоставляет доступ привязки к свойствам <xref:System.Windows.Data.DataSourceProvider> сам объект.</span><span class="sxs-lookup"><span data-stu-id="80fd3-147">Setting this property to `true` overrides this behavior and gives the binding access to properties of the <xref:System.Windows.Data.DataSourceProvider> object itself.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.ObjectDataProvider" />
        <altmember cref="T:System.Windows.Data.XmlDataProvider" />
      </Docs>
    </Member>
    <Member MemberName="Converter">
      <MemberSignature Language="C#" Value="public System.Windows.Data.IValueConverter Converter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.IValueConverter Converter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Converter" />
      <MemberSignature Language="VB.NET" Value="Public Property Converter As IValueConverter" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::IValueConverter ^ Converter { System::Windows::Data::IValueConverter ^ get(); void set(System::Windows::Data::IValueConverter ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.IValueConverter</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80fd3-148">Получает или задает используемый преобразователь.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-148">Gets or sets the converter to use.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80fd3-149">Значение типа <see cref="T:System.Windows.Data.IValueConverter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-149">A value of type <see cref="T:System.Windows.Data.IValueConverter" />.</span>
          </span>
          <span data-ttu-id="80fd3-150">Значение по умолчанию: <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-150">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80fd3-151">Привязка неявно использует преобразователь по умолчанию, который пытается выполнить преобразование типа из исходного и целевого значений.</span><span class="sxs-lookup"><span data-stu-id="80fd3-151">A binding implicitly uses a default converter that tries to do a type conversion between the source value and the target value.</span></span> <span data-ttu-id="80fd3-152">Если преобразование не удается выполнить, преобразователь по умолчанию возвращает значение `null`.</span><span class="sxs-lookup"><span data-stu-id="80fd3-152">If a conversion cannot be made, the default converter returns `null`.</span></span>  
  
 <span data-ttu-id="80fd3-153">Если вы хотите связать преобразователь пользовательское значение с помощью привязки, следует создать класс, реализующий <xref:System.Windows.Data.IValueConverter> интерфейсов и реализаций для предоставления <xref:System.Windows.Data.IValueConverter.Convert%2A> и <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="80fd3-153">If you want to associate a custom value converter with a binding, you should create a class that implements the <xref:System.Windows.Data.IValueConverter> interface and supply implementations for the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods.</span></span> <span data-ttu-id="80fd3-154">Преобразователи значений могут преобразовывать данные из одного типа в другой, преобразование между региональные сведения, например наборы символов или изменять другие аспекты их представления.</span><span class="sxs-lookup"><span data-stu-id="80fd3-154">Value converters can change data from one type to another, translate between cultural details such as character sets, or modify other aspects of their presentation.</span></span> <span data-ttu-id="80fd3-155">Примеры типичных сценариев см. в разделе «Конвертация данных» в [Общие сведения о привязке данных](~/docs/framework/wpf/data/data-binding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="80fd3-155">For examples of typical conversion scenarios, see "Data Conversion" in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
<a name="xamlAttributeUsage_Converter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="80fd3-156">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="80fd3-156">XAML Attribute Usage</span></span>  
  
```  
<object Converter="myConverter"/>  
```  
  
<a name="xamlValues_Converter"></a>   
## <a name="xaml-values"></a><span data-ttu-id="80fd3-157">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="80fd3-157">XAML Values</span></span>  
 <span data-ttu-id="80fd3-158">*myConverter*</span><span class="sxs-lookup"><span data-stu-id="80fd3-158">*myConverter*</span></span>  
 <span data-ttu-id="80fd3-159">Ссылку на класс, реализующий ресурс <xref:System.Windows.Data.IValueConverter> интерфейс, который включает реализации <xref:System.Windows.Data.IValueConverter.Convert%2A> и <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="80fd3-159">A resource reference to a class that implements the <xref:System.Windows.Data.IValueConverter> interface, which includes implementations of the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods.</span></span> <span data-ttu-id="80fd3-160">Для ссылки на преобразователь значений, используйте [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md).</span><span class="sxs-lookup"><span data-stu-id="80fd3-160">To refer to a value converter, use the [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterCulture">
      <MemberSignature Language="C#" Value="public System.Globalization.CultureInfo ConverterCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Globalization.CultureInfo ConverterCulture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ConverterCulture" />
      <MemberSignature Language="VB.NET" Value="Public Property ConverterCulture As CultureInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Globalization::CultureInfo ^ ConverterCulture { System::Globalization::CultureInfo ^ get(); void set(System::Globalization::CultureInfo ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.CultureInfoIetfLanguageTagConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Globalization.CultureInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80fd3-161">Получает или задает язык и региональные параметры, в которых необходимо оценить преобразователь.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-161">Gets or sets the culture in which to evaluate the converter.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80fd3-162">Значение по умолчанию: <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-162">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80fd3-163">Если это свойство не задано, используется механизм привязки `Language` свойства целевого объекта привязки.</span><span class="sxs-lookup"><span data-stu-id="80fd3-163">If you do not set this property, the binding engine uses the `Language` property of the binding target object.</span></span> <span data-ttu-id="80fd3-164">В [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] это по умолчанию используется значение «en US» или наследуется от корневого элемента (или любого элемента) страницы, значение, если оно было задано явно.</span><span class="sxs-lookup"><span data-stu-id="80fd3-164">In [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] this defaults to "en-US" or inherits the value from the root element (or any element) of the page, if one has been explicitly set.</span></span>  
  
 <span data-ttu-id="80fd3-165">Сведения о преобразовании данных см. в разделе Преобразование данных в [Общие сведения о привязке данных](~/docs/framework/wpf/data/data-binding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="80fd3-165">For information about data conversion, see the Data Conversion section in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConverterParameter">
      <MemberSignature Language="C#" Value="public object ConverterParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ConverterParameter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ConverterParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property ConverterParameter As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ConverterParameter { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80fd3-166">Возвращает или задает параметр, передаваемый <see cref="P:System.Windows.Data.Binding.Converter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-166">Gets or sets the parameter to pass to the <see cref="P:System.Windows.Data.Binding.Converter" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80fd3-167">Параметр, который передается <see cref="P:System.Windows.Data.Binding.Converter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-167">The parameter to pass to the <see cref="P:System.Windows.Data.Binding.Converter" />.</span>
          </span>
          <span data-ttu-id="80fd3-168">Значение по умолчанию: <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-168">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80fd3-169">Можно использовать <xref:System.Windows.Data.Binding.ConverterParameter%2A> свойство, чтобы указать способ преобразования объекта.</span><span class="sxs-lookup"><span data-stu-id="80fd3-169">You can use the <xref:System.Windows.Data.Binding.ConverterParameter%2A> property to specify how an object is converted.</span></span>  <span data-ttu-id="80fd3-170">Это свойство передает Дополнительные сведения преобразователь, который используется в привязке.</span><span class="sxs-lookup"><span data-stu-id="80fd3-170">This property passes additional information to a converter that you use on a binding.</span></span>  <span data-ttu-id="80fd3-171">При указании <xref:System.Windows.Data.Binding.ConverterParameter%2A>, передается значение <xref:System.Windows.Data.IValueConverter.Convert%2A> и <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> методы как `parameter` параметр.</span><span class="sxs-lookup"><span data-stu-id="80fd3-171">When you specify a <xref:System.Windows.Data.Binding.ConverterParameter%2A>, the value is passed to the <xref:System.Windows.Data.IValueConverter.Convert%2A> and <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> methods as the `parameter` parameter.</span></span>  
  
 <span data-ttu-id="80fd3-172">Пример см. в разделе [как: создать из значения на основе список привязан элементов](~/docs/framework/wpf/data/how-to-produce-a-value-based-on-a-list-of-bound-items.md).</span><span class="sxs-lookup"><span data-stu-id="80fd3-172">For an example, see [How to: Produce a Value Based on a List of Bound Items](~/docs/framework/wpf/data/how-to-produce-a-value-based-on-a-list-of-bound-items.md).</span></span> <span data-ttu-id="80fd3-173">Этот пример показывает реализацию <xref:System.Windows.Data.IMultiValueConverter> , но использование по-прежнему действует.</span><span class="sxs-lookup"><span data-stu-id="80fd3-173">That example shows an implementation of an <xref:System.Windows.Data.IMultiValueConverter> but the usage still applies.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoNothing">
      <MemberSignature Language="C#" Value="public static readonly object DoNothing;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly object DoNothing" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.DoNothing" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DoNothing As Object " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Object ^ DoNothing;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80fd3-174">Используется как возвращаемое значение, чтобы указать, что механизму привязки не требуется выполнять никаких действий.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-174">Used as a returned value to instruct the binding engine not to perform any action.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80fd3-175">Свойства источника привязки или преобразователь может вернуть <xref:System.Windows.Data.Binding.DoNothing?displayProperty=nameWithType> , чтобы указать, что механизму привязки не требуется выполнять никаких действий.</span><span class="sxs-lookup"><span data-stu-id="80fd3-175">A binding source property or a converter can return <xref:System.Windows.Data.Binding.DoNothing?displayProperty=nameWithType> to instruct the binding engine not to perform any action.</span></span> <span data-ttu-id="80fd3-176">Например, чтобы указать, что механизму привязки не могут передаваться значение целевого объекта привязки, не для перехода к следующему <xref:System.Windows.Data.Binding> в <xref:System.Windows.Data.PriorityBinding>, или не использовать `FallBackValue` или значение по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="80fd3-176">For example, to instruct the binding engine not to transfer a value to the binding target, not to move to the next <xref:System.Windows.Data.Binding> in a <xref:System.Windows.Data.PriorityBinding>, or not to use the `FallBackValue` or default value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ElementName">
      <MemberSignature Language="C#" Value="public string ElementName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ElementName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ElementName" />
      <MemberSignature Language="VB.NET" Value="Public Property ElementName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ElementName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80fd3-177">Получает или задает имя элемента, который требуется использовать в качестве объекта источника привязки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-177">Gets or sets the name of the element to use as the binding source object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80fd3-178">Значение <see langword="Name" /> свойство или [директива x: Name](~/docs/framework/xaml-services/x-name-directive.md) элемента интерес.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-178">The value of the <see langword="Name" /> property or [x:Name Directive](~/docs/framework/xaml-services/x-name-directive.md) of the element of interest.</span>
          </span>
          <span data-ttu-id="80fd3-179">Ссылаться на элементы в коде можно только в том случае, если они зарегистрированы в соответствующем <see cref="T:System.Windows.NameScope" /> с помощью <see langword="RegisterName" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-179">You can refer to elements in code only if they are registered to the appropriate <see cref="T:System.Windows.NameScope" /> through <see langword="RegisterName" />.</span>
          </span>
          <span data-ttu-id="80fd3-180">Дополнительные сведения см. в разделе [области имен XAML WPF](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-180">For more information, see [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span>
          </span>
          <span data-ttu-id="80fd3-181">Значение по умолчанию: <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-181">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80fd3-182">Это свойство полезно, когда требуется выполнить привязку к свойству другого элемента в приложении.</span><span class="sxs-lookup"><span data-stu-id="80fd3-182">This property is useful when you want to bind to the property of another element in your application.</span></span> <span data-ttu-id="80fd3-183">Например, если вы хотите использовать <xref:System.Windows.Controls.Slider> для управления высотой другого элемента управления в приложении, или если вы хотите привязать <xref:System.Windows.Controls.ContentControl.Content%2A> элемента управления, чтобы <xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A> свойство вашей <xref:System.Windows.Controls.ListBox> элемента управления.</span><span class="sxs-lookup"><span data-stu-id="80fd3-183">For example, if you want to use a <xref:System.Windows.Controls.Slider> to control the height of another control in your application, or if you want to bind the <xref:System.Windows.Controls.ContentControl.Content%2A> of your control to the <xref:System.Windows.Controls.Primitives.Selector.SelectedValue%2A> property of your <xref:System.Windows.Controls.ListBox> control.</span></span>  
  
 <span data-ttu-id="80fd3-184">По умолчанию привязки наследуют контекст данных, задаваемый по `DataContext` свойства, если оно было задано.</span><span class="sxs-lookup"><span data-stu-id="80fd3-184">By default, bindings inherit the data context specified by the `DataContext` property, if one has been set.</span></span> <span data-ttu-id="80fd3-185">Тем не менее <xref:System.Windows.Data.Binding.ElementName%2A> свойство является одним из способов, можно явно задать источник <xref:System.Windows.Data.Binding> и переопределять наследуемые данные контекста.</span><span class="sxs-lookup"><span data-stu-id="80fd3-185">However, the <xref:System.Windows.Data.Binding.ElementName%2A> property is one of the ways you can explicitly set the source of a <xref:System.Windows.Data.Binding> and override the inherited data context.</span></span> <span data-ttu-id="80fd3-186">Дополнительные сведения см. в разделе [как: Укажите источник привязки](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md).</span><span class="sxs-lookup"><span data-stu-id="80fd3-186">For more information, see [How to: Specify the Binding Source](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md).</span></span>  
  
 <span data-ttu-id="80fd3-187"><xref:System.Windows.Data.Binding.Source%2A> И <xref:System.Windows.Data.Binding.RelativeSource%2A> свойства <xref:System.Windows.Data.Binding> класса также можно использовать для настройки источника привязки явным образом.</span><span class="sxs-lookup"><span data-stu-id="80fd3-187">The <xref:System.Windows.Data.Binding.Source%2A> and <xref:System.Windows.Data.Binding.RelativeSource%2A> properties of the <xref:System.Windows.Data.Binding> class also enable you to set the source of the binding explicitly.</span></span> <span data-ttu-id="80fd3-188">Однако только один из трех свойств <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, и <xref:System.Windows.Data.Binding.RelativeSource%2A>, следует набор для каждой привязки, или может возникнуть конфликт.</span><span class="sxs-lookup"><span data-stu-id="80fd3-188">However, only one of the three properties, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, and <xref:System.Windows.Data.Binding.RelativeSource%2A>, should be set for each binding, or a conflict might occur.</span></span> <span data-ttu-id="80fd3-189">Это свойство вызывает исключение, если возникает конфликт источника привязки.</span><span class="sxs-lookup"><span data-stu-id="80fd3-189">This property throws an exception if there is a binding source conflict.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXmlNamespaceManager">
      <MemberSignature Language="C#" Value="public static System.Xml.XmlNamespaceManager GetXmlNamespaceManager (System.Windows.DependencyObject target);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.XmlNamespaceManager GetXmlNamespaceManager(class System.Windows.DependencyObject target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.GetXmlNamespaceManager(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetXmlNamespaceManager (target As DependencyObject) As XmlNamespaceManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::XmlNamespaceManager ^ GetXmlNamespaceManager(System::Windows::DependencyObject ^ target);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNamespaceManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="80fd3-190">Объект, из которого требуется получить сведения о пространстве имен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-190">The object from which to get namespace information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80fd3-191">Возвращает объект диспетчера пространства имен [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)], используемый привязкой, подключенной к указанному объекту.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-191">Returns an [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] namespace manager object used by the binding attached to the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80fd3-192">Возвращенный объект, используемый для просмотра пространств имен [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)], относящихся к привязке к переданному элементу объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-192">A returned object used for viewing [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] namespaces that relate to the binding on the passed object element.</span>
          </span>
          <span data-ttu-id="80fd3-193">Этот объект следует привести к типу <see cref="T:System.Xml.XmlNamespaceManager" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-193">This object should be cast as <see cref="T:System.Xml.XmlNamespaceManager" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80fd3-194">Этот метод поддерживает использование вложенного свойства для <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A> вложенное свойство.</span><span class="sxs-lookup"><span data-stu-id="80fd3-194">This method supports attached property usage for the <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A> attached property.</span></span>  
  
 [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]<span data-ttu-id="80fd3-195"> Диспетчеры пространства имен, применимо только в том случае, если в привязке поступают данные [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] источник привязки (<xref:System.Windows.Data.XmlDataProvider> объекта).</span><span class="sxs-lookup"><span data-stu-id="80fd3-195"> namespace managers are relevant only if the data in the binding came from an [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)] binding source (<xref:System.Windows.Data.XmlDataProvider> object).</span></span>  
  
 <span data-ttu-id="80fd3-196">Если диспетчер пространств имен не была применена специально первоначального создания источника данных или путем вызова впоследствии <xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A> в привязке, то этот метод будет возвращать `null`.</span><span class="sxs-lookup"><span data-stu-id="80fd3-196">If a namespace manager was not specifically applied either in the original data source creation or by subsequently calling <xref:System.Windows.Data.Binding.SetXmlNamespaceManager%2A> on the binding, then this method will return `null`.</span></span>  
  
 <span data-ttu-id="80fd3-197">Этот метод всегда будет возвращать `null` Если данные за пределами привязки не [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="80fd3-197">This method will always return `null` if the data behind the binding is not [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="80fd3-198">Параметр <paramref name="target" /> не может иметь значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-198">The <paramref name="target" /> parameter cannot be <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IndexerName">
      <MemberSignature Language="C#" Value="public const string IndexerName;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal string IndexerName" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.IndexerName" />
      <MemberSignature Language="VB.NET" Value="Public Const IndexerName As String " />
      <MemberSignature Language="C++ CLI" Value="public: System::String ^ IndexerName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80fd3-199">Используется как <see cref="P:System.ComponentModel.PropertyChangedEventArgs.PropertyName" /> из <see cref="T:System.ComponentModel.PropertyChangedEventArgs" />, указывая, что свойство индексатора изменилось.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-199">Used as the <see cref="P:System.ComponentModel.PropertyChangedEventArgs.PropertyName" /> of <see cref="T:System.ComponentModel.PropertyChangedEventArgs" /> to indicate that an indexer property has changed.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAsync">
      <MemberSignature Language="C#" Value="public bool IsAsync { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAsync" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.IsAsync" />
      <MemberSignature Language="VB.NET" Value="Public Property IsAsync As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAsync { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80fd3-200">Возвращает или задает значение, указывающее, следует ли <see cref="T:System.Windows.Data.Binding" /> получать и задавать значения асинхронно.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-200">Gets or sets a value that indicates whether the <see cref="T:System.Windows.Data.Binding" /> should get and set values asynchronously.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80fd3-201">Значение по умолчанию: <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-201">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80fd3-202">Используйте <xref:System.Windows.Data.Binding.IsAsync%2A> свойство при `get` метод доступа к свойству источника привязки может занять много времени.</span><span class="sxs-lookup"><span data-stu-id="80fd3-202">Use the <xref:System.Windows.Data.Binding.IsAsync%2A> property when the `get` accessor of your binding source property might take a long time.</span></span> <span data-ttu-id="80fd3-203">Примером является свойство изображения с `get` доступа, который загружает из Интернета.</span><span class="sxs-lookup"><span data-stu-id="80fd3-203">One example is an image property with a `get` accessor that downloads from the Web.</span></span> <span data-ttu-id="80fd3-204">Установка <xref:System.Windows.Data.Binding.IsAsync%2A> для `true` предотвращает блокировку [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] в процессе загрузки.</span><span class="sxs-lookup"><span data-stu-id="80fd3-204">Setting <xref:System.Windows.Data.Binding.IsAsync%2A> to `true` avoids blocking the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] while the download occurs.</span></span>  
  
 <span data-ttu-id="80fd3-205">Время ожидания для значения поступления сообщает привязки <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, если он доступен, или значение по умолчанию привязки целевое свойство.</span><span class="sxs-lookup"><span data-stu-id="80fd3-205">While waiting for the value to arrive, the binding reports the <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, if one is available, or the default value of the binding target property.</span></span>  
  
 <span data-ttu-id="80fd3-206">Тем не менее, не должно быть множество сценариев, где необходимо использовать <xref:System.Windows.Data.Binding.IsAsync%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="80fd3-206">However, there should not be many scenarios where you need to use the <xref:System.Windows.Data.Binding.IsAsync%2A> property.</span></span> <span data-ttu-id="80fd3-207">[!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)] Правила рекомендованы для определения свойств, которые являются порядков медленнее, чем мог бы быть набор полей.</span><span class="sxs-lookup"><span data-stu-id="80fd3-207">The [!INCLUDE[TLA2#tla_net](~/includes/tla2sharptla-net-md.md)] guidelines recommend against defining properties that are orders of magnitude slower than a field set would be.</span></span> <span data-ttu-id="80fd3-208">При создании класса рассмотрите возможность выполнения исключительно медленных операций вне `get` метода доступа и кэширования результата.</span><span class="sxs-lookup"><span data-stu-id="80fd3-208">When you are creating your class, consider handling extremely slow operations outside of the `get` accessor and caching the result.</span></span> <span data-ttu-id="80fd3-209">Дополнительные сведения см. в разделе [NIB: Выбор между свойствами и методами](http://msdn.microsoft.com/library/55825e8f-7e2e-448a-9505-7217cc91b1af).</span><span class="sxs-lookup"><span data-stu-id="80fd3-209">For more information, see [NIB: Choosing Between Properties and Methods](http://msdn.microsoft.com/library/55825e8f-7e2e-448a-9505-7217cc91b1af).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.AsyncState" />
        <altmember cref="P:System.Windows.Data.ObjectDataProvider.IsAsynchronous" />
        <altmember cref="P:System.Windows.Data.XmlDataProvider.IsAsynchronous" />
        <altmember cref="T:System.Windows.PropertyChangedCallback" />
      </Docs>
    </Member>
    <Member MemberName="Mode">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingMode Mode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Data.BindingMode Mode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Mode" />
      <MemberSignature Language="VB.NET" Value="Public Property Mode As BindingMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingMode Mode { System::Windows::Data::BindingMode get(); void set(System::Windows::Data::BindingMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80fd3-210">Возвращает или задает значение, указывающее направление потока данных в привязке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-210">Gets or sets a value that indicates the direction of the data flow in the binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80fd3-211">Одно из значений перечисления <see cref="T:System.Windows.Data.BindingMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-211">One of the <see cref="T:System.Windows.Data.BindingMode" /> values.</span>
          </span>
          <span data-ttu-id="80fd3-212">Значение по умолчанию — <see cref="F:System.Windows.Data.BindingMode.Default" />, который возвращает значение режима привязки по умолчанию для целевого свойства зависимостей.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-212">The default is <see cref="F:System.Windows.Data.BindingMode.Default" />, which returns the default binding mode value of the target dependency property.</span>
          </span>
          <span data-ttu-id="80fd3-213">Однако значение по умолчанию для каждого из свойств зависимостей может различаться.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-213">However, the default value varies for each dependency property.</span>
          </span>
          <span data-ttu-id="80fd3-214">В общем случае свойства доступного для редактирования пользователями элемента управления (например, текстового поля или флажка) по умолчанию имеют двухсторонние привязки, в то время как большинство других свойств по умолчанию имеют односторонние привязки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-214">In general, user-editable control properties, such as those of text boxes and check boxes, default to two-way bindings, whereas most other properties default to one-way bindings.</span>
          </span>
          <span data-ttu-id="80fd3-215">Существует способ определить программно, использует ли свойство зависимостей односторонние или двухсторонние привязки по умолчанию: для этого нужно получить метаданные этого свойства, воспользовавшись методом <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" />, а затем проверить логическое значение свойства <see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-215">A programmatic way to determine whether a dependency property binds one-way or two-way by default is to get the property metadata of the property using <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> and then check the Boolean value of the <see cref="P:System.Windows.FrameworkPropertyMetadata.BindsTwoWayByDefault" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80fd3-216">Для поддержки <xref:System.Windows.Data.BindingMode.OneWay> и <xref:System.Windows.Data.BindingMode.TwoWay> привязки базовых данных необходимо реализовать <xref:System.ComponentModel.INotifyPropertyChanged>.</span><span class="sxs-lookup"><span data-stu-id="80fd3-216">To support <xref:System.Windows.Data.BindingMode.OneWay> and <xref:System.Windows.Data.BindingMode.TwoWay> bindings, the underlying data must implement <xref:System.ComponentModel.INotifyPropertyChanged>.</span></span> <span data-ttu-id="80fd3-217">Дополнительные сведения см. в разделе [как: реализуют уведомления об изменении свойства](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md).</span><span class="sxs-lookup"><span data-stu-id="80fd3-217">For details, see [How to: Implement Property Change Notification](~/docs/framework/wpf/data/how-to-implement-property-change-notification.md).</span></span>  
  
 <span data-ttu-id="80fd3-218">Для <xref:System.Windows.Data.BindingMode.TwoWay> или <xref:System.Windows.Data.BindingMode.OneWayToSource> привязок, можно задать целевой источник обновлений, установив <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="80fd3-218">For <xref:System.Windows.Data.BindingMode.TwoWay> or <xref:System.Windows.Data.BindingMode.OneWayToSource> bindings, you can control the target-to-source updates by setting the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> property.</span></span> <span data-ttu-id="80fd3-219">Дополнительные сведения см. в разделе <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>.</span><span class="sxs-lookup"><span data-stu-id="80fd3-219">For more information, see <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A>.</span></span>  
  
 <span data-ttu-id="80fd3-220">Дополнительные сведения о различных режимах привязки см. в разделе [Общие сведения о привязке данных](~/docs/framework/wpf/data/data-binding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="80fd3-220">For more information on the different binding modes, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NotifyOnSourceUpdated">
      <MemberSignature Language="C#" Value="public bool NotifyOnSourceUpdated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnSourceUpdated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.NotifyOnSourceUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnSourceUpdated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnSourceUpdated { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80fd3-221">Возвращает или задает значение, указывающее, следует ли вызывать событие <see cref="E:System.Windows.Data.Binding.SourceUpdated" />, когда значение передается от целевого объекта привязки к источнику привязки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-221">Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> event when a value is transferred from the binding target to the binding source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80fd3-222">
            <see langword="true" /> Если <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> событие должно вызываться при значения источника привязки обновлении; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-222">
              <see langword="true" /> if the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> event should be raised when the binding source value is updated; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="80fd3-223">Значение по умолчанию: <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-223">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateSource" />
      </Docs>
    </Member>
    <Member MemberName="NotifyOnTargetUpdated">
      <MemberSignature Language="C#" Value="public bool NotifyOnTargetUpdated { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnTargetUpdated" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.NotifyOnTargetUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnTargetUpdated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnTargetUpdated { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80fd3-224">Возвращает или задает значение, указывающее, следует ли вызывать событие <see cref="E:System.Windows.Data.Binding.TargetUpdated" />, когда значение передается от исходного объекта привязки к целевому объекту привязки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-224">Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> event when a value is transferred from the binding source to the binding target.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80fd3-225">
            <see langword="true" /> Если <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> событие должно вызываться при значение целевого объекта привязки обновлении; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-225">
              <see langword="true" /> if the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> event should be raised when the binding target value is updated; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="80fd3-226">Значение по умолчанию: <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-226">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Data.BindingExpression.UpdateTarget" />
      </Docs>
    </Member>
    <Member MemberName="NotifyOnValidationError">
      <MemberSignature Language="C#" Value="public bool NotifyOnValidationError { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NotifyOnValidationError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.NotifyOnValidationError" />
      <MemberSignature Language="VB.NET" Value="Public Property NotifyOnValidationError As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NotifyOnValidationError { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80fd3-227">Возвращает или задает значение, указывающее, следует ли вызывать подключенное к <see cref="E:System.Windows.Controls.Validation.Error" /> событие в привязанном объекте.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-227">Gets or sets a value that indicates whether to raise the <see cref="E:System.Windows.Controls.Validation.Error" /> attached event on the bound object.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80fd3-228">
            <see langword="true" /> Если <see cref="E:System.Windows.Controls.Validation.Error" /> вложенное событие должно быть вызываться в привязанном объекте при ошибке проверки во время обновления источника, в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-228">
              <see langword="true" /> if the <see cref="E:System.Windows.Controls.Validation.Error" /> attached event should be raised on the bound object when there is a validation error during source updates; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="80fd3-229">Значение по умолчанию: <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-229">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80fd3-230">Если привязка имеет <xref:System.Windows.Data.Binding.ValidationRules%2A> связанные с ним обработчик привязки проверяет каждое правило, каждый раз, он передает значение целевого свойства к свойству источника.</span><span class="sxs-lookup"><span data-stu-id="80fd3-230">If the binding has <xref:System.Windows.Data.Binding.ValidationRules%2A> associated with it, the binding engine checks each rule each time it transfers the target property value to the source property.</span></span> <span data-ttu-id="80fd3-231">Если правило делает недействительными значение, что механизму привязки создает <xref:System.Windows.Controls.ValidationError> объекта и добавляет его в <xref:System.Windows.Controls.Validation>.<xref:System.Windows.Controls.Validation.Errors%2A></span><span class="sxs-lookup"><span data-stu-id="80fd3-231">If a rule invalidates a value, the binding engine creates a <xref:System.Windows.Controls.ValidationError> object and adds it to the <xref:System.Windows.Controls.Validation>.<xref:System.Windows.Controls.Validation.Errors%2A></span></span> <span data-ttu-id="80fd3-232">Коллекция связанных объектов.</span><span class="sxs-lookup"><span data-stu-id="80fd3-232">collection of the bound object.</span></span> <span data-ttu-id="80fd3-233">Когда <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> свойство не является пустым, <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=nameWithType> имеет значение вложенного свойства объекта `true`.</span><span class="sxs-lookup"><span data-stu-id="80fd3-233">When the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> property is not empty, the <xref:System.Windows.Controls.Validation.HasError%2A?displayProperty=nameWithType> attached property of the object is set to `true`.</span></span> <span data-ttu-id="80fd3-234">Если <xref:System.Windows.Data.Binding.NotifyOnValidationError%2A> свойство <xref:System.Windows.Data.Binding> равно `true`, а затем вызывает механизм привязки <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> вложенное событие в объекте.</span><span class="sxs-lookup"><span data-stu-id="80fd3-234">If the <xref:System.Windows.Data.Binding.NotifyOnValidationError%2A> property of the <xref:System.Windows.Data.Binding> is set to `true`, then the binding engine raises the <xref:System.Windows.Controls.Validation.Error?displayProperty=nameWithType> attached event on the object.</span></span>  
  
 <span data-ttu-id="80fd3-235">Подробное описание процесса проверки, см. в разделе Проверка данных в [Общие сведения о привязке данных](~/docs/framework/wpf/data/data-binding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="80fd3-235">For a detailed discussion of the validation process, see the Data Validation section in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public System.Windows.PropertyPath Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.PropertyPath Path" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As PropertyPath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::PropertyPath ^ Path { System::Windows::PropertyPath ^ get(); void set(System::Windows::PropertyPath ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.PropertyPath</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80fd3-236">Возвращает или задает путь к свойству источника привязки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-236">Gets or sets the path to the binding source property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80fd3-237">Путь к источнику привязки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-237">The path to the binding source.</span>
          </span>
          <span data-ttu-id="80fd3-238">Значение по умолчанию: <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-238">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80fd3-239">Каждая привязка обычно состоит из следующих четырех компонентов: целевой объект привязки, целевого свойства, источник привязки и путь к значению в источнике привязки для использования.</span><span class="sxs-lookup"><span data-stu-id="80fd3-239">Each binding typically has these four components: a binding target object, a target property, a binding source, and a path to the value in the binding source to use.</span></span> <span data-ttu-id="80fd3-240">Дополнительные сведения об этих понятиях привязки данных см. в разделе [Общие сведения о привязке данных](~/docs/framework/wpf/data/data-binding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="80fd3-240">For more information about these data binding concepts, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 <span data-ttu-id="80fd3-241">Используйте <xref:System.Windows.Data.Binding.Path%2A> свойство, чтобы указать исходное значение, которое вы хотите привязать к:</span><span class="sxs-lookup"><span data-stu-id="80fd3-241">Use the <xref:System.Windows.Data.Binding.Path%2A> property to specify the source value you want to bind to:</span></span>  
  
-   <span data-ttu-id="80fd3-242">В самом простом случае <xref:System.Windows.Data.Binding.Path%2A> значение свойства является именем свойства исходного объекта, используемого для привязки, такие как `Path=PropertyName`.</span><span class="sxs-lookup"><span data-stu-id="80fd3-242">In the simplest case, the <xref:System.Windows.Data.Binding.Path%2A> property value is the name of the property of the source object to use for the binding, such as `Path=PropertyName`.</span></span>  
  
-   <span data-ttu-id="80fd3-243">Вложенные свойства могут задаваться с использованием синтаксиса, аналогичного тому, который используется в C#.</span><span class="sxs-lookup"><span data-stu-id="80fd3-243">Subproperties of a property can be specified by a syntax similar to that used in C#.</span></span> <span data-ttu-id="80fd3-244">Например, предложение `Path=ShoppingCart.Order` задает привязку к подсвойству `Order` объекта или свойства `ShoppingCart`.</span><span class="sxs-lookup"><span data-stu-id="80fd3-244">For instance, the clause `Path=ShoppingCart.Order` sets the binding to the subproperty `Order` of the object or property `ShoppingCart`.</span></span>  
  
-   <span data-ttu-id="80fd3-245">Для привязки присоединенного свойства заключите его в скобки.</span><span class="sxs-lookup"><span data-stu-id="80fd3-245">To bind to an attached property, place parentheses around the attached property.</span></span> <span data-ttu-id="80fd3-246">Например, для привязки к вложенное свойство <xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=nameWithType>, синтаксис `Path=(DockPanel.Dock)`.</span><span class="sxs-lookup"><span data-stu-id="80fd3-246">For example, to bind to the attached property <xref:System.Windows.Controls.DockPanel.Dock%2A?displayProperty=nameWithType>, the syntax is `Path=(DockPanel.Dock)`.</span></span>  
  
-   <span data-ttu-id="80fd3-247">Индексаторы свойства можно указать в квадратных скобках после имени свойства, для которого применяется индексатор.</span><span class="sxs-lookup"><span data-stu-id="80fd3-247">Indexers of a property can be specified within square brackets following the property name where the indexer is applied.</span></span> <span data-ttu-id="80fd3-248">Например, предложение `Path=ShoppingCart[0]` задает привязку к индексу, который соответствует способу, который внутренняя индексация свойства использует для обработки символьной строки "0".</span><span class="sxs-lookup"><span data-stu-id="80fd3-248">For instance, the clause `Path=ShoppingCart[0]` sets the binding to the index that corresponds to how your property's internal indexing handles the literal string "0".</span></span> <span data-ttu-id="80fd3-249">Также поддерживаются несколько индексаторов.</span><span class="sxs-lookup"><span data-stu-id="80fd3-249">Multiple indexers are also supported.</span></span>  
  
-   <span data-ttu-id="80fd3-250">Индексаторы и вложенные свойства могут сочетаться в предложении `Path`, например, `Path=ShoppingCart.ShippingInfo[MailingAddress,Street].`</span><span class="sxs-lookup"><span data-stu-id="80fd3-250">Indexers and subproperties can be mixed in a `Path` clause; for example, `Path=ShoppingCart.ShippingInfo[MailingAddress,Street].`</span></span>  
  
-   <span data-ttu-id="80fd3-251">Индексаторы могут иметь несколько внутренних параметров, разделенных запятыми (,).</span><span class="sxs-lookup"><span data-stu-id="80fd3-251">Inside indexers you can have multiple indexer parameters separated by commas (,).</span></span> <span data-ttu-id="80fd3-252">Тип каждого параметра указывается в скобках.</span><span class="sxs-lookup"><span data-stu-id="80fd3-252">The type of each parameter can be specified with parentheses.</span></span> <span data-ttu-id="80fd3-253">Например, вы можете задать предложение `Path="[(sys:Int32)42,(sys:Int32)24]"`, где `sys` сопоставляется с пространством имен `System`.</span><span class="sxs-lookup"><span data-stu-id="80fd3-253">For example, you can have `Path="[(sys:Int32)42,(sys:Int32)24]"`, where `sys` is mapped to the `System` namespace.</span></span>  
  
-   <span data-ttu-id="80fd3-254">Если источником является представлением коллекции, текущий элемент можно указать с косой чертой (/).</span><span class="sxs-lookup"><span data-stu-id="80fd3-254">When the source is a collection view, the current item can be specified with a slash (/).</span></span> <span data-ttu-id="80fd3-255">Например, предложение `Path=/` задает привязку к текущему элементу в представлении.</span><span class="sxs-lookup"><span data-stu-id="80fd3-255">For example, the clause `Path=/` sets the binding to the current item in the view.</span></span> <span data-ttu-id="80fd3-256">Если источником является коллекция, этот синтаксис задает текущий элемент представления коллекции по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="80fd3-256">When the source is a collection, this syntax specifies the current item of the default collection view.</span></span>  
  
-   <span data-ttu-id="80fd3-257">Имена свойств и косые черты можно объединять для обхода свойств, которые являются коллекциями.</span><span class="sxs-lookup"><span data-stu-id="80fd3-257">Property names and slashes can be combined to traverse properties that are collections.</span></span> <span data-ttu-id="80fd3-258">Например, предложение `Path=/Offices/ManagerName` задает текущий элемент коллекции источников, где свойство `Offices` также является коллекцией.</span><span class="sxs-lookup"><span data-stu-id="80fd3-258">For example, `Path=/Offices/ManagerName` specifies the current item of the source collection, which contains an `Offices` property that is also a collection.</span></span> <span data-ttu-id="80fd3-259">Текущий элемент этой коллекции — объект, содержащий свойство `ManagerName`.</span><span class="sxs-lookup"><span data-stu-id="80fd3-259">Its current item is an object that contains a `ManagerName` property.</span></span>  
  
-   <span data-ttu-id="80fd3-260">При необходимости для привязки к текущему источнику можно использовать путь в виде точки (.).</span><span class="sxs-lookup"><span data-stu-id="80fd3-260">Optionally, a period (.) path can be used to bind to the current source.</span></span> <span data-ttu-id="80fd3-261">Например, предложение `Text="{Binding}"` эквивалентно предложению `Text="{Binding Path=.}"`.</span><span class="sxs-lookup"><span data-stu-id="80fd3-261">For example, `Text="{Binding}"` is equivalent to `Text="{Binding Path=.}"`.</span></span>  
  
 <span data-ttu-id="80fd3-262">Сведения о синтаксисе пути см. в разделе [объявления Общие сведения о привязке](~/docs/framework/wpf/data/binding-declarations-overview.md) или [XAML синтаксическая конструкция PropertyPath](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).</span><span class="sxs-lookup"><span data-stu-id="80fd3-262">For information about path syntax, see [Binding Declarations Overview](~/docs/framework/wpf/data/binding-declarations-overview.md) or [PropertyPath XAML Syntax](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).</span></span>  
  
 <span data-ttu-id="80fd3-263">Для [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] привязки, в разделе <xref:System.Windows.Data.Binding.XPath%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="80fd3-263">For [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] bindings, see the <xref:System.Windows.Data.Binding.XPath%2A> property.</span></span>  
  
 <span data-ttu-id="80fd3-264">Чтобы привязать ко всему объекту, необязательно для указания <xref:System.Windows.Data.Binding.Path%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="80fd3-264">To bind to an entire object, you do not need to specify the <xref:System.Windows.Data.Binding.Path%2A> property.</span></span> <span data-ttu-id="80fd3-265">Дополнительные сведения см. в разделе «Указание пути к значение» в [Общие сведения о привязке данных](~/docs/framework/wpf/data/data-binding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="80fd3-265">For more information, see "Specifying the Path to the Value" in [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80fd3-266">В следующем примере показано триггера стиля, который создает <xref:System.Windows.Controls.ToolTip> , возвращает сообщение об ошибке проверки.</span><span class="sxs-lookup"><span data-stu-id="80fd3-266">The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message.</span></span> <span data-ttu-id="80fd3-267">Привязывает значение метода задания значения ошибки содержимое текущего <xref:System.Windows.Controls.TextBox> ( <xref:System.Windows.Controls.TextBox> с использованием стиля) с помощью <xref:System.Windows.Data.Binding.RelativeSource%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="80fd3-267">The value of the setter binds to the error content of the current <xref:System.Windows.Controls.TextBox> (the <xref:System.Windows.Controls.TextBox> using the style) using the <xref:System.Windows.Data.Binding.RelativeSource%2A> property.</span></span> <span data-ttu-id="80fd3-268">Дополнительные сведения об этом примере см. в разделе [как: реализация проверки привязки](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).</span><span class="sxs-lookup"><span data-stu-id="80fd3-268">For more information on this example, see [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).</span></span>  
  
 [!code-xaml[BindValidation#5](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RelativeSource">
      <MemberSignature Language="C#" Value="public System.Windows.Data.RelativeSource RelativeSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.RelativeSource RelativeSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.RelativeSource" />
      <MemberSignature Language="VB.NET" Value="Public Property RelativeSource As RelativeSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::RelativeSource ^ RelativeSource { System::Windows::Data::RelativeSource ^ get(); void set(System::Windows::Data::RelativeSource ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.RelativeSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80fd3-269">Получает или задает источник привязки, указывая его расположение относительно положения целевого объекта привязки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-269">Gets or sets the binding source by specifying its location relative to the position of the binding target.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80fd3-270">Объект <see cref="T:System.Windows.Data.RelativeSource" /> объект, указывающий относительное расположение источника привязки для использования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-270">A <see cref="T:System.Windows.Data.RelativeSource" /> object specifying the relative location of the binding source to use.</span>
          </span>
          <span data-ttu-id="80fd3-271">Значение по умолчанию: <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-271">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80fd3-272">Это свойство обычно используется для привязки свойства одного объекта к другому свойству того же объекта или определение привязки в стиле или шаблоне.</span><span class="sxs-lookup"><span data-stu-id="80fd3-272">This property is commonly used to bind one property of an object to another property of the same object, or to define a binding in a style or template.</span></span>  
  
 <span data-ttu-id="80fd3-273">По умолчанию привязки наследуют контекст данных, задаваемый по `DataContext` свойства, если оно было задано.</span><span class="sxs-lookup"><span data-stu-id="80fd3-273">By default, bindings inherit the data context specified by the `DataContext` property, if one has been set.</span></span> <span data-ttu-id="80fd3-274">Тем не менее <xref:System.Windows.Data.Binding.RelativeSource%2A> свойство является одним из способов, можно явно задать источник <xref:System.Windows.Data.Binding> и переопределять наследуемые данные контекста.</span><span class="sxs-lookup"><span data-stu-id="80fd3-274">However, the <xref:System.Windows.Data.Binding.RelativeSource%2A> property is one of the ways you can explicitly set the source of a <xref:System.Windows.Data.Binding> and override the inherited data context.</span></span> <span data-ttu-id="80fd3-275">Дополнительные сведения см. в разделе [как: Укажите источник привязки](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md).</span><span class="sxs-lookup"><span data-stu-id="80fd3-275">For more information, see [How to: Specify the Binding Source](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md).</span></span>  
  
 <span data-ttu-id="80fd3-276"><xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType> И <xref:System.Windows.Data.Binding.Source%2A?displayProperty=nameWithType> свойства также можно использовать для настройки источника привязки явным образом.</span><span class="sxs-lookup"><span data-stu-id="80fd3-276">The <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType> and <xref:System.Windows.Data.Binding.Source%2A?displayProperty=nameWithType> properties also enable you to set the source of the binding explicitly.</span></span> <span data-ttu-id="80fd3-277">Однако только один из трех свойств <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, и <xref:System.Windows.Data.Binding.RelativeSource%2A>, следует набор для каждой привязки, или может возникнуть конфликт.</span><span class="sxs-lookup"><span data-stu-id="80fd3-277">However, only one of the three properties, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, and <xref:System.Windows.Data.Binding.RelativeSource%2A>, should be set for each binding, or a conflict can occur.</span></span> <span data-ttu-id="80fd3-278">Это свойство вызывает исключение, если возникает конфликт источника привязки.</span><span class="sxs-lookup"><span data-stu-id="80fd3-278">This property throws an exception if there is a binding source conflict.</span></span>  
  
 <span data-ttu-id="80fd3-279">Для [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] сведения см. в разделе [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md).</span><span class="sxs-lookup"><span data-stu-id="80fd3-279">For [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] information, see [RelativeSource MarkupExtension](~/docs/framework/wpf/advanced/relativesource-markupextension.md).</span></span>  
    
## Examples  
 <span data-ttu-id="80fd3-280">В следующем примере показано триггера стиля, который создает <xref:System.Windows.Controls.ToolTip> , возвращает сообщение об ошибке проверки.</span><span class="sxs-lookup"><span data-stu-id="80fd3-280">The following example shows a style trigger that creates a <xref:System.Windows.Controls.ToolTip> that reports a validation error message.</span></span> <span data-ttu-id="80fd3-281">Привязывает значение метода задания значения ошибки содержимое текущего <xref:System.Windows.Controls.TextBox> ( <xref:System.Windows.Controls.TextBox> с использованием стиля) с помощью <xref:System.Windows.Data.Binding.RelativeSource%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="80fd3-281">The value of the setter binds to the error content of the current <xref:System.Windows.Controls.TextBox> (the <xref:System.Windows.Controls.TextBox> using the style) using the <xref:System.Windows.Data.Binding.RelativeSource%2A> property.</span></span> <span data-ttu-id="80fd3-282">Дополнительные сведения об этом примере см. в разделе [как: реализация проверки привязки](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).</span><span class="sxs-lookup"><span data-stu-id="80fd3-282">For more information on this example, see [How to: Implement Binding Validation](~/docs/framework/wpf/data/how-to-implement-binding-validation.md).</span></span>  
  
 [!code-xaml[BindValidation#5](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#5)]  
  
 <span data-ttu-id="80fd3-283">Полный пример см. в разделе [пример проверки привязки](http://go.microsoft.com/fwlink/?LinkID=159972).</span><span class="sxs-lookup"><span data-stu-id="80fd3-283">To see the full example, see [Binding Validation Sample](http://go.microsoft.com/fwlink/?LinkID=159972).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.Source" />
      </Docs>
    </Member>
    <Member MemberName="RemoveSourceUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void RemoveSourceUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveSourceUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.RemoveSourceUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveSourceUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveSourceUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="80fd3-284">
            <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающие событие.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-284">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="80fd3-285">Удаляемый обработчик.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-285">The handler to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80fd3-286">Удаляет обработчик для вложенного события <see cref="E:System.Windows.Data.Binding.SourceUpdated" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-286">Removes a handler for the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80fd3-287">Этот метод поддерживает использование вложенного события в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="80fd3-287">This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveTargetUpdatedHandler">
      <MemberSignature Language="C#" Value="public static void RemoveTargetUpdatedHandler (System.Windows.DependencyObject element, EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveTargetUpdatedHandler(class System.Windows.DependencyObject element, class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.RemoveTargetUpdatedHandler(System.Windows.DependencyObject,System.EventHandler{System.Windows.Data.DataTransferEventArgs})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveTargetUpdatedHandler (element As DependencyObject, handler As EventHandler(Of DataTransferEventArgs))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveTargetUpdatedHandler(System::Windows::DependencyObject ^ element, EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="80fd3-288">
            <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающие событие.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-288">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to the event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="80fd3-289">Удаляемый обработчик.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-289">The handler to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80fd3-290">Удаляет обработчик для вложенного события <see cref="E:System.Windows.Data.Binding.TargetUpdated" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-290">Removes a handler for the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> attached event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80fd3-291">Этот метод поддерживает использование вложенного события в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="80fd3-291">This method supports attached event usage in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetXmlNamespaceManager">
      <MemberSignature Language="C#" Value="public static void SetXmlNamespaceManager (System.Windows.DependencyObject target, System.Xml.XmlNamespaceManager value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetXmlNamespaceManager(class System.Windows.DependencyObject target, class System.Xml.XmlNamespaceManager value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.SetXmlNamespaceManager(System.Windows.DependencyObject,System.Xml.XmlNamespaceManager)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetXmlNamespaceManager (target As DependencyObject, value As XmlNamespaceManager)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetXmlNamespaceManager(System::Windows::DependencyObject ^ target, System::Xml::XmlNamespaceManager ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Xml.XmlNamespaceManager" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="80fd3-292">Объект, из которого требуется получить сведения о пространстве имен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-292">The object from which to get namespace information.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="80fd3-293">
            <see cref="T:System.Xml.XmlNamespaceManager" />, используемый для вычисления пространства имен в переданном элементе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-293">The <see cref="T:System.Xml.XmlNamespaceManager" /> to use for namespace evaluation in the passed element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="80fd3-294">Задает объект диспетчера пространства имен, используемый привязкой, которая подсоединена к предоставленному элементу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-294">Sets a namespace manager object used by the binding attached to the provided element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80fd3-295">Этот метод поддерживает использование вложенного свойства для <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A> вложенное свойство.</span><span class="sxs-lookup"><span data-stu-id="80fd3-295">This method supports attached property usage for the <xref:System.Windows.Data.Binding.XmlNamespaceManager%2A> attached property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="80fd3-296">Свойство <paramref name="target" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-296">
              <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializePath">
      <MemberSignature Language="C#" Value="public bool ShouldSerializePath ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializePath() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.ShouldSerializePath" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializePath () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializePath();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="80fd3-297">Определяет необходимость сохранения значения свойства <see cref="P:System.Windows.Data.Binding.Path" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-297">Indicates whether the <see cref="P:System.Windows.Data.Binding.Path" /> property should be persisted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80fd3-298">Значение <see langword="true" />, если значение свойства было изменено (относительно значения по умолчанию); в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-298">
              <see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80fd3-299">Это `ShouldSerialize` метод предоставляется, поскольку <xref:System.Windows.Data.Binding.Path%2A> свойство не имеет значения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="80fd3-299">This `ShouldSerialize` method is provided because the <xref:System.Windows.Data.Binding.Path%2A> property does not have a simple default value.</span></span> <span data-ttu-id="80fd3-300">Этот метод указывает, изменилось ли свойство со значением по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="80fd3-300">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="80fd3-301">Этот метод обычно вызывается при создании конструктора для <xref:System.Windows.Data.Binding> или при разработке собственного элемента управления с включением <xref:System.Windows.Data.Binding>.</span><span class="sxs-lookup"><span data-stu-id="80fd3-301">You typically invoke this method if you are either developing a designer for the <xref:System.Windows.Data.Binding> or developing your own control incorporating the <xref:System.Windows.Data.Binding>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeSource">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.ShouldSerializeSource" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeSource () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeSource();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="80fd3-302">Определяет необходимость сохранения значения свойства <see cref="P:System.Windows.Data.Binding.Source" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-302">Indicates whether the <see cref="P:System.Windows.Data.Binding.Source" /> property should be persisted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80fd3-303">Значение <see langword="true" />, если значение свойства было изменено (относительно значения по умолчанию); в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-303">
              <see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80fd3-304">Это `ShouldSerialize` метод предоставляется, поскольку <xref:System.Windows.Data.Binding.Source%2A> свойство не имеет значения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="80fd3-304">This `ShouldSerialize` method is provided because the <xref:System.Windows.Data.Binding.Source%2A> property does not have a simple default value.</span></span> <span data-ttu-id="80fd3-305">Этот метод указывает, изменилось ли свойство со значением по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="80fd3-305">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="80fd3-306">Этот метод обычно вызывается при создании конструктора для <xref:System.Windows.Data.Binding> или при разработке собственного элемента управления с включением <xref:System.Windows.Data.Binding>.</span><span class="sxs-lookup"><span data-stu-id="80fd3-306">You typically invoke this method if you are either developing a designer for the <xref:System.Windows.Data.Binding> or developing your own control incorporating the <xref:System.Windows.Data.Binding>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValidationRules">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeValidationRules ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeValidationRules() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.Binding.ShouldSerializeValidationRules" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeValidationRules () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeValidationRules();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="80fd3-307">Определяет необходимость сохранения значения свойства <see cref="P:System.Windows.Data.Binding.ValidationRules" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-307">Indicates whether the <see cref="P:System.Windows.Data.Binding.ValidationRules" /> property should be persisted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="80fd3-308">Значение <see langword="true" />, если значение свойства было изменено (относительно значения по умолчанию); в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-308">
              <see langword="true" /> if the property value has changed from its default; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80fd3-309">Это `ShouldSerialize` метод предоставляется, поскольку <xref:System.Windows.Data.Binding.ValidationRules%2A> свойство не имеет значения по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="80fd3-309">This `ShouldSerialize` method is provided because the <xref:System.Windows.Data.Binding.ValidationRules%2A> property does not have a simple default value.</span></span> <span data-ttu-id="80fd3-310">Этот метод указывает, изменилось ли свойство со значением по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="80fd3-310">This method indicates whether the property has changed from its default value.</span></span> <span data-ttu-id="80fd3-311">Этот метод обычно вызывается при создании конструктора для <xref:System.Windows.Data.Binding> или при разработке собственного элемента управления с включением <xref:System.Windows.Data.Binding>.</span><span class="sxs-lookup"><span data-stu-id="80fd3-311">You typically invoke this method if you are either developing a designer for the <xref:System.Windows.Data.Binding> or developing your own control incorporating the <xref:System.Windows.Data.Binding>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public object Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Source { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80fd3-312">Возвращает или задает объект, используемый как источник привязки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-312">Gets or sets the object to use as the binding source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80fd3-313">Объект, используемый как источник привязки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-313">The object to use as the binding source.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80fd3-314">По умолчанию привязки наследуют контекст данных, задаваемый по `DataContext` свойства, если оно было задано.</span><span class="sxs-lookup"><span data-stu-id="80fd3-314">By default, bindings inherit the data context specified by the `DataContext` property, if one has been set.</span></span> <span data-ttu-id="80fd3-315">Тем не менее <xref:System.Windows.Data.Binding.Source%2A> свойство является одним из способов, можно явно задать источник <xref:System.Windows.Data.Binding> и переопределять наследуемые данные контекста.</span><span class="sxs-lookup"><span data-stu-id="80fd3-315">However, the <xref:System.Windows.Data.Binding.Source%2A> property is one of the ways you can explicitly set the source of a <xref:System.Windows.Data.Binding> and override the inherited data context.</span></span> <span data-ttu-id="80fd3-316">Если не требуется функциональность установки области видимости, в которой несколько свойств наследуют один и тот же контекст данных, можно использовать <xref:System.Windows.Data.Binding.Source%2A> вместо `DataContext` свойство.</span><span class="sxs-lookup"><span data-stu-id="80fd3-316">If you do not need the functionality of establishing a scope in which several properties inherit the same data context, you can use the <xref:System.Windows.Data.Binding.Source%2A> property instead of the `DataContext` property.</span></span>  
  
 <span data-ttu-id="80fd3-317"><xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType> И <xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=nameWithType> свойства также можно использовать для настройки источника привязки явным образом.</span><span class="sxs-lookup"><span data-stu-id="80fd3-317">The <xref:System.Windows.Data.Binding.ElementName%2A?displayProperty=nameWithType> and <xref:System.Windows.Data.Binding.RelativeSource%2A?displayProperty=nameWithType> properties also enable you to set the source of the binding explicitly.</span></span> <span data-ttu-id="80fd3-318">Однако только один из трех свойств <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, и <xref:System.Windows.Data.Binding.RelativeSource%2A>, следует набор для каждой привязки, или может возникнуть конфликт.</span><span class="sxs-lookup"><span data-stu-id="80fd3-318">However, only one of the three properties, <xref:System.Windows.Data.Binding.ElementName%2A>, <xref:System.Windows.Data.Binding.Source%2A>, and <xref:System.Windows.Data.Binding.RelativeSource%2A>, should be set for each binding, or a conflict can occur.</span></span> <span data-ttu-id="80fd3-319">Это свойство вызывает исключение, если возникает конфликт источника привязки.</span><span class="sxs-lookup"><span data-stu-id="80fd3-319">This property throws an exception if there is a binding source conflict.</span></span>  
  
 <span data-ttu-id="80fd3-320">Удалите это свойство, задайте для него значение <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="80fd3-320">To clear this property, set it to <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>.</span></span>  
  
<a name="xamlAttributeUsage_Source"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="80fd3-321">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="80fd3-321">XAML Attribute Usage</span></span>  
  
```  
<object Source="object"/>  
```  
  
<a name="xamlValues_Source"></a>   
## <a name="xaml-values"></a><span data-ttu-id="80fd3-322">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="80fd3-322">XAML Values</span></span>  
 <span data-ttu-id="80fd3-323">*object*</span><span class="sxs-lookup"><span data-stu-id="80fd3-323">*object*</span></span>  
 <span data-ttu-id="80fd3-324">Существующий объект.</span><span class="sxs-lookup"><span data-stu-id="80fd3-324">An existing object.</span></span> <span data-ttu-id="80fd3-325">Для ссылки на существующий объект, используйте [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)</span><span class="sxs-lookup"><span data-stu-id="80fd3-325">To refer to an existing object, use the [StaticResource Markup Extension](~/docs/framework/wpf/advanced/staticresource-markup-extension.md)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80fd3-326">В следующем примере используется `Person` объект с строковое свойство с именем `PersonName` , определенный в `SDKSample` пространства имен, как показано в первой выделенной строке.</span><span class="sxs-lookup"><span data-stu-id="80fd3-326">The following example uses a `Person` object with a string property named `PersonName` that is defined in the `SDKSample` namespace, as the first highlighted line shows.</span></span> <span data-ttu-id="80fd3-327">В выделенной строке, которая содержит `<src>` элемент, он создает `Person` объекта с `PersonName` значение свойства `Joe`.</span><span class="sxs-lookup"><span data-stu-id="80fd3-327">In the highlighted line that contains the `<src>` element, it instantiates the `Person` object with a `PersonName` property value of `Joe`.</span></span> <span data-ttu-id="80fd3-328">Это можно сделать в `Resources` статьи и назначены `x:Key`.</span><span class="sxs-lookup"><span data-stu-id="80fd3-328">This is done in the `Resources` section and assigned an `x:Key`.</span></span>  
  
 [!code-xaml[BindingInstantiation](~/samples/snippets/csharp/VS_Snippets_Wpf/SimpleBinding/CSharp/Page1.xaml?highlight=4,9,37)]  
  
 <span data-ttu-id="80fd3-329">Выделенная строка, содержащий `<TextBlock>` элементы показано, как выполнить привязку к `PersonName` свойство.</span><span class="sxs-lookup"><span data-stu-id="80fd3-329">The highlighted line that contains the `<TextBlock>` elements shows how to bind to the `PersonName` property.</span></span> <span data-ttu-id="80fd3-330">В результате <xref:System.Windows.Controls.TextBlock> элемент управления со значением «Joe».</span><span class="sxs-lookup"><span data-stu-id="80fd3-330">As a result, the <xref:System.Windows.Controls.TextBlock> control appears with the value "Joe".</span></span>  
  
 <span data-ttu-id="80fd3-331">В следующем примере <xref:System.Windows.Data.Binding.Source%2A> значения <xref:System.Windows.Data.Binding> объектов задается по `static` свойства <xref:System.Windows.Application.Current%2A?displayProperty=nameWithType>:</span><span class="sxs-lookup"><span data-stu-id="80fd3-331">In the following example, the <xref:System.Windows.Data.Binding.Source%2A> values of the <xref:System.Windows.Data.Binding> objects are set to the `static` property <xref:System.Windows.Application.Current%2A?displayProperty=nameWithType>:</span></span>  
  
 [!code-xaml[DataBindingLab#ComboBoxMultiBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/DataBindingLab/CSharp/AddProductWindow.xaml#comboboxmultibinding)]  
  
 <span data-ttu-id="80fd3-332">Полный пример см. в разделе [Демонстрация привязки данных](http://go.microsoft.com/fwlink/?LinkID=163703).</span><span class="sxs-lookup"><span data-stu-id="80fd3-332">For the full example, see [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceUpdated">
      <MemberSignature Language="C#" Value="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" />
      <MemberSignature Language="ILAsm" Value="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.Binding.SourceUpdated" />
      <MemberSignature Language="VB.NET" Value="see AddSourceUpdatedHandler, and RemoveSourceUpdatedHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceUpdatedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SourceUpdatedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SourceUpdatedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.SourceUpdatedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SourceUpdatedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ SourceUpdatedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80fd3-333">Идентифицирует присоединенное событие <see cref="E:System.Windows.Data.Binding.SourceUpdated" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-333">Identifies the <see cref="E:System.Windows.Data.Binding.SourceUpdated" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetUpdated">
      <MemberSignature Language="C#" Value="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" />
      <MemberSignature Language="ILAsm" Value="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Data.Binding.TargetUpdated" />
      <MemberSignature Language="VB.NET" Value="see AddTargetUpdatedHandler, and RemoveTargetUpdatedHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetUpdatedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent TargetUpdatedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent TargetUpdatedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.TargetUpdatedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetUpdatedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ TargetUpdatedEvent;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80fd3-334">Идентифицирует присоединенное событие <see cref="E:System.Windows.Data.Binding.TargetUpdated" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-334">Identifies the <see cref="E:System.Windows.Data.Binding.TargetUpdated" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSourceExceptionFilter">
      <MemberSignature Language="C#" Value="public System.Windows.Data.UpdateSourceExceptionFilterCallback UpdateSourceExceptionFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.UpdateSourceExceptionFilterCallback UpdateSourceExceptionFilter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.UpdateSourceExceptionFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateSourceExceptionFilter As UpdateSourceExceptionFilterCallback" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::UpdateSourceExceptionFilterCallback ^ UpdateSourceExceptionFilter { System::Windows::Data::UpdateSourceExceptionFilterCallback ^ get(); void set(System::Windows::Data::UpdateSourceExceptionFilterCallback ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.UpdateSourceExceptionFilterCallback</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80fd3-335">Получает или задает обработчик, который можно использовать для предоставления пользовательской логики для обработки исключений, которые механизм привязки находит при обновлении значения источника привязки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-335">Gets or sets a handler you can use to provide custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.</span>
          </span>
          <span data-ttu-id="80fd3-336">Это возможно лишь в случае, когда с привязкой ассоциировано <see cref="T:System.Windows.Controls.ExceptionValidationRule" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-336">This is only applicable if you have associated an <see cref="T:System.Windows.Controls.ExceptionValidationRule" /> with your binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80fd3-337">Метод, предоставляющий пользовательскую логику для обработки исключений, которые механизм привязки находит при обновлении значения источника привязки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-337">A method that provides custom logic for handling exceptions that the binding engine encounters during the update of the binding source value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80fd3-338"><xref:System.Windows.Controls.ExceptionValidationRule> Является встроенное правило проверки, проверяющий для исключений, возникающих во время обновления свойства источника привязки.</span><span class="sxs-lookup"><span data-stu-id="80fd3-338">The <xref:System.Windows.Controls.ExceptionValidationRule> is a built-in validation rule that checks for exceptions thrown during the update of the binding source property.</span></span> <span data-ttu-id="80fd3-339">Если была связана <xref:System.Windows.Controls.ExceptionValidationRule> с вашей <xref:System.Windows.Data.Binding> объекта, это свойство можно использовать для задания обработчика для предоставления пользовательской логики для обработки этих исключений.</span><span class="sxs-lookup"><span data-stu-id="80fd3-339">If you have associated the <xref:System.Windows.Controls.ExceptionValidationRule> with your <xref:System.Windows.Data.Binding> object, you can use this property to set a handler to provide custom logic for handling these exceptions.</span></span> <span data-ttu-id="80fd3-340">Если <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> не указан в <xref:System.Windows.Data.Binding>, обработчик привязки создает <xref:System.Windows.Controls.ValidationError> с исключением и добавляет его в <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> коллекции связанного элемента.</span><span class="sxs-lookup"><span data-stu-id="80fd3-340">If an <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> is not specified on the <xref:System.Windows.Data.Binding>, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the exception and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> collection of the bound element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80fd3-341"><xref:System.Windows.Controls.TextBox.Text%2A> Свойство из следующих <xref:System.Windows.Controls.TextBox> данных привязан к свойству источника `Age3` типа `int`.</span><span class="sxs-lookup"><span data-stu-id="80fd3-341">The <xref:System.Windows.Controls.TextBox.Text%2A> property of the following <xref:System.Windows.Controls.TextBox> is data-bound to a source property `Age3` that is of type `int`.</span></span> <span data-ttu-id="80fd3-342"><xref:System.Windows.Controls.ExceptionValidationRule> Проверяет наличие исключений, возникших во время обновления свойства источника (например, когда пользователь вводит значение, которое невозможно преобразовать в целое число).</span><span class="sxs-lookup"><span data-stu-id="80fd3-342">The <xref:System.Windows.Controls.ExceptionValidationRule> checks for exceptions that are thrown during the update of the source property (such as when the user enters a value that cannot be converted to an integer).</span></span>  
  
 [!code-xaml[BindValidation#tbExceptionFilter](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#tbexceptionfilter)]  
  
 <span data-ttu-id="80fd3-343">Можно реализовать пользовательскую логику для обработки этих исключений.</span><span class="sxs-lookup"><span data-stu-id="80fd3-343">You can provide custom logic to handle those exceptions.</span></span> <span data-ttu-id="80fd3-344">В следующем примере показано, как использовать <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> задаваемого свойства <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.</span><span class="sxs-lookup"><span data-stu-id="80fd3-344">The following example shows how to use the <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> property to set an <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.</span></span>  
  
 [!code-csharp[BindValidation#filtercallback](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml.cs#filtercallback)]  
  
 <span data-ttu-id="80fd3-345">Ниже приведен пример реализации <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.</span><span class="sxs-lookup"><span data-stu-id="80fd3-345">The following is an example implementation of an <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.</span></span>  
  
 [!code-csharp[BindValidation#Handler](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml.cs#handler)]  
  
 <span data-ttu-id="80fd3-346"><xref:System.Windows.Data.UpdateSourceExceptionFilterCallback> Также может возвращать `null`, исключение самого себя, или <xref:System.Windows.Controls.ValidationError>.</span><span class="sxs-lookup"><span data-stu-id="80fd3-346">The <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback> can also return `null`, the exception itself, or a <xref:System.Windows.Controls.ValidationError>.</span></span> <span data-ttu-id="80fd3-347">Дополнительные сведения см. в разделе <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.</span><span class="sxs-lookup"><span data-stu-id="80fd3-347">For more information, see <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>.</span></span>  
  
 <span data-ttu-id="80fd3-348">Полный пример см. в разделе [пример проверки привязки](http://go.microsoft.com/fwlink/?LinkID=159972).</span><span class="sxs-lookup"><span data-stu-id="80fd3-348">For the complete sample, see [Binding Validation Sample](http://go.microsoft.com/fwlink/?LinkID=159972).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateSourceTrigger">
      <MemberSignature Language="C#" Value="public System.Windows.Data.UpdateSourceTrigger UpdateSourceTrigger { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Data.UpdateSourceTrigger UpdateSourceTrigger" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.UpdateSourceTrigger" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateSourceTrigger As UpdateSourceTrigger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::UpdateSourceTrigger UpdateSourceTrigger { System::Windows::Data::UpdateSourceTrigger get(); void set(System::Windows::Data::UpdateSourceTrigger value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.UpdateSourceTrigger</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80fd3-349">Получает или задает значение, определяющее расписание обновлений источника привязки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-349">Gets or sets a value that determines the timing of binding source updates.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80fd3-350">Одно из значений перечисления <see cref="T:System.Windows.Data.UpdateSourceTrigger" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-350">One of the <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> values.</span>
          </span>
          <span data-ttu-id="80fd3-351">Значение по умолчанию — <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />, которое возвращает значение по умолчанию <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> значение целевого свойства зависимостей.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-351">The default is <see cref="F:System.Windows.Data.UpdateSourceTrigger.Default" />, which returns the default <see cref="T:System.Windows.Data.UpdateSourceTrigger" /> value of the target dependency property.</span>
          </span>
          <span data-ttu-id="80fd3-352">Тем не менее, значение по умолчанию для большинства свойств зависимостей — <see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" />, пока <see cref="P:System.Windows.Controls.TextBox.Text" /> свойство имеет значение по умолчанию <see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-352">However, the default value for most dependency properties is <see cref="F:System.Windows.Data.UpdateSourceTrigger.PropertyChanged" />, while the <see cref="P:System.Windows.Controls.TextBox.Text" /> property has a default value of <see cref="F:System.Windows.Data.UpdateSourceTrigger.LostFocus" />.</span>
          </span>
          <span data-ttu-id="80fd3-353">Программный способ определения по умолчанию <see cref="P:System.Windows.Data.Binding.UpdateSourceTrigger" /> важно свойства зависимостей заключается в получении метаданных свойства с помощью <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> и проверьте значение <see cref="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger" /> свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-353">A programmatic way to determine the default <see cref="P:System.Windows.Data.Binding.UpdateSourceTrigger" /> value of a dependency property is to get the property metadata of the property using <see cref="M:System.Windows.DependencyProperty.GetMetadata(System.Type)" /> and then check the value of the <see cref="P:System.Windows.FrameworkPropertyMetadata.DefaultUpdateSourceTrigger" /> property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80fd3-354">Привязки типов <xref:System.Windows.Data.BindingMode.TwoWay> или <xref:System.Windows.Data.BindingMode.OneWayToSource> отслеживать изменения в свойство цели и распространять их в источнике.</span><span class="sxs-lookup"><span data-stu-id="80fd3-354">Bindings that are <xref:System.Windows.Data.BindingMode.TwoWay> or <xref:System.Windows.Data.BindingMode.OneWayToSource> listen for changes in the target property and propagate them back to the source.</span></span> <span data-ttu-id="80fd3-355">Это называется обновлением источника.</span><span class="sxs-lookup"><span data-stu-id="80fd3-355">This is known as updating the source.</span></span> <span data-ttu-id="80fd3-356">Как правило эти обновления происходят при каждом изменении целевого свойства.</span><span class="sxs-lookup"><span data-stu-id="80fd3-356">Usually, these updates happen whenever the target property changes.</span></span> <span data-ttu-id="80fd3-357">Это хорошо работает для флажков и других простых элементов управления, но это обычно не подходит для текстовых полей.</span><span class="sxs-lookup"><span data-stu-id="80fd3-357">This is fine for check boxes and other simple controls, but it is usually not appropriate for text fields.</span></span> <span data-ttu-id="80fd3-358">Обновления после каждого нажатия клавиши могут снизить производительность и запрещает пользователям обычно существенно исправления ошибок ввода до фиксации новое значение.</span><span class="sxs-lookup"><span data-stu-id="80fd3-358">Updating after every keystroke can diminish performance and it denies the user the usual opportunity to backspace and fix typing errors before committing to the new value.</span></span> <span data-ttu-id="80fd3-359">Таким образом, значение по умолчанию <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> значение <xref:System.Windows.Controls.TextBox.Text%2A> свойство <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus> и не <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>.</span><span class="sxs-lookup"><span data-stu-id="80fd3-359">Therefore, the default <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> value of the <xref:System.Windows.Controls.TextBox.Text%2A> property is <xref:System.Windows.Data.UpdateSourceTrigger.LostFocus> and not <xref:System.Windows.Data.UpdateSourceTrigger.PropertyChanged>.</span></span>  
  
 <span data-ttu-id="80fd3-360">Если задать <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> значение <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>, необходимо вызвать метод <xref:System.Windows.Data.BindingExpression.UpdateSource%2A> метода или изменения не будут распространены в источнике.</span><span class="sxs-lookup"><span data-stu-id="80fd3-360">If you set the <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A> value to <xref:System.Windows.Data.UpdateSourceTrigger.Explicit>, you must call the <xref:System.Windows.Data.BindingExpression.UpdateSource%2A> method or the changes will not propagate back to the source.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.Mode" />
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnDataErrors">
      <MemberSignature Language="C#" Value="public bool ValidatesOnDataErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnDataErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidatesOnDataErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnDataErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnDataErrors { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80fd3-361">Получает или задает значение, указывающее, включать ли объект <see cref="T:System.Windows.Controls.DataErrorValidationRule" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-361">Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.DataErrorValidationRule" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80fd3-362">
            <see langword="true" /> для включения <see cref="T:System.Windows.Controls.DataErrorValidationRule" />; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-362">
              <see langword="true" /> to include the <see cref="T:System.Windows.Controls.DataErrorValidationRule" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80fd3-363">Задание этого свойства представляет собой альтернативу с помощью <xref:System.Windows.Controls.DataErrorValidationRule> элемент явным образом.</span><span class="sxs-lookup"><span data-stu-id="80fd3-363">Setting this property provides an alternative to using the <xref:System.Windows.Controls.DataErrorValidationRule> element explicitly.</span></span> <span data-ttu-id="80fd3-364"><xref:System.Windows.Controls.DataErrorValidationRule> Является встроенное правило проверки, проверяет наличие ошибок, которые вызываются <xref:System.ComponentModel.IDataErrorInfo> реализации объекта источника.</span><span class="sxs-lookup"><span data-stu-id="80fd3-364">The <xref:System.Windows.Controls.DataErrorValidationRule> is a built-in validation rule that checks for errors that are raised by the <xref:System.ComponentModel.IDataErrorInfo> implementation of the source object.</span></span> <span data-ttu-id="80fd3-365">Если возникает ошибка, что механизму привязки создает <xref:System.Windows.Controls.ValidationError> с ошибкой и добавляет его в <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> коллекции связанного элемента.</span><span class="sxs-lookup"><span data-stu-id="80fd3-365">If an error is raised, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the error and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> collection of the bound element.</span></span> <span data-ttu-id="80fd3-366">Отсутствие ошибок очищает этой проверки, если другое правило вызывает проблему проверки.</span><span class="sxs-lookup"><span data-stu-id="80fd3-366">The lack of an error clears this validation feedback, unless another rule raises a validation issue.</span></span>  
  
 <span data-ttu-id="80fd3-367"><xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> впервые появился в платформе .NET Framework версии 3.5.</span><span class="sxs-lookup"><span data-stu-id="80fd3-367"><xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="80fd3-368">Дополнительные сведения см. в разделе [Платформа.NET Framework: версии и зависимости](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="80fd3-368">For more information, see [.NET Framework Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80fd3-369">В следующих примерах используется <xref:System.ComponentModel.IDataErrorInfo> и <xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> проверки пользовательского ввода в <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="80fd3-369">The following examples uses <xref:System.ComponentModel.IDataErrorInfo> and <xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> to validate user input in a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="80fd3-370">В первом примере создается тип данных, который реализует <xref:System.ComponentModel.IDataErrorInfo> отчетов об ошибках проверки.</span><span class="sxs-lookup"><span data-stu-id="80fd3-370">The first example creates a data type that implements <xref:System.ComponentModel.IDataErrorInfo> to report validation errors.</span></span>  
  
 [!code-csharp[BindingValidationAttributesSnippets#IDataErrorInfoData](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/data.cs#idataerrorinfodata)]
 [!code-vb[BindingValidationAttributesSnippets#IDataErrorInfoData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/bindingvalidationattributessnippets/visualbasic/window1.xaml.vb#idataerrorinfodata)]  
  
 <span data-ttu-id="80fd3-371">Следующий пример привязывает `Age` свойства <xref:System.Windows.Controls.TextBox> и задает <xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> для `true` на <xref:System.Windows.Data.Binding>.</span><span class="sxs-lookup"><span data-stu-id="80fd3-371">The following example binds the `Age` property to the <xref:System.Windows.Controls.TextBox> and sets <xref:System.Windows.Data.Binding.ValidatesOnDataErrors%2A> to `true` on the <xref:System.Windows.Data.Binding>.</span></span>  <span data-ttu-id="80fd3-372">Когда пользователь вводит недопустимое значение, появится красная граница в <xref:System.Windows.Controls.TextBox> и <xref:System.Windows.Controls.ToolTip> сообщает сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="80fd3-372">When the user enters an invalid value, a red border appears in the <xref:System.Windows.Controls.TextBox> and the <xref:System.Windows.Controls.ToolTip> reports the error message.</span></span>  
  
 [!code-xaml[BindingValidationAttributesSnippets#IDataErrorInfoXaml](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/window1.xaml#idataerrorinfoxaml)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.ValidatesOnExceptions" />
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnExceptions">
      <MemberSignature Language="C#" Value="public bool ValidatesOnExceptions { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnExceptions" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidatesOnExceptions" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnExceptions As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnExceptions { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80fd3-373">Получает или задает значение, указывающее, включать ли объект <see cref="T:System.Windows.Controls.ExceptionValidationRule" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-373">Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.ExceptionValidationRule" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80fd3-374">
            <see langword="true" /> для включения <see cref="T:System.Windows.Controls.ExceptionValidationRule" />; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-374">
              <see langword="true" /> to include the <see cref="T:System.Windows.Controls.ExceptionValidationRule" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80fd3-375">Задание этого свойства представляет собой альтернативу с помощью <xref:System.Windows.Controls.ExceptionValidationRule> элемент явным образом.</span><span class="sxs-lookup"><span data-stu-id="80fd3-375">Setting this property provides an alternative to using the <xref:System.Windows.Controls.ExceptionValidationRule> element explicitly.</span></span> <span data-ttu-id="80fd3-376"><xref:System.Windows.Controls.ExceptionValidationRule> Является встроенное правило проверки, проверяет наличие исключений, возникших во время обновления свойства источника.</span><span class="sxs-lookup"><span data-stu-id="80fd3-376">The <xref:System.Windows.Controls.ExceptionValidationRule> is a built-in validation rule that checks for exceptions that are thrown during the update of the source property.</span></span> <span data-ttu-id="80fd3-377">Если создается исключение, обработчик привязки создает <xref:System.Windows.Controls.ValidationError> с исключением и добавляет его в <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> коллекции связанного элемента.</span><span class="sxs-lookup"><span data-stu-id="80fd3-377">If an exception is thrown, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the exception and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> collection of the bound element.</span></span> <span data-ttu-id="80fd3-378">Отсутствие ошибок очищает этой проверки, если другое правило вызывает проблему проверки.</span><span class="sxs-lookup"><span data-stu-id="80fd3-378">The lack of an error clears this validation feedback, unless another rule raises a validation issue.</span></span>  
  
 <span data-ttu-id="80fd3-379"><xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> впервые появился в платформе .NET Framework версии 3.5.</span><span class="sxs-lookup"><span data-stu-id="80fd3-379"><xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> is introduced in the .NET Framework version 3.5.</span></span>  <span data-ttu-id="80fd3-380">Дополнительные сведения см. в разделе [Платформа.NET Framework: версии и зависимости](~/docs/framework/migration-guide/versions-and-dependencies.md).</span><span class="sxs-lookup"><span data-stu-id="80fd3-380">For more information, see [.NET Framework Versions and Dependencies](~/docs/framework/migration-guide/versions-and-dependencies.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="80fd3-381">В следующих примерах используется <xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> проверки пользовательского ввода в <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="80fd3-381">The following examples use <xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> to validate user input in a <xref:System.Windows.Controls.TextBox>.</span></span> <span data-ttu-id="80fd3-382">В первом примере создается тип данных, который приводит к возникновению исключения при `Age` свойству присвоено недопустимое свойство.</span><span class="sxs-lookup"><span data-stu-id="80fd3-382">The first example creates a data type that throws an exception when the `Age` property is set to an invalid property.</span></span>  
  
 [!code-csharp[BindingValidationAttributesSnippets#ThrowExceptionData](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/data.cs#throwexceptiondata)]
 [!code-vb[BindingValidationAttributesSnippets#ThrowExceptionData](~/samples/snippets/visualbasic/VS_Snippets_Wpf/bindingvalidationattributessnippets/visualbasic/window1.xaml.vb#throwexceptiondata)]  
  
 <span data-ttu-id="80fd3-383">Следующий пример привязывает `Age` свойства <xref:System.Windows.Controls.TextBox> и задает <xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> для `true` на <xref:System.Windows.Data.Binding>.</span><span class="sxs-lookup"><span data-stu-id="80fd3-383">The following example binds the `Age` property to the <xref:System.Windows.Controls.TextBox> and sets <xref:System.Windows.Data.Binding.ValidatesOnExceptions%2A> to `true` on the <xref:System.Windows.Data.Binding>.</span></span> <span data-ttu-id="80fd3-384">Когда пользователь вводит недопустимое значение, появится красная граница в <xref:System.Windows.Controls.TextBox> и <xref:System.Windows.Controls.ToolTip> сообщает сообщение об ошибке.</span><span class="sxs-lookup"><span data-stu-id="80fd3-384">When the user enters an invalid value, a red border appears in the <xref:System.Windows.Controls.TextBox> and the <xref:System.Windows.Controls.ToolTip> reports the error message.</span></span>  
  
 [!code-xaml[BindingValidationAttributesSnippets#ThrowExceptionXaml](~/samples/snippets/csharp/VS_Snippets_Wpf/bindingvalidationattributessnippets/csharp/window1.xaml#throwexceptionxaml)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Data.Binding.ValidatesOnDataErrors" />
      </Docs>
    </Member>
    <Member MemberName="ValidatesOnNotifyDataErrors">
      <MemberSignature Language="C#" Value="public bool ValidatesOnNotifyDataErrors { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidatesOnNotifyDataErrors" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidatesOnNotifyDataErrors As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidatesOnNotifyDataErrors { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80fd3-385">Получает или задает значение, указывающее, включать ли объект <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-385">Gets or sets a value that indicates whether to include the <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80fd3-386">
            <see langword="true" /> для включения <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-386">
              <see langword="true" /> to include the <see cref="T:System.Windows.Controls.NotifyDataErrorValidationRule" />; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="80fd3-387">Значение по умолчанию: <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-387">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80fd3-388">Когда <xref:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors%2A> — `true`, привязки проверяет наличие и сообщает об ошибках, возникающих в источнике данных, который реализует <xref:System.ComponentModel.INotifyDataErrorInfo>.</span><span class="sxs-lookup"><span data-stu-id="80fd3-388">When <xref:System.Windows.Data.Binding.ValidatesOnNotifyDataErrors%2A> is `true`, the binding checks for and reports errors that are raised by a data source that implements <xref:System.ComponentModel.INotifyDataErrorInfo>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationRules">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt; ValidationRules { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Controls.ValidationRule&gt; ValidationRules" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.ValidationRules" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidationRules As Collection(Of ValidationRule)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ ValidationRules { System::Collections::ObjectModel::Collection&lt;System::Windows::Controls::ValidationRule ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Windows.Controls.ValidationRule&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80fd3-389">Получает коллекцию правил, проверяющих правильность пользовательского ввода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-389">Gets a collection of rules that check the validity of the user input.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80fd3-390">Коллекция объектов <see cref="T:System.Windows.Controls.ValidationRule" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-390">A collection of <see cref="T:System.Windows.Controls.ValidationRule" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80fd3-391">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Модель привязки данных позволяет связать <xref:System.Windows.Data.Binding.ValidationRules%2A> с вашей <xref:System.Windows.Data.Binding> или <xref:System.Windows.Data.MultiBinding> объекта.</span><span class="sxs-lookup"><span data-stu-id="80fd3-391">The [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] data binding model enables you to associate <xref:System.Windows.Data.Binding.ValidationRules%2A> with your <xref:System.Windows.Data.Binding> or <xref:System.Windows.Data.MultiBinding> object.</span></span> <span data-ttu-id="80fd3-392">Настраиваемые правила можно создать путем наследования от <xref:System.Windows.Controls.ValidationRule> класса и реализация <xref:System.Windows.Controls.ValidationRule.Validate%2A> метод, или же можно использовать встроенные <xref:System.Windows.Controls.ExceptionValidationRule>, делающая значение при наличии исключений во время обновления источника.</span><span class="sxs-lookup"><span data-stu-id="80fd3-392">You can create custom rules by deriving from the <xref:System.Windows.Controls.ValidationRule> class and implementing the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method, or you can use the built-in <xref:System.Windows.Controls.ExceptionValidationRule>, which invalidates a value if there are exceptions during source updates.</span></span>  
  
 <span data-ttu-id="80fd3-393">Механизм привязки проверяет все <xref:System.Windows.Controls.ValidationRule> связанной с привязкой, каждый раз входное значение (привязки значение целевого свойства) передается в свойство источника привязки.</span><span class="sxs-lookup"><span data-stu-id="80fd3-393">The binding engine checks each <xref:System.Windows.Controls.ValidationRule> associated with a binding each time an input value (the binding target property value) is transferred to the binding source property.</span></span> <span data-ttu-id="80fd3-394">Подробное описание процесса проверки, см. в разделе Проверка данных в [Общие сведения о привязке данных](~/docs/framework/wpf/data/data-binding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="80fd3-394">For a detailed discussion of the validation process, see the Data Validation section in the [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="80fd3-395">Это свойство можно задать в [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] только с помощью показанного синтаксиса коллекции или путем доступа к объекту коллекции и с помощью его методов, например `Add`.</span><span class="sxs-lookup"><span data-stu-id="80fd3-395">This property can be set in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] only by using the collection syntax shown, or by accessing the collection object and using its various methods, such as `Add`.</span></span> <span data-ttu-id="80fd3-396">Свойство для доступа к объекту коллекции только для чтения, в то время как сама коллекция доступна для чтения и записи.</span><span class="sxs-lookup"><span data-stu-id="80fd3-396">The property to access the collection object is read-only, whereas the collection itself is read-write.</span></span>  
  
<a name="xamlPropertyElementUsage_ValidationRules"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="80fd3-397">Использование элемента свойства XAML</span><span class="sxs-lookup"><span data-stu-id="80fd3-397">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.ValidationRules>  
    oneOrMoreValidationRules  
  </object.ValidationRules>  
</object>  
  
```  
  
<a name="xamlValues_ValidationRules"></a>   
## <a name="xaml-values"></a><span data-ttu-id="80fd3-398">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="80fd3-398">XAML Values</span></span>  
 <span data-ttu-id="80fd3-399">*oneOrMoreValidationRules*</span><span class="sxs-lookup"><span data-stu-id="80fd3-399">*oneOrMoreValidationRules*</span></span>  
 <span data-ttu-id="80fd3-400">Один или несколько <xref:System.Windows.Controls.ValidationRule> объектов.</span><span class="sxs-lookup"><span data-stu-id="80fd3-400">One or more <xref:System.Windows.Controls.ValidationRule> objects.</span></span> <span data-ttu-id="80fd3-401">Можно использовать <xref:System.Windows.Controls.ExceptionValidationRule> класса или создать настраиваемые правила путем создания подкласса <xref:System.Windows.Controls.ValidationRule> класса.</span><span class="sxs-lookup"><span data-stu-id="80fd3-401">You can use the <xref:System.Windows.Controls.ExceptionValidationRule> class or create custom rules by subclassing the <xref:System.Windows.Controls.ValidationRule> class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Validation" />
      </Docs>
    </Member>
    <Member MemberName="XmlNamespaceManager">
      <MemberSignature Language="C#" Value="see GetXmlNamespaceManager, and SetXmlNamespaceManager" />
      <MemberSignature Language="ILAsm" Value="see GetXmlNamespaceManager, and SetXmlNamespaceManager" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.XmlNamespaceManager" />
      <MemberSignature Language="VB.NET" Value="see GetXmlNamespaceManager, and SetXmlNamespaceManager" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlNamespaceManagerProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty XmlNamespaceManagerProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty XmlNamespaceManagerProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Data.Binding.XmlNamespaceManagerProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly XmlNamespaceManagerProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ XmlNamespaceManagerProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80fd3-402">Идентифицирует присоединенное свойство <see cref="P:System.Windows.Data.Binding.XmlNamespaceManager" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-402">Identifies the <see cref="P:System.Windows.Data.Binding.XmlNamespaceManager" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="XPath">
      <MemberSignature Language="C#" Value="public string XPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string XPath" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Data.Binding.XPath" />
      <MemberSignature Language="VB.NET" Value="Public Property XPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ XPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="80fd3-403">Возвращает или задает <see langword="XPath" /> запрос, возвращающий значение источника привязки [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)], которое нужно использовать.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-403">Gets or sets an <see langword="XPath" /> query that returns the value on the [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] binding source to use.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="80fd3-404">Запрос <see langword="XPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-404">The <see langword="XPath" /> query.</span>
          </span>
          <span data-ttu-id="80fd3-405">Значение по умолчанию: <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="80fd3-405">The default is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="80fd3-406">Если источник привязки имеет [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] данных вместо [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] объекта, <xref:System.Windows.Data.Binding.XPath%2A> свойства используется вместо <xref:System.Windows.Data.Binding.Path%2A> свойство, указывающее путь к значению в источнике привязки для использования.</span><span class="sxs-lookup"><span data-stu-id="80fd3-406">When the binding source is [!INCLUDE[TLA#tla_xml](~/includes/tlasharptla-xml-md.md)] data instead of a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] object, the <xref:System.Windows.Data.Binding.XPath%2A> property is used instead of the <xref:System.Windows.Data.Binding.Path%2A> property to indicate the path to the value on the binding source to use.</span></span>  
  
 <span data-ttu-id="80fd3-407">Установив <xref:System.Windows.Data.Binding.XPath%2A> свойство, вы создаете `XPath` запрос, чтобы выбрать узел или коллекцию узлов (<xref:System.Xml.XmlElement?displayProperty=nameWithType> и <xref:System.Xml.XmlAttribute?displayProperty=nameWithType> оба являются производными от <xref:System.Xml.XmlNode?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="80fd3-407">By setting the <xref:System.Windows.Data.Binding.XPath%2A> property, you are creating an `XPath` query to select a node or a collection of nodes (<xref:System.Xml.XmlElement?displayProperty=nameWithType> and <xref:System.Xml.XmlAttribute?displayProperty=nameWithType> both derive from <xref:System.Xml.XmlNode?displayProperty=nameWithType>).</span></span> <span data-ttu-id="80fd3-408"><xref:System.Xml.XmlNode?displayProperty=nameWithType> — [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] объекта, то есть можно привязать к его свойства с помощью <xref:System.Windows.Data.Binding.Path%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="80fd3-408"><xref:System.Xml.XmlNode?displayProperty=nameWithType> is a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] object, which means you can bind to its properties using the <xref:System.Windows.Data.Binding.Path%2A> property.</span></span>  
  
 <span data-ttu-id="80fd3-409"><xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> Метод обрабатывает `XPath` выражения из <xref:System.Windows.Data.Binding.XPath%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="80fd3-409">The <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=nameWithType> method handles the `XPath` expressions from the <xref:System.Windows.Data.Binding.XPath%2A> property.</span></span> <span data-ttu-id="80fd3-410">`XPath` функции не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="80fd3-410">`XPath` functions are not supported.</span></span> <span data-ttu-id="80fd3-411">Для `XPath` выражение сведения см. в разделе <xref:System.Xml.XmlNode.SelectNodes%2A> документация и примеры, приведенные в разделе "Пример".</span><span class="sxs-lookup"><span data-stu-id="80fd3-411">For `XPath` expression information, see the <xref:System.Xml.XmlNode.SelectNodes%2A> documentation and some examples provided in the Example section.</span></span>  
  
 <span data-ttu-id="80fd3-412">LINQ для объектов XML <xref:System.Xml.Linq.XDocument> и <xref:System.Xml.Linq.XElement> используют `XPath`.</span><span class="sxs-lookup"><span data-stu-id="80fd3-412">LINQ to XML objects <xref:System.Xml.Linq.XDocument> and <xref:System.Xml.Linq.XElement> do not use `XPath`.</span></span> <span data-ttu-id="80fd3-413">Дополнительные сведения см. в разделе [как: Bind XDocument XElement и LINQ для результатов запроса XML](~/docs/framework/wpf/data/how-to-bind-to-xdocument-xelement-or-linq-for-xml-query-results.md).</span><span class="sxs-lookup"><span data-stu-id="80fd3-413">For details, see [How to: Bind to XDocument, XElement, or LINQ for XML Query Results](~/docs/framework/wpf/data/how-to-bind-to-xdocument-xelement-or-linq-for-xml-query-results.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>