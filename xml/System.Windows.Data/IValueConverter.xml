<Type Name="IValueConverter" FullName="System.Windows.Data.IValueConverter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="87de07d6cdb7668462dc19daf57bdacc17bed8cb" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36364470" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IValueConverter" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IValueConverter" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.IValueConverter" />
  <TypeSignature Language="VB.NET" Value="Public Interface IValueConverter" />
  <TypeSignature Language="C++ CLI" Value="public interface class IValueConverter" />
  <TypeSignature Language="F#" Value="type IValueConverter = interface" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Позволяет применять пользовательскую логику к привязке.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если вы хотите связать с привязкой преобразователя значений, создайте класс, реализующий <xref:System.Windows.Data.IValueConverter> интерфейс, а затем реализуйте <xref:System.Windows.Data.IValueConverter.Convert%2A> и <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> методы. Преобразователи типов можно преобразовывать данные из одного типа в другой, транслировать данные, основываясь на сведениях о или изменять другие аспекты презентации. Примеры типичных сценариев см. в разделе «Конвертация данных» в [Общие сведения о привязке данных](~/docs/framework/wpf/data/data-binding-overview.md).  
  
 Преобразователи значений учитывают язык и региональные параметры. Как <xref:System.Windows.Data.IValueConverter.Convert%2A> и <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> методы имеют `culture` параметр, который указывает региональные сведения. Если сведения о культуре не имеют значения для преобразования, этот параметр можно игнорировать в ваш пользовательский преобразователь.  
  
 <xref:System.Windows.Data.IValueConverter.Convert%2A> И <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> методы также имеют параметр с именем `parameter` , чтобы один и тот же экземпляр преобразователя можно использовать с различными параметрами. Например можно написать преобразователь форматирования, производящий различные форматы данных, на основе входного параметра, используемого. Можно использовать <xref:System.Windows.Data.Binding.ConverterParameter%2A> из <xref:System.Windows.Data.Binding> для передачи в качестве аргумента в параметр <xref:System.Windows.Data.IValueConverter.Convert%2A> и <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> методы.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Data.IMultiValueConverter" />
    <altmember cref="T:System.Windows.Data.ValueConversionAttribute" />
  </Docs>
  <Members>
    <Member MemberName="Convert">
      <MemberSignature Language="C#" Value="public object Convert (object value, Type targetType, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Convert(object value, class System.Type targetType, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.IValueConverter.Convert(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function Convert (value As Object, targetType As Type, parameter As Object, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ Convert(System::Object ^ value, Type ^ targetType, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member Convert : obj * Type * obj * System.Globalization.CultureInfo -&gt; obj" Usage="iValueConverter.Convert (value, targetType, parameter, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">Значение, произведенное исходной привязкой.</param>
        <param name="targetType">Тип целевого свойства привязки.</param>
        <param name="parameter">Используемый параметр преобразователя.</param>
        <param name="culture">Язык и региональные параметры, используемые в преобразователе.</param>
        <summary>Преобразует значение.</summary>
        <returns>Преобразованное значение. Если этот метод возвращает <see langword="null" />, используется допустимое значение NULL.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Механизм привязки данных вызывает этот метод при распространении значения от источника привязки в целевой объект привязки.  
  
 Механизм привязки данных не перехватывает исключения, возникающие с пользовательским преобразователем. Любое исключение, вызванное <xref:System.Windows.Data.IValueConverter.Convert%2A> метод или любой неперехваченных исключений, которые вызываются методы, <xref:System.Windows.Data.IValueConverter.Convert%2A> вызовы методов, обрабатываются как ошибки во время выполнения. Возможные проблемы следует обрабатывать, возвращая <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType>.  
  
 Возвращаемое значение <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType> указывает, что преобразователь произведено без значения и, что привязка использует <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, если он доступен, или значение по умолчанию.  
  
 Возвращаемое значение <xref:System.Windows.Data.Binding.DoNothing?displayProperty=nameWithType> означает, что привязка не передает значение или использовать <xref:System.Windows.Data.BindingBase.FallbackValue%2A> или значение по умолчанию.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertBack">
      <MemberSignature Language="C#" Value="public object ConvertBack (object value, Type targetType, object parameter, System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ConvertBack(object value, class System.Type targetType, object parameter, class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Data.IValueConverter.ConvertBack(System.Object,System.Type,System.Object,System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function ConvertBack (value As Object, targetType As Type, parameter As Object, culture As CultureInfo) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ ConvertBack(System::Object ^ value, Type ^ targetType, System::Object ^ parameter, System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="abstract member ConvertBack : obj * Type * obj * System.Globalization.CultureInfo -&gt; obj" Usage="iValueConverter.ConvertBack (value, targetType, parameter, culture)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="targetType" Type="System.Type" />
        <Parameter Name="parameter" Type="System.Object" />
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="value">Значение, произведенное целью привязки.</param>
        <param name="targetType">Целевой тип преобразования.</param>
        <param name="parameter">Используемый параметр преобразователя.</param>
        <param name="culture">Язык и региональные параметры, используемые в преобразователе.</param>
        <summary>Преобразует значение.</summary>
        <returns>Преобразованное значение. Если этот метод возвращает <see langword="null" />, используется допустимое значение NULL.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Механизм привязки данных вызывает этот метод при распространении значения целевого объекта привязки к источнику привязки.  
  
 Реализация этого метода должна быть обратное <xref:System.Windows.Data.IValueConverter.Convert%2A> метод.  
  
 Механизм привязки данных не перехватывает исключения, возникающие с пользовательским преобразователем. Любое исключение, вызванное <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> метод или любой неперехваченных исключений, которые вызываются методы, <xref:System.Windows.Data.IValueConverter.ConvertBack%2A> вызовы методов, обрабатываются как ошибки во время выполнения. Возможные проблемы следует обрабатывать, возвращая <xref:System.Windows.DependencyProperty>.<xref:System.Windows.DependencyProperty.UnsetValue>.  
  
 Возвращаемое значение <xref:System.Windows.DependencyProperty.UnsetValue?displayProperty=nameWithType> указывает, что преобразователь произведено без значения и, что привязка использует <xref:System.Windows.Data.BindingBase.FallbackValue%2A>, если он доступен, или значение по умолчанию.  
  
 Возвращаемое значение <xref:System.Windows.Data.Binding.DoNothing?displayProperty=nameWithType> означает, что привязка не передает значение или использовать <xref:System.Windows.Data.BindingBase.FallbackValue%2A> или значение по умолчанию.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>