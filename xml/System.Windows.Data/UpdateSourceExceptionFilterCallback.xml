<Type Name="UpdateSourceExceptionFilterCallback" FullName="System.Windows.Data.UpdateSourceExceptionFilterCallback">
  <TypeSignature Language="C#" Value="public delegate object UpdateSourceExceptionFilterCallback(object bindExpression, Exception exception);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed UpdateSourceExceptionFilterCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Data.UpdateSourceExceptionFilterCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function UpdateSourceExceptionFilterCallback(bindExpression As Object, exception As Exception) As Object " />
  <TypeSignature Language="C++ CLI" Value="public delegate System::Object ^ UpdateSourceExceptionFilterCallback(System::Object ^ bindExpression, Exception ^ exception);" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="bindExpression" Type="System.Object" />
    <Parameter Name="exception" Type="System.Exception" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Object</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="bindExpression"><span data-ttu-id="0ca11-101">Объект с исключением.</span><span class="sxs-lookup"><span data-stu-id="0ca11-101">The object with the exception.</span></span></param>
    <param name="exception"><span data-ttu-id="0ca11-102">Возникло исключение.</span><span class="sxs-lookup"><span data-stu-id="0ca11-102">The exception encountered.</span></span></param>
    <summary><span data-ttu-id="0ca11-103">Представляет метод, который обрабатывает исключения, вызываемые во время обновления значения источника привязки.</span><span class="sxs-lookup"><span data-stu-id="0ca11-103">Represents the method that handles exceptions that are thrown during the update of the binding source value.</span></span> <span data-ttu-id="0ca11-104">Должен использоваться вместе с <see cref="T:System.Windows.Controls.ExceptionValidationRule" />.</span><span class="sxs-lookup"><span data-stu-id="0ca11-104">This must be used with the <see cref="T:System.Windows.Controls.ExceptionValidationRule" />.</span></span></summary>
    <returns><span data-ttu-id="0ca11-105">Объект, который обычно является одним из следующих.</span><span class="sxs-lookup"><span data-stu-id="0ca11-105">An object that is typically one of the following:</span></span>  
  
 <span data-ttu-id="0ca11-106"><list type="table"><listheader><term> Значение</span><span class="sxs-lookup"><span data-stu-id="0ca11-106"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="0ca11-107"></term><description> Описание</span><span class="sxs-lookup"><span data-stu-id="0ca11-107"></term><description> Description</span></span>  
  
 <span data-ttu-id="0ca11-108"></description></listheader><item><term><see langword="null" /></term><description> Для игнорирования любых исключений.</span><span class="sxs-lookup"><span data-stu-id="0ca11-108"></description></listheader><item><term><see langword="null" /></term><description> To ignore any exceptions.</span></span> <span data-ttu-id="0ca11-109">Поведение по умолчанию (если нет <see cref="T:System.Windows.Data.UpdateSourceExceptionFilterCallback" />) — создать <see cref="T:System.Windows.Controls.ValidationError" /> с исключением и добавить его в коллекцию <see cref="P:System.Windows.Controls.Validation.Errors" /> привязанного элемента.</span><span class="sxs-lookup"><span data-stu-id="0ca11-109">The default behavior (if there is no <see cref="T:System.Windows.Data.UpdateSourceExceptionFilterCallback" />) is to create a <see cref="T:System.Windows.Controls.ValidationError" /> with the exception and adds it to the <see cref="P:System.Windows.Controls.Validation.Errors" /> collection of the bound element.</span></span>  
  
 <span data-ttu-id="0ca11-110"></description></item><item><term> Любой объект.</span><span class="sxs-lookup"><span data-stu-id="0ca11-110"></description></item><item><term> Any object</span></span>  
  
 <span data-ttu-id="0ca11-111"></term><description> Для создания объекта <see cref="T:System.Windows.Controls.ValidationError" /> с установленным для этого объекта <see cref="P:System.Windows.Controls.ValidationError.ErrorContent" />.</span><span class="sxs-lookup"><span data-stu-id="0ca11-111"></term><description> To create a <see cref="T:System.Windows.Controls.ValidationError" /> object with the <see cref="P:System.Windows.Controls.ValidationError.ErrorContent" /> set to that object.</span></span>  
  
 <span data-ttu-id="0ca11-112"><see cref="T:System.Windows.Controls.ValidationError" /> объект добавлен в коллекцию <see cref="P:System.Windows.Controls.Validation.Errors" /> привязанного элемента.</span><span class="sxs-lookup"><span data-stu-id="0ca11-112">The <see cref="T:System.Windows.Controls.ValidationError" /> object is added to <see cref="P:System.Windows.Controls.Validation.Errors" /> collection of the bound element.</span></span>  
  
 <span data-ttu-id="0ca11-113"></description></item><item><term> Объект <see cref="T:System.Windows.Controls.ValidationError" /></span><span class="sxs-lookup"><span data-stu-id="0ca11-113"></description></item><item><term> A <see cref="T:System.Windows.Controls.ValidationError" /> object</span></span>  
  
 <span data-ttu-id="0ca11-114"></term><description> Чтобы задать объект <see cref="T:System.Windows.Data.BindingExpression" /> или <see cref="T:System.Windows.Data.MultiBindingExpression" /> как <see cref="P:System.Windows.Controls.ValidationError.BindingInError" />.</span><span class="sxs-lookup"><span data-stu-id="0ca11-114"></term><description> To set the <see cref="T:System.Windows.Data.BindingExpression" /> or <see cref="T:System.Windows.Data.MultiBindingExpression" /> object as the <see cref="P:System.Windows.Controls.ValidationError.BindingInError" />.</span></span> <span data-ttu-id="0ca11-115"><see cref="T:System.Windows.Controls.ValidationError" /> объект добавлен в коллекцию <see cref="P:System.Windows.Controls.Validation.Errors" /> привязанного элемента.</span><span class="sxs-lookup"><span data-stu-id="0ca11-115">The <see cref="T:System.Windows.Controls.ValidationError" /> object is added to <see cref="P:System.Windows.Controls.Validation.Errors" /> collection of the bound element.</span></span>  
  
 </description></item></list></returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0ca11-116">Если была связана <xref:System.Windows.Controls.ExceptionValidationRule> с вашей <xref:System.Windows.Data.Binding> объекта, у вас есть возможность использовать <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> свойство, чтобы задать этот обратный вызов для предоставления пользовательской логики для обработки исключений.</span><span class="sxs-lookup"><span data-stu-id="0ca11-116">If you have associated the <xref:System.Windows.Controls.ExceptionValidationRule> with your <xref:System.Windows.Data.Binding> object you have the option to use the <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> property to set this callback to provide custom logic for handling the exceptions.</span></span> <span data-ttu-id="0ca11-117">Этот обратный вызов при обнаружении любое исключение, что механизму привязки при обновлении значения источника привязки.</span><span class="sxs-lookup"><span data-stu-id="0ca11-117">This callback is invoked whenever any exception is encountered when the binding engine updates the binding source value.</span></span>  
  
 <span data-ttu-id="0ca11-118">Если <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> не указан в <xref:System.Windows.Data.Binding>, обработчик привязки создает <xref:System.Windows.Controls.ValidationError> с исключением и добавляет его в <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> коллекции связанного элемента.</span><span class="sxs-lookup"><span data-stu-id="0ca11-118">If an <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> is not specified on the <xref:System.Windows.Data.Binding>, the binding engine creates a <xref:System.Windows.Controls.ValidationError> with the exception and adds it to the <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=nameWithType> collection of the bound element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0ca11-119"><xref:System.Windows.Controls.TextBox.Text%2A> Свойство из следующих <xref:System.Windows.Controls.TextBox> данных привязан к свойству источника `Age3` типа `int`.</span><span class="sxs-lookup"><span data-stu-id="0ca11-119">The <xref:System.Windows.Controls.TextBox.Text%2A> property of the following <xref:System.Windows.Controls.TextBox> is data-bound to a source property `Age3` that is of type `int`.</span></span> <span data-ttu-id="0ca11-120"><xref:System.Windows.Controls.ExceptionValidationRule> Проверяет наличие исключений, возникших во время обновления свойства источника (например, когда пользователь вводит значение, которое невозможно преобразовать в целое число).</span><span class="sxs-lookup"><span data-stu-id="0ca11-120">The <xref:System.Windows.Controls.ExceptionValidationRule> checks for exceptions that are thrown during the update of the source property (such as when the user enters a value that cannot be converted to an integer).</span></span>  
  
 [!code-xaml[BindValidation#tbExceptionFilter](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml#tbexceptionfilter)]  
  
 <span data-ttu-id="0ca11-121">Имеется возможность для предоставления пользовательской логики для обработки этих исключений.</span><span class="sxs-lookup"><span data-stu-id="0ca11-121">You have the option to provide custom logic to handle those exceptions.</span></span> <span data-ttu-id="0ca11-122">В следующем примере показано, как использовать <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> задаваемого свойства <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>:</span><span class="sxs-lookup"><span data-stu-id="0ca11-122">The following example shows how to use the <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A> property to set an <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>:</span></span>  
  
 [!code-csharp[BindValidation#filtercallback](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml.cs#filtercallback)]  
  
 <span data-ttu-id="0ca11-123">Ниже приведен пример реализации <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>:</span><span class="sxs-lookup"><span data-stu-id="0ca11-123">The following is an example implementation of an <xref:System.Windows.Data.UpdateSourceExceptionFilterCallback>:</span></span>  
  
 [!code-csharp[BindValidation#Handler](~/samples/snippets/csharp/VS_Snippets_Wpf/BindValidation/CSharp/Window1.xaml.cs#handler)]  
  
 <span data-ttu-id="0ca11-124">Полный пример см. в разделе [пример проверки привязки](http://go.microsoft.com/fwlink/?LinkID=159972).</span><span class="sxs-lookup"><span data-stu-id="0ca11-124">For the complete sample, see [Binding Validation Sample](http://go.microsoft.com/fwlink/?LinkID=159972).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.Data.MultiBinding.UpdateSourceExceptionFilter" />
  </Docs>
</Type>