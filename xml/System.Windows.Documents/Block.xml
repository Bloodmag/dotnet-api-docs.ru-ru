<Type Name="Block" FullName="System.Windows.Documents.Block">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="cc8514bfa559c66649b4fdf5ba72c06ff5af9796" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30630808" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Block : System.Windows.Documents.TextElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Block extends System.Windows.Documents.TextElement" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.Block" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Block&#xA;Inherits TextElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class Block abstract : System::Windows::Documents::TextElement" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Documents.TextElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Абстрактный класс, служащий базовым для всех элементов содержимого потока потоков на уровне блоков.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Элементы, которые наследуют от <xref:System.Windows.Documents.Block> класса (например, <xref:System.Windows.Documents.Section>) можно использовать для группировки элементов одного родителя или применения общих атрибутов в группу. По сути, это аналогично использованию \<DIV > в теге [!INCLUDE[TLA#tla_html](~/includes/tlasharptla-html-md.md)].  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Documents.Run" />
    <altmember cref="T:System.Windows.Documents.Span" />
    <altmember cref="T:System.Windows.Documents.InlineUIContainer" />
    <altmember cref="T:System.Windows.Documents.Floater" />
    <altmember cref="T:System.Windows.Documents.Figure" />
    <altmember cref="T:System.Windows.Documents.LineBreak" />
    <altmember cref="T:System.Windows.Documents.FlowDocument" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Block ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Block.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Block();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует значения базового класса <see cref="T:System.Windows.Documents.Block" /> при вызове из производного класса.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderBrush">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Brush BorderBrush { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Brush BorderBrush" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.BorderBrush" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderBrush As Brush" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Brush ^ BorderBrush { System::Windows::Media::Brush ^ get(); void set(System::Windows::Media::Brush ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Brush</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает кисть <see cref="T:System.Windows.Media.Brush" />, используемую при отрисовке границы элемента.</summary>
        <value>Кисть, используемая для применения к границе элемента. Значение по умолчанию: <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Таблицу образцов, отображающей доступные предопределенные цвета кисти см. в разделе <xref:System.Windows.Media.Brushes>.  
  
<a name="dependencyPropertyInfo_BorderBrush"></a>   
## <a name="dependency-property-information"></a>Сведения о свойстве зависимостей  
  
|||  
|-|-|  
|Поле идентификатора|<xref:System.Windows.Documents.Block.BorderBrushProperty>|  
|Значение свойства метаданных `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
   
  
## Examples  
 Следующий пример показывает, как задать <xref:System.Windows.Documents.Block.BorderBrush%2A> атрибут <xref:System.Windows.Documents.Block> элемент (<xref:System.Windows.Documents.Paragraph>).  
  
 [!code-xaml[BlockSnippets#_Block_BordersXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_bordersxaml)]  
  
 На следующем рисунке показана прорисовку предыдущего примера.  
  
 ![Снимок экрана: Синяя, 1&#47;границы 4 дюйма вокруг Block](~/add/media/block-borders.png "снимок экрана: синяя, границы 1/4 дюйма вокруг Block")  
  
 Следующий пример показывает, как задать <xref:System.Windows.Documents.Block.BorderBrush%2A> свойства программными средствами.  
  
 [!code-csharp[BlockSnippets#_Block_Borders](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_borders)]
 [!code-vb[BlockSnippets#_Block_Borders](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_borders)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.Block.BorderThickness" />
      </Docs>
    </Member>
    <Member MemberName="BorderBrushProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BorderBrushProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BorderBrushProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.BorderBrushProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BorderBrushProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BorderBrushProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Идентифицирует свойство зависимостей <see cref="P:System.Windows.Documents.Block.BorderBrush" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderThickness">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness BorderThickness { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness BorderThickness" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.BorderThickness" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderThickness As Thickness" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Thickness BorderThickness { System::Windows::Thickness get(); void set(System::Windows::Thickness value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает толщину границы для элемента.</summary>
        <value>Структура <see cref="T:System.Windows.Thickness" />, которая указывает применяемую толщину границы в аппаратно-независимых пикселях. Значение по умолчанию — единая нулевая толщина (0,0).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="xamlAttributeUsage_BorderThickness"></a>   
## <a name="xaml-attribute-usage"></a>Использование атрибута XAML  
  
```  
<object BorderThickness="uniformThickness"/>  
- or -  
<object BorderThickness="independentThickness"/>  
- or -  
<object BorderThickness="qualifiedUniformThickness"/>  
- or -  
<object BorderThickness="qualifiedIndependentThickness"/>  
```  
  
<a name="xamlValues_BorderThickness"></a>   
## <a name="xaml-values"></a>Значения XAML  
 *uniformThickness*  
 Строковое представление значения типа single <xref:System.Double> значение, применяемое ко всем четырем размерам толщины.  Например, значение `"10"` эквивалентное значение `"10,10,10,10"`.  Неквалифицированное значение измеряется в аппаратно-независимых пикселях. Строки не нужно явно указывать десятичного разделителя.  
  
 *independentThickness*  
 Строковое представление четырех упорядоченных <xref:System.Double> значения, соответствующие ширине слева, сверху, вправо и вниз, в следующем порядке.  Четыре значения должны разделяться запятыми; пробелы не допускаются.  Например «5,10,15,20» приведет к 5 точек границы слева от содержимого, 10 точек границы над содержимым, 15 точек границы справа от содержимого и 20 точек границы под содержимым.  
  
 *qualifiedUniformThickness*  
 Значение, описываемое *uniformThickness* следует один из следующих спецификаторов единиц: `px`, `in`.  
  
 `px` (по умолчанию) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` дюймах; 1 дюйм == 96 точек  
  
 Например `"1in"` предоставляет единую границу в 1 дюйм во всех направлениях.  
  
 *qualifiedIndependentThickness*  
 Значение, описываемое *independentThickness*, за каждым независимым значением, за которым следует один из следующих спецификаторов единиц: `px`, `in`.  
  
 `px` (по умолчанию) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` дюймах; 1 дюйм == 96 точек  
  
 Например, `"1.5in,0.8in,1.5in,0.8in"`.  Спецификаторы единиц может смешанных или исключаются из одного или нескольких значений.  
  
<a name="dependencyPropertyInfo_BorderThickness"></a>   
## <a name="dependency-property-information"></a>Сведения о свойстве зависимостей  
  
|||  
|-|-|  
|Поле идентификатора|<xref:System.Windows.Documents.Block.BorderThicknessProperty>|  
|Значение свойства метаданных `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 Следующий пример показывает, как задать <xref:System.Windows.Documents.Block.BorderThickness%2A> атрибут <xref:System.Windows.Documents.Block> элемент (<xref:System.Windows.Documents.Paragraph>).  
  
 [!code-xaml[BlockSnippets#_Block_BordersXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_bordersxaml)]  
  
 На следующем рисунке показана прорисовку предыдущего примера.  
  
 ![Снимок экрана: Синяя, 1&#47;границы 4 дюйма вокруг Block](~/add/media/block-borders.png "снимок экрана: синяя, границы 1/4 дюйма вокруг Block")  
  
 Следующий пример показывает, как задать <xref:System.Windows.Documents.Block.BorderThickness%2A> свойства программными средствами.  
  
 [!code-csharp[BlockSnippets#_Block_Borders](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_borders)]
 [!code-vb[BlockSnippets#_Block_Borders](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_borders)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.Block.BorderBrush" />
      </Docs>
    </Member>
    <Member MemberName="BorderThicknessProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BorderThicknessProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BorderThicknessProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.BorderThicknessProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BorderThicknessProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BorderThicknessProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Идентифицирует свойство зависимостей <see cref="P:System.Windows.Documents.Block.BorderThickness" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BreakColumnBefore">
      <MemberSignature Language="C#" Value="public bool BreakColumnBefore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BreakColumnBefore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.BreakColumnBefore" />
      <MemberSignature Language="VB.NET" Value="Public Property BreakColumnBefore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BreakColumnBefore { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, следует ли автоматически вставлять разрыв столбца перед данным элементом в случаях, когда этот элемент участвует в представлении на основе столбцов.</summary>
        <value>
          <see langword="true" /> для автоматической вставки разрыва столбца перед этим элементом; в противном случае — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_BreakColumnBefore"></a>   
## <a name="dependency-property-information"></a>Сведения о свойстве зависимостей  
  
|||  
|-|-|  
|Поле идентификатора|<xref:System.Windows.Documents.Block.BreakColumnBeforeProperty>|  
|Значение свойства метаданных `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.Block.BreakPageBefore" />
      </Docs>
    </Member>
    <Member MemberName="BreakColumnBeforeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BreakColumnBeforeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BreakColumnBeforeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.BreakColumnBeforeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BreakColumnBeforeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BreakColumnBeforeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Идентифицирует свойство зависимостей <see cref="P:System.Windows.Documents.Block.BreakColumnBefore" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BreakPageBefore">
      <MemberSignature Language="C#" Value="public bool BreakPageBefore { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool BreakPageBefore" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.BreakPageBefore" />
      <MemberSignature Language="VB.NET" Value="Public Property BreakPageBefore As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool BreakPageBefore { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, следует ли автоматически вставлять разрыв страницы перед данным элементом.</summary>
        <value>
          <see langword="true" /> для автоматической вставки разрыва страницы перед этим элементом; в противном случае — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_BreakPageBefore"></a>   
## <a name="dependency-property-information"></a>Сведения о свойстве зависимостей  
  
|||  
|-|-|  
|Поле идентификатора|<xref:System.Windows.Documents.Block.BreakColumnBeforeProperty>|  
|Значение свойства метаданных `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.Block.BreakColumnBefore" />
      </Docs>
    </Member>
    <Member MemberName="BreakPageBeforeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BreakPageBeforeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BreakPageBeforeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.BreakPageBeforeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BreakPageBeforeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BreakPageBeforeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Идентифицирует свойство зависимостей <see cref="P:System.Windows.Documents.Block.BreakPageBefore" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearFloaters">
      <MemberSignature Language="C#" Value="public System.Windows.WrapDirection ClearFloaters { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.WrapDirection ClearFloaters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.ClearFloaters" />
      <MemberSignature Language="VB.NET" Value="Public Property ClearFloaters As WrapDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::WrapDirection ClearFloaters { System::Windows::WrapDirection get(); void set(System::Windows::WrapDirection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.WrapDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает направление размещения всех элементов <see cref="T:System.Windows.Documents.Floater" />, содержащихся в элементе <see cref="T:System.Windows.Documents.Block" />.</summary>
        <value>Одно из значений <see cref="T:System.Windows.WrapDirection" />, определяющий направление отделения элементов <see cref="T:System.Windows.Documents.Floater" /> от другого содержимого элемента <see cref="T:System.Windows.Documents.Block" />. По умолчанию используется значение <see cref="F:System.Windows.WrapDirection.None" />, указывающее, что элементы Floater должны отображаться на своем месте.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.Block.ClearFloaters%2A> Влияет на свойства, как содержимое размещается в пределах <xref:System.Windows.Documents.Block> и предназначен для использования во избежание <xref:System.Windows.Documents.Floater> элементы из congesting содержимое <xref:System.Windows.Documents.Block> элемента.  Указание направления для этого свойства вызывает перемещаемые объекты размещать в одном направлении в <xref:System.Windows.Documents.Block> содержимого.  Перемещаемые объекты, не изменятся за пределами родительских <xref:System.Windows.Documents.Block>.  
  
<a name="dependencyPropertyInfo_ClearFloaters"></a>   
## <a name="dependency-property-information"></a>Сведения о свойстве зависимостей  
  
|||  
|-|-|  
|Поле идентификатора|<xref:System.Windows.Documents.Block.ClearFloatersProperty>|  
|Значение свойства метаданных `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearFloatersProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ClearFloatersProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ClearFloatersProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.ClearFloatersProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ClearFloatersProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ClearFloatersProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Идентифицирует свойство зависимостей <see cref="P:System.Windows.Documents.Block.ClearFloaters" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowDirection">
      <MemberSignature Language="C#" Value="public System.Windows.FlowDirection FlowDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FlowDirection FlowDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.FlowDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property FlowDirection As FlowDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::FlowDirection FlowDirection { System::Windows::FlowDirection get(); void set(System::Windows::FlowDirection value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FlowDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает относительное направление потока содержимого в элементе <see cref="T:System.Windows.Documents.Block" />.</summary>
        <value>Одно из значений <see cref="T:System.Windows.FlowDirection" />, задающее относительное направление потока. Значение по умолчанию: <see cref="F:System.Windows.FlowDirection.LeftToRight" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При получении данного свойства возвращается текущее эффективное направления потока.  Установка данного свойства вызывает повторную заливку содержимого элемента <xref:System.Windows.Documents.Block> в указанном направлении.  
  
 Направление потока содержимого обычно соответствует направлению направлению потока представляемого языка.  Иврит и арабский являются примерами языков, которые читаются справа налево.  Английский, немецкий и русский являются примерами языков, которые читаются слева направо.  
  
> [!NOTE]
>  **Значение этого свойства не изменяется автоматически в соответствии с языком операционной системы. Если необходимо использовать другой значение th****n по умолчанию из** <xref:System.Windows.FlowDirection.LeftToRight> **, необходимо указать его самостоятельно.**  
  
<a name="dependencyPropertyInfo_FlowDirection"></a>   
## <a name="dependency-property-information"></a>Сведения о свойстве зависимостей  
  
|||  
|-|-|  
|Поле идентификатора|<xref:System.Windows.Documents.Block.FlowDirectionProperty>|  
|Значение свойства метаданных `true`|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A>|  
  
   
  
## Examples  
 Следующий пример показывает, как задать <xref:System.Windows.Documents.Block.FlowDirection%2A> атрибут <xref:System.Windows.Documents.Block> элемент (<xref:System.Windows.Documents.Paragraph>).  
  
 [!code-xaml[BlockSnippets#_Block_FlowDirectionXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_flowdirectionxaml)]  
  
 Следующий пример показывает, как задать <xref:System.Windows.Documents.Block.FlowDirection%2A> свойства программными средствами.  
  
 [!code-csharp[BlockSnippets#_Block_FlowDirection](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_flowdirection)]
 [!code-vb[BlockSnippets#_Block_FlowDirection](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_flowdirection)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowDirectionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FlowDirectionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FlowDirectionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.FlowDirectionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FlowDirectionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FlowDirectionProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Идентифицирует свойство зависимостей <see cref="P:System.Windows.Documents.Block.FlowDirection" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIsHyphenationEnabled">
      <MemberSignature Language="C#" Value="public static bool GetIsHyphenationEnabled (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsHyphenationEnabled(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Block.GetIsHyphenationEnabled(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsHyphenationEnabled (element As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsHyphenationEnabled(System::Windows::DependencyObject ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">Объект зависимости, из которого нужно извлечь значение свойства <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" />.</param>
        <summary>Возвращает значение присоединенного свойства <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> для указанного объекта зависимости.</summary>
        <returns>Текущее значение присоединенного свойства <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> для заданного объекта зависимости.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="element" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Documents.Block.SetIsHyphenationEnabled(System.Windows.DependencyObject,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="GetLineHeight">
      <MemberSignature Language="C#" Value="public static double GetLineHeight (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig float64 GetLineHeight(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Block.GetLineHeight(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLineHeight (element As DependencyObject) As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static double GetLineHeight(System::Windows::DependencyObject ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">Объект зависимости, из которого нужно извлечь значение свойства <see cref="P:System.Windows.Documents.Block.LineHeight" />.</param>
        <summary>Возвращает значение присоединенного свойства <see cref="P:System.Windows.Documents.Block.LineHeight" /> для указанного объекта зависимости.</summary>
        <returns>Текущее значение присоединенного свойства <see cref="P:System.Windows.Documents.Block.LineHeight" /> для заданного объекта зависимости.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="element" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Documents.Block.SetLineHeight(System.Windows.DependencyObject,System.Double)" />
      </Docs>
    </Member>
    <Member MemberName="GetLineStackingStrategy">
      <MemberSignature Language="C#" Value="public static System.Windows.LineStackingStrategy GetLineStackingStrategy (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.LineStackingStrategy GetLineStackingStrategy(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Block.GetLineStackingStrategy(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetLineStackingStrategy (element As DependencyObject) As LineStackingStrategy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::LineStackingStrategy GetLineStackingStrategy(System::Windows::DependencyObject ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.LineStackingStrategy</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">Объект зависимости, из которого нужно извлечь значение вложенного свойства зависимостей <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" />.</param>
        <summary>Возвращает значение присоединенного свойства <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> для указанного объекта зависимости.</summary>
        <returns>Текущее значение присоединенного свойства <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> для заданного объекта зависимости.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="element" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Documents.Block.SetLineStackingStrategy(System.Windows.DependencyObject,System.Windows.LineStackingStrategy)" />
      </Docs>
    </Member>
    <Member MemberName="GetTextAlignment">
      <MemberSignature Language="C#" Value="public static System.Windows.TextAlignment GetTextAlignment (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.TextAlignment GetTextAlignment(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Block.GetTextAlignment(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTextAlignment (element As DependencyObject) As TextAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::TextAlignment GetTextAlignment(System::Windows::DependencyObject ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextAlignment</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">Объект зависимости, из которого нужно извлечь значение свойства <see cref="P:System.Windows.Documents.Block.TextAlignment" />.</param>
        <summary>Возвращает значение присоединенного свойства <see cref="P:System.Windows.Documents.Block.TextAlignment" /> для указанного объекта зависимости.</summary>
        <returns>Текущее значение присоединенного свойства <see cref="P:System.Windows.Documents.Block.TextAlignment" /> для заданного объекта зависимости.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="element" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Documents.Block.SetTextAlignment(System.Windows.DependencyObject,System.Windows.TextAlignment)" />
      </Docs>
    </Member>
    <Member MemberName="IsHyphenationEnabled">
      <MemberSignature Language="C#" Value="public bool IsHyphenationEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHyphenationEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.IsHyphenationEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property IsHyphenationEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHyphenationEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, включена или отключена функция автоматического переноса слов.</summary>
        <value>
          <see langword="true" />, если функция автоматического переноса слов включена; в противном случае — <see langword="false" />. Значение по умолчанию: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Функция автоматического переноса слов позволяет <xref:System.Windows.Documents.Block> автоматически прервать и слова с элемента на основе текущего макета условий.  Это позволяет длинные слова по строкам и продолжить на следующей и обеспечивает более равномерное распределение пробелов в тексте по ширине.  Слова разбиваются и переносятся согласно стандартным правилам грамматики.  
  
<a name="dependencyPropertyInfo_IsHyphenationEnabled"></a>   
## <a name="dependency-property-information"></a>Сведения о свойстве зависимостей  
  
|||  
|-|-|  
|Поле идентификатора|<xref:System.Windows.Documents.Block.IsHyphenationEnabledProperty>|  
|Значение свойства метаданных `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## Examples  
 Следующий пример показывает, как задать <xref:System.Windows.Documents.Block.IsHyphenationEnabled%2A> атрибут <xref:System.Windows.Documents.Block> элемента.  
  
 [!code-xaml[BlockSnippets#_Block_HyphenateXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_hyphenatexaml)]  
  
 На следующем рисунке показана прорисовку предыдущего примера.  
  
 ![Снимок экрана: Документ нефиксированного формата с включенными дефисами](~/add/media/flowdoc-hyphenenabled.png "снимок экрана: документ нефиксированного формата с включенными дефисами")  
  
 На следующем рисунке показана прорисовку тот же пример с значение по умолчанию <xref:System.Windows.Documents.Block.IsHyphenationEnabled%2A> = `false`.  
  
 ![Снимок экрана: Документ нефиксированного формата с отключенными дефисами](~/add/media/flowdoc-hyphendisabled.png "снимок экрана: документ нефиксированного формата с отключенными дефисами")  
  
 Следующий пример показывает, как задать <xref:System.Windows.Documents.Block.IsHyphenationEnabled%2A> свойства программными средствами.  
  
 [!code-csharp[BlockSnippets#_Block_Hyphenate](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_hyphenate)]
 [!code-vb[BlockSnippets#_Block_Hyphenate](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_hyphenate)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsHyphenationEnabledProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsHyphenationEnabledProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsHyphenationEnabledProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.IsHyphenationEnabledProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsHyphenationEnabledProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsHyphenationEnabledProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Идентифицирует свойство зависимостей <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineHeight">
      <MemberSignature Language="C#" Value="public double LineHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 LineHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.LineHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property LineHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double LineHeight { double get(); void set(double value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает высоту каждой строки содержимого.</summary>
        <value>Высота каждой строки в аппаратно-независимых пикселях в диапазоне от 0,0034 до 160 000, или <see cref="F:System.Double.NaN" /> для автоматического определения высоты. Значение по умолчанию: <see cref="F:System.Double.NaN" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Double.NaN?displayProperty=nameWithType> (эквивалентно значению атрибута `Auto`) указывает, что высота строки определяется автоматически на основе характеристик текущего шрифта.  
  
 Изменение этого значения не изменяет высоту связанного текста. Вместо этого он изменяет высоту строки, содержащей текст. Чтобы изменить размер текста, используйте <xref:System.Windows.Documents.FlowDocument.FontSize%2A> свойство.  
  
 В дополнение к этим свойством, макет строк в <xref:System.Windows.Documents.Block> зависит от его <xref:System.Windows.Documents.Block.LineStackingStrategy%2A> свойство.  
  
<a name="xamlAttributeUsage_LineHeight"></a>   
## <a name="xaml-attribute-usage"></a>Использование атрибута XAML  
  
```  
<object LineHeight="double"/>  
- or -  
<object LineHeight="qualifiedDouble"/>  
- or -  
<object LineHeight="Auto"/>  
```  
  
<a name="xamlValues_LineHeight"></a>   
## <a name="xaml-values"></a>Значения XAML  
 *double*  
 <xref:System.Double>  
  
 Строковое представление <xref:System.Double> значение от 0,0034 или меньше, чем 160000. Неквалифицированное значение измеряется в аппаратно-независимых пикселях. Строки не нужно явно указывать десятичного разделителя.  
  
 *qualifiedDouble*  
 Объект *двойные* значение, как описано выше, (за исключением `Auto`) следует один из следующих спецификаторов единиц: `px`, `in`, `cm`, `pt`.  
  
 `px` (по умолчанию) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` дюймах; 1 дюйм == 96 точек  
  
 `cm` сантиметрах; 1см==(96/2,54) пкс  
  
 `pt` точках; 1точка==(96/72) пкс  
  
 Авто  
 Приводит к тому, что высота строки определяется автоматически на основе характеристик текущего шрифта.  Эквивалентно значению свойства <xref:System.Double.NaN?displayProperty=nameWithType>.  
  
<a name="dependencyPropertyInfo_LineHeight"></a>   
## <a name="dependency-property-information"></a>Сведения о свойстве зависимостей  
  
|||  
|-|-|  
|Поле идентификатора|<xref:System.Windows.Documents.Block.LineHeightProperty>|  
|Значение свойства метаданных `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## Examples  
 Следующий пример показывает, как задать <xref:System.Windows.Documents.Block.LineHeight%2A> атрибут <xref:System.Windows.Documents.Block> элемента.  
  
 [!code-xaml[BlockSnippets#_Block_LineHeightXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_lineheightxaml)]  
  
 На следующем рисунке показана прорисовку предыдущего примера.  
  
 ![Снимок экрана: FlowDocument LineHeight](~/add/media/flowdocument-lineheight.png "снимок экрана: LineHeight для документа нефиксированного формата")  
  
 На следующем рисунке показано, как же <xref:System.Windows.Documents.FlowDocument> значение по умолчанию при отображении <xref:System.Windows.Documents.FlowDocument.LineHeight%2A> = <xref:System.Double.NaN?displayProperty=nameWithType>.  
  
 ![Снимок экрана: LineHeight документ нефиксированного формата по умолчанию](~/add/media/flowdocument-lineheightdefault.png "снимок экрана: LineHeight для документа нефиксированного формата по умолчанию")  
  
 Следующий пример показывает, как задать <xref:System.Windows.Documents.Block.LineHeight%2A> свойства программными средствами.  
  
 [!code-csharp[BlockSnippets#_Block_LineHeight](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_lineheight)]
 [!code-vb[BlockSnippets#_Block_LineHeight](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_lineheight)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          Для <see cref="P:System.Windows.Controls.TextBlock.LineHeight" /> задано значение, не являющееся положительным.</exception>
      </Docs>
    </Member>
    <Member MemberName="LineHeightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LineHeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LineHeightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.LineHeightProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LineHeightProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LineHeightProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Идентифицирует свойство зависимостей <see cref="P:System.Windows.Documents.Block.LineHeight" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LineStackingStrategy">
      <MemberSignature Language="C#" Value="public System.Windows.LineStackingStrategy LineStackingStrategy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.LineStackingStrategy LineStackingStrategy" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.LineStackingStrategy" />
      <MemberSignature Language="VB.NET" Value="Public Property LineStackingStrategy As LineStackingStrategy" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::LineStackingStrategy LineStackingStrategy { System::Windows::LineStackingStrategy get(); void set(System::Windows::LineStackingStrategy value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.LineStackingStrategy</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, как определяется поле строки для каждой строки текста в элементе содержимого потока.</summary>
        <value>Одно из значений <see cref="T:System.Windows.LineStackingStrategy" />, указывающее, как определяется прямоугольник строки для каждой строки текста в элементе потока содержимого уровня блока. Значение по умолчанию — <see cref="F:System.Windows.LineStackingStrategy.MaxHeight" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство зависимостей также имеет использование вложенного свойства. В [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], является использование \< *объекта* <xref:System.Windows.Documents.Block.LineStackingStrategy%2A?displayProperty=nameWithType>=»*значение*«... / >, где *объекта* — это элемент объекта (обычно элемент потока) внутри <xref:System.Windows.Documents.Block> производного класса, и *значение* является строковым значением <xref:System.Windows.LineStackingStrategy> перечисления. В коде, поддерживается использование вложенного свойства <xref:System.Windows.Documents.Block.GetLineStackingStrategy%2A> и <xref:System.Windows.Documents.Block.SetLineStackingStrategy%2A> методы. Использование вложенного свойства не так часто.  
  
<a name="dependencyPropertyInfo_LineStackingStrategy"></a>   
## <a name="dependency-property-information"></a>Сведения о свойстве зависимостей  
  
|||  
|-|-|  
|Поле идентификатора|<xref:System.Windows.Documents.Block.LineStackingStrategyProperty>|  
|Значение свойства метаданных `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>|  
  
   
  
## Examples  
 В следующем примере показано, как использовать <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> свойства, чтобы определить, как поля строк создаются для строки текста <xref:System.Windows.Controls.TextBlock>. Первый <xref:System.Windows.Controls.TextBlock> имеет <xref:System.Windows.Controls.TextBlock.LineStackingStrategy%2A> значение <xref:System.Windows.LineStackingStrategy.MaxHeight> , а второй — <xref:System.Windows.Controls.TextBlock> имеет значение <xref:System.Windows.LineStackingStrategy.BlockLineHeight>.  
  
 [!code-xaml[FlowMiscSnippets_snip#LineStackingStrategyExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/FlowMiscSnippets_snip/cs/linestackingstrategyexample.xaml#linestackingstrategyexamplewholepage)]  
  
 Ниже показан результат выполнения предыдущего кода.  
  
 ![Снимок экрана: Сравнение значений LineStackingStrategy](~/add/media/flow-linestackingstrategy.gif "снимок экрана: сравнение LineStackingStrategy значения")  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LineStackingStrategyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LineStackingStrategyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LineStackingStrategyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.LineStackingStrategyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LineStackingStrategyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LineStackingStrategyProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Идентифицирует свойство зависимостей <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Margin">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness Margin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness Margin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.Margin" />
      <MemberSignature Language="VB.NET" Value="Public Property Margin As Thickness" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Thickness Margin { System::Windows::Thickness get(); void set(System::Windows::Thickness value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает толщину поля для элемента.</summary>
        <value>Объект <see cref="T:System.Windows.Thickness" /> структуру, которая указывает применяемое значение поля в аппаратно-независимых пикселях. Значение по умолчанию — единая нулевая толщина (0,0).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.Block.Margin%2A> представляет свободное пространство, которое находится за пределами области содержимого элемента между краями области содержимого элемента и краями родительского элемента.  Этот метод противоположен <xref:System.Windows.Documents.Block.Padding%2A>, являющееся буфера пространство внутри области содержимого элемента между содержимым элемента и его внутренней границей элемента.  
  
<a name="xamlAttributeUsage_Margin"></a>   
## <a name="xaml-attribute-usage"></a>Использование атрибута XAML  
  
```  
<object Margin="uniformThickness"/>  
- or -  
<object Margin="independentThickness"/>  
- or -  
<object Margin="qualifiedUniformThickness"/>  
- or -  
<object Margin="qualifiedIndependentThickness"/>  
```  
  
<a name="xamlValues_Margin"></a>   
## <a name="xaml-values"></a>Значения XAML  
 *uniformThickness*  
 Строковое представление значения типа single <xref:System.Double> значение, применяемое ко всем четырем размерам толщины.  Например, значение `"10"` эквивалентное значение `"10,10,10,10"`.  Неквалифицированное значение измеряется в аппаратно-независимых пикселях. Строки не нужно явно указывать десятичного разделителя.  
  
 *independentThickness*  
 Строковое представление четырех упорядоченных <xref:System.Double> значения, соответствующие ширине слева, сверху, вправо и вниз, в следующем порядке.  Четыре значения должны разделяться запятыми; пробелы не допускаются.  Например «5,10,15,20» приведет к 5 точек поля слева от содержимого, 10 точек поля над содержимым, 15 точек поля справа от содержимого и 20 точек поля под содержимым.  
  
 *qualifiedUniformThickness*  
 Значение, описываемое *uniformThickness* следует один из следующих спецификаторов единиц: `px`, `in`.  
  
 `px` (по умолчанию) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` дюймах; 1 дюйм == 96 точек  
  
 Например `"1in"` обеспечивает единое поле шириной 1 дюйм во всех направлениях.  
  
 *qualifiedIndependentThickness*  
 Значение, описываемое *independentThickness*, за каждым независимым значением, за которым следует один из следующих спецификаторов единиц: `px`, `in`.  
  
 `px` (по умолчанию) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` дюймах; 1 дюйм == 96 точек  
  
 Например, `"1.5in,0.8in,1.5in,0.8in"`.  Спецификаторы единиц может смешанных или исключаются из одного или нескольких значений.  
  
<a name="dependencyPropertyInfo_Margin"></a>   
## <a name="dependency-property-information"></a>Сведения о свойстве зависимостей  
  
|||  
|-|-|  
|Поле идентификатора|<xref:System.Windows.Documents.Block.MarginProperty>|  
|Значение свойства метаданных `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 Следующий пример показывает, как задать <xref:System.Windows.Documents.Block.Margin%2A> атрибут <xref:System.Windows.Documents.Block> элемент (<xref:System.Windows.Documents.Paragraph>).  
  
 [!code-xaml[BlockSnippets#_Block_MarginPaddingXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_marginpaddingxaml)]  
  
 На следующем рисунке показана прорисовку предыдущего примера.  Увеличенная толщина и цвета используются для иллюстрации.  
  
 ![Снимок экрана: Например абзацы с заполнениями и границами](~/add/media/block-marginpadding.png "снимок экрана: параграфы с заполнениями и полей")  
  
 Следующий пример показывает, как задать <xref:System.Windows.Documents.Block.Margin%2A> свойства программными средствами.  
  
 [!code-csharp[BlockSnippets#_Block_MarginPadding](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_marginpadding)]
 [!code-vb[BlockSnippets#_Block_MarginPadding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_marginpadding)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.Block.Padding" />
      </Docs>
    </Member>
    <Member MemberName="MarginProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MarginProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MarginProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.MarginProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MarginProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MarginProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Идентифицирует свойство зависимостей <see cref="P:System.Windows.Documents.Block.Margin" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NextBlock">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.Block NextBlock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.Block NextBlock" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.NextBlock" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NextBlock As Block" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::Block ^ NextBlock { System::Windows::Documents::Block ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Block</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает сестринский элемент <see cref="T:System.Windows.Documents.Block" />, непосредственно следующий за текущим элементом <see cref="T:System.Windows.Documents.Block" />.</summary>
        <value>Сестринский элемент <see cref="T:System.Windows.Documents.Block" />, непосредственно следующий за текущим элементом <see cref="T:System.Windows.Documents.Block" />, или значение <see langword="null" />, если такого элемента не существует.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.Block.PreviousBlock" />
        <altmember cref="P:System.Windows.Documents.Block.SiblingBlocks" />
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Thickness" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Thickness Padding { System::Windows::Thickness get(); void set(System::Windows::Thickness value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает толщину заполнения для элемента.</summary>
        <value>Объект <see cref="T:System.Windows.Thickness" /> структуру, которая указывает применяемое значение Отбивки в аппаратно-независимых пикселях. Значение по умолчанию — единая нулевая толщина (0,0).</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.Block.Padding%2A> имеет место в буфере, внутри области содержимого элемента между содержимым элемента и его внутренней границей элемента.  Этот метод противоположен <xref:System.Windows.Documents.Block.Margin%2A>, который является буферное пространство, которое находится за пределами области содержимого элемента между краями области содержимого элемента и краями родительского элемента.  
  
<a name="xamlAttributeUsage_Padding"></a>   
## <a name="xaml-attribute-usage"></a>Использование атрибута XAML  
  
```  
<object Padding="uniformThickness"/>  
- or -  
<object Padding="independentThickness"/>  
- or -  
<object Padding="qualifiedUniformThickness"/>  
- or -  
<object Padding="qualifiedIndependentThickness"/>  
```  
  
<a name="xamlValues_Padding"></a>   
## <a name="xaml-values"></a>Значения XAML  
 *uniformThickness*  
 Строковое представление значения типа single <xref:System.Double> значение, применяемое ко всем четырем размерам толщины.  Например, значение `"10"` эквивалентное значение `"10,10,10,10"`.  Неквалифицированное значение измеряется в аппаратно-независимых пикселях. Строки не нужно явно указывать десятичного разделителя.  
  
 *independentThickness*  
 Строковое представление четырех упорядоченных <xref:System.Double> значения, соответствующие ширине слева, сверху, вправо и вниз, в следующем порядке.  Четыре значения должны разделяться запятыми; пробелы не допускаются.  Например «5,10,15,20» приведет к 5 точек поля слева от содержимого, 10 точек поля над содержимым, 15 точек поля справа от содержимого и 20 точек поля под содержимым.  
  
 *qualifiedUniformThickness*  
 Значение, описываемое *uniformThickness* следует один из следующих спецификаторов единиц: `px`, `in`.  
  
 `px` (по умолчанию) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` дюймах; 1 дюйм == 96 точек  
  
 Например `"1in"` обеспечивает единое внутреннее поле размером 1 дюйм во всех направлениях.  
  
 *qualifiedIndependentThickness*  
 Значение, описываемое *independentThickness*, за каждым независимым значением, за которым следует один из следующих спецификаторов единиц: `px`, `in`.  
  
 `px` (по умолчанию) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]  
  
 `in` дюймах; 1 дюйм == 96 точек  
  
 Например, `"1.5in,0.8in,1.5in,0.8in"`.  Спецификаторы единиц может смешанных или исключаются из одного или нескольких значений.  
  
<a name="dependencyPropertyInfo_Padding"></a>   
## <a name="dependency-property-information"></a>Сведения о свойстве зависимостей  
  
|||  
|-|-|  
|Поле идентификатора|<xref:System.Windows.Documents.Block.PaddingProperty>|  
|Значение свойства метаданных `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 Следующий пример показывает, как задать <xref:System.Windows.Documents.Block.Padding%2A> атрибут <xref:System.Windows.Documents.Block> элемент (<xref:System.Windows.Documents.Paragraph>).  
  
 [!code-xaml[BlockSnippets#_Block_MarginPaddingXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_marginpaddingxaml)]  
  
 На следующем рисунке показана прорисовку предыдущего примера.  Увеличенная толщина и цвета используются для иллюстрации.  
  
 ![Снимок экрана: Например абзацы с заполнениями и границами](~/add/media/block-marginpadding.png "снимок экрана: параграфы с заполнениями и полей")  
  
 Следующий пример показывает, как задать <xref:System.Windows.Documents.Block.Padding%2A> свойства программными средствами.  
  
 [!code-csharp[BlockSnippets#_Block_MarginPadding](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_marginpadding)]
 [!code-vb[BlockSnippets#_Block_MarginPadding](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_marginpadding)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.Block.Margin" />
      </Docs>
    </Member>
    <Member MemberName="PaddingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty PaddingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty PaddingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.PaddingProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly PaddingProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ PaddingProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Идентифицирует свойство зависимостей <see cref="P:System.Windows.Documents.Block.Padding" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreviousBlock">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.Block PreviousBlock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.Block PreviousBlock" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.PreviousBlock" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreviousBlock As Block" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::Block ^ PreviousBlock { System::Windows::Documents::Block ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Block</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает сестринский элемент <see cref="T:System.Windows.Documents.Block" />, непосредственно предшествующий текущему элементу <see cref="T:System.Windows.Documents.Block" />.</summary>
        <value>Сестринский элемент <see cref="T:System.Windows.Documents.Block" />, непосредственно предшествующий текущему элементу <see cref="T:System.Windows.Documents.Block" />, или значение <see langword="null" />, если такого элемента не существует.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.Block.NextBlock" />
        <altmember cref="P:System.Windows.Documents.Block.SiblingBlocks" />
      </Docs>
    </Member>
    <Member MemberName="SetIsHyphenationEnabled">
      <MemberSignature Language="C#" Value="public static void SetIsHyphenationEnabled (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsHyphenationEnabled(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Block.SetIsHyphenationEnabled(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsHyphenationEnabled (element As DependencyObject, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsHyphenationEnabled(System::Windows::DependencyObject ^ element, bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">Объект зависимости, для которого нужно установить значение свойства <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" />.</param>
        <param name="value">Новое значение, задаваемое для свойства.</param>
        <summary>Задает значение присоединенного свойства <see cref="P:System.Windows.Documents.Block.IsHyphenationEnabled" /> для указанного объекта зависимости.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="element" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Documents.Block.GetIsHyphenationEnabled(System.Windows.DependencyObject)" />
      </Docs>
    </Member>
    <Member MemberName="SetLineHeight">
      <MemberSignature Language="C#" Value="public static void SetLineHeight (System.Windows.DependencyObject element, double value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetLineHeight(class System.Windows.DependencyObject element, float64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Block.SetLineHeight(System.Windows.DependencyObject,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetLineHeight (element As DependencyObject, value As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetLineHeight(System::Windows::DependencyObject ^ element, double value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="element">Объект зависимости, для которого нужно установить значение свойства <see cref="P:System.Windows.Documents.Block.LineHeight" />.</param>
        <param name="value">Новое значение, задаваемое для свойства.</param>
        <summary>Задает значение присоединенного свойства <see cref="P:System.Windows.Documents.Block.LineHeight" /> для указанного объекта зависимости.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="element" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> является отрицательным значением.</exception>
        <altmember cref="M:System.Windows.Documents.Block.GetLineHeight(System.Windows.DependencyObject)" />
      </Docs>
    </Member>
    <Member MemberName="SetLineStackingStrategy">
      <MemberSignature Language="C#" Value="public static void SetLineStackingStrategy (System.Windows.DependencyObject element, System.Windows.LineStackingStrategy value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetLineStackingStrategy(class System.Windows.DependencyObject element, valuetype System.Windows.LineStackingStrategy value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Block.SetLineStackingStrategy(System.Windows.DependencyObject,System.Windows.LineStackingStrategy)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetLineStackingStrategy (element As DependencyObject, value As LineStackingStrategy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetLineStackingStrategy(System::Windows::DependencyObject ^ element, System::Windows::LineStackingStrategy value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.LineStackingStrategy" />
      </Parameters>
      <Docs>
        <param name="element">Объект зависимости, для которого нужно установить значение свойства <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" />.</param>
        <param name="value">Новое значение, задаваемое для свойства.</param>
        <summary>Задает значение присоединенного свойства <see cref="P:System.Windows.Documents.Block.LineStackingStrategy" /> для указанного объекта зависимости.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="element" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Documents.Block.GetLineStackingStrategy(System.Windows.DependencyObject)" />
      </Docs>
    </Member>
    <Member MemberName="SetTextAlignment">
      <MemberSignature Language="C#" Value="public static void SetTextAlignment (System.Windows.DependencyObject element, System.Windows.TextAlignment value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTextAlignment(class System.Windows.DependencyObject element, valuetype System.Windows.TextAlignment value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.Block.SetTextAlignment(System.Windows.DependencyObject,System.Windows.TextAlignment)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTextAlignment (element As DependencyObject, value As TextAlignment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTextAlignment(System::Windows::DependencyObject ^ element, System::Windows::TextAlignment value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.TextAlignment" />
      </Parameters>
      <Docs>
        <param name="element">Объект зависимости, для которого нужно установить значение свойства <see cref="P:System.Windows.Documents.Block.TextAlignment" />.</param>
        <param name="value">Новое значение, задаваемое для свойства.</param>
        <summary>Задает значение присоединенного свойства <see cref="P:System.Windows.Documents.Block.TextAlignment" /> для указанного объекта зависимости.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <xref:System.Windows.Documents.Block.GetTextAlignment%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="element" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="SiblingBlocks">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.BlockCollection SiblingBlocks { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.BlockCollection SiblingBlocks" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.SiblingBlocks" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SiblingBlocks As BlockCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::BlockCollection ^ SiblingBlocks { System::Windows::Documents::BlockCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.BlockCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает коллекцию элементов <see cref="T:System.Windows.Documents.Block" />, которые являются сестринскими по отношению к текущему элементу <see cref="T:System.Windows.Documents.Block" />.</summary>
        <value>Коллекция <see cref="T:System.Windows.Documents.BlockCollection" /> дочерних элементов <see cref="T:System.Windows.Documents.Block" />, непосредственно размещенных в родительском элементе текущего элемента <see cref="T:System.Windows.Documents.Block" />, или значение <see langword="null" />, если текущий элемент <see cref="T:System.Windows.Documents.Block" /> не имеет родительского элемента.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Documents.BlockCollection> Это свойство включает <xref:System.Windows.Documents.Block> элемент, через который доступ к коллекции; то есть, которому принадлежит это свойство считается собственным сестринским элементом для создания коллекции элементов того же уровня.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.Block.NextBlock" />
        <altmember cref="P:System.Windows.Documents.Block.PreviousBlock" />
      </Docs>
    </Member>
    <Member MemberName="TextAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.TextAlignment TextAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.TextAlignment TextAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.Block.TextAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property TextAlignment As TextAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TextAlignment TextAlignment { System::Windows::TextAlignment get(); void set(System::Windows::TextAlignment value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.TextAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает способ горизонтального выравнивания текстового содержимого.</summary>
        <value>Одно из значений <see cref="T:System.Windows.TextAlignment" />, задающее необходимое выравнивание. Значение по умолчанию: <see cref="F:System.Windows.TextAlignment.Left" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
<a name="dependencyPropertyInfo_TextAlignment"></a>   
## <a name="dependency-property-information"></a>Сведения о свойстве зависимостей  
  
|||  
|-|-|  
|Поле идентификатора|<xref:System.Windows.Documents.Block.TextAlignmentProperty>|  
|Значение свойства метаданных `true`|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## Examples  
 Следующий пример показывает, как задать <xref:System.Windows.Documents.Block.TextAlignment%2A> атрибут <xref:System.Windows.Documents.Block> элемента.  
  
 [!code-xaml[BlockSnippets#_Block_TextAlignmentXAML](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml#_block_textalignmentxaml)]  
  
 На следующем рисунке показана прорисовку предыдущего примера с <xref:System.Windows.TextAlignment.Left> выравнивание текста (по умолчанию).  
  
 ![Снимок экрана: Значение свойства TextAlign для Left](~/add/media/flowdoc-textalign-left.png "снимок экрана: значение свойства TextAlign для Left")  
  
 На следующем рисунке показана прорисовку тот же пример с <xref:System.Windows.TextAlignment.Right> выравнивание текста.  
  
 ![Снимок экрана: Значение TextAlign для Right](~/add/media/flowdoc-textalign-right.png "снимок экрана: значение TextAlign для Right")  
  
 На следующем рисунке показана прорисовку тот же пример с <xref:System.Windows.TextAlignment.Center> выравнивание текста.  
  
 ![Снимок экрана: Значение свойства TextAlign для Center](~/add/media/flowdoc-textalign-center.png "снимок экрана: значение свойства TextAlign для Center")  
  
 Следующий пример показывает, как задать <xref:System.Windows.Documents.Block.TextAlignment%2A> свойства программными средствами.  
  
 [!code-csharp[BlockSnippets#_Block_TextAlignment](~/samples/snippets/csharp/VS_Snippets_Wpf/BlockSnippets/CSharp/Window1.xaml.cs#_block_textalignment)]
 [!code-vb[BlockSnippets#_Block_TextAlignment](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BlockSnippets/visualbasic/window1.xaml.vb#_block_textalignment)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextAlignmentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TextAlignmentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TextAlignmentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Documents.Block.TextAlignmentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TextAlignmentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TextAlignmentProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Идентифицирует свойство зависимостей <see cref="P:System.Windows.Documents.Block.TextAlignment" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>