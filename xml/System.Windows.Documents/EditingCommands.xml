<Type Name="EditingCommands" FullName="System.Windows.Documents.EditingCommands">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="84b5572cf9ba0ae76ee1c5c3bb7375f8ce499c04" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37521578" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class EditingCommands" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EditingCommands extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.EditingCommands" />
  <TypeSignature Language="VB.NET" Value="Public Class EditingCommands" />
  <TypeSignature Language="C++ CLI" Value="public ref class EditingCommands abstract sealed" />
  <TypeSignature Language="F#" Value="type EditingCommands = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c9be9-101">Предоставляет стандартный набор команд изменения.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c9be9-101">Provides a standard set of editing related commands.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-102">В следующей таблице показаны команды редактирования и связанного по умолчанию ключевых жестов (с именами ключей из <xref:System.Windows.Input.Key> и <xref:System.Windows.Input.ModifierKeys> перечисления).</span><span class="sxs-lookup"><span data-stu-id="c9be9-102">The following table shows the editing commands and the associated default key gestures (with key names from the <xref:System.Windows.Input.Key> and <xref:System.Windows.Input.ModifierKeys> enumerations).</span></span>  
  
|<span data-ttu-id="c9be9-103">Команда изменения</span><span class="sxs-lookup"><span data-stu-id="c9be9-103">Editing command</span></span>|<span data-ttu-id="c9be9-104">Ключевой жест по умолчанию</span><span class="sxs-lookup"><span data-stu-id="c9be9-104">Default key gesture</span></span>|  
|---------------------|-------------------------|  
|<xref:System.Windows.Documents.EditingCommands.AlignCenter%2A>|`Ctrl`+`E`|  
|<xref:System.Windows.Documents.EditingCommands.AlignJustify%2A>|`Ctrl`+`J`|  
|<xref:System.Windows.Documents.EditingCommands.AlignLeft%2A>|`Ctrl`+`L`|  
|<xref:System.Windows.Documents.EditingCommands.AlignRight%2A>|`Ctrl`+`R`|  
|<xref:System.Windows.Documents.EditingCommands.Backspace%2A>|`Backspace`|  
|<xref:System.Windows.Documents.EditingCommands.CorrectSpellingError%2A>|<span data-ttu-id="c9be9-105">Нет знак клавиши по умолчанию</span><span class="sxs-lookup"><span data-stu-id="c9be9-105">no default key gesture</span></span>|  
|<xref:System.Windows.Documents.EditingCommands.DecreaseFontSize%2A>|`Ctrl`+`OemOpenBrackets`|  
|<xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A>|`Ctrl`+`Shift`+`T`|  
|<xref:System.Windows.Documents.EditingCommands.Delete%2A>|`Delete`|  
|<xref:System.Windows.Documents.EditingCommands.DeleteNextWord%2A>|`Ctrl`+`Delete`|  
|<xref:System.Windows.Documents.EditingCommands.DeletePreviousWord%2A>|`Ctrl`+`Backspace`|  
|<xref:System.Windows.Documents.EditingCommands.EnterLineBreak%2A>|`Shift`+`Enter`|  
|<xref:System.Windows.Documents.EditingCommands.EnterParagraphBreak%2A>|`Enter`|  
|<xref:System.Windows.Documents.EditingCommands.IgnoreSpellingError%2A>|<span data-ttu-id="c9be9-106">Нет знак клавиши по умолчанию</span><span class="sxs-lookup"><span data-stu-id="c9be9-106">no default key gesture</span></span>|  
|<xref:System.Windows.Documents.EditingCommands.IncreaseFontSize%2A>|`Ctrl`+`OemCloseBrackets`|  
|<xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A>|`Ctrl`+`T`|  
|<xref:System.Windows.Documents.EditingCommands.MoveDownByLine%2A>|`Down`|  
|<xref:System.Windows.Documents.EditingCommands.MoveDownByPage%2A>|`PageDown`|  
|<xref:System.Windows.Documents.EditingCommands.MoveDownByParagraph%2A>|`Ctrl`+`Down`|  
|<xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A>|`Left`|  
|<xref:System.Windows.Documents.EditingCommands.MoveLeftByWord%2A>|`Ctrl`+`Left`|  
|<xref:System.Windows.Documents.EditingCommands.MoveRightByCharacter%2A>|`Right`|  
|<xref:System.Windows.Documents.EditingCommands.MoveRightByWord%2A>|`Ctrl`+`Right`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A>|`Ctrl`+`End`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A>|`Ctrl`+`Home`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToLineEnd%2A>|`End`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToLineStart%2A>|`Home`|  
|<xref:System.Windows.Documents.EditingCommands.MoveUpByLine%2A>|`Up`|  
|<xref:System.Windows.Documents.EditingCommands.MoveUpByPage%2A>|`PageUp`|  
|<xref:System.Windows.Documents.EditingCommands.MoveUpByParagraph%2A>|`Ctrl`+`Up`|  
|<xref:System.Windows.Documents.EditingCommands.SelectDownByLine%2A>|`Shift`+`Down`|  
|<xref:System.Windows.Documents.EditingCommands.SelectDownByPage%2A>|`Shift`+`PageDown`|  
|<xref:System.Windows.Documents.EditingCommands.SelectDownByParagraph%2A>|`Ctrl`+`Shift`+`Down`|  
|<xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A>|`Shift`+`Left`|  
|<xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A>|`Ctrl`+`Shift`+`Left`|  
|<xref:System.Windows.Documents.EditingCommands.SelectRightByCharacter%2A>|`Shift`+`Right`|  
|<xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A>|`Ctrl`+`Shift`+`Right`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToDocumentEnd%2A>|`Ctrl`+`Shift`+`End`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToDocumentStart%2A>|`Ctrl`+`Shift`+`Home`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToLineEnd%2A>|`Shift`+`End`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToLineStart%2A>|`Shift`+`Home`|  
|<xref:System.Windows.Documents.EditingCommands.SelectUpByLine%2A>|`Shift`+`Up`|  
|<xref:System.Windows.Documents.EditingCommands.SelectUpByPage%2A>|`Shift`+`PageUp`|  
|<xref:System.Windows.Documents.EditingCommands.SelectUpByParagraph%2A>|`Ctrl`+`Shift`+`Up`|  
|<xref:System.Windows.Documents.EditingCommands.TabBackward%2A>|`Shift`+`Tab`|  
|<xref:System.Windows.Documents.EditingCommands.TabForward%2A>|`Tab`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleBold%2A>|`Ctrl`+`B`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleBullets%2A>|`Ctrl`+`Shift`+`L`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleInsert%2A>|`Insert`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleItalic%2A>|`Ctrl`+`I`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleNumbering%2A>|`Ctrl`+`Shift`+`N`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleSubscript%2A>|`Ctrl`+`OemPlus`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleSuperscript%2A>|`Ctrl`+`Shift+OemPlus`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleUnderline%2A>|`Ctrl`+`U`|  
  
 <span data-ttu-id="c9be9-107">Команды перемещения курсора и расширения команды выбора, совместно используют общий набор жестов ключа по умолчанию, общие разницей, добавление <xref:System.Windows.Input.ModifierKeys.Shift> клавишу, чтобы отличать команды выбора из команды перемещения курсора.</span><span class="sxs-lookup"><span data-stu-id="c9be9-107">Caret movement commands and selection expanding commands share a common set of default key gestures, the general difference being the addition of the <xref:System.Windows.Input.ModifierKeys.Shift> key to differentiate selection commands from caret movement commands.</span></span>  <span data-ttu-id="c9be9-108">Например <xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A> команда имеет ключевой жест по умолчанию из <xref:System.Windows.Input.Key.Left>и соответствующих <xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A> команда имеет ключевой жест по умолчанию из <xref:System.Windows.Input.ModifierKeys.Shift> + <xref:System.Windows.Input.Key.Left>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-108">For example, the <xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A> command has a default key gesture of <xref:System.Windows.Input.Key.Left>, and the corresponding <xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A> command has a default key gesture of <xref:System.Windows.Input.ModifierKeys.Shift>+<xref:System.Windows.Input.Key.Left>.</span></span>  
  
 <span data-ttu-id="c9be9-109">Вообще говоря, определения команд, предоставляемых <xref:System.Windows.Documents.EditingCommands> класс не следует использовать параметры команды ( `parameter` ожидаемый параметр <xref:System.Windows.Input.ICommand.Execute%2A> метод).</span><span class="sxs-lookup"><span data-stu-id="c9be9-109">In general, the command definitions provided by the <xref:System.Windows.Documents.EditingCommands> class do not make use of command parameters (the `parameter` parameter expected by the <xref:System.Windows.Input.ICommand.Execute%2A> method).</span></span>  
  
 <span data-ttu-id="c9be9-110">Дополнительные сведения о командах и их выполнении см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="c9be9-110">For more information on commands and commanding, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-111">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-111">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-112">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-112">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-113">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-113">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-114">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-114">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-115">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-115">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-116">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-116">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-117">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-117">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-118">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-118">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.MediaCommands" />
    <altmember cref="T:System.Windows.Input.ApplicationCommands" />
    <altmember cref="T:System.Windows.Input.ComponentCommands" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.RoutedUICommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.CommandManager" />
    <altmember cref="T:System.Windows.Input.NavigationCommands" />
  </Docs>
  <Members>
    <Member MemberName="AlignCenter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignCenter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignCenter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignCenter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignCenter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignCenter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignCenter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignCenter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-119">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />, которая запрашивает, чтобы текущий абзац или выборка абзацев выравнивались по центру.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-119">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignCenter" /> command, which requests that the current paragraph or a selection of paragraphs be centered.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-120">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-120">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-121">Знаком клавиши по умолчанию для этой команды является <see langword="Ctrl" /> + <see langword="E" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-121">The default key gesture for this command is <see langword="Ctrl" />+<see langword="E" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-122">Эта команда работает в <xref:System.Windows.Documents.Paragraph> уровень.</span><span class="sxs-lookup"><span data-stu-id="c9be9-122">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="c9be9-123">Если эта команда вызывается по части выборки содержимого в абзац (включая пустое выделение, если курсор находится в пределах абзаца), запрошенное действие применяется ко всему абзацу.</span><span class="sxs-lookup"><span data-stu-id="c9be9-123">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="c9be9-124">Если эта команда вызывается по выборке, которая охватывает несколько абзацев, эффект применяется ко всему содержимому каждого абзаца, который участвует в выделении.</span><span class="sxs-lookup"><span data-stu-id="c9be9-124">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="c9be9-125">Следующий рисунок является примером содержимого по центру.</span><span class="sxs-lookup"><span data-stu-id="c9be9-125">The following figure shows an example of centered content.</span></span>  
  
 <span data-ttu-id="c9be9-126">![Снимок экрана: Значение свойства TextAlign для Center](~/add/media/flowdoc-textalign-center.png "снимок экрана: значение свойства TextAlign для Center")</span><span class="sxs-lookup"><span data-stu-id="c9be9-126">![Screenshot: TextAlign property value of Center](~/add/media/flowdoc-textalign-center.png "Screenshot: TextAlign property value of Center")</span></span>  
  
 <span data-ttu-id="c9be9-127">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-127">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignCenter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-128">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-128">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignCenter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-129">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-129">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-130">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-130">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-131">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-131">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-132">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-132">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-133">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-133">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-134">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-134">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-135">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-135">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-136">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-136">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignLeft" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="AlignJustify">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignJustify { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignJustify" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignJustify" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignJustify As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignJustify { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignJustify : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignJustify" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-137">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />, которая запрашивает выравнивание данного абзаца или выборки абзацев.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-137">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignJustify" /> command, which requests that the current paragraph or a selection of paragraphs be justified.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-138">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-138">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-139">Знаком клавиши по умолчанию для этой команды является <see langword="Ctrl" /> + <see langword="J" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-139">The default key gesture for this command is <see langword="Ctrl" />+<see langword="J" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-140">Эта команда работает в <xref:System.Windows.Documents.Paragraph> уровень.</span><span class="sxs-lookup"><span data-stu-id="c9be9-140">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="c9be9-141">Если эта команда вызывается по части выборки содержимого в абзац (включая пустое выделение, если курсор находится в пределах абзаца), запрошенное действие применяется ко всему абзацу.</span><span class="sxs-lookup"><span data-stu-id="c9be9-141">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="c9be9-142">Если эта команда вызывается по выборке, которая охватывает несколько абзацев, эффект применяется ко всем абзацам в выделении.</span><span class="sxs-lookup"><span data-stu-id="c9be9-142">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to all the paragraphs in the selection.</span></span>  
  
 <span data-ttu-id="c9be9-143">Когда содержимое выровнено, интервал по горизонтали в пределах каждой строки содержимого корректируются таким образом, чтобы выровненные строки были равны или приблизительно равной ширины.</span><span class="sxs-lookup"><span data-stu-id="c9be9-143">When content is justified, the horizontal spacing within each line of content is adjusted so that the justified lines are of equal or near-equal width.</span></span>  <span data-ttu-id="c9be9-144">Содержимое обычно выравнивается, чтобы создать сглаживания на краях содержимого.</span><span class="sxs-lookup"><span data-stu-id="c9be9-144">Content is typically justified to create smooth edges on the sides of the content.</span></span>  
  
 <span data-ttu-id="c9be9-145">Так как это часто короче, чем остальные, последняя строка в абзаце может остаться не выровненной после вызова этой команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-145">Because it is often shorter than the rest, the last line in a paragraph may remain unjustified after this command is invoked.</span></span>  
  
 <span data-ttu-id="c9be9-146">На следующем рисунке показана выровнено содержимого (по левому краю).</span><span class="sxs-lookup"><span data-stu-id="c9be9-146">The following figure shows unjustified (left-aligned) content.</span></span>  
  
 <span data-ttu-id="c9be9-147">![Снимок экрана: Содержимое не выровнено](~/add/media/content-unjustified.png "снимок экрана: содержимое не выровнено")</span><span class="sxs-lookup"><span data-stu-id="c9be9-147">![Screenshot: Content is unjustified](~/add/media/content-unjustified.png "Screenshot: Content is unjustified")</span></span>  
  
 <span data-ttu-id="c9be9-148">Следующий рисунок показывает то же содержимое после выравнивания.</span><span class="sxs-lookup"><span data-stu-id="c9be9-148">The following figure shows the same content after it has been justified.</span></span>  
  
 <span data-ttu-id="c9be9-149">![Снимок экрана содержимого по ширине текста](~/add/media/content-justified.png "снимок содержимого по ширине текста")</span><span class="sxs-lookup"><span data-stu-id="c9be9-149">![Screenshot of content justified text](~/add/media/content-justified.png "Screenshot of content justified text")</span></span>  
  
 <span data-ttu-id="c9be9-150">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-150">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-151">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-151">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignJustify"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-152">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-152">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignJustify"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-153">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-153">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-154">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-154">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-155">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-155">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-156">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-156">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-157">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-157">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-158">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-158">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-159">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-159">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-160">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-160">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignLeft" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="AlignLeft">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignLeft" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignLeft As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignLeft { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignLeft : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-161">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.AlignLeft" />, которая запрашивает выравнивание по левому краю выборки содержимого.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-161">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignLeft" /> command, which requests that a selection of content be aligned left.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-162">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-162">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-163">Знаком клавиши по умолчанию для этой команды является <see langword="Ctrl" /> + <see langword="L" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-163">The default key gesture for this command is <see langword="Ctrl" />+<see langword="L" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-164">Эта команда работает в <xref:System.Windows.Documents.Paragraph> уровень.</span><span class="sxs-lookup"><span data-stu-id="c9be9-164">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="c9be9-165">Если эта команда вызывается по части выборки содержимого в абзац (включая пустое выделение, если курсор находится в пределах абзаца), запрошенное действие применяется ко всему абзацу.</span><span class="sxs-lookup"><span data-stu-id="c9be9-165">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="c9be9-166">Если эта команда вызывается по выборке, которая охватывает несколько абзацев, эффект применяется ко всему содержимому каждого абзаца, который участвует в выделении.</span><span class="sxs-lookup"><span data-stu-id="c9be9-166">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="c9be9-167">Следующий рисунок показывает пример содержимого с выравниванием по левому краю.</span><span class="sxs-lookup"><span data-stu-id="c9be9-167">The following figure shows an example of left-aligned content.</span></span>  
  
 <span data-ttu-id="c9be9-168">![Снимок экрана: Значение свойства TextAlign для Left](~/add/media/flowdoc-textalign-left.png "снимок экрана: значение свойства TextAlign для Left")</span><span class="sxs-lookup"><span data-stu-id="c9be9-168">![Screenshot: TextAlign property value of Left](~/add/media/flowdoc-textalign-left.png "Screenshot: TextAlign property value of Left")</span></span>  
  
 <span data-ttu-id="c9be9-169">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-169">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-170">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-170">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignLeft"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-171">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-171">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignLeft"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-172">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-172">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-173">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-173">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-174">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-174">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-175">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-175">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-176">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-176">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-177">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-177">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-178">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-178">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-179">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-179">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="AlignRight">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignRight" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignRight As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignRight { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignRight : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-180">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.AlignRight" />, которая запрашивает выравнивание по правому краю выборки содержимого.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-180">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignRight" /> command, which requests that a selection of content be aligned right.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-181">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-181">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-182">Знаком клавиши по умолчанию для этой команды является <see langword="Ctrl" /> + <see langword="R" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-182">The default key gesture for this command is <see langword="Ctrl" />+<see langword="R" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-183">Эта команда работает в <xref:System.Windows.Documents.Paragraph> уровень.</span><span class="sxs-lookup"><span data-stu-id="c9be9-183">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="c9be9-184">Если эта команда вызывается по части выборки содержимого в абзац (включая пустое выделение, если курсор находится в пределах абзаца), запрошенное действие применяется ко всему абзацу.</span><span class="sxs-lookup"><span data-stu-id="c9be9-184">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="c9be9-185">Если эта команда вызывается по выборке, которая охватывает несколько абзацев, эффект применяется ко всему содержимому каждого абзаца, который участвует в выделении.</span><span class="sxs-lookup"><span data-stu-id="c9be9-185">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="c9be9-186">Следующий рисунок является примером содержимое по правому краю.</span><span class="sxs-lookup"><span data-stu-id="c9be9-186">The following figure shows an example of right-aligned content.</span></span>  
  
 <span data-ttu-id="c9be9-187">![Снимок экрана: Значение TextAlign для Right](~/add/media/flowdoc-textalign-right.png "снимок экрана: значение TextAlign для Right")</span><span class="sxs-lookup"><span data-stu-id="c9be9-187">![Screenshot: TextAlign value of Right](~/add/media/flowdoc-textalign-right.png "Screenshot: TextAlign value of Right")</span></span>  
  
 <span data-ttu-id="c9be9-188">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-188">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-189">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-189">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignRight"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-190">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-190">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignRight"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-191">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-191">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-192">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-192">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-193">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-193">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-194">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-194">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-195">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-195">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-196">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-196">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-197">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-197">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-198">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-198">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="Backspace">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Backspace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Backspace" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.Backspace" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Backspace As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Backspace { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Backspace : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.Backspace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-199">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.Backspace" />, которая запрашивает нажатие клавиши "backspace" в текущей позиции или в отношении текущей выборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-199">Represents the <see cref="P:System.Windows.Documents.EditingCommands.Backspace" /> command, which requests that a backspace be entered at the current position or over the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-200">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-200">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-201">Знаком клавиши по умолчанию для данной команды является <see langword="Backspace" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-201">The default key gesture for this command is <see langword="Backspace" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-202">При вызове в пустой выборке, эта команда удаляет символ или разделитель абзаца прямо перед курсором.</span><span class="sxs-lookup"><span data-stu-id="c9be9-202">When invoked on an empty selection, this command deletes the character or paragraph separator just before the caret.</span></span> <span data-ttu-id="c9be9-203">При вызове для выделенной области пустым, эта команда удаляет выделение.</span><span class="sxs-lookup"><span data-stu-id="c9be9-203">When invoked on a non-empty selection, this command deletes the selection.</span></span>  
  
 <span data-ttu-id="c9be9-204">Эта команда сохраняет любое форматирование удаленной выборки, для содержимого, вставленного в одном месте после вызова этой команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-204">This command retains any formatting from the deleted selection for content immediately inserted at the same location after this command is invoked.</span></span>  <span data-ttu-id="c9be9-205">Сравните с <xref:System.Windows.Documents.EditingCommands.Delete%2A> команду, которая не сохраняет предыдущих форматирование.</span><span class="sxs-lookup"><span data-stu-id="c9be9-205">Contrast with the <xref:System.Windows.Documents.EditingCommands.Delete%2A> command, which does not retain previous formatting.</span></span>  
  
 <span data-ttu-id="c9be9-206">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-206">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-207">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-207">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_Backspace"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-208">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-208">XAML Attribute Usage</span></span>  
  
```  
<object property="Backspace"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-209">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-209">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-210">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-210">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-211">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-211">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-212">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-212">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-213">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-213">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-214">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-214">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-215">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-215">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-216">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-216">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CorrectSpellingError">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand CorrectSpellingError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand CorrectSpellingError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CorrectSpellingError As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ CorrectSpellingError { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CorrectSpellingError : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.CorrectSpellingError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-217">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" />, которая запрашивает исправление любой орфографической ошибки в слове в текущей позиции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-217">Represents the <see cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" /> command, which requests that any misspelled word at the current position be corrected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-218">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-218">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-219">Для данной команды отсутствует знак клавиши по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-219">This command has no default key gesture.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-220">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-220">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_CorrectSpellingError"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-221">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-221">XAML Attribute Usage</span></span>  
  
```  
<object property="CorrectSpellingError"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" />
      </Docs>
    </Member>
    <Member MemberName="DecreaseFontSize">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DecreaseFontSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DecreaseFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DecreaseFontSize As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DecreaseFontSize { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DecreaseFontSize : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DecreaseFontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-222">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" />, которая запрашивает уменьшение размера шрифта для текущей выборки на 1 пкт.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-222">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" /> command, which requests that the font size for the current selection be decreased by 1 point.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-223">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-223">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-224">Знаком клавиши по умолчанию для этой команды является <see langword="Ctrl" /> + <see langword="OemOpenBrackets" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-224">The default key gesture for this command is <see langword="Ctrl" />+<see langword="OemOpenBrackets" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-225">Если эта команда вызывается пустое выделение, если курсор находится внутри слова, выборка автоматически расширяется для применения команды ко всему слову.</span><span class="sxs-lookup"><span data-stu-id="c9be9-225">If this command is invoked on an empty selection where the caret is within a word, the selection is automatically expanded to apply the command to the entire word.</span></span>  
  
 <span data-ttu-id="c9be9-226">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-226">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-227">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-227">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_DecreaseFontSize"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-228">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-228">XAML Attribute Usage</span></span>  
  
```  
<object property="DecreaseFontSize"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-229">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-229">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-230">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-230">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-231">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-231">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-232">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-232">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-233">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-233">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-234">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-234">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-235">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-235">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-236">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-236">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" />
      </Docs>
    </Member>
    <Member MemberName="DecreaseIndentation">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DecreaseIndentation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DecreaseIndentation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DecreaseIndentation As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DecreaseIndentation { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DecreaseIndentation : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DecreaseIndentation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-237">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" />, которая запрашивает уменьшение отступа для текущего абзаца на одну позицию табуляции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-237">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" /> command, which requests that indentation for the current paragraph be decreased by one tab stop.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-238">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-238">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-239">Знаком клавиши по умолчанию для этой команды является <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-239">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="T" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-240">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-240">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-241">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-241">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c9be9-242">Эта команда не влияет на элемент текста Если <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> текстового элемента свойству `true`.</span><span class="sxs-lookup"><span data-stu-id="c9be9-242">This command has no effect on a text element unless the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property of the text element is set to `true`.</span></span>  
  
<a name="xamlAttributeUsage_DecreaseIndentation"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-243">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-243">XAML Attribute Usage</span></span>  
  
```  
<object property="DecreaseIndentation"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-244">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-244">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-245">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-245">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-246">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-246">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-247">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-247">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-248">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-248">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-249">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-249">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-250">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-250">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-251">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-251">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Delete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Delete" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Delete As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Delete { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Delete : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.Delete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-252">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.Delete" />, которая запрашивает удаление текущей выборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-252">Represents the <see cref="P:System.Windows.Documents.EditingCommands.Delete" /> command, which requests that the current selection be deleted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-253">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-253">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-254">Знаком клавиши по умолчанию для данной команды является <see langword="Delete" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-254">The default key gesture for this command is <see langword="Delete" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-255">Эта команда отменяет любое форматирование удаленной выборки.</span><span class="sxs-lookup"><span data-stu-id="c9be9-255">This command discards any formatting from the deleted selection.</span></span>  <span data-ttu-id="c9be9-256">Сравните с <xref:System.Windows.Documents.EditingCommands.Backspace%2A> команду, которая сохраняет любое форматирование из удаленной выборки, для содержимого, вставленного в одном месте после вызова этой команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-256">Contrast with the <xref:System.Windows.Documents.EditingCommands.Backspace%2A> command, which retains any formatting from the deleted selection for content immediately inserted at the same location after this command is invoked.</span></span>  
  
 <span data-ttu-id="c9be9-257">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-257">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-258">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-258">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_Delete"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-259">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-259">XAML Attribute Usage</span></span>  
  
```  
<object property="Delete"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-260">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-260">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-261">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-261">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-262">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-262">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-263">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-263">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-264">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-264">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-265">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-265">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-266">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-266">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-267">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-267">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteNextWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DeleteNextWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DeleteNextWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DeleteNextWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DeleteNextWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DeleteNextWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteNextWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DeleteNextWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-268">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" />, которая запрашивает удаление следующего слова (относительно текущей позиции).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-268">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" /> command, which requests that the next word (relative to a current position) be deleted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-269">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-269">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-270">Знаком клавиши по умолчанию для этой команды является <see langword="Ctrl" /> + <see langword="Delete" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-270">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Delete" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-271">Если курсор находится внутри слова, оставшаяся часть слова между текущей позицией и концом слова удаляется.</span><span class="sxs-lookup"><span data-stu-id="c9be9-271">If the caret is within a word, the remainder of the word between the current position and the end of the word is deleted.</span></span>  
  
 <span data-ttu-id="c9be9-272">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-272">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-273">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-273">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_DeleteNextWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-274">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-274">XAML Attribute Usage</span></span>  
  
```  
<object property="DeleteNextWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-275">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-275">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-276">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-276">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-277">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-277">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-278">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-278">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-279">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-279">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-280">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-280">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-281">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-281">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-282">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-282">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="DeletePreviousWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DeletePreviousWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DeletePreviousWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DeletePreviousWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DeletePreviousWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeletePreviousWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DeletePreviousWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-283">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" />, которая запрашивает удаление предыдущего слова (относительно текущей позиции).</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-283">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" /> command, which requests that the previous word (relative to a current position) be deleted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-284">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-284">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-285">Знаком клавиши по умолчанию для этой команды является <see langword="Ctrl" /> + <see langword="Backspace" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-285">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Backspace" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-286">Если курсор находится внутри слова, оставшаяся часть слова между текущей позиции и началом слова удаляется.</span><span class="sxs-lookup"><span data-stu-id="c9be9-286">If the caret is within a word, the remainder of the word between the current position and the beginning of the word is deleted.</span></span>  
  
 <span data-ttu-id="c9be9-287">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-287">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-288">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-288">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_DeletePreviousWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-289">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-289">XAML Attribute Usage</span></span>  
  
```  
<object property="DeletePreviousWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-290">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-290">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-291">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-291">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-292">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-292">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-293">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-293">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-294">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-294">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-295">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-295">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-296">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-296">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-297">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-297">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="EnterLineBreak">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand EnterLineBreak { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand EnterLineBreak" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.EnterLineBreak" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnterLineBreak As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ EnterLineBreak { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnterLineBreak : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.EnterLineBreak" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-298">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" />, которая запрашивает вставку разрыва строки в текущей позиции или в отношении текущей выборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-298">Represents the <see cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" /> command, which requests that a line break be inserted at the current position or over the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-299">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-299">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-300">Знаком клавиши по умолчанию для этой команды является <see langword="Shift" /> + <see langword="Enter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-300">The default key gesture for this command is <see langword="Shift" />+<see langword="Enter" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-301">Для редакторов, которые поддерживают поток содержимого, такие как <xref:System.Windows.Controls.RichTextBox>, этой команды <xref:System.Windows.Documents.LineBreak> элемента для вставки в текущей позиции.</span><span class="sxs-lookup"><span data-stu-id="c9be9-301">For editors that support flow content, such as <xref:System.Windows.Controls.RichTextBox>, this command causes a <xref:System.Windows.Documents.LineBreak> element to be inserted at the current position.</span></span>  
  
 <span data-ttu-id="c9be9-302">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-302">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-303">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox> и <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-303">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_EnterLineBreak"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-304">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-304">XAML Attribute Usage</span></span>  
  
```  
<object property="EnterLineBreak"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-305">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-305">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-306">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-306">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-307">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-307">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-308">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-308">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-309">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-309">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-310">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-310">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-311">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-311">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-312">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-312">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" />
      </Docs>
    </Member>
    <Member MemberName="EnterParagraphBreak">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand EnterParagraphBreak { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand EnterParagraphBreak" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnterParagraphBreak As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ EnterParagraphBreak { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnterParagraphBreak : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.EnterParagraphBreak" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-313">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" />, которая запрашивает вставку разрыва абзаца в текущей позиции или в отношении текущей выборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-313">Represents the <see cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" /> command, which requests that a paragraph break be inserted at the current position or over the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-314">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-314">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-315">Знаком клавиши по умолчанию для данной команды является <see langword="Enter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-315">The default key gesture for this command is <see langword="Enter" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-316">Эта команда является эквивалентом пользователю, нажав клавишу ВВОД.</span><span class="sxs-lookup"><span data-stu-id="c9be9-316">This command is equivalent to the user pressing the ENTER key.</span></span>  
  
 <span data-ttu-id="c9be9-317">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-317">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-318">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox> и <xref:System.Windows.Controls.TextBox> (когда <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> свойство `true`).</span><span class="sxs-lookup"><span data-stu-id="c9be9-318">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox> (when the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> property is `true`).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c9be9-319">Эта команда не влияет на элемент текста Если <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> текстового элемента свойству `true`.</span><span class="sxs-lookup"><span data-stu-id="c9be9-319">This command has no effect on a text element unless the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> property of the text element is set to `true`.</span></span>  
  
<a name="xamlAttributeUsage_EnterParagraphBreak"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-320">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-320">XAML Attribute Usage</span></span>  
  
```  
<object property="EnterParagraphBreak"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-321">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-321">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-322">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-322">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-323">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-323">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-324">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-324">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-325">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-325">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-326">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-326">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-327">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-327">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-328">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-328">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreSpellingError">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IgnoreSpellingError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IgnoreSpellingError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IgnoreSpellingError As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ IgnoreSpellingError { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreSpellingError : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.IgnoreSpellingError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-329">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" />, которая запрашивает игнорирование любых орфографических ошибок в словах в текущей позиции или в текущей выборке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-329">Represents the <see cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" /> command, which requests that any instances of misspelled words at the current position or in the current selection be ignored.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-330">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-330">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-331">Для данной команды отсутствует знак клавиши по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-331">This command has no default key gesture.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-332">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-332">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_IgnoreSpellingError"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-333">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-333">XAML Attribute Usage</span></span>  
  
```  
<object property="IgnoreSpellingError"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" />
      </Docs>
    </Member>
    <Member MemberName="IncreaseFontSize">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IncreaseFontSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IncreaseFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IncreaseFontSize As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ IncreaseFontSize { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IncreaseFontSize : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.IncreaseFontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-334">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" />, которая запрашивает увеличения размера шрифта для текущей выборки на 1 пкт.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-334">Represents the <see cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" /> command, which requests that the font size for the current selection be increased by 1 point.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-335">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-335">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-336">Знаком клавиши по умолчанию для этой команды является <see langword="Ctrl" /> + <see langword="OemCloseBrackets" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-336">The default key gesture for this command is <see langword="Ctrl" />+<see langword="OemCloseBrackets" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-337">Если эта команда вызывается пустое выделение, если курсор находится внутри слова, выделение расширяется для применения команды ко всему слову.</span><span class="sxs-lookup"><span data-stu-id="c9be9-337">If this command is invoked on an empty selection where the caret is within a word, the selection is expanded to apply the command to the entire word.</span></span>  
  
 <span data-ttu-id="c9be9-338">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-338">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-339">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-339">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_IncreaseFontSize"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-340">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-340">XAML Attribute Usage</span></span>  
  
```  
<object property="IncreaseFontSize"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-341">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-341">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-342">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-342">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-343">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-343">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-344">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-344">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-345">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-345">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-346">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-346">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-347">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-347">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-348">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-348">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" />
      </Docs>
    </Member>
    <Member MemberName="IncreaseIndentation">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IncreaseIndentation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IncreaseIndentation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IncreaseIndentation As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ IncreaseIndentation { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IncreaseIndentation : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.IncreaseIndentation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-349">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" />, которая запрашивает увеличение отступа для текущего абзаца на одну позицию табуляции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-349">Represents the <see cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" /> command, which requests that indentation for the current paragraph be increased by one tab stop.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-350">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-350">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-351">Знаком клавиши по умолчанию для этой команды является <see langword="Ctrl" /> + <see langword="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-351">The default key gesture for this command is <see langword="Ctrl" />+<see langword="T" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-352">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-352">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-353">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-353">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="c9be9-354">Эта команда не влияет на элемент текста Если <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> текстового элемента свойству `true`.</span><span class="sxs-lookup"><span data-stu-id="c9be9-354">This command has no effect on a text element unless the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property of the text element is set to `true`.</span></span>  
  
<a name="xamlAttributeUsage_IncreaseIndentation"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-355">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-355">XAML Attribute Usage</span></span>  
  
```  
<object property="IncreaseIndentation"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-356">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-356">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-357">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-357">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-358">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-358">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-359">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-359">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-360">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-360">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-361">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-361">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-362">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-362">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-363">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-363">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" />
      </Docs>
    </Member>
    <Member MemberName="MoveDownByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveDownByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveDownByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveDownByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveDownByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveDownByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveDownByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-364">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />, которая запрашивает переход курсора вниз на одну строку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-364">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" /> command, which requests that the caret move down by one line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-365">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-365">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-366">Знаком клавиши по умолчанию для данной команды является <see langword="Down" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-366">The default key gesture for this command is <see langword="Down" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-367">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-367">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-368">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox> и <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-368">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveDownByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-369">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-369">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveDownByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-370">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-370">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-371">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-371">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-372">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-372">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-373">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-373">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-374">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-374">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-375">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-375">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-376">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-376">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-377">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-377">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
      </Docs>
    </Member>
    <Member MemberName="MoveDownByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveDownByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveDownByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveDownByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveDownByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveDownByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveDownByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-378">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />, которая запрашивает переход курсора вниз на одну страницу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-378">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" /> command, which requests that the caret move down by one page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-379">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-379">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-380">Знаком клавиши по умолчанию для данной команды является <see langword="PageDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-380">The default key gesture for this command is <see langword="PageDown" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-381">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-381">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-382">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox> и <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-382">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveDownByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-383">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-383">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveDownByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-384">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-384">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-385">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-385">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-386">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-386">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-387">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-387">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-388">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-388">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-389">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-389">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-390">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-390">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-391">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-391">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
      </Docs>
    </Member>
    <Member MemberName="MoveDownByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveDownByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveDownByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveDownByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveDownByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveDownByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-392">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />, которая запрашивает переход курсора вниз на один абзац.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-392">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" /> command, which requests that the caret move down by one paragraph.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-393">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-393">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-394">Знаком клавиши по умолчанию для этой команды является <see langword="Ctrl" /> + <see langword="Down" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-394">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Down" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-395">Эта команда устанавливает курсор в начало следующего абзаца.</span><span class="sxs-lookup"><span data-stu-id="c9be9-395">This command positions the caret at the beginning of the next paragraph.</span></span>  
  
 <span data-ttu-id="c9be9-396">Эта команда ведет себя как <xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A> при вызове <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-396">This command behaves like <xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A> when invoked on a <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 <span data-ttu-id="c9be9-397">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-397">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-398">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox> и <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-398">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveDownByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-399">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-399">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveDownByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-400">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-400">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-401">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-401">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-402">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-402">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-403">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-403">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-404">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-404">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-405">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-405">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-406">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-406">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-407">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-407">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="MoveLeftByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveLeftByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveLeftByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveLeftByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveLeftByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveLeftByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-408">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />, которая запрашивает переход курсора влево на один символ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-408">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" /> command, which requests that the caret move one character left.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-409">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-409">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-410">Знаком клавиши по умолчанию для данной команды является <see langword="Left" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-410">The default key gesture for this command is <see langword="Left" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-411">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-411">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-412">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-412">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveLeftByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-413">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-413">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveLeftByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-414">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-414">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-415">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-415">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-416">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-416">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-417">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-417">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-418">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-418">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-419">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-419">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-420">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-420">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-421">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-421">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="MoveLeftByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveLeftByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveLeftByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveLeftByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveLeftByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveLeftByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveLeftByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-422">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />, которая запрашивает переход курсора влево на одно слово.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-422">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" /> command, which requests that the caret move one word left.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-423">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-423">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-424">Знаком клавиши по умолчанию для этой команды является <see langword="Ctrl" /> + <see langword="Left" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-424">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Left" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-425">Если курсор находится внутри слова, эта команда перемещает курсор в начало этого слова.</span><span class="sxs-lookup"><span data-stu-id="c9be9-425">If the caret is within a word, this command moves the caret to the beginning of that word.</span></span>  <span data-ttu-id="c9be9-426">В противном случае эта команда перемещает курсор в начало предыдущего слова.</span><span class="sxs-lookup"><span data-stu-id="c9be9-426">Otherwise, this command moves the caret to the beginning of the previous word.</span></span>  
  
 <span data-ttu-id="c9be9-427">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-427">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-428">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-428">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveLeftByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-429">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-429">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveLeftByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-430">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-430">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-431">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-431">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-432">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-432">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-433">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-433">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-434">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-434">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-435">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-435">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-436">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-436">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-437">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-437">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
      </Docs>
    </Member>
    <Member MemberName="MoveRightByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveRightByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveRightByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveRightByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveRightByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveRightByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-438">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />, которая запрашивает переход курсора вправо на один символ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-438">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" /> command, which requests that the caret move one character right.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-439">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-439">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-440">Знаком клавиши по умолчанию для данной команды является <see langword="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-440">The default key gesture for this command is <see langword="Right" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-441">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-441">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-442">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-442">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveRightByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-443">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-443">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveRightByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-444">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-444">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-445">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-445">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-446">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-446">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-447">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-447">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-448">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-448">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-449">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-449">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-450">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-450">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-451">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-451">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="MoveRightByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveRightByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveRightByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveRightByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveRightByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveRightByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveRightByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-452">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />, которая запрашивает переход курсора вправо на одно слово.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-452">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" /> command, which requests that the caret move right by one word.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-453">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-453">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-454">Знаком клавиши по умолчанию для этой команды является <see langword="Ctrl" /> + <see langword="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-454">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Right" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-455">Если курсор находится внутри слова, эта команда перемещает курсор в конец этого слова.</span><span class="sxs-lookup"><span data-stu-id="c9be9-455">If the caret is within a word, this command moves the caret to the end of that word.</span></span>  <span data-ttu-id="c9be9-456">В противном случае эта команда перемещает курсор в начало следующего слова.</span><span class="sxs-lookup"><span data-stu-id="c9be9-456">Otherwise, this command moves the caret to the beginning of the next word.</span></span>  
  
 <span data-ttu-id="c9be9-457">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-457">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-458">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-458">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveRightByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-459">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-459">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveRightByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-460">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-460">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-461">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-461">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-462">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-462">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-463">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-463">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-464">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-464">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-465">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-465">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-466">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-466">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-467">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-467">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="MoveToDocumentEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToDocumentEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToDocumentEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToDocumentEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToDocumentEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToDocumentEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-468">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />, которая запрашивает перемещение курсора в конец содержимого.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-468">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" /> command, which requests that the caret move to the very end of content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-469">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-469">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-470">Знаком клавиши по умолчанию для этой команды является <see langword="Ctrl" /> + <see langword="End" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-470">The default key gesture for this command is <see langword="Ctrl" />+<see langword="End" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-471">Объект *контейнера текста* является элементом, который образует конечную границу для содержимого под рукой.</span><span class="sxs-lookup"><span data-stu-id="c9be9-471">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="c9be9-472"><xref:System.Windows.Controls.TextBlock> и <xref:System.Windows.Documents.FlowDocument> являются примерами текстовых контейнеров.</span><span class="sxs-lookup"><span data-stu-id="c9be9-472"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="c9be9-473">Собирательно содержимое в текстовом контейнере называется *документа*.</span><span class="sxs-lookup"><span data-stu-id="c9be9-473">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="c9be9-474">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-474">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-475">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-475">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToDocumentEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-476">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-476">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToDocumentEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-477">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-477">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-478">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-478">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-479">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-479">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-480">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-480">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-481">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-481">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-482">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-482">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-483">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-483">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-484">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-484">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
      </Docs>
    </Member>
    <Member MemberName="MoveToDocumentStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToDocumentStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToDocumentStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToDocumentStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToDocumentStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToDocumentStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToDocumentStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-485">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" />, которая запрашивает перемещение курсора в начало содержимого.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-485">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" /> command, which requests that the caret move to the very beginning of content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-486">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-486">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-487">Знаком клавиши по умолчанию для этой команды является <see langword="Ctrl" /> + <see langword="Home" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-487">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Home" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-488">Объект *контейнера текста* является элементом, который образует конечную границу для содержимого под рукой.</span><span class="sxs-lookup"><span data-stu-id="c9be9-488">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="c9be9-489"><xref:System.Windows.Controls.TextBlock> и <xref:System.Windows.Documents.FlowDocument> являются примерами текстовых контейнеров.</span><span class="sxs-lookup"><span data-stu-id="c9be9-489"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="c9be9-490">Собирательно содержимое в текстовом контейнере называется *документа*.</span><span class="sxs-lookup"><span data-stu-id="c9be9-490">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="c9be9-491">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-491">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-492">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-492">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToDocumentStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-493">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-493">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToDocumentStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-494">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-494">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-495">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-495">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-496">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-496">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-497">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-497">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-498">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-498">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-499">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-499">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-500">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-500">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-501">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-501">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
      </Docs>
    </Member>
    <Member MemberName="MoveToLineEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToLineEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToLineEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToLineEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToLineEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToLineEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToLineEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-502">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />, которая запрашивает перемещение курсора в конец текущей строки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-502">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" /> command, which requests that the caret move to the end of the current line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-503">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-503">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-504">Знаком клавиши по умолчанию для данной команды является <see langword="End" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-504">The default key gesture for this command is <see langword="End" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-505">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-505">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-506">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-506">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToLineEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-507">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-507">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToLineEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-508">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-508">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-509">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-509">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-510">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-510">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-511">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-511">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-512">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-512">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-513">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-513">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-514">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-514">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-515">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-515">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      </Docs>
    </Member>
    <Member MemberName="MoveToLineStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToLineStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToLineStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToLineStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToLineStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToLineStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToLineStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-516">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />, которая запрашивает перемещение курсора в начало текущей строки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-516">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" /> command, which requests that the caret move to the beginning of the current line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-517">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-517">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-518">Знаком клавиши по умолчанию для данной команды является <see langword="Home" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-518">The default key gesture for this command is <see langword="Home" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-519">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-519">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-520">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-520">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToLineStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-521">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-521">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToLineStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-522">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-522">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-523">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-523">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-524">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-524">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-525">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-525">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-526">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-526">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-527">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-527">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-528">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-528">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-529">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-529">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      </Docs>
    </Member>
    <Member MemberName="MoveUpByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveUpByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveUpByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveUpByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveUpByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveUpByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveUpByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-530">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />, которая запрашивает переход курсора вверх на одну строку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-530">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" /> command, which requests that the caret move up by one line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-531">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-531">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-532">Знаком клавиши по умолчанию для данной команды является <see langword="Up" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-532">The default key gesture for this command is <see langword="Up" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-533">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-533">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-534">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox> и <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-534">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveUpByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-535">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-535">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveUpByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-536">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-536">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-537">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-537">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-538">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-538">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-539">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-539">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-540">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-540">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-541">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-541">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-542">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-542">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-543">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-543">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
      </Docs>
    </Member>
    <Member MemberName="MoveUpByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveUpByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveUpByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveUpByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveUpByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveUpByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveUpByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-544">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />, которая запрашивает переход курсора вверх на одну страницу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-544">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" /> command, which requests that the caret move up by one page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-545">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-545">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-546">Знаком клавиши по умолчанию для данной команды является <see langword="PageUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-546">The default key gesture for this command is <see langword="PageUp" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-547">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-547">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-548">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox> и <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-548">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveUpByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-549">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-549">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveUpByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-550">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-550">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-551">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-551">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-552">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-552">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-553">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-553">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-554">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-554">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-555">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-555">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-556">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-556">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-557">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-557">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
      </Docs>
    </Member>
    <Member MemberName="MoveUpByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveUpByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveUpByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveUpByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveUpByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveUpByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-558">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />, которая запрашивает переход курсора вверх на один абзац.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-558">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" /> command, which requests that the caret move up by one paragraph.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-559">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-559">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-560">Знаком клавиши по умолчанию для этой команды является <see langword="Ctrl" /> + <see langword="Up" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-560">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Up" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-561">Эта команда устанавливает курсор в начало следующего абзаца.</span><span class="sxs-lookup"><span data-stu-id="c9be9-561">This command positions the caret at the beginning of the next paragraph.</span></span>  
  
 <span data-ttu-id="c9be9-562">Эта команда ведет себя как <xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A> при вызове <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-562">This command behaves like <xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A> when invoked on a <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 <span data-ttu-id="c9be9-563">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-563">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-564">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox> и <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-564">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveUpByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-565">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-565">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveUpByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-566">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-566">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-567">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-567">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-568">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-568">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-569">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-569">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-570">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-570">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-571">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-571">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-572">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-572">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-573">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-573">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="SelectDownByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectDownByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectDownByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectDownByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectDownByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectDownByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectDownByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-574">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />, которая запрашивает расширение текущей выборки на одну строку вниз.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-574">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" /> command, which requests that the current selection be expanded down by one line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-575">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-575">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-576">Знаком клавиши по умолчанию для этой команды является <see langword="Shift" /> + <see langword="Down" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-576">The default key gesture for this command is <see langword="Shift" />+<see langword="Down" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-577">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-577">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-578">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-578">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectDownByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-579">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-579">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectDownByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-580">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-580">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-581">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-581">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-582">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-582">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-583">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-583">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-584">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-584">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-585">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-585">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-586">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-586">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-587">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-587">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
      </Docs>
    </Member>
    <Member MemberName="SelectDownByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectDownByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectDownByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectDownByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectDownByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectDownByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectDownByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-588">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />, которая запрашивает расширение текущей выборки на одну страницу вниз.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-588">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" /> command, which requests that the current selection be expanded down by one page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-589">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-589">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-590">Знаком клавиши по умолчанию для этой команды является <see langword="Shift" /> + <see langword="PageDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-590">The default key gesture for this command is <see langword="Shift" />+<see langword="PageDown" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-591">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-591">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-592">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-592">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectDownByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-593">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-593">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectDownByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-594">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-594">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-595">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-595">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-596">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-596">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-597">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-597">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-598">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-598">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-599">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-599">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-600">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-600">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-601">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-601">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
      </Docs>
    </Member>
    <Member MemberName="SelectDownByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectDownByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectDownByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectDownByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectDownByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectDownByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-602">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />, которая запрашивает расширение текущей выборки на один абзац вниз.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-602">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" /> command, which requests that the current selection be expanded down by one paragraph.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-603">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-603">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-604">Знаком клавиши по умолчанию для этой команды является <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Down" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-604">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Down" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-605">Эта команда расширяет выделение до начала следующего абзаца.</span><span class="sxs-lookup"><span data-stu-id="c9be9-605">This command expands the selection to the beginning of the next paragraph.</span></span>  <span data-ttu-id="c9be9-606">В противном случае команда расширяет выделение до конца текущего абзаца.</span><span class="sxs-lookup"><span data-stu-id="c9be9-606">Otherwise, this command expands the selection to the end of the current paragraph.</span></span>  <span data-ttu-id="c9be9-607">Развернутый элемент включает разделитель абзаца, отмечающий конец абзаца.</span><span class="sxs-lookup"><span data-stu-id="c9be9-607">The expanded selection includes the paragraph break that marks the end of the paragraph.</span></span>  
  
 <span data-ttu-id="c9be9-608">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-608">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-609">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-609">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectDownByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-610">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-610">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectDownByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-611">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-611">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-612">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-612">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-613">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-613">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-614">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-614">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-615">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-615">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-616">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-616">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-617">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-617">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-618">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-618">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="SelectLeftByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectLeftByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectLeftByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectLeftByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectLeftByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectLeftByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-619">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />, которая запрашивает расширение текущей выборки на один символ влево.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-619">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" /> command, which requests that the current selection be expanded left by one character.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-620">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-620">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-621">Знаком клавиши по умолчанию для этой команды является <see langword="Shift" /> + <see langword="Left" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-621">The default key gesture for this command is <see langword="Shift" />+<see langword="Left" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-622">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-622">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-623">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-623">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectLeftByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-624">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-624">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectLeftByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-625">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-625">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-626">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-626">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-627">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-627">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-628">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-628">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-629">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-629">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-630">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-630">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-631">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-631">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-632">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-632">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="SelectLeftByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectLeftByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectLeftByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectLeftByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectLeftByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectLeftByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectLeftByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-633">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />, которая запрашивает расширение текущей выборки на одно слово влево.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-633">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" /> command, which requests that the current selection be expanded left by one word.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-634">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-634">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-635">Знаком клавиши по умолчанию для этой команды является <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Left" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-635">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Left" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-636">Если курсор находится внутри слова, эта команда расширяет выделение до начала данного слова.</span><span class="sxs-lookup"><span data-stu-id="c9be9-636">If the caret is within a word, this command expands the selection to the beginning of that word.</span></span>  <span data-ttu-id="c9be9-637">В противном случае эта команда расширяет выделение до начала предыдущего слова.</span><span class="sxs-lookup"><span data-stu-id="c9be9-637">Otherwise, this command expands the selection to the beginning of the previous word.</span></span>  
  
 <span data-ttu-id="c9be9-638">Развернутый элемент не включает разделитель слова.</span><span class="sxs-lookup"><span data-stu-id="c9be9-638">The expanded selection does not include the word delimiter.</span></span>  <span data-ttu-id="c9be9-639">Сравните с <xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A>, который включает разделитель слова в развернутый элемент.</span><span class="sxs-lookup"><span data-stu-id="c9be9-639">Contrast with <xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A>, which does include the word delimiter in the expanded selection.</span></span>  
  
 <span data-ttu-id="c9be9-640">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-640">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-641">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-641">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectLeftByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-642">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-642">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectLeftByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-643">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-643">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-644">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-644">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-645">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-645">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-646">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-646">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-647">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-647">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-648">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-648">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-649">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-649">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-650">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-650">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
      </Docs>
    </Member>
    <Member MemberName="SelectRightByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectRightByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectRightByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectRightByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectRightByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectRightByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-651">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />, которая запрашивает расширение текущей выборки на один символ вправо.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-651">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" /> command, which requests that the current selection be expanded right by one character.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-652">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-652">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-653">Знаком клавиши по умолчанию для этой команды является <see langword="Shift" /> + <see langword="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-653">The default key gesture for this command is <see langword="Shift" />+<see langword="Right" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-654">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-654">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-655">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-655">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectRightByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-656">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-656">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectRightByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-657">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-657">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-658">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-658">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-659">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-659">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-660">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-660">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-661">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-661">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-662">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-662">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-663">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-663">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-664">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-664">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="SelectRightByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectRightByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectRightByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectRightByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectRightByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectRightByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectRightByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-665">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />, которая запрашивает расширение текущей выборки на одно слово вправо.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-665">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" /> command, which requests that the current selection be expanded right by one word.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-666">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-666">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-667">Знаком клавиши по умолчанию для этой команды является <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-667">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Right" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-668">Если курсор находится внутри слова, данная команда расширяет выделение до конца этого слова.</span><span class="sxs-lookup"><span data-stu-id="c9be9-668">If the caret is within a word, this command expands the selection to the end of that word.</span></span>  <span data-ttu-id="c9be9-669">В противном случае команда расширяет выделение до конца массива следующего слова.</span><span class="sxs-lookup"><span data-stu-id="c9be9-669">Otherwise, this command expands the selection to the end of the next word.</span></span>  
  
 <span data-ttu-id="c9be9-670">Развернутый элемент включает разделитель слова.</span><span class="sxs-lookup"><span data-stu-id="c9be9-670">The expanded selection includes the word delimiter.</span></span>  <span data-ttu-id="c9be9-671">Сравните с <xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A> которого не включает разделитель слова в развернутый элемент.</span><span class="sxs-lookup"><span data-stu-id="c9be9-671">Contrast with <xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A> which does not include the word delimiter in the expanded selection.</span></span>  
  
 <span data-ttu-id="c9be9-672">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-672">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-673">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-673">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectRightByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-674">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-674">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectRightByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-675">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-675">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-676">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-676">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-677">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-677">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-678">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-678">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-679">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-679">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-680">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-680">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-681">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-681">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-682">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-682">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="SelectToDocumentEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToDocumentEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToDocumentEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToDocumentEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToDocumentEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToDocumentEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-683">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />, которая запрашивает расширение текущей выборки в конец содержимого.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-683">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" /> command, which requests that the current selection be expanded to the very end of content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-684">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-684">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-685">Знаком клавиши по умолчанию для этой команды является <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="End" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-685">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="End" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-686">Объект *контейнера текста* является элементом, который образует конечную границу для содержимого под рукой.</span><span class="sxs-lookup"><span data-stu-id="c9be9-686">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="c9be9-687"><xref:System.Windows.Controls.TextBlock> и <xref:System.Windows.Documents.FlowDocument> являются примерами текстовых контейнеров.</span><span class="sxs-lookup"><span data-stu-id="c9be9-687"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="c9be9-688">Собирательно содержимое в текстовом контейнере называется *документа*.</span><span class="sxs-lookup"><span data-stu-id="c9be9-688">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="c9be9-689">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-689">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-690">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-690">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToDocumentEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-691">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-691">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToDocumentEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-692">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-692">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-693">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-693">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-694">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-694">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-695">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-695">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-696">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-696">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-697">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-697">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-698">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-698">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-699">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-699">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
      </Docs>
    </Member>
    <Member MemberName="SelectToDocumentStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToDocumentStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToDocumentStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToDocumentStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToDocumentStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToDocumentStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-700">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />, которая запрашивает расширение текущей выборки в начало содержимого.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-700">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" /> command, which requests that the current selection be expanded to the very beginning of content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-701">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-701">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-702">Знаком клавиши по умолчанию для этой команды является <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Home" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-702">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Home" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-703">Объект *контейнера текста* является элементом, который образует конечную границу для содержимого под рукой.</span><span class="sxs-lookup"><span data-stu-id="c9be9-703">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="c9be9-704"><xref:System.Windows.Controls.TextBlock> и <xref:System.Windows.Documents.FlowDocument> являются примерами текстовых контейнеров.</span><span class="sxs-lookup"><span data-stu-id="c9be9-704"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="c9be9-705">Собирательно содержимое в текстовом контейнере называется *документа*.</span><span class="sxs-lookup"><span data-stu-id="c9be9-705">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="c9be9-706">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-706">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-707">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-707">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToDocumentStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-708">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-708">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToDocumentStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-709">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-709">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-710">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-710">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-711">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-711">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-712">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-712">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-713">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-713">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-714">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-714">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-715">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-715">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-716">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-716">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectToLineEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToLineEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToLineEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToLineEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToLineEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToLineEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-717">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />, которая запрашивает расширение текущей выборки в конец текущей строки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-717">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" /> command, which requests that the current selection be expanded to the end of the current line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-718">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-718">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-719">Знаком клавиши по умолчанию для этой команды является <see langword="Shift" /> + <see langword="End" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-719">The default key gesture for this command is <see langword="Shift" />+<see langword="End" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-720">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-720">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-721">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-721">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToLineEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-722">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-722">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToLineEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-723">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-723">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-724">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-724">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-725">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-725">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-726">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-726">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-727">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-727">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-728">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-728">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-729">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-729">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-730">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-730">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />
      </Docs>
    </Member>
    <Member MemberName="SelectToLineStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToLineStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToLineStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToLineStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToLineStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToLineStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToLineStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToLineStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-731">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" />, которая запрашивает расширение текущей выборки в начало текущей строки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-731">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" /> command, which requests that the current selection be expanded to the beginning of the current line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-732">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-732">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-733">Знаком клавиши по умолчанию для этой команды является <see langword="Shift" /> + <see langword="Home" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-733">The default key gesture for this command is <see langword="Shift" />+<see langword="Home" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-734">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-734">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-735">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-735">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToLineStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-736">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-736">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToLineStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-737">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-737">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-738">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-738">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-739">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-739">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-740">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-740">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-741">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-741">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-742">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-742">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-743">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-743">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-744">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-744">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectUpByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectUpByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectUpByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectUpByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectUpByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectUpByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectUpByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-745">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />, которая запрашивает расширение текущей выборки на одну строку вверх.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-745">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" /> command, which requests that the current selection be expanded up by one line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-746">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-746">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-747">Знаком клавиши по умолчанию для этой команды является <see langword="Shift" /> + <see langword="Up" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-747">The default key gesture for this command is <see langword="Shift" />+<see langword="Up" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-748">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-748">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-749">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-749">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectUpByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-750">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-750">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectUpByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-751">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-751">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-752">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-752">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-753">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-753">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-754">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-754">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-755">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-755">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-756">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-756">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-757">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-757">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-758">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-758">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
      </Docs>
    </Member>
    <Member MemberName="SelectUpByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectUpByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectUpByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectUpByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectUpByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectUpByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectUpByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-759">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />, которая запрашивает расширение текущей выборки на одну страницу вверх.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-759">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" /> command, which requests that the current selection be expanded  up by one page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-760">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-760">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-761">Знаком клавиши по умолчанию для этой команды является <see langword="Shift" /> + <see langword="PageUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-761">The default key gesture for this command is <see langword="Shift" />+<see langword="PageUp" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-762">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-762">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-763">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-763">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectUpByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-764">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-764">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectUpByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-765">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-765">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-766">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-766">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-767">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-767">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-768">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-768">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-769">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-769">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-770">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-770">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-771">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-771">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-772">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-772">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
      </Docs>
    </Member>
    <Member MemberName="SelectUpByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectUpByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectUpByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectUpByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectUpByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectUpByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-773">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />, которая запрашивает расширение текущей выборки на один абзац вверх.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-773">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" /> command, which requests that the current selection be expanded up by one paragraph.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-774">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-774">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-775">Знаком клавиши по умолчанию для этой команды является <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Up" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-775">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Up" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-776">Если курсор находится в начале абзаца, эта команда расширяет выделение до начала предыдущего абзаца.</span><span class="sxs-lookup"><span data-stu-id="c9be9-776">If the caret is at the beginning of a paragraph, this command expands the selection to the beginning of the previous paragraph.</span></span>  <span data-ttu-id="c9be9-777">В противном случае эта команда расширяет выделение до начала текущего абзаца.</span><span class="sxs-lookup"><span data-stu-id="c9be9-777">Otherwise, this command expands the selection to the beginning of the current paragraph.</span></span>  
  
 <span data-ttu-id="c9be9-778">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-778">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-779">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-779">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectUpByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-780">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-780">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectUpByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-781">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-781">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-782">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-782">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-783">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-783">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-784">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-784">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-785">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-785">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-786">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-786">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-787">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-787">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-788">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-788">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="TabBackward">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand TabBackward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand TabBackward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.TabBackward" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TabBackward As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ TabBackward { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TabBackward : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.TabBackward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-789">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.TabBackward" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-789">Represents the <see cref="P:System.Windows.Documents.EditingCommands.TabBackward" /> command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-790">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-790">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-791">Знаком клавиши по умолчанию для этой команды является <see langword="Shift" /> + <see langword="Tab" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-791">The default key gesture for this command is <see langword="Shift" />+<see langword="Tab" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-792">Поведение для этой команды зависит от текущего выделения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-792">The behavior for this command depends on the current selection.</span></span> <span data-ttu-id="c9be9-793">Если выделение является пустым, эта команда эквивалентна <xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-793">If the selection is non-empty, this command is equivalent to <xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A>.</span></span> <span data-ttu-id="c9be9-794">Если курсор находится в ячейке таблицы (представленный <xref:System.Windows.Documents.TableCell> элемент), эта команда перемещает курсор к предыдущей ячейке.</span><span class="sxs-lookup"><span data-stu-id="c9be9-794">If the caret is in a table cell (represented by the <xref:System.Windows.Documents.TableCell> element), this command moves the caret to the previous cell.</span></span> <span data-ttu-id="c9be9-795">В противном случае символ табуляции вставляется в текущей позиции.</span><span class="sxs-lookup"><span data-stu-id="c9be9-795">Otherwise, a tab character is inserted in current position.</span></span>  
  
 <span data-ttu-id="c9be9-796">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-796">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-797">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox> и <xref:System.Windows.Controls.TextBox> (когда <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> свойство `true`).</span><span class="sxs-lookup"><span data-stu-id="c9be9-797">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox> (when the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property is `true`).</span></span>  
  
<a name="xamlAttributeUsage_TabBackward"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-798">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-798">XAML Attribute Usage</span></span>  
  
```  
<object property="TabBackward"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-799">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-799">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-800">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-800">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-801">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-801">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-802">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-802">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-803">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-803">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-804">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-804">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-805">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-805">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-806">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-806">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
```csharp  
RichTextBox rTB = new RichTextBox();  
  
EditingCommands.ToggleInsert.Execute(null, rTB);  
  
```  
  
```vb  
            Dim rTB As New RichTextBox()  
  
            EditingCommands.ToggleInsert.Execute(Nothing, rTB)  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.TabForward" />
      </Docs>
    </Member>
    <Member MemberName="TabForward">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand TabForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand TabForward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.TabForward" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TabForward As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ TabForward { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TabForward : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.TabForward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-807">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.TabForward" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-807">Represents the <see cref="P:System.Windows.Documents.EditingCommands.TabForward" /> command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-808">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-808">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-809">Знаком клавиши по умолчанию для данной команды является <see langword="Tab" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-809">The default key gesture for this command is <see langword="Tab" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-810">Поведение для этой команды зависит от текущего выделения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-810">The behavior for this command depends on the current selection.</span></span> <span data-ttu-id="c9be9-811">Если выделение является пустым, или если выделение является пустым, и текущее положение курсора находится в начале абзаца, эта команда эквивалентна <xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-811">If the selection is non-empty, or if the selection is empty and the current caret position is at the beginning of a  paragraph, this command is equivalent to <xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A>.</span></span> <span data-ttu-id="c9be9-812">Если курсор находится в ячейке таблицы (представленный <xref:System.Windows.Documents.TableCell> элемент), эта команда перемещает курсор к следующей ячейке.</span><span class="sxs-lookup"><span data-stu-id="c9be9-812">If the caret is in a table cell (represented by the <xref:System.Windows.Documents.TableCell> element), this command moves the caret to the next cell.</span></span> <span data-ttu-id="c9be9-813">Если курсор находится в последней ячейке таблицы, эта команда запускает новую строку для добавления в таблицу, а курсор располагается в первой ячейке новой строки.</span><span class="sxs-lookup"><span data-stu-id="c9be9-813">If the caret is in the last cell of a table, this command causes a new row to be appended to the table, with the caret positioned in the first cell of the new row.</span></span>  <span data-ttu-id="c9be9-814">В противном случае символ табуляции вставляется в текущей позиции.</span><span class="sxs-lookup"><span data-stu-id="c9be9-814">Otherwise, a tab character is inserted in current position.</span></span>  
  
 <span data-ttu-id="c9be9-815">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-815">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-816">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox> и <xref:System.Windows.Controls.TextBox> (когда <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> свойство `true`).</span><span class="sxs-lookup"><span data-stu-id="c9be9-816">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox> (when the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property is `true`).</span></span>  
  
<a name="xamlAttributeUsage_TabForward"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-817">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-817">XAML Attribute Usage</span></span>  
  
```  
<object property="TabForward"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-818">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-818">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-819">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-819">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-820">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-820">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-821">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-821">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-822">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-822">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-823">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-823">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-824">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-824">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-825">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-825">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
```csharp  
RichTextBox rTB = new RichTextBox();  
  
EditingCommands.ToggleInsert.Execute(null, rTB);  
  
```  
  
```vb  
            Dim rTB As New RichTextBox()  
  
            EditingCommands.ToggleInsert.Execute(Nothing, rTB)  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.TabBackward" />
      </Docs>
    </Member>
    <Member MemberName="ToggleBold">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleBold { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleBold" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleBold" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleBold As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleBold { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleBold : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleBold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-826">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.ToggleBold" />, которая запрашивает, чтобы форматирование <see cref="T:System.Windows.Documents.Bold" /> переключилось на текущую выборку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-826">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleBold" /> command, which requests that <see cref="T:System.Windows.Documents.Bold" /> formatting be toggled on the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-827">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-827">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-828">Знаком клавиши по умолчанию для этой команды является <see langword="Ctrl" /> + <see langword="B" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-828">The default key gesture for this command is <see langword="Ctrl" />+<see langword="B" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-829">Если <xref:System.Windows.FontWeight> для текущий выделенный фрагмент находится в диапазоне от <xref:System.Windows.FontWeights.Thin%2A> для <xref:System.Windows.FontWeights.SemiBold%2A>, <xref:System.Windows.FontWeights.Bold%2A> применяется к текущему выделению.</span><span class="sxs-lookup"><span data-stu-id="c9be9-829">If the <xref:System.Windows.FontWeight> for the current selection is in the range from <xref:System.Windows.FontWeights.Thin%2A> to <xref:System.Windows.FontWeights.SemiBold%2A>, <xref:System.Windows.FontWeights.Bold%2A> is applied to the current selection.</span></span>  <span data-ttu-id="c9be9-830">В противном случае <xref:System.Windows.FontWeights.Normal%2A> применяется.</span><span class="sxs-lookup"><span data-stu-id="c9be9-830">Otherwise, <xref:System.Windows.FontWeights.Normal%2A> is applied.</span></span>  <span data-ttu-id="c9be9-831">Сравнительный список <xref:System.Windows.FontWeight> значения, см. в разделе <xref:System.Windows.FontWeights>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-831">For a comparative list of <xref:System.Windows.FontWeight> values, see <xref:System.Windows.FontWeights>.</span></span>  
  
 <span data-ttu-id="c9be9-832">Если выделение является пустым и курсор находится внутри слова, выделение расширяется для включения слово целиком.</span><span class="sxs-lookup"><span data-stu-id="c9be9-832">When the selection is empty and the caret is within a word, the selection is expanded to include the entire word.</span></span>  
  
 <span data-ttu-id="c9be9-833">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-833">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-834">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-834">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleBold"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-835">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-835">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleBold"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-836">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-836">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-837">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-837">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-838">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-838">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-839">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-839">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-840">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-840">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-841">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-841">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-842">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-842">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-843">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-843">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />
      </Docs>
    </Member>
    <Member MemberName="ToggleBullets">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleBullets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleBullets" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleBullets" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleBullets As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleBullets { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleBullets : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleBullets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-844">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.ToggleBullets" />, которая запрашивает переключение форматирования маркированного списка на текущую выборку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-844">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleBullets" /> command, which requests that unordered list (also referred to as bulleted list) formatting be toggled on the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-845">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-845">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-846">Знаком клавиши по умолчанию для этой команды является <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="L" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-846">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="L" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-847">Эта команда работает в <xref:System.Windows.Documents.Paragraph> уровень.</span><span class="sxs-lookup"><span data-stu-id="c9be9-847">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="c9be9-848">Если эта команда вызывается по части выборки содержимого в абзац (включая пустое выделение, если курсор находится в пределах абзаца), запрошенное действие применяется ко всему абзацу.</span><span class="sxs-lookup"><span data-stu-id="c9be9-848">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="c9be9-849">Если эта команда вызывается по выборке, которая охватывает несколько абзацев, эффект применяется ко всему содержимому каждого абзаца, который участвует в выделении.</span><span class="sxs-lookup"><span data-stu-id="c9be9-849">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="c9be9-850">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-850">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-851">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-851">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleBullets"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-852">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-852">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleBullets"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-853">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-853">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-854">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-854">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-855">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-855">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-856">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-856">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-857">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-857">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-858">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-858">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-859">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-859">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-860">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-860">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" />
      </Docs>
    </Member>
    <Member MemberName="ToggleInsert">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleInsert { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleInsert" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleInsert" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleInsert As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleInsert { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleInsert : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleInsert" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-861">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.ToggleInsert" />, которая переключает режимы вставки и замены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-861">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleInsert" /> command, which toggles the typing mode between Insert and Overtype.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-862">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-862">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-863">Знаком клавиши по умолчанию для данной команды является <see langword="Insert" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-863">The default key gesture for this command is <see langword="Insert" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-864">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-864">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-865">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-865">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleInsert"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-866">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-866">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleInsert"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-867">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-867">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-868">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-868">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-869">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-869">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-870">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-870">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-871">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-871">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-872">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-872">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-873">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-873">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-874">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-874">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleItalic">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleItalic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleItalic" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleItalic As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleItalic { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleItalic : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleItalic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-875">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />, которая запрашивает, чтобы форматирование <see cref="T:System.Windows.Documents.Italic" /> переключилось на текущую выборку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-875">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" /> command, which requests that <see cref="T:System.Windows.Documents.Italic" /> formatting be toggled on the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-876">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-876">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-877">Знаком клавиши по умолчанию для этой команды является <see langword="Ctrl" /> + <see langword="I" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-877">The default key gesture for this command is <see langword="Ctrl" />+<see langword="I" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-878">Если <xref:System.Windows.FontStyle> для текущего выделения — <xref:System.Windows.FontStyles.Normal%2A>, <xref:System.Windows.FontStyles.Italic%2A> применяется к текущему выделению.</span><span class="sxs-lookup"><span data-stu-id="c9be9-878">If the <xref:System.Windows.FontStyle> for the current selection is <xref:System.Windows.FontStyles.Normal%2A>, <xref:System.Windows.FontStyles.Italic%2A> is applied to the current selection.</span></span>  <span data-ttu-id="c9be9-879">В противном случае <xref:System.Windows.FontStyles.Normal%2A> применяется.</span><span class="sxs-lookup"><span data-stu-id="c9be9-879">Otherwise, <xref:System.Windows.FontStyles.Normal%2A> is applied.</span></span>  
  
 <span data-ttu-id="c9be9-880">Если выделение является пустым и курсор находится внутри слова, выделение расширяется для включения слово целиком.</span><span class="sxs-lookup"><span data-stu-id="c9be9-880">When the selection is empty and the caret is within a word, the selection is expanded to include the entire word.</span></span>  
  
 <span data-ttu-id="c9be9-881">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-881">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-882">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-882">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleItalic"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-883">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-883">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleItalic"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-884">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-884">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-885">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-885">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-886">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-886">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-887">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-887">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-888">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-888">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-889">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-889">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-890">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-890">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-891">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-891">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleBold" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />
      </Docs>
    </Member>
    <Member MemberName="ToggleNumbering">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleNumbering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleNumbering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleNumbering" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleNumbering As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleNumbering { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleNumbering : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleNumbering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-892">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" />, которая запрашивает переключение форматирования упорядоченного списка (также называемый нумерованным списком) на текущую выборку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-892">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" /> command, which requests that ordered list (also referred to as numbered list) formatting be toggled on the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-893">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-893">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-894">Знаком клавиши по умолчанию для этой команды является <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="N" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-894">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="N" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-895">Эта команда работает в <xref:System.Windows.Documents.Paragraph> уровень.</span><span class="sxs-lookup"><span data-stu-id="c9be9-895">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="c9be9-896">Если эта команда вызывается по части выборки содержимого в абзац (включая пустое выделение, если курсор находится в пределах абзаца), запрошенное действие применяется ко всему абзацу.</span><span class="sxs-lookup"><span data-stu-id="c9be9-896">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="c9be9-897">Если эта команда вызывается по выборке, которая охватывает несколько абзацев, эффект применяется ко всему содержимому каждого абзаца, который участвует в выделении.</span><span class="sxs-lookup"><span data-stu-id="c9be9-897">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="c9be9-898">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-898">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-899">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-899">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleNumbering"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-900">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-900">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleNumbering"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-901">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-901">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-902">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-902">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-903">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-903">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-904">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-904">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-905">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-905">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-906">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-906">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-907">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-907">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-908">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-908">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
      </Docs>
    </Member>
    <Member MemberName="ToggleSubscript">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleSubscript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleSubscript" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleSubscript" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleSubscript As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleSubscript { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleSubscript : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleSubscript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-909">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" />, которая запрашивает, чтобы форматирование нижнего индекса переключилось на текущую выборку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-909">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" /> command, which requests that subscript formatting be toggled on the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-910">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-910">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-911">Знаком клавиши по умолчанию для этой команды является <see langword="Ctrl" /> + <see langword="OemPlus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-911">The default key gesture for this command is <see langword="Ctrl" />+<see langword="OemPlus" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-912">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-912">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_ToggleSubscript"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-913">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-913">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleSubscript"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-914">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-914">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-915">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-915">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-916">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-916">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-917">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-917">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-918">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-918">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-919">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-919">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-920">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-920">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-921">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-921">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" />
      </Docs>
    </Member>
    <Member MemberName="ToggleSuperscript">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleSuperscript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleSuperscript" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleSuperscript As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleSuperscript { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleSuperscript : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleSuperscript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-922">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" />, которая запрашивает, чтобы форматирование верхнего индекса переключилось на текущую выборку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-922">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" /> command, which requests that superscript formatting be toggled on the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-923">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-923">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-924">Знаком клавиши по умолчанию для этой команды является <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="OemPlus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-924">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="OemPlus" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-925">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-925">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_ToggleSuperscript"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-926">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-926">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleSuperscript"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-927">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-927">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-928">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-928">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-929">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-929">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-930">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-930">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-931">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-931">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-932">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-932">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-933">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-933">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-934">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-934">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" />
      </Docs>
    </Member>
    <Member MemberName="ToggleUnderline">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleUnderline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleUnderline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleUnderline As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleUnderline { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleUnderline : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleUnderline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c9be9-935">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />, которая запрашивает, чтобы форматирование <see cref="T:System.Windows.Documents.Underline" /> переключилось на текущую выборку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-935">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" /> command, which requests that <see cref="T:System.Windows.Documents.Underline" /> formatting be toggled on the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c9be9-936">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-936">The requested command.</span>
          </span>
          <span data-ttu-id="c9be9-937">Знаком клавиши по умолчанию для этой команды является <see langword="Ctrl" /> + <see langword="U" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c9be9-937">The default key gesture for this command is <see langword="Ctrl" />+<see langword="U" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c9be9-938">Если выделение является пустым и курсор находится внутри слова, выделение расширяется для включения слово целиком.</span><span class="sxs-lookup"><span data-stu-id="c9be9-938">When the selection is empty and the caret is within a word, the selection is expanded to include the entire word.</span></span>  
  
 <span data-ttu-id="c9be9-939">Не обязательно фактической реализации, которая отвечает на эту команду для каждого конкретного объекта; Во многих случаях реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="c9be9-939">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="c9be9-940">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="c9be9-940">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleUnderline"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="c9be9-941">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="c9be9-941">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleUnderline"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="c9be9-942">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-942">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="c9be9-943">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-943">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="c9be9-944">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейс (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает встроенную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-944">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-945">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-945">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="c9be9-946">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="c9be9-946">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="c9be9-947">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-947">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="c9be9-948">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейсов и должна включать обработчик для указанной команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-948">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="c9be9-949">Как правило команды учитывается при вызове объекта, которое не обрабатывает команды.</span><span class="sxs-lookup"><span data-stu-id="c9be9-949">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleBold" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
      </Docs>
    </Member>
  </Members>
</Type>