<Type Name="EditingCommands" FullName="System.Windows.Documents.EditingCommands">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="56ac8ca9237ec99eb53ae1283903a5a349c16b21" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36364133" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class EditingCommands" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit EditingCommands extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.EditingCommands" />
  <TypeSignature Language="VB.NET" Value="Public Class EditingCommands" />
  <TypeSignature Language="C++ CLI" Value="public ref class EditingCommands abstract sealed" />
  <TypeSignature Language="F#" Value="type EditingCommands = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="1967b-101">Предоставляет стандартный набор команд изменения.</span>
      <span class="sxs-lookup">
        <span data-stu-id="1967b-101">Provides a standard set of editing related commands.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-102">В следующей таблице показаны команды редактирования и связанного по умолчанию клавиш (с именами ключей из <xref:System.Windows.Input.Key> и <xref:System.Windows.Input.ModifierKeys> перечислений).</span><span class="sxs-lookup"><span data-stu-id="1967b-102">The following table shows the editing commands and the associated default key gestures (with key names from the <xref:System.Windows.Input.Key> and <xref:System.Windows.Input.ModifierKeys> enumerations).</span></span>  
  
|<span data-ttu-id="1967b-103">Команда изменения</span><span class="sxs-lookup"><span data-stu-id="1967b-103">Editing command</span></span>|<span data-ttu-id="1967b-104">Ключевой жест по умолчанию</span><span class="sxs-lookup"><span data-stu-id="1967b-104">Default key gesture</span></span>|  
|---------------------|-------------------------|  
|<xref:System.Windows.Documents.EditingCommands.AlignCenter%2A>|`Ctrl`+`E`|  
|<xref:System.Windows.Documents.EditingCommands.AlignJustify%2A>|`Ctrl`+`J`|  
|<xref:System.Windows.Documents.EditingCommands.AlignLeft%2A>|`Ctrl`+`L`|  
|<xref:System.Windows.Documents.EditingCommands.AlignRight%2A>|`Ctrl`+`R`|  
|<xref:System.Windows.Documents.EditingCommands.Backspace%2A>|`Backspace`|  
|<xref:System.Windows.Documents.EditingCommands.CorrectSpellingError%2A>|<span data-ttu-id="1967b-105">Нет ключевой жест по умолчанию</span><span class="sxs-lookup"><span data-stu-id="1967b-105">no default key gesture</span></span>|  
|<xref:System.Windows.Documents.EditingCommands.DecreaseFontSize%2A>|`Ctrl`+`OemOpenBrackets`|  
|<xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A>|`Ctrl`+`Shift`+`T`|  
|<xref:System.Windows.Documents.EditingCommands.Delete%2A>|`Delete`|  
|<xref:System.Windows.Documents.EditingCommands.DeleteNextWord%2A>|`Ctrl`+`Delete`|  
|<xref:System.Windows.Documents.EditingCommands.DeletePreviousWord%2A>|`Ctrl`+`Backspace`|  
|<xref:System.Windows.Documents.EditingCommands.EnterLineBreak%2A>|`Shift`+`Enter`|  
|<xref:System.Windows.Documents.EditingCommands.EnterParagraphBreak%2A>|`Enter`|  
|<xref:System.Windows.Documents.EditingCommands.IgnoreSpellingError%2A>|<span data-ttu-id="1967b-106">Нет ключевой жест по умолчанию</span><span class="sxs-lookup"><span data-stu-id="1967b-106">no default key gesture</span></span>|  
|<xref:System.Windows.Documents.EditingCommands.IncreaseFontSize%2A>|`Ctrl`+`OemCloseBrackets`|  
|<xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A>|`Ctrl`+`T`|  
|<xref:System.Windows.Documents.EditingCommands.MoveDownByLine%2A>|`Down`|  
|<xref:System.Windows.Documents.EditingCommands.MoveDownByPage%2A>|`PageDown`|  
|<xref:System.Windows.Documents.EditingCommands.MoveDownByParagraph%2A>|`Ctrl`+`Down`|  
|<xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A>|`Left`|  
|<xref:System.Windows.Documents.EditingCommands.MoveLeftByWord%2A>|`Ctrl`+`Left`|  
|<xref:System.Windows.Documents.EditingCommands.MoveRightByCharacter%2A>|`Right`|  
|<xref:System.Windows.Documents.EditingCommands.MoveRightByWord%2A>|`Ctrl`+`Right`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A>|`Ctrl`+`End`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A>|`Ctrl`+`Home`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToLineEnd%2A>|`End`|  
|<xref:System.Windows.Documents.EditingCommands.MoveToLineStart%2A>|`Home`|  
|<xref:System.Windows.Documents.EditingCommands.MoveUpByLine%2A>|`Up`|  
|<xref:System.Windows.Documents.EditingCommands.MoveUpByPage%2A>|`PageUp`|  
|<xref:System.Windows.Documents.EditingCommands.MoveUpByParagraph%2A>|`Ctrl`+`Up`|  
|<xref:System.Windows.Documents.EditingCommands.SelectDownByLine%2A>|`Shift`+`Down`|  
|<xref:System.Windows.Documents.EditingCommands.SelectDownByPage%2A>|`Shift`+`PageDown`|  
|<xref:System.Windows.Documents.EditingCommands.SelectDownByParagraph%2A>|`Ctrl`+`Shift`+`Down`|  
|<xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A>|`Shift`+`Left`|  
|<xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A>|`Ctrl`+`Shift`+`Left`|  
|<xref:System.Windows.Documents.EditingCommands.SelectRightByCharacter%2A>|`Shift`+`Right`|  
|<xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A>|`Ctrl`+`Shift`+`Right`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToDocumentEnd%2A>|`Ctrl`+`Shift`+`End`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToDocumentStart%2A>|`Ctrl`+`Shift`+`Home`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToLineEnd%2A>|`Shift`+`End`|  
|<xref:System.Windows.Documents.EditingCommands.SelectToLineStart%2A>|`Shift`+`Home`|  
|<xref:System.Windows.Documents.EditingCommands.SelectUpByLine%2A>|`Shift`+`Up`|  
|<xref:System.Windows.Documents.EditingCommands.SelectUpByPage%2A>|`Shift`+`PageUp`|  
|<xref:System.Windows.Documents.EditingCommands.SelectUpByParagraph%2A>|`Ctrl`+`Shift`+`Up`|  
|<xref:System.Windows.Documents.EditingCommands.TabBackward%2A>|`Shift`+`Tab`|  
|<xref:System.Windows.Documents.EditingCommands.TabForward%2A>|`Tab`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleBold%2A>|`Ctrl`+`B`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleBullets%2A>|`Ctrl`+`Shift`+`L`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleInsert%2A>|`Insert`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleItalic%2A>|`Ctrl`+`I`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleNumbering%2A>|`Ctrl`+`Shift`+`N`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleSubscript%2A>|`Ctrl`+`OemPlus`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleSuperscript%2A>|`Ctrl`+`Shift+OemPlus`|  
|<xref:System.Windows.Documents.EditingCommands.ToggleUnderline%2A>|`Ctrl`+`U`|  
  
 <span data-ttu-id="1967b-107">Команды перемещения курсора и команды расширения выбора имеют общий набор ключевой жест по умолчанию — общие различием является добавление <xref:System.Windows.Input.ModifierKeys.Shift> ключ, чтобы отличать команды выбора от команд перемещения курсора.</span><span class="sxs-lookup"><span data-stu-id="1967b-107">Caret movement commands and selection expanding commands share a common set of default key gestures, the general difference being the addition of the <xref:System.Windows.Input.ModifierKeys.Shift> key to differentiate selection commands from caret movement commands.</span></span>  <span data-ttu-id="1967b-108">Например <xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A> команда имеет ключевой жест по умолчанию из <xref:System.Windows.Input.Key.Left>и соответствующий <xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A> команда имеет ключевой жест по умолчанию из <xref:System.Windows.Input.ModifierKeys.Shift> + <xref:System.Windows.Input.Key.Left>.</span><span class="sxs-lookup"><span data-stu-id="1967b-108">For example, the <xref:System.Windows.Documents.EditingCommands.MoveLeftByCharacter%2A> command has a default key gesture of <xref:System.Windows.Input.Key.Left>, and the corresponding <xref:System.Windows.Documents.EditingCommands.SelectLeftByCharacter%2A> command has a default key gesture of <xref:System.Windows.Input.ModifierKeys.Shift>+<xref:System.Windows.Input.Key.Left>.</span></span>  
  
 <span data-ttu-id="1967b-109">В общем случае определения команд, предоставляемые <xref:System.Windows.Documents.EditingCommands> класса не следует использовать параметры команды ( `parameter` ожидаемый параметр <xref:System.Windows.Input.ICommand.Execute%2A> метода).</span><span class="sxs-lookup"><span data-stu-id="1967b-109">In general, the command definitions provided by the <xref:System.Windows.Documents.EditingCommands> class do not make use of command parameters (the `parameter` parameter expected by the <xref:System.Windows.Input.ICommand.Execute%2A> method).</span></span>  
  
 <span data-ttu-id="1967b-110">Дополнительные сведения о командах и их выполнении см. в разделе [фокусе](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="1967b-110">For more information on commands and commanding, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1967b-111">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-111">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-112">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-112">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-113">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-113">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-114">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-114">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-115">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-115">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-116">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-116">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-117">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-117">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-118">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-118">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.MediaCommands" />
    <altmember cref="T:System.Windows.Input.ApplicationCommands" />
    <altmember cref="T:System.Windows.Input.ComponentCommands" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.RoutedUICommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.CommandManager" />
    <altmember cref="T:System.Windows.Input.NavigationCommands" />
  </Docs>
  <Members>
    <Member MemberName="AlignCenter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignCenter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignCenter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignCenter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignCenter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignCenter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignCenter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignCenter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-119">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />, которая запрашивает, чтобы текущий абзац или выборка абзацев выравнивались по центру.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-119">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignCenter" /> command, which requests that the current paragraph or a selection of paragraphs be centered.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-120">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-120">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-121">Ключевой жест по умолчанию для этой команды — <see langword="Ctrl" /> + <see langword="E" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-121">The default key gesture for this command is <see langword="Ctrl" />+<see langword="E" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-122">Эта команда работает на <xref:System.Windows.Documents.Paragraph> уровне.</span><span class="sxs-lookup"><span data-stu-id="1967b-122">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="1967b-123">Если данная команда вызывается по части выборки содержимого в пределах абзаца (включая пустую выборку, если курсор находится в пределах абзаца), запрошенное действие применяется ко всему абзацу.</span><span class="sxs-lookup"><span data-stu-id="1967b-123">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="1967b-124">Если данная команда вызывается по выборке, которая охватывает несколько абзацев, действие применяется ко всему содержимому каждого абзаца, входящего в выделенном фрагменте.</span><span class="sxs-lookup"><span data-stu-id="1967b-124">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="1967b-125">На следующем рисунке показан пример содержимого по центру.</span><span class="sxs-lookup"><span data-stu-id="1967b-125">The following figure shows an example of centered content.</span></span>  
  
 <span data-ttu-id="1967b-126">![Снимок экрана: Значение свойства TextAlign для Center](~/add/media/flowdoc-textalign-center.png "снимок экрана: значение свойства TextAlign для Center")</span><span class="sxs-lookup"><span data-stu-id="1967b-126">![Screenshot: TextAlign property value of Center](~/add/media/flowdoc-textalign-center.png "Screenshot: TextAlign property value of Center")</span></span>  
  
 <span data-ttu-id="1967b-127">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-127">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignCenter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-128">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-128">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignCenter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-129">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-129">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-130">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-130">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-131">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-131">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-132">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-132">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-133">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-133">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-134">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-134">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-135">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-135">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-136">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-136">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignLeft" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="AlignJustify">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignJustify { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignJustify" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignJustify" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignJustify As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignJustify { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignJustify : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignJustify" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-137">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />, которая запрашивает выравнивание данного абзаца или выборки абзацев.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-137">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignJustify" /> command, which requests that the current paragraph or a selection of paragraphs be justified.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-138">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-138">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-139">Ключевой жест по умолчанию для этой команды — <see langword="Ctrl" /> + <see langword="J" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-139">The default key gesture for this command is <see langword="Ctrl" />+<see langword="J" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-140">Эта команда работает на <xref:System.Windows.Documents.Paragraph> уровне.</span><span class="sxs-lookup"><span data-stu-id="1967b-140">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="1967b-141">Если данная команда вызывается по части выборки содержимого в пределах абзаца (включая пустую выборку, если курсор находится в пределах абзаца), запрошенное действие применяется ко всему абзацу.</span><span class="sxs-lookup"><span data-stu-id="1967b-141">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="1967b-142">Если данная команда вызывается по выборке, которая охватывает несколько абзацев, действие применяется для всех абзацев в выделенном фрагменте.</span><span class="sxs-lookup"><span data-stu-id="1967b-142">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to all the paragraphs in the selection.</span></span>  
  
 <span data-ttu-id="1967b-143">Когда содержимое выровнено, интервалы по горизонтали в пределах каждой строки содержимого корректируются таким образом, чтобы выровненные строки были равны или приблизительно равной ширины.</span><span class="sxs-lookup"><span data-stu-id="1967b-143">When content is justified, the horizontal spacing within each line of content is adjusted so that the justified lines are of equal or near-equal width.</span></span>  <span data-ttu-id="1967b-144">Содержимое обычно выравнивается, чтобы создать сглаживания на сторонах содержимого.</span><span class="sxs-lookup"><span data-stu-id="1967b-144">Content is typically justified to create smooth edges on the sides of the content.</span></span>  
  
 <span data-ttu-id="1967b-145">Так как это часто короче, чем остальные, последняя строка в абзаце может остаться не выровненной после вызова этой команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-145">Because it is often shorter than the rest, the last line in a paragraph may remain unjustified after this command is invoked.</span></span>  
  
 <span data-ttu-id="1967b-146">На следующем рисунке показана выровнено содержимого (по левому краю).</span><span class="sxs-lookup"><span data-stu-id="1967b-146">The following figure shows unjustified (left-aligned) content.</span></span>  
  
 <span data-ttu-id="1967b-147">![Снимок экрана: Содержимое не выровнено](~/add/media/content-unjustified.png "снимок экрана: содержимое не выровнено")</span><span class="sxs-lookup"><span data-stu-id="1967b-147">![Screenshot: Content is unjustified](~/add/media/content-unjustified.png "Screenshot: Content is unjustified")</span></span>  
  
 <span data-ttu-id="1967b-148">На следующем рисунке показана то же содержимое после выравнивания.</span><span class="sxs-lookup"><span data-stu-id="1967b-148">The following figure shows the same content after it has been justified.</span></span>  
  
 <span data-ttu-id="1967b-149">![Снимок экрана: содержимое по ширине текста](~/add/media/content-justified.png "экрана содержимого по ширине текста")</span><span class="sxs-lookup"><span data-stu-id="1967b-149">![Screenshot of content justified text](~/add/media/content-justified.png "Screenshot of content justified text")</span></span>  
  
 <span data-ttu-id="1967b-150">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-150">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-151">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-151">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignJustify"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-152">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-152">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignJustify"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-153">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-153">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-154">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-154">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-155">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-155">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-156">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-156">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-157">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-157">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-158">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-158">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-159">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-159">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-160">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-160">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignLeft" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="AlignLeft">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignLeft { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignLeft" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignLeft As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignLeft { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignLeft : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignLeft" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-161">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.AlignLeft" />, которая запрашивает выравнивание по левому краю выборки содержимого.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-161">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignLeft" /> command, which requests that a selection of content be aligned left.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-162">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-162">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-163">Ключевой жест по умолчанию для этой команды — <see langword="Ctrl" /> + <see langword="L" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-163">The default key gesture for this command is <see langword="Ctrl" />+<see langword="L" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-164">Эта команда работает на <xref:System.Windows.Documents.Paragraph> уровне.</span><span class="sxs-lookup"><span data-stu-id="1967b-164">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="1967b-165">Если данная команда вызывается по части выборки содержимого в пределах абзаца (включая пустую выборку, если курсор находится в пределах абзаца), запрошенное действие применяется ко всему абзацу.</span><span class="sxs-lookup"><span data-stu-id="1967b-165">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="1967b-166">Если данная команда вызывается по выборке, которая охватывает несколько абзацев, действие применяется ко всему содержимому каждого абзаца, входящего в выделенном фрагменте.</span><span class="sxs-lookup"><span data-stu-id="1967b-166">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="1967b-167">На следующем рисунке показан пример содержимого с выравниванием по левому краю.</span><span class="sxs-lookup"><span data-stu-id="1967b-167">The following figure shows an example of left-aligned content.</span></span>  
  
 <span data-ttu-id="1967b-168">![Снимок экрана: Значение свойства TextAlign для Left](~/add/media/flowdoc-textalign-left.png "снимок экрана: значение свойства TextAlign для Left")</span><span class="sxs-lookup"><span data-stu-id="1967b-168">![Screenshot: TextAlign property value of Left](~/add/media/flowdoc-textalign-left.png "Screenshot: TextAlign property value of Left")</span></span>  
  
 <span data-ttu-id="1967b-169">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-169">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-170">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-170">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignLeft"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-171">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-171">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignLeft"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-172">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-172">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-173">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-173">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-174">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-174">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-175">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-175">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-176">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-176">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-177">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-177">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-178">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-178">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-179">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-179">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="AlignRight">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand AlignRight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand AlignRight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.AlignRight" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property AlignRight As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ AlignRight { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.AlignRight : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.AlignRight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-180">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.AlignRight" />, которая запрашивает выравнивание по правому краю выборки содержимого.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-180">Represents the <see cref="P:System.Windows.Documents.EditingCommands.AlignRight" /> command, which requests that a selection of content be aligned right.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-181">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-181">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-182">Ключевой жест по умолчанию для этой команды — <see langword="Ctrl" /> + <see langword="R" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-182">The default key gesture for this command is <see langword="Ctrl" />+<see langword="R" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-183">Эта команда работает на <xref:System.Windows.Documents.Paragraph> уровне.</span><span class="sxs-lookup"><span data-stu-id="1967b-183">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="1967b-184">Если данная команда вызывается по части выборки содержимого в пределах абзаца (включая пустую выборку, если курсор находится в пределах абзаца), запрошенное действие применяется ко всему абзацу.</span><span class="sxs-lookup"><span data-stu-id="1967b-184">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="1967b-185">Если данная команда вызывается по выборке, которая охватывает несколько абзацев, действие применяется ко всему содержимому каждого абзаца, входящего в выделенном фрагменте.</span><span class="sxs-lookup"><span data-stu-id="1967b-185">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="1967b-186">На следующем рисунке показан пример содержимого с выравниванием по правому краю.</span><span class="sxs-lookup"><span data-stu-id="1967b-186">The following figure shows an example of right-aligned content.</span></span>  
  
 <span data-ttu-id="1967b-187">![Снимок экрана: Значение TextAlign для Right](~/add/media/flowdoc-textalign-right.png "снимок экрана: значение TextAlign для Right")</span><span class="sxs-lookup"><span data-stu-id="1967b-187">![Screenshot: TextAlign value of Right](~/add/media/flowdoc-textalign-right.png "Screenshot: TextAlign value of Right")</span></span>  
  
 <span data-ttu-id="1967b-188">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-188">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-189">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-189">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_AlignRight"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-190">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-190">XAML Attribute Usage</span></span>  
  
```  
<object property="AlignRight"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-191">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-191">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-192">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-192">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-193">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-193">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-194">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-194">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-195">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-195">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-196">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-196">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-197">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-197">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-198">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-198">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignCenter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignJustify" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.AlignRight" />
      </Docs>
    </Member>
    <Member MemberName="Backspace">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Backspace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Backspace" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.Backspace" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Backspace As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Backspace { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Backspace : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.Backspace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-199">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.Backspace" />, которая запрашивает нажатие клавиши "backspace" в текущей позиции или в отношении текущей выборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-199">Represents the <see cref="P:System.Windows.Documents.EditingCommands.Backspace" /> command, which requests that a backspace be entered at the current position or over the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-200">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-200">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-201">Знаком клавиши по умолчанию для данной команды является <see langword="Backspace" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-201">The default key gesture for this command is <see langword="Backspace" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-202">При вызове в пустой выборке, эта команда удаляет символ или разделитель абзаца прямо перед курсором.</span><span class="sxs-lookup"><span data-stu-id="1967b-202">When invoked on an empty selection, this command deletes the character or paragraph separator just before the caret.</span></span> <span data-ttu-id="1967b-203">При вызове на выбор пустым, эта команда удаляет выделение.</span><span class="sxs-lookup"><span data-stu-id="1967b-203">When invoked on a non-empty selection, this command deletes the selection.</span></span>  
  
 <span data-ttu-id="1967b-204">Эта команда сохраняет любое форматирование удаленной выборки, для содержимого, вставленного в том же расположении после вызова этой команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-204">This command retains any formatting from the deleted selection for content immediately inserted at the same location after this command is invoked.</span></span>  <span data-ttu-id="1967b-205">Этот метод противоположен <xref:System.Windows.Documents.EditingCommands.Delete%2A> команду, которая не сохраняет предыдущих форматирование.</span><span class="sxs-lookup"><span data-stu-id="1967b-205">Contrast with the <xref:System.Windows.Documents.EditingCommands.Delete%2A> command, which does not retain previous formatting.</span></span>  
  
 <span data-ttu-id="1967b-206">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-206">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-207">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-207">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_Backspace"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-208">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-208">XAML Attribute Usage</span></span>  
  
```  
<object property="Backspace"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-209">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-209">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-210">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-210">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-211">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-211">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-212">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-212">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-213">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-213">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-214">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-214">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-215">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-215">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-216">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-216">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CorrectSpellingError">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand CorrectSpellingError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand CorrectSpellingError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CorrectSpellingError As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ CorrectSpellingError { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CorrectSpellingError : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.CorrectSpellingError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-217">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" />, которая запрашивает исправление любой орфографической ошибки в слове в текущей позиции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-217">Represents the <see cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" /> command, which requests that any misspelled word at the current position be corrected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-218">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-218">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-219">Для данной команды отсутствует знак клавиши по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-219">This command has no default key gesture.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-220">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-220">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_CorrectSpellingError"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-221">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-221">XAML Attribute Usage</span></span>  
  
```  
<object property="CorrectSpellingError"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" />
      </Docs>
    </Member>
    <Member MemberName="DecreaseFontSize">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DecreaseFontSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DecreaseFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DecreaseFontSize As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DecreaseFontSize { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DecreaseFontSize : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DecreaseFontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-222">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" />, которая запрашивает уменьшение размера шрифта для текущей выборки на 1 пкт.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-222">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" /> command, which requests that the font size for the current selection be decreased by 1 point.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-223">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-223">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-224">Ключевой жест по умолчанию для этой команды — <see langword="Ctrl" /> + <see langword="OemOpenBrackets" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-224">The default key gesture for this command is <see langword="Ctrl" />+<see langword="OemOpenBrackets" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-225">Если данная команда вызывается по пустой выборке, если курсор находится внутри слова, выборка автоматически расширяется, чтобы применить команду ко всему слову.</span><span class="sxs-lookup"><span data-stu-id="1967b-225">If this command is invoked on an empty selection where the caret is within a word, the selection is automatically expanded to apply the command to the entire word.</span></span>  
  
 <span data-ttu-id="1967b-226">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-226">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-227">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-227">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_DecreaseFontSize"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-228">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-228">XAML Attribute Usage</span></span>  
  
```  
<object property="DecreaseFontSize"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-229">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-229">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-230">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-230">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-231">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-231">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-232">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-232">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-233">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-233">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-234">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-234">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-235">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-235">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-236">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-236">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" />
      </Docs>
    </Member>
    <Member MemberName="DecreaseIndentation">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DecreaseIndentation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DecreaseIndentation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DecreaseIndentation As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DecreaseIndentation { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DecreaseIndentation : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DecreaseIndentation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-237">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" />, которая запрашивает уменьшение отступа для текущего абзаца на одну позицию табуляции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-237">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" /> command, which requests that indentation for the current paragraph be decreased by one tab stop.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-238">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-238">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-239">Ключевой жест по умолчанию для этой команды — <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-239">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="T" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-240">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-240">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-241">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-241">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1967b-242">Эта команда действует на элемент текста только <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> текстового элемента задано значение `true`.</span><span class="sxs-lookup"><span data-stu-id="1967b-242">This command has no effect on a text element unless the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property of the text element is set to `true`.</span></span>  
  
<a name="xamlAttributeUsage_DecreaseIndentation"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-243">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-243">XAML Attribute Usage</span></span>  
  
```  
<object property="DecreaseIndentation"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-244">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-244">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-245">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-245">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-246">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-246">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-247">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-247">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-248">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-248">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-249">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-249">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-250">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-250">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-251">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-251">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand Delete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand Delete" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property Delete As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ Delete { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Delete : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.Delete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-252">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.Delete" />, которая запрашивает удаление текущей выборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-252">Represents the <see cref="P:System.Windows.Documents.EditingCommands.Delete" /> command, which requests that the current selection be deleted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-253">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-253">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-254">Знаком клавиши по умолчанию для данной команды является <see langword="Delete" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-254">The default key gesture for this command is <see langword="Delete" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-255">Эта команда отменяет любое форматирование удаленной выборки.</span><span class="sxs-lookup"><span data-stu-id="1967b-255">This command discards any formatting from the deleted selection.</span></span>  <span data-ttu-id="1967b-256">Этот метод противоположен <xref:System.Windows.Documents.EditingCommands.Backspace%2A> команду, которая сохраняет любое форматирование удаленной выборки, для содержимого, вставленного в том же расположении после вызова этой команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-256">Contrast with the <xref:System.Windows.Documents.EditingCommands.Backspace%2A> command, which retains any formatting from the deleted selection for content immediately inserted at the same location after this command is invoked.</span></span>  
  
 <span data-ttu-id="1967b-257">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-257">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-258">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-258">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_Delete"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-259">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-259">XAML Attribute Usage</span></span>  
  
```  
<object property="Delete"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-260">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-260">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-261">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-261">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-262">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-262">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-263">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-263">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-264">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-264">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-265">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-265">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-266">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-266">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-267">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-267">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteNextWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DeleteNextWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DeleteNextWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DeleteNextWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DeleteNextWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DeleteNextWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteNextWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DeleteNextWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-268">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" />, которая запрашивает удаление следующего слова (относительно текущей позиции).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-268">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" /> command, which requests that the next word (relative to a current position) be deleted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-269">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-269">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-270">Ключевой жест по умолчанию для этой команды — <see langword="Ctrl" /> + <see langword="Delete" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-270">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Delete" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-271">Если курсор находится внутри слова, оставшаяся часть слова между курсором и концом слова удаляется.</span><span class="sxs-lookup"><span data-stu-id="1967b-271">If the caret is within a word, the remainder of the word between the current position and the end of the word is deleted.</span></span>  
  
 <span data-ttu-id="1967b-272">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-272">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-273">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-273">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_DeleteNextWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-274">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-274">XAML Attribute Usage</span></span>  
  
```  
<object property="DeleteNextWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-275">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-275">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-276">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-276">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-277">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-277">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-278">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-278">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-279">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-279">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-280">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-280">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-281">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-281">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-282">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-282">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="DeletePreviousWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand DeletePreviousWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand DeletePreviousWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property DeletePreviousWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ DeletePreviousWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeletePreviousWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.DeletePreviousWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-283">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" />, которая запрашивает удаление предыдущего слова (относительно текущей позиции).</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-283">Represents the <see cref="P:System.Windows.Documents.EditingCommands.DeletePreviousWord" /> command, which requests that the previous word (relative to a current position) be deleted.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-284">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-284">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-285">Ключевой жест по умолчанию для этой команды — <see langword="Ctrl" /> + <see langword="Backspace" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-285">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Backspace" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-286">Если курсор находится внутри слова, оставшаяся часть слова между курсором и началом слова удаляется.</span><span class="sxs-lookup"><span data-stu-id="1967b-286">If the caret is within a word, the remainder of the word between the current position and the beginning of the word is deleted.</span></span>  
  
 <span data-ttu-id="1967b-287">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-287">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-288">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-288">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_DeletePreviousWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-289">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-289">XAML Attribute Usage</span></span>  
  
```  
<object property="DeletePreviousWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-290">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-290">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-291">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-291">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-292">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-292">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-293">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-293">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-294">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-294">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-295">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-295">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-296">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-296">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-297">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-297">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DeleteNextWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="EnterLineBreak">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand EnterLineBreak { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand EnterLineBreak" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.EnterLineBreak" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnterLineBreak As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ EnterLineBreak { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnterLineBreak : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.EnterLineBreak" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-298">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" />, которая запрашивает вставку разрыва строки в текущей позиции или в отношении текущей выборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-298">Represents the <see cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" /> command, which requests that a line break be inserted at the current position or over the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-299">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-299">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-300">Ключевой жест по умолчанию для этой команды — <see langword="Shift" /> + <see langword="Enter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-300">The default key gesture for this command is <see langword="Shift" />+<see langword="Enter" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-301">Для редакторов, которые поддерживают поток содержимого, такие как <xref:System.Windows.Controls.RichTextBox>, это приводит к тому <xref:System.Windows.Documents.LineBreak> элемент вставляется в текущей позиции.</span><span class="sxs-lookup"><span data-stu-id="1967b-301">For editors that support flow content, such as <xref:System.Windows.Controls.RichTextBox>, this command causes a <xref:System.Windows.Documents.LineBreak> element to be inserted at the current position.</span></span>  
  
 <span data-ttu-id="1967b-302">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-302">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-303">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox> и <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-303">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_EnterLineBreak"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-304">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-304">XAML Attribute Usage</span></span>  
  
```  
<object property="EnterLineBreak"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-305">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-305">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-306">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-306">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-307">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-307">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-308">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-308">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-309">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-309">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-310">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-310">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-311">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-311">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-312">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-312">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" />
      </Docs>
    </Member>
    <Member MemberName="EnterParagraphBreak">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand EnterParagraphBreak { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand EnterParagraphBreak" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property EnterParagraphBreak As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ EnterParagraphBreak { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EnterParagraphBreak : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.EnterParagraphBreak" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-313">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" />, которая запрашивает вставку разрыва абзаца в текущей позиции или в отношении текущей выборки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-313">Represents the <see cref="P:System.Windows.Documents.EditingCommands.EnterParagraphBreak" /> command, which requests that a paragraph break be inserted at the current position or over the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-314">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-314">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-315">Знаком клавиши по умолчанию для данной команды является <see langword="Enter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-315">The default key gesture for this command is <see langword="Enter" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-316">Эта команда является эквивалентом пользователя, нажав клавишу ВВОД.</span><span class="sxs-lookup"><span data-stu-id="1967b-316">This command is equivalent to the user pressing the ENTER key.</span></span>  
  
 <span data-ttu-id="1967b-317">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-317">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-318">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox> и <xref:System.Windows.Controls.TextBox> (когда <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> свойство `true`).</span><span class="sxs-lookup"><span data-stu-id="1967b-318">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox> (when the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> property is `true`).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1967b-319">Эта команда действует на элемент текста только <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> текстового элемента задано значение `true`.</span><span class="sxs-lookup"><span data-stu-id="1967b-319">This command has no effect on a text element unless the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsReturn%2A> property of the text element is set to `true`.</span></span>  
  
<a name="xamlAttributeUsage_EnterParagraphBreak"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-320">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-320">XAML Attribute Usage</span></span>  
  
```  
<object property="EnterParagraphBreak"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-321">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-321">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-322">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-322">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-323">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-323">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-324">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-324">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-325">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-325">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-326">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-326">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-327">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-327">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-328">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-328">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.EnterLineBreak" />
      </Docs>
    </Member>
    <Member MemberName="IgnoreSpellingError">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IgnoreSpellingError { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IgnoreSpellingError" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IgnoreSpellingError As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ IgnoreSpellingError { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IgnoreSpellingError : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.IgnoreSpellingError" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-329">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" />, которая запрашивает игнорирование любых орфографических ошибок в словах в текущей позиции или в текущей выборке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-329">Represents the <see cref="P:System.Windows.Documents.EditingCommands.IgnoreSpellingError" /> command, which requests that any instances of misspelled words at the current position or in the current selection be ignored.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-330">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-330">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-331">Для данной команды отсутствует знак клавиши по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-331">This command has no default key gesture.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-332">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-332">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_IgnoreSpellingError"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-333">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-333">XAML Attribute Usage</span></span>  
  
```  
<object property="IgnoreSpellingError"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.CorrectSpellingError" />
      </Docs>
    </Member>
    <Member MemberName="IncreaseFontSize">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IncreaseFontSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IncreaseFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IncreaseFontSize As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ IncreaseFontSize { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IncreaseFontSize : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.IncreaseFontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-334">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" />, которая запрашивает увеличения размера шрифта для текущей выборки на 1 пкт.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-334">Represents the <see cref="P:System.Windows.Documents.EditingCommands.IncreaseFontSize" /> command, which requests that the font size for the current selection be increased by 1 point.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-335">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-335">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-336">Ключевой жест по умолчанию для этой команды — <see langword="Ctrl" /> + <see langword="OemCloseBrackets" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-336">The default key gesture for this command is <see langword="Ctrl" />+<see langword="OemCloseBrackets" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-337">Если данная команда вызывается по пустой выборке, если курсор находится внутри слова, выборка расширяется, чтобы применить команду ко всему слову.</span><span class="sxs-lookup"><span data-stu-id="1967b-337">If this command is invoked on an empty selection where the caret is within a word, the selection is expanded to apply the command to the entire word.</span></span>  
  
 <span data-ttu-id="1967b-338">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-338">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-339">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-339">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_IncreaseFontSize"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-340">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-340">XAML Attribute Usage</span></span>  
  
```  
<object property="IncreaseFontSize"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-341">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-341">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-342">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-342">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-343">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-343">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-344">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-344">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-345">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-345">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-346">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-346">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-347">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-347">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-348">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-348">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DecreaseFontSize" />
      </Docs>
    </Member>
    <Member MemberName="IncreaseIndentation">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand IncreaseIndentation { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand IncreaseIndentation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property IncreaseIndentation As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ IncreaseIndentation { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.IncreaseIndentation : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.IncreaseIndentation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-349">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" />, которая запрашивает увеличение отступа для текущего абзаца на одну позицию табуляции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-349">Represents the <see cref="P:System.Windows.Documents.EditingCommands.IncreaseIndentation" /> command, which requests that indentation for the current paragraph be increased by one tab stop.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-350">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-350">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-351">Ключевой жест по умолчанию для этой команды — <see langword="Ctrl" /> + <see langword="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-351">The default key gesture for this command is <see langword="Ctrl" />+<see langword="T" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-352">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-352">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-353">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-353">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1967b-354">Эта команда действует на элемент текста только <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> текстового элемента задано значение `true`.</span><span class="sxs-lookup"><span data-stu-id="1967b-354">This command has no effect on a text element unless the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property of the text element is set to `true`.</span></span>  
  
<a name="xamlAttributeUsage_IncreaseIndentation"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-355">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-355">XAML Attribute Usage</span></span>  
  
```  
<object property="IncreaseIndentation"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-356">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-356">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-357">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-357">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-358">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-358">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-359">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-359">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-360">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-360">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-361">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-361">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-362">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-362">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-363">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-363">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.DecreaseIndentation" />
      </Docs>
    </Member>
    <Member MemberName="MoveDownByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveDownByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveDownByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveDownByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveDownByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveDownByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveDownByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-364">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />, которая запрашивает переход курсора вниз на одну строку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-364">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" /> command, which requests that the caret move down by one line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-365">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-365">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-366">Знаком клавиши по умолчанию для данной команды является <see langword="Down" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-366">The default key gesture for this command is <see langword="Down" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-367">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-367">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-368">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox> и <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-368">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveDownByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-369">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-369">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveDownByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-370">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-370">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-371">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-371">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-372">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-372">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-373">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-373">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-374">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-374">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-375">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-375">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-376">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-376">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-377">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-377">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
      </Docs>
    </Member>
    <Member MemberName="MoveDownByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveDownByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveDownByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveDownByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveDownByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveDownByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveDownByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-378">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />, которая запрашивает переход курсора вниз на одну страницу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-378">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" /> command, which requests that the caret move down by one page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-379">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-379">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-380">Знаком клавиши по умолчанию для данной команды является <see langword="PageDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-380">The default key gesture for this command is <see langword="PageDown" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-381">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-381">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-382">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox> и <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-382">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveDownByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-383">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-383">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveDownByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-384">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-384">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-385">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-385">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-386">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-386">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-387">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-387">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-388">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-388">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-389">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-389">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-390">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-390">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-391">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-391">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
      </Docs>
    </Member>
    <Member MemberName="MoveDownByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveDownByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveDownByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveDownByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveDownByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveDownByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-392">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />, которая запрашивает переход курсора вниз на один абзац.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-392">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" /> command, which requests that the caret move down by one paragraph.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-393">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-393">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-394">Ключевой жест по умолчанию для этой команды — <see langword="Ctrl" /> + <see langword="Down" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-394">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Down" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-395">Эта команда устанавливает курсор в начало следующего абзаца.</span><span class="sxs-lookup"><span data-stu-id="1967b-395">This command positions the caret at the beginning of the next paragraph.</span></span>  
  
 <span data-ttu-id="1967b-396">Эта команда ведет себя как <xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A> при вызове <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-396">This command behaves like <xref:System.Windows.Documents.EditingCommands.MoveToDocumentEnd%2A> when invoked on a <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 <span data-ttu-id="1967b-397">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-397">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-398">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox> и <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-398">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveDownByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-399">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-399">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveDownByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-400">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-400">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-401">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-401">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-402">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-402">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-403">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-403">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-404">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-404">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-405">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-405">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-406">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-406">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-407">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-407">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="MoveLeftByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveLeftByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveLeftByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveLeftByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveLeftByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveLeftByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-408">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />, которая запрашивает переход курсора влево на один символ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-408">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" /> command, which requests that the caret move one character left.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-409">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-409">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-410">Знаком клавиши по умолчанию для данной команды является <see langword="Left" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-410">The default key gesture for this command is <see langword="Left" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-411">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-411">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-412">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-412">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveLeftByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-413">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-413">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveLeftByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-414">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-414">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-415">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-415">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-416">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-416">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-417">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-417">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-418">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-418">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-419">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-419">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-420">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-420">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-421">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-421">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="MoveLeftByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveLeftByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveLeftByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveLeftByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveLeftByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveLeftByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveLeftByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-422">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />, которая запрашивает переход курсора влево на одно слово.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-422">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" /> command, which requests that the caret move one word left.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-423">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-423">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-424">Ключевой жест по умолчанию для этой команды — <see langword="Ctrl" /> + <see langword="Left" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-424">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Left" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-425">Если курсор находится внутри слова, эта команда перемещает курсор в начало слова.</span><span class="sxs-lookup"><span data-stu-id="1967b-425">If the caret is within a word, this command moves the caret to the beginning of that word.</span></span>  <span data-ttu-id="1967b-426">В противном случае эта команда перемещает курсор в начало предыдущего слова.</span><span class="sxs-lookup"><span data-stu-id="1967b-426">Otherwise, this command moves the caret to the beginning of the previous word.</span></span>  
  
 <span data-ttu-id="1967b-427">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-427">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-428">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-428">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveLeftByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-429">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-429">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveLeftByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-430">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-430">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-431">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-431">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-432">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-432">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-433">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-433">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-434">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-434">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-435">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-435">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-436">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-436">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-437">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-437">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
      </Docs>
    </Member>
    <Member MemberName="MoveRightByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveRightByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveRightByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveRightByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveRightByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveRightByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-438">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />, которая запрашивает переход курсора вправо на один символ.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-438">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" /> command, which requests that the caret move one character right.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-439">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-439">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-440">Знаком клавиши по умолчанию для данной команды является <see langword="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-440">The default key gesture for this command is <see langword="Right" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-441">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-441">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-442">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-442">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveRightByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-443">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-443">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveRightByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-444">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-444">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-445">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-445">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-446">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-446">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-447">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-447">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-448">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-448">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-449">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-449">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-450">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-450">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-451">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-451">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="MoveRightByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveRightByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveRightByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveRightByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveRightByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveRightByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveRightByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-452">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />, которая запрашивает переход курсора вправо на одно слово.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-452">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" /> command, which requests that the caret move right by one word.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-453">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-453">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-454">Ключевой жест по умолчанию для этой команды — <see langword="Ctrl" /> + <see langword="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-454">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Right" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-455">Если курсор находится внутри слова, эта команда перемещает курсор в конец слова.</span><span class="sxs-lookup"><span data-stu-id="1967b-455">If the caret is within a word, this command moves the caret to the end of that word.</span></span>  <span data-ttu-id="1967b-456">В противном случае эта команда перемещает курсор в начало следующего слова.</span><span class="sxs-lookup"><span data-stu-id="1967b-456">Otherwise, this command moves the caret to the beginning of the next word.</span></span>  
  
 <span data-ttu-id="1967b-457">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-457">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-458">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-458">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveRightByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-459">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-459">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveRightByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-460">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-460">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-461">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-461">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-462">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-462">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-463">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-463">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-464">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-464">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-465">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-465">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-466">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-466">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-467">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-467">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="MoveToDocumentEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToDocumentEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToDocumentEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToDocumentEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToDocumentEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToDocumentEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-468">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />, которая запрашивает перемещение курсора в конец содержимого.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-468">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" /> command, which requests that the caret move to the very end of content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-469">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-469">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-470">Ключевой жест по умолчанию для этой команды — <see langword="Ctrl" /> + <see langword="End" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-470">The default key gesture for this command is <see langword="Ctrl" />+<see langword="End" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-471">Объект *контейнера текста* элемент, который формирует окончательную границу для содержимого под рукой.</span><span class="sxs-lookup"><span data-stu-id="1967b-471">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="1967b-472"><xref:System.Windows.Controls.TextBlock> и <xref:System.Windows.Documents.FlowDocument> являются примерами текстовых контейнеров.</span><span class="sxs-lookup"><span data-stu-id="1967b-472"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="1967b-473">Содержимое коллективно содержится в текстовом контейнере, называется *документа*.</span><span class="sxs-lookup"><span data-stu-id="1967b-473">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="1967b-474">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-474">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-475">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-475">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToDocumentEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-476">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-476">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToDocumentEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-477">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-477">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-478">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-478">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-479">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-479">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-480">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-480">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-481">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-481">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-482">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-482">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-483">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-483">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-484">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-484">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
      </Docs>
    </Member>
    <Member MemberName="MoveToDocumentStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToDocumentStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToDocumentStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToDocumentStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToDocumentStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToDocumentStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToDocumentStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-485">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" />, которая запрашивает перемещение курсора в начало содержимого.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-485">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" /> command, which requests that the caret move to the very beginning of content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-486">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-486">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-487">Ключевой жест по умолчанию для этой команды — <see langword="Ctrl" /> + <see langword="Home" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-487">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Home" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-488">Объект *контейнера текста* элемент, который формирует окончательную границу для содержимого под рукой.</span><span class="sxs-lookup"><span data-stu-id="1967b-488">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="1967b-489"><xref:System.Windows.Controls.TextBlock> и <xref:System.Windows.Documents.FlowDocument> являются примерами текстовых контейнеров.</span><span class="sxs-lookup"><span data-stu-id="1967b-489"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="1967b-490">Содержимое коллективно содержится в текстовом контейнере, называется *документа*.</span><span class="sxs-lookup"><span data-stu-id="1967b-490">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="1967b-491">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-491">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-492">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-492">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToDocumentStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-493">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-493">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToDocumentStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-494">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-494">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-495">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-495">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-496">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-496">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-497">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-497">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-498">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-498">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-499">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-499">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-500">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-500">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-501">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-501">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
      </Docs>
    </Member>
    <Member MemberName="MoveToLineEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToLineEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToLineEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToLineEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToLineEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToLineEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToLineEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-502">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />, которая запрашивает перемещение курсора в конец текущей строки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-502">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" /> command, which requests that the caret move to the end of the current line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-503">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-503">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-504">Знаком клавиши по умолчанию для данной команды является <see langword="End" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-504">The default key gesture for this command is <see langword="End" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-505">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-505">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-506">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-506">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToLineEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-507">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-507">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToLineEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-508">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-508">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-509">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-509">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-510">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-510">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-511">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-511">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-512">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-512">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-513">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-513">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-514">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-514">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-515">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-515">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      </Docs>
    </Member>
    <Member MemberName="MoveToLineStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveToLineStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveToLineStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveToLineStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveToLineStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveToLineStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveToLineStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-516">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />, которая запрашивает перемещение курсора в начало текущей строки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-516">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" /> command, which requests that the caret move to the beginning of the current line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-517">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-517">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-518">Знаком клавиши по умолчанию для данной команды является <see langword="Home" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-518">The default key gesture for this command is <see langword="Home" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-519">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-519">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-520">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-520">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveToLineStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-521">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-521">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveToLineStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-522">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-522">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-523">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-523">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-524">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-524">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-525">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-525">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-526">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-526">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-527">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-527">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-528">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-528">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-529">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-529">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      </Docs>
    </Member>
    <Member MemberName="MoveUpByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveUpByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveUpByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveUpByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveUpByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveUpByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveUpByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-530">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />, которая запрашивает переход курсора вверх на одну строку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-530">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" /> command, which requests that the caret move up by one line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-531">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-531">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-532">Знаком клавиши по умолчанию для данной команды является <see langword="Up" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-532">The default key gesture for this command is <see langword="Up" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-533">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-533">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-534">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox> и <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-534">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveUpByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-535">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-535">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveUpByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-536">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-536">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-537">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-537">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-538">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-538">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-539">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-539">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-540">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-540">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-541">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-541">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-542">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-542">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-543">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-543">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
      </Docs>
    </Member>
    <Member MemberName="MoveUpByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveUpByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveUpByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveUpByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveUpByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveUpByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveUpByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-544">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />, которая запрашивает переход курсора вверх на одну страницу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-544">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" /> command, which requests that the caret move up by one page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-545">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-545">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-546">Знаком клавиши по умолчанию для данной команды является <see langword="PageUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-546">The default key gesture for this command is <see langword="PageUp" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-547">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-547">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-548">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox> и <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-548">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveUpByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-549">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-549">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveUpByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-550">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-550">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-551">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-551">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-552">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-552">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-553">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-553">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-554">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-554">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-555">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-555">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-556">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-556">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-557">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-557">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
      </Docs>
    </Member>
    <Member MemberName="MoveUpByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand MoveUpByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand MoveUpByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property MoveUpByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ MoveUpByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MoveUpByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-558">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />, которая запрашивает переход курсора вверх на один абзац.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-558">Represents the <see cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" /> command, which requests that the caret move up by one paragraph.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-559">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-559">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-560">Ключевой жест по умолчанию для этой команды — <see langword="Ctrl" /> + <see langword="Up" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-560">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Up" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-561">Эта команда устанавливает курсор в начало следующего абзаца.</span><span class="sxs-lookup"><span data-stu-id="1967b-561">This command positions the caret at the beginning of the next paragraph.</span></span>  
  
 <span data-ttu-id="1967b-562">Эта команда ведет себя как <xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A> при вызове <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-562">This command behaves like <xref:System.Windows.Documents.EditingCommands.MoveToDocumentStart%2A> when invoked on a <xref:System.Windows.Controls.TextBox>.</span></span>  
  
 <span data-ttu-id="1967b-563">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-563">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-564">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox> и <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-564">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox>.</span></span>  
  
<a name="xamlAttributeUsage_MoveUpByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-565">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-565">XAML Attribute Usage</span></span>  
  
```  
<object property="MoveUpByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-566">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-566">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-567">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-567">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-568">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-568">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-569">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-569">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-570">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-570">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-571">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-571">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-572">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-572">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-573">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-573">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="SelectDownByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectDownByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectDownByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectDownByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectDownByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectDownByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectDownByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-574">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />, которая запрашивает расширение текущей выборки на одну строку вниз.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-574">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" /> command, which requests that the current selection be expanded down by one line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-575">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-575">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-576">Ключевой жест по умолчанию для этой команды — <see langword="Shift" /> + <see langword="Down" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-576">The default key gesture for this command is <see langword="Shift" />+<see langword="Down" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-577">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-577">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-578">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-578">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectDownByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-579">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-579">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectDownByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-580">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-580">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-581">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-581">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-582">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-582">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-583">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-583">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-584">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-584">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-585">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-585">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-586">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-586">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-587">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-587">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByLine" />
      </Docs>
    </Member>
    <Member MemberName="SelectDownByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectDownByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectDownByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectDownByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectDownByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectDownByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectDownByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-588">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />, которая запрашивает расширение текущей выборки на одну страницу вниз.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-588">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" /> command, which requests that the current selection be expanded down by one page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-589">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-589">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-590">Ключевой жест по умолчанию для этой команды — <see langword="Shift" /> + <see langword="PageDown" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-590">The default key gesture for this command is <see langword="Shift" />+<see langword="PageDown" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-591">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-591">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-592">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-592">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectDownByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-593">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-593">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectDownByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-594">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-594">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-595">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-595">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-596">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-596">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-597">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-597">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-598">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-598">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-599">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-599">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-600">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-600">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-601">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-601">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByPage" />
      </Docs>
    </Member>
    <Member MemberName="SelectDownByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectDownByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectDownByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectDownByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectDownByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectDownByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-602">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />, которая запрашивает расширение текущей выборки на один абзац вниз.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-602">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" /> command, which requests that the current selection be expanded down by one paragraph.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-603">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-603">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-604">Ключевой жест по умолчанию для этой команды — <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Down" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-604">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Down" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-605">Эта команда расширяет выборку в начало следующего абзаца.</span><span class="sxs-lookup"><span data-stu-id="1967b-605">This command expands the selection to the beginning of the next paragraph.</span></span>  <span data-ttu-id="1967b-606">В противном случае эта команда расширяет выборку до конца текущего абзаца.</span><span class="sxs-lookup"><span data-stu-id="1967b-606">Otherwise, this command expands the selection to the end of the current paragraph.</span></span>  <span data-ttu-id="1967b-607">Расширенная выборка включает разделитель абзаца, отмечающий конец абзаца.</span><span class="sxs-lookup"><span data-stu-id="1967b-607">The expanded selection includes the paragraph break that marks the end of the paragraph.</span></span>  
  
 <span data-ttu-id="1967b-608">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-608">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-609">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-609">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectDownByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-610">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-610">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectDownByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-611">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-611">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-612">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-612">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-613">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-613">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-614">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-614">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-615">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-615">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-616">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-616">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-617">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-617">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-618">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-618">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveDownByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="SelectLeftByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectLeftByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectLeftByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectLeftByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectLeftByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectLeftByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-619">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />, которая запрашивает расширение текущей выборки на один символ влево.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-619">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" /> command, which requests that the current selection be expanded left by one character.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-620">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-620">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-621">Ключевой жест по умолчанию для этой команды — <see langword="Shift" /> + <see langword="Left" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-621">The default key gesture for this command is <see langword="Shift" />+<see langword="Left" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-622">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-622">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-623">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-623">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectLeftByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-624">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-624">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectLeftByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-625">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-625">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-626">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-626">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-627">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-627">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-628">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-628">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-629">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-629">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-630">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-630">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-631">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-631">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-632">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-632">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="SelectLeftByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectLeftByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectLeftByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectLeftByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectLeftByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectLeftByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectLeftByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-633">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />, которая запрашивает расширение текущей выборки на одно слово влево.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-633">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" /> command, which requests that the current selection be expanded left by one word.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-634">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-634">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-635">Ключевой жест по умолчанию для этой команды — <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Left" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-635">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Left" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-636">Если курсор находится внутри слова, эта команда расширяет выборку до начала слова.</span><span class="sxs-lookup"><span data-stu-id="1967b-636">If the caret is within a word, this command expands the selection to the beginning of that word.</span></span>  <span data-ttu-id="1967b-637">В противном случае эта команда расширяет выборку до начала предыдущего слова.</span><span class="sxs-lookup"><span data-stu-id="1967b-637">Otherwise, this command expands the selection to the beginning of the previous word.</span></span>  
  
 <span data-ttu-id="1967b-638">Расширенная выборка не включает разделитель слова.</span><span class="sxs-lookup"><span data-stu-id="1967b-638">The expanded selection does not include the word delimiter.</span></span>  <span data-ttu-id="1967b-639">Этот метод противоположен <xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A>, который включает разделитель слова на Расширенная выборка.</span><span class="sxs-lookup"><span data-stu-id="1967b-639">Contrast with <xref:System.Windows.Documents.EditingCommands.SelectRightByWord%2A>, which does include the word delimiter in the expanded selection.</span></span>  
  
 <span data-ttu-id="1967b-640">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-640">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-641">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-641">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectLeftByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-642">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-642">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectLeftByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-643">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-643">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-644">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-644">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-645">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-645">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-646">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-646">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-647">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-647">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-648">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-648">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-649">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-649">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-650">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-650">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveLeftByWord" />
      </Docs>
    </Member>
    <Member MemberName="SelectRightByCharacter">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectRightByCharacter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectRightByCharacter" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectRightByCharacter As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectRightByCharacter { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectRightByCharacter : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-651">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />, которая запрашивает расширение текущей выборки на один символ вправо.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-651">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" /> command, which requests that the current selection be expanded right by one character.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-652">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-652">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-653">Ключевой жест по умолчанию для этой команды — <see langword="Shift" /> + <see langword="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-653">The default key gesture for this command is <see langword="Shift" />+<see langword="Right" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-654">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-654">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-655">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-655">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectRightByCharacter"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-656">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-656">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectRightByCharacter"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-657">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-657">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-658">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-658">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-659">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-659">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-660">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-660">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-661">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-661">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-662">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-662">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-663">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-663">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-664">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-664">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByCharacter" />
      </Docs>
    </Member>
    <Member MemberName="SelectRightByWord">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectRightByWord { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectRightByWord" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectRightByWord As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectRightByWord { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectRightByWord : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectRightByWord" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-665">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" />, которая запрашивает расширение текущей выборки на одно слово вправо.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-665">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectRightByWord" /> command, which requests that the current selection be expanded right by one word.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-666">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-666">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-667">Ключевой жест по умолчанию для этой команды — <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-667">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Right" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-668">Если курсор находится внутри слова, эта команда расширяет выборку до конца слова.</span><span class="sxs-lookup"><span data-stu-id="1967b-668">If the caret is within a word, this command expands the selection to the end of that word.</span></span>  <span data-ttu-id="1967b-669">В противном случае эта команда расширяет выборку до конца следующего слова.</span><span class="sxs-lookup"><span data-stu-id="1967b-669">Otherwise, this command expands the selection to the end of the next word.</span></span>  
  
 <span data-ttu-id="1967b-670">Расширенная выборка включает разделитель слова.</span><span class="sxs-lookup"><span data-stu-id="1967b-670">The expanded selection includes the word delimiter.</span></span>  <span data-ttu-id="1967b-671">Этот метод противоположен <xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A> которого не включает разделитель слова в Расширенная выборка.</span><span class="sxs-lookup"><span data-stu-id="1967b-671">Contrast with <xref:System.Windows.Documents.EditingCommands.SelectLeftByWord%2A> which does not include the word delimiter in the expanded selection.</span></span>  
  
 <span data-ttu-id="1967b-672">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-672">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-673">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-673">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectRightByWord"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-674">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-674">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectRightByWord"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-675">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-675">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-676">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-676">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-677">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-677">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-678">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-678">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-679">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-679">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-680">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-680">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-681">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-681">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-682">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-682">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectLeftByWord" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectRightByCharacter" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveRightByWord" />
      </Docs>
    </Member>
    <Member MemberName="SelectToDocumentEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToDocumentEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToDocumentEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToDocumentEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToDocumentEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToDocumentEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-683">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />, которая запрашивает расширение текущей выборки в конец содержимого.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-683">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" /> command, which requests that the current selection be expanded to the very end of content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-684">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-684">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-685">Ключевой жест по умолчанию для этой команды — <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="End" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-685">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="End" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-686">Объект *контейнера текста* элемент, который формирует окончательную границу для содержимого под рукой.</span><span class="sxs-lookup"><span data-stu-id="1967b-686">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="1967b-687"><xref:System.Windows.Controls.TextBlock> и <xref:System.Windows.Documents.FlowDocument> являются примерами текстовых контейнеров.</span><span class="sxs-lookup"><span data-stu-id="1967b-687"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="1967b-688">Содержимое коллективно содержится в текстовом контейнере, называется *документа*.</span><span class="sxs-lookup"><span data-stu-id="1967b-688">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="1967b-689">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-689">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-690">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-690">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToDocumentEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-691">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-691">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToDocumentEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-692">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-692">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-693">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-693">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-694">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-694">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-695">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-695">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-696">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-696">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-697">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-697">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-698">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-698">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-699">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-699">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentEnd" />
      </Docs>
    </Member>
    <Member MemberName="SelectToDocumentStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToDocumentStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToDocumentStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToDocumentStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToDocumentStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToDocumentStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToDocumentStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-700">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" />, которая запрашивает расширение текущей выборки в начало содержимого.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-700">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentStart" /> command, which requests that the current selection be expanded to the very beginning of content.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-701">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-701">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-702">Ключевой жест по умолчанию для этой команды — <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Home" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-702">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Home" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-703">Объект *контейнера текста* элемент, который формирует окончательную границу для содержимого под рукой.</span><span class="sxs-lookup"><span data-stu-id="1967b-703">A *text container* is the element that forms the ultimate border for the content at hand.</span></span>  <span data-ttu-id="1967b-704"><xref:System.Windows.Controls.TextBlock> и <xref:System.Windows.Documents.FlowDocument> являются примерами текстовых контейнеров.</span><span class="sxs-lookup"><span data-stu-id="1967b-704"><xref:System.Windows.Controls.TextBlock> and <xref:System.Windows.Documents.FlowDocument> are examples of text containers.</span></span>  <span data-ttu-id="1967b-705">Содержимое коллективно содержится в текстовом контейнере, называется *документа*.</span><span class="sxs-lookup"><span data-stu-id="1967b-705">The content collectively contained within a text container is referred to as a *document*.</span></span>  
  
 <span data-ttu-id="1967b-706">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-706">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-707">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-707">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToDocumentStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-708">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-708">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToDocumentStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-709">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-709">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-710">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-710">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-711">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-711">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-712">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-712">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-713">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-713">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-714">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-714">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-715">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-715">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-716">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-716">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToDocumentEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToDocumentStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectToLineEnd">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToLineEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToLineEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToLineEnd As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToLineEnd { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToLineEnd : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToLineEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-717">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />, которая запрашивает расширение текущей выборки в конец текущей строки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-717">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" /> command, which requests that the current selection be expanded to the end of the current line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-718">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-718">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-719">Ключевой жест по умолчанию для этой команды — <see langword="Shift" /> + <see langword="End" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-719">The default key gesture for this command is <see langword="Shift" />+<see langword="End" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-720">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-720">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-721">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-721">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToLineEnd"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-722">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-722">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToLineEnd"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-723">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-723">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-724">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-724">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-725">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-725">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-726">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-726">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-727">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-727">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-728">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-728">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-729">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-729">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-730">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-730">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineEnd" />
      </Docs>
    </Member>
    <Member MemberName="SelectToLineStart">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectToLineStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectToLineStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectToLineStart" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectToLineStart As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectToLineStart { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectToLineStart : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectToLineStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-731">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" />, которая запрашивает расширение текущей выборки в начало текущей строки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-731">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectToLineStart" /> command, which requests that the current selection be expanded to the beginning of the current line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-732">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-732">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-733">Ключевой жест по умолчанию для этой команды — <see langword="Shift" /> + <see langword="Home" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-733">The default key gesture for this command is <see langword="Shift" />+<see langword="Home" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-734">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-734">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-735">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-735">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectToLineStart"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-736">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-736">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectToLineStart"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-737">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-737">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-738">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-738">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-739">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-739">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-740">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-740">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-741">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-741">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-742">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-742">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-743">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-743">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-744">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-744">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectToLineEnd" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveToLineStart" />
      </Docs>
    </Member>
    <Member MemberName="SelectUpByLine">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectUpByLine { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectUpByLine" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectUpByLine As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectUpByLine { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectUpByLine : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectUpByLine" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-745">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />, которая запрашивает расширение текущей выборки на одну строку вверх.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-745">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" /> command, which requests that the current selection be expanded up by one line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-746">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-746">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-747">Ключевой жест по умолчанию для этой команды — <see langword="Shift" /> + <see langword="Up" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-747">The default key gesture for this command is <see langword="Shift" />+<see langword="Up" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-748">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-748">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-749">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-749">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectUpByLine"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-750">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-750">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectUpByLine"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-751">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-751">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-752">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-752">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-753">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-753">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-754">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-754">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-755">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-755">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-756">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-756">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-757">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-757">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-758">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-758">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByLine" />
      </Docs>
    </Member>
    <Member MemberName="SelectUpByPage">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectUpByPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectUpByPage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectUpByPage As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectUpByPage { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectUpByPage : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectUpByPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-759">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />, которая запрашивает расширение текущей выборки на одну страницу вверх.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-759">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" /> command, which requests that the current selection be expanded  up by one page.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-760">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-760">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-761">Ключевой жест по умолчанию для этой команды — <see langword="Shift" /> + <see langword="PageUp" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-761">The default key gesture for this command is <see langword="Shift" />+<see langword="PageUp" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-762">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-762">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-763">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-763">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectUpByPage"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-764">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-764">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectUpByPage"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-765">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-765">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-766">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-766">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-767">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-767">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-768">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-768">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-769">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-769">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-770">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-770">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-771">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-771">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-772">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-772">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByPage" />
      </Docs>
    </Member>
    <Member MemberName="SelectUpByParagraph">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand SelectUpByParagraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand SelectUpByParagraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property SelectUpByParagraph As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ SelectUpByParagraph { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectUpByParagraph : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.SelectUpByParagraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-773">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" />, которая запрашивает расширение текущей выборки на один абзац вверх.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-773">Represents the <see cref="P:System.Windows.Documents.EditingCommands.SelectUpByParagraph" /> command, which requests that the current selection be expanded up by one paragraph.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-774">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-774">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-775">Ключевой жест по умолчанию для этой команды — <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="Up" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-775">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="Up" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-776">Если курсор находится в начале абзаца, данная команда расширяет выборку до начала предыдущего абзаца.</span><span class="sxs-lookup"><span data-stu-id="1967b-776">If the caret is at the beginning of a paragraph, this command expands the selection to the beginning of the previous paragraph.</span></span>  <span data-ttu-id="1967b-777">В противном случае эта команда расширяет выборку до начала текущего абзаца.</span><span class="sxs-lookup"><span data-stu-id="1967b-777">Otherwise, this command expands the selection to the beginning of the current paragraph.</span></span>  
  
 <span data-ttu-id="1967b-778">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-778">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-779">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-779">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_SelectUpByParagraph"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-780">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-780">XAML Attribute Usage</span></span>  
  
```  
<object property="SelectUpByParagraph"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-781">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-781">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-782">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-782">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-783">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-783">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-784">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-784">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-785">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-785">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-786">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-786">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-787">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-787">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-788">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-788">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectDownByParagraph" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByLine" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.SelectUpByPage" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.MoveUpByParagraph" />
      </Docs>
    </Member>
    <Member MemberName="TabBackward">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand TabBackward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand TabBackward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.TabBackward" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TabBackward As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ TabBackward { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TabBackward : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.TabBackward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-789">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.TabBackward" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-789">Represents the <see cref="P:System.Windows.Documents.EditingCommands.TabBackward" /> command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-790">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-790">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-791">Ключевой жест по умолчанию для этой команды — <see langword="Shift" /> + <see langword="Tab" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-791">The default key gesture for this command is <see langword="Shift" />+<see langword="Tab" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-792">Поведение для этой команды, зависит от текущего выделения.</span><span class="sxs-lookup"><span data-stu-id="1967b-792">The behavior for this command depends on the current selection.</span></span> <span data-ttu-id="1967b-793">Если выделение является пустым, этот параметр аналогичен <xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A>.</span><span class="sxs-lookup"><span data-stu-id="1967b-793">If the selection is non-empty, this command is equivalent to <xref:System.Windows.Documents.EditingCommands.DecreaseIndentation%2A>.</span></span> <span data-ttu-id="1967b-794">Если курсор находится в ячейке таблицы (представленного <xref:System.Windows.Documents.TableCell> элемент), эта команда перемещает курсор к предыдущей ячейке.</span><span class="sxs-lookup"><span data-stu-id="1967b-794">If the caret is in a table cell (represented by the <xref:System.Windows.Documents.TableCell> element), this command moves the caret to the previous cell.</span></span> <span data-ttu-id="1967b-795">В противном случае символ табуляции вставляется в текущей позиции.</span><span class="sxs-lookup"><span data-stu-id="1967b-795">Otherwise, a tab character is inserted in current position.</span></span>  
  
 <span data-ttu-id="1967b-796">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-796">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-797">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox> и <xref:System.Windows.Controls.TextBox> (когда <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> свойство `true`).</span><span class="sxs-lookup"><span data-stu-id="1967b-797">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox> (when the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property is `true`).</span></span>  
  
<a name="xamlAttributeUsage_TabBackward"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-798">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-798">XAML Attribute Usage</span></span>  
  
```  
<object property="TabBackward"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-799">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-799">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-800">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-800">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-801">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-801">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-802">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-802">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-803">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-803">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-804">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-804">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-805">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-805">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-806">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-806">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
```csharp  
RichTextBox rTB = new RichTextBox();  
  
EditingCommands.ToggleInsert.Execute(null, rTB);  
  
```  
  
```vb  
            Dim rTB As New RichTextBox()  
  
            EditingCommands.ToggleInsert.Execute(Nothing, rTB)  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.TabForward" />
      </Docs>
    </Member>
    <Member MemberName="TabForward">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand TabForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand TabForward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.TabForward" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property TabForward As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ TabForward { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TabForward : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.TabForward" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-807">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.TabForward" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-807">Represents the <see cref="P:System.Windows.Documents.EditingCommands.TabForward" /> command.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-808">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-808">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-809">Знаком клавиши по умолчанию для данной команды является <see langword="Tab" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-809">The default key gesture for this command is <see langword="Tab" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-810">Поведение для этой команды, зависит от текущего выделения.</span><span class="sxs-lookup"><span data-stu-id="1967b-810">The behavior for this command depends on the current selection.</span></span> <span data-ttu-id="1967b-811">Если выделение является пустым, или если выделенный фрагмент пуст и текущее положение курсора находится в начале абзаца, этот параметр аналогичен <xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A>.</span><span class="sxs-lookup"><span data-stu-id="1967b-811">If the selection is non-empty, or if the selection is empty and the current caret position is at the beginning of a  paragraph, this command is equivalent to <xref:System.Windows.Documents.EditingCommands.IncreaseIndentation%2A>.</span></span> <span data-ttu-id="1967b-812">Если курсор находится в ячейке таблицы (представленного <xref:System.Windows.Documents.TableCell> элемент), эта команда перемещает курсор к следующей ячейке.</span><span class="sxs-lookup"><span data-stu-id="1967b-812">If the caret is in a table cell (represented by the <xref:System.Windows.Documents.TableCell> element), this command moves the caret to the next cell.</span></span> <span data-ttu-id="1967b-813">Если курсор находится в последней ячейке таблицы, эта команда запускает новую строку для добавления в таблицу, а курсор располагается в первую ячейку новой строки.</span><span class="sxs-lookup"><span data-stu-id="1967b-813">If the caret is in the last cell of a table, this command causes a new row to be appended to the table, with the caret positioned in the first cell of the new row.</span></span>  <span data-ttu-id="1967b-814">В противном случае символ табуляции вставляется в текущей позиции.</span><span class="sxs-lookup"><span data-stu-id="1967b-814">Otherwise, a tab character is inserted in current position.</span></span>  
  
 <span data-ttu-id="1967b-815">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-815">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-816">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox> и <xref:System.Windows.Controls.TextBox> (когда <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> свойство `true`).</span><span class="sxs-lookup"><span data-stu-id="1967b-816">This command is natively supported by <xref:System.Windows.Controls.RichTextBox> and <xref:System.Windows.Controls.TextBox> (when the <xref:System.Windows.Controls.Primitives.TextBoxBase.AcceptsTab%2A> property is `true`).</span></span>  
  
<a name="xamlAttributeUsage_TabForward"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-817">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-817">XAML Attribute Usage</span></span>  
  
```  
<object property="TabForward"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-818">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-818">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-819">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-819">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-820">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-820">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-821">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-821">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-822">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-822">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-823">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-823">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-824">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-824">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-825">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-825">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
```csharp  
RichTextBox rTB = new RichTextBox();  
  
EditingCommands.ToggleInsert.Execute(null, rTB);  
  
```  
  
```vb  
            Dim rTB As New RichTextBox()  
  
            EditingCommands.ToggleInsert.Execute(Nothing, rTB)  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.TabBackward" />
      </Docs>
    </Member>
    <Member MemberName="ToggleBold">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleBold { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleBold" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleBold" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleBold As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleBold { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleBold : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleBold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-826">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.ToggleBold" />, которая запрашивает, чтобы форматирование <see cref="T:System.Windows.Documents.Bold" /> переключилось на текущую выборку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-826">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleBold" /> command, which requests that <see cref="T:System.Windows.Documents.Bold" /> formatting be toggled on the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-827">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-827">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-828">Ключевой жест по умолчанию для этой команды — <see langword="Ctrl" /> + <see langword="B" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-828">The default key gesture for this command is <see langword="Ctrl" />+<see langword="B" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-829">Если <xref:System.Windows.FontWeight> для текущего выделения в диапазоне от <xref:System.Windows.FontWeights.Thin%2A> для <xref:System.Windows.FontWeights.SemiBold%2A>, <xref:System.Windows.FontWeights.Bold%2A> применяется к текущему выбранному элементу.</span><span class="sxs-lookup"><span data-stu-id="1967b-829">If the <xref:System.Windows.FontWeight> for the current selection is in the range from <xref:System.Windows.FontWeights.Thin%2A> to <xref:System.Windows.FontWeights.SemiBold%2A>, <xref:System.Windows.FontWeights.Bold%2A> is applied to the current selection.</span></span>  <span data-ttu-id="1967b-830">В противном случае <xref:System.Windows.FontWeights.Normal%2A> применяется.</span><span class="sxs-lookup"><span data-stu-id="1967b-830">Otherwise, <xref:System.Windows.FontWeights.Normal%2A> is applied.</span></span>  <span data-ttu-id="1967b-831">Сравнительные список <xref:System.Windows.FontWeight> значения, в разделе <xref:System.Windows.FontWeights>.</span><span class="sxs-lookup"><span data-stu-id="1967b-831">For a comparative list of <xref:System.Windows.FontWeight> values, see <xref:System.Windows.FontWeights>.</span></span>  
  
 <span data-ttu-id="1967b-832">Если выделенный фрагмент пуст, а курсор находится внутри слова, выборка расширяется для включения слово целиком.</span><span class="sxs-lookup"><span data-stu-id="1967b-832">When the selection is empty and the caret is within a word, the selection is expanded to include the entire word.</span></span>  
  
 <span data-ttu-id="1967b-833">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-833">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-834">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-834">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleBold"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-835">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-835">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleBold"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-836">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-836">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-837">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-837">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-838">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-838">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-839">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-839">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-840">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-840">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-841">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-841">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-842">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-842">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-843">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-843">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />
      </Docs>
    </Member>
    <Member MemberName="ToggleBullets">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleBullets { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleBullets" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleBullets" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleBullets As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleBullets { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleBullets : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleBullets" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-844">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.ToggleBullets" />, которая запрашивает переключение форматирования маркированного списка на текущую выборку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-844">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleBullets" /> command, which requests that unordered list (also referred to as bulleted list) formatting be toggled on the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-845">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-845">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-846">Ключевой жест по умолчанию для этой команды — <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="L" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-846">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="L" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-847">Эта команда работает на <xref:System.Windows.Documents.Paragraph> уровне.</span><span class="sxs-lookup"><span data-stu-id="1967b-847">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="1967b-848">Если данная команда вызывается по части выборки содержимого в пределах абзаца (включая пустую выборку, если курсор находится в пределах абзаца), запрошенное действие применяется ко всему абзацу.</span><span class="sxs-lookup"><span data-stu-id="1967b-848">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="1967b-849">Если данная команда вызывается по выборке, которая охватывает несколько абзацев, действие применяется ко всему содержимому каждого абзаца, входящего в выделенном фрагменте.</span><span class="sxs-lookup"><span data-stu-id="1967b-849">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="1967b-850">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-850">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-851">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-851">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleBullets"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-852">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-852">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleBullets"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-853">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-853">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-854">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-854">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-855">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-855">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-856">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-856">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-857">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-857">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-858">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-858">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-859">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-859">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-860">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-860">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" />
      </Docs>
    </Member>
    <Member MemberName="ToggleInsert">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleInsert { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleInsert" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleInsert" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleInsert As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleInsert { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleInsert : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleInsert" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-861">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.ToggleInsert" />, которая переключает режимы вставки и замены.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-861">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleInsert" /> command, which toggles the typing mode between Insert and Overtype.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-862">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-862">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-863">Знаком клавиши по умолчанию для данной команды является <see langword="Insert" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-863">The default key gesture for this command is <see langword="Insert" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-864">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-864">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-865">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, и <xref:System.Windows.Controls.PasswordBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-865">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>, <xref:System.Windows.Controls.TextBox>, and <xref:System.Windows.Controls.PasswordBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleInsert"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-866">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-866">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleInsert"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-867">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-867">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-868">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-868">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-869">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-869">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-870">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-870">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-871">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-871">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-872">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-872">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-873">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-873">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-874">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-874">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToggleItalic">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleItalic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleItalic" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleItalic As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleItalic { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleItalic : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleItalic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-875">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />, которая запрашивает, чтобы форматирование <see cref="T:System.Windows.Documents.Italic" /> переключилось на текущую выборку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-875">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" /> command, which requests that <see cref="T:System.Windows.Documents.Italic" /> formatting be toggled on the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-876">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-876">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-877">Ключевой жест по умолчанию для этой команды — <see langword="Ctrl" /> + <see langword="I" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-877">The default key gesture for this command is <see langword="Ctrl" />+<see langword="I" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-878">Если <xref:System.Windows.FontStyle> для текущего выделения — <xref:System.Windows.FontStyles.Normal%2A>, <xref:System.Windows.FontStyles.Italic%2A> применяется к текущему выбранному элементу.</span><span class="sxs-lookup"><span data-stu-id="1967b-878">If the <xref:System.Windows.FontStyle> for the current selection is <xref:System.Windows.FontStyles.Normal%2A>, <xref:System.Windows.FontStyles.Italic%2A> is applied to the current selection.</span></span>  <span data-ttu-id="1967b-879">В противном случае <xref:System.Windows.FontStyles.Normal%2A> применяется.</span><span class="sxs-lookup"><span data-stu-id="1967b-879">Otherwise, <xref:System.Windows.FontStyles.Normal%2A> is applied.</span></span>  
  
 <span data-ttu-id="1967b-880">Если выделенный фрагмент пуст, а курсор находится внутри слова, выборка расширяется для включения слово целиком.</span><span class="sxs-lookup"><span data-stu-id="1967b-880">When the selection is empty and the caret is within a word, the selection is expanded to include the entire word.</span></span>  
  
 <span data-ttu-id="1967b-881">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-881">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-882">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-882">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleItalic"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-883">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-883">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleItalic"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-884">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-884">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-885">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-885">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-886">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-886">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-887">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-887">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-888">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-888">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-889">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-889">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-890">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-890">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-891">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-891">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleBold" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />
      </Docs>
    </Member>
    <Member MemberName="ToggleNumbering">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleNumbering { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleNumbering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleNumbering" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleNumbering As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleNumbering { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleNumbering : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleNumbering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-892">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" />, которая запрашивает переключение форматирования упорядоченного списка (также называемый нумерованным списком) на текущую выборку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-892">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleNumbering" /> command, which requests that ordered list (also referred to as numbered list) formatting be toggled on the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-893">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-893">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-894">Ключевой жест по умолчанию для этой команды — <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="N" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-894">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="N" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-895">Эта команда работает на <xref:System.Windows.Documents.Paragraph> уровне.</span><span class="sxs-lookup"><span data-stu-id="1967b-895">This command operates at the <xref:System.Windows.Documents.Paragraph> level.</span></span>  <span data-ttu-id="1967b-896">Если данная команда вызывается по части выборки содержимого в пределах абзаца (включая пустую выборку, если курсор находится в пределах абзаца), запрошенное действие применяется ко всему абзацу.</span><span class="sxs-lookup"><span data-stu-id="1967b-896">If this command is invoked on a partial selection of content within a paragraph (including an empty selection where the caret is within a paragraph), the requested effect is applied to the entire paragraph.</span></span>  <span data-ttu-id="1967b-897">Если данная команда вызывается по выборке, которая охватывает несколько абзацев, действие применяется ко всему содержимому каждого абзаца, входящего в выделенном фрагменте.</span><span class="sxs-lookup"><span data-stu-id="1967b-897">If this command is invoked on a selection that spans multiple paragraphs, the effect is applied to the entire contents of each paragraph that participates in the selection.</span></span>  
  
 <span data-ttu-id="1967b-898">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-898">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-899">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-899">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleNumbering"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-900">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-900">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleNumbering"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-901">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-901">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-902">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-902">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-903">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-903">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-904">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-904">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-905">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-905">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-906">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-906">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-907">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-907">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-908">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-908">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
      </Docs>
    </Member>
    <Member MemberName="ToggleSubscript">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleSubscript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleSubscript" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleSubscript" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleSubscript As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleSubscript { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleSubscript : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleSubscript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-909">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" />, которая запрашивает, чтобы форматирование нижнего индекса переключилось на текущую выборку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-909">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" /> command, which requests that subscript formatting be toggled on the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-910">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-910">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-911">Ключевой жест по умолчанию для этой команды — <see langword="Ctrl" /> + <see langword="OemPlus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-911">The default key gesture for this command is <see langword="Ctrl" />+<see langword="OemPlus" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-912">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-912">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_ToggleSubscript"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-913">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-913">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleSubscript"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-914">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-914">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-915">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-915">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-916">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-916">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-917">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-917">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-918">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-918">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-919">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-919">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-920">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-920">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-921">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-921">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" />
      </Docs>
    </Member>
    <Member MemberName="ToggleSuperscript">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleSuperscript { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleSuperscript" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleSuperscript As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleSuperscript { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleSuperscript : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleSuperscript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-922">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" />, которая запрашивает, чтобы форматирование верхнего индекса переключилось на текущую выборку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-922">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleSuperscript" /> command, which requests that superscript formatting be toggled on the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-923">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-923">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-924">Ключевой жест по умолчанию для этой команды — <see langword="Ctrl" /> + <see langword="Shift" /> + <see langword="OemPlus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-924">The default key gesture for this command is <see langword="Ctrl" />+<see langword="Shift" />+<see langword="OemPlus" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-925">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-925">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
<a name="xamlAttributeUsage_ToggleSuperscript"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-926">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-926">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleSuperscript"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-927">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-927">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-928">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-928">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-929">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-929">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-930">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-930">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-931">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-931">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-932">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-932">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-933">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-933">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-934">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-934">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleSubscript" />
      </Docs>
    </Member>
    <Member MemberName="ToggleUnderline">
      <MemberSignature Language="C#" Value="public static System.Windows.Input.RoutedUICommand ToggleUnderline { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Windows.Input.RoutedUICommand ToggleUnderline" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property ToggleUnderline As RoutedUICommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Windows::Input::RoutedUICommand ^ ToggleUnderline { System::Windows::Input::RoutedUICommand ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ToggleUnderline : System.Windows.Input.RoutedUICommand" Usage="System.Windows.Documents.EditingCommands.ToggleUnderline" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.RoutedUICommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1967b-935">Представляет команду <see cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" />, которая запрашивает, чтобы форматирование <see cref="T:System.Windows.Documents.Underline" /> переключилось на текущую выборку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-935">Represents the <see cref="P:System.Windows.Documents.EditingCommands.ToggleUnderline" /> command, which requests that <see cref="T:System.Windows.Documents.Underline" /> formatting be toggled on the current selection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1967b-936">Запрошенная команда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-936">The requested command.</span>
          </span>
          <span data-ttu-id="1967b-937">Ключевой жест по умолчанию для этой команды — <see langword="Ctrl" /> + <see langword="U" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="1967b-937">The default key gesture for this command is <see langword="Ctrl" />+<see langword="U" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1967b-938">Если выделенный фрагмент пуст, а курсор находится внутри слова, выборка расширяется для включения слово целиком.</span><span class="sxs-lookup"><span data-stu-id="1967b-938">When the selection is empty and the caret is within a word, the selection is expanded to include the entire word.</span></span>  
  
 <span data-ttu-id="1967b-939">Не обязательно фактической реализации, который отвечает на эту команду для каждого конкретного объекта; Во многих случаях это реализация, которая отвечает на команду отвечает разработчик приложения.</span><span class="sxs-lookup"><span data-stu-id="1967b-939">There is not necessarily an actual implementation that responds to this command on any given object; in many cases the implementation that responds to a command is the responsibility of the application writer.</span></span>  
  
 <span data-ttu-id="1967b-940">Эта команда поддерживается <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="1967b-940">This command is natively supported by <xref:System.Windows.Controls.RichTextBox>.</span></span>  
  
<a name="xamlAttributeUsage_ToggleUnderline"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="1967b-941">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="1967b-941">XAML Attribute Usage</span></span>  
  
```  
<object property="ToggleUnderline"/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="1967b-942">Следующий пример демонстрирует вызов команды изменения на объекте, который поддерживает данную команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-942">The following example demonstrates how to invoke an editing command on an object that supports the command.</span></span>  
  
 <span data-ttu-id="1967b-943">В этом примере <xref:System.Windows.Controls.RichTextBox> служит в качестве целевого объекта команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-943">For this example, a <xref:System.Windows.Controls.RichTextBox> serves as the command target.</span></span>  <span data-ttu-id="1967b-944">Обратите внимание, что <xref:System.Windows.Controls.RichTextBox> реализует <xref:System.Windows.IInputElement> интерфейса (наследуется от <xref:System.Windows.FrameworkElement>), и что он включает собственную поддержку для многих команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-944">Note that <xref:System.Windows.Controls.RichTextBox> implements the <xref:System.Windows.IInputElement> interface (inherited from <xref:System.Windows.FrameworkElement>), and that it includes native support for many editing commands.</span></span>  
  
 <span data-ttu-id="1967b-945">Первый аргумент для <xref:System.Windows.Input.RoutedCommand.Execute%2A> метода является параметром команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-945">The first argument for the <xref:System.Windows.Input.RoutedCommand.Execute%2A> method is a command parameter.</span></span>  <span data-ttu-id="1967b-946">Большинство команд изменения игнорируют параметр команды; как правило, этот параметр должен быть `null` для команд редактирования.</span><span class="sxs-lookup"><span data-stu-id="1967b-946">Most editing commands ignore the command parameter; in general, this parameter should be `null` for editing commands.</span></span>  
  
 <span data-ttu-id="1967b-947">Второй аргумент задает объект, к которому будут направляться команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-947">The second argument specifies the object to which the command will be routed.</span></span>  <span data-ttu-id="1967b-948">Этот объект должен реализовывать <xref:System.Windows.IInputElement> интерфейса и должен включать обработчик для заданной команды.</span><span class="sxs-lookup"><span data-stu-id="1967b-948">This object must implement the <xref:System.Windows.IInputElement> interface, and should include a handler for the specified command.</span></span>  <span data-ttu-id="1967b-949">Как правило команда игнорируется при вызове на объекте, который обрабатывает команду.</span><span class="sxs-lookup"><span data-stu-id="1967b-949">Generally, a command is ignored when invoked on an object that does not handle the command.</span></span>  
  
 [!code-csharp[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/csharp/VS_Snippets_Wpf/RichTextBoxSnippets/CSharp/Window1.xaml.cs#_editingcommands_invoke)]
 [!code-vb[RichTextBoxSnippets#_EditingCommands_Invoke](~/samples/snippets/visualbasic/VS_Snippets_Wpf/RichTextBoxSnippets/visualbasic/window1.xaml.vb#_editingcommands_invoke)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleBold" />
        <altmember cref="P:System.Windows.Documents.EditingCommands.ToggleItalic" />
      </Docs>
    </Member>
  </Members>
</Type>