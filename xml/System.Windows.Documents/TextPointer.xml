<Type Name="TextPointer" FullName="System.Windows.Documents.TextPointer">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5ef1fa4261a591f0ee0dbabc844bc1a0c4f26492" /><Meta Name="ms.sourcegitcommit" Value="adc8598fd19d91438cacaa8fa7ce613e28c8218e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ru-RU" /><Meta Name="ms.lasthandoff" Value="12/11/2018" /><Meta Name="ms.locfileid" Value="53227755" /></Metadata><TypeSignature Language="C#" Value="public class TextPointer : System.Windows.Documents.ContentPosition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextPointer extends System.Windows.Documents.ContentPosition" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.TextPointer" />
  <TypeSignature Language="VB.NET" Value="Public Class TextPointer&#xA;Inherits ContentPosition" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextPointer : System::Windows::Documents::ContentPosition" />
  <TypeSignature Language="F#" Value="type TextPointer = class&#xA;    inherit ContentPosition" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Documents.ContentPosition</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="f1fa2-101">Представляет положение в <see cref="T:System.Windows.Documents.FlowDocument" /> или <see cref="T:System.Windows.Controls.TextBlock" />.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-101">Represents a position within a <see cref="T:System.Windows.Documents.FlowDocument" /> or <see cref="T:System.Windows.Controls.TextBlock" />.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1fa2-102"><xref:System.Windows.Documents.TextPointer> Класс представлены следующие термины:</span><span class="sxs-lookup"><span data-stu-id="f1fa2-102">The <xref:System.Windows.Documents.TextPointer> class introduces the following terminology:</span></span>  
  
-   <span data-ttu-id="f1fa2-103">Поместите - по своей природе, <xref:System.Windows.Documents.TextPointer> всегда указывает *позиции* в содержимом.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-103">Position - Inherently, a <xref:System.Windows.Documents.TextPointer> always points to a *position* in content.</span></span>  <span data-ttu-id="f1fa2-104">Подобные положения находятся либо между символами в содержимом или потока содержимого, что элемент теги, которые определяют структуру для содержимого.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-104">Such positions either fall between characters in the content, or between flow content element tags that define structure for the content.</span></span>  
  
-   <span data-ttu-id="f1fa2-105">Текущее положение — поскольку <xref:System.Windows.Documents.TextPointer> всегда указывает на позицию и так как многие операции, которые могут выполняться с помощью <xref:System.Windows.Documents.TextPointer> относительны позиции, в настоящее время, на которые указывают <xref:System.Windows.Documents.TextPointer>, смысл просто см. положение, определяемое <xref:System.Windows.Documents.TextPointer> как *текущей позиции*.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-105">Current Position - Because a <xref:System.Windows.Documents.TextPointer> always indicates a position, and because many of the operations that can be performed through a <xref:System.Windows.Documents.TextPointer> are relative to the position currently pointed to by the <xref:System.Windows.Documents.TextPointer>, it makes sense to simply refer to the position indicated by a <xref:System.Windows.Documents.TextPointer> as the *current position*.</span></span>  
  
-   <span data-ttu-id="f1fa2-106">Позиция вставки — *позицию вставки* является позицией, где может быть добавлено новое содержимое без нарушения любой семантических правил для соответствующего содержимого.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-106">Insertion Position - An *insertion position* is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="f1fa2-107">На практике положение вставки — где угодно в содержимом, где можно расположить курсор.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-107">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="f1fa2-108">Пример допустимого <xref:System.Windows.Documents.TextPointer> , не является положением вставки — положение между двумя смежные <xref:System.Windows.Documents.Paragraph> теги (т. е между закрывающий тег выше и открывающий тег следующего абзаца).</span><span class="sxs-lookup"><span data-stu-id="f1fa2-108">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
-   <span data-ttu-id="f1fa2-109">Символ - в рамках <xref:System.Windows.Documents.TextPointer> операции, включающие символы, следующие считается *символ*:</span><span class="sxs-lookup"><span data-stu-id="f1fa2-109">Symbol - For the purposes of <xref:System.Windows.Documents.TextPointer> operations that involve symbols, any of the following is considered to be a *symbol*:</span></span>  
  
    -   <span data-ttu-id="f1fa2-110">Открывающего или закрывающего тега для <xref:System.Windows.Documents.TextElement> элемент.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-110">An opening or closing tag for a <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
    -   <span data-ttu-id="f1fa2-111">Объект <xref:System.Windows.UIElement> элемента, содержащегося в <xref:System.Windows.Documents.InlineUIContainer> или <xref:System.Windows.Documents.BlockUIContainer>.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-111">A <xref:System.Windows.UIElement> element contained within an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="f1fa2-112">Примечание такие <xref:System.Windows.UIElement> всегда считается как один символ; любое дополнительное содержимое или элементы, содержащиеся в <xref:System.Windows.UIElement> , не рассматриваются как символы.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-112">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
    -   <span data-ttu-id="f1fa2-113">Каждый 16-разрядное [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] символа внутри текстового <xref:System.Windows.Documents.Run> элемент.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-113">Each 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
-   <span data-ttu-id="f1fa2-114">Контейнер текста - A *контейнера текста* элемент, который образует конечную границу для имеющегося содержимого потока; в позиции, указанной проверкой <xref:System.Windows.Documents.TextPointer> всегда попадает в текстовом контейнере.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-114">Text Container - A *text container* is the element that forms the ultimate border for the flow content at hand; the position indicated by a <xref:System.Windows.Documents.TextPointer> always falls within a text container.</span></span>  <span data-ttu-id="f1fa2-115">В настоящее время текстовый контейнер должен быть либо <xref:System.Windows.Documents.FlowDocument> или <xref:System.Windows.Controls.TextBlock>.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-115">Currently, a text container must be either a <xref:System.Windows.Documents.FlowDocument> or a <xref:System.Windows.Controls.TextBlock>.</span></span>  <span data-ttu-id="f1fa2-116">В целом, операции между <xref:System.Windows.Documents.TextPointer> экземпляров в разных текстовых контейнеров не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-116">Generally speaking, operations between <xref:System.Windows.Documents.TextPointer> instances in different text containers are not supported.</span></span>  
  
-   <span data-ttu-id="f1fa2-117">Документ - содержимое в текстовом контейнере называется *документа*, как в <xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A> метод и <xref:System.Windows.Documents.TextPointer.DocumentStart%2A> и <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-117">Document - The content in a text container is referred to as a *document*, as in the <xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A> method and the <xref:System.Windows.Documents.TextPointer.DocumentStart%2A> and <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A> properties.</span></span>  
  
 <span data-ttu-id="f1fa2-118"><xref:System.Windows.Documents.TextPointer> Класс предназначен для упрощения обхода и обработки содержимого, представленного [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] элементы растягиваемого содержимого; как правило, такие элементы являются производными от <xref:System.Windows.Documents.TextElement>.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-118">The <xref:System.Windows.Documents.TextPointer> class is intended to facilitate traversal and manipulation of content that is represented by [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] flow content elements; in general, such elements derive from <xref:System.Windows.Documents.TextElement>.</span></span>  <span data-ttu-id="f1fa2-119">Некоторые операции, <xref:System.Windows.Documents.TextPointer> облегчает включают следующее:</span><span class="sxs-lookup"><span data-stu-id="f1fa2-119">Some of the operations that <xref:System.Windows.Documents.TextPointer> facilitates include the following:</span></span>  
  
-   <span data-ttu-id="f1fa2-120">Выполняют порядковое сравнение текущей позиции со второй указанной позиции.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-120">Perform an ordinal comparison of the current position with a second specified position.</span></span>  <span data-ttu-id="f1fa2-121">См. в разделе <xref:System.Windows.Documents.TextPointer.CompareTo%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-121">See the <xref:System.Windows.Documents.TextPointer.CompareTo%2A> method.</span></span>  
  
-   <span data-ttu-id="f1fa2-122">Определите тип содержимого, примыкающего к текущей позиции в указанном направлении.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-122">Determine the type of content adjacent to the current position in a specified direction.</span></span>  <span data-ttu-id="f1fa2-123">См. в разделе <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> метод и <xref:System.Windows.Documents.TextPointerContext> перечисления.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-123">See the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method and <xref:System.Windows.Documents.TextPointerContext> enumeration.</span></span>  
  
-   <span data-ttu-id="f1fa2-124">Получить <xref:System.Windows.Documents.TextElement> , определяющий область или Примыкает к текущей позиции.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-124">Get the <xref:System.Windows.Documents.TextElement> that scopes or is adjacent to the current position.</span></span>  <span data-ttu-id="f1fa2-125">См. в разделе <xref:System.Windows.Documents.Paragraph> и <xref:System.Windows.Documents.TextPointer.GetAdjacentElement%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-125">See <xref:System.Windows.Documents.Paragraph> and the <xref:System.Windows.Documents.TextPointer.GetAdjacentElement%2A> method.</span></span>  
  
-   <span data-ttu-id="f1fa2-126">Получение контейнера текста, определяющий область текущего документа.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-126">Get the text container that scopes the current document.</span></span>  <span data-ttu-id="f1fa2-127">См. свойство <xref:System.Windows.Documents.TextPointer.Parent%2A>.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-127">See the <xref:System.Windows.Documents.TextPointer.Parent%2A> property.</span></span>  
  
-   <span data-ttu-id="f1fa2-128">Получите указанное количество символов перед или после текущей позиции.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-128">Get a specified number of characters preceding or following the current position.</span></span>  <span data-ttu-id="f1fa2-129">См. в разделе <xref:System.Windows.Documents.TextPointer.GetTextInRun%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-129">See the <xref:System.Windows.Documents.TextPointer.GetTextInRun%2A> method.</span></span>  
  
-   <span data-ttu-id="f1fa2-130">Вставьте строку символов в текущей позиции.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-130">Insert a string of characters at the current position.</span></span>  <span data-ttu-id="f1fa2-131">См. в разделе <xref:System.Windows.Documents.TextPointer.InsertTextInRun%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-131">See the <xref:System.Windows.Documents.TextPointer.InsertTextInRun%2A> method.</span></span>  
  
-   <span data-ttu-id="f1fa2-132">Поиск границ строки в содержимом.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-132">Find line boundaries in content.</span></span>  <span data-ttu-id="f1fa2-133">См. в разделе <xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A> метод и <xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-133">See the <xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A> method and <xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A> property.</span></span>  
  
-   <span data-ttu-id="f1fa2-134">Преобразование между <xref:System.Windows.Documents.TextPointer> позиции и знака смещения в содержимое.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-134">Translate between <xref:System.Windows.Documents.TextPointer> positions and symbol offsets into content.</span></span>  <span data-ttu-id="f1fa2-135">См. в разделе <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> и <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-135">See the <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> and <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> methods.</span></span>  
  
-   <span data-ttu-id="f1fa2-136">Проверка visual нажатия путем преобразования между <xref:System.Windows.Documents.TextPointer> позиции и <xref:System.Windows.Point> представляющий относительные координаты.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-136">Perform visual hit testing by translating between a <xref:System.Windows.Documents.TextPointer> position and a <xref:System.Windows.Point> representing relative coordinates.</span></span>  
  
-   <span data-ttu-id="f1fa2-137">Поиск ближайшего положения вставки и проверьте, является ли текущее положение является положением вставки.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-137">Find a nearby insertion position, or check whether the current position is an insertion position.</span></span>  <span data-ttu-id="f1fa2-138">См. в разделе <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> и <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A> методы и <xref:System.Windows.Documents.TextPointer.IsAtInsertionPosition%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-138">See the <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> and <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A> methods and the <xref:System.Windows.Documents.TextPointer.IsAtInsertionPosition%2A> property.</span></span>  
  
 <span data-ttu-id="f1fa2-139">Положение и <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> обозначается <xref:System.Windows.Documents.TextPointer> объекта являются неизменяемыми.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-139">The position and <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> indicated by a <xref:System.Windows.Documents.TextPointer> object are immutable.</span></span>  <span data-ttu-id="f1fa2-140">Если редактируется или изменения позиции, указанной проверкой содержимого <xref:System.Windows.Documents.TextPointer> остается неизменным по отношению к окружающим его текстом; скорее смещение, с самого начала содержимого соответствующим образом корректируется, чтобы отразить новое относительное положение в содержимое.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-140">When content is edited or modified, the position indicated by a <xref:System.Windows.Documents.TextPointer> does not change relative to the surrounding text; rather the offset of that position from the beginning of content is adjusted correspondingly to reflect the new relative position in content.</span></span>  <span data-ttu-id="f1fa2-141">Например <xref:System.Windows.Documents.TextPointer> , указывающий положение в начале данного абзаца продолжает указывать на начало данного абзаца, даже в том случае, если содержимое вставляется или удаляется до или после абзаца.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-141">For example, a <xref:System.Windows.Documents.TextPointer> that indicates a position at the beginning of a given paragraph continues to point to the beginning of that paragraph even when content is inserted or deleted before or after the paragraph.</span></span>  
  
 <span data-ttu-id="f1fa2-142"><xref:System.Windows.Documents.TextPointer> Класс не предоставляет все открытые конструкторы.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-142">The <xref:System.Windows.Documents.TextPointer> class does not provide any public constructors.</span></span>  <span data-ttu-id="f1fa2-143">Экземпляр <xref:System.Windows.Documents.TextPointer> создается с помощью свойств или методов других объектов (включая другие <xref:System.Windows.Documents.TextPointer> объекты).</span><span class="sxs-lookup"><span data-stu-id="f1fa2-143">An instance of <xref:System.Windows.Documents.TextPointer> is created by using properties or methods of other objects (including other <xref:System.Windows.Documents.TextPointer> objects).</span></span> <span data-ttu-id="f1fa2-144">В следующем списке приведены несколько примеров методов и свойств, которые создают и возвращают <xref:System.Windows.Documents.TextPointer>.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-144">The following list provides a few examples of methods and properties that create and return a <xref:System.Windows.Documents.TextPointer>.</span></span>  <span data-ttu-id="f1fa2-145">Этот список не является исчерпывающим.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-145">This list is not exhaustive:</span></span>  
  
-   <span data-ttu-id="f1fa2-146">Из <xref:System.Windows.Documents.TextRange>: <xref:System.Windows.Documents.TextRange.Start%2A> и <xref:System.Windows.Documents.TextRange.End%2A>.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-146">From a <xref:System.Windows.Documents.TextRange>: <xref:System.Windows.Documents.TextRange.Start%2A> and <xref:System.Windows.Documents.TextRange.End%2A>.</span></span>  
  
-   <span data-ttu-id="f1fa2-147">Из <xref:System.Windows.Documents.TextElement>: <xref:System.Windows.Documents.TextElement.ContentStart%2A>, <xref:System.Windows.Documents.TextElement.ContentEnd%2A>, <xref:System.Windows.Documents.TextElement.ElementStart%2A>, и <xref:System.Windows.Documents.TextElement.ElementEnd%2A>.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-147">From a <xref:System.Windows.Documents.TextElement>:  <xref:System.Windows.Documents.TextElement.ContentStart%2A>, <xref:System.Windows.Documents.TextElement.ContentEnd%2A>, <xref:System.Windows.Documents.TextElement.ElementStart%2A>, and <xref:System.Windows.Documents.TextElement.ElementEnd%2A>.</span></span>  
  
-   <span data-ttu-id="f1fa2-148">Из <xref:System.Windows.Controls.TextBlock> (текстового контейнера): <xref:System.Windows.Controls.TextBlock.ContentStart%2A>, <xref:System.Windows.Controls.TextBlock.ContentEnd%2A>, и <xref:System.Windows.Controls.TextBlock.GetPositionFromPoint%2A>.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-148">From a <xref:System.Windows.Controls.TextBlock> (text container): <xref:System.Windows.Controls.TextBlock.ContentStart%2A>, <xref:System.Windows.Controls.TextBlock.ContentEnd%2A>, and <xref:System.Windows.Controls.TextBlock.GetPositionFromPoint%2A>.</span></span>  
  
-   <span data-ttu-id="f1fa2-149">Из <xref:System.Windows.Documents.FlowDocument> (текстового контейнера): <xref:System.Windows.Documents.FlowDocument.ContentStart%2A>, и <xref:System.Windows.Documents.FlowDocument.ContentEnd%2A></span><span class="sxs-lookup"><span data-stu-id="f1fa2-149">From a <xref:System.Windows.Documents.FlowDocument> (text container): <xref:System.Windows.Documents.FlowDocument.ContentStart%2A>, and <xref:System.Windows.Documents.FlowDocument.ContentEnd%2A></span></span>  
  
-   <span data-ttu-id="f1fa2-150">Из существующего <xref:System.Windows.Documents.TextPointer>: <xref:System.Windows.Documents.TextPointer.DocumentStart%2A>, <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A>, <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A>, и <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A>.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-150">From an existing <xref:System.Windows.Documents.TextPointer>: <xref:System.Windows.Documents.TextPointer.DocumentStart%2A>, <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A>, <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A>, and <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1fa2-151">Следующий пример демонстрирует, как использовать <xref:System.Windows.Documents.TextPointer> для поиска положения только внутри первого <xref:System.Windows.Documents.Run> элемента в контейнере заданным текстом.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-151">The following example demonstrates how to use a <xref:System.Windows.Documents.TextPointer> to find a position just inside of the first <xref:System.Windows.Documents.Run> element in a specified text container.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_TextPointer1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_textpointer1)]
 [!code-vb[TextPointer_Snippets#_TextPointer_TextPointer1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_textpointer1)]  
  
 <span data-ttu-id="f1fa2-152">В следующем примере реализуется алгоритм упрощенный поиск с помощью <xref:System.Windows.Documents.TextPointer> средства.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-152">The following example implements a simplistic find algorithm using <xref:System.Windows.Documents.TextPointer> facilities.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_TextPointer2](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_textpointer2)]
 [!code-vb[TextPointer_Snippets#_TextPointer_TextPointer2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_textpointer2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Documents.TextRange" />
    <altmember cref="T:System.Windows.Documents.TextPointerContext" />
    <altmember cref="T:System.Windows.Documents.TextElement" />
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (System.Windows.Documents.TextPointer position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CompareTo(class System.Windows.Documents.TextPointer position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.CompareTo(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (position As TextPointer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::Windows::Documents::TextPointer ^ position);" />
      <MemberSignature Language="F#" Value="member this.CompareTo : System.Windows.Documents.TextPointer -&gt; int" Usage="textPointer.CompareTo position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="f1fa2-153"><see cref="T:System.Windows.Documents.TextPointer" />, который указывает положение для сравнения с текущим положением.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-153">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to compare to the current position.</span></span></param>
        <summary><span data-ttu-id="f1fa2-154">Выполнение порядкового сравнения между положениями, указанными текущим <see cref="T:System.Windows.Documents.TextPointer" /> и вторым указанным <see cref="T:System.Windows.Documents.TextPointer" />.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-154">Performs an ordinal comparison between the positions specified by the current <see cref="T:System.Windows.Documents.TextPointer" /> and a second specified <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></summary>
        <returns><span data-ttu-id="f1fa2-155">-1 если текущий <see cref="T:System.Windows.Documents.TextPointer" /> предшествует <paramref name="position" />; 0 если расположения те же; +1 если текущий <see cref="T:System.Windows.Documents.TextPointer" /> следует за <paramref name="position" />.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-155">-1 if the current <see cref="T:System.Windows.Documents.TextPointer" /> precedes <paramref name="position" />; 0 if the locations are the same; +1 if the current <see cref="T:System.Windows.Documents.TextPointer" /> follows <paramref name="position" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1fa2-156">Значение -1 указывает, что указанное положение в текущем <xref:System.Windows.Documents.TextPointer> предшествует позиции, заданной параметром `position`.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-156">A value of -1 indicates that the position specified by the current <xref:System.Windows.Documents.TextPointer> precedes the position specified by `position`.</span></span>  <span data-ttu-id="f1fa2-157">Значение 0 указывает, что указанные положения равны.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-157">A value of 0 indicates that the indicated positions are equal.</span></span>  <span data-ttu-id="f1fa2-158">Значение положительное + 1 указывает, что указанное положение в текущем <xref:System.Windows.Documents.TextPointer> следует за позицией, заданной параметром `position`.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-158">A value of positive +1 indicates that the position specified by the current <xref:System.Windows.Documents.TextPointer> follows the position specified by `position`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1fa2-159">Ниже приведен пример использования этого метода.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-159">The following example demonstrates a use for this method.</span></span>  <span data-ttu-id="f1fa2-160">В примере <xref:System.Windows.Documents.TextPointer.CompareTo%2A> метод используется в сочетании с <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> метод для проверки, действительно ли заданное <xref:System.Windows.Documents.TextElement> пуст.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-160">In the example, the <xref:System.Windows.Documents.TextPointer.CompareTo%2A> method is used in conjunction with the <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> method to test whether a specified <xref:System.Windows.Documents.TextElement> is empty.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getinsertionposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getinsertionposition)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f1fa2-161"><paramref name="position" /> указывает положение за пределами текстового контейнера, связанного с текущим положением.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-161"><paramref name="position" /> specifies a position outside of the text container associated with the current position.</span></span></exception>
        <altmember cref="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteTextInRun">
      <MemberSignature Language="C#" Value="public int DeleteTextInRun (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 DeleteTextInRun(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteTextInRun (count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int DeleteTextInRun(int count);" />
      <MemberSignature Language="F#" Value="member this.DeleteTextInRun : int -&gt; int" Usage="textPointer.DeleteTextInRun count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="f1fa2-162">Число символов, подлежащих удалению, начиная с текущего положения.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-162">The number of characters to delete, starting at the current position.</span></span> <span data-ttu-id="f1fa2-163">Укажите положительное значение, чтобы удалить символы, следующие за текущим положением; укажите отрицательное значение, чтобы удалить символы, предшествующие текущему положению.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-163">Specify a positive value to delete characters that follow the current position; specify a negative value to delete characters that precede the current position.</span></span></param>
        <summary><span data-ttu-id="f1fa2-164">Удаление указанного числа символов, начиная с положения, указанного текущим <see cref="T:System.Windows.Documents.TextPointer" />.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-164">Deletes the specified number of characters from the position indicated by the current <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></summary>
        <returns><span data-ttu-id="f1fa2-165">Число фактически удаленных символов.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-165">The number of characters actually deleted.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1fa2-166">Укажите положительное значение, чтобы удалить символы, следующие за текущей позиции (как в <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>); укажите отрицательное значение, чтобы удалить символы, предшествующие текущему положению (как в <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="f1fa2-166">Specify a positive value to delete characters that follow the current position (as in <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>); specify a negative value to delete characters that precede the current position (as in <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="f1fa2-167">Число фактически удаленных символов может быть меньше, чем указанное `count`.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-167">The number of characters actually deleted may be less than the number specified by `count`.</span></span>  <span data-ttu-id="f1fa2-168">Это происходит в случаях, где `count` указывает больше знаков, чем существует для удаления.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-168">This happens in cases where `count` specifies more characters than exist to be deleted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f1fa2-169">Метод вызывается в положении, для которого текст не разрешен.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-169">The method is called at a position where text is not allowed.</span></span></exception>
        <altmember cref="Overload:System.Windows.Documents.TextPointer.GetTextInRun" />
        <altmember cref="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DocumentEnd">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer DocumentEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.TextPointer DocumentEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.DocumentEnd" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentEnd As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::TextPointer ^ DocumentEnd { System::Windows::Documents::TextPointer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DocumentEnd : System.Windows.Documents.TextPointer" Usage="System.Windows.Documents.TextPointer.DocumentEnd" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f1fa2-170">Получение <see cref="T:System.Windows.Documents.TextPointer" /> в конце содержимого в текстовом контейнере, связанном с текущим положением.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-170">Gets a <see cref="T:System.Windows.Documents.TextPointer" /> at the end of content in the text container associated with the current position.</span></span></summary>
        <value><span data-ttu-id="f1fa2-171"><see cref="T:System.Windows.Documents.TextPointer" /> в конце содержимого в текстовом контейнере, связанном с текущим положением.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-171">A <see cref="T:System.Windows.Documents.TextPointer" /> at the end of content in the text container associated with the current position.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1fa2-172"><xref:System.Windows.Documents.TextPointer.Parent%2A> Для возвращенного <xref:System.Windows.Documents.TextPointer> всегда представляет собой текстовый контейнер (<xref:System.Windows.Controls.TextBlock> или <xref:System.Windows.Documents.FlowDocument>), а не <xref:System.Windows.Documents.TextElement>.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-172">The <xref:System.Windows.Documents.TextPointer.Parent%2A> for the returned <xref:System.Windows.Documents.TextPointer> is always a text container (<xref:System.Windows.Controls.TextBlock> or <xref:System.Windows.Documents.FlowDocument>), rather than a <xref:System.Windows.Documents.TextElement>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.DocumentStart" />
      </Docs>
    </Member>
    <Member MemberName="DocumentStart">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer DocumentStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.TextPointer DocumentStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.DocumentStart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentStart As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::TextPointer ^ DocumentStart { System::Windows::Documents::TextPointer ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DocumentStart : System.Windows.Documents.TextPointer" Usage="System.Windows.Documents.TextPointer.DocumentStart" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f1fa2-173">Получение <see cref="T:System.Windows.Documents.TextPointer" /> в начале содержимого в текстовом контейнере, связанном с текущим положением.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-173">Gets a <see cref="T:System.Windows.Documents.TextPointer" /> at the beginning of content in the text container associated with the current position.</span></span></summary>
        <value><span data-ttu-id="f1fa2-174"><see cref="T:System.Windows.Documents.TextPointer" /> в начале содержимого в текстовом контейнере, связанном с текущим положением.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-174">A <see cref="T:System.Windows.Documents.TextPointer" /> at the beginning of content in the text container associated with the current position.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1fa2-175">Используйте позицию, возвращаемого данным свойством, в качестве базового положения, из которого необходимо применить смещения в другое место.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-175">Use the position returned by this property as a baseline position from which to work with relative offsets to other positions.</span></span>  <span data-ttu-id="f1fa2-176"><xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> И <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> методы предоставляют способ преобразования между положениями и позиции смещения.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-176">The <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> and <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> methods provide a way to translate between positions and position offsets.</span></span>  
  
 <span data-ttu-id="f1fa2-177"><xref:System.Windows.Documents.TextPointer.Parent%2A> Для возвращенного <xref:System.Windows.Documents.TextPointer> всегда представляет собой текстовый контейнер (<xref:System.Windows.Controls.TextBlock> или <xref:System.Windows.Documents.FlowDocument>), а не <xref:System.Windows.Documents.TextElement>.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-177">The <xref:System.Windows.Documents.TextPointer.Parent%2A> for the returned <xref:System.Windows.Documents.TextPointer> is always a text container (<xref:System.Windows.Controls.TextBlock> or <xref:System.Windows.Documents.FlowDocument>), rather than a <xref:System.Windows.Documents.TextElement>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.DocumentEnd" />
      </Docs>
    </Member>
    <Member MemberName="GetAdjacentElement">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject GetAdjacentElement (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.DependencyObject GetAdjacentElement(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetAdjacentElement(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAdjacentElement (direction As LogicalDirection) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::DependencyObject ^ GetAdjacentElement(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetAdjacentElement : System.Windows.Documents.LogicalDirection -&gt; System.Windows.DependencyObject" Usage="textPointer.GetAdjacentElement direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="f1fa2-178">Одно из значений <see cref="T:System.Windows.Documents.LogicalDirection" />, которое указывает логическое направление, в котором осуществляется поиск примыкающих элементов.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-178">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for an adjacent element.</span></span></param>
        <summary><span data-ttu-id="f1fa2-179">Возвращение элемента, если таковой имеется, который граничит с текущим <see cref="T:System.Windows.Documents.TextPointer" /> в указанном логическом направлении.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-179">Returns the element, if any, that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="f1fa2-180">Примыкающий элемент в указанном <paramref name="direction" /> или <see langword="null" />, если не существует примыкающих элементов.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-180">The adjacent element in the specified <paramref name="direction" />, or <see langword="null" /> if no adjacent element exists.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1fa2-181">Возвращаемый элемент обычно является <xref:System.Windows.Documents.TextElement>.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-181">The returned element is typically a <xref:System.Windows.Documents.TextElement>.</span></span>  <span data-ttu-id="f1fa2-182">Объект <xref:System.Windows.UIElement> могут быть возвращены при <xref:System.Windows.Documents.TextPointer> указывает на позицию внутри <xref:System.Windows.Documents.BlockUIContainer> элемент или <xref:System.Windows.Documents.InlineUIContainer> элемент.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-182">A <xref:System.Windows.UIElement> can be returned when the <xref:System.Windows.Documents.TextPointer> indicates a position inside a <xref:System.Windows.Documents.BlockUIContainer> element or an <xref:System.Windows.Documents.InlineUIContainer> element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.Parent" />
      </Docs>
    </Member>
    <Member MemberName="GetCharacterRect">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetCharacterRect (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetCharacterRect(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCharacterRect (direction As LogicalDirection) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect GetCharacterRect(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetCharacterRect : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Rect" Usage="textPointer.GetCharacterRect direction" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="f1fa2-183">Одно из значений <see cref="T:System.Windows.Documents.LogicalDirection" />, задающее логическое направление, в котором осуществляется поиск ограничивающего прямоугольника содержимого.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-183">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find a content bounding box.</span></span></param>
        <summary><span data-ttu-id="f1fa2-184">Возвращение ограничивающего прямоугольника (<see cref="T:System.Windows.Rect" />) для содержимого, которое граничит с текущим <see cref="T:System.Windows.Documents.TextPointer" /> в указанном логическом направлении.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-184">Returns a bounding box (<see cref="T:System.Windows.Rect" />) for content that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="f1fa2-185">Ограничивающий прямоугольник для содержимого, которое граничит с текущим <see cref="T:System.Windows.Documents.TextPointer" /> в указанном направлении или <see cref="P:System.Windows.Rect.Empty" />, если текущая допустимая информация о структуре недоступна.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-185">A bounding box for content that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified direction, or <see cref="P:System.Windows.Rect.Empty" /> if current, valid layout information is unavailable.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1fa2-186"><xref:System.Windows.Documents.TextElement> границы не учитываются содержимого в рамках этого метода.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-186"><xref:System.Windows.Documents.TextElement> edges are not considered content for the purposes of this method.</span></span>  <span data-ttu-id="f1fa2-187">Если <xref:System.Windows.Documents.TextPointer> располагается перед <xref:System.Windows.Documents.TextElement> edge, возвращаемое значение — это ограничивающий прямоугольник для следующей отличных<xref:System.Windows.Documents.TextElement> содержимого в указанном направлении.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-187">If the <xref:System.Windows.Documents.TextPointer> is positioned before a <xref:System.Windows.Documents.TextElement> edge, the return value is a bounding box for the next non-<xref:System.Windows.Documents.TextElement> content in the specified direction.</span></span>  <span data-ttu-id="f1fa2-188">Если отсутствует в указанном направлении, нулевой ширины <xref:System.Windows.Rect> возвращается с высотой, совпадающей с высотой любого предыдущих содержимого.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-188">If there is no content in the specified direction, a zero-width <xref:System.Windows.Rect> is returned with a height matching the height of any preceding content.</span></span>  
  
 <span data-ttu-id="f1fa2-189">Операция, выполняемая этого метода зависит от допустимого макета.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-189">The operation performed by this method depends on a valid layout.</span></span>  <span data-ttu-id="f1fa2-190">При необходимости этот метод пытается автоматически повторно создать допустимый макет перед продолжением операции.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-190">When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="f1fa2-191">Повторное создание макета может быть довольно дорогой операцией.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-191">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="f1fa2-192">Используйте <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> свойство для проверки допустимого макета перед выполнением операций, которые могут заново создать макет.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-192">Use the <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> property to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="f1fa2-193">Дополнительные сведения см. в разделе [Макет](~/docs/framework/wpf/advanced/layout.md).</span><span class="sxs-lookup"><span data-stu-id="f1fa2-193">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.HasValidLayout" />
      </Docs>
    </Member>
    <Member MemberName="GetInsertionPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetInsertionPosition (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetInsertionPosition(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertionPosition (direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetInsertionPosition(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetInsertionPosition : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetInsertionPosition direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="f1fa2-194">Одно из значений <see cref="T:System.Windows.Documents.LogicalDirection" />, которое указывает логическое направление, в котором осуществляется поиск ближайшего положения вставки.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-194">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the closest insertion position.</span></span></param>
        <summary><span data-ttu-id="f1fa2-195">Возвращение <see cref="T:System.Windows.Documents.TextPointer" /> к ближайшему положению вставки в заданном логическом направлении.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-195">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the closest insertion position in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="f1fa2-196"><see cref="T:System.Windows.Documents.TextPointer" /> к ближайшему положению вставки в заданном направлении.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-196">A <see cref="T:System.Windows.Documents.TextPointer" /> to the closest insertion position in the specified direction.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1fa2-197">Положение вставки — положение, где может быть добавлено новое содержимое без нарушения любой семантических правил для соответствующего содержимого.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-197">An insertion position is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="f1fa2-198">На практике положение вставки — где угодно в содержимом, где можно расположить курсор.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-198">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="f1fa2-199">Пример допустимого <xref:System.Windows.Documents.TextPointer> , не является положением вставки — положение между двумя смежные <xref:System.Windows.Documents.Paragraph> теги (т. е между закрывающий тег выше и открывающий тег следующего абзаца).</span><span class="sxs-lookup"><span data-stu-id="f1fa2-199">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
 <span data-ttu-id="f1fa2-200">Если <xref:System.Windows.Documents.TextPointer> уже указывает на допустимое положение вставки, но закрывающий тег для последовательности форматирования пустым, непосредственно следующий за этой позиции в заданном направлении, то <xref:System.Windows.Documents.TextPointer> возвращает этот метод корректируется для вставки положение сразу после закрытия последовательности форматирования.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-200">If the <xref:System.Windows.Documents.TextPointer> already points to a valid insertion position, but the closing tag for a non-empty formatting sequence directly follows that position in the given direction, then the <xref:System.Windows.Documents.TextPointer> returned by this method is adjusted to point to the insertion position just after the close of the formatting sequence.</span></span> <span data-ttu-id="f1fa2-201">Например, рассмотрим последовательность разметки `<Bold>a</Bold>b`.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-201">For example, consider the markup sequence `<Bold>a</Bold>b`.</span></span> <span data-ttu-id="f1fa2-202">Обратите внимание, что две позиции вставки между буквами `a` и `b` -одна, которая предшествует закрывающий `Bold` тег и один — сразу после закрытия `Bold` тега.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-202">Note that there are two insertion positions between the letters `a` and `b` - one that precedes the closing `Bold` tag, and one directly following the closing `Bold` tag.</span></span> <span data-ttu-id="f1fa2-203">Если <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> вызывается для <xref:System.Windows.Documents.TextPointer> на позицию непосредственно за буквой `a` и до закрытия `Bold` тег и с `direction` из <xref:System.Windows.Documents.LogicalDirection.Forward>, возвращенный <xref:System.Windows.Documents.TextPointer> корректируется для Позиция непосредственно перед буквой `b`, после закрывающего `Bold` тега.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-203">If <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> is called on a <xref:System.Windows.Documents.TextPointer> to the position directly after the letter `a` and before of the closing `Bold` tag, and with a `direction` of <xref:System.Windows.Documents.LogicalDirection.Forward>, the returned <xref:System.Windows.Documents.TextPointer> is adjusted to point to the position just before the letter `b`, after the closing `Bold` tag.</span></span> <span data-ttu-id="f1fa2-204">Аналогичные корректировки выполняются для открывающих тегов форматирования при работе в противоположном логическом направлении.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-204">A similar adjustment is made for opening formatting tags when working in the opposite logical direction.</span></span> <span data-ttu-id="f1fa2-205">Этот метод предназначен для предоставления средства для устранения неоднозначности между позициями вставки в подобных случаях.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-205">This method is intended to provide a means of disambiguation between insertion positions in similar cases.</span></span>  
  
 <span data-ttu-id="f1fa2-206">Этот метод также может использоваться при выборе точки вставки, если участвует последовательность структурных тегов.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-206">This method can also be used to be selective about insertion points when a sequence of structural tags is involved.</span></span> <span data-ttu-id="f1fa2-207">Например, если с позиции между закрытия и открытия тегов абзаца, параметр направления может использоваться для выберите ближайший курсор в начало следующего абзаца (путем указания <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>) или в конце предыдущего абзаца ( путем указания <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="f1fa2-207">For example, when at a position between closing and opening paragraph tags, the direction parameter can be used to select the closest insertion point at the beginning of the following paragraph (by specifying <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>) or at the end of the preceding paragraph (by specifying <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="f1fa2-208">Если курсор уже находится в позиции курсора, и нет соседних форматирования тегов в указанном `direction`, возвращенный <xref:System.Windows.Documents.TextPointer> указывает на той же позиции, что и у вызывающего <xref:System.Windows.Documents.TextPointer>.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-208">If the pointer is already at insertion position, and there are no adjacent formatting tags in the specified `direction`, the returned <xref:System.Windows.Documents.TextPointer> points to the same position as the calling <xref:System.Windows.Documents.TextPointer>.</span></span>  
  
 <span data-ttu-id="f1fa2-209">Возможно, что нет допустимое положение вставки существует относительно позиции, на которые указывают <xref:System.Windows.Documents.TextPointer>.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-209">It is possible that no valid insertion position exists relative to the position pointed to by a <xref:System.Windows.Documents.TextPointer>.</span></span>  <span data-ttu-id="f1fa2-210">Это может произойти, если структурно неполные, как в пустую таблицу или список содержимого по ссылке.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-210">This can happen if the referenced content is structurally incomplete, as in an empty table or list.</span></span>  <span data-ttu-id="f1fa2-211">В таком случае этот метод возвращает <xref:System.Windows.Documents.TextPointer> к той же позиции, что <xref:System.Windows.Documents.TextPointer> из которого вызывался данный метод.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-211">In such cases, this method simply returns a <xref:System.Windows.Documents.TextPointer> to the same position as the <xref:System.Windows.Documents.TextPointer> from which this method was called.</span></span>  <span data-ttu-id="f1fa2-212">Этот метод всегда возвращает допустимый <xref:System.Windows.Documents.TextPointer>.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-212">This method always returns a valid <xref:System.Windows.Documents.TextPointer>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1fa2-213">В этом примере показано, как использовать <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> метод для проверки, действительно ли заданное <xref:System.Windows.Documents.TextElement> пуст печати содержимого.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-213">This example shows how to use the <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> method to check whether a specified <xref:System.Windows.Documents.TextElement> is empty of printable content.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getinsertionposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getinsertionposition)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLineStartPosition">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f1fa2-214">Возвращение <see cref="T:System.Windows.Documents.TextPointer" /> в начало строки, задаваемое относительно текущего <see cref="T:System.Windows.Documents.TextPointer" />.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-214">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLineStartPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetLineStartPosition (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetLineStartPosition(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineStartPosition (count As Integer) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetLineStartPosition(int count);" />
      <MemberSignature Language="F#" Value="member this.GetLineStartPosition : int -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetLineStartPosition count" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="f1fa2-215">Число маркеров начала строки, которые надо пропустить при определении строки, для которой требуется вернуть начальное положение.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-215">The number of start-of-line markers to skip when determining the line for which to return the starting position.</span></span> <span data-ttu-id="f1fa2-216">Отрицательные значения указывают предшествующие строки, 0 задает текущую строку, а положительные значения задают следующие строки.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-216">Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</span></span></param>
        <summary><span data-ttu-id="f1fa2-217">Возвращение <see cref="T:System.Windows.Documents.TextPointer" /> в начало строки, задаваемое относительно текущего <see cref="T:System.Windows.Documents.TextPointer" />.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-217">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></summary>
        <returns><span data-ttu-id="f1fa2-218"><see cref="T:System.Windows.Documents.TextPointer" />, указывающий на начало указанной строки (при том, что для <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> задано значение <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />), или <see langword="null" />, если указанная строка выходит за пределы диапазона или не может быть обнаружена иным способом.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-218">A <see cref="T:System.Windows.Documents.TextPointer" /> pointing to the beginning of the specified line (with the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> set to <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />), or <see langword="null" /> if the specified line is out of range or otherwise cannot be located.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1fa2-219">Если <xref:System.Windows.Documents.TextPointer> указывает неоднозначную позицию, например, между двумя строками в строке направление, заданное параметром <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> выбран в качестве относительного начальную строку.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-219">If the <xref:System.Windows.Documents.TextPointer> points to an ambiguous position, for example, between two lines, the line in the direction specified by <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> is selected as the relative starting line.</span></span>  
  
 <span data-ttu-id="f1fa2-220">Операция, выполняемая этого метода зависит от допустимого макета.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-220">The operation performed by this method depends on a valid layout.</span></span>  <span data-ttu-id="f1fa2-221">При необходимости этот метод пытается автоматически повторно создать допустимый макет перед продолжением операции.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-221">When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="f1fa2-222">Повторное создание макета может быть довольно дорогой операцией.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-222">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="f1fa2-223">Используйте <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> на наличие допустимого макета перед выполнением операций, которые могут заново создать макет.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-223">Use <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="f1fa2-224">Дополнительные сведения см. в разделе [Макет](~/docs/framework/wpf/advanced/layout.md).</span><span class="sxs-lookup"><span data-stu-id="f1fa2-224">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLineStartPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetLineStartPosition (int count, out int actualCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetLineStartPosition(int32 count, [out] int32&amp; actualCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineStartPosition (count As Integer, ByRef actualCount As Integer) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetLineStartPosition(int count, [Runtime::InteropServices::Out] int % actualCount);" />
      <MemberSignature Language="F#" Value="member this.GetLineStartPosition : int *  -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetLineStartPosition (count, actualCount)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="actualCount" Type="System.Int32" RefType="out" />
      </Parameters>
      <Docs>
        <param name="count"><span data-ttu-id="f1fa2-225">Число маркеров начала строки, которые надо пропустить при определении строки, для которой требуется вернуть начальное положение.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-225">The number of start-of-line markers to skip when determining the line for which to return the starting position.</span></span> <span data-ttu-id="f1fa2-226">Отрицательные значения указывают предшествующие строки, 0 задает текущую строку, а положительные значения задают следующие строки.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-226">Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</span></span></param>
        <param name="actualCount"><span data-ttu-id="f1fa2-227">При возврате данный метод включает фактическое число маркеров начала строки, которые были пропущены при определении строки, для которой возвращается начальное положение.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-227">When this method returns, contains the actual number of start-of-line markers that were skipped when determining the line for which to return the starting position.</span></span>  <span data-ttu-id="f1fa2-228">Данное значение может оказаться меньше <paramref name="count" />, если начало или конец содержимого обнаружен до того, как указанное число строк было пропущено.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-228">This value may be less than <paramref name="count" /> if the beginning or end of content is encountered before the specified number of lines are skipped.</span></span> <span data-ttu-id="f1fa2-229">Этот параметр передается неинициализированным.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-229">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="f1fa2-230">Возвращение <see cref="T:System.Windows.Documents.TextPointer" /> в начало строки, задаваемое относительно текущего <see cref="T:System.Windows.Documents.TextPointer" />, и создание отчета о числе пропущенных строк.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-230">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />, and reports how many lines were skipped.</span></span></summary>
        <returns><span data-ttu-id="f1fa2-231"><see cref="T:System.Windows.Documents.TextPointer" />, указывающий на начало указанной строки (при том, что для <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> задано значение <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />), или на начало строки, ближайшей к указанной строке, если указанная строка находится вне диапазона.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-231">A <see cref="T:System.Windows.Documents.TextPointer" /> pointing to the beginning of the specified line (with the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> set to <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />), or to the beginning of the line closest to the specified line if the specified line is out of range.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1fa2-232">Если <xref:System.Windows.Documents.TextPointer> указывает неоднозначную позицию, например, между двумя строками в строке направление, заданное параметром <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> было выбрано свойство как относительный начальную строку.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-232">If the <xref:System.Windows.Documents.TextPointer> points to an ambiguous position, for example, between two lines, the line in the direction specified by the <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> property is selected as the relative starting line.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextContextPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetNextContextPosition (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetNextContextPosition(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextContextPosition (direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetNextContextPosition(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetNextContextPosition : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetNextContextPosition direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="f1fa2-233">Одно из значений <see cref="T:System.Windows.Documents.LogicalDirection" />, которое указывает логическое направление, в котором осуществляется поиск следующего символа.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-233">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the next symbol.</span></span></param>
        <summary><span data-ttu-id="f1fa2-234">Возвращение указателя к следующему символу в указанном логическом направлении.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-234">Returns a pointer to the next symbol in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="f1fa2-235"><see cref="T:System.Windows.Documents.TextPointer" /> к следующему символу в требуемом направлении или <see langword="null" />, если текущий<see cref="T:System.Windows.Documents.TextPointer" /> граничит с началом или концом содержимого.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-235">A <see cref="T:System.Windows.Documents.TextPointer" /> to the next symbol in the requested direction, or <see langword="null" /> if the current <see cref="T:System.Windows.Documents.TextPointer" /> borders the start or end of content.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1fa2-236">Любое из следующих считается символа:</span><span class="sxs-lookup"><span data-stu-id="f1fa2-236">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="f1fa2-237">Открывающего или закрывающего тега для <xref:System.Windows.Documents.TextElement> элемент.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-237">An opening or closing tag for a <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="f1fa2-238">Объект <xref:System.Windows.UIElement> элемента, содержащегося в <xref:System.Windows.Documents.InlineUIContainer> или <xref:System.Windows.Documents.BlockUIContainer>.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-238">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="f1fa2-239">Примечание такие <xref:System.Windows.UIElement> всегда считается как один символ; любое дополнительное содержимое или элементы, содержащиеся в <xref:System.Windows.UIElement> , не рассматриваются как символы.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-239">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="f1fa2-240">16-разрядное [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] символа внутри текстового <xref:System.Windows.Documents.Run> элемент.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-240">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
 <span data-ttu-id="f1fa2-241">Если к следующему символу категории <xref:System.Windows.Documents.TextPointerContext.EmbeddedElement>, <xref:System.Windows.Documents.TextPointerContext.ElementStart>, или <xref:System.Windows.Documents.TextPointerContext.ElementEnd> (, который идентифицируется <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> метод), то <xref:System.Windows.Documents.TextPointer> возвращает этот метод перемещается вперед ровно один символ из текущей позиции.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-241">If the next symbol is categorized as <xref:System.Windows.Documents.TextPointerContext.EmbeddedElement>, <xref:System.Windows.Documents.TextPointerContext.ElementStart>, or <xref:System.Windows.Documents.TextPointerContext.ElementEnd> (as identified by the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method), then the <xref:System.Windows.Documents.TextPointer> returned by this method is advanced by exactly one symbol from the current position.</span></span>  
  
 <span data-ttu-id="f1fa2-242">Если отнесенным к следующему символу <xref:System.Windows.Documents.TextPointerContext.Text>, то <xref:System.Windows.Documents.TextPointer> возвращает этот метод является превышающими текст к следующему символу нетекстовых (то есть следующей позиции <xref:System.Windows.Documents.TextPointerContext> не <xref:System.Windows.Documents.TextPointerContext.Text>).</span><span class="sxs-lookup"><span data-stu-id="f1fa2-242">If the next symbol is categorized as <xref:System.Windows.Documents.TextPointerContext.Text>, then the <xref:System.Windows.Documents.TextPointer> returned by this method is advanced past the text to the next non-text symbol (that is, the next position where the <xref:System.Windows.Documents.TextPointerContext> is not <xref:System.Windows.Documents.TextPointerContext.Text>).</span></span>  <span data-ttu-id="f1fa2-243">Символ точное число пересекаемых можно вычислить заранее путем вызова <xref:System.Windows.Documents.TextPointer.GetTextRunLength%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-243">The exact symbol count crossed can be calculated in advance by calling the <xref:System.Windows.Documents.TextPointer.GetTextRunLength%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1fa2-244">Ниже приведен пример использования этого метода.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-244">The following example demonstrates a use for this method.</span></span>  <span data-ttu-id="f1fa2-245">В примере используется <xref:System.Windows.Documents.TextPointer.GetNextContextPosition%2A> в сочетании с <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> метод для перехода и извлеките символов в указанном <xref:System.Windows.Documents.TextElement>.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-245">The example uses the <xref:System.Windows.Documents.TextPointer.GetNextContextPosition%2A> method in conjunction with the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method to traverse and extract the symbols in a specified <xref:System.Windows.Documents.TextElement>.</span></span>  
  
 <span data-ttu-id="f1fa2-246">Хотя приведенный пример можно использовать для извлечения [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] структуры для содержимого заданного <xref:System.Windows.Documents.TextElement>, он предназначен только для иллюстративных целей и не следует использовать в рабочем коде.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-246">While the example can be used to extract a [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] structure for the contents of a given <xref:System.Windows.Documents.TextElement>, it is intended for illustrative purposes only, and should not be used in production code.</span></span>  <span data-ttu-id="f1fa2-247">См. в разделе <xref:System.Xml> пространство имен для широкий набор типов, предназначенных для работы с и обработки XML.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-247">See the <xref:System.Xml> namespace for a rich set of types designed for working with and processing XML.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetNextContextPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getnextcontextposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetNextContextPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getnextcontextposition)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextInsertionPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetNextInsertionPosition (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetNextInsertionPosition(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextInsertionPosition (direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetNextInsertionPosition(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetNextInsertionPosition : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetNextInsertionPosition direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="f1fa2-248">Одно из значений <see cref="T:System.Windows.Documents.LogicalDirection" />, которое указывает логическое направление, в котором осуществляется поиск следующего положения вставки.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-248">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the next insertion position.</span></span></param>
        <summary><span data-ttu-id="f1fa2-249">Возвращение <see cref="T:System.Windows.Documents.TextPointer" /> к следующему положению вставки в указанном логическом направлении.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-249">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the next insertion position in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="f1fa2-250"><see cref="T:System.Windows.Documents.TextPointer" />, который определяет следующее положение вставки в запрошенном направлении или <see langword="null" />, если невозможно найти следующее положение вставки.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-250">A <see cref="T:System.Windows.Documents.TextPointer" /> that identifies the next insertion position in the requested direction, or <see langword="null" /> if no next insertion position can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1fa2-251">*Позицию вставки* является позицией, где может быть добавлено новое содержимое без нарушения любой семантических правил для соответствующего содержимого.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-251">An *insertion position* is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="f1fa2-252">На практике положение вставки — где угодно в содержимом, где можно расположить курсор.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-252">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="f1fa2-253">Пример допустимого <xref:System.Windows.Documents.TextPointer> , не является положением вставки — положение между двумя смежные <xref:System.Windows.Documents.Paragraph> теги (т. е между закрывающий тег выше и открывающий тег следующего абзаца).</span><span class="sxs-lookup"><span data-stu-id="f1fa2-253">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1fa2-254">Ниже приведен пример использования этого метода.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-254">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="f1fa2-255">В примере используется <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A> метод для обхода границы элемента содержимого, чтобы подсчитать количество <xref:System.Windows.Documents.Paragraph> элементы имеются между двумя заданными <xref:System.Windows.Documents.TextPointer> экземпляров.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-255">The example uses the <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A> method to traverse content element boundaries in order to count the number of <xref:System.Windows.Documents.Paragraph> elements present between two specified <xref:System.Windows.Documents.TextPointer> instances.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetNextInsertionPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getnextinsertionposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetNextInsertionPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getnextinsertionposition)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      </Docs>
    </Member>
    <Member MemberName="GetOffsetToPosition">
      <MemberSignature Language="C#" Value="public int GetOffsetToPosition (System.Windows.Documents.TextPointer position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetOffsetToPosition(class System.Windows.Documents.TextPointer position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOffsetToPosition (position As TextPointer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetOffsetToPosition(System::Windows::Documents::TextPointer ^ position);" />
      <MemberSignature Language="F#" Value="member this.GetOffsetToPosition : System.Windows.Documents.TextPointer -&gt; int" Usage="textPointer.GetOffsetToPosition position" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="position"><span data-ttu-id="f1fa2-256"><see cref="T:System.Windows.Documents.TextPointer" />, который задает положение, до которо٠надо найти расстояние (в символах).</span><span class="sxs-lookup"><span data-stu-id="f1fa2-256">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to find the distance (in symbols) to.</span></span></param>
        <summary><span data-ttu-id="f1fa2-257">Возвращение числа символов между текущим <see cref="T:System.Windows.Documents.TextPointer" /> и вторым указанным <see cref="T:System.Windows.Documents.TextPointer" />.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-257">Returns the count of symbols between the current <see cref="T:System.Windows.Documents.TextPointer" /> and a second specified <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></summary>
        <returns><span data-ttu-id="f1fa2-258">Относительное число символов между текущим <see cref="T:System.Windows.Documents.TextPointer" /> и <paramref name="position" />.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-258">The relative number of symbols between the current <see cref="T:System.Windows.Documents.TextPointer" /> and <paramref name="position" />.</span></span>  <span data-ttu-id="f1fa2-259">Отрицательное значение показывает, что текущий <see cref="T:System.Windows.Documents.TextPointer" /> следует за положением, заданным <paramref name="position" />, 0 означает, что положения равны, а положительное значение показывает, что текущий <see cref="T:System.Windows.Documents.TextPointer" /> предшествует положению, указанному <paramref name="position" />.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-259">A negative value indicates that the current <see cref="T:System.Windows.Documents.TextPointer" /> follows the position specified by <paramref name="position" />, 0 indicates that the positions are equal, and a positive value indicates that the current <see cref="T:System.Windows.Documents.TextPointer" /> precedes the position specified by <paramref name="position" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1fa2-260">Любое из следующих считается символа:</span><span class="sxs-lookup"><span data-stu-id="f1fa2-260">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="f1fa2-261">Открывающего или закрывающего тега для <xref:System.Windows.Documents.TextElement> элемент.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-261">An opening or closing tag for a <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="f1fa2-262">Объект <xref:System.Windows.UIElement> элемента, содержащегося в <xref:System.Windows.Documents.InlineUIContainer> или <xref:System.Windows.Documents.BlockUIContainer>.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-262">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="f1fa2-263">Примечание такие <xref:System.Windows.UIElement> всегда считается как один символ; любое дополнительное содержимое или элементы, содержащиеся в <xref:System.Windows.UIElement> , не рассматриваются как символы.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-263">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="f1fa2-264">16-разрядное [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] символа внутри текстового <xref:System.Windows.Documents.Run> элемент.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-264">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1fa2-265">Ниже приведен пример использования этого метода.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-265">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="f1fa2-266">В примере используется <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> способ поиска смещений для двух <xref:System.Windows.Documents.TextPointer> экземпляров, а затем использует эти сведения для сохранения и восстановления в разделе <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-266">The example uses the <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> method to find the offsets for two <xref:System.Windows.Documents.TextPointer> instances, and then uses this information to save and restore the selection in a <xref:System.Windows.Controls.RichTextBox>.</span></span>  <span data-ttu-id="f1fa2-267">Предполагается, что содержимое <xref:System.Windows.Controls.RichTextBox> не изменились между версией выбора сохранения и восстановления выбора.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-267">The example assumes that the contents of the <xref:System.Windows.Controls.RichTextBox> have not changed between a selection save and a selection restore.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetOffsetToPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getoffsettoposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetOffsetToPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getoffsettoposition)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f1fa2-268"><paramref name="position" /> указывает положение за пределами текстового контейнера, связанного с текущим положением.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-268"><paramref name="position" /> specifies a position outside of the text container associated with the current position.</span></span></exception>
        <altmember cref="Overload:System.Windows.Documents.TextPointer.GetPositionAtOffset" />
        <altmember cref="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <Member MemberName="GetPointerContext">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointerContext GetPointerContext (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Documents.TextPointerContext GetPointerContext(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPointerContext (direction As LogicalDirection) As TextPointerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointerContext GetPointerContext(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetPointerContext : System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointerContext" Usage="textPointer.GetPointerContext direction" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointerContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="f1fa2-269">Одно из значений <see cref="T:System.Windows.Documents.LogicalDirection" />, которое указывает логическое направление, в котором необходимо определить категорию примыкающего содержимого.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-269">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to determine the category for adjacent content.</span></span></param>
        <summary><span data-ttu-id="f1fa2-270">Возвращение индикатора категории для содержимого, примыкающего к текущему <see cref="T:System.Windows.Documents.TextPointer" /> в указанном логическом направлении.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-270">Returns a category indicator for the content adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="f1fa2-271">Одно из значений <see cref="T:System.Windows.Documents.TextPointerContext" />, которое определяет категорию примыкающего содержимого в указанном логическом направлении.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-271">One of the <see cref="T:System.Windows.Documents.TextPointerContext" /> values that indicates the category for adjacent content in the specified logical direction.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="f1fa2-272">Ниже приведен пример использования этого метода.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-272">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="f1fa2-273">В примере используется <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> метод, чтобы реализовать алгоритм для расчета баланса открывающих и закрывающих тегов элементов между двумя заданными <xref:System.Windows.Documents.TextPointer> позиций.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-273">The example uses the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method to implement an algorithm for calculating the balance of opening and closing element tags between two specified <xref:System.Windows.Documents.TextPointer> positions.</span></span>  <span data-ttu-id="f1fa2-274">Каждый открывающий тег элемента считается равно + 1, а для каждого закрывающий тег элемента считается как -1.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-274">Each opening element tag is counted as +1, and each closing element tag is counted as -1.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetOffsetToPosition2](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getoffsettoposition2)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetOffsetToPosition2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getoffsettoposition2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPositionAtOffset">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f1fa2-275">Возвращение <see cref="T:System.Windows.Documents.TextPointer" /> в положение, указанное заданным смещением в символах от начала содержимого.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-275">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of content.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPositionAtOffset">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetPositionAtOffset (int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetPositionAtOffset(int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPositionAtOffset (offset As Integer) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetPositionAtOffset(int offset);" />
      <MemberSignature Language="F#" Value="member this.GetPositionAtOffset : int -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetPositionAtOffset offset" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="f1fa2-276">Смещение (в символах) на которое необходимо рассчитывать и возвращать положение.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-276">An offset, in symbols, for which to calculate and return the position.</span></span>  <span data-ttu-id="f1fa2-277">Если смещение отрицательное, положение рассчитывается в логическом направлении, противоположном заданному свойством <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" />.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-277">If the offset is negative, the position is calculated in the logical direction opposite of that indicated by the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> property.</span></span></param>
        <summary><span data-ttu-id="f1fa2-278">Возвращение <see cref="T:System.Windows.Documents.TextPointer" /> в положение, указанное заданным смещением в символах от начала текущего <see cref="T:System.Windows.Documents.TextPointer" />.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-278">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of the current <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></summary>
        <returns><span data-ttu-id="f1fa2-279">Указатель <see cref="T:System.Windows.Documents.TextPointer" /> на положение, определенное заданным смещением, или <see langword="null" />, если невозможно найти соответствующее положение.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-279">A <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, or <see langword="null" /> if no corresponding position can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1fa2-280">Любое из следующих считается символа:</span><span class="sxs-lookup"><span data-stu-id="f1fa2-280">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="f1fa2-281">Открывающего или закрывающего тега для <xref:System.Windows.Documents.TextElement> элемент.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-281">An opening or closing tag for the <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="f1fa2-282">Объект <xref:System.Windows.UIElement> элемента, содержащегося в <xref:System.Windows.Documents.InlineUIContainer> или <xref:System.Windows.Documents.BlockUIContainer>.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-282">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="f1fa2-283">Примечание такие <xref:System.Windows.UIElement> всегда считается как один символ; любое дополнительное содержимое или элементы, содержащиеся в <xref:System.Windows.UIElement> , не рассматриваются как символы.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-283">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="f1fa2-284">16-разрядное [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] символа внутри текстового <xref:System.Windows.Documents.Run> элемент.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-284">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1fa2-285">Ниже приведен пример использования этого метода.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-285">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="f1fa2-286">В примере используется <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> метод для реализации пары методов, один для вычисления смещения в указанную позицию относительно любого размещения абзацев, а другой — для возврата <xref:System.Windows.Documents.TextPointer> заданное смещение в указанный абзац.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-286">The example uses the <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> method to implement a pair of methods, one to calculate the offset to a specified position relative to any hosting paragraph, and the other to return a <xref:System.Windows.Documents.TextPointer> to a specified offset in a specified paragraph.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetPositionAtOffset](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getpositionatoffset)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetPositionAtOffset](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getpositionatoffset)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <Member MemberName="GetPositionAtOffset">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetPositionAtOffset (int offset, System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetPositionAtOffset(int32 offset, valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPositionAtOffset (offset As Integer, direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetPositionAtOffset(int offset, System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetPositionAtOffset : int * System.Windows.Documents.LogicalDirection -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.GetPositionAtOffset (offset, direction)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="offset"><span data-ttu-id="f1fa2-287">Смещение (в символах) на которое необходимо рассчитывать и возвращать положение.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-287">An offset, in symbols, for which to calculate and return the position.</span></span>  <span data-ttu-id="f1fa2-288">Если смешение отрицательное, возвращенный <see cref="T:System.Windows.Documents.TextPointer" /> предшествует текущему <see cref="T:System.Windows.Documents.TextPointer" />; в противном случае, он идет следом.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-288">If the offset is negative, the returned <see cref="T:System.Windows.Documents.TextPointer" /> precedes the current <see cref="T:System.Windows.Documents.TextPointer" />; otherwise, it follows.</span></span></param>
        <param name="direction"><span data-ttu-id="f1fa2-289">Одно из значений <see cref="T:System.Windows.Documents.LogicalDirection" />, которое указывает логическое направление возвращенного <see cref="T:System.Windows.Documents.TextPointer" />.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-289">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction of the returned <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></param>
        <summary><span data-ttu-id="f1fa2-290">Возвращение <see cref="T:System.Windows.Documents.TextPointer" /> в положение, указанное заданным смещением в символах от начала текущего <see cref="T:System.Windows.Documents.TextPointer" />, а также в указанном направлении.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-290">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of the current <see cref="T:System.Windows.Documents.TextPointer" /> and in the specified direction.</span></span></summary>
        <returns><span data-ttu-id="f1fa2-291">Указатель <see cref="T:System.Windows.Documents.TextPointer" /> на положение, определяемое заданным смещением, или <see langword="null" />, если смещение выходит за рамки содержимого.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-291">A <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, or <see langword="null" /> if the offset extends past the end of the content.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1fa2-292">Любое из следующих считается символа:</span><span class="sxs-lookup"><span data-stu-id="f1fa2-292">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="f1fa2-293">Открывающего или закрывающего тега для <xref:System.Windows.Documents.TextElement> элемент.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-293">An opening or closing tag for the <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="f1fa2-294">Объект <xref:System.Windows.UIElement> элемента, содержащегося в <xref:System.Windows.Documents.InlineUIContainer> или <xref:System.Windows.Documents.BlockUIContainer>.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-294">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="f1fa2-295">Примечание такие <xref:System.Windows.UIElement> всегда считается как один символ; любое дополнительное содержимое или элементы, содержащиеся в <xref:System.Windows.UIElement> , не рассматриваются как символы.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-295">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="f1fa2-296">16-разрядное [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] символа внутри текстового <xref:System.Windows.Documents.Run> элемент.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-296">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTextInRun">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="f1fa2-297">Возвращение текста, примыкающего к текущему <see cref="T:System.Windows.Documents.TextPointer" />.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-297">Returns text adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTextInRun">
      <MemberSignature Language="C#" Value="public string GetTextInRun (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTextInRun(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextInRun (direction As LogicalDirection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTextInRun(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetTextInRun : System.Windows.Documents.LogicalDirection -&gt; string" Usage="textPointer.GetTextInRun direction" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="f1fa2-298">Одно из значений <see cref="T:System.Windows.Documents.LogicalDirection" />, которое указывает логическое направление, в котором осуществляется поиск и возвращение любого примыкающего текста.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-298">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find and return any adjacent text.</span></span></param>
        <summary><span data-ttu-id="f1fa2-299">Возвращение строки, содержащей любой текст, примыкающий к текущему <see cref="T:System.Windows.Documents.TextPointer" /> в указанном логическом направлении.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-299">Returns a string containing any text adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="f1fa2-300">Строка, содержащая любой примыкающий текст в указанном логическом направлении, или <see cref="F:System.String.Empty" />, если не найдено примыкающего текста.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-300">A string containing any adjacent text in the specified logical direction, or <see cref="F:System.String.Empty" /> if no adjacent text can be found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1fa2-301">Этот метод возвращает только непрерывные текстовые выполнения.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-301">This method returns only uninterrupted runs of text.</span></span>  <span data-ttu-id="f1fa2-302">Ничего не возвращается, если любой символ типа, отличное от <xref:System.Windows.Documents.TextPointerContext.Text> Примыкает к текущему <xref:System.Windows.Documents.TextPointer> в указанном направлении.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-302">Nothing is returned if any symbol type other than <xref:System.Windows.Documents.TextPointerContext.Text> is adjacent to the current <xref:System.Windows.Documents.TextPointer> in the specified direction.</span></span>  <span data-ttu-id="f1fa2-303">Аналогичным образом текст, возвращается только до достижения следующим нетекстовым символом.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-303">Similarly, text is returned only up to the next non-text symbol.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1fa2-304">Ниже приведен пример использования этого метода.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-304">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="f1fa2-305">В примере используется <xref:System.Windows.Documents.TextPointer.GetTextInRun%2A> метод для реализации извлечения простого текста.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-305">The example uses the <xref:System.Windows.Documents.TextPointer.GetTextInRun%2A> method to implement a simple text extractor.</span></span>  <span data-ttu-id="f1fa2-306">Метод возвращает объединение строк весь текст между двумя заданными <xref:System.Windows.Documents.TextPointer> экземпляров.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-306">The method returns a string concatenation of all text between two specified <xref:System.Windows.Documents.TextPointer> instances.</span></span>  
  
 <span data-ttu-id="f1fa2-307">Хотя приведенный пример можно использовать для извлечения любой текст между двумя <xref:System.Windows.Documents.TextPointer> экземпляров, он предназначен только для иллюстративных целей и не следует использовать в рабочем коде.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-307">While the example can be used to extract any text between two <xref:System.Windows.Documents.TextPointer> instances, it is intended for illustrative purposes only, and should not be used in production code.</span></span>  <span data-ttu-id="f1fa2-308">Вместо этого следует использовать свойство <xref:System.Windows.Documents.TextRange.Text%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-308">Use the <xref:System.Windows.Documents.TextRange.Text%2A?displayProperty=nameWithType> property instead.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetTextInRun](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_gettextinrun)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetTextInRun](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_gettextinrun)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)" />
        <altmember cref="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetTextInRun">
      <MemberSignature Language="C#" Value="public int GetTextInRun (System.Windows.Documents.LogicalDirection direction, char[] textBuffer, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTextInRun(valuetype System.Windows.Documents.LogicalDirection direction, char[] textBuffer, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextInRun (direction As LogicalDirection, textBuffer As Char(), startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTextInRun(System::Windows::Documents::LogicalDirection direction, cli::array &lt;char&gt; ^ textBuffer, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="member this.GetTextInRun : System.Windows.Documents.LogicalDirection * char[] * int * int -&gt; int" Usage="textPointer.GetTextInRun (direction, textBuffer, startIndex, count)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
        <Parameter Name="textBuffer" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="f1fa2-309">Одно из значений <see cref="T:System.Windows.Documents.LogicalDirection" />, которое указывает логическое направление, в котором осуществляется поиск и копирование любого примыкающего текста.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-309">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find and copy any adjacent text.</span></span></param>
        <param name="textBuffer"><span data-ttu-id="f1fa2-310">Буфер, в который копируется текст.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-310">A buffer into which any text is copied.</span></span></param>
        <param name="startIndex"><span data-ttu-id="f1fa2-311">Индекс в <paramref name="textBuffer" />, с которого начинается запись копируемого текста.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-311">An index into <paramref name="textBuffer" /> at which to begin writing copied text.</span></span></param>
        <param name="count"><span data-ttu-id="f1fa2-312">Максимальное число символов для копирования.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-312">The maximum number of characters to copy.</span></span></param>
        <summary><span data-ttu-id="f1fa2-313">Копирование в указанном направлении заданного максимального числа символов из примыкающего текста в массив символов, предоставленный вызывающим.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-313">Copies the specified maximum number of characters from any adjacent text in the specified direction into a caller-supplied character array.</span></span></summary>
        <returns><span data-ttu-id="f1fa2-314">Число фактически скопированных символов в <paramref name="textBuffer" />.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-314">The number of characters actually copied into <paramref name="textBuffer" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1fa2-315">Этот метод возвращает только непрерывные текстовые выполнения.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-315">This method returns only uninterrupted runs of text.</span></span>  <span data-ttu-id="f1fa2-316">Ничего не возвращается, если любой символ типа, отличное от <xref:System.Windows.Documents.TextPointerContext.Text> Примыкает к текущему <xref:System.Windows.Documents.TextPointer> в указанном направлении.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-316">Nothing is returned if any symbol type other than <xref:System.Windows.Documents.TextPointerContext.Text> is adjacent to the current <xref:System.Windows.Documents.TextPointer> in the specified direction.</span></span>  <span data-ttu-id="f1fa2-317">Аналогичным образом текст, возвращается только до достижения следующим нетекстовым символом.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-317">Similarly, text is returned only up to the next non-text symbol.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="f1fa2-318"><paramref name="startIndex" /> меньше 0 или больше <see cref="P:System.Array.Length" /> свойства <paramref name="textBuffer" />.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-318"><paramref name="startIndex" /> is less than 0 or greater than the <see cref="P:System.Array.Length" /> property of <paramref name="textBuffer" />.</span></span>  
  
<span data-ttu-id="f1fa2-319">-или-</span><span class="sxs-lookup"><span data-stu-id="f1fa2-319">-or-</span></span> 
 <span data-ttu-id="f1fa2-320"><paramref name="count" /> меньше 0 или больше оставшегося пространства в <paramref name="textBuffer" /> (<paramref name="textBuffer" />.<see cref="P:System.Array.Length" /></span><span class="sxs-lookup"><span data-stu-id="f1fa2-320"><paramref name="count" /> is less than 0 or greater than the remaining space in <paramref name="textBuffer" /> (<paramref name="textBuffer" />.<see cref="P:System.Array.Length" /></span></span> <span data-ttu-id="f1fa2-321">минус <paramref name="startIndex" />).</span><span class="sxs-lookup"><span data-stu-id="f1fa2-321">minus <paramref name="startIndex" />).</span></span></exception>
        <altmember cref="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)" />
        <altmember cref="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetTextRunLength">
      <MemberSignature Language="C#" Value="public int GetTextRunLength (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTextRunLength(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextRunLength (direction As LogicalDirection) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTextRunLength(System::Windows::Documents::LogicalDirection direction);" />
      <MemberSignature Language="F#" Value="member this.GetTextRunLength : System.Windows.Documents.LogicalDirection -&gt; int" Usage="textPointer.GetTextRunLength direction" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="f1fa2-322">Одно из значений <see cref="T:System.Windows.Documents.LogicalDirection" />, которое указывает логическое направление, в котором осуществляется подсчет числа символов.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-322">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to count the number of characters.</span></span></param>
        <summary><span data-ttu-id="f1fa2-323">Возвращение числа знаков Юникода между текущим <see cref="T:System.Windows.Documents.TextPointer" /> и следующим нетекстовым символом в указанном логическом направлении.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-323">Returns the number of Unicode characters between the current <see cref="T:System.Windows.Documents.TextPointer" /> and the next non-text symbol, in the specified logical direction.</span></span></summary>
        <returns><span data-ttu-id="f1fa2-324">Число знаков Юникода между текущим <see cref="T:System.Windows.Documents.TextPointer" /> и следующим нетекстовым символом.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-324">The number of Unicode characters between the current <see cref="T:System.Windows.Documents.TextPointer" /> and the next non-text symbol.</span></span>  <span data-ttu-id="f1fa2-325">Данное число может быть равно 0, если примыкающего текста нет.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-325">This number may be 0 if there is no adjacent text.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1fa2-326">Любое из следующих считается символа:</span><span class="sxs-lookup"><span data-stu-id="f1fa2-326">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="f1fa2-327">Открывающего или закрывающего тега для <xref:System.Windows.Documents.TextElement> элемент.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-327">An opening or closing tag for the <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="f1fa2-328">Объект <xref:System.Windows.UIElement> элемента, содержащегося в <xref:System.Windows.Documents.InlineUIContainer> или <xref:System.Windows.Documents.BlockUIContainer>.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-328">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="f1fa2-329">Примечание такие <xref:System.Windows.UIElement> всегда считается как один символ; любое дополнительное содержимое или элементы, содержащиеся в <xref:System.Windows.UIElement> , не рассматриваются как символы.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-329">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="f1fa2-330">16-разрядное [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] символа внутри текстового <xref:System.Windows.Documents.Run> элемент.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-330">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasValidLayout">
      <MemberSignature Language="C#" Value="public bool HasValidLayout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValidLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.HasValidLayout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasValidLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasValidLayout { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasValidLayout : bool" Usage="System.Windows.Documents.TextPointer.HasValidLayout" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Documents.ITextPointer.HasValidLayout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f1fa2-331">Получение значения, указывающего, имеется ли для текстового контейнера, связанного с текущим положением, допустимый (современным) макет.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-331">Gets a value that indicates whether the text container associated with the current position has a valid (up-to-date) layout.</span></span></summary>
        <value><span data-ttu-id="f1fa2-332"><see langword="true" />, если макет является текущим и допустимым; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-332"><see langword="true" /> if the layout is current and valid; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1fa2-333">При необходимости, операций, зависящих от допустимого макета (таких как <xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A> метод, <xref:System.Windows.Documents.TextPointer.GetCharacterRect%2A> метод, и <xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A> свойство) пытаться автоматически повторно создать допустимый макет перед продолжением операции.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-333">When necessary, operations that depend on a valid layout (such as the <xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A> method, <xref:System.Windows.Documents.TextPointer.GetCharacterRect%2A> method, and <xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A> property) attempt to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="f1fa2-334">Повторное создание макета может быть довольно дорогой операцией.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-334">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="f1fa2-335">Это свойство используется для проверки допустимого макета перед выполнением операций, которые могут заново создать макет.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-335">Use this property to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="f1fa2-336">Дополнительные сведения см. в разделе [Макет](~/docs/framework/wpf/advanced/layout.md).</span><span class="sxs-lookup"><span data-stu-id="f1fa2-336">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertLineBreak">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer InsertLineBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer InsertLineBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.InsertLineBreak" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertLineBreak () As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ InsertLineBreak();" />
      <MemberSignature Language="F#" Value="member this.InsertLineBreak : unit -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.InsertLineBreak " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f1fa2-337">Вставка разрыва строки в текущем положении.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-337">Inserts a line break at the current position.</span></span></summary>
        <returns><span data-ttu-id="f1fa2-338"><see cref="T:System.Windows.Documents.TextPointer" />, располагающийся сразу за элементом <see cref="T:System.Windows.Documents.LineBreak" />, вставленным данным методом.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-338">A <see cref="T:System.Windows.Documents.TextPointer" /> positioned immediately after the <see cref="T:System.Windows.Documents.LineBreak" /> element inserted by this method.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertParagraphBreak">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer InsertParagraphBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer InsertParagraphBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.InsertParagraphBreak" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertParagraphBreak () As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ InsertParagraphBreak();" />
      <MemberSignature Language="F#" Value="member this.InsertParagraphBreak : unit -&gt; System.Windows.Documents.TextPointer" Usage="textPointer.InsertParagraphBreak " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f1fa2-339">Вставка разрыва абзаца в текущем положении.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-339">Inserts a paragraph break at the current position.</span></span></summary>
        <returns><span data-ttu-id="f1fa2-340"><see cref="T:System.Windows.Documents.TextPointer" /> к началу (<see cref="P:System.Windows.Documents.TextElement.ContentStart" />) нового абзаца.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-340">A <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning (<see cref="P:System.Windows.Documents.TextElement.ContentStart" />) of the new paragraph.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1fa2-341">Если этот метод вызывается, когда текущая позиция находится внутри существующего <xref:System.Windows.Documents.Paragraph> элемент, существующий абзац и любое содержимое, он содержит разбиваются на два абзаца в текущей позиции.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-341">If this method is called when the current position is inside of an existing <xref:System.Windows.Documents.Paragraph> element, the existing paragraph and any content it contains are split into two paragraphs at the current position.</span></span>  <span data-ttu-id="f1fa2-342">Если этот метод вызывается, когда текущая позиция не находится внутри существующего абзаца, вставляется новый, пустой абзац.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-342">If this method is called when the current position is not inside of an existing paragraph, a new, empty paragraph is inserted.</span></span>  <span data-ttu-id="f1fa2-343">Если этот метод вызывается с позиции не подходит для разделения или вставки абзаца (например, в том случае, если текущая позиция находится внутри элемента <xref:System.Windows.Documents.Hyperlink> элемент), создается исключение.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-343">If this method is called at a position unsuitable for splitting or inserting a paragraph (for example, if the current position is inside of a <xref:System.Windows.Documents.Hyperlink> element), an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f1fa2-344">Данный метод вызывается для положения, которое невозможно разделить для размещения нового абзаца, как в области <see cref="T:System.Windows.Documents.Hyperlink" /> или <see cref="T:System.Windows.Documents.InlineUIContainer" />.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-344">This method is called on a position that cannot be split to accommodate a new paragraph, such as in the scope of a <see cref="T:System.Windows.Documents.Hyperlink" /> or <see cref="T:System.Windows.Documents.InlineUIContainer" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="InsertTextInRun">
      <MemberSignature Language="C#" Value="public void InsertTextInRun (string textData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertTextInRun(string textData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertTextInRun (textData As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertTextInRun(System::String ^ textData);" />
      <MemberSignature Language="F#" Value="member this.InsertTextInRun : string -&gt; unit" Usage="textPointer.InsertTextInRun textData" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.InsertTextInRun(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textData"><span data-ttu-id="f1fa2-345">Текст для вставки.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-345">The text to insert.</span></span></param>
        <summary><span data-ttu-id="f1fa2-346">Вставка указанного текста в текст <see cref="T:System.Windows.Documents.Run" /> в текущее положение.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-346">Inserts the specified text into the text <see cref="T:System.Windows.Documents.Run" /> at the current position.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1fa2-347">Если <xref:System.Windows.Documents.TextPointer> не охватываются <xref:System.Windows.Documents.Run> элемент, <xref:System.Windows.Documents.Run> вставляется вместе с `textData`.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-347">If the <xref:System.Windows.Documents.TextPointer> is not scoped by a <xref:System.Windows.Documents.Run> element, a <xref:System.Windows.Documents.Run> is inserted along with the `textData`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="f1fa2-348">Текущее положение находится за пределами элемента <see cref="T:System.Windows.Documents.Run" />.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-348">The current position is not within a <see cref="T:System.Windows.Documents.Run" /> element.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f1fa2-349"><paramref name="textData" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-349"><paramref name="textData" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="IsAtInsertionPosition">
      <MemberSignature Language="C#" Value="public bool IsAtInsertionPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAtInsertionPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.IsAtInsertionPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAtInsertionPosition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAtInsertionPosition { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAtInsertionPosition : bool" Usage="System.Windows.Documents.TextPointer.IsAtInsertionPosition" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Documents.ITextPointer.IsAtInsertionPosition</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f1fa2-350">Получение значения, указывающего, является ли положение вставки текущим положением.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-350">Gets a value that indicates whether the current position is an insertion position.</span></span></summary>
        <value><span data-ttu-id="f1fa2-351"><see langword="true" />, если текущее положение является положением вставки; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-351"><see langword="true" /> if the current position is an insertion position; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1fa2-352">Положение вставки — положение, где может быть добавлено новое содержимое без нарушения любой семантических правил для соответствующего содержимого.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-352">An insertion position is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="f1fa2-353">На практике положение вставки — где угодно в содержимом, где можно расположить курсор.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-353">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="f1fa2-354">Пример допустимого <xref:System.Windows.Documents.TextPointer> , не является положением вставки — положение между двумя смежные <xref:System.Windows.Documents.Paragraph> теги (т. е между закрывающий тег выше и открывающий тег следующего абзаца).</span><span class="sxs-lookup"><span data-stu-id="f1fa2-354">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)" />
        <altmember cref="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      </Docs>
    </Member>
    <Member MemberName="IsAtLineStartPosition">
      <MemberSignature Language="C#" Value="public bool IsAtLineStartPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAtLineStartPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAtLineStartPosition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAtLineStartPosition { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsAtLineStartPosition : bool" Usage="System.Windows.Documents.TextPointer.IsAtLineStartPosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f1fa2-355">Получение значения, указывающего, находится ли текущее положение в начале строки.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-355">Gets a value that indicates whether the current position is at the beginning of a line.</span></span></summary>
        <value><span data-ttu-id="f1fa2-356"><see langword="true" />, если текущее положение находится в начале строки; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-356"><see langword="true" /> if the current position is at the beginning of a line; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1fa2-357">Если <xref:System.Windows.Documents.TextPointer> указывает неоднозначную позицию, например, между двумя строками в строке направление, заданное параметром <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> было выбрано свойство как относительный начальную строку.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-357">If the <xref:System.Windows.Documents.TextPointer> points to an ambiguous position, for example, between two lines, the line in the direction specified by the <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> property is selected as the relative starting line.</span></span>  
  
 <span data-ttu-id="f1fa2-358">Операция, выполняемая это свойство зависит от допустимого макета.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-358">The operation performed by this property depends on a valid layout.</span></span>  <span data-ttu-id="f1fa2-359">При необходимости этот метод пытается автоматически повторно создать допустимый макет перед продолжением операции.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-359">When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="f1fa2-360">Повторное создание макета может быть довольно дорогой операцией.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-360">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="f1fa2-361">Используйте <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> свойство для проверки допустимого макета перед выполнением операций, которые могут заново создать макет.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-361">Use the <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> property to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="f1fa2-362">Дополнительные сведения см. в разделе [Макет](~/docs/framework/wpf/advanced/layout.md).</span><span class="sxs-lookup"><span data-stu-id="f1fa2-362">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition" />
      </Docs>
    </Member>
    <Member MemberName="IsInSameDocument">
      <MemberSignature Language="C#" Value="public bool IsInSameDocument (System.Windows.Documents.TextPointer textPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsInSameDocument(class System.Windows.Documents.TextPointer textPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInSameDocument (textPosition As TextPointer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInSameDocument(System::Windows::Documents::TextPointer ^ textPosition);" />
      <MemberSignature Language="F#" Value="member this.IsInSameDocument : System.Windows.Documents.TextPointer -&gt; bool" Usage="textPointer.IsInSameDocument textPosition" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textPosition" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="textPosition"><span data-ttu-id="f1fa2-363"><see cref="T:System.Windows.Documents.TextPointer" />, который указывает положение для сравнения с текущим положением.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-363">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to compare to the current position.</span></span></param>
        <summary><span data-ttu-id="f1fa2-364">Определение, находится ли указанное положение в том же текстовом контейнере, что и текущее положение.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-364">Indicates whether the specified position is in the same text container as the current position.</span></span></summary>
        <returns><span data-ttu-id="f1fa2-365"><see langword="true" />, если <paramref name="textPosition" /> указывает положение, которое располагается в том же текстовом контейнере, что и текущее положение; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-365"><see langword="true" /> if <paramref name="textPosition" /> indicates a position that is in the same text container as the current position; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1fa2-366">Большинство операций, включающих несколько <xref:System.Windows.Documents.TextPointer> экземпляров допустимы только в случае, если экземпляры указывают позиций, которые находятся в одной и той же области видимости контейнера текста.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-366">Most operations that involve multiple <xref:System.Windows.Documents.TextPointer> instances are only valid if the instances in question indicate positions that are in the same text container scope.</span></span>  <span data-ttu-id="f1fa2-367">Например <xref:System.Windows.Documents.TextPointer.CompareTo%2A> и <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> методы нельзя использовать с <xref:System.Windows.Documents.TextPointer> позицию за пределами текстового контейнера, связанного с текущим положением.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-367">For example the <xref:System.Windows.Documents.TextPointer.CompareTo%2A> and <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> methods cannot be used with a <xref:System.Windows.Documents.TextPointer> to a position outside of the text container associated with the current position.</span></span>  <span data-ttu-id="f1fa2-368">Этот метод позволяет убедитесь, что указанный <xref:System.Windows.Documents.TextPointer> совместима с текущей позиции для таких операций.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-368">Use this method to verify that a specified <xref:System.Windows.Documents.TextPointer> is compatible with the current position for such operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f1fa2-369">Ниже приведен пример использования этого метода.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-369">The following example demonstrates a use for this method.</span></span>  <span data-ttu-id="f1fa2-370">В примере используется <xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A> метод для проверки, действительно ли заданное <xref:System.Windows.Documents.TextPointer> располагается между двумя для других из заданными <xref:System.Windows.Documents.TextPointer> экземпляров в ситуации, когда нет никакой гарантии, что всех трех позиций принадлежат том же текстовом контейнере.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-370">The example uses the <xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A> method to check whether a specified <xref:System.Windows.Documents.TextPointer> is positioned between two other specified <xref:System.Windows.Documents.TextPointer> instances in a situation when there is no guarantee that all three positions belong to the same text container.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_IsInSameDocument](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_isinsamedocument)]
 [!code-vb[TextPointer_Snippets#_TextPointer_IsInSameDocument](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_isinsamedocument)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="f1fa2-371"><paramref name="textPosition" /> — <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-371"><paramref name="textPosition" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LogicalDirection">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.LogicalDirection LogicalDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Documents.LogicalDirection LogicalDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.LogicalDirection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogicalDirection As LogicalDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::LogicalDirection LogicalDirection { System::Windows::Documents::LogicalDirection get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalDirection : System.Windows.Documents.LogicalDirection" Usage="System.Windows.Documents.TextPointer.LogicalDirection" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Documents.ITextPointer.LogicalDirection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.LogicalDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f1fa2-372">Получение логического направления, связанного с текущим положением, которое используется для снятия неоднозначности в отношении содержимого, связанного с текущим положением.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-372">Gets the logical direction associated with the current position which is used to disambiguate content associated with the current position.</span></span></summary>
        <value><span data-ttu-id="f1fa2-373">Значение <see cref="T:System.Windows.Documents.LogicalDirection" />, которое связано с текущим положением.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-373">The <see cref="T:System.Windows.Documents.LogicalDirection" /> value that is associated with the current position.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f1fa2-374">В качестве примера использования этого свойства <xref:System.Windows.Documents.LogicalDirection> из <xref:System.Windows.Documents.TextPointer> возвращаемые проверкой нажатия дает нажатия, между двумя символами текста.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-374">As an example of how this property is used, the <xref:System.Windows.Documents.LogicalDirection> of the <xref:System.Windows.Documents.TextPointer> returned by a hit test method gives a hit that is between two characters of text.</span></span> <span data-ttu-id="f1fa2-375">Указывает логическое направление, какой из двух символов, фактически был нажат - влево или вправо.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-375">The logical direction specifies which of the two characters was actually hit - the left or the right.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paragraph">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.Paragraph Paragraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.Paragraph Paragraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.Paragraph" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Paragraph As Paragraph" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::Paragraph ^ Paragraph { System::Windows::Documents::Paragraph ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Paragraph : System.Windows.Documents.Paragraph" Usage="System.Windows.Documents.TextPointer.Paragraph" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Paragraph</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f1fa2-376">Получение абзаца, в области которого находится текущее положение, если таковой имеется.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-376">Gets the paragraph that scopes the current position, if any.</span></span></summary>
        <value><span data-ttu-id="f1fa2-377"><see cref="T:System.Windows.Documents.Paragraph" /> , Определяющий область текущей позиции, или <see langword="null" /> Если такого абзаца не существует.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-377">The <see cref="T:System.Windows.Documents.Paragraph" /> that scopes the current position, or <see langword="null" /> if no such paragraph exists.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.Parent" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObject ^ Parent { System::Windows::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.DependencyObject" Usage="System.Windows.Documents.TextPointer.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="f1fa2-378">Получение логического родительского элемента, задающего область для текущего положения.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-378">Gets the logical parent that scopes the current position.</span></span></summary>
        <value><span data-ttu-id="f1fa2-379">Логический родительский элемент, задающий область для текущего положения.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-379">The logical parent that scopes the current position.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.Paragraph" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="textPointer.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="f1fa2-380">Данный тип или элемент поддерживает инфраструктуру [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] и не предназначен для непосредственного использования из кода.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-380">This type or member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <returns><span data-ttu-id="f1fa2-381">Строка, представляющая объект.</span><span class="sxs-lookup"><span data-stu-id="f1fa2-381">The string that represents the object.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>