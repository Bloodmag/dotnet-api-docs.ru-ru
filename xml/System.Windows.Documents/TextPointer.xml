<Type Name="TextPointer" FullName="System.Windows.Documents.TextPointer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d374acbfa59bece9a23ff4841ba74263d0c6fa42" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class TextPointer : System.Windows.Documents.ContentPosition" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TextPointer extends System.Windows.Documents.ContentPosition" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Documents.TextPointer" />
  <TypeSignature Language="VB.NET" Value="Public Class TextPointer&#xA;Inherits ContentPosition" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextPointer : System::Windows::Documents::ContentPosition" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Documents.ContentPosition</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="dadd5-101">Represents a position within a <see cref="T:System.Windows.Documents.FlowDocument" /> or <see cref="T:System.Windows.Controls.TextBlock" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="dadd5-101">Represents a position within a <see cref="T:System.Windows.Documents.FlowDocument" /> or <see cref="T:System.Windows.Controls.TextBlock" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dadd5-102"><xref:System.Windows.Documents.TextPointer> Класс представлены следующие термины:</span><span class="sxs-lookup"><span data-stu-id="dadd5-102">The <xref:System.Windows.Documents.TextPointer> class introduces the following terminology:</span></span>  
  
-   <span data-ttu-id="dadd5-103">Поместите - по своей природе, <xref:System.Windows.Documents.TextPointer> всегда указывает на *позиции* в содержимом.</span><span class="sxs-lookup"><span data-stu-id="dadd5-103">Position - Inherently, a <xref:System.Windows.Documents.TextPointer> always points to a *position* in content.</span></span>  <span data-ttu-id="dadd5-104">Подобные положения находятся либо между символами в содержимом или потока содержимого тегами элемента, определение структуры для содержимого.</span><span class="sxs-lookup"><span data-stu-id="dadd5-104">Such positions either fall between characters in the content, or between flow content element tags that define structure for the content.</span></span>  
  
-   <span data-ttu-id="dadd5-105">Текущее положение — так как <xref:System.Windows.Documents.TextPointer> всегда указывает на позицию, а потому, что много операций, которые могут быть выполнены с помощью <xref:System.Windows.Documents.TextPointer> зависят от положения, в настоящее время, на который указывает <xref:System.Windows.Documents.TextPointer>, смысл просто см. позиции, указываемой параметром <xref:System.Windows.Documents.TextPointer> как *текущей позиции*.</span><span class="sxs-lookup"><span data-stu-id="dadd5-105">Current Position - Because a <xref:System.Windows.Documents.TextPointer> always indicates a position, and because many of the operations that can be performed through a <xref:System.Windows.Documents.TextPointer> are relative to the position currently pointed to by the <xref:System.Windows.Documents.TextPointer>, it makes sense to simply refer to the position indicated by a <xref:System.Windows.Documents.TextPointer> as the *current position*.</span></span>  
  
-   <span data-ttu-id="dadd5-106">Позиция вставки - *позицию вставки* — положение, где может быть добавлено новое содержимое без нарушения любой семантических правил для соответствующего содержимого.</span><span class="sxs-lookup"><span data-stu-id="dadd5-106">Insertion Position - An *insertion position* is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="dadd5-107">На практике положение вставки в любом месте — в содержимом положение курсора.</span><span class="sxs-lookup"><span data-stu-id="dadd5-107">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="dadd5-108">Примером является допустимым <xref:System.Windows.Documents.TextPointer> , не положение вставки — положение между двумя смежные <xref:System.Windows.Documents.Paragraph> теги (т. е между закрывающего тега элемента выше и открывающий тег следующего абзаца).</span><span class="sxs-lookup"><span data-stu-id="dadd5-108">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
-   <span data-ttu-id="dadd5-109">Символ — в целях <xref:System.Windows.Documents.TextPointer> операции, включающие символы, следующие считается *символ*:</span><span class="sxs-lookup"><span data-stu-id="dadd5-109">Symbol - For the purposes of <xref:System.Windows.Documents.TextPointer> operations that involve symbols, any of the following is considered to be a *symbol*:</span></span>  
  
    -   <span data-ttu-id="dadd5-110">Открывающий или закрывающий тег для <xref:System.Windows.Documents.TextElement> элемента.</span><span class="sxs-lookup"><span data-stu-id="dadd5-110">An opening or closing tag for a <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
    -   <span data-ttu-id="dadd5-111">Объект <xref:System.Windows.UIElement> элементов, содержащихся в <xref:System.Windows.Documents.InlineUIContainer> или <xref:System.Windows.Documents.BlockUIContainer>.</span><span class="sxs-lookup"><span data-stu-id="dadd5-111">A <xref:System.Windows.UIElement> element contained within an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="dadd5-112">Примечание такое <xref:System.Windows.UIElement> всегда считается ровно один символ; любое дополнительное содержимое или элементы, содержащиеся в <xref:System.Windows.UIElement> , не рассматриваются как символы.</span><span class="sxs-lookup"><span data-stu-id="dadd5-112">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
    -   <span data-ttu-id="dadd5-113">Каждый 16-разрядное [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] символ внутри текстового <xref:System.Windows.Documents.Run> элемента.</span><span class="sxs-lookup"><span data-stu-id="dadd5-113">Each 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
-   <span data-ttu-id="dadd5-114">Контейнер текста - A *контейнера текста* элемент, который образует конечную границу для имеющегося содержимого потока; в позиции, указываемой параметром <xref:System.Windows.Documents.TextPointer> всегда попадает в текстовом контейнере.</span><span class="sxs-lookup"><span data-stu-id="dadd5-114">Text Container - A *text container* is the element that forms the ultimate border for the flow content at hand; the position indicated by a <xref:System.Windows.Documents.TextPointer> always falls within a text container.</span></span>  <span data-ttu-id="dadd5-115">В настоящее время текстовый контейнер должен быть либо <xref:System.Windows.Documents.FlowDocument> или <xref:System.Windows.Controls.TextBlock>.</span><span class="sxs-lookup"><span data-stu-id="dadd5-115">Currently, a text container must be either a <xref:System.Windows.Documents.FlowDocument> or a <xref:System.Windows.Controls.TextBlock>.</span></span>  <span data-ttu-id="dadd5-116">В целом, операции между <xref:System.Windows.Documents.TextPointer> экземпляры в другой текстовой контейнеры не поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="dadd5-116">Generally speaking, operations between <xref:System.Windows.Documents.TextPointer> instances in different text containers are not supported.</span></span>  
  
-   <span data-ttu-id="dadd5-117">Документ - содержимое в текстовом контейнере, называют *документа*, как в <xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A> метод и <xref:System.Windows.Documents.TextPointer.DocumentStart%2A> и <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="dadd5-117">Document - The content in a text container is referred to as a *document*, as in the <xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A> method and the <xref:System.Windows.Documents.TextPointer.DocumentStart%2A> and <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A> properties.</span></span>  
  
 <span data-ttu-id="dadd5-118"><xref:System.Windows.Documents.TextPointer> Класс предназначен для упрощения обхода и обработки содержимого, представленного [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] элементы потока содержимого; как правило, такие элементы, производные от <xref:System.Windows.Documents.TextElement>.</span><span class="sxs-lookup"><span data-stu-id="dadd5-118">The <xref:System.Windows.Documents.TextPointer> class is intended to facilitate traversal and manipulation of content that is represented by [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] flow content elements; in general, such elements derive from <xref:System.Windows.Documents.TextElement>.</span></span>  <span data-ttu-id="dadd5-119">Некоторые операции, <xref:System.Windows.Documents.TextPointer> облегчает включают следующее:</span><span class="sxs-lookup"><span data-stu-id="dadd5-119">Some of the operations that <xref:System.Windows.Documents.TextPointer> facilitates include the following:</span></span>  
  
-   <span data-ttu-id="dadd5-120">Выполняют порядковое сравнение текущего положения со вторым заданным положением.</span><span class="sxs-lookup"><span data-stu-id="dadd5-120">Perform an ordinal comparison of the current position with a second specified position.</span></span>  <span data-ttu-id="dadd5-121">В разделе <xref:System.Windows.Documents.TextPointer.CompareTo%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="dadd5-121">See the <xref:System.Windows.Documents.TextPointer.CompareTo%2A> method.</span></span>  
  
-   <span data-ttu-id="dadd5-122">Определите тип содержимого, рядом с текущей позиции в указанном направлении.</span><span class="sxs-lookup"><span data-stu-id="dadd5-122">Determine the type of content adjacent to the current position in a specified direction.</span></span>  <span data-ttu-id="dadd5-123">В разделе <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> метод и <xref:System.Windows.Documents.TextPointerContext> перечисления.</span><span class="sxs-lookup"><span data-stu-id="dadd5-123">See the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method and <xref:System.Windows.Documents.TextPointerContext> enumeration.</span></span>  
  
-   <span data-ttu-id="dadd5-124">Получить <xref:System.Windows.Documents.TextElement> , областей или рядом с текущей позиции.</span><span class="sxs-lookup"><span data-stu-id="dadd5-124">Get the <xref:System.Windows.Documents.TextElement> that scopes or is adjacent to the current position.</span></span>  <span data-ttu-id="dadd5-125">В разделе <xref:System.Windows.Documents.Paragraph> и <xref:System.Windows.Documents.TextPointer.GetAdjacentElement%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="dadd5-125">See <xref:System.Windows.Documents.Paragraph> and the <xref:System.Windows.Documents.TextPointer.GetAdjacentElement%2A> method.</span></span>  
  
-   <span data-ttu-id="dadd5-126">Получение контейнера текста, определяющего область текущего документа.</span><span class="sxs-lookup"><span data-stu-id="dadd5-126">Get the text container that scopes the current document.</span></span>  <span data-ttu-id="dadd5-127">См. свойство <xref:System.Windows.Documents.TextPointer.Parent%2A>.</span><span class="sxs-lookup"><span data-stu-id="dadd5-127">See the <xref:System.Windows.Documents.TextPointer.Parent%2A> property.</span></span>  
  
-   <span data-ttu-id="dadd5-128">Получите указанное число символов, перед или после текущего положения.</span><span class="sxs-lookup"><span data-stu-id="dadd5-128">Get a specified number of characters preceding or following the current position.</span></span>  <span data-ttu-id="dadd5-129">В разделе <xref:System.Windows.Documents.TextPointer.GetTextInRun%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="dadd5-129">See the <xref:System.Windows.Documents.TextPointer.GetTextInRun%2A> method.</span></span>  
  
-   <span data-ttu-id="dadd5-130">Вставьте строку символов в текущей позиции.</span><span class="sxs-lookup"><span data-stu-id="dadd5-130">Insert a string of characters at the current position.</span></span>  <span data-ttu-id="dadd5-131">В разделе <xref:System.Windows.Documents.TextPointer.InsertTextInRun%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="dadd5-131">See the <xref:System.Windows.Documents.TextPointer.InsertTextInRun%2A> method.</span></span>  
  
-   <span data-ttu-id="dadd5-132">Поиск границ строки в содержимом.</span><span class="sxs-lookup"><span data-stu-id="dadd5-132">Find line boundaries in content.</span></span>  <span data-ttu-id="dadd5-133">В разделе <xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A> метод и <xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="dadd5-133">See the <xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A> method and <xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A> property.</span></span>  
  
-   <span data-ttu-id="dadd5-134">Преобразование между <xref:System.Windows.Documents.TextPointer> позиций и символ смещений в содержимое.</span><span class="sxs-lookup"><span data-stu-id="dadd5-134">Translate between <xref:System.Windows.Documents.TextPointer> positions and symbol offsets into content.</span></span>  <span data-ttu-id="dadd5-135">В разделе <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> и <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="dadd5-135">See the <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> and <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> methods.</span></span>  
  
-   <span data-ttu-id="dadd5-136">Проверка visual нажатия путем преобразования между <xref:System.Windows.Documents.TextPointer> позиции и <xref:System.Windows.Point> представляющий относительных координат.</span><span class="sxs-lookup"><span data-stu-id="dadd5-136">Perform visual hit testing by translating between a <xref:System.Windows.Documents.TextPointer> position and a <xref:System.Windows.Point> representing relative coordinates.</span></span>  
  
-   <span data-ttu-id="dadd5-137">Поиск ближайшего положения вставки или проверить, является ли текущая позиция вставки.</span><span class="sxs-lookup"><span data-stu-id="dadd5-137">Find a nearby insertion position, or check whether the current position is an insertion position.</span></span>  <span data-ttu-id="dadd5-138">В разделе <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> и <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A> методы и <xref:System.Windows.Documents.TextPointer.IsAtInsertionPosition%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="dadd5-138">See the <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> and <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A> methods and the <xref:System.Windows.Documents.TextPointer.IsAtInsertionPosition%2A> property.</span></span>  
  
 <span data-ttu-id="dadd5-139">Положение и <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> обозначается <xref:System.Windows.Documents.TextPointer> объекта являются неизменяемыми.</span><span class="sxs-lookup"><span data-stu-id="dadd5-139">The position and <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> indicated by a <xref:System.Windows.Documents.TextPointer> object are immutable.</span></span>  <span data-ttu-id="dadd5-140">Если содержимое редактирования или изменения позиции, указываемой параметром <xref:System.Windows.Documents.TextPointer> не изменяет относительно окружающего текста; скорее смещение данного положения от начала содержимого соответствующим образом корректируется, чтобы отразить новое относительное положение в содержимое.</span><span class="sxs-lookup"><span data-stu-id="dadd5-140">When content is edited or modified, the position indicated by a <xref:System.Windows.Documents.TextPointer> does not change relative to the surrounding text; rather the offset of that position from the beginning of content is adjusted correspondingly to reflect the new relative position in content.</span></span>  <span data-ttu-id="dadd5-141">Например <xref:System.Windows.Documents.TextPointer> указывает позицию в начале данного абзаца продолжает указывать на начало данного абзаца даже в том случае, когда содержимое является вставляются или удаляются до или после абзаца.</span><span class="sxs-lookup"><span data-stu-id="dadd5-141">For example, a <xref:System.Windows.Documents.TextPointer> that indicates a position at the beginning of a given paragraph continues to point to the beginning of that paragraph even when content is inserted or deleted before or after the paragraph.</span></span>  
  
 <span data-ttu-id="dadd5-142"><xref:System.Windows.Documents.TextPointer> Класс не предоставляет каких-либо открытых конструкторов.</span><span class="sxs-lookup"><span data-stu-id="dadd5-142">The <xref:System.Windows.Documents.TextPointer> class does not provide any public constructors.</span></span>  <span data-ttu-id="dadd5-143">Экземпляр <xref:System.Windows.Documents.TextPointer> создается с помощью свойств или методов других объектов (включая другие <xref:System.Windows.Documents.TextPointer> объекты).</span><span class="sxs-lookup"><span data-stu-id="dadd5-143">An instance of <xref:System.Windows.Documents.TextPointer> is created by using properties or methods of other objects (including other <xref:System.Windows.Documents.TextPointer> objects).</span></span> <span data-ttu-id="dadd5-144">Ниже приведены некоторые примеры методов и свойств, создания и возврата <xref:System.Windows.Documents.TextPointer>.</span><span class="sxs-lookup"><span data-stu-id="dadd5-144">The following list provides a few examples of methods and properties that create and return a <xref:System.Windows.Documents.TextPointer>.</span></span>  <span data-ttu-id="dadd5-145">Этот список не является исчерпывающим.</span><span class="sxs-lookup"><span data-stu-id="dadd5-145">This list is not exhaustive:</span></span>  
  
-   <span data-ttu-id="dadd5-146">Из <xref:System.Windows.Documents.TextRange>: <xref:System.Windows.Documents.TextRange.Start%2A> и <xref:System.Windows.Documents.TextRange.End%2A>.</span><span class="sxs-lookup"><span data-stu-id="dadd5-146">From a <xref:System.Windows.Documents.TextRange>: <xref:System.Windows.Documents.TextRange.Start%2A> and <xref:System.Windows.Documents.TextRange.End%2A>.</span></span>  
  
-   <span data-ttu-id="dadd5-147">Из <xref:System.Windows.Documents.TextElement>: <xref:System.Windows.Documents.TextElement.ContentStart%2A>, <xref:System.Windows.Documents.TextElement.ContentEnd%2A>, <xref:System.Windows.Documents.TextElement.ElementStart%2A>, и <xref:System.Windows.Documents.TextElement.ElementEnd%2A>.</span><span class="sxs-lookup"><span data-stu-id="dadd5-147">From a <xref:System.Windows.Documents.TextElement>:  <xref:System.Windows.Documents.TextElement.ContentStart%2A>, <xref:System.Windows.Documents.TextElement.ContentEnd%2A>, <xref:System.Windows.Documents.TextElement.ElementStart%2A>, and <xref:System.Windows.Documents.TextElement.ElementEnd%2A>.</span></span>  
  
-   <span data-ttu-id="dadd5-148">Из <xref:System.Windows.Controls.TextBlock> (контейнера текста): <xref:System.Windows.Controls.TextBlock.ContentStart%2A>, <xref:System.Windows.Controls.TextBlock.ContentEnd%2A>, и <xref:System.Windows.Controls.TextBlock.GetPositionFromPoint%2A>.</span><span class="sxs-lookup"><span data-stu-id="dadd5-148">From a <xref:System.Windows.Controls.TextBlock> (text container): <xref:System.Windows.Controls.TextBlock.ContentStart%2A>, <xref:System.Windows.Controls.TextBlock.ContentEnd%2A>, and <xref:System.Windows.Controls.TextBlock.GetPositionFromPoint%2A>.</span></span>  
  
-   <span data-ttu-id="dadd5-149">Из <xref:System.Windows.Documents.FlowDocument> (контейнера текста): <xref:System.Windows.Documents.FlowDocument.ContentStart%2A>, и <xref:System.Windows.Documents.FlowDocument.ContentEnd%2A></span><span class="sxs-lookup"><span data-stu-id="dadd5-149">From a <xref:System.Windows.Documents.FlowDocument> (text container): <xref:System.Windows.Documents.FlowDocument.ContentStart%2A>, and <xref:System.Windows.Documents.FlowDocument.ContentEnd%2A></span></span>  
  
-   <span data-ttu-id="dadd5-150">Из существующего <xref:System.Windows.Documents.TextPointer>: <xref:System.Windows.Documents.TextPointer.DocumentStart%2A>, <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A>, <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A>, и <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A>.</span><span class="sxs-lookup"><span data-stu-id="dadd5-150">From an existing <xref:System.Windows.Documents.TextPointer>: <xref:System.Windows.Documents.TextPointer.DocumentStart%2A>, <xref:System.Windows.Documents.TextPointer.DocumentEnd%2A>, <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A>, and <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dadd5-151">В следующем примере демонстрируется использование <xref:System.Windows.Documents.TextPointer> для поиска позиции только внутри первого <xref:System.Windows.Documents.Run> элемента в контейнере указанного текста.</span><span class="sxs-lookup"><span data-stu-id="dadd5-151">The following example demonstrates how to use a <xref:System.Windows.Documents.TextPointer> to find a position just inside of the first <xref:System.Windows.Documents.Run> element in a specified text container.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_TextPointer1](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_textpointer1)]
 [!code-vb[TextPointer_Snippets#_TextPointer_TextPointer1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_textpointer1)]  
  
 <span data-ttu-id="dadd5-152">В следующем примере реализуется алгоритм упрощен поиск с помощью <xref:System.Windows.Documents.TextPointer> средства.</span><span class="sxs-lookup"><span data-stu-id="dadd5-152">The following example implements a simplistic find algorithm using <xref:System.Windows.Documents.TextPointer> facilities.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_TextPointer2](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_textpointer2)]
 [!code-vb[TextPointer_Snippets#_TextPointer_TextPointer2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_textpointer2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Documents.TextRange" />
    <altmember cref="T:System.Windows.Documents.TextPointerContext" />
    <altmember cref="T:System.Windows.Documents.TextElement" />
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (System.Windows.Documents.TextPointer position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 CompareTo(class System.Windows.Documents.TextPointer position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.CompareTo(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (position As TextPointer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(System::Windows::Documents::TextPointer ^ position);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="dadd5-153">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to compare to the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-153">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to compare to the current position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dadd5-154">Performs an ordinal comparison between the positions specified by the current <see cref="T:System.Windows.Documents.TextPointer" /> and a second specified <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-154">Performs an ordinal comparison between the positions specified by the current <see cref="T:System.Windows.Documents.TextPointer" /> and a second specified <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dadd5-155">–1 if the current <see cref="T:System.Windows.Documents.TextPointer" /> precedes <paramref name="position" />; 0 if the locations are the same; +1 if the current <see cref="T:System.Windows.Documents.TextPointer" /> follows <paramref name="position" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-155">–1 if the current <see cref="T:System.Windows.Documents.TextPointer" /> precedes <paramref name="position" />; 0 if the locations are the same; +1 if the current <see cref="T:System.Windows.Documents.TextPointer" /> follows <paramref name="position" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dadd5-156">Значение – 1 указывает, что должность, указанную в текущем <xref:System.Windows.Documents.TextPointer> предшествует позиции, указанной параметром `position`.</span><span class="sxs-lookup"><span data-stu-id="dadd5-156">A value of –1 indicates that the position specified by the current <xref:System.Windows.Documents.TextPointer> precedes the position specified by `position`.</span></span>  <span data-ttu-id="dadd5-157">Значение 0 указывает, что указанные положения равны.</span><span class="sxs-lookup"><span data-stu-id="dadd5-157">A value of 0 indicates that the indicated positions are equal.</span></span>  <span data-ttu-id="dadd5-158">Значение положительное + 1 указывает на должность, указанную в текущем <xref:System.Windows.Documents.TextPointer> соответствует позиции, указанной параметром `position`.</span><span class="sxs-lookup"><span data-stu-id="dadd5-158">A value of positive +1 indicates that the position specified by the current <xref:System.Windows.Documents.TextPointer> follows the position specified by `position`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dadd5-159">В следующем примере показано использование этого метода.</span><span class="sxs-lookup"><span data-stu-id="dadd5-159">The following example demonstrates a use for this method.</span></span>  <span data-ttu-id="dadd5-160">В примере <xref:System.Windows.Documents.TextPointer.CompareTo%2A> метод используется в сочетании с <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> метод для проверки, действительно ли заданное <xref:System.Windows.Documents.TextElement> пуст.</span><span class="sxs-lookup"><span data-stu-id="dadd5-160">In the example, the <xref:System.Windows.Documents.TextPointer.CompareTo%2A> method is used in conjunction with the <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> method to test whether a specified <xref:System.Windows.Documents.TextElement> is empty.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getinsertionposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getinsertionposition)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dadd5-161">
            <paramref name="position" /> specifies a position outside of the text container associated with the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-161">
              <paramref name="position" /> specifies a position outside of the text container associated with the current position.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteTextInRun">
      <MemberSignature Language="C#" Value="public int DeleteTextInRun (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 DeleteTextInRun(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function DeleteTextInRun (count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int DeleteTextInRun(int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count">
          <span data-ttu-id="dadd5-162">The number of characters to delete, starting at the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-162">The number of characters to delete, starting at the current position.</span>
          </span>
          <span data-ttu-id="dadd5-163">Specify a positive value to delete characters that follow the current position; specify a negative value to delete characters that precede the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-163">Specify a positive value to delete characters that follow the current position; specify a negative value to delete characters that precede the current position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dadd5-164">Deletes the specified number of characters from the position indicated by the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-164">Deletes the specified number of characters from the position indicated by the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dadd5-165">The number of characters actually deleted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-165">The number of characters actually deleted.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dadd5-166">Укажите положительное значение, чтобы удалить символы, соответствующие текущей позиции (как в <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>); укажите отрицательное значение, чтобы удалить символы, предшествующие текущему положению (как в <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="dadd5-166">Specify a positive value to delete characters that follow the current position (as in <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>); specify a negative value to delete characters that precede the current position (as in <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="dadd5-167">Число фактически удаленных символов может быть меньше, чем число, заданное `count`.</span><span class="sxs-lookup"><span data-stu-id="dadd5-167">The number of characters actually deleted may be less than the number specified by `count`.</span></span>  <span data-ttu-id="dadd5-168">Это происходит в случаях, где `count` указывает больше символов, чем существует для удаления.</span><span class="sxs-lookup"><span data-stu-id="dadd5-168">This happens in cases where `count` specifies more characters than exist to be deleted.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="dadd5-169">The method is called at a position where text is not allowed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-169">The method is called at a position where text is not allowed.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Windows.Documents.TextPointer.GetTextInRun" />
        <altmember cref="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="DocumentEnd">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer DocumentEnd { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.TextPointer DocumentEnd" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.DocumentEnd" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentEnd As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::TextPointer ^ DocumentEnd { System::Windows::Documents::TextPointer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dadd5-170">Gets a <see cref="T:System.Windows.Documents.TextPointer" /> at the end of content in the text container associated with the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-170">Gets a <see cref="T:System.Windows.Documents.TextPointer" /> at the end of content in the text container associated with the current position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dadd5-171">Объект <see cref="T:System.Windows.Documents.TextPointer" /> в конце содержимого в текстовом контейнере, связанный с текущей позиции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-171">A <see cref="T:System.Windows.Documents.TextPointer" /> at the end of content in the text container associated with the current position.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dadd5-172"><xref:System.Windows.Documents.TextPointer.Parent%2A> Для возвращенного <xref:System.Windows.Documents.TextPointer> всегда представляет собой контейнер текста (<xref:System.Windows.Controls.TextBlock> или <xref:System.Windows.Documents.FlowDocument>), а не <xref:System.Windows.Documents.TextElement>.</span><span class="sxs-lookup"><span data-stu-id="dadd5-172">The <xref:System.Windows.Documents.TextPointer.Parent%2A> for the returned <xref:System.Windows.Documents.TextPointer> is always a text container (<xref:System.Windows.Controls.TextBlock> or <xref:System.Windows.Documents.FlowDocument>), rather than a <xref:System.Windows.Documents.TextElement>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.DocumentStart" />
      </Docs>
    </Member>
    <Member MemberName="DocumentStart">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer DocumentStart { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.TextPointer DocumentStart" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.DocumentStart" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DocumentStart As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::TextPointer ^ DocumentStart { System::Windows::Documents::TextPointer ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dadd5-173">Gets a <see cref="T:System.Windows.Documents.TextPointer" /> at the beginning of content in the text container associated with the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-173">Gets a <see cref="T:System.Windows.Documents.TextPointer" /> at the beginning of content in the text container associated with the current position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dadd5-174">Объект <see cref="T:System.Windows.Documents.TextPointer" /> в начале содержимого в текстовом контейнере, связанный с текущей позиции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-174">A <see cref="T:System.Windows.Documents.TextPointer" /> at the beginning of content in the text container associated with the current position.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dadd5-175">Используйте положения, возвращаемого этим свойством, в качестве базового положения, из которого необходимо применить смещения в другое место.</span><span class="sxs-lookup"><span data-stu-id="dadd5-175">Use the position returned by this property as a baseline position from which to work with relative offsets to other positions.</span></span>  <span data-ttu-id="dadd5-176"><xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> И <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> методы предоставляют способ преобразования между положениями и позиции смещения.</span><span class="sxs-lookup"><span data-stu-id="dadd5-176">The <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> and <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> methods provide a way to translate between positions and position offsets.</span></span>  
  
 <span data-ttu-id="dadd5-177"><xref:System.Windows.Documents.TextPointer.Parent%2A> Для возвращенного <xref:System.Windows.Documents.TextPointer> всегда представляет собой контейнер текста (<xref:System.Windows.Controls.TextBlock> или <xref:System.Windows.Documents.FlowDocument>), а не <xref:System.Windows.Documents.TextElement>.</span><span class="sxs-lookup"><span data-stu-id="dadd5-177">The <xref:System.Windows.Documents.TextPointer.Parent%2A> for the returned <xref:System.Windows.Documents.TextPointer> is always a text container (<xref:System.Windows.Controls.TextBlock> or <xref:System.Windows.Documents.FlowDocument>), rather than a <xref:System.Windows.Documents.TextElement>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.DocumentEnd" />
      </Docs>
    </Member>
    <Member MemberName="GetAdjacentElement">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject GetAdjacentElement (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.DependencyObject GetAdjacentElement(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetAdjacentElement(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAdjacentElement (direction As LogicalDirection) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::DependencyObject ^ GetAdjacentElement(System::Windows::Documents::LogicalDirection direction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="dadd5-178">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for an adjacent element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-178">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for an adjacent element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dadd5-179">Returns the element, if any, that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-179">Returns the element, if any, that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dadd5-180">The adjacent element in the specified <paramref name="direction" />, or <see langword="null" /> if no adjacent element exists.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-180">The adjacent element in the specified <paramref name="direction" />, or <see langword="null" /> if no adjacent element exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dadd5-181">Обычно возвращаемый элемент является <xref:System.Windows.Documents.TextElement>.</span><span class="sxs-lookup"><span data-stu-id="dadd5-181">The returned element is typically a <xref:System.Windows.Documents.TextElement>.</span></span>  <span data-ttu-id="dadd5-182">Объект <xref:System.Windows.UIElement> могут быть возвращены при <xref:System.Windows.Documents.TextPointer> указывает на позицию внутри <xref:System.Windows.Documents.BlockUIContainer> элемент или <xref:System.Windows.Documents.InlineUIContainer> элемент.</span><span class="sxs-lookup"><span data-stu-id="dadd5-182">A <xref:System.Windows.UIElement> can be returned when the <xref:System.Windows.Documents.TextPointer> indicates a position inside a <xref:System.Windows.Documents.BlockUIContainer> element or an <xref:System.Windows.Documents.InlineUIContainer> element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.Parent" />
      </Docs>
    </Member>
    <Member MemberName="GetCharacterRect">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetCharacterRect (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetCharacterRect(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCharacterRect (direction As LogicalDirection) As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect GetCharacterRect(System::Windows::Documents::LogicalDirection direction);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetCharacterRect(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="dadd5-183">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find a content bounding box.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-183">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find a content bounding box.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dadd5-184">Returns a bounding box (<see cref="T:System.Windows.Rect" />) for content that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-184">Returns a bounding box (<see cref="T:System.Windows.Rect" />) for content that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dadd5-185">A bounding box for content that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified direction, or <see cref="P:System.Windows.Rect.Empty" /> if current, valid layout information is unavailable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-185">A bounding box for content that borders the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified direction, or <see cref="P:System.Windows.Rect.Empty" /> if current, valid layout information is unavailable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dadd5-186"><xref:System.Windows.Documents.TextElement> границы не учитываются содержимого в целях этого метода.</span><span class="sxs-lookup"><span data-stu-id="dadd5-186"><xref:System.Windows.Documents.TextElement> edges are not considered content for the purposes of this method.</span></span>  <span data-ttu-id="dadd5-187">Если <xref:System.Windows.Documents.TextPointer> располагается перед <xref:System.Windows.Documents.TextElement> границей, возвращаемое значение является ограничивающего прямоугольника для следующей отличных<xref:System.Windows.Documents.TextElement> содержимого в указанном направлении.</span><span class="sxs-lookup"><span data-stu-id="dadd5-187">If the <xref:System.Windows.Documents.TextPointer> is positioned before a <xref:System.Windows.Documents.TextElement> edge, the return value is a bounding box for the next non-<xref:System.Windows.Documents.TextElement> content in the specified direction.</span></span>  <span data-ttu-id="dadd5-188">Если в указанном направлении нулевой ширины не имеет содержимого <xref:System.Windows.Rect> возвращается с высотой, совпадающей с высотой все предшествующие содержимого.</span><span class="sxs-lookup"><span data-stu-id="dadd5-188">If there is no content in the specified direction, a zero-width <xref:System.Windows.Rect> is returned with a height matching the height of any preceding content.</span></span>  
  
 <span data-ttu-id="dadd5-189">Операцию, выполняемую с помощью данного метода зависит от допустимого макета.</span><span class="sxs-lookup"><span data-stu-id="dadd5-189">The operation performed by this method depends on a valid layout.</span></span>  <span data-ttu-id="dadd5-190">При необходимости этот метод пытается автоматически восстановить допустимый макет перед продолжением операции.</span><span class="sxs-lookup"><span data-stu-id="dadd5-190">When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="dadd5-191">Повторное создание макета может быть довольно дорогой операции.</span><span class="sxs-lookup"><span data-stu-id="dadd5-191">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="dadd5-192">Используйте <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> свойство для проверки допустимого макета перед выполнением операций, которые могут заново создать макет.</span><span class="sxs-lookup"><span data-stu-id="dadd5-192">Use the <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> property to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="dadd5-193">Дополнительные сведения см. в разделе [макета](~/docs/framework/wpf/advanced/layout.md).</span><span class="sxs-lookup"><span data-stu-id="dadd5-193">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.HasValidLayout" />
      </Docs>
    </Member>
    <Member MemberName="GetInsertionPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetInsertionPosition (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetInsertionPosition(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetInsertionPosition (direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetInsertionPosition(System::Windows::Documents::LogicalDirection direction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="dadd5-194">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the closest insertion position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-194">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the closest insertion position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dadd5-195">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the closest insertion position in the specified logical direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-195">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the closest insertion position in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dadd5-196">A <see cref="T:System.Windows.Documents.TextPointer" /> to the closest insertion position in the specified direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-196">A <see cref="T:System.Windows.Documents.TextPointer" /> to the closest insertion position in the specified direction.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dadd5-197">Положение вставки — положение, где может быть добавлено новое содержимое без нарушения любой семантических правил для соответствующего содержимого.</span><span class="sxs-lookup"><span data-stu-id="dadd5-197">An insertion position is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="dadd5-198">На практике положение вставки в любом месте — в содержимом положение курсора.</span><span class="sxs-lookup"><span data-stu-id="dadd5-198">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="dadd5-199">Примером является допустимым <xref:System.Windows.Documents.TextPointer> , не положение вставки — положение между двумя смежные <xref:System.Windows.Documents.Paragraph> теги (т. е между закрывающего тега элемента выше и открывающий тег следующего абзаца).</span><span class="sxs-lookup"><span data-stu-id="dadd5-199">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
 <span data-ttu-id="dadd5-200">Если <xref:System.Windows.Documents.TextPointer> уже указывает на допустимое положение вставки, однако закрывающий тег для непустой последовательности форматирования непосредственно следует за эту должность в заданном направлении, то <xref:System.Windows.Documents.TextPointer> возвращает этот метод корректируется для вставки положение сразу после закрытия последовательности форматирования.</span><span class="sxs-lookup"><span data-stu-id="dadd5-200">If the <xref:System.Windows.Documents.TextPointer> already points to a valid insertion position, but the closing tag for a non-empty formatting sequence directly follows that position in the given direction, then the <xref:System.Windows.Documents.TextPointer> returned by this method is adjusted to point to the insertion position just after the close of the formatting sequence.</span></span> <span data-ttu-id="dadd5-201">Например, рассмотрим последовательность разметки `<Bold>a</Bold>b`.</span><span class="sxs-lookup"><span data-stu-id="dadd5-201">For example, consider the markup sequence `<Bold>a</Bold>b`.</span></span> <span data-ttu-id="dadd5-202">Обратите внимание, что два положения вставки между буквами `a` и `b` — одна, которая предшествует закрывающий `Bold` тег и один непосредственно после закрывающего `Bold` тег.</span><span class="sxs-lookup"><span data-stu-id="dadd5-202">Note that there are two insertion positions between the letters `a` and `b` — one that precedes the closing `Bold` tag, and one directly following the closing `Bold` tag.</span></span> <span data-ttu-id="dadd5-203">Если <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> будет вызван на <xref:System.Windows.Documents.TextPointer> на позицию сразу после буквы `a` и до закрытия `Bold` тега и с `direction` из <xref:System.Windows.Documents.LogicalDirection.Forward>, возвращенный <xref:System.Windows.Documents.TextPointer> корректируется для Позиция непосредственно перед буквой `b`, после закрывающего `Bold` тег.</span><span class="sxs-lookup"><span data-stu-id="dadd5-203">If <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> is called on a <xref:System.Windows.Documents.TextPointer> to the position directly after the letter `a` and before of the closing `Bold` tag, and with a `direction` of <xref:System.Windows.Documents.LogicalDirection.Forward>, the returned <xref:System.Windows.Documents.TextPointer> is adjusted to point to the position just before the letter `b`, after the closing `Bold` tag.</span></span> <span data-ttu-id="dadd5-204">Аналогичные корректировки выполняются для открывающих тегов форматирования при работе в обратном направлении логических.</span><span class="sxs-lookup"><span data-stu-id="dadd5-204">A similar adjustment is made for opening formatting tags when working in the opposite logical direction.</span></span> <span data-ttu-id="dadd5-205">Этот метод предназначен для предоставления средств устранения неоднозначности между позициями вставки в подобных случаев.</span><span class="sxs-lookup"><span data-stu-id="dadd5-205">This method is intended to provide a means of disambiguation between insertion positions in similar cases.</span></span>  
  
 <span data-ttu-id="dadd5-206">Этот метод можно использовать также для избирательно точек вставки, если участвует последовательность структурных тегов.</span><span class="sxs-lookup"><span data-stu-id="dadd5-206">This method can also be used to be selective about insertion points when a sequence of structural tags is involved.</span></span> <span data-ttu-id="dadd5-207">Например, если на положение между закрытия и открытия тегов абзаца, направление параметра может использоваться выберите ближайший курсор в начало следующего абзаца (путем указания <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>) или в конце предыдущего абзаца ( указав <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="dadd5-207">For example, when at a position between closing and opening paragraph tags, the direction parameter can be used to select the closest insertion point at the beginning of the following paragraph (by specifying <xref:System.Windows.Documents.LogicalDirection.Forward?displayProperty=nameWithType>) or at the end of the preceding paragraph (by specifying <xref:System.Windows.Documents.LogicalDirection.Backward?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="dadd5-208">Если курсор уже находится в позиции курсора, и нет смежные форматирования тегов в указанном `direction`, возвращенный <xref:System.Windows.Documents.TextPointer> указывает на той же позиции, что и вызов метода <xref:System.Windows.Documents.TextPointer>.</span><span class="sxs-lookup"><span data-stu-id="dadd5-208">If the pointer is already at insertion position, and there are no adjacent formatting tags in the specified `direction`, the returned <xref:System.Windows.Documents.TextPointer> points to the same position as the calling <xref:System.Windows.Documents.TextPointer>.</span></span>  
  
 <span data-ttu-id="dadd5-209">Возможно, нет допустимое положение вставки существует относительно позиции, на который указывает <xref:System.Windows.Documents.TextPointer>.</span><span class="sxs-lookup"><span data-stu-id="dadd5-209">It is possible that no valid insertion position exists relative to the position pointed to by a <xref:System.Windows.Documents.TextPointer>.</span></span>  <span data-ttu-id="dadd5-210">Это может произойти, если ссылочное содержимое является структурно незавершенным, как пустой таблицы или списка.</span><span class="sxs-lookup"><span data-stu-id="dadd5-210">This can happen if the referenced content is structurally incomplete, as in an empty table or list.</span></span>  <span data-ttu-id="dadd5-211">В таком случае этот метод возвращает <xref:System.Windows.Documents.TextPointer> в той же позиции, что <xref:System.Windows.Documents.TextPointer> из которой был вызван этот метод.</span><span class="sxs-lookup"><span data-stu-id="dadd5-211">In such cases, this method simply returns a <xref:System.Windows.Documents.TextPointer> to the same position as the <xref:System.Windows.Documents.TextPointer> from which this method was called.</span></span>  <span data-ttu-id="dadd5-212">Этот метод всегда возвращает допустимое <xref:System.Windows.Documents.TextPointer>.</span><span class="sxs-lookup"><span data-stu-id="dadd5-212">This method always returns a valid <xref:System.Windows.Documents.TextPointer>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dadd5-213">В этом примере показано, как использовать <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> метод для проверки, действительно ли заданное <xref:System.Windows.Documents.TextElement> является пустым для печати содержимого.</span><span class="sxs-lookup"><span data-stu-id="dadd5-213">This example shows how to use the <xref:System.Windows.Documents.TextPointer.GetInsertionPosition%2A> method to check whether a specified <xref:System.Windows.Documents.TextElement> is empty of printable content.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getinsertionposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetInsertionPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getinsertionposition)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetLineStartPosition">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dadd5-214">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-214">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetLineStartPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetLineStartPosition (int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetLineStartPosition(int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineStartPosition (count As Integer) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetLineStartPosition(int count);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="count">
          <span data-ttu-id="dadd5-215">The number of start-of-line markers to skip when determining the line for which to return the starting position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-215">The number of start-of-line markers to skip when determining the line for which to return the starting position.</span>
          </span>
          <span data-ttu-id="dadd5-216">Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-216">Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dadd5-217">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-217">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dadd5-218">A <see cref="T:System.Windows.Documents.TextPointer" /> pointing to the beginning of the specified line (with the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> set to <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />), or <see langword="null" /> if the specified line is out of range or otherwise cannot be located.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-218">A <see cref="T:System.Windows.Documents.TextPointer" /> pointing to the beginning of the specified line (with the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> set to <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />), or <see langword="null" /> if the specified line is out of range or otherwise cannot be located.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dadd5-219">Если <xref:System.Windows.Documents.TextPointer> указывает неоднозначную позицию, например, между двумя строками строки в направлении, указанным <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> выбран в качестве относительного начальную строку.</span><span class="sxs-lookup"><span data-stu-id="dadd5-219">If the <xref:System.Windows.Documents.TextPointer> points to an ambiguous position, for example, between two lines, the line in the direction specified by <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> is selected as the relative starting line.</span></span>  
  
 <span data-ttu-id="dadd5-220">Операцию, выполняемую с помощью данного метода зависит от допустимого макета.</span><span class="sxs-lookup"><span data-stu-id="dadd5-220">The operation performed by this method depends on a valid layout.</span></span>  <span data-ttu-id="dadd5-221">При необходимости этот метод пытается автоматически восстановить допустимый макет перед продолжением операции.</span><span class="sxs-lookup"><span data-stu-id="dadd5-221">When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="dadd5-222">Повторное создание макета может быть довольно дорогой операции.</span><span class="sxs-lookup"><span data-stu-id="dadd5-222">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="dadd5-223">Используйте <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> для проверки допустимого макета перед выполнением операций, которые могут заново создать макет.</span><span class="sxs-lookup"><span data-stu-id="dadd5-223">Use <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="dadd5-224">Дополнительные сведения см. в разделе [макета](~/docs/framework/wpf/advanced/layout.md).</span><span class="sxs-lookup"><span data-stu-id="dadd5-224">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLineStartPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetLineStartPosition (int count, out int actualCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetLineStartPosition(int32 count, [out] int32&amp; actualCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetLineStartPosition(System.Int32,System.Int32@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLineStartPosition (count As Integer, ByRef actualCount As Integer) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetLineStartPosition(int count, [Runtime::InteropServices::Out] int % actualCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="actualCount" Type="System.Int32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="count">
          <span data-ttu-id="dadd5-225">The number of start-of-line markers to skip when determining the line for which to return the starting position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-225">The number of start-of-line markers to skip when determining the line for which to return the starting position.</span>
          </span>
          <span data-ttu-id="dadd5-226">Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-226">Negative values specify preceding lines, 0 specifies the current line, and positive values specify following lines.</span>
          </span>
        </param>
        <param name="actualCount">
          <span data-ttu-id="dadd5-227">When this method returns, contains the actual number of start-of-line markers that were skipped when determining the line for which to return the starting position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-227">When this method returns, contains the actual number of start-of-line markers that were skipped when determining the line for which to return the starting position.</span>
          </span>
          <span data-ttu-id="dadd5-228">This value may be less than <c>count</c> if the beginning or end of content is encountered before the specified number of lines are skipped.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-228">This value may be less than <c>count</c> if the beginning or end of content is encountered before the specified number of lines are skipped.</span>
          </span>
          <span data-ttu-id="dadd5-229">This parameter is passed uninitialized.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-229">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dadd5-230">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />, and reports how many lines were skipped.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-230">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning of a line that is specified relative to the current <see cref="T:System.Windows.Documents.TextPointer" />, and reports how many lines were skipped.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dadd5-231">A <see cref="T:System.Windows.Documents.TextPointer" /> pointing to the beginning of the specified line (with the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> set to <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />), or to the beginning of the line closest to the specified line if the specified line is out of range.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-231">A <see cref="T:System.Windows.Documents.TextPointer" /> pointing to the beginning of the specified line (with the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> set to <see cref="F:System.Windows.Documents.LogicalDirection.Forward" />), or to the beginning of the line closest to the specified line if the specified line is out of range.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dadd5-232">Если <xref:System.Windows.Documents.TextPointer> указывает неоднозначную позицию, например, между двумя строками строки в направлении, указанным <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> выбрано свойство как относительный начальную строку.</span><span class="sxs-lookup"><span data-stu-id="dadd5-232">If the <xref:System.Windows.Documents.TextPointer> points to an ambiguous position, for example, between two lines, the line in the direction specified by the <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> property is selected as the relative starting line.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextContextPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetNextContextPosition (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetNextContextPosition(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetNextContextPosition(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextContextPosition (direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetNextContextPosition(System::Windows::Documents::LogicalDirection direction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="dadd5-233">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the next symbol.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-233">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the next symbol.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dadd5-234">Returns a pointer to the next symbol in the specified logical direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-234">Returns a pointer to the next symbol in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dadd5-235">A <see cref="T:System.Windows.Documents.TextPointer" /> to the next symbol in the requested direction, or <see langword="null" /> if the current <see cref="T:System.Windows.Documents.TextPointer" /> borders the start or end of content.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-235">A <see cref="T:System.Windows.Documents.TextPointer" /> to the next symbol in the requested direction, or <see langword="null" /> if the current <see cref="T:System.Windows.Documents.TextPointer" /> borders the start or end of content.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dadd5-236">Одно из следующих рассматривается как символ:</span><span class="sxs-lookup"><span data-stu-id="dadd5-236">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="dadd5-237">Открывающий или закрывающий тег для <xref:System.Windows.Documents.TextElement> элемента.</span><span class="sxs-lookup"><span data-stu-id="dadd5-237">An opening or closing tag for a <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="dadd5-238">Объект <xref:System.Windows.UIElement> элемента, содержащегося в <xref:System.Windows.Documents.InlineUIContainer> или <xref:System.Windows.Documents.BlockUIContainer>.</span><span class="sxs-lookup"><span data-stu-id="dadd5-238">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="dadd5-239">Примечание такое <xref:System.Windows.UIElement> всегда считается ровно один символ; любое дополнительное содержимое или элементы, содержащиеся в <xref:System.Windows.UIElement> , не рассматриваются как символы.</span><span class="sxs-lookup"><span data-stu-id="dadd5-239">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="dadd5-240">16-разрядное [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] символ внутри текстового <xref:System.Windows.Documents.Run> элемента.</span><span class="sxs-lookup"><span data-stu-id="dadd5-240">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
 <span data-ttu-id="dadd5-241">Если следующий символ отнесен <xref:System.Windows.Documents.TextPointerContext.EmbeddedElement>, <xref:System.Windows.Documents.TextPointerContext.ElementStart>, или <xref:System.Windows.Documents.TextPointerContext.ElementEnd> (с <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> метод), то <xref:System.Windows.Documents.TextPointer> возвращает этот метод перемещается вперед ровно один символ из текущей позиции.</span><span class="sxs-lookup"><span data-stu-id="dadd5-241">If the next symbol is categorized as <xref:System.Windows.Documents.TextPointerContext.EmbeddedElement>, <xref:System.Windows.Documents.TextPointerContext.ElementStart>, or <xref:System.Windows.Documents.TextPointerContext.ElementEnd> (as identified by the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method), then the <xref:System.Windows.Documents.TextPointer> returned by this method is advanced by exactly one symbol from the current position.</span></span>  
  
 <span data-ttu-id="dadd5-242">Если следующий символ к категории <xref:System.Windows.Documents.TextPointerContext.Text>, то <xref:System.Windows.Documents.TextPointer> возвращает этот метод продвигается за текст к следующему символу нетекстовых (то есть следующей позиции <xref:System.Windows.Documents.TextPointerContext> не <xref:System.Windows.Documents.TextPointerContext.Text>).</span><span class="sxs-lookup"><span data-stu-id="dadd5-242">If the next symbol is categorized as <xref:System.Windows.Documents.TextPointerContext.Text>, then the <xref:System.Windows.Documents.TextPointer> returned by this method is advanced past the text to the next non-text symbol (that is, the next position where the <xref:System.Windows.Documents.TextPointerContext> is not <xref:System.Windows.Documents.TextPointerContext.Text>).</span></span>  <span data-ttu-id="dadd5-243">Символ точное число пересекаемых можно вычислить заранее путем вызова <xref:System.Windows.Documents.TextPointer.GetTextRunLength%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="dadd5-243">The exact symbol count crossed can be calculated in advance by calling the <xref:System.Windows.Documents.TextPointer.GetTextRunLength%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dadd5-244">В следующем примере показано использование этого метода.</span><span class="sxs-lookup"><span data-stu-id="dadd5-244">The following example demonstrates a use for this method.</span></span>  <span data-ttu-id="dadd5-245">В этом примере <xref:System.Windows.Documents.TextPointer.GetNextContextPosition%2A> в сочетании с <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> способ обхода и извлечь символы в указанном <xref:System.Windows.Documents.TextElement>.</span><span class="sxs-lookup"><span data-stu-id="dadd5-245">The example uses the <xref:System.Windows.Documents.TextPointer.GetNextContextPosition%2A> method in conjunction with the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method to traverse and extract the symbols in a specified <xref:System.Windows.Documents.TextElement>.</span></span>  
  
 <span data-ttu-id="dadd5-246">Хотя приведенный пример можно использовать для извлечения [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] структуры для содержимого данного <xref:System.Windows.Documents.TextElement>, он предназначен исключительно для демонстрационных целей и не должен использоваться в рабочем коде.</span><span class="sxs-lookup"><span data-stu-id="dadd5-246">While the example can be used to extract a [!INCLUDE[TLA#tla_titlexaml](~/includes/tlasharptla-titlexaml-md.md)] structure for the contents of a given <xref:System.Windows.Documents.TextElement>, it is intended for illustrative purposes only, and should not be used in production code.</span></span>  <span data-ttu-id="dadd5-247">В разделе <xref:System.Xml> пространство имен для широкий набор типов, предназначенных для работы с и обработки XML.</span><span class="sxs-lookup"><span data-stu-id="dadd5-247">See the <xref:System.Xml> namespace for a rich set of types designed for working with and processing XML.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetNextContextPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getnextcontextposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetNextContextPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getnextcontextposition)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetNextInsertionPosition">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetNextInsertionPosition (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetNextInsertionPosition(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetNextInsertionPosition (direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetNextInsertionPosition(System::Windows::Documents::LogicalDirection direction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="dadd5-248">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the next insertion position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-248">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to search for the next insertion position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dadd5-249">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the next insertion position in the specified logical direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-249">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the next insertion position in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dadd5-250">A <see cref="T:System.Windows.Documents.TextPointer" /> that identifies the next insertion position in the requested direction, or <see langword="null" /> if no next insertion position can be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-250">A <see cref="T:System.Windows.Documents.TextPointer" /> that identifies the next insertion position in the requested direction, or <see langword="null" /> if no next insertion position can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dadd5-251">*Позицию вставки* — положение, где может быть добавлено новое содержимое без нарушения любой семантических правил для соответствующего содержимого.</span><span class="sxs-lookup"><span data-stu-id="dadd5-251">An *insertion position* is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="dadd5-252">На практике положение вставки в любом месте — в содержимом положение курсора.</span><span class="sxs-lookup"><span data-stu-id="dadd5-252">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="dadd5-253">Примером является допустимым <xref:System.Windows.Documents.TextPointer> , не положение вставки — положение между двумя смежные <xref:System.Windows.Documents.Paragraph> теги (т. е между закрывающего тега элемента выше и открывающий тег следующего абзаца).</span><span class="sxs-lookup"><span data-stu-id="dadd5-253">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dadd5-254">В следующем примере показано использование этого метода.</span><span class="sxs-lookup"><span data-stu-id="dadd5-254">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="dadd5-255">В этом примере <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A> метод необходимо пройти границы содержимого элемента, чтобы число <xref:System.Windows.Documents.Paragraph> представляют элементы между двумя указанными <xref:System.Windows.Documents.TextPointer> экземпляров.</span><span class="sxs-lookup"><span data-stu-id="dadd5-255">The example uses the <xref:System.Windows.Documents.TextPointer.GetNextInsertionPosition%2A> method to traverse content element boundaries in order to count the number of <xref:System.Windows.Documents.Paragraph> elements present between two specified <xref:System.Windows.Documents.TextPointer> instances.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetNextInsertionPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getnextinsertionposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetNextInsertionPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getnextinsertionposition)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      </Docs>
    </Member>
    <Member MemberName="GetOffsetToPosition">
      <MemberSignature Language="C#" Value="public int GetOffsetToPosition (System.Windows.Documents.TextPointer position);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetOffsetToPosition(class System.Windows.Documents.TextPointer position) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetOffsetToPosition (position As TextPointer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetOffsetToPosition(System::Windows::Documents::TextPointer ^ position);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="position" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="position">
          <span data-ttu-id="dadd5-256">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to find the distance (in symbols) to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-256">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to find the distance (in symbols) to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dadd5-257">Returns the count of symbols between the current <see cref="T:System.Windows.Documents.TextPointer" /> and a second specified <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-257">Returns the count of symbols between the current <see cref="T:System.Windows.Documents.TextPointer" /> and a second specified <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dadd5-258">The relative number of symbols between the current <see cref="T:System.Windows.Documents.TextPointer" /> and <paramref name="position" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-258">The relative number of symbols between the current <see cref="T:System.Windows.Documents.TextPointer" /> and <paramref name="position" />.</span>
          </span>
          <span data-ttu-id="dadd5-259">A negative value indicates that the current <see cref="T:System.Windows.Documents.TextPointer" /> follows the position specified by <paramref name="position" />, 0 indicates that the positions are equal, and a positive value indicates that the current <see cref="T:System.Windows.Documents.TextPointer" /> precedes the position specified by <paramref name="position" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-259">A negative value indicates that the current <see cref="T:System.Windows.Documents.TextPointer" /> follows the position specified by <paramref name="position" />, 0 indicates that the positions are equal, and a positive value indicates that the current <see cref="T:System.Windows.Documents.TextPointer" /> precedes the position specified by <paramref name="position" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dadd5-260">Одно из следующих рассматривается как символ:</span><span class="sxs-lookup"><span data-stu-id="dadd5-260">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="dadd5-261">Открывающий или закрывающий тег для <xref:System.Windows.Documents.TextElement> элемента.</span><span class="sxs-lookup"><span data-stu-id="dadd5-261">An opening or closing tag for a <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="dadd5-262">Объект <xref:System.Windows.UIElement> элемента, содержащегося в <xref:System.Windows.Documents.InlineUIContainer> или <xref:System.Windows.Documents.BlockUIContainer>.</span><span class="sxs-lookup"><span data-stu-id="dadd5-262">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="dadd5-263">Примечание такое <xref:System.Windows.UIElement> всегда считается ровно один символ; любое дополнительное содержимое или элементы, содержащиеся в <xref:System.Windows.UIElement> , не рассматриваются как символы.</span><span class="sxs-lookup"><span data-stu-id="dadd5-263">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="dadd5-264">16-разрядное [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] символ внутри текстового <xref:System.Windows.Documents.Run> элемента.</span><span class="sxs-lookup"><span data-stu-id="dadd5-264">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dadd5-265">В следующем примере показано использование этого метода.</span><span class="sxs-lookup"><span data-stu-id="dadd5-265">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="dadd5-266">В этом примере <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> способ поиска смещения для двух <xref:System.Windows.Documents.TextPointer> экземпляров, а затем использует эти сведения для сохранения и восстановления в разделе <xref:System.Windows.Controls.RichTextBox>.</span><span class="sxs-lookup"><span data-stu-id="dadd5-266">The example uses the <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> method to find the offsets for two <xref:System.Windows.Documents.TextPointer> instances, and then uses this information to save and restore the selection in a <xref:System.Windows.Controls.RichTextBox>.</span></span>  <span data-ttu-id="dadd5-267">Предполагается, что содержимое <xref:System.Windows.Controls.RichTextBox> между выбора сохранения и восстановления выделения не изменились.</span><span class="sxs-lookup"><span data-stu-id="dadd5-267">The example assumes that the contents of the <xref:System.Windows.Controls.RichTextBox> have not changed between a selection save and a selection restore.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetOffsetToPosition](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getoffsettoposition)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetOffsetToPosition](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getoffsettoposition)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dadd5-268">
            <paramref name="position" /> specifies a position outside of the text container associated with the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-268">
              <paramref name="position" /> specifies a position outside of the text container associated with the current position.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Windows.Documents.TextPointer.GetPositionAtOffset" />
        <altmember cref="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <Member MemberName="GetPointerContext">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointerContext GetPointerContext (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Documents.TextPointerContext GetPointerContext(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPointerContext (direction As LogicalDirection) As TextPointerContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointerContext GetPointerContext(System::Windows::Documents::LogicalDirection direction);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetPointerContext(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointerContext</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="dadd5-269">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to determine the category for adjacent content.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-269">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to determine the category for adjacent content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dadd5-270">Returns a category indicator for the content adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-270">Returns a category indicator for the content adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dadd5-271">One of the <see cref="T:System.Windows.Documents.TextPointerContext" /> values that indicates the category for adjacent content in the specified logical direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-271">One of the <see cref="T:System.Windows.Documents.TextPointerContext" /> values that indicates the category for adjacent content in the specified logical direction.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="dadd5-272">В следующем примере показано использование этого метода.</span><span class="sxs-lookup"><span data-stu-id="dadd5-272">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="dadd5-273">В этом примере <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> метод, чтобы реализовать алгоритм для расчета баланса открывающих и закрывающих тегов элементов между двумя указанными <xref:System.Windows.Documents.TextPointer> позиций.</span><span class="sxs-lookup"><span data-stu-id="dadd5-273">The example uses the <xref:System.Windows.Documents.TextPointer.GetPointerContext%2A> method to implement an algorithm for calculating the balance of opening and closing element tags between two specified <xref:System.Windows.Documents.TextPointer> positions.</span></span>  <span data-ttu-id="dadd5-274">Каждый открывающий тег элемента считается + 1, а каждый закрывающий тег элемента считается – 1.</span><span class="sxs-lookup"><span data-stu-id="dadd5-274">Each opening element tag is counted as +1, and each closing element tag is counted as –1.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetOffsetToPosition2](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getoffsettoposition2)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetOffsetToPosition2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getoffsettoposition2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetPositionAtOffset">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dadd5-275">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of content.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-275">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of content.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetPositionAtOffset">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetPositionAtOffset (int offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetPositionAtOffset(int32 offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPositionAtOffset (offset As Integer) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetPositionAtOffset(int offset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="dadd5-276">An offset, in symbols, for which to calculate and return the position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-276">An offset, in symbols, for which to calculate and return the position.</span>
          </span>
          <span data-ttu-id="dadd5-277">If the offset is negative, the position is calculated in the logical direction opposite of that indicated by the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-277">If the offset is negative, the position is calculated in the logical direction opposite of that indicated by the <see cref="P:System.Windows.Documents.TextPointer.LogicalDirection" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dadd5-278">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-278">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dadd5-279">A <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, or <see langword="null" /> if no corresponding position can be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-279">A <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, or <see langword="null" /> if no corresponding position can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dadd5-280">Одно из следующих рассматривается как символ:</span><span class="sxs-lookup"><span data-stu-id="dadd5-280">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="dadd5-281">Открывающий или закрывающий тег для <xref:System.Windows.Documents.TextElement> элемента.</span><span class="sxs-lookup"><span data-stu-id="dadd5-281">An opening or closing tag for the <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="dadd5-282">Объект <xref:System.Windows.UIElement> элемента, содержащегося в <xref:System.Windows.Documents.InlineUIContainer> или <xref:System.Windows.Documents.BlockUIContainer>.</span><span class="sxs-lookup"><span data-stu-id="dadd5-282">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="dadd5-283">Примечание такое <xref:System.Windows.UIElement> всегда считается ровно один символ; любое дополнительное содержимое или элементы, содержащиеся в <xref:System.Windows.UIElement> , не рассматриваются как символы.</span><span class="sxs-lookup"><span data-stu-id="dadd5-283">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="dadd5-284">16-разрядное [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] символ внутри текстового <xref:System.Windows.Documents.Run> элемента.</span><span class="sxs-lookup"><span data-stu-id="dadd5-284">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dadd5-285">В следующем примере показано использование этого метода.</span><span class="sxs-lookup"><span data-stu-id="dadd5-285">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="dadd5-286">В этом примере <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> метод для реализации пары методов, один для расчета смещения в указанную позицию относительно любого размещения абзаца, а другая — для возврата <xref:System.Windows.Documents.TextPointer> указанное смещение в указанный абзаца.</span><span class="sxs-lookup"><span data-stu-id="dadd5-286">The example uses the <xref:System.Windows.Documents.TextPointer.GetPositionAtOffset%2A> method to implement a pair of methods, one to calculate the offset to a specified position relative to any hosting paragraph, and the other to return a <xref:System.Windows.Documents.TextPointer> to a specified offset in a specified paragraph.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetPositionAtOffset](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_getpositionatoffset)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetPositionAtOffset](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_getpositionatoffset)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <Member MemberName="GetPositionAtOffset">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer GetPositionAtOffset (int offset, System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer GetPositionAtOffset(int32 offset, valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetPositionAtOffset(System.Int32,System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPositionAtOffset (offset As Integer, direction As LogicalDirection) As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ GetPositionAtOffset(int offset, System::Windows::Documents::LogicalDirection direction);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.Int32" />
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="offset">
          <span data-ttu-id="dadd5-287">An offset, in symbols, for which to calculate and return the position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-287">An offset, in symbols, for which to calculate and return the position.</span>
          </span>
          <span data-ttu-id="dadd5-288">If the offset is negative, the returned <see cref="T:System.Windows.Documents.TextPointer" /> precedes the current <see cref="T:System.Windows.Documents.TextPointer" />; otherwise, it follows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-288">If the offset is negative, the returned <see cref="T:System.Windows.Documents.TextPointer" /> precedes the current <see cref="T:System.Windows.Documents.TextPointer" />; otherwise, it follows.</span>
          </span>
        </param>
        <param name="direction">
          <span data-ttu-id="dadd5-289">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction of the returned <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-289">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction of the returned <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dadd5-290">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of the current <see cref="T:System.Windows.Documents.TextPointer" /> and in the specified direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-290">Returns a <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, in symbols, from the beginning of the current <see cref="T:System.Windows.Documents.TextPointer" /> and in the specified direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dadd5-291">A <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, or <see langword="null" /> if the offset extends past the end of the content.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-291">A <see cref="T:System.Windows.Documents.TextPointer" /> to the position indicated by the specified offset, or <see langword="null" /> if the offset extends past the end of the content.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dadd5-292">Одно из следующих рассматривается как символ:</span><span class="sxs-lookup"><span data-stu-id="dadd5-292">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="dadd5-293">Открывающий или закрывающий тег для <xref:System.Windows.Documents.TextElement> элемента.</span><span class="sxs-lookup"><span data-stu-id="dadd5-293">An opening or closing tag for the <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="dadd5-294">Объект <xref:System.Windows.UIElement> элемента, содержащегося в <xref:System.Windows.Documents.InlineUIContainer> или <xref:System.Windows.Documents.BlockUIContainer>.</span><span class="sxs-lookup"><span data-stu-id="dadd5-294">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="dadd5-295">Примечание такое <xref:System.Windows.UIElement> всегда считается ровно один символ; любое дополнительное содержимое или элементы, содержащиеся в <xref:System.Windows.UIElement> , не рассматриваются как символы.</span><span class="sxs-lookup"><span data-stu-id="dadd5-295">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="dadd5-296">16-разрядное [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] символ внутри текстового <xref:System.Windows.Documents.Run> элемента.</span><span class="sxs-lookup"><span data-stu-id="dadd5-296">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetOffsetToPosition(System.Windows.Documents.TextPointer)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetTextInRun">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="dadd5-297">Returns text adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-297">Returns text adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetTextInRun">
      <MemberSignature Language="C#" Value="public string GetTextInRun (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetTextInRun(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextInRun (direction As LogicalDirection) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetTextInRun(System::Windows::Documents::LogicalDirection direction);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="dadd5-298">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find and return any adjacent text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-298">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find and return any adjacent text.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dadd5-299">Returns a string containing any text adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-299">Returns a string containing any text adjacent to the current <see cref="T:System.Windows.Documents.TextPointer" /> in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dadd5-300">A string containing any adjacent text in the specified logical direction, or <see cref="F:System.String.Empty" /> if no adjacent text can be found.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-300">A string containing any adjacent text in the specified logical direction, or <see cref="F:System.String.Empty" /> if no adjacent text can be found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dadd5-301">Этот метод возвращает только непрерывные текстовые выполнения.</span><span class="sxs-lookup"><span data-stu-id="dadd5-301">This method returns only uninterrupted runs of text.</span></span>  <span data-ttu-id="dadd5-302">Ничего не возвращается, если любой символ типа не <xref:System.Windows.Documents.TextPointerContext.Text> рядом с текущим <xref:System.Windows.Documents.TextPointer> в указанном направлении.</span><span class="sxs-lookup"><span data-stu-id="dadd5-302">Nothing is returned if any symbol type other than <xref:System.Windows.Documents.TextPointerContext.Text> is adjacent to the current <xref:System.Windows.Documents.TextPointer> in the specified direction.</span></span>  <span data-ttu-id="dadd5-303">Аналогичным образом возвращается только до следующего нетекстового символа.</span><span class="sxs-lookup"><span data-stu-id="dadd5-303">Similarly, text is returned only up to the next non-text symbol.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dadd5-304">В следующем примере показано использование этого метода.</span><span class="sxs-lookup"><span data-stu-id="dadd5-304">The following example demonstrates a use for this method.</span></span> <span data-ttu-id="dadd5-305">В этом примере <xref:System.Windows.Documents.TextPointer.GetTextInRun%2A> метод для реализации извлечения простого текста.</span><span class="sxs-lookup"><span data-stu-id="dadd5-305">The example uses the <xref:System.Windows.Documents.TextPointer.GetTextInRun%2A> method to implement a simple text extractor.</span></span>  <span data-ttu-id="dadd5-306">Метод возвращает объединение строк весь текст между двумя указанными <xref:System.Windows.Documents.TextPointer> экземпляров.</span><span class="sxs-lookup"><span data-stu-id="dadd5-306">The method returns a string concatenation of all text between two specified <xref:System.Windows.Documents.TextPointer> instances.</span></span>  
  
 <span data-ttu-id="dadd5-307">Хотя приведенный пример можно использовать для извлечения любого текста между двумя <xref:System.Windows.Documents.TextPointer> экземпляров, он предназначен исключительно для демонстрационных целей и не должен использоваться в рабочем коде.</span><span class="sxs-lookup"><span data-stu-id="dadd5-307">While the example can be used to extract any text between two <xref:System.Windows.Documents.TextPointer> instances, it is intended for illustrative purposes only, and should not be used in production code.</span></span>  <span data-ttu-id="dadd5-308">Вместо этого следует использовать свойство <xref:System.Windows.Documents.TextRange.Text%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="dadd5-308">Use the <xref:System.Windows.Documents.TextRange.Text%2A?displayProperty=nameWithType> property instead.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_GetTextInRun](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_gettextinrun)]
 [!code-vb[TextPointer_Snippets#_TextPointer_GetTextInRun](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_gettextinrun)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)" />
        <altmember cref="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetTextInRun">
      <MemberSignature Language="C#" Value="public int GetTextInRun (System.Windows.Documents.LogicalDirection direction, char[] textBuffer, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTextInRun(valuetype System.Windows.Documents.LogicalDirection direction, char[] textBuffer, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextInRun (direction As LogicalDirection, textBuffer As Char(), startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTextInRun(System::Windows::Documents::LogicalDirection direction, cli::array &lt;char&gt; ^ textBuffer, int startIndex, int count);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetTextInRun(System.Windows.Documents.LogicalDirection,System.Char[],System.Int32,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
        <Parameter Name="textBuffer" Type="System.Char[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="dadd5-309">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find and copy any adjacent text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-309">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to find and copy any adjacent text.</span>
          </span>
        </param>
        <param name="textBuffer">
          <span data-ttu-id="dadd5-310">A buffer into which any text is copied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-310">A buffer into which any text is copied.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="dadd5-311">An index into <c>textBuffer</c> at which to begin writing copied text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-311">An index into <c>textBuffer</c> at which to begin writing copied text.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="dadd5-312">The maximum number of characters to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-312">The maximum number of characters to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dadd5-313">Copies the specified maximum number of characters from any adjacent text in the specified direction into a caller-supplied character array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-313">Copies the specified maximum number of characters from any adjacent text in the specified direction into a caller-supplied character array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dadd5-314">The number of characters actually copied into <paramref name="textBuffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-314">The number of characters actually copied into <paramref name="textBuffer" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dadd5-315">Этот метод возвращает только непрерывные текстовые выполнения.</span><span class="sxs-lookup"><span data-stu-id="dadd5-315">This method returns only uninterrupted runs of text.</span></span>  <span data-ttu-id="dadd5-316">Ничего не возвращается, если любой символ типа не <xref:System.Windows.Documents.TextPointerContext.Text> рядом с текущим <xref:System.Windows.Documents.TextPointer> в указанном направлении.</span><span class="sxs-lookup"><span data-stu-id="dadd5-316">Nothing is returned if any symbol type other than <xref:System.Windows.Documents.TextPointerContext.Text> is adjacent to the current <xref:System.Windows.Documents.TextPointer> in the specified direction.</span></span>  <span data-ttu-id="dadd5-317">Аналогичным образом возвращается только до следующего нетекстового символа.</span><span class="sxs-lookup"><span data-stu-id="dadd5-317">Similarly, text is returned only up to the next non-text symbol.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="dadd5-318">
            <paramref name="startIndex" /> is less than 0 or greater than the <see cref="P:System.Array.Length" /> property of <paramref name="textBuffer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-318">
              <paramref name="startIndex" /> is less than 0 or greater than the <see cref="P:System.Array.Length" /> property of <paramref name="textBuffer" />.</span>
          </span>
          <span data-ttu-id="dadd5-319">-or-</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-319">-or-</span>
          </span>
          <span data-ttu-id="dadd5-320">
            <paramref name="count" /> is less than 0 or greater than the remaining space in <paramref name="textBuffer" /> (<paramref name="textBuffer" />.<see cref="P:System.Array.Length" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-320">
              <paramref name="count" /> is less than 0 or greater than the remaining space in <paramref name="textBuffer" /> (<paramref name="textBuffer" />.<see cref="P:System.Array.Length" /></span>
          </span>
          <span data-ttu-id="dadd5-321">minus <paramref name="startIndex" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-321">minus <paramref name="startIndex" />).</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.Documents.TextPointer.DeleteTextInRun(System.Int32)" />
        <altmember cref="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetTextRunLength">
      <MemberSignature Language="C#" Value="public int GetTextRunLength (System.Windows.Documents.LogicalDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetTextRunLength(valuetype System.Windows.Documents.LogicalDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTextRunLength (direction As LogicalDirection) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetTextRunLength(System::Windows::Documents::LogicalDirection direction);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.GetTextRunLength(System.Windows.Documents.LogicalDirection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Documents.LogicalDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="dadd5-322">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to count the number of characters.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-322">One of the <see cref="T:System.Windows.Documents.LogicalDirection" /> values that specifies the logical direction in which to count the number of characters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dadd5-323">Returns the number of Unicode characters between the current <see cref="T:System.Windows.Documents.TextPointer" /> and the next non-text symbol, in the specified logical direction.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-323">Returns the number of Unicode characters between the current <see cref="T:System.Windows.Documents.TextPointer" /> and the next non-text symbol, in the specified logical direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dadd5-324">The number of Unicode characters between the current <see cref="T:System.Windows.Documents.TextPointer" /> and the next non-text symbol.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-324">The number of Unicode characters between the current <see cref="T:System.Windows.Documents.TextPointer" /> and the next non-text symbol.</span>
          </span>
          <span data-ttu-id="dadd5-325">This number may be 0 if there is no adjacent text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-325">This number may be 0 if there is no adjacent text.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dadd5-326">Одно из следующих рассматривается как символ:</span><span class="sxs-lookup"><span data-stu-id="dadd5-326">Any of the following is considered to be a symbol:</span></span>  
  
-   <span data-ttu-id="dadd5-327">Открывающий или закрывающий тег для <xref:System.Windows.Documents.TextElement> элемента.</span><span class="sxs-lookup"><span data-stu-id="dadd5-327">An opening or closing tag for the <xref:System.Windows.Documents.TextElement> element.</span></span>  
  
-   <span data-ttu-id="dadd5-328">Объект <xref:System.Windows.UIElement> элемента, содержащегося в <xref:System.Windows.Documents.InlineUIContainer> или <xref:System.Windows.Documents.BlockUIContainer>.</span><span class="sxs-lookup"><span data-stu-id="dadd5-328">A <xref:System.Windows.UIElement> element contained in an <xref:System.Windows.Documents.InlineUIContainer> or <xref:System.Windows.Documents.BlockUIContainer>.</span></span>  <span data-ttu-id="dadd5-329">Примечание такое <xref:System.Windows.UIElement> всегда считается ровно один символ; любое дополнительное содержимое или элементы, содержащиеся в <xref:System.Windows.UIElement> , не рассматриваются как символы.</span><span class="sxs-lookup"><span data-stu-id="dadd5-329">Note that such a <xref:System.Windows.UIElement> is always counted as exactly one symbol; any additional content or elements contained by the <xref:System.Windows.UIElement> are not counted as symbols.</span></span>  
  
-   <span data-ttu-id="dadd5-330">16-разрядное [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] символ внутри текстового <xref:System.Windows.Documents.Run> элемента.</span><span class="sxs-lookup"><span data-stu-id="dadd5-330">A 16-bit [!INCLUDE[TLA#tla_unicode](~/includes/tlasharptla-unicode-md.md)] character inside of a text <xref:System.Windows.Documents.Run> element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HasValidLayout">
      <MemberSignature Language="C#" Value="public bool HasValidLayout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasValidLayout" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.HasValidLayout" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasValidLayout As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasValidLayout { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Documents.ITextPointer.HasValidLayout</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dadd5-331">Gets a value that indicates whether the text container associated with the current position has a valid (up-to-date) layout.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-331">Gets a value that indicates whether the text container associated with the current position has a valid (up-to-date) layout.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dadd5-332">
            <see langword="true" /> Если макет текущим и допустимым; в противном случае <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-332">
              <see langword="true" /> if the layout is current and valid; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dadd5-333">При необходимости операций, зависящих от допустимого макета (таких как <xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A> метод, <xref:System.Windows.Documents.TextPointer.GetCharacterRect%2A> метода, и <xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A> свойство) попытка автоматически создать заново допустимый макет перед продолжением операции.</span><span class="sxs-lookup"><span data-stu-id="dadd5-333">When necessary, operations that depend on a valid layout (such as the <xref:System.Windows.Documents.TextPointer.GetLineStartPosition%2A> method, <xref:System.Windows.Documents.TextPointer.GetCharacterRect%2A> method, and <xref:System.Windows.Documents.TextPointer.IsAtLineStartPosition%2A> property) attempt to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="dadd5-334">Повторное создание макета может быть довольно дорогой операции.</span><span class="sxs-lookup"><span data-stu-id="dadd5-334">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="dadd5-335">Используйте это свойство для проверки допустимого макета перед выполнением операций, которые могут заново создать макет.</span><span class="sxs-lookup"><span data-stu-id="dadd5-335">Use this property to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="dadd5-336">Дополнительные сведения см. в разделе [макета](~/docs/framework/wpf/advanced/layout.md).</span><span class="sxs-lookup"><span data-stu-id="dadd5-336">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertLineBreak">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer InsertLineBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer InsertLineBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.InsertLineBreak" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertLineBreak () As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ InsertLineBreak();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dadd5-337">Inserts a line break at the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-337">Inserts a line break at the current position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dadd5-338">A <see cref="T:System.Windows.Documents.TextPointer" /> positioned immediately after the <see cref="T:System.Windows.Documents.LineBreak" /> element inserted by this method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-338">A <see cref="T:System.Windows.Documents.TextPointer" /> positioned immediately after the <see cref="T:System.Windows.Documents.LineBreak" /> element inserted by this method.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertParagraphBreak">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.TextPointer InsertParagraphBreak ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Documents.TextPointer InsertParagraphBreak() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.InsertParagraphBreak" />
      <MemberSignature Language="VB.NET" Value="Public Function InsertParagraphBreak () As TextPointer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Documents::TextPointer ^ InsertParagraphBreak();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.TextPointer</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dadd5-339">Inserts a paragraph break at the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-339">Inserts a paragraph break at the current position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dadd5-340">A <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning (<see cref="P:System.Windows.Documents.TextElement.ContentStart" />) of the new paragraph.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-340">A <see cref="T:System.Windows.Documents.TextPointer" /> to the beginning (<see cref="P:System.Windows.Documents.TextElement.ContentStart" />) of the new paragraph.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dadd5-341">Если этот метод вызывается в том случае, если текущее положение находится внутри существующего <xref:System.Windows.Documents.Paragraph> элемент, существующий абзац и любое содержимое, он содержит разбиваются на два абзаца в текущем положении.</span><span class="sxs-lookup"><span data-stu-id="dadd5-341">If this method is called when the current position is inside of an existing <xref:System.Windows.Documents.Paragraph> element, the existing paragraph and any content it contains are split into two paragraphs at the current position.</span></span>  <span data-ttu-id="dadd5-342">Если этот метод вызывается, когда текущее положение находится за рамками существующего абзаца, вставляется новый, пустой абзац.</span><span class="sxs-lookup"><span data-stu-id="dadd5-342">If this method is called when the current position is not inside of an existing paragraph, a new, empty paragraph is inserted.</span></span>  <span data-ttu-id="dadd5-343">Если этот метод вызывается в позиции непригодным для разделения или вставки абзаца (например, в том случае, если текущее положение находится внутри <xref:System.Windows.Documents.Hyperlink> элемент), создается исключение.</span><span class="sxs-lookup"><span data-stu-id="dadd5-343">If this method is called at a position unsuitable for splitting or inserting a paragraph (for example, if the current position is inside of a <xref:System.Windows.Documents.Hyperlink> element), an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="dadd5-344">This method is called on a position that cannot be split to accommodate a new paragraph, such as in the scope of a <see cref="T:System.Windows.Documents.Hyperlink" /> or <see cref="T:System.Windows.Documents.InlineUIContainer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-344">This method is called on a position that cannot be split to accommodate a new paragraph, such as in the scope of a <see cref="T:System.Windows.Documents.Hyperlink" /> or <see cref="T:System.Windows.Documents.InlineUIContainer" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InsertTextInRun">
      <MemberSignature Language="C#" Value="public void InsertTextInRun (string textData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void InsertTextInRun(string textData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.InsertTextInRun(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub InsertTextInRun (textData As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void InsertTextInRun(System::String ^ textData);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Documents.ITextPointer.InsertTextInRun(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textData" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="textData">
          <span data-ttu-id="dadd5-345">The text to insert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-345">The text to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dadd5-346">Inserts the specified text into the text <see cref="T:System.Windows.Documents.Run" /> at the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-346">Inserts the specified text into the text <see cref="T:System.Windows.Documents.Run" /> at the current position.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dadd5-347">Если <xref:System.Windows.Documents.TextPointer> не ограничивается <xref:System.Windows.Documents.Run> элемент, <xref:System.Windows.Documents.Run> вставляется вместе с `textData`.</span><span class="sxs-lookup"><span data-stu-id="dadd5-347">If the <xref:System.Windows.Documents.TextPointer> is not scoped by a <xref:System.Windows.Documents.Run> element, a <xref:System.Windows.Documents.Run> is inserted along with the `textData`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="dadd5-348">The current position is not within a <see cref="T:System.Windows.Documents.Run" /> element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-348">The current position is not within a <see cref="T:System.Windows.Documents.Run" /> element.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dadd5-349">
            <paramref name="textData" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-349">
              <paramref name="textData" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsAtInsertionPosition">
      <MemberSignature Language="C#" Value="public bool IsAtInsertionPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAtInsertionPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.IsAtInsertionPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAtInsertionPosition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAtInsertionPosition { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Documents.ITextPointer.IsAtInsertionPosition</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dadd5-350">Gets a value that indicates whether the current position is an insertion position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-350">Gets a value that indicates whether the current position is an insertion position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dadd5-351">
            <see langword="true" /> Если текущее положение находится в позицию вставки; в противном случае <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-351">
              <see langword="true" /> if the current position is an insertion position; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dadd5-352">Положение вставки — положение, где может быть добавлено новое содержимое без нарушения любой семантических правил для соответствующего содержимого.</span><span class="sxs-lookup"><span data-stu-id="dadd5-352">An insertion position is a position where new content may be added without breaking any semantic rules for the associated content.</span></span>  <span data-ttu-id="dadd5-353">На практике положение вставки в любом месте — в содержимом положение курсора.</span><span class="sxs-lookup"><span data-stu-id="dadd5-353">In practice, an insertion position is anywhere in content where a caret may be positioned.</span></span>  <span data-ttu-id="dadd5-354">Примером является допустимым <xref:System.Windows.Documents.TextPointer> , не положение вставки — положение между двумя смежные <xref:System.Windows.Documents.Paragraph> теги (т. е между закрывающего тега элемента выше и открывающий тег следующего абзаца).</span><span class="sxs-lookup"><span data-stu-id="dadd5-354">An example of a valid <xref:System.Windows.Documents.TextPointer> position that is not an insertion position is the position between two adjacent <xref:System.Windows.Documents.Paragraph> tags (that is, between the closing tag of the preceding paragraph and the opening tag of the next paragraph).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Documents.TextPointer.GetInsertionPosition(System.Windows.Documents.LogicalDirection)" />
        <altmember cref="M:System.Windows.Documents.TextPointer.GetNextInsertionPosition(System.Windows.Documents.LogicalDirection)" />
      </Docs>
    </Member>
    <Member MemberName="IsAtLineStartPosition">
      <MemberSignature Language="C#" Value="public bool IsAtLineStartPosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAtLineStartPosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAtLineStartPosition As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAtLineStartPosition { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dadd5-355">Gets a value that indicates whether the current position is at the beginning of a line.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-355">Gets a value that indicates whether the current position is at the beginning of a line.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dadd5-356">
            <see langword="true" /> Если текущее положение находится в начале строки; в противном случае <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-356">
              <see langword="true" /> if the current position is at the beginning of a line; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dadd5-357">Если <xref:System.Windows.Documents.TextPointer> указывает неоднозначную позицию, например, между двумя строками строки в направлении, указанным <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> выбрано свойство как относительный начальную строку.</span><span class="sxs-lookup"><span data-stu-id="dadd5-357">If the <xref:System.Windows.Documents.TextPointer> points to an ambiguous position, for example, between two lines, the line in the direction specified by the <xref:System.Windows.Documents.TextPointer.LogicalDirection%2A> property is selected as the relative starting line.</span></span>  
  
 <span data-ttu-id="dadd5-358">Операция, выполняемая это свойство зависит от допустимого макета.</span><span class="sxs-lookup"><span data-stu-id="dadd5-358">The operation performed by this property depends on a valid layout.</span></span>  <span data-ttu-id="dadd5-359">При необходимости этот метод пытается автоматически восстановить допустимый макет перед продолжением операции.</span><span class="sxs-lookup"><span data-stu-id="dadd5-359">When necessary, this method attempts to automatically regenerate a valid layout before proceeding with the operation.</span></span>  <span data-ttu-id="dadd5-360">Повторное создание макета может быть довольно дорогой операции.</span><span class="sxs-lookup"><span data-stu-id="dadd5-360">Regenerating a layout can be a relatively expensive operation.</span></span>  <span data-ttu-id="dadd5-361">Используйте <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> свойство для проверки допустимого макета перед выполнением операций, которые могут заново создать макет.</span><span class="sxs-lookup"><span data-stu-id="dadd5-361">Use the <xref:System.Windows.Documents.TextPointer.HasValidLayout%2A> property to check for a valid layout before performing operations that may regenerate the layout.</span></span>  <span data-ttu-id="dadd5-362">Дополнительные сведения см. в разделе [макета](~/docs/framework/wpf/advanced/layout.md).</span><span class="sxs-lookup"><span data-stu-id="dadd5-362">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.IsAtLineStartPosition" />
      </Docs>
    </Member>
    <Member MemberName="IsInSameDocument">
      <MemberSignature Language="C#" Value="public bool IsInSameDocument (System.Windows.Documents.TextPointer textPosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsInSameDocument(class System.Windows.Documents.TextPointer textPosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.IsInSameDocument(System.Windows.Documents.TextPointer)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsInSameDocument (textPosition As TextPointer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsInSameDocument(System::Windows::Documents::TextPointer ^ textPosition);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="textPosition" Type="System.Windows.Documents.TextPointer" />
      </Parameters>
      <Docs>
        <param name="textPosition">
          <span data-ttu-id="dadd5-363">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to compare to the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-363">A <see cref="T:System.Windows.Documents.TextPointer" /> that specifies a position to compare to the current position.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="dadd5-364">Indicates whether the specified position is in the same text container as the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-364">Indicates whether the specified position is in the same text container as the current position.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dadd5-365">
            <see langword="true" /> if <paramref name="textPosition" /> indicates a position that is in the same text container as the current position; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-365">
              <see langword="true" /> if <paramref name="textPosition" /> indicates a position that is in the same text container as the current position; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dadd5-366">Большинство операций, которые включают несколько <xref:System.Windows.Documents.TextPointer> экземпляров допустимы только в случае, если данные экземпляры указывают положения, которые находятся в одной и той же области действия контейнера текста.</span><span class="sxs-lookup"><span data-stu-id="dadd5-366">Most operations that involve multiple <xref:System.Windows.Documents.TextPointer> instances are only valid if the instances in question indicate positions that are in the same text container scope.</span></span>  <span data-ttu-id="dadd5-367">Например <xref:System.Windows.Documents.TextPointer.CompareTo%2A> и <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> методов не может использоваться с <xref:System.Windows.Documents.TextPointer> позицию за пределами текстового контейнера, связанного с текущей позиции.</span><span class="sxs-lookup"><span data-stu-id="dadd5-367">For example the <xref:System.Windows.Documents.TextPointer.CompareTo%2A> and <xref:System.Windows.Documents.TextPointer.GetOffsetToPosition%2A> methods cannot be used with a <xref:System.Windows.Documents.TextPointer> to a position outside of the text container associated with the current position.</span></span>  <span data-ttu-id="dadd5-368">Используйте этот метод, чтобы убедиться, что указанный <xref:System.Windows.Documents.TextPointer> совместима с текущей позиции для таких операций.</span><span class="sxs-lookup"><span data-stu-id="dadd5-368">Use this method to verify that a specified <xref:System.Windows.Documents.TextPointer> is compatible with the current position for such operations.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="dadd5-369">В следующем примере показано использование этого метода.</span><span class="sxs-lookup"><span data-stu-id="dadd5-369">The following example demonstrates a use for this method.</span></span>  <span data-ttu-id="dadd5-370">В этом примере <xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A> метод для проверки, действительно ли заданное <xref:System.Windows.Documents.TextPointer> располагается между двумя для других из указанного <xref:System.Windows.Documents.TextPointer> экземпляров в ситуации, когда нет никакой гарантии, всех трех позиций входит в том же текстовом контейнере.</span><span class="sxs-lookup"><span data-stu-id="dadd5-370">The example uses the <xref:System.Windows.Documents.TextPointer.IsInSameDocument%2A> method to check whether a specified <xref:System.Windows.Documents.TextPointer> is positioned between two other specified <xref:System.Windows.Documents.TextPointer> instances in a situation when there is no guarantee that all three positions belong to the same text container.</span></span>  
  
 [!code-csharp[TextPointer_Snippets#_TextPointer_IsInSameDocument](~/samples/snippets/csharp/VS_Snippets_Wpf/TextPointer_Snippets/CSharp/Window1.xaml.cs#_textpointer_isinsamedocument)]
 [!code-vb[TextPointer_Snippets#_TextPointer_IsInSameDocument](~/samples/snippets/visualbasic/VS_Snippets_Wpf/TextPointer_Snippets/visualbasic/window1.xaml.vb#_textpointer_isinsamedocument)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="dadd5-371">
            <paramref name="textPosition" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-371">
              <paramref name="textPosition" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="LogicalDirection">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.LogicalDirection LogicalDirection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Documents.LogicalDirection LogicalDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.LogicalDirection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LogicalDirection As LogicalDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::LogicalDirection LogicalDirection { System::Windows::Documents::LogicalDirection get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Documents.ITextPointer.LogicalDirection</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.LogicalDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dadd5-372">Gets the logical direction associated with the current position which is used to disambiguate content associated with the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-372">Gets the logical direction associated with the current position which is used to disambiguate content associated with the current position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dadd5-373">
            <see cref="T:System.Windows.Documents.LogicalDirection" /> Значение, связанное с текущей позиции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-373">The <see cref="T:System.Windows.Documents.LogicalDirection" /> value that is associated with the current position.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="dadd5-374">В качестве примера использования этого свойства <xref:System.Windows.Documents.LogicalDirection> из <xref:System.Windows.Documents.TextPointer> возвращается путем нажатия метод дает попадания в точку между двумя символов текста.</span><span class="sxs-lookup"><span data-stu-id="dadd5-374">As an example of how this property is used, the <xref:System.Windows.Documents.LogicalDirection> of the <xref:System.Windows.Documents.TextPointer> returned by a hit test method gives a hit that is between two characters of text.</span></span> <span data-ttu-id="dadd5-375">Логическое направление указывает, какой из двух символов был нажат — влево или вправо.</span><span class="sxs-lookup"><span data-stu-id="dadd5-375">The logical direction specifies which of the two characters was actually hit—the left or the right.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Paragraph">
      <MemberSignature Language="C#" Value="public System.Windows.Documents.Paragraph Paragraph { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Documents.Paragraph Paragraph" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.Paragraph" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Paragraph As Paragraph" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Documents::Paragraph ^ Paragraph { System::Windows::Documents::Paragraph ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Documents.Paragraph</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dadd5-376">Gets the paragraph that scopes the current position, if any.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-376">Gets the paragraph that scopes the current position, if any.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dadd5-377">
            <see cref="T:System.Windows.Documents.Paragraph" /> , Области текущей позиции или <see langword="null" /> Если такие абзац не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-377">The <see cref="T:System.Windows.Documents.Paragraph" /> that scopes the current position, or <see langword="null" /> if no such paragraph exists.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.Parent" />
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Documents.TextPointer.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObject ^ Parent { System::Windows::DependencyObject ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="dadd5-378">Gets the logical parent that scopes the current position.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-378">Gets the logical parent that scopes the current position.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="dadd5-379">Логический родительский объект, определяющий текущую позицию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-379">The logical parent that scopes the current position.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Documents.TextPointer.Paragraph" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Documents.TextPointer.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="dadd5-380">This type or member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-380">This type or member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="dadd5-381">The string that represents the object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="dadd5-381">The string that represents the object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>