<Type Name="Legend" FullName="System.Windows.Forms.DataVisualization.Charting.Legend">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="96a6a3b42d9decdfc403242f27f581c93d374fe1" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36359823" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Legend : System.Windows.Forms.DataVisualization.Charting.ChartNamedElement" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Legend extends System.Windows.Forms.DataVisualization.Charting.ChartNamedElement" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DataVisualization.Charting.Legend" />
  <TypeSignature Language="VB.NET" Value="Public Class Legend&#xA;Inherits ChartNamedElement" />
  <TypeSignature Language="C++ CLI" Value="public ref class Legend : System::Windows::Forms::DataVisualization::Charting::ChartNamedElement" />
  <TypeSignature Language="F#" Value="type Legend = class&#xA;    inherit ChartNamedElement" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.DataVisualization.Charting.ChartNamedElement</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Enabled")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="8202d-101">Представляет условные обозначения для изображения диаграммы.</span>
      <span class="sxs-lookup">
        <span data-stu-id="8202d-101">Represents the legend for the chart image.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8202d-102"><xref:System.Windows.Forms.DataVisualization.Charting.Legend> Класс инкапсулирует все функциональные возможности <xref:System.Windows.Forms.DataVisualization.Charting.Chart> управления элемента условных обозначений и представляется с помощью <xref:System.Windows.Forms.DataVisualization.Charting.Chart.Legends%2A> свойство коллекции корневого <xref:System.Windows.Forms.DataVisualization.Charting.Chart> объекта.</span><span class="sxs-lookup"><span data-stu-id="8202d-102">The <xref:System.Windows.Forms.DataVisualization.Charting.Legend> class encapsulates all the functionality of the <xref:System.Windows.Forms.DataVisualization.Charting.Chart> control's legend, and is exposed using the <xref:System.Windows.Forms.DataVisualization.Charting.Chart.Legends%2A> collection property of the root <xref:System.Windows.Forms.DataVisualization.Charting.Chart> object.</span></span>  
  
 <span data-ttu-id="8202d-103">Может существовать любое число условные обозначения для изображения диаграммы.</span><span class="sxs-lookup"><span data-stu-id="8202d-103">There can be any number of legends for a chart image.</span></span>  
  
 <span data-ttu-id="8202d-104">Условные обозначения можно:</span><span class="sxs-lookup"><span data-stu-id="8202d-104">Legends can:</span></span>  
  
-   <span data-ttu-id="8202d-105">Закрепляться и выравниваться.</span><span class="sxs-lookup"><span data-stu-id="8202d-105">Be docked and aligned.</span></span>  
  
-   <span data-ttu-id="8202d-106">Отображаться внутри или за пределами построенных областей диаграммы.</span><span class="sxs-lookup"><span data-stu-id="8202d-106">Be displayed inside or outside the plotted chart areas.</span></span>  
  
-   <span data-ttu-id="8202d-107">Автоматически их содержимому.</span><span class="sxs-lookup"><span data-stu-id="8202d-107">Automatically fit their contents.</span></span>  
  
-   <span data-ttu-id="8202d-108">Используйте заранее заданный стиль, такие как строки, столбца или таблицы.</span><span class="sxs-lookup"><span data-stu-id="8202d-108">Use a predefined style, such as row, column or table.</span></span>  
  
-   <span data-ttu-id="8202d-109">Используйте штриховки, цвета градиента и фоновые изображения.</span><span class="sxs-lookup"><span data-stu-id="8202d-109">Use hatching, gradient colors and background images.</span></span>  
  
-   <span data-ttu-id="8202d-110">Можно изменять размеры и расположение в любом месте в пределах изображения диаграммы.</span><span class="sxs-lookup"><span data-stu-id="8202d-110">Be sized and positioned anywhere within the chart image.</span></span>  
  
 <span data-ttu-id="8202d-111">Представлены элементы условных обозначений <xref:System.Windows.Forms.DataVisualization.Charting.LegendItem> объекта и по умолчанию или пользовательские элементы.</span><span class="sxs-lookup"><span data-stu-id="8202d-111">Legend items are represented by the <xref:System.Windows.Forms.DataVisualization.Charting.LegendItem> object, and are either default or custom items.</span></span> <span data-ttu-id="8202d-112">Пользовательские элементы не связаны с данными, можно добавить, удалить и изменить с помощью <xref:System.Windows.Forms.DataVisualization.Charting.Legend.CustomItems%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="8202d-112">Custom items are not associated with data, and can be added, deleted and modified using the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.CustomItems%2A> property.</span></span>  
  
 <span data-ttu-id="8202d-113">По умолчанию элементы по умолчанию автоматически добавляются в условные обозначения и являются именами точки данных на диаграмме кольцевых и круговых диаграмм.</span><span class="sxs-lookup"><span data-stu-id="8202d-113">Default items are by default automatically added to the legend, and are the names of the plotted data points for doughnut and pie charts.</span></span>  
  
 <span data-ttu-id="8202d-114">Для других типов диаграмм элементы по умолчанию — имена рядов данных на диаграмме.</span><span class="sxs-lookup"><span data-stu-id="8202d-114">For all other chart types, the default items are the names of the plotted data series.</span></span> <span data-ttu-id="8202d-115">Каждый ряд содержит <xref:System.Windows.Forms.DataVisualization.Charting.Series.Legend%2A> свойство, определяющее имя условных обозначений, который будет использоваться.</span><span class="sxs-lookup"><span data-stu-id="8202d-115">Each series has a <xref:System.Windows.Forms.DataVisualization.Charting.Series.Legend%2A> property that defines the name of the legend that will be used.</span></span> <span data-ttu-id="8202d-116">Элемент условных обозначений не будут создаваться для ряда, если <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.IsVisibleInLegend%2A> свойству `false`.</span><span class="sxs-lookup"><span data-stu-id="8202d-116">A legend item will not be created for a series if the <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.IsVisibleInLegend%2A> property is set to `false`.</span></span> <span data-ttu-id="8202d-117">Текст для этих элементов по умолчанию можно изменить с помощью <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.LegendText%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="8202d-117">The text for these default items can be changed using the <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.LegendText%2A> property.</span></span> <span data-ttu-id="8202d-118">Это свойство позволит указать предопределенные ключевые слова, которые будут заменены на соответствующие значения во время выполнения.</span><span class="sxs-lookup"><span data-stu-id="8202d-118">This property will allow you to specify predefined keywords that will be replaced by their appropriate values at run-time.</span></span>  
  
 <span data-ttu-id="8202d-119">Если у вас есть круговую диаграмму и установить <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.Label%2A> свойства, он будет также установить текст условных обозначений в значение, заданное для метки.</span><span class="sxs-lookup"><span data-stu-id="8202d-119">If you have a pie chart and you set the <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.Label%2A> property, it will also set the legend text to the value you set for the labels.</span></span> <span data-ttu-id="8202d-120">Если вы хотите задать текст другое значение, можно задать <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.LegendText%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="8202d-120">If you want to set the text to a different value, you can set the <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.LegendText%2A> property.</span></span> <span data-ttu-id="8202d-121">В большинстве случаев может потребоваться задавать <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.LegendText%2A> свойство «#AXISLABEL» или «#VALX».</span><span class="sxs-lookup"><span data-stu-id="8202d-121">In most cases, you would want to set the <xref:System.Windows.Forms.DataVisualization.Charting.DataPointCustomProperties.LegendText%2A> property to "#AXISLABEL" or "#VALX".</span></span>  
  
 <span data-ttu-id="8202d-122">Символов условных обозначений рядов, прямоугольники, точек или линий.</span><span class="sxs-lookup"><span data-stu-id="8202d-122">Legend series symbols are rectangles, dots or lines.</span></span> <span data-ttu-id="8202d-123">Тип символа автоматически задается диаграммы и зависит от типа построенной диаграммы.</span><span class="sxs-lookup"><span data-stu-id="8202d-123">The symbol type is set automatically by the chart and depends on the plotted chart type.</span></span>  
  
 <span data-ttu-id="8202d-124">Автоматическое изменение размеров текста условных обозначений по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="8202d-124">Legend text by default is automatically sized.</span></span> <span data-ttu-id="8202d-125">Можно отключить автоматическое изменение размеров текста условных обозначений, отключив <xref:System.Windows.Forms.DataVisualization.Charting.Legend.IsTextAutoFit%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="8202d-125">You can disable automatic sizing of legend text by disabling the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.IsTextAutoFit%2A> property.</span></span> <span data-ttu-id="8202d-126">Если значение этого свойства `false`, размер текста условных обозначений определяется свойством размер условных обозначений <xref:System.Windows.Forms.DataVisualization.Charting.Legend.Font%2A>.</span><span class="sxs-lookup"><span data-stu-id="8202d-126">When this property is set to `false`, the size of the legend text is determined by the Size property of the legend <xref:System.Windows.Forms.DataVisualization.Charting.Legend.Font%2A>.</span></span> <span data-ttu-id="8202d-127">Если <xref:System.Windows.Forms.DataVisualization.Charting.Legend.IsTextAutoFit%2A> свойство включено, <xref:System.Windows.Forms.DataVisualization.Charting.Legend.AutoFitMinFontSize%2A> свойство определяет минимальный размер шрифта, может иметь элемент условных обозначений при изменении размера.</span><span class="sxs-lookup"><span data-stu-id="8202d-127">If the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.IsTextAutoFit%2A> property is enabled, the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.AutoFitMinFontSize%2A> property determines the minimum font size that a legend item can have when resizing.</span></span>  
  
 <span data-ttu-id="8202d-128"><xref:System.Windows.Forms.DataVisualization.Charting.Legend.TextWrapThreshold%2A> Свойство определяет ограничение на число символов, которые могут отображаться на одной строке, прежде чем текст переносится на другую строку.</span><span class="sxs-lookup"><span data-stu-id="8202d-128">The <xref:System.Windows.Forms.DataVisualization.Charting.Legend.TextWrapThreshold%2A> property defines a limit on the number of characters that can be shown on one line before text is wrapped to another line.</span></span> <span data-ttu-id="8202d-129">Если вы не хотите переносить текст в условных обозначениях, установите для параметра <xref:System.Windows.Forms.DataVisualization.Charting.Legend.TextWrapThreshold%2A> равным нулю.</span><span class="sxs-lookup"><span data-stu-id="8202d-129">If you do not wish to wrap text in the legend, set the value of the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.TextWrapThreshold%2A> property to zero.</span></span> <span data-ttu-id="8202d-130">По умолчанию когда текст всей условных обозначений не умещается в условных обозначениях, текст будет усечено.</span><span class="sxs-lookup"><span data-stu-id="8202d-130">By default, when the entire legend text does not fit in the legend, the text will be truncated.</span></span> <span data-ttu-id="8202d-131">Можно задать <xref:System.Windows.Forms.DataVisualization.Charting.Legend.TextWrapThreshold%2A> условных обозначений для получения текста на следующие строки вместо их усечения.</span><span class="sxs-lookup"><span data-stu-id="8202d-131">You can set the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.TextWrapThreshold%2A> on the legend to get the text to wrap instead of being truncated.</span></span>  
  
 <span data-ttu-id="8202d-132">Если содержимое условных обозначений не может поместиться в заданном пространстве, записи легенды усекаются.</span><span class="sxs-lookup"><span data-stu-id="8202d-132">If the contents of the legend cannot fit into the given space, legend entries are truncated.</span></span> <span data-ttu-id="8202d-133">Указывает, что дополнительные записи в легенде не места для отображается многоточие.</span><span class="sxs-lookup"><span data-stu-id="8202d-133">An ellipsis is shown to indicate that there are more entries than the legend has space for.</span></span> <span data-ttu-id="8202d-134">Чтобы предотвратить усечение элементов условных обозначений, задайте положение и размер условных обозначений с помощью <xref:System.Windows.Forms.DataVisualization.Charting.Legend.Position%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="8202d-134">To prevent the legend items from being truncated, set the position and size of the legend using the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.Position%2A> property.</span></span> <span data-ttu-id="8202d-135">При задании позиция условных обозначений или размер, диаграмму можно разместить больше не будет автоматически элементов диаграммы.</span><span class="sxs-lookup"><span data-stu-id="8202d-135">When setting the legend position or size, the chart can no longer automatically position the elements in the chart.</span></span> <span data-ttu-id="8202d-136">В некоторых случаях многие необходимо вручную разместить другие элементы диаграммы для достижения нужного внешнего вида.</span><span class="sxs-lookup"><span data-stu-id="8202d-136">In some cases, you many need to manually position other chart elements to achieve the desired appearance.</span></span>  
  
 <span data-ttu-id="8202d-137">Другой вариант можно определить столбцы ячейки вместо использования параметров легенды по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="8202d-137">Another option would be to define your own cell columns instead of using the default legend settings.</span></span>  
  
 <span data-ttu-id="8202d-138"><xref:System.Windows.Forms.DataVisualization.Charting.Legend> Имеет коллекцию CellColumn; каждый объект CellColumn представляет столбец в условных обозначениях.</span><span class="sxs-lookup"><span data-stu-id="8202d-138">The <xref:System.Windows.Forms.DataVisualization.Charting.Legend> object has a CellColumn Collection; each CellColumn object represents a column in the Legend.</span></span> <span data-ttu-id="8202d-139">Столбец ячейки имеет <xref:System.Windows.Forms.DataVisualization.Charting.LegendCellColumn.MaximumWidth%2A> и <xref:System.Windows.Forms.DataVisualization.Charting.LegendCellColumn.MinimumWidth%2A> свойства, которые можно использовать для изменения размера столбцов.</span><span class="sxs-lookup"><span data-stu-id="8202d-139">A cell column has <xref:System.Windows.Forms.DataVisualization.Charting.LegendCellColumn.MaximumWidth%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.LegendCellColumn.MinimumWidth%2A> properties that can be used to adjust the size of the columns.</span></span>  
  
 <span data-ttu-id="8202d-140">Если условные обозначения содержит много записей <xref:System.Windows.Forms.DataVisualization.Charting.Legend.InterlacedRows%2A> можно использовать для повышения удобства чтения.</span><span class="sxs-lookup"><span data-stu-id="8202d-140">When the legend contains many entries, <xref:System.Windows.Forms.DataVisualization.Charting.Legend.InterlacedRows%2A> can be used to improve readability.</span></span> <span data-ttu-id="8202d-141">Если это свойство имеет значение True, будут показаны фоновый цвет, который можно задать с помощью <xref:System.Windows.Forms.DataVisualization.Charting.Legend.InterlacedRowsColor%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="8202d-141">When this property is set to True, it will display a back color that you can set using the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.InterlacedRowsColor%2A> property.</span></span>  
  
 <span data-ttu-id="8202d-142">По умолчанию условные обозначения располагается в верхнем правом углу диаграммы.</span><span class="sxs-lookup"><span data-stu-id="8202d-142">By default, the legend is positioned in the top-right corner of the chart.</span></span> <span data-ttu-id="8202d-143">Это положение можно изменить с помощью <xref:System.Windows.Forms.DataVisualization.Charting.Legend.Docking%2A> и <xref:System.Windows.Forms.DataVisualization.Charting.Legend.Alignment%2A> свойства условных обозначений.</span><span class="sxs-lookup"><span data-stu-id="8202d-143">This position can be modified by using the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.Docking%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Legend.Alignment%2A> properties of the legend.</span></span> <span data-ttu-id="8202d-144">Условные обозначения также могут быть связаны с областью диаграммы с помощью <xref:System.Windows.Forms.DataVisualization.Charting.Legend.DockedToChartArea%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="8202d-144">The legend can also be associated with a chart area by use of the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.DockedToChartArea%2A> property.</span></span> <span data-ttu-id="8202d-145">Это свойство задает имя области диаграммы, для которого должен фиксироваться условных обозначений.</span><span class="sxs-lookup"><span data-stu-id="8202d-145">This property specifies the name of the chart area for which the legend should be docked.</span></span> <span data-ttu-id="8202d-146">Кроме того <xref:System.Windows.Forms.DataVisualization.Charting.Legend.IsDockedInsideChartArea%2A> свойство может использоваться для отображения условных обозначений в области диаграммы.</span><span class="sxs-lookup"><span data-stu-id="8202d-146">In addition, the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.IsDockedInsideChartArea%2A> property can be used to display the legend inside a chart area.</span></span>  
  
 <span data-ttu-id="8202d-147">Когда <xref:System.Windows.Forms.DataVisualization.Charting.Legend.IsDockedInsideChartArea%2A> имеет значение False, <xref:System.Windows.Forms.DataVisualization.Charting.Legend.MaximumAutoSize%2A> свойство определяет максимальный размер в процентах, условных обозначений в пределах доступных диаграммы, если условные обозначения автоматически располагается.</span><span class="sxs-lookup"><span data-stu-id="8202d-147">When <xref:System.Windows.Forms.DataVisualization.Charting.Legend.IsDockedInsideChartArea%2A> is set to False, the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.MaximumAutoSize%2A> property defines the maximum size, in percent, of the legend within the available chart when the legend is automatically positioned.</span></span> <span data-ttu-id="8202d-148">Это свойство должно задаваться, если вы хотите настроить ширину или высоту условных обозначений после закрепления свойства были заданы.</span><span class="sxs-lookup"><span data-stu-id="8202d-148">This property should be set if you wish to adjust the width or height of the legend after the docking properties have been set.</span></span>  
  
 <span data-ttu-id="8202d-149">Условные обозначения можно изменить с помощью <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CustomizeLegend> событий.</span><span class="sxs-lookup"><span data-stu-id="8202d-149">The legend can be modified using the <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CustomizeLegend> event.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-150">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.DataVisualization.Charting.Legend" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-150">Initializes a new instance of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Legend" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Legend ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Legend.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Legend();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="8202d-151">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.DataVisualization.Charting.Legend" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-151">Initializes a new instance of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Legend" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Legend (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Legend.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Legend(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.DataVisualization.Charting.Legend : string -&gt; System.Windows.Forms.DataVisualization.Charting.Legend" Usage="new System.Windows.Forms.DataVisualization.Charting.Legend name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="8202d-152">Имя объекта <see cref="T:System.Windows.Forms.DataVisualization.Charting.Legend" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-152">The name of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Legend" /> object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8202d-153">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.DataVisualization.Charting.AnnotationPathPoint" />, используя указанное имя легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-153">Initializes a new instance of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.AnnotationPathPoint" /> class with the specified legend name.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Alignment">
      <MemberSignature Language="C#" Value="public System.Drawing.StringAlignment Alignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.StringAlignment Alignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.Alignment" />
      <MemberSignature Language="VB.NET" Value="Public Property Alignment As StringAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::StringAlignment Alignment { System::Drawing::StringAlignment get(); void set(System::Drawing::StringAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.Alignment : System.Drawing.StringAlignment with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.Alignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.StringAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-154">Возвращает или задает способ выравнивания в условных обозначениях.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-154">Gets or sets the alignment of the legend.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-155">Значение перечисления <see cref="T:System.Drawing.StringAlignment" /> .NET Framework, которое представляет выравнивание условных обозначений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-155">A .NET Framework <see cref="T:System.Drawing.StringAlignment" /> enumeration value that represents the alignment of the legend.</span>
          </span>
          <span data-ttu-id="8202d-156">Значение по умолчанию — <see cref="F:System.Drawing.StringAlignment.Near" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-156">The default value is <see cref="F:System.Drawing.StringAlignment.Near" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8202d-157">Условные обозначения могут быть выровнены, чтобы оно было <xref:System.Drawing.StringAlignment.Near>, <xref:System.Drawing.StringAlignment.Center> или <xref:System.Drawing.StringAlignment.Far>; его выравнивание зависит <xref:System.Windows.Forms.DataVisualization.Charting.Legend.Docking%2A> значение свойства.</span><span class="sxs-lookup"><span data-stu-id="8202d-157">The legend can be aligned so that it is <xref:System.Drawing.StringAlignment.Near>, <xref:System.Drawing.StringAlignment.Center> or <xref:System.Drawing.StringAlignment.Far>; its alignment is also affected by the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.Docking%2A> property setting.</span></span>  
  
 <span data-ttu-id="8202d-158">Если условные обозначения закреплены в верхней или нижней, <xref:System.Drawing.StringAlignment.Near> находится слева; если она закреплена влево или вправо, <xref:System.Drawing.StringAlignment.Near> вверху.</span><span class="sxs-lookup"><span data-stu-id="8202d-158">If the legend is docked to the top or bottom, <xref:System.Drawing.StringAlignment.Near> is to the left; if it is docked to the left or right, <xref:System.Drawing.StringAlignment.Near> is at the top.</span></span> <span data-ttu-id="8202d-159"><xref:System.Drawing.StringAlignment.Far> Значение свойства является прямо противоположным и выравнивает легенду справа или снизу, в зависимости от того, где она закреплена.</span><span class="sxs-lookup"><span data-stu-id="8202d-159">The <xref:System.Drawing.StringAlignment.Far> property setting is just the opposite, and aligns the legend to the right or the bottom, depending on where it is docked.</span></span>  
  
 <span data-ttu-id="8202d-160"><xref:System.Drawing.StringAlignment.Center> всегда центров условных обозначений, горизонтально или вертикально.</span><span class="sxs-lookup"><span data-stu-id="8202d-160"><xref:System.Drawing.StringAlignment.Center> always centers the legend, either vertically or horizontally.</span></span>  
  
 <span data-ttu-id="8202d-161">Установка <xref:System.Windows.Forms.DataVisualization.Charting.Legend.Alignment%2A> свойство окажет никакого воздействия, если <xref:System.Windows.Forms.DataVisualization.Charting.Legend.Position%2A> не задано значение <xref:System.Windows.Forms.DataVisualization.Charting.ElementPosition.Auto%2A>.</span><span class="sxs-lookup"><span data-stu-id="8202d-161">Setting the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.Alignment%2A> property will have no effect if the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.Position%2A> property is not set to <xref:System.Windows.Forms.DataVisualization.Charting.ElementPosition.Auto%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoFitMinFontSize">
      <MemberSignature Language="C#" Value="public int AutoFitMinFontSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AutoFitMinFontSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.AutoFitMinFontSize" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoFitMinFontSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AutoFitMinFontSize { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.AutoFitMinFontSize : int with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.AutoFitMinFontSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(7)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-162">Получает или задает минимальный размер шрифта, используемый при применении алгоритма автоматического размещения текста легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-162">Gets or sets the minimum font size that can be used by the autofitting algorithm for the legend text.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-163">Значение <see langword="integer" />, представляющее минимальный размер шрифта, используемый при применении алгоритма автоматического размещения текста легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-163">An <see langword="integer" /> value that represents the minimum font size that can be used by the autofitting algorithm for the legend text.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-164">Получает или задает цвет фона легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-164">Gets or sets the background color of a legend.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-165">Значение <see cref="T:System.Drawing.Color" /> для цвета, используемого при рисовании фона легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-165">A <see cref="T:System.Drawing.Color" /> value used to draw the background color of a legend.</span>
          </span>
          <span data-ttu-id="8202d-166">Цвет по умолчанию — <see cref="System.Drawing.Color.White" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-166">The default color is <see cref="System.Drawing.Color.White" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8202d-167">Это свойство можно задать любое допустимое значение ARGB (альфа-канал, красный, зеленый, синий).</span><span class="sxs-lookup"><span data-stu-id="8202d-167">You can set this property to any valid ARGB (alpha, red, green, blue) value.</span></span>  
  
 <span data-ttu-id="8202d-168"><xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackColor%2A> Значение будет первый цвет, используемый при указании цвета градиента фона.</span><span class="sxs-lookup"><span data-stu-id="8202d-168">The <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackColor%2A> value will be the first color used if you have specified gradient colors for the background.</span></span>  
  
 <span data-ttu-id="8202d-169">Значение альфа определяет прозрачность цвета.</span><span class="sxs-lookup"><span data-stu-id="8202d-169">The alpha value controls the opacity of a color.</span></span> <span data-ttu-id="8202d-170">Если задать этот цвет как «прозрачный» — то есть, если используется значение альфа, равное 0 — будет назначен без цвета для фона условных обозначений.</span><span class="sxs-lookup"><span data-stu-id="8202d-170">If you set this color to "transparent"—that is, if you use an alpha value of 0—no color will be assigned to the background of the legend.</span></span> <span data-ttu-id="8202d-171">В результате фон будет прозрачным.</span><span class="sxs-lookup"><span data-stu-id="8202d-171">As a result, the background will be transparent.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackGradientStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.GradientStyle BackGradientStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.GradientStyle BackGradientStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.BackGradientStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BackGradientStyle As GradientStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::GradientStyle BackGradientStyle { System::Windows::Forms::DataVisualization::Charting::GradientStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::GradientStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BackGradientStyle : System.Windows.Forms.DataVisualization.Charting.GradientStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.BackGradientStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.GradientEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.GradientStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-172">Получает или задает ориентацию для градиента фона легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-172">Gets or sets the orientation for the background gradient of a legend.</span>
          </span>
          <span data-ttu-id="8202d-173">Также определяет, используется ли градиент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-173">Also determines whether a gradient is used.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-174">Перечисление <see cref="T:System.Windows.Forms.DataVisualization.Charting.GradientStyle" />, задающее ориентацию фонового градиента легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-174">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.GradientStyle" /> enumeration that specifies the orientation for the background gradient of a legend.</span>
          </span>
          <span data-ttu-id="8202d-175">Значение по умолчанию — <see cref="F:System.Windows.Forms.DataVisualization.Charting.GradientStyle.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-175">The default value is <see cref="F:System.Windows.Forms.DataVisualization.Charting.GradientStyle.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8202d-176">Используйте <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackGradientStyle%2A> свойство для определения условных обозначений будет отображаться градиента, и для определения ориентации градиента, если он используется.</span><span class="sxs-lookup"><span data-stu-id="8202d-176">Use the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackGradientStyle%2A> property to determine whether a legend will display a gradient, and to determine the orientation of the gradient if one is used.</span></span>  
  
 <span data-ttu-id="8202d-177">Список доступных шаблонов, см. в разделе <xref:System.Windows.Forms.DataVisualization.Charting.GradientStyle> перечисления.</span><span class="sxs-lookup"><span data-stu-id="8202d-177">For a listing of available patterns, refer to the <xref:System.Windows.Forms.DataVisualization.Charting.GradientStyle> enumeration.</span></span>  
  
 <span data-ttu-id="8202d-178">Использование цвета градиента.</span><span class="sxs-lookup"><span data-stu-id="8202d-178">To use gradient colors:</span></span>  
  
 <span data-ttu-id="8202d-179">Задайте основной цвет фона условных обозначений с <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackColor%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="8202d-179">Set the primary color of the legend background with the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackColor%2A> property.</span></span>  
  
 <span data-ttu-id="8202d-180">Задать вторичный цвет фона условных обозначений с <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackSecondaryColor%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="8202d-180">Set the secondary color of the legend background with the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackSecondaryColor%2A> property.</span></span>  
  
 <span data-ttu-id="8202d-181">Задайте <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackGradientStyle%2A> свойства необходимый стиль градиента.</span><span class="sxs-lookup"><span data-stu-id="8202d-181">Set this <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackGradientStyle%2A> property to the desired gradient style.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackHatchStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle BackHatchStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle BackHatchStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.BackHatchStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BackHatchStyle As ChartHatchStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ChartHatchStyle BackHatchStyle { System::Windows::Forms::DataVisualization::Charting::ChartHatchStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::ChartHatchStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BackHatchStyle : System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.BackHatchStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.HatchStyleEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-182">Получает или задает стиль штриховки легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-182">Gets or sets the hatching style of a legend.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-183">Перечисление <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle" />, задающее стиль штриховки для легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-183">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle" /> enumeration that specifies the hatching style of a legend.</span>
          </span>
          <span data-ttu-id="8202d-184">Значение по умолчанию — <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-184">The default value is <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8202d-185"><xref:System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle> Перечисление указывает шаблон штриховки, используемый функцией кисти типа <xref:System.Drawing.Drawing2D.HatchBrush>.</span><span class="sxs-lookup"><span data-stu-id="8202d-185">The <xref:System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle> enumeration specifies the hatch pattern used by a brush of type <xref:System.Drawing.Drawing2D.HatchBrush>.</span></span> <span data-ttu-id="8202d-186">Шаблон штриховки состоит из сплошного цвета фона и линий, нарисованных на фоне.</span><span class="sxs-lookup"><span data-stu-id="8202d-186">The hatch pattern consists of a solid background color and lines drawn over the background.</span></span>  
  
 <span data-ttu-id="8202d-187">Список доступных штриховки стили, см. в разделе <xref:System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle> перечисления.</span><span class="sxs-lookup"><span data-stu-id="8202d-187">For a listing of available hatching styles, refer to the <xref:System.Windows.Forms.DataVisualization.Charting.ChartHatchStyle> enumeration.</span></span>  
  
 <span data-ttu-id="8202d-188">**Примечание** цвет штриховки строк определяется <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackSecondaryColor%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="8202d-188">**Note** The color of hatching lines is determined by the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackSecondaryColor%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImage">
      <MemberSignature Language="C#" Value="public string BackImage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImage" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.BackImage" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImage As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BackImage { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackImage : string with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.BackImage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ImageValueEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-189">Получает или задает фоновое изображение легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-189">Gets or sets the background image of a legend.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-190">Значение типа <see langword="string" />, представляющее URL-адрес файла изображения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-190">A <see langword="string" /> value that represents the URL of an image file.</span>
          </span>
          <span data-ttu-id="8202d-191">Значение по умолчанию - пустая строка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-191">The default value is an empty string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8202d-192">Это свойство определяет путь к фоновое изображение для <xref:System.Windows.Forms.DataVisualization.Charting.Chart> условных обозначений, и может быть абсолютным или относительным URL-адрес.</span><span class="sxs-lookup"><span data-stu-id="8202d-192">This property defines a path to a background image for a <xref:System.Windows.Forms.DataVisualization.Charting.Chart> legend, and can be an absolute or relative URL.</span></span>  
  
 <span data-ttu-id="8202d-193">Чтобы задать положение изображения, используйте <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackImageAlignment%2A> и <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackImageWrapMode%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="8202d-193">To position the image, use the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackImageAlignment%2A> and <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackImageWrapMode%2A> properties.</span></span>  
  
 <span data-ttu-id="8202d-194">Можно также указать один из цветов, отображаются в изображении как «прозрачный», задав <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackImageTransparentColor%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="8202d-194">You can also specify one of the colors displayed by the image as "transparent", by setting the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackImageTransparentColor%2A> property.</span></span>  
  
 <span data-ttu-id="8202d-195">Изображение может быть создано из любым допустимым графическим файлом, поддерживаемые платформой .NET Framework, включая значки.</span><span class="sxs-lookup"><span data-stu-id="8202d-195">An image can originate from any valid graphics file supported by .NET Framework, including icons.</span></span>  
  
 <span data-ttu-id="8202d-196">Фоновые изображения имеют приоритет над остальными свойствами фона, такие как цвет градиента.</span><span class="sxs-lookup"><span data-stu-id="8202d-196">Background images take precedence over other background properties such as gradient color.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle BackImageAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle BackImageAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.BackImageAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImageAlignment As ChartImageAlignmentStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ChartImageAlignmentStyle BackImageAlignment { System::Windows::Forms::DataVisualization::Charting::ChartImageAlignmentStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::ChartImageAlignmentStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BackImageAlignment : System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.BackImageAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-197">Получает или задает тип выравнивания фонового изображения, используемого для режима рисования <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode.Unscaled" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-197">Gets or sets the background image alignment used for the <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode.Unscaled" /> drawing mode.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-198">Значение перечисления <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle" />, указывающее выравнивание фонового изображения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-198">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle" /> enumeration value that specifies the background image alignment.</span>
          </span>
          <span data-ttu-id="8202d-199">Значение по умолчанию — <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle.TopLeft" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-199">The default value is <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartImageAlignmentStyle.TopLeft" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8202d-200">Это свойство определяет выравнивание фонового изображения для условных обозначений; Это применяется, если <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackImageWrapMode%2A> свойству <xref:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode.Unscaled>.</span><span class="sxs-lookup"><span data-stu-id="8202d-200">This property determines the alignment of the background image for the legend; it is only applied when the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackImageWrapMode%2A> property is set to <xref:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode.Unscaled>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageTransparentColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackImageTransparentColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackImageTransparentColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.BackImageTransparentColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImageTransparentColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackImageTransparentColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackImageTransparentColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.BackImageTransparentColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-201">Получает или задает цвет, который будет заменен прозрачным цветом при рисовании фонового изображения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-201">Gets or sets a color that will be replaced with a transparent color when the background image is drawn.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-202">Значение <see cref="T:System.Drawing.Color" /> для цвета, который будет отображаться как прозрачный при рисовании фонового изображения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-202">A <see cref="T:System.Drawing.Color" /> value that will be displayed as transparent color when the background image is drawn.</span>
          </span>
          <span data-ttu-id="8202d-203">Значение по умолчанию — <see cref="F:System.Drawing.Color.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-203">The default value is <see cref="F:System.Drawing.Color.Empty" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BackImageWrapMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode BackImageWrapMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode BackImageWrapMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.BackImageWrapMode" />
      <MemberSignature Language="VB.NET" Value="Public Property BackImageWrapMode As ChartImageWrapMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ChartImageWrapMode BackImageWrapMode { System::Windows::Forms::DataVisualization::Charting::ChartImageWrapMode get(); void set(System::Windows::Forms::DataVisualization::Charting::ChartImageWrapMode value); };" />
      <MemberSignature Language="F#" Value="member this.BackImageWrapMode : System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.BackImageWrapMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-204">Получает или задает режим рисования для фонового изображения легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-204">Gets or sets the legend background image drawing mode.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-205">Значение перечисления <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode" />, задающее режим рисования фонового изображения легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-205">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode" /> enumeration value that specifies the legend background image drawing mode.</span>
          </span>
          <span data-ttu-id="8202d-206">Значение по умолчанию — <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode.Tile" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-206">The default value is <see cref="F:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode.Tile" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8202d-207"><xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackImageWrapMode%2A> Свойство определяет способ отображения изображения; образ может мозаикой, масштабирование и т. д.</span><span class="sxs-lookup"><span data-stu-id="8202d-207">The <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackImageWrapMode%2A> property determines how the image is displayed; the image can be tiled, scaled, and so forth.</span></span>  
  
 <span data-ttu-id="8202d-208">Если изображение масштабируется, оно будет растянуто до границ условных обозначений.</span><span class="sxs-lookup"><span data-stu-id="8202d-208">If an image is scaled, it will be stretched to fit within the bounds of the legend.</span></span> <span data-ttu-id="8202d-209">Если образ располагается мозаикой, он многократно повторяется, начиная с левого верхнего угла условных обозначений.</span><span class="sxs-lookup"><span data-stu-id="8202d-209">If the image is tiled, it is repeatedly drawn, starting from the top-left corner of the legend.</span></span>  
  
 <span data-ttu-id="8202d-210">Дополнительные сведения о доступных см. в разделе <xref:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode> разделе перечисления.</span><span class="sxs-lookup"><span data-stu-id="8202d-210">For more information about the available wrapping modes, see the <xref:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode> enumeration topic.</span></span>  
  
 <span data-ttu-id="8202d-211">Если <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackImageWrapMode%2A> свойству <xref:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode.Unscaled>, расположение, в которой рисуется изображение определяется <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackImageAlignment%2A> значение свойства.</span><span class="sxs-lookup"><span data-stu-id="8202d-211">If the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackImageWrapMode%2A> property is set to <xref:System.Windows.Forms.DataVisualization.Charting.ChartImageWrapMode.Unscaled>, the location where the image is drawn is determined by the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackImageAlignment%2A> property setting.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackSecondaryColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackSecondaryColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackSecondaryColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.BackSecondaryColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackSecondaryColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackSecondaryColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackSecondaryColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.BackSecondaryColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-212">Получает или задает вторичный цвет фона легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-212">Gets or sets the secondary color of a legend background.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-213">Значение <see cref="T:System.Drawing.Color" /> для цвета, используемого в качестве вторичного цвета для фона со штриховкой или градиентной заливкой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-213">A <see cref="T:System.Drawing.Color" /> value used for the secondary color of background with hatching or gradient fill.</span>
          </span>
          <span data-ttu-id="8202d-214">Значение по умолчанию — <see cref="F:System.Drawing.Color.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-214">The default value is <see cref="F:System.Drawing.Color.Empty" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8202d-215"><xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackSecondaryColor%2A> Свойство определяет дополнительный цвет фона многих <xref:System.Windows.Forms.DataVisualization.Charting.Chart> объектов и используется при применении цвета градиента.</span><span class="sxs-lookup"><span data-stu-id="8202d-215">The <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackSecondaryColor%2A> property determines the secondary background color of many <xref:System.Windows.Forms.DataVisualization.Charting.Chart> objects, and is used when gradient colors are being applied.</span></span>  
  
 <span data-ttu-id="8202d-216">Можно задать <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackSecondaryColor%2A> любое допустимое значение ARGB (альфа-канал, красный, зеленый, синий).</span><span class="sxs-lookup"><span data-stu-id="8202d-216">You can set <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackSecondaryColor%2A> to any valid ARGB (alpha, red, green, blue) value.</span></span>  
  
 <span data-ttu-id="8202d-217">При использовании штриховки <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackSecondaryColor%2A> свойство определяет цвет линий штриховки для условных обозначений.</span><span class="sxs-lookup"><span data-stu-id="8202d-217">If hatching is used, the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackSecondaryColor%2A> property determines the color of the hatching lines for the legend.</span></span>  
  
 <span data-ttu-id="8202d-218">Использование цвета градиента фона условных обозначений.</span><span class="sxs-lookup"><span data-stu-id="8202d-218">To use gradient colors for the background of a legend:</span></span>  
  
-   <span data-ttu-id="8202d-219">Задайте основной цвет с <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackColor%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="8202d-219">Set the primary color with the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackColor%2A> property.</span></span>  
  
-   <span data-ttu-id="8202d-220">Задать вторичный цвет с <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackSecondaryColor%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="8202d-220">Set the secondary color with the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackSecondaryColor%2A> property.</span></span>  
  
-   <span data-ttu-id="8202d-221">Задать <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackGradientStyle%2A> свойства необходимый стиль градиента.</span><span class="sxs-lookup"><span data-stu-id="8202d-221">Set the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BackGradientStyle%2A> property to the desired gradient style.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.BorderColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BorderColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BorderColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.BorderColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-222">Получает или задает цвет границы легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-222">Gets or sets the border color of a legend.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-223">Объект <see cref="T:System.Drawing.Color" /> значение, используемое для отрисовки цвет границы элемента условных обозначений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-223">A <see cref="T:System.Drawing.Color" /> value used to draw  the border color of a legend.</span>
          </span>
          <span data-ttu-id="8202d-224">Цвет по умолчанию — <see cref="F:System.Drawing.Color.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-224">The default color is <see cref="F:System.Drawing.Color.Empty" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8202d-225">Это свойство можно задать любое допустимое значение ARGB (альфа-канал, красный, зеленый, синий).</span><span class="sxs-lookup"><span data-stu-id="8202d-225">You can set this property to any valid ARGB (alpha, red, green, blue) value.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderDashStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ChartDashStyle BorderDashStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.ChartDashStyle BorderDashStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.BorderDashStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderDashStyle As ChartDashStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ChartDashStyle BorderDashStyle { System::Windows::Forms::DataVisualization::Charting::ChartDashStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::ChartDashStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderDashStyle : System.Windows.Forms.DataVisualization.Charting.ChartDashStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.BorderDashStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ChartDashStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-226">Получает или задает стиль границы легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-226">Gets or sets the border style of a legend.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-227">Значение перечисления <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartDashStyle" />, определяющее стиль границы элемента диаграммы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-227">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartDashStyle" /> enumeration value that determines the border style of the chart element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8202d-228"><xref:System.Windows.Forms.DataVisualization.Charting.Legend.BorderDashStyle%2A> Свойство определяет стиль линии для границы.</span><span class="sxs-lookup"><span data-stu-id="8202d-228">The <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BorderDashStyle%2A> property determines the line style to use for a border.</span></span> <span data-ttu-id="8202d-229">Строка может быть сплошная, пунктирная и т. д.</span><span class="sxs-lookup"><span data-stu-id="8202d-229">The line can be solid, dotted, and so forth.</span></span>  
  
 <span data-ttu-id="8202d-230">Другие стили границ см <xref:System.Windows.Forms.DataVisualization.Charting.ChartDashStyle> разделе перечисления.</span><span class="sxs-lookup"><span data-stu-id="8202d-230">For other border styles, see the <xref:System.Windows.Forms.DataVisualization.Charting.ChartDashStyle> enumeration topic.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BorderWidth">
      <MemberSignature Language="C#" Value="public int BorderWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 BorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.BorderWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderWidth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int BorderWidth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.BorderWidth : int with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.BorderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-231">Получает или задает ширину границы легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-231">Gets or sets the border width of a legend.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-232">Значение типа <see langword="integer" />, определяющее ширину границы легенды в пикселях.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-232">An <see langword="integer" /> value that determines the border width, in pixels, of the legend.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8202d-233">Обратите внимание, что <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BorderWidth%2A> свойство можно также задать толщину линий в такие элементы, как графики, пользовательские элементы условных обозначений с стиль «строки» и т. д.</span><span class="sxs-lookup"><span data-stu-id="8202d-233">Note that <xref:System.Windows.Forms.DataVisualization.Charting.Legend.BorderWidth%2A> property can also set the width of lines in such elements as line charts, custom legend items displayed with a "line" style, and so forth.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CellColumns">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.LegendCellColumnCollection CellColumns { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.LegendCellColumnCollection CellColumns" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.CellColumns" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CellColumns As LegendCellColumnCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::LegendCellColumnCollection ^ CellColumns { System::Windows::Forms::DataVisualization::Charting::LegendCellColumnCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CellColumns : System.Windows.Forms.DataVisualization.Charting.LegendCellColumnCollection" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.CellColumns" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.LegendCellColumnCollectionEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.LegendCellColumnCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-234">Получает объект <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendCellColumnCollection" />, содержащий коллекцию столбцов ячеек для легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-234">Gets the <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendCellColumnCollection" /> object that contains the collection of cell columns for a legend.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-235">Объект <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendCellColumnCollection" />, содержащий коллекцию столбцов ячеек для легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-235">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendCellColumnCollection" /> object that contains the collection of cell columns for a legend.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomItems">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.LegendItemsCollection CustomItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.LegendItemsCollection CustomItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.CustomItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CustomItems As LegendItemsCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::LegendItemsCollection ^ CustomItems { System::Windows::Forms::DataVisualization::Charting::LegendItemsCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CustomItems : System.Windows.Forms.DataVisualization.Charting.LegendItemsCollection" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.CustomItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.LegendItemCollectionEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.LegendItemsCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-236">Возвращает объект <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendItemsCollection" />, используемый для пользовательских элементов условных обозначений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-236">Gets a <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendItemsCollection" /> object used for custom legend items.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-237">Объект <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendItemsCollection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-237">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendItemsCollection" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8202d-238">Это свойство коллекции может использоваться для добавления, удаления или изменения пользовательские элементы условных обозначений.</span><span class="sxs-lookup"><span data-stu-id="8202d-238">This collection property can be used to add, delete or modify custom legend items.</span></span>  
  
 <span data-ttu-id="8202d-239">Пользовательские элементы условных обозначений, в отличие от элементов легенды по умолчанию, не имеют связанных точек данных.</span><span class="sxs-lookup"><span data-stu-id="8202d-239">Custom legend items, unlike default legend items, do not have associated series or data points.</span></span>  
  
 <span data-ttu-id="8202d-240">Чтобы изменить элементы условных обозначений, используйте <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CustomizeLegend> событий.</span><span class="sxs-lookup"><span data-stu-id="8202d-240">To modify legend items, use the <xref:System.Windows.Forms.DataVisualization.Charting.Chart.CustomizeLegend> event.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DataVisualization.Charting.Legend.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="legend.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="8202d-241">Значение <see langword="true" /> позволяет освободить как управляемые, так и неуправляемые ресурсы; значение <see langword="false" /> освобождает только неуправляемые ресурсы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-241">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="8202d-242">Освобождает неуправляемые ресурсы, используемые объектом <see cref="T:System.Windows.Forms.DataVisualization.Charting.Legend" />, а при необходимости освобождает также управляемые ресурсы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-242">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Legend" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DockedToChartArea">
      <MemberSignature Language="C#" Value="public string DockedToChartArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DockedToChartArea" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.DockedToChartArea" />
      <MemberSignature Language="VB.NET" Value="Public Property DockedToChartArea As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DockedToChartArea { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DockedToChartArea : string with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.DockedToChartArea" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("NotSet")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.LegendAreaNameConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-243">Получает или задает имя области <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" />, в которой будет закреплена легенда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-243">Gets or sets the name of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" /> where the legend will be docked.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-244">Значение типа <see langword="string" />, представляющее имя области <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" />, в которой будет закреплена легенда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-244">A <see langword="string" /> value that represents the name of the <see cref="T:System.Windows.Forms.DataVisualization.Charting.ChartArea" /> where this legend will be docked.</span>
          </span>
          <span data-ttu-id="8202d-245">Значение по умолчанию — пустая строка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-245">The default value is the empty string.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Docking">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.Docking Docking { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.Docking Docking" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.Docking" />
      <MemberSignature Language="VB.NET" Value="Public Property Docking As Docking" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::Docking Docking { System::Windows::Forms::DataVisualization::Charting::Docking get(); void set(System::Windows::Forms::DataVisualization::Charting::Docking value); };" />
      <MemberSignature Language="F#" Value="member this.Docking : System.Windows.Forms.DataVisualization.Charting.Docking with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.Docking" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.Docking</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-246">Получает или задает значение, определяющее, будет ли закреплена легенда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-246">Gets or sets a value that determines whether the legend is docked.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-247">Значение перечисления <see cref="T:System.Windows.Forms.DataVisualization.Charting.Docking" />, определяющее, закреплена ли легенда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-247">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.Docking" /> enumeration value that determines whether the legend is docked.</span>
          </span>
          <span data-ttu-id="8202d-248">Значение по умолчанию — <see cref="F:System.Windows.Forms.DataVisualization.Charting.Docking.Right" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-248">The default value is <see cref="F:System.Windows.Forms.DataVisualization.Charting.Docking.Right" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8202d-249"><xref:System.Windows.Forms.DataVisualization.Charting.Legend> Можно прикреплять к сверху, слева, снизу или справа всего изображения диаграммы или внутри или за пределами области диаграммы.</span><span class="sxs-lookup"><span data-stu-id="8202d-249">The <xref:System.Windows.Forms.DataVisualization.Charting.Legend> can be docked to the top, left, bottom or right of either the entire chart image, or the inside or outside of a chart area.</span></span> <span data-ttu-id="8202d-250">Если <xref:System.Windows.Forms.DataVisualization.Charting.Legend.IsDockedInsideChartArea%2A> свойству `false`, закрепление применяется для всего изображения диаграммы.</span><span class="sxs-lookup"><span data-stu-id="8202d-250">If the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.IsDockedInsideChartArea%2A> property is set to `false`, docking applies to the entire chart image.</span></span> <span data-ttu-id="8202d-251">Если <xref:System.Windows.Forms.DataVisualization.Charting.Legend.IsDockedInsideChartArea%2A> свойству `true`, закрепление применяется к <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> объекта, указанного параметром <xref:System.Windows.Forms.DataVisualization.Charting.Legend.DockedToChartArea%2A> свойство</span><span class="sxs-lookup"><span data-stu-id="8202d-251">If the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.IsDockedInsideChartArea%2A> property is set to `true`, docking applies to the <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> object specified by the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.DockedToChartArea%2A> property</span></span>  
  
 <span data-ttu-id="8202d-252">Это свойство имеет смысл, если <xref:System.Windows.Forms.DataVisualization.Charting.Legend.Position%2A> не задано значение <xref:System.Windows.Forms.DataVisualization.Charting.ElementPosition.Auto%2A>.</span><span class="sxs-lookup"><span data-stu-id="8202d-252">This property has no effect if the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.Position%2A> property is not set to <xref:System.Windows.Forms.DataVisualization.Charting.ElementPosition.Auto%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-253">Получает или задает значение, указывающее, включена ли легенда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-253">Gets or sets a value that indicates whether the legend is enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-254">
            <see langword="true" /> Если включена условных обозначений. в противном случае <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-254">
              <see langword="true" /> if the legend is enabled; otherwise,  <see langword="false" />.</span>
          </span>
          <span data-ttu-id="8202d-255">Значение по умолчанию — <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-255">The default value is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8202d-256">Чтобы скрыть условных обозначений, присвойте этому свойству значение `false`.</span><span class="sxs-lookup"><span data-stu-id="8202d-256">To hide a legend, set this property to `false`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public System.Drawing.Font Font { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font Font" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.Font" />
      <MemberSignature Language="VB.NET" Value="Public Property Font As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ Font { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Drawing.Font with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Font), "Microsoft Sans Serif, 8pt")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-257">Получает или задает объект <see cref="T:System.Drawing.Font" />, который используется для задания свойств шрифта легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-257">Gets or sets a <see cref="T:System.Drawing.Font" /> object, which is used to set font properties of the legend.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-258">Объект <see cref="T:System.Drawing.Font" />, который используется для задания свойств шрифта легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-258">A <see cref="T:System.Drawing.Font" /> object which is used to set font properties of the legend.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8202d-259">При попытке изменить свойства этого <xref:System.Drawing.Font> объекта во время выполнения возникнет ошибка компиляции.</span><span class="sxs-lookup"><span data-stu-id="8202d-259">If you attempt to change the properties of this <xref:System.Drawing.Font> object at run time, a compilation error will occur.</span></span> <span data-ttu-id="8202d-260">Чтобы задать свойства шрифта во время выполнения, необходимо создать новый <xref:System.Drawing.Font> объекта.</span><span class="sxs-lookup"><span data-stu-id="8202d-260">To set font properties at run time, you must create a new <xref:System.Drawing.Font> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8202d-261">Если задано свойство Legend.Font.Size <xref:System.Windows.Forms.DataVisualization.Charting.Legend.IsTextAutoFit%2A> свойство будет иметь значение false.</span><span class="sxs-lookup"><span data-stu-id="8202d-261">If you set the Legend.Font.Size property, the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.IsTextAutoFit%2A> property will be set to false.</span></span> <span data-ttu-id="8202d-262">Кроме того Если задать <xref:System.Windows.Forms.DataVisualization.Charting.Legend.IsTextAutoFit%2A> будут сброшены свойства в значение true, это свойство по умолчанию, который является 8 точек.</span><span class="sxs-lookup"><span data-stu-id="8202d-262">Also, if you set the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.IsTextAutoFit%2A> property to true, this property will be reset to its default, which is 8 points.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-263">Получает или задает цвет текста легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-263">Gets or sets the color of the legend text.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-264">Значение <see cref="T:System.Drawing.Color" />, указывающее цвет текста легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-264">A <see cref="T:System.Drawing.Color" /> value that specifies the color of the legend text.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8202d-265"><xref:System.Windows.Forms.DataVisualization.Charting.Legend.ForeColor%2A> Свойство используется, чтобы задать цвет текста условных обозначений.</span><span class="sxs-lookup"><span data-stu-id="8202d-265">The <xref:System.Windows.Forms.DataVisualization.Charting.Legend.ForeColor%2A> property is used to set the legend text color.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderSeparator">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle HeaderSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle HeaderSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.HeaderSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderSeparator As LegendSeparatorStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::LegendSeparatorStyle HeaderSeparator { System::Windows::Forms::DataVisualization::Charting::LegendSeparatorStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::LegendSeparatorStyle value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderSeparator : System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.HeaderSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle), "None")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-266">Получает или задает тип визуального разделителя для заголовка легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-266">Gets or sets the visual separator type for the legend header.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-267">Значение перечисления <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle" />, задающее тип визуального разделителя заголовка легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-267">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle" /> enumeration value that specifies the visual separator type for the legend header.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderSeparatorColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color HeaderSeparatorColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color HeaderSeparatorColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.HeaderSeparatorColor" />
      <MemberSignature Language="VB.NET" Value="Public Property HeaderSeparatorColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color HeaderSeparatorColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderSeparatorColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.HeaderSeparatorColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-268">Получает или задает цвет разделителя для заголовка легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-268">Gets or sets the color of the separator for the legend header.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-269">Значение <see cref="T:System.Drawing.Color" />, задающее цвет разделителя заголовка легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-269">A <see cref="T:System.Drawing.Color" /> value that specifies the color of the separator for the legend header.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InsideChartArea">
      <MemberSignature Language="C#" Value="public string InsideChartArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsideChartArea" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.InsideChartArea" />
      <MemberSignature Language="VB.NET" Value="Public Property InsideChartArea As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InsideChartArea { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsideChartArea : string with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.InsideChartArea" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("NotSet")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.LegendAreaNameConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-270">Получает или задает имя области диаграммы, в которой будет нарисована легенда.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-270">Gets or sets the name of the chart area in which the legend is drawn.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-271">Значение типа <see langword="string" />, представляющее имя области диаграммы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-271">A <see langword="string" /> value that represents the name of the chart area.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InterlacedRows">
      <MemberSignature Language="C#" Value="public bool InterlacedRows { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool InterlacedRows" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.InterlacedRows" />
      <MemberSignature Language="VB.NET" Value="Public Property InterlacedRows As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool InterlacedRows { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.InterlacedRows : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.InterlacedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-272">Получает или задает флаг, который указывает, следует ли рисовать строки легенды с чередованием цвета фона.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-272">Gets or sets a flag that indicates whether legend rows will be drawn with interlaced background color.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-273">Значение <see langword="true" />, если строки условных обозначений будут отрисовываются с попеременным цветом фона; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-273">
              <see langword="true" /> if legend rows will be drawn with interlaced background color; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8202d-274">Если условные обозначения содержит много записей <xref:System.Windows.Forms.DataVisualization.Charting.Legend.InterlacedRows%2A> свойство может использоваться для повышения удобства чтения.</span><span class="sxs-lookup"><span data-stu-id="8202d-274">When the legend contains many entries, the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.InterlacedRows%2A> property can be used to improve readability.</span></span> <span data-ttu-id="8202d-275">Если значение этого свойства `true`, условных обозначений будет отображаться цвет фона для строк, которые являются с чередованием, которые можно задать с помощью <xref:System.Windows.Forms.DataVisualization.Charting.Legend.InterlacedRowsColor%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="8202d-275">When this property is set to `true`, the legend will display a background color for the rows that are interlaced, which can be set using the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.InterlacedRowsColor%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InterlacedRowsColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color InterlacedRowsColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color InterlacedRowsColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.InterlacedRowsColor" />
      <MemberSignature Language="VB.NET" Value="Public Property InterlacedRowsColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color InterlacedRowsColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.InterlacedRowsColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.InterlacedRowsColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-276">Получает или задает цвет фона чередующихся строк легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-276">Gets or sets the background color of the legend's interlaced rows.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-277">Значение <see cref="T:System.Drawing.Color" />, задающее цвет фона чередующихся строк легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-277">A <see cref="T:System.Drawing.Color" /> value that specifies the background color of the legend's interlaced rows.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8202d-278">Это свойство применимо только в том случае, если используются чередующиеся строки.</span><span class="sxs-lookup"><span data-stu-id="8202d-278">This property is only applicable if interlaced rows are used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDockedInsideChartArea">
      <MemberSignature Language="C#" Value="public bool IsDockedInsideChartArea { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDockedInsideChartArea" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.IsDockedInsideChartArea" />
      <MemberSignature Language="VB.NET" Value="Public Property IsDockedInsideChartArea As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDockedInsideChartArea { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsDockedInsideChartArea : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.IsDockedInsideChartArea" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-279">Получает или задает флаг, который указывает, где необходимо закрепить легенду — внутри или снаружи области диаграммы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-279">Gets or sets a flag that indicates whether the legend is docked inside or outside the chart area.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-280">Значение <see langword="true" />, если легенда закрепляется внутри области диаграммы; значение <see langword="false" />, если легенда закрепляется снаружи области диаграммы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-280">
              <see langword="true" /> is the legend is docked inside the chart area; <see langword="false" /> if it is docked outside the chart area.</span>
          </span>
          <span data-ttu-id="8202d-281">Значение по умолчанию — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-281">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8202d-282">Это свойство будет оказывать влияние, только если <xref:System.Windows.Forms.DataVisualization.Charting.Legend.DockedToChartArea%2A> свойству присвоено имя <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> объекта.</span><span class="sxs-lookup"><span data-stu-id="8202d-282">This property will only have an effect if the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.DockedToChartArea%2A> property is set to the name of a <xref:System.Windows.Forms.DataVisualization.Charting.ChartArea> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="8202d-283">Если <xref:System.Windows.Forms.DataVisualization.Charting.Legend.Position%2A> свойство задано любое значение, отличное от <xref:System.Windows.Forms.DataVisualization.Charting.ElementPosition.Auto%2A>, <xref:System.Windows.Forms.DataVisualization.Charting.Legend.IsDockedInsideChartArea%2A> свойства также ничего не происходит.</span><span class="sxs-lookup"><span data-stu-id="8202d-283">If the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.Position%2A> property is set to any value other than <xref:System.Windows.Forms.DataVisualization.Charting.ElementPosition.Auto%2A>, the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.IsDockedInsideChartArea%2A> property also has no effect.</span></span> <span data-ttu-id="8202d-284">Это, поскольку положение условных обозначений определяется <xref:System.Windows.Forms.DataVisualization.Charting.Legend.Position%2A> значение свойства.</span><span class="sxs-lookup"><span data-stu-id="8202d-284">This is because the position of the legend is determined by the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.Position%2A> property setting.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEquallySpacedItems">
      <MemberSignature Language="C#" Value="public bool IsEquallySpacedItems { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEquallySpacedItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.IsEquallySpacedItems" />
      <MemberSignature Language="VB.NET" Value="Public Property IsEquallySpacedItems As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEquallySpacedItems { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsEquallySpacedItems : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.IsEquallySpacedItems" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-285">Получает или задает флаг, указывающий, нужно ли размещать все элементы легенды на равном расстоянии друг от друга.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-285">Gets or sets a flag that indicates whether all legend items are equally spaced.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-286">Значение <see langword="true" />, если элементы легенды находятся на равном расстоянии друг от друга; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-286">
              <see langword="true" /> if legend items are equally spaced; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="8202d-287">Значение по умолчанию — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-287">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTextAutoFit">
      <MemberSignature Language="C#" Value="public bool IsTextAutoFit { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTextAutoFit" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.IsTextAutoFit" />
      <MemberSignature Language="VB.NET" Value="Public Property IsTextAutoFit As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTextAutoFit { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsTextAutoFit : bool with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.IsTextAutoFit" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-288">Получает или задает флаг, указывающий, будет ли размер текста легенды подбираться автоматически.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-288">Gets or sets a flag that indicates whether the legend text is automatically sized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-289">Значение <see langword="true" />, если размер текста легенды подбирается автоматически; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-289">
              <see langword="true" /> if the legend text is automatically sized; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemColumnSeparator">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle ItemColumnSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle ItemColumnSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.ItemColumnSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemColumnSeparator As LegendSeparatorStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::LegendSeparatorStyle ItemColumnSeparator { System::Windows::Forms::DataVisualization::Charting::LegendSeparatorStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::LegendSeparatorStyle value); };" />
      <MemberSignature Language="F#" Value="member this.ItemColumnSeparator : System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.ItemColumnSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle), "None")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-290">Получает или задает тип визуального разделителя для столбцов таблицы легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-290">Gets or sets the visual separator type for the legend table columns.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-291">Значение перечисления <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle" />, задающее тип визуального разделителя столбцов таблицы легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-291">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle" /> enumeration value that specifies the visual separator type for the legend table columns.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemColumnSeparatorColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ItemColumnSeparatorColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ItemColumnSeparatorColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.ItemColumnSeparatorColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemColumnSeparatorColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ItemColumnSeparatorColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ItemColumnSeparatorColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.ItemColumnSeparatorColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-292">Получает или задает цвет разделителя столбцов таблицы легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-292">Gets or sets the color of the legend table column separator.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-293">Значение <see cref="T:System.Drawing.Color" /> для цвета, используемого при рисовании разделителя столбцов таблицы легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-293">A <see cref="T:System.Drawing.Color" /> value used to draw the color of the legend table column separator.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemColumnSpacing">
      <MemberSignature Language="C#" Value="public int ItemColumnSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ItemColumnSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.ItemColumnSpacing" />
      <MemberSignature Language="VB.NET" Value="Public Property ItemColumnSpacing As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ItemColumnSpacing { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ItemColumnSpacing : int with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.ItemColumnSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(50)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-294">Получает или задает интервалы между столбцами таблицы легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-294">Gets or sets the legend table column spacing.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-295">Значение типа <see langword="integer" />, представляющее интервал между столбцами таблицы легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-295">An <see langword="integer" /> value that represents the table column spacing.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8202d-296"><xref:System.Windows.Forms.DataVisualization.Charting.Legend.ItemColumnSpacing%2A> Значение свойства рассчитывается в процентах от размера шрифта для текста условных обозначений.</span><span class="sxs-lookup"><span data-stu-id="8202d-296">The <xref:System.Windows.Forms.DataVisualization.Charting.Legend.ItemColumnSpacing%2A> property value is calculated as a percentage of the legend text font.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LegendItemOrder">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.LegendItemOrder LegendItemOrder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.LegendItemOrder LegendItemOrder" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.LegendItemOrder" />
      <MemberSignature Language="VB.NET" Value="Public Property LegendItemOrder As LegendItemOrder" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::LegendItemOrder LegendItemOrder { System::Windows::Forms::DataVisualization::Charting::LegendItemOrder get(); void set(System::Windows::Forms::DataVisualization::Charting::LegendItemOrder value); };" />
      <MemberSignature Language="F#" Value="member this.LegendItemOrder : System.Windows.Forms.DataVisualization.Charting.LegendItemOrder with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.LegendItemOrder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.LegendItemOrder</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-297">Получает или задает значение, определяющий порядок отображения элементов легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-297">Gets or sets a value that specifies the order in which legend items are displayed.</span>
          </span>
          <span data-ttu-id="8202d-298">Действие этого свойства распространяется только на элементы легенды, автоматически добавляемые в ряд диаграммы; оно не распространяется на пользовательские элементы легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-298">This property only affects legend items automatically added for the chart series; it has no effect on custom legend items.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-299">Значение перечисления <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendItemOrder" />, указывающее порядок отображения элементов легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-299">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendItemOrder" /> enumeration value that specifies the order in which legend items are displayed.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8202d-300">Если <xref:System.Windows.Forms.DataVisualization.Charting.LegendItemOrder> свойству <xref:System.Windows.Forms.DataVisualization.Charting.LegendItemOrder.Auto>, условные обозначения будет автоматически изменено на противоположное при использовании StackedColumn, StackedColumn100, StackedArea или StackedArea100 типов диаграмм.</span><span class="sxs-lookup"><span data-stu-id="8202d-300">If the <xref:System.Windows.Forms.DataVisualization.Charting.LegendItemOrder> property is set to <xref:System.Windows.Forms.DataVisualization.Charting.LegendItemOrder.Auto>, the legend will automatically be reversed if StackedColumn, StackedColumn100, StackedArea or StackedArea100 chart types are used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LegendStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.LegendStyle LegendStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.LegendStyle LegendStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.LegendStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property LegendStyle As LegendStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::LegendStyle LegendStyle { System::Windows::Forms::DataVisualization::Charting::LegendStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::LegendStyle value); };" />
      <MemberSignature Language="F#" Value="member this.LegendStyle : System.Windows.Forms.DataVisualization.Charting.LegendStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.LegendStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.LegendStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-301">Получает или задает стиль легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-301">Gets or sets the style of the legend.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-302">Значение перечисления <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendStyle" />, определяющее стиль легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-302">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendStyle" /> enumeration value that determines the legend style.</span>
          </span>
          <span data-ttu-id="8202d-303">Значение по умолчанию — <see cref="F:System.Windows.Forms.DataVisualization.Charting.LegendStyle.Table" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-303">The default value is <see cref="F:System.Windows.Forms.DataVisualization.Charting.LegendStyle.Table" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8202d-304">По умолчанию условные обозначения отображается как последовательность элементов в таблице.</span><span class="sxs-lookup"><span data-stu-id="8202d-304">By default, the legend is displayed as a series of items in a table.</span></span> <span data-ttu-id="8202d-305">Можно указать, следует ли развертывать элементы в таблице width-wise или height-wise, задав <xref:System.Windows.Forms.DataVisualization.Charting.Legend.TableStyle%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="8202d-305">You can specify whether to expand items in the table width-wise or height-wise by setting the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.TableStyle%2A> property.</span></span> <span data-ttu-id="8202d-306">Когда <xref:System.Windows.Forms.DataVisualization.Charting.Legend.TableStyle%2A> свойству <xref:System.Windows.Forms.DataVisualization.Charting.LegendTableStyle.Auto>, <xref:System.Windows.Forms.DataVisualization.Charting.Chart> управления определяет, следует ли нарисовать широкой таблицы или узкую таблицу, в зависимости от выравнивания и размещения на диаграмме.</span><span class="sxs-lookup"><span data-stu-id="8202d-306">When the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.TableStyle%2A> property is set to <xref:System.Windows.Forms.DataVisualization.Charting.LegendTableStyle.Auto>, the <xref:System.Windows.Forms.DataVisualization.Charting.Chart> control will determine whether to draw a wide table or a tall table, depending on the alignment and positioning of the chart.</span></span> <span data-ttu-id="8202d-307">Это может привести к условных обозначений будет рисоваться с использованием нескольких столбцов элементов легенды.</span><span class="sxs-lookup"><span data-stu-id="8202d-307">This may cause the legend to be drawn using multiple legend item columns.</span></span>  
  
 <span data-ttu-id="8202d-308">Существует три возможных стиля условных обозначений: столбцов, строк и таблиц.</span><span class="sxs-lookup"><span data-stu-id="8202d-308">There are three possible styles for a legend: Column, Row and Table.</span></span> <span data-ttu-id="8202d-309">См. в следующей таблице приведен обзор этих стилей:</span><span class="sxs-lookup"><span data-stu-id="8202d-309">Refer to the table below for a summary of these styles:</span></span>  
  
|<span data-ttu-id="8202d-310">Стиль</span><span class="sxs-lookup"><span data-stu-id="8202d-310">Style</span></span>|<span data-ttu-id="8202d-311">Описание:</span><span class="sxs-lookup"><span data-stu-id="8202d-311">Description</span></span>|  
|-|-|  
|<span data-ttu-id="8202d-312">Столбец</span><span class="sxs-lookup"><span data-stu-id="8202d-312">Column</span></span>|<span data-ttu-id="8202d-313">Элементы условных обозначений отображаются в одном столбце, и несколько строк.</span><span class="sxs-lookup"><span data-stu-id="8202d-313">Legend items are displayed in one column, with multiple rows.</span></span> <span data-ttu-id="8202d-314">Чаще всего используется при присоединении условные обозначения слева или справа от диаграммы.</span><span class="sxs-lookup"><span data-stu-id="8202d-314">Most commonly used when the legend is docked to the left or right of the chart.</span></span>|  
|<span data-ttu-id="8202d-315">Строка</span><span class="sxs-lookup"><span data-stu-id="8202d-315">Row</span></span>|<span data-ttu-id="8202d-316">Элементы условных обозначений отображаются в одной строке с несколькими столбцами.</span><span class="sxs-lookup"><span data-stu-id="8202d-316">Legend items are displayed in one row, with multiple columns.</span></span> <span data-ttu-id="8202d-317">Чаще всего используется при присоединении легенды верхней или нижней части диаграммы.</span><span class="sxs-lookup"><span data-stu-id="8202d-317">Most commonly used when the legend is docked to the top or bottom of the chart.</span></span>|  
|<span data-ttu-id="8202d-318">Таблица</span><span class="sxs-lookup"><span data-stu-id="8202d-318">Table</span></span>|<span data-ttu-id="8202d-319">Элементы условных обозначений отображаются в нескольких столбцах и строках.</span><span class="sxs-lookup"><span data-stu-id="8202d-319">Legend items are displayed using multiple columns and rows.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaximumAutoSize">
      <MemberSignature Language="C#" Value="public float MaximumAutoSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float32 MaximumAutoSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.MaximumAutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumAutoSize As Single" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property float MaximumAutoSize { float get(); void set(float value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumAutoSize : single with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.MaximumAutoSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(50)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-320">Получает или задает максимальный размер легенды в процентах от области диаграммы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-320">Gets or sets the maximum size of the legend, measured as a percentage of the chart area.</span>
          </span>
          <span data-ttu-id="8202d-321">Это значение используется алгоритмом автоматического создания макета.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-321">This value is used by the automatic layout algorithm.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-322">Объект <see langword="float" /> значение, представляющее максимальный размер условных обозначений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-322">A <see langword="float" /> value that represents the maximum size of the legend.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8202d-323">Если условные обозначения закреплены слева или справа от области диаграммы, это свойство определяет максимальную ширину легенды, которая измеряется в процентах от области диаграммы.</span><span class="sxs-lookup"><span data-stu-id="8202d-323">If the legend is docked to the left or right of the chart area, this property determines the maximum width of the legend, which is measured as a percentage of the chart area.</span></span> <span data-ttu-id="8202d-324">Если условные обозначения закреплены в верхней или нижней, это свойство определяет максимальную высоту легенды, которая также измеряется в процентах.</span><span class="sxs-lookup"><span data-stu-id="8202d-324">If the legend is docked to the top or bottom, this property determines the maximum height of the legend, which is also measured as a percentage.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public override string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.Name" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-325">Получает или задает имя легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-325">Gets or sets the name of the legend.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-326">Значение типа <see langword="string" />, представляющее имя легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-326">A <see langword="string" /> value that represents the name of the legend.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Position">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.ElementPosition Position { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.DataVisualization.Charting.ElementPosition Position" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.Position" />
      <MemberSignature Language="VB.NET" Value="Public Property Position As ElementPosition" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::ElementPosition ^ Position { System::Windows::Forms::DataVisualization::Charting::ElementPosition ^ get(); void set(System::Windows::Forms::DataVisualization::Charting::ElementPosition ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Position : System.Windows.Forms.DataVisualization.Charting.ElementPosition with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.Position" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.DataVisualization.Charting.ElementPositionConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.ElementPosition</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-327">Получает или задает объект <see cref="T:System.Windows.Forms.DataVisualization.Charting.ElementPosition" />, который может использоваться для задания или получения положения легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-327">Gets or sets an <see cref="T:System.Windows.Forms.DataVisualization.Charting.ElementPosition" /> object, which can be used to get or set the position of the legend.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-328">Если свойство <see cref="P:System.Windows.Forms.DataVisualization.Charting.Legend.Position" /> является автоматическим (т. е. Legend.Position.Auto = <see langword="true" />), положение легенды рассчитывается элементом управления <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> автоматически; при этом учитываются значения свойств <see cref="P:System.Windows.Forms.DataVisualization.Charting.Legend.Docking" />, <see cref="P:System.Windows.Forms.DataVisualization.Charting.Legend.Alignment" /> и <see cref="P:System.Windows.Forms.DataVisualization.Charting.Legend.IsDockedInsideChartArea" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-328">If the <see cref="P:System.Windows.Forms.DataVisualization.Charting.Legend.Position" /> property is automatic (that is, Legend.Position.Auto = <see langword="true" />) the legend position is calculated automatically by the <see cref="T:System.Windows.Forms.DataVisualization.Charting.Chart" /> control, taking into account the <see cref="P:System.Windows.Forms.DataVisualization.Charting.Legend.Docking" />, <see cref="P:System.Windows.Forms.DataVisualization.Charting.Legend.Alignment" /> and <see cref="P:System.Windows.Forms.DataVisualization.Charting.Legend.IsDockedInsideChartArea" /> property settings.</span>
          </span>
          <span data-ttu-id="8202d-329">Если оно не является автоматическим, свойства <see cref="P:System.Windows.Forms.DataVisualization.Charting.Legend.Docking" />, <see cref="P:System.Windows.Forms.DataVisualization.Charting.Legend.DockedToChartArea" /> и <see cref="P:System.Windows.Forms.DataVisualization.Charting.Legend.IsDockedInsideChartArea" /> не учитываются, а положение легенды определяется только значением, возвращаемым объектом <see cref="T:System.Windows.Forms.DataVisualization.Charting.ElementPosition" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-329">If it is not automatic, the <see cref="P:System.Windows.Forms.DataVisualization.Charting.Legend.Docking" />, <see cref="P:System.Windows.Forms.DataVisualization.Charting.Legend.DockedToChartArea" /> and <see cref="P:System.Windows.Forms.DataVisualization.Charting.Legend.IsDockedInsideChartArea" /> properties are ignored, and the legend position is solely determined by the value of the returned <see cref="T:System.Windows.Forms.DataVisualization.Charting.ElementPosition" /> object.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ShadowColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ShadowColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.ShadowColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ShadowColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ShadowColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ShadowColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.ShadowColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "128, 0, 0, 0")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-330">Получает или задает цвет тени легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-330">Gets or sets the shadow color of the legend.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-331">Значение <see cref="T:System.Drawing.Color" />, задающее цвет тени легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-331">A <see cref="T:System.Drawing.Color" /> value that specifies the shadow color of the legend.</span>
          </span>
          <span data-ttu-id="8202d-332">Цвет по умолчанию — <see cref="P:System.Drawing.Color.Black" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-332">The default color is <see cref="P:System.Drawing.Color.Black" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8202d-333">Это свойство можно задать любое допустимое значение ARGB (альфа-канал, красный, зеленый, синий).</span><span class="sxs-lookup"><span data-stu-id="8202d-333">This property can be set to any valid ARGB (alpha, red, green, blue) value.</span></span>  
  
 <span data-ttu-id="8202d-334">Значение альфа-канала может использоваться для создания эффекта «реалистичные» скрывающий; Попробуйте значение цвета «128,0,0,0» для теней.</span><span class="sxs-lookup"><span data-stu-id="8202d-334">The alpha value can be used to achieve a "realistic" shadowing effect; try a color value of "128,0,0,0" for shadows.</span></span>  
  
 <span data-ttu-id="8202d-335">Чтобы реализовать тени, установите <xref:System.Windows.Forms.DataVisualization.Charting.Legend.ShadowOffset%2A> свойству значение, отличное от нуля (0).</span><span class="sxs-lookup"><span data-stu-id="8202d-335">To implement a shadow, set the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.ShadowOffset%2A> property to a value other than zero (0).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShadowOffset">
      <MemberSignature Language="C#" Value="public int ShadowOffset { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ShadowOffset" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.ShadowOffset" />
      <MemberSignature Language="VB.NET" Value="Public Property ShadowOffset As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ShadowOffset { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ShadowOffset : int with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.ShadowOffset" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-336">Получает или задает смещение тени легенды в пикселях.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-336">Gets or sets the shadow offset, in pixels, of the legend.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-337">Значение типа <see langword="integer" />, определяющее смещение тени легенды в пикселях.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-337">An <see langword="integer" /> value that represents the shadow offset, in pixels, of the legend.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8202d-338">Чтобы создать тень, этому свойству присвоено значение, отличное от нуля (0).</span><span class="sxs-lookup"><span data-stu-id="8202d-338">To implement shadowing, set this property to a value other than zero (0).</span></span> <span data-ttu-id="8202d-339">Положительное значение приведет к тому, что тень, сдвигается вниз и вправо; отрицательное значение приведет к тому, что тень, начинается вверх и влево.</span><span class="sxs-lookup"><span data-stu-id="8202d-339">A positive value will result in a shadow that shifts down and to the right; a negative value will result in a shadow that shifts up and to the left.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TableStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.LegendTableStyle TableStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.LegendTableStyle TableStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.TableStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property TableStyle As LegendTableStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::LegendTableStyle TableStyle { System::Windows::Forms::DataVisualization::Charting::LegendTableStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::LegendTableStyle value); };" />
      <MemberSignature Language="F#" Value="member this.TableStyle : System.Windows.Forms.DataVisualization.Charting.LegendTableStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.TableStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.ParenthesizePropertyName(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.LegendTableStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-340">Получает или задает стиль таблицы легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-340">Gets or sets the legend table style.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-341">Значение перечисления <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendTableStyle" />, указывающее стиль таблицы легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-341">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendTableStyle" /> enumeration value that specifies the legend table style.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8202d-342">Это свойство применимо, только если <xref:System.Windows.Forms.DataVisualization.Charting.Legend.LegendStyle%2A> свойству <xref:System.Windows.Forms.DataVisualization.Charting.LegendStyle.Table>.</span><span class="sxs-lookup"><span data-stu-id="8202d-342">This property is only applicable if the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.LegendStyle%2A> property is set to <xref:System.Windows.Forms.DataVisualization.Charting.LegendStyle.Table>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TextWrapThreshold">
      <MemberSignature Language="C#" Value="public int TextWrapThreshold { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TextWrapThreshold" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.TextWrapThreshold" />
      <MemberSignature Language="VB.NET" Value="Public Property TextWrapThreshold As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TextWrapThreshold { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.TextWrapThreshold : int with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.TextWrapThreshold" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(25)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-343">Получает или задает количество последовательных знаков, которые можно отобразить в легенде до переноса на следующую строку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-343">Gets or sets the number of characters that can be sequentially displayed in the legend before the text is wrapped.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-344">Значение типа <see langword="integer" />, представляющее количество последовательных знаков, которые можно отобразить в легенде до переноса на следующую строку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-344">An <see langword="integer" /> value that represents the number of characters that can be placed in the legend sequentially before the text is wrapped.</span>
          </span>
          <span data-ttu-id="8202d-345">Значение по умолчанию — 25.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-345">The default value is 25.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8202d-346">Если текст условных обозначений превышает значение, заданное этим свойством, текст будет автоматически переноситься при обнаружении пробела.</span><span class="sxs-lookup"><span data-stu-id="8202d-346">When the legend text exceeds the value specified by this property, text will be automatically wrapped when the next whitespace character is encountered.</span></span> <span data-ttu-id="8202d-347">Текст не переносится, если доступных символов нет пробелов в тексте.</span><span class="sxs-lookup"><span data-stu-id="8202d-347">Text will not be wrapped if there are no whitespace characters in the text.</span></span>  
  
 <span data-ttu-id="8202d-348">Задать <xref:System.Windows.Forms.DataVisualization.Charting.Legend.TextWrapThreshold%2A> свойства значение 0, чтобы отключить эту функцию.</span><span class="sxs-lookup"><span data-stu-id="8202d-348">Set the <xref:System.Windows.Forms.DataVisualization.Charting.Legend.TextWrapThreshold%2A> property to zero to disable the feature.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-349">Получает или задает текст заголовка легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-349">Gets or sets the text of the legend title.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-350">Значение типа <see langword="string" />, представляющее текст заголовка легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-350">A <see langword="string" /> value that represents the legend title text.</span>
          </span>
          <span data-ttu-id="8202d-351">Значение по умолчанию — пустая строка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-351">The default value is a zero-length string.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleAlignment">
      <MemberSignature Language="C#" Value="public System.Drawing.StringAlignment TitleAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.StringAlignment TitleAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.TitleAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleAlignment As StringAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::StringAlignment TitleAlignment { System::Drawing::StringAlignment get(); void set(System::Drawing::StringAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.TitleAlignment : System.Drawing.StringAlignment with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.TitleAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.StringAlignment), "Center")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.StringAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-352">Получает или задает тип выравнивания заголовка легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-352">Gets or sets the alignment of the legend title.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-353">Значение перечисления <see cref="T:System.Drawing.StringAlignment" />, представляющее тип выравнивания заголовка легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-353">A <see cref="T:System.Drawing.StringAlignment" /> enumeration value that represents the alignment of the legend title.</span>
          </span>
          <span data-ttu-id="8202d-354">Значение по умолчанию — <see cref="F:System.Drawing.StringAlignment.Center" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-354">The default value is <see cref="F:System.Drawing.StringAlignment.Center" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleBackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color TitleBackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color TitleBackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.TitleBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleBackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color TitleBackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.TitleBackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.TitleBackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-355">Получает или задает цвет фона для заголовка легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-355">Gets or sets the background color of the legend title.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-356">Значение <see cref="T:System.Drawing.Color" /> для цвета, используемого при рисовании фона заголовка легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-356">A <see cref="T:System.Drawing.Color" /> value used to draw the background of the legend title.</span>
          </span>
          <span data-ttu-id="8202d-357">Значение по умолчанию — <see cref="F:System.Drawing.Color.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-357">The default value is <see cref="F:System.Drawing.Color.Empty" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleFont">
      <MemberSignature Language="C#" Value="public System.Drawing.Font TitleFont { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Font TitleFont" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.TitleFont" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleFont As Font" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Font ^ TitleFont { System::Drawing::Font ^ get(); void set(System::Drawing::Font ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TitleFont : System.Drawing.Font with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.TitleFont" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Font), "Microsoft Sans Serif, 8pt, style=Bold")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Font</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-358">Получает или задает шрифт заголовка легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-358">Gets or sets the font for the legend title.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-359">Объект <see cref="T:System.Drawing.Font" />, представляющий шрифт для заголовка легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-359">A <see cref="T:System.Drawing.Font" /> object that represents the font for the legend title.</span>
          </span>
          <span data-ttu-id="8202d-360">Значение по умолчанию — "Microsoft Sans Serif, 8pt, Bold".</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-360">The default value is "Microsoft Sans Serif, 8pt, Bold".</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8202d-361">Это свойство может использоваться для установки свойств шрифта заголовка условных обозначений.</span><span class="sxs-lookup"><span data-stu-id="8202d-361">This property can be used to set font properties of the legend title.</span></span>  
  
 <span data-ttu-id="8202d-362">При попытке изменить свойства этого <xref:System.Drawing.Font> объекта во время выполнения возникнет ошибка компиляции.</span><span class="sxs-lookup"><span data-stu-id="8202d-362">If you attempt to change the properties of this <xref:System.Drawing.Font> object at run time, a compilation error will occur.</span></span> <span data-ttu-id="8202d-363">Чтобы задать свойства шрифта во время выполнения, необходимо создать новый <xref:System.Drawing.Font> объекта.</span><span class="sxs-lookup"><span data-stu-id="8202d-363">To set font properties at run time, you must create a new <xref:System.Drawing.Font> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color TitleForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color TitleForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.TitleForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color TitleForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.TitleForeColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.TitleForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-364">Получает или задает цвет текста заголовка легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-364">Gets or sets the text color of the legend title.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-365">Значение <see cref="T:System.Drawing.Color" /> для цвета, используемого при рисовании текста заголовка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-365">A <see cref="T:System.Drawing.Color" /> value used to draw the title text color.</span>
          </span>
          <span data-ttu-id="8202d-366">Значение по умолчанию — <see cref="P:System.Drawing.Color.Black" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-366">The default value is <see cref="P:System.Drawing.Color.Black" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleSeparator">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle TitleSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle TitleSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.TitleSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleSeparator As LegendSeparatorStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::DataVisualization::Charting::LegendSeparatorStyle TitleSeparator { System::Windows::Forms::DataVisualization::Charting::LegendSeparatorStyle get(); void set(System::Windows::Forms::DataVisualization::Charting::LegendSeparatorStyle value); };" />
      <MemberSignature Language="F#" Value="member this.TitleSeparator : System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.TitleSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle), "None")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-367">Получает или задает тип визуального разделителя для заголовка легенды.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-367">Gets or sets the visual separator type for the legend title.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-368">Значение перечисления <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle" />, представляющее тип разделителя, который отображается перед заголовком.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-368">A <see cref="T:System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle" /> value that represents the type of separator that will be drawn below the title.</span>
          </span>
          <span data-ttu-id="8202d-369">Значение по умолчанию — <see cref="F:System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-369">The default value is <see cref="F:System.Windows.Forms.DataVisualization.Charting.LegendSeparatorStyle.None" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TitleSeparatorColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color TitleSeparatorColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color TitleSeparatorColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DataVisualization.Charting.Legend.TitleSeparatorColor" />
      <MemberSignature Language="VB.NET" Value="Public Property TitleSeparatorColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color TitleSeparatorColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.TitleSeparatorColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.DataVisualization.Charting.Legend.TitleSeparatorColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms.DataVisualization</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "Black")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.DataVisualization.Charting.ChartColorEditor, System.Windows.Forms.DataVisualization.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Drawing.ColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="8202d-370">Возвращает или задает цвет разделителя заголовка условных обозначений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-370">Gets or sets the color of the legend title separator.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="8202d-371">Значение <see cref="T:System.Drawing.Color" />, используемое, чтобы нарисовать цвет разделителя заголовка условных обозначений.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-371">A <see cref="T:System.Drawing.Color" /> value used to draw the color of the legend title separator.</span>
          </span>
          <span data-ttu-id="8202d-372">Значение по умолчанию — <see cref="P:System.Drawing.Color.Black" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="8202d-372">The default value is <see cref="P:System.Drawing.Color.Black" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>