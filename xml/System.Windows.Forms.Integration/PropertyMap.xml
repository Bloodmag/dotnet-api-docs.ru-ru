<Type Name="PropertyMap" FullName="System.Windows.Forms.Integration.PropertyMap">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e5e36b2dd2ab398f3c031c47cd38742924f0b386" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30630278" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PropertyMap" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PropertyMap extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Integration.PropertyMap" />
  <TypeSignature Language="VB.NET" Value="Public Class PropertyMap" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyMap" />
  <AssemblyInfo>
    <AssemblyName>WindowsFormsIntegration</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Security.SecurityCritical</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет способ преобразования значений свойств между элементами Windows Forms controls и Windows Presentation Foundation (WPF).</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Windows.Forms.Integration.PropertyMap> класса, чтобы определить переводы между [!INCLUDE[TLA#tla_winforms](~/includes/tlasharptla-winforms-md.md)] свойства и [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] свойства в гибридных приложениях. <xref:System.Windows.Forms.Integration.ElementHost.PropertyMap%2A?displayProperty=nameWithType> И <xref:System.Windows.Forms.Integration.WindowsFormsHost.PropertyMap%2A?displayProperty=nameWithType> свойства <xref:System.Windows.Forms.Integration.ElementHost> и <xref:System.Windows.Forms.Integration.WindowsFormsHost> классы определяют сопоставления из одной технологии в другую.  
  
 Дополнительные сведения см. в разделе [Пошаговое руководство: сопоставление свойств с помощью элемента управления ElementHost](https://msdn.microsoft.com/library/ms788740\(v=vs.100\).aspx) и [Пошаговое руководство: сопоставление свойств с помощью элемента WindowsFormsHost](https://msdn.microsoft.com/library/ms788729\(v=vs.100\).aspx).  
  
   
  
## Examples  
 В следующем примере кода показано, как добавить сопоставление для <xref:System.Windows.Forms.Control.Margin%2A> свойства <xref:System.Windows.Forms.Integration.ElementHost> элемента управления.  
  
 [!code-csharp[PropertyMappingWithElementHost#12](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMappingWithElementHost/CSharp/PropertyMappingWithElementHost/Form1.cs#12)]
 [!code-vb[PropertyMappingWithElementHost#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PropertyMappingWithElementHost/VisualBasic/PropertyMappingWithElementHost/Form1.vb#12)]  
  
 В следующем примере кода показано, как заменить сопоставление по умолчанию для <xref:System.Windows.FrameworkElement.FlowDirection%2A> свойства <xref:System.Windows.Forms.Integration.WindowsFormsHost> элемента управления.  
  
 [!code-csharp[PropertyMappingWithWfh#12](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMappingWithWfhSample/CSharp/PropertyMappingWithWfh/Window1.xaml.cs#12)] 
 [!code-vb[PropertyMappingWithWfh#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PropertyMappingWithWfhSample/VisualBasic/PropertyMappingWithWfh/Window1.xaml.vb#12)]   
  
 ]]></format>
    </remarks>
    <permission cref="F:System.Security.Permissions.SecurityAction.LinkDemand">Для полного доверия для непосредственного вызывающего. Этот член не может быть использован частично доверенным кодом.</permission>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">для полного доверия для разработчиков производных классов. Этот член не может наследоваться частично доверенным кодом.</permission>
    <altmember cref="P:System.Windows.Forms.Integration.ElementHost.PropertyMap" />
    <altmember cref="P:System.Windows.Forms.Integration.WindowsFormsHost.PropertyMap" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>WindowsFormsIntegration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Integration.PropertyMap" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyMap ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Integration.PropertyMap.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyMap();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsFormsIntegration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Integration.PropertyMap" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Integration.ElementHost.PropertyMap" />
        <altmember cref="P:System.Windows.Forms.Integration.WindowsFormsHost.PropertyMap" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyMap (object source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Integration.PropertyMap.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (source As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyMap(System::Object ^ source);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsFormsIntegration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">Объект со свойствами, которые будут преобразованы.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Integration.PropertyMap" /> заданным исходным объектом.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `source` является источником свойства, которые преобразуются службами <xref:System.Windows.Forms.Integration.PropertyMap>. Свойства, которые сопоставлены в <xref:System.Windows.Forms.Integration.PropertyMap> должен существовать на <xref:System.Windows.Forms.Integration.PropertyMap.SourceObject%2A>.  
  
 <xref:System.Windows.Forms.Integration.PropertyTranslator> делегаты вызываются с использованием текущих значений свойств на <xref:System.Windows.Forms.Integration.PropertyMap.SourceObject%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Integration.ElementHost.PropertyMap" />
        <altmember cref="P:System.Windows.Forms.Integration.WindowsFormsHost.PropertyMap" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string propertyName, System.Windows.Forms.Integration.PropertyTranslator translator);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string propertyName, class System.Windows.Forms.Integration.PropertyTranslator translator) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Integration.PropertyMap.Add(System.String,System.Windows.Forms.Integration.PropertyTranslator)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (propertyName As String, translator As PropertyTranslator)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ propertyName, System::Windows::Forms::Integration::PropertyTranslator ^ translator);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsFormsIntegration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
        <Parameter Name="translator" Type="System.Windows.Forms.Integration.PropertyTranslator" />
      </Parameters>
      <Docs>
        <param name="propertyName">Имя сопоставляемого свойства.</param>
        <param name="translator">Делегат <see cref="T:System.Windows.Forms.Integration.PropertyTranslator" />, который вызывается при изменении <c>propertyName</c>.</param>
        <summary>Добавляет делегат <see cref="T:System.Windows.Forms.Integration.PropertyTranslator" /> для данного свойства в <see cref="T:System.Windows.Forms.Integration.PropertyMap" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если при установке, не <xref:System.Windows.Forms.Integration.PropertyTranslator> существует для `propertyName`, добавляется новый делегат <xref:System.Windows.Forms.Integration.PropertyMap>. Если <xref:System.Windows.Forms.Integration.PropertyTranslator> уже существует для `propertyName`, <xref:System.InvalidOperationException> возникает.  
  
   
  
## Examples  
 В следующем примере кода показано, как добавить сопоставление для <xref:System.Windows.Forms.Control.Margin%2A> свойства <xref:System.Windows.Forms.Integration.ElementHost> элемента управления.  
  
 [!code-csharp[PropertyMappingWithElementHost#12](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMappingWithElementHost/CSharp/PropertyMappingWithElementHost/Form1.cs#12)] 
 [!code-vb[PropertyMappingWithElementHost#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PropertyMappingWithElementHost/VisualBasic/PropertyMappingWithElementHost/Form1.vb#12)]  
  
 В следующем примере кода показано, как добавить сопоставление для <xref:System.Windows.UIElement.Clip%2A> свойства <xref:System.Windows.Forms.Integration.WindowsFormsHost> элемента управления.  
  
 [!code-csharp[PropertyMappingWithWfh#14](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMappingWithWfhSample/CSharp/PropertyMappingWithWfh/Window1.xaml.cs#14)] 
 [!code-vb[PropertyMappingWithWfh#14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PropertyMappingWithWfhSample/VisualBasic/PropertyMappingWithWfh/Window1.xaml.vb#14)]   
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          Для <paramref name="propertyName" /> имеется существующее сопоставление.</exception>
        <altmember cref="P:System.Windows.Forms.Integration.ElementHost.PropertyMap" />
        <altmember cref="P:System.Windows.Forms.Integration.WindowsFormsHost.PropertyMap" />
      </Docs>
    </Member>
    <Member MemberName="Apply">
      <MemberSignature Language="C#" Value="public void Apply (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Apply(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Integration.PropertyMap.Apply(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Apply (propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Apply(System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsFormsIntegration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">Имя преобразуемого свойства.</param>
        <summary>Запускает преобразователь свойств для заданного свойства на основе текущего значения свойства исходного объекта.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">Свойство, заданное в <paramref name="propertyName" />, отсутствует у <see cref="P:System.Windows.Forms.Integration.PropertyMap.SourceObject" />.</exception>
        <altmember cref="P:System.Windows.Forms.Integration.ElementHost.PropertyMap" />
        <altmember cref="P:System.Windows.Forms.Integration.WindowsFormsHost.PropertyMap" />
      </Docs>
    </Member>
    <Member MemberName="ApplyAll">
      <MemberSignature Language="C#" Value="public void ApplyAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Integration.PropertyMap.ApplyAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsFormsIntegration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Запускает преобразователь свойств для каждого сопоставленного свойства на основе текущих значений свойств исходного объекта.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Integration.ElementHost.PropertyMap" />
        <altmember cref="P:System.Windows.Forms.Integration.WindowsFormsHost.PropertyMap" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Integration.PropertyMap.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clear();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsFormsIntegration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Удаляет все сопоставления свойств.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Integration.ElementHost.PropertyMap" />
        <altmember cref="P:System.Windows.Forms.Integration.WindowsFormsHost.PropertyMap" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Integration.PropertyMap.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (propertyName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsFormsIntegration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">Имя искомого свойства.</param>
        <summary>Получает значение, указывающее, сопоставлено ли данное свойстве.</summary>
        <returns>
          Значение <see langword="true" />, если <paramref name="propertyName" /> существует в сопоставлении свойств; в противном случае — значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Integration.ElementHost.PropertyMap" />
        <altmember cref="P:System.Windows.Forms.Integration.WindowsFormsHost.PropertyMap" />
      </Docs>
    </Member>
    <Member MemberName="DefaultTranslators">
      <MemberSignature Language="C#" Value="protected System.Collections.Generic.Dictionary&lt;string,System.Windows.Forms.Integration.PropertyTranslator&gt; DefaultTranslators { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.Dictionary`2&lt;string, class System.Windows.Forms.Integration.PropertyTranslator&gt; DefaultTranslators" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Integration.PropertyMap.DefaultTranslators" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property DefaultTranslators As Dictionary(Of String, PropertyTranslator)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::Generic::Dictionary&lt;System::String ^, System::Windows::Forms::Integration::PropertyTranslator ^&gt; ^ DefaultTranslators { System::Collections::Generic::Dictionary&lt;System::String ^, System::Windows::Forms::Integration::PropertyTranslator ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsFormsIntegration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.Dictionary&lt;System.String,System.Windows.Forms.Integration.PropertyTranslator&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает коллекцию сопоставлений свойств, которые определены по умолчанию.</summary>
        <value>Объект <see cref="T:System.Collections.Generic.Dictionary`2" />, который сопоставляет имена свойств с соответствующими делегатами <see cref="T:System.Windows.Forms.Integration.PropertyTranslator" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Список сопоставлений свойств по умолчанию см. в разделе [Windows Forms и WPF сопоставление свойств](~/docs/framework/wpf/advanced/windows-forms-and-wpf-property-mapping.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Integration.ElementHost.PropertyMap" />
        <altmember cref="P:System.Windows.Forms.Integration.WindowsFormsHost.PropertyMap" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Integration.PropertyTranslator this[string propertyName] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Integration.PropertyTranslator Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Integration.PropertyMap.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(propertyName As String) As PropertyTranslator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Integration::PropertyTranslator ^ default[System::String ^] { System::Windows::Forms::Integration::PropertyTranslator ^ get(System::String ^ propertyName); void set(System::String ^ propertyName, System::Windows::Forms::Integration::PropertyTranslator ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsFormsIntegration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Integration.PropertyTranslator</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">Имя сопоставляемого свойства.</param>
        <summary>Возвращает или задает делегат <see cref="T:System.Windows.Forms.Integration.PropertyTranslator" /> для указанного свойства.</summary>
        <value>Делегат <see cref="T:System.Windows.Forms.Integration.PropertyTranslator" />, соответствующий свойству, заданному в <paramref name="propertyName" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если при установке, не <xref:System.Windows.Forms.Integration.PropertyTranslator> существует для `propertyName`, добавляется новый делегат <xref:System.Windows.Forms.Integration.PropertyMap>. Если <xref:System.Windows.Forms.Integration.PropertyTranslator> уже существует для `propertyName`, он будет заменен.  
  
   
  
## Examples  
 В следующем примере кода показано, как получить <xref:System.Windows.Forms.Integration.PropertyTranslator> делегат для <xref:System.Windows.Forms.Control.BackColor%2A> свойства <xref:System.Windows.Forms.Integration.ElementHost> элемента управления.  
  
 [!code-csharp[PropertyMappingWithElementHost#15](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMappingWithElementHost/CSharp/PropertyMappingWithElementHost/Form1.cs#15)]
 [!code-vb[PropertyMappingWithElementHost#15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PropertyMappingWithElementHost/VisualBasic/PropertyMappingWithElementHost/Form1.vb#15)]  
  
 В следующем примере кода показано, как получить <xref:System.Windows.Forms.Integration.PropertyTranslator> делегат для <xref:System.Windows.Controls.Control.Background%2A> свойства <xref:System.Windows.Forms.Integration.WindowsFormsHost> элемента управления.  
  
 [!code-csharp[PropertyMappingWithWfh#15](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMappingWithWfhSample/CSharp/PropertyMappingWithWfh/Window1.xaml.cs#15)] 
 [!code-vb[PropertyMappingWithWfh#15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PropertyMappingWithWfhSample/VisualBasic/PropertyMappingWithWfh/Window1.xaml.vb#15)]   
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="propertyName" /> содержит <see langword="null" /> или пустую строку; заданный делегат <see cref="T:System.Windows.Forms.Integration.PropertyTranslator" /> равен <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Свойство, заданное в <paramref name="propertyName" />, отсутствует у <see cref="P:System.Windows.Forms.Integration.PropertyMap.SourceObject" />.</exception>
        <altmember cref="P:System.Windows.Forms.Integration.ElementHost.PropertyMap" />
        <altmember cref="P:System.Windows.Forms.Integration.WindowsFormsHost.PropertyMap" />
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Keys" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Integration.PropertyMap.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ Keys { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsFormsIntegration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Collections.ICollection" />, содержащий имена свойств в коллекции <see cref="T:System.Windows.Forms.Integration.PropertyMap" />.</summary>
        <value>Объект <see cref="T:System.Collections.ICollection" />, содержащий имена свойств в коллекции <see cref="T:System.Windows.Forms.Integration.PropertyMap" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Integration.ElementHost.PropertyMap" />
        <altmember cref="P:System.Windows.Forms.Integration.WindowsFormsHost.PropertyMap" />
      </Docs>
    </Member>
    <Member MemberName="PropertyMappingError">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Forms.Integration.PropertyMappingExceptionEventArgs&gt; PropertyMappingError;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Forms.Integration.PropertyMappingExceptionEventArgs&gt; PropertyMappingError" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.Integration.PropertyMap.PropertyMappingError" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PropertyMappingError As EventHandler(Of PropertyMappingExceptionEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Forms::Integration::PropertyMappingExceptionEventArgs ^&gt; ^ PropertyMappingError;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsFormsIntegration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Forms.Integration.PropertyMappingExceptionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возникает, когда преобразователь свойств создает исключение.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обработчики для <xref:System.Windows.Forms.Integration.PropertyMap.PropertyMappingError> событий при необходимости можно вызывать исключение, задав <xref:System.Windows.Forms.Integration.IntegrationExceptionEventArgs.ThrowException%2A> флаг <xref:System.Windows.Forms.Integration.PropertyMappingExceptionEventArgs>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Integration.ElementHost.PropertyMap" />
        <altmember cref="P:System.Windows.Forms.Integration.WindowsFormsHost.PropertyMap" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Integration.PropertyMap.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsFormsIntegration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">Имя свойства, которое требуется восстановить.</param>
        <summary>Удаляет заданное свойство из сопоставления.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как удалить сопоставление для <xref:System.Windows.Forms.Control.Cursor%2A> свойства <xref:System.Windows.Forms.Integration.ElementHost> элемента управления.  
  
 [!code-csharp[PropertyMappingWithElementHost#13](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMappingWithElementHost/CSharp/PropertyMappingWithElementHost/Form1.cs#13)]
 [!code-vb[PropertyMappingWithElementHost#13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PropertyMappingWithElementHost/VisualBasic/PropertyMappingWithElementHost/Form1.vb#13)]  
  
 В следующем примере кода показано, как добавить сопоставление для <xref:System.Windows.FrameworkElement.Cursor%2A> свойства <xref:System.Windows.Forms.Integration.WindowsFormsHost> элемента управления.  
  
 [!code-csharp[PropertyMappingWithWfh#13](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertyMappingWithWfhSample/CSharp/PropertyMappingWithWfh/Window1.xaml.cs#13)] 
 [!code-vb[PropertyMappingWithWfh#13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PropertyMappingWithWfhSample/VisualBasic/PropertyMappingWithWfh/Window1.xaml.vb#13)]   
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="propertyName" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="P:System.Windows.Forms.Integration.ElementHost.PropertyMap" />
        <altmember cref="P:System.Windows.Forms.Integration.WindowsFormsHost.PropertyMap" />
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public void Reset (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Reset(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Integration.PropertyMap.Reset(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Reset (propertyName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Reset(System::String ^ propertyName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsFormsIntegration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">Имя свойства, которое требуется восстановить.</param>
        <summary>Восстанавливает сопоставления свойств по умолчанию для этого свойства.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Integration.PropertyMap.Reset%2A> Метод оказывает следующее влияние <xref:System.Windows.Forms.Integration.PropertyMap>.  
  
-   Восстанавливается сопоставления свойства по умолчанию, который был удален.  
  
-   Сопоставление свойств, который был добавлен удаляется.  
  
-   Сопоставление свойства по умолчанию, который был переопределен восстанавливается значение по умолчанию.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="propertyName" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="P:System.Windows.Forms.Integration.ElementHost.PropertyMap" />
        <altmember cref="P:System.Windows.Forms.Integration.WindowsFormsHost.PropertyMap" />
      </Docs>
    </Member>
    <Member MemberName="ResetAll">
      <MemberSignature Language="C#" Value="public void ResetAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ResetAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Integration.PropertyMap.ResetAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ResetAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ResetAll();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsFormsIntegration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Восстанавливает сопоставления свойств по умолчанию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Integration.PropertyMap.ResetAll%2A> Метод оказывает следующее влияние <xref:System.Windows.Forms.Integration.PropertyMap>.  
  
-   Будут восстановлены сопоставления свойств по умолчанию, которые были удалены.  
  
-   Сопоставления свойств, которые были добавлены удалены.  
  
-   Сопоставления свойств по умолчанию, которые были переопределены восстанавливаются значения по умолчанию.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Integration.ElementHost.PropertyMap" />
        <altmember cref="P:System.Windows.Forms.Integration.WindowsFormsHost.PropertyMap" />
      </Docs>
    </Member>
    <Member MemberName="SourceObject">
      <MemberSignature Language="C#" Value="protected object SourceObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SourceObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Integration.PropertyMap.SourceObject" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property SourceObject As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Object ^ SourceObject { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsFormsIntegration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает объект со свойствами, которые будут преобразованы.</summary>
        <value>Объект со свойствами, которые будут преобразованы.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Свойства, которые сопоставлены в <xref:System.Windows.Forms.Integration.PropertyMap> должен существовать на <xref:System.Windows.Forms.Integration.PropertyMap.SourceObject%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Integration.ElementHost.PropertyMap" />
        <altmember cref="P:System.Windows.Forms.Integration.WindowsFormsHost.PropertyMap" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection Values" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Integration.PropertyMap.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ICollection ^ Values { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsFormsIntegration</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Collections.ICollection" />, содержащий преобразователи свойств в коллекции <see cref="T:System.Windows.Forms.Integration.PropertyMap" />.</summary>
        <value>Объект <see cref="T:System.Collections.ICollection" />, содержащий преобразователи свойств в коллекции <see cref="T:System.Windows.Forms.Integration.PropertyMap" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Integration.ElementHost.PropertyMap" />
        <altmember cref="P:System.Windows.Forms.Integration.WindowsFormsHost.PropertyMap" />
      </Docs>
    </Member>
  </Members>
</Type>