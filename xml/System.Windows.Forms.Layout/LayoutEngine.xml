<Type Name="LayoutEngine" FullName="System.Windows.Forms.Layout.LayoutEngine">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="afe340f40c867dede06fb324eb767dfe09bc6bee" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36356076" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class LayoutEngine" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit LayoutEngine extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Layout.LayoutEngine" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class LayoutEngine" />
  <TypeSignature Language="C++ CLI" Value="public ref class LayoutEngine abstract" />
  <TypeSignature Language="F#" Value="type LayoutEngine = class" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Provides the base class for implementing layout engines.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Windows.Forms.Layout.LayoutEngine> класса, если требуется создать пользовательский макет поведение во время выполнения. Создать собственный класс, от <xref:System.Windows.Forms.Layout.LayoutEngine> класса и переопределить <xref:System.Windows.Forms.Layout.LayoutEngine.Layout%2A> метод для определения поведения вашего пользовательского макета.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.Windows.Forms.Layout.LayoutEngine> класса для реализации поведения пользовательского макета.  
  
 [!code-cpp[System.Windows.Forms.Layout.LayoutEngine#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Layout.LayoutEngine/cpp/DemoFlowLayout.cpp#1)]
 [!code-csharp[System.Windows.Forms.Layout.LayoutEngine#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Layout.LayoutEngine/CS/DemoFlowLayout.cs#1)]
 [!code-vb[System.Windows.Forms.Layout.LayoutEngine#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Layout.LayoutEngine/VB/DemoFlowLayout.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected LayoutEngine ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.LayoutEngine.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; LayoutEngine();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Forms.Layout.LayoutEngine" /> class.</summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>Поведение макета должны совпадать для любого экземпляра класса связанный контейнер обработчика макета. По этой причине рассмотрите возможность объявления конструктора обработчик макетов <see langword="protected" /> или <see langword="private" />и реализация механизма формирования структуры как singleton-класса.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="InitLayout">
      <MemberSignature Language="C#" Value="public virtual void InitLayout (object child, System.Windows.Forms.BoundsSpecified specified);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitLayout(object child, valuetype System.Windows.Forms.BoundsSpecified specified) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.LayoutEngine.InitLayout(System.Object,System.Windows.Forms.BoundsSpecified)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InitLayout (child As Object, specified As BoundsSpecified)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitLayout(System::Object ^ child, System::Windows::Forms::BoundsSpecified specified);" />
      <MemberSignature Language="F#" Value="abstract member InitLayout : obj * System.Windows.Forms.BoundsSpecified -&gt; unit&#xA;override this.InitLayout : obj * System.Windows.Forms.BoundsSpecified -&gt; unit" Usage="layoutEngine.InitLayout (child, specified)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Object" />
        <Parameter Name="specified" Type="System.Windows.Forms.BoundsSpecified" />
      </Parameters>
      <Docs>
        <param name="child">The container on which the layout engine will operate.</param>
        <param name="specified">The bounds defining the container's size and position.</param>
        <summary>Initializes the layout engine.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При необходимости указать логику инициализации в <xref:System.Windows.Forms.Layout.LayoutEngine.InitLayout%2A> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <paramref name="child" /> is not a type on which <see cref="T:System.Windows.Forms.Layout.LayoutEngine" /> can perform layout.</exception>
        <block subset="none" type="overrides">
          <para>Переопределить <see cref="M:System.Windows.Forms.Layout.LayoutEngine.InitLayout(System.Object,System.Windows.Forms.BoundsSpecified)" /> метод, чтобы предоставить поведение пользовательской инициализации.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Layout">
      <MemberSignature Language="C#" Value="public virtual bool Layout (object container, System.Windows.Forms.LayoutEventArgs layoutEventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Layout(object container, class System.Windows.Forms.LayoutEventArgs layoutEventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Layout.LayoutEngine.Layout(System.Object,System.Windows.Forms.LayoutEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Layout(System::Object ^ container, System::Windows::Forms::LayoutEventArgs ^ layoutEventArgs);" />
      <MemberSignature Language="F#" Value="abstract member Layout : obj * System.Windows.Forms.LayoutEventArgs -&gt; bool&#xA;override this.Layout : obj * System.Windows.Forms.LayoutEventArgs -&gt; bool" Usage="layoutEngine.Layout (container, layoutEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="container" Type="System.Object" />
        <Parameter Name="layoutEventArgs" Type="System.Windows.Forms.LayoutEventArgs" />
      </Parameters>
      <Docs>
        <param name="container">The container on which the layout engine will operate.</param>
        <param name="layoutEventArgs">An event argument from a <see cref="E:System.Windows.Forms.Control.Layout" /> event.</param>
        <summary>Requests that the layout engine perform a layout operation.</summary>
        <returns>
          <see langword="true" /> if layout should be performed again by the parent of <paramref name="container" />; otherwise, <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается в том случае, если обработчик макетов находится для выполнения операции расположения на `container` параметра. Можно проверить значение <xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A>, <xref:System.Windows.Forms.LayoutEventArgs.AffectedComponent%2A>, и <xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A> свойства `layoutEventArgs` принятии решений о необходимости при операции макета.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.Windows.Forms.Layout.LayoutEngine.Layout%2A> метода для реализации поведения пользовательского макета. Данный пример кода является частью большего примера, приведенного для <xref:System.Windows.Forms.Layout.LayoutEngine> класса.  
  
 [!code-cpp[System.Windows.Forms.Layout.LayoutEngine#4](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Layout.LayoutEngine/cpp/DemoFlowLayout.cpp#4)]
 [!code-csharp[System.Windows.Forms.Layout.LayoutEngine#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Layout.LayoutEngine/CS/DemoFlowLayout.cs#4)]
 [!code-vb[System.Windows.Forms.Layout.LayoutEngine#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Layout.LayoutEngine/VB/DemoFlowLayout.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <paramref name="container" /> is not a type on which <see cref="T:System.Windows.Forms.Layout.LayoutEngine" /> can perform layout.</exception>
        <block subset="none" type="overrides">
          <para>Переопределить <see cref="M:System.Windows.Forms.Layout.LayoutEngine.Layout(System.Object,System.Windows.Forms.LayoutEventArgs)" /> метод, чтобы предоставить поведение пользовательского макета.  При размещении содержимого <paramref name="container" /> параметра, не забудьте проверить <see cref="P:System.Windows.Forms.Control.Visible" /> свойства каждого дочернего элемента управления.  Возвращает <see langword="true" /> если логика механизма формирования структуры определяет, что структура должна выполняться снова в родительском контейнере. Это может произойти, например, если обработчик макетов изменяет размеры дочерних элементов управления и определяет, что контейнер необходимо увеличить, чтобы разместить новый макет.</para>
        </block>
        <altmember cref="T:System.Windows.Forms.LayoutEventArgs" />
      </Docs>
    </Member>
  </Members>
</Type>