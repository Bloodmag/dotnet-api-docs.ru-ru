<Type Name="ButtonBase" FullName="System.Windows.Forms.ButtonBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3c7422a413ee80e6ced070e456c2a449462ba705" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37572606" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ButtonBase : System.Windows.Forms.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ButtonBase extends System.Windows.Forms.Control" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ButtonBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ButtonBase&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class ButtonBase abstract : System::Windows::Forms::Control" />
  <TypeSignature Language="F#" Value="type ButtonBase = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Windows.Forms.Design.ButtonBaseDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="e0cd8-101">Implements the basic functionality common to button controls.</span>
      <span class="sxs-lookup">
        <span data-stu-id="e0cd8-101">Implements the basic functionality common to button controls.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0cd8-102">Обычно вы не наследуют от <xref:System.Windows.Forms.ButtonBase>.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-102">You do not typically inherit from <xref:System.Windows.Forms.ButtonBase>.</span></span> <span data-ttu-id="e0cd8-103">Чтобы создать свой собственный класс кнопки, наследуют <xref:System.Windows.Forms.Button>, <xref:System.Windows.Forms.CheckBox>, или <xref:System.Windows.Forms.RadioButton> класса.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-103">To create your own button class, inherit from the <xref:System.Windows.Forms.Button>, <xref:System.Windows.Forms.CheckBox>, or <xref:System.Windows.Forms.RadioButton> class.</span></span>  
  
 <span data-ttu-id="e0cd8-104">Чтобы отобразить изображение производные кнопки, задайте <xref:System.Windows.Forms.ButtonBase.Image%2A> свойство или <xref:System.Windows.Forms.ButtonBase.ImageList%2A> и <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-104">To have the derived button control display an image, set the <xref:System.Windows.Forms.ButtonBase.Image%2A> property or the <xref:System.Windows.Forms.ButtonBase.ImageList%2A> and <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> properties.</span></span> <span data-ttu-id="e0cd8-105">Можно выровнять изображение на кнопке, задав <xref:System.Windows.Forms.ButtonBase.ImageAlign%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-105">The image can be aligned on the button control by setting the <xref:System.Windows.Forms.ButtonBase.ImageAlign%2A> property.</span></span> <span data-ttu-id="e0cd8-106">Аналогичным образом Чтобы выровнять <xref:System.Windows.Forms.Control.Text%2A> отображается на кнопке, задайте <xref:System.Windows.Forms.ButtonBase.TextAlign%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-106">Likewise, to align the <xref:System.Windows.Forms.Control.Text%2A> displayed on the button control, set the <xref:System.Windows.Forms.ButtonBase.TextAlign%2A> property.</span></span>  
  
 <span data-ttu-id="e0cd8-107"><xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> Свойство определяет стиль и внешний вид элемента управления.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-107">The <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property determines the style and appearance of the control.</span></span> <span data-ttu-id="e0cd8-108">Если <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> свойству <xref:System.Windows.Forms.FlatStyle.System?displayProperty=nameWithType>, операционной системы пользователя определяет внешний вид элемента управления.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-108">If the <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property is set to <xref:System.Windows.Forms.FlatStyle.System?displayProperty=nameWithType>, the user's operating system determines the appearance of the control.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Control" />
    <altmember cref="T:System.Windows.Forms.Button" />
    <altmember cref="T:System.Windows.Forms.CheckBox" />
    <altmember cref="T:System.Windows.Forms.RadioButton" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ButtonBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ButtonBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e0cd8-109">Initializes a new instance of the <see cref="T:System.Windows.Forms.ButtonBase" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-109">Initializes a new instance of the <see cref="T:System.Windows.Forms.ButtonBase" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoEllipsis">
      <MemberSignature Language="C#" Value="public bool AutoEllipsis { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoEllipsis" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonBase.AutoEllipsis" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoEllipsis As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoEllipsis { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoEllipsis : bool with get, set" Usage="System.Windows.Forms.ButtonBase.AutoEllipsis" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0cd8-110">Gets or sets a value indicating whether the ellipsis character (...) appears at the right edge of the control, denoting that the control text extends beyond the specified length of the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-110">Gets or sets a value indicating whether the ellipsis character (...) appears at the right edge of the control, denoting that the control text extends beyond the specified length of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0cd8-111">
            <see langword="true" /> Если дополнительный текст метки должен обозначаться многоточием. в противном случае <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-111">
              <see langword="true" /> if the additional label text is to be indicated by an ellipsis; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e0cd8-112">Значение по умолчанию — <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-112">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0cd8-113">Задайте <xref:System.Windows.Forms.ButtonBase.AutoEllipsis%2A> для `true` для отображения текста, выступающая за пределы ширины элемента управления, когда пользователь проходит над элементом управления с помощью мыши.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-113">Set <xref:System.Windows.Forms.ButtonBase.AutoEllipsis%2A> to `true` to display text that extends beyond the width of the control when the user passes over the control with the mouse.</span></span> <span data-ttu-id="e0cd8-114">Необходимо задать элемент управления `AutoSize` свойства `false` Если <xref:System.Windows.Forms.ButtonBase.AutoEllipsis%2A> быть `true`.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-114">You must set the control's `AutoSize` property to `false` if you want <xref:System.Windows.Forms.ButtonBase.AutoEllipsis%2A> to be `true`.</span></span> <span data-ttu-id="e0cd8-115">Если `AutoSize` является `true`, элемент управления будет увеличиваться в соответствии с текстом и многоточие не будет отображаться.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-115">If `AutoSize` is `true`, the control will grow to fit the text and an ellipsis will not appear.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSize">
      <MemberSignature Language="C#" Value="public override bool AutoSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonBase.AutoSize" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property AutoSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AutoSize { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSize : bool with get, set" Usage="System.Windows.Forms.ButtonBase.AutoSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0cd8-116">Gets or sets a value that indicates whether the control resizes based on its contents.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-116">Gets or sets a value that indicates whether the control resizes based on its contents.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0cd8-117">
            <see langword="true" /> Если элемент управления автоматически изменяются в зависимости от его содержимого; в противном случае <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-117">
              <see langword="true" /> if the control automatically resizes based on its contents; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e0cd8-118">Значение по умолчанию — <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-118">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSizeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler AutoSizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AutoSizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ButtonBase.AutoSizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event AutoSizeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AutoSizeChanged;" />
      <MemberSignature Language="F#" Value="member this.AutoSizeChanged : EventHandler " Usage="member this.AutoSizeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0cd8-119">Occurs when the value of the <see cref="P:System.Windows.Forms.ButtonBase.AutoSize" /> property changes.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-119">Occurs when the value of the <see cref="P:System.Windows.Forms.ButtonBase.AutoSize" /> property changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0cd8-120">Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="e0cd8-120">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0cd8-121">В следующем примере кода показано использование этого элемента.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-121">The following code example demonstrates the use of this member.</span></span> <span data-ttu-id="e0cd8-122">В примере обработчик событий сообщает о вхождение <xref:System.Windows.Forms.ButtonBase.AutoSizeChanged> событий.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-122">In the example, an event handler reports on the occurrence of the <xref:System.Windows.Forms.ButtonBase.AutoSizeChanged> event.</span></span> <span data-ttu-id="e0cd8-123">Этот отчет позволяет выяснить, когда происходит событие и может оказаться полезным при отладке.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-123">This report helps you to learn when the event occurs and can assist you in debugging.</span></span> <span data-ttu-id="e0cd8-124">Чтобы создать отчет для нескольких событий или событий, которые происходят часто, рассмотрите возможность замены <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> с <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> или добавлении сообщения в многострочном <xref:System.Windows.Forms.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-124">To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> with <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.</span></span>  
  
 <span data-ttu-id="e0cd8-125">Чтобы запустить пример кода, вставьте его в проект, который содержит экземпляр типа, который наследует от <xref:System.Windows.Forms.ButtonBase>, такие как <xref:System.Windows.Forms.Button> или <xref:System.Windows.Forms.CheckBox>.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-125">To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.ButtonBase>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.CheckBox>.</span></span> <span data-ttu-id="e0cd8-126">Введите имя экземпляра `ButtonBase1` и убедитесь, что обработчик событий, связанный с <xref:System.Windows.Forms.ButtonBase.AutoSizeChanged> событий.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-126">Then name the instance `ButtonBase1` and ensure that the event handler is associated with the <xref:System.Windows.Forms.ButtonBase.AutoSizeChanged> event.</span></span>  
  
 [!code-csharp[System.Windows.Forms.EventExamples#136](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#136)]
 [!code-vb[System.Windows.Forms.EventExamples#136](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#136)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public override System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonBase.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Windows.Forms.ButtonBase.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0cd8-127">Gets or sets the background color of the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-127">Gets or sets the background color of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0cd8-128">Объект <see cref="T:System.Drawing.Color" /> значение, представляющее цвет фона.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-128">A <see cref="T:System.Drawing.Color" /> value representing the background color.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonBase.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberSignature Language="F#" Value="override this.CreateAccessibilityInstance : unit -&gt; System.Windows.Forms.AccessibleObject" Usage="buttonBase.CreateAccessibilityInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e0cd8-129">Creates a new accessibility object for the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-129">Creates a new accessibility object for the control.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e0cd8-130">A new <see cref="T:System.Windows.Forms.AccessibleObject" /> for the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-130">A new <see cref="T:System.Windows.Forms.AccessibleObject" /> for the control.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.CreateAccessibilityInstance" />
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonBase.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CreateParams : System.Windows.Forms.CreateParams" Usage="System.Windows.Forms.ButtonBase.CreateParams" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0cd8-131">Gets the required creation parameters when the control handle is created.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-131">Gets the required creation parameters when the control handle is created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0cd8-132">Объект <see cref="T:System.Windows.Forms.CreateParams" />, содержащий необходимые параметры процедуры создания дескриптора элемента управления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-132">A <see cref="T:System.Windows.Forms.CreateParams" /> that contains the required creation parameters when the handle to the control is created.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">
          <span data-ttu-id="e0cd8-133">для работы с неуправляемым кодом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-133">for operating with unmanaged code.</span>
          </span>
          <span data-ttu-id="e0cd8-134">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-134">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
          </span>
        </permission>
        <altmember cref="P:System.Windows.Forms.Control.CreateParams" />
      </Docs>
    </Member>
    <Member MemberName="DefaultImeMode">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.ImeMode DefaultImeMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImeMode DefaultImeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonBase.DefaultImeMode" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultImeMode As ImeMode" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::ImeMode DefaultImeMode { System::Windows::Forms::ImeMode get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultImeMode : System.Windows.Forms.ImeMode" Usage="System.Windows.Forms.ButtonBase.DefaultImeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0cd8-135">Gets the default Input Method Editor (IME) mode supported by this control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-135">Gets the default Input Method Editor (IME) mode supported by this control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0cd8-136">Одно из значений перечисления <see cref="T:System.Windows.Forms.ImeMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-136">One of the <see cref="T:System.Windows.Forms.ImeMode" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0cd8-137">Реализованное в <xref:System.Windows.Forms.ButtonBase> класса, это свойство всегда возвращает `Disable` значение <xref:System.Windows.Forms.ImeMode?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-137">As implemented in the <xref:System.Windows.Forms.ButtonBase> class, this property always returns the `Disable` value of <xref:System.Windows.Forms.ImeMode?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImeMode" />
      </Docs>
    </Member>
    <Member MemberName="DefaultSize">
      <MemberSignature Language="C#" Value="protected override System.Drawing.Size DefaultSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Size DefaultSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonBase.DefaultSize" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultSize As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Drawing::Size DefaultSize { System::Drawing::Size get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultSize : System.Drawing.Size" Usage="System.Windows.Forms.ButtonBase.DefaultSize" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0cd8-138">Gets the default size of the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-138">Gets the default size of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0cd8-139">
            <see cref="T:System.Drawing.Size" /> по умолчанию для элемента управления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-139">The default <see cref="T:System.Drawing.Size" /> of the control.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.DefaultSize" />
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonBase.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="buttonBase.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">
          <span data-ttu-id="e0cd8-140">
            <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-140">
              <see langword="true" /> to release both managed and unmanaged resources; <see langword="false" /> to release only unmanaged resources.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e0cd8-141">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.ButtonBase" /> and optionally releases the managed resources.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-141">Releases the unmanaged resources used by the <see cref="T:System.Windows.Forms.ButtonBase" /> and optionally releases the managed resources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0cd8-142">Этот метод вызывается открытым `Dispose` метод и <xref:System.Object.Finalize%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-142">This method is called by the public `Dispose` method and the <xref:System.Object.Finalize%2A> method.</span></span> <span data-ttu-id="e0cd8-143">`Dispose` вызывает защищенный `Dispose(Boolean)` метод с `disposing` параметру присвоить `true`.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-143">`Dispose` invokes the protected `Dispose(Boolean)` method with the `disposing` parameter set to `true`.</span></span> <span data-ttu-id="e0cd8-144"><xref:System.Object.Finalize%2A> вызывает `Dispose` с `disposing` присвоено `false`.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-144"><xref:System.Object.Finalize%2A> invokes `Dispose` with `disposing` set to `false`.</span></span>  
  
 <span data-ttu-id="e0cd8-145">Когда `disposing` параметр имеет значение true, этот метод освобождает все ресурсы, занятые любыми управляемыми объектами, <xref:System.Windows.Forms.ButtonBase> ссылки.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-145">When the `disposing` parameter is true, this method releases all resources held by any managed objects that this <xref:System.Windows.Forms.ButtonBase> references.</span></span> <span data-ttu-id="e0cd8-146">Этот метод вызывает метод `Dispose` каждого объекта, на который есть ссылка.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-146">This method invokes the `Dispose` method of each referenced object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="e0cd8-147">
            <para>
              <see langword="Dispose" /> может вызываться несколько раз другими объектами. При переопределении метода <see langword="Dispose(Boolean)" /> нужно избегать ссылок на объекты, которые были уничтожены предыдущими вызовами <see langword="Dispose" />. Дополнительные сведения о том, как реализовать <see langword="Dispose(Boolean)" />, см. в разделе [реализация Method](~/docs/standard/garbage-collection/implementing-dispose.md) Dispose.  Дополнительные сведения о <see langword="Dispose" /> и <see cref="M:System.Object.Finalize" />, см. в разделе [очистки неуправляемых Resources](~/docs/standard/garbage-collection/unmanaged.md) и [переопределение метода Finalize] (http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-147">
              <para>
                <see langword="Dispose" /> can be called multiple times by other objects. When overriding <see langword="Dispose(Boolean)" /> be careful not to reference objects that have been previously disposed of in an earlier call to <see langword="Dispose" />. For more information about how to implement <see langword="Dispose(Boolean)" />, see [Implementing a Dispose Method](~/docs/standard/garbage-collection/implementing-dispose.md).  For more information about <see langword="Dispose" /> and <see cref="M:System.Object.Finalize" />, see [Cleaning Up Unmanaged Resources](~/docs/standard/garbage-collection/unmanaged.md) and [Overriding the Finalize Method](http://msdn.microsoft.com/library/8026cb68-fe93-43fc-96c1-c09ad7d64cd3).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FlatAppearance">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.FlatButtonAppearance FlatAppearance { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.FlatButtonAppearance FlatAppearance" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonBase.FlatAppearance" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FlatAppearance As FlatButtonAppearance" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::FlatButtonAppearance ^ FlatAppearance { System::Windows::Forms::FlatButtonAppearance ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FlatAppearance : System.Windows.Forms.FlatButtonAppearance" Usage="System.Windows.Forms.ButtonBase.FlatAppearance" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FlatButtonAppearance</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0cd8-148">Gets the appearance of the border and the colors used to indicate check state and mouse state.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-148">Gets the appearance of the border and the colors used to indicate check state and mouse state.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0cd8-149">Одно из значений перечисления <see cref="T:System.Windows.Forms.FlatButtonAppearance" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-149">One of the <see cref="T:System.Windows.Forms.FlatButtonAppearance" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0cd8-150">Используйте <xref:System.Windows.Forms.ButtonBase.FlatAppearance%2A> свойство только с <xref:System.Windows.Forms.Button> , для свойств <xref:System.Windows.Forms.FlatStyle> является <xref:System.Windows.Forms.FlatStyle.Flat>.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-150">Use the <xref:System.Windows.Forms.ButtonBase.FlatAppearance%2A> property only with <xref:System.Windows.Forms.Button> controls whose <xref:System.Windows.Forms.FlatStyle> is <xref:System.Windows.Forms.FlatStyle.Flat>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlatStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.FlatStyle FlatStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.FlatStyle FlatStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonBase.FlatStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property FlatStyle As FlatStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::FlatStyle FlatStyle { System::Windows::Forms::FlatStyle get(); void set(System::Windows::Forms::FlatStyle value); };" />
      <MemberSignature Language="F#" Value="member this.FlatStyle : System.Windows.Forms.FlatStyle with get, set" Usage="System.Windows.Forms.ButtonBase.FlatStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.FlatStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0cd8-151">Gets or sets the flat style appearance of the button control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-151">Gets or sets the flat style appearance of the button control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0cd8-152">Одно из значений перечисления <see cref="T:System.Windows.Forms.FlatStyle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-152">One of the <see cref="T:System.Windows.Forms.FlatStyle" /> values.</span>
          </span>
          <span data-ttu-id="e0cd8-153">Значение по умолчанию — <see langword="Standard" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-153">The default value is <see langword="Standard" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0cd8-154">При <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> свойство <xref:System.Windows.Forms.RadioButton> и <xref:System.Windows.Forms.CheckBox> классы присваивается `System`, прорисовывается операционной системой пользователя и выравнивание флажка основана на `CheckAlign` и <xref:System.Windows.Forms.ButtonBase.TextAlign%2A> значения свойств.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-154">When the <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property of the <xref:System.Windows.Forms.RadioButton> and <xref:System.Windows.Forms.CheckBox> classes is set to `System`, the control is drawn by the user's operating system and the check alignment is based upon the `CheckAlign` and <xref:System.Windows.Forms.ButtonBase.TextAlign%2A> property values.</span></span> <span data-ttu-id="e0cd8-155">`CheckAlign` Значение свойства не изменяется, но внешний вид элемента управления может измениться.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-155">The `CheckAlign` property value is not changed, but the appearance of the control can be affected.</span></span> <span data-ttu-id="e0cd8-156">Флажок горизонтально выравнивается по левой или правой границей элемента управления (левое или центральное выравнивание отображается левом краю, а правое остается без изменений), а вертикально так же, как описательный текст.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-156">The check box is horizontally aligned with either the left or right edge of the control (a left or center alignment appears left aligned, right remains unchanged), and vertically aligned the same as the descriptive text.</span></span> <span data-ttu-id="e0cd8-157">Например, если у вас есть <xref:System.Windows.Forms.CheckBox> управления `CheckAlign` значение свойства `ContentAlignment`.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-157">For example, if you have a <xref:System.Windows.Forms.CheckBox> control with a `CheckAlign` property value of `ContentAlignment`.</span></span> <span data-ttu-id="e0cd8-158">`MiddleCenter`, <xref:System.Windows.Forms.ButtonBase.TextAlign%2A> значение свойства `ContentAlignment.TopRight`и <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> имеет значение `System`, выравнивание флажка будут отображаться как `ContentAlignment.TopLeft` хотя выравнивание текста не изменяется.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-158">`MiddleCenter`, a <xref:System.Windows.Forms.ButtonBase.TextAlign%2A> property value of `ContentAlignment.TopRight`, and the <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property value is set to `System`, the check box alignment will appear to be `ContentAlignment.TopLeft` while the text alignment remains unchanged.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0cd8-159">Если <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> свойству `FlatStyle.System`, все образы, назначенные <xref:System.Windows.Forms.ButtonBase.Image%2A> свойства не отображаются.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-159">If the <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property is set to `FlatStyle.System`, any images assigned to the <xref:System.Windows.Forms.ButtonBase.Image%2A> property are not displayed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0cd8-160">В следующем примере кода используется производный класс <xref:System.Windows.Forms.Button> и задаются некоторые его основные свойства.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-160">The following code example uses the derived class, <xref:System.Windows.Forms.Button> and sets some of its common properties.</span></span> <span data-ttu-id="e0cd8-161">Результатом будет плоскую кнопку с текстом в левой части и изображение справа.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-161">The result will be a flat button with text on the left and an image on the right.</span></span> <span data-ttu-id="e0cd8-162">Этот код требует наличия растровое изображение с именем `MyBitMap.bmp` хранятся в `C:\Graphics` directory и ссылку на <xref:System.Drawing?displayProperty=nameWithType> пространство имен.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-162">This code requires that you have a bitmap image named `MyBitMap.bmp` stored in the `C:\Graphics` directory, and that a reference to the <xref:System.Drawing?displayProperty=nameWithType> namespace is included.</span></span>  
  
 [!code-cpp[Classic ButtonBase.FlatStyle Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ButtonBase.FlatStyle Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ButtonBase.FlatStyle Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ButtonBase.FlatStyle Example/CS/source.cs#1)]
 [!code-vb[Classic ButtonBase.FlatStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ButtonBase.FlatStyle Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="e0cd8-163">The value assigned is not one of the <see cref="T:System.Windows.Forms.FlatStyle" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-163">The value assigned is not one of the <see cref="T:System.Windows.Forms.FlatStyle" /> values.</span>
          </span>
        </exception>
        <altmember cref="T:System.Drawing.ContentAlignment" />
      </Docs>
    </Member>
    <Member MemberName="GetPreferredSize">
      <MemberSignature Language="C#" Value="public override System.Drawing.Size GetPreferredSize (System.Drawing.Size proposedSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance valuetype System.Drawing.Size GetPreferredSize(valuetype System.Drawing.Size proposedSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonBase.GetPreferredSize(System.Drawing.Size)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetPreferredSize (proposedSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Drawing::Size GetPreferredSize(System::Drawing::Size proposedSize);" />
      <MemberSignature Language="F#" Value="override this.GetPreferredSize : System.Drawing.Size -&gt; System.Drawing.Size" Usage="buttonBase.GetPreferredSize proposedSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="proposedSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="proposedSize">
          <span data-ttu-id="e0cd8-164">The custom-sized area for a control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-164">The custom-sized area for a control.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e0cd8-165">Retrieves the size of a rectangular area into which a control can be fitted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-165">Retrieves the size of a rectangular area into which a control can be fitted.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e0cd8-166">An ordered pair of type <see cref="T:System.Drawing.Size" /> representing the width and height of a rectangle.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-166">An ordered pair of type <see cref="T:System.Drawing.Size" /> representing the width and height of a rectangle.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0cd8-167">Поведение <xref:System.Windows.Forms.ButtonBase.GetPreferredSize%2A> отличается элементом управления.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-167">The behavior of <xref:System.Windows.Forms.ButtonBase.GetPreferredSize%2A> differs by control.</span></span> <span data-ttu-id="e0cd8-168"><xref:System.Windows.Forms.Control.LayoutEngine%2A> Иногда невозможно назначить возвращаемый размер элемента управления.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-168">The <xref:System.Windows.Forms.Control.LayoutEngine%2A> might be unable to assign the returned size to the control.</span></span> <span data-ttu-id="e0cd8-169">Вы может вернуть размер, размер которых превышает ограничения, указанного в `proposedSize` параметра, но `proposedSize` следует уменьшить при уменьшении ограничения.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-169">You can return a size larger than the constraints indicated in the `proposedSize` parameter, but `proposedSize` should decrease as the constraint decreases.</span></span> <span data-ttu-id="e0cd8-170">Например `GetPreferredSize(new Size(100, 0))` не должно быть шире, чем `GetPreferredSize(new Size(200, 0))`.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-170">For example, `GetPreferredSize(new Size(100, 0))` should not be wider than `GetPreferredSize(new Size(200, 0))`.</span></span> <span data-ttu-id="e0cd8-171">Исключением является `proposedSize` 0 или `Size.Empty`, которые определены как неограниченное.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-171">The exception is a `proposedSize` of 0 or `Size.Empty`, which are defined as unconstrained.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Image">
      <MemberSignature Language="C#" Value="public System.Drawing.Image Image { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Drawing.Image Image" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonBase.Image" />
      <MemberSignature Language="VB.NET" Value="Public Property Image As Image" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Image ^ Image { System::Drawing::Image ^ get(); void set(System::Drawing::Image ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Image : System.Drawing.Image with get, set" Usage="System.Windows.Forms.ButtonBase.Image" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Image</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0cd8-172">Gets or sets the image that is displayed on a button control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-172">Gets or sets the image that is displayed on a button control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0cd8-173">
            <see cref="T:System.Drawing.Image" /> Отображается на кнопке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-173">The <see cref="T:System.Drawing.Image" /> displayed on the button control.</span>
          </span>
          <span data-ttu-id="e0cd8-174">Значение по умолчанию — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-174">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0cd8-175">Когда <xref:System.Windows.Forms.ButtonBase.Image%2A> свойство задано, <xref:System.Windows.Forms.ButtonBase.ImageList%2A> свойству будет присвоено `null`и <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> будет установлено по умолчанию, -1.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-175">When the <xref:System.Windows.Forms.ButtonBase.Image%2A> property is set, the <xref:System.Windows.Forms.ButtonBase.ImageList%2A> property will be set to `null`, and the <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> property will be set to its default, -1.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0cd8-176">Если <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> свойству `FlatStyle.System`, все образы, назначенные <xref:System.Windows.Forms.ButtonBase.Image%2A> свойства не отображаются.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-176">If the <xref:System.Windows.Forms.ButtonBase.FlatStyle%2A> property is set to `FlatStyle.System`, any images assigned to the <xref:System.Windows.Forms.ButtonBase.Image%2A> property are not displayed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0cd8-177">В следующем примере кода используется производный класс <xref:System.Windows.Forms.Button> и задаются некоторые его основные свойства.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-177">The following code example uses the derived class, <xref:System.Windows.Forms.Button> and sets some of its common properties.</span></span> <span data-ttu-id="e0cd8-178">Результатом будет плоскую кнопку с текстом в левой части и изображение справа.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-178">The result will be a flat button with text on the left and an image on the right.</span></span> <span data-ttu-id="e0cd8-179">Этот код требует наличия растровое изображение с именем `MyBitMap.bmp` хранятся в `C:\Graphics` directory и ссылку на <xref:System.Drawing?displayProperty=nameWithType> пространство имен.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-179">This code requires that you have a bitmap image named `MyBitMap.bmp` stored in the `C:\Graphics` directory, and that a reference to the <xref:System.Drawing?displayProperty=nameWithType> namespace is included.</span></span>  
  
 [!code-cpp[Classic ButtonBase.FlatStyle Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ButtonBase.FlatStyle Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ButtonBase.FlatStyle Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ButtonBase.FlatStyle Example/CS/source.cs#1)]
 [!code-vb[Classic ButtonBase.FlatStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ButtonBase.FlatStyle Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImageList" />
        <altmember cref="P:System.Windows.Forms.ButtonBase.FlatStyle" />
      </Docs>
    </Member>
    <Member MemberName="ImageAlign">
      <MemberSignature Language="C#" Value="public System.Drawing.ContentAlignment ImageAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.ContentAlignment ImageAlign" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonBase.ImageAlign" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageAlign As ContentAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::ContentAlignment ImageAlign { System::Drawing::ContentAlignment get(); void set(System::Drawing::ContentAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.ImageAlign : System.Drawing.ContentAlignment with get, set" Usage="System.Windows.Forms.ButtonBase.ImageAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.ContentAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0cd8-180">Gets or sets the alignment of the image on the button control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-180">Gets or sets the alignment of the image on the button control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0cd8-181">Одно из значений перечисления <see cref="T:System.Drawing.ContentAlignment" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-181">One of the <see cref="T:System.Drawing.ContentAlignment" /> values.</span>
          </span>
          <span data-ttu-id="e0cd8-182">Значение по умолчанию — <see langword="MiddleCenter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-182">The default value is <see langword="MiddleCenter" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e0cd8-183">В следующем примере кода используется производный класс <xref:System.Windows.Forms.Button> и задаются некоторые его основные свойства.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-183">The following code example uses the derived class, <xref:System.Windows.Forms.Button> and sets some of its common properties.</span></span> <span data-ttu-id="e0cd8-184">Результатом будет плоскую кнопку с текстом в левой части и изображение справа.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-184">The result will be a flat button with text on the left and an image on the right.</span></span> <span data-ttu-id="e0cd8-185">Этот код требует наличия растровое изображение с именем `MyBitMap.bmp` хранятся в `C:\Graphics` directory и ссылку на <xref:System.Drawing?displayProperty=nameWithType> пространство имен.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-185">This code requires that you have a bitmap image named `MyBitMap.bmp` stored in the `C:\Graphics` directory, and that a reference to the <xref:System.Drawing?displayProperty=nameWithType> namespace is included.</span></span>  
  
 [!code-cpp[Classic ButtonBase.FlatStyle Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ButtonBase.FlatStyle Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ButtonBase.FlatStyle Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ButtonBase.FlatStyle Example/CS/source.cs#1)]
 [!code-vb[Classic ButtonBase.FlatStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ButtonBase.FlatStyle Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="e0cd8-186">The value assigned is not one of the <see cref="T:System.Drawing.ContentAlignment" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-186">The value assigned is not one of the <see cref="T:System.Drawing.ContentAlignment" /> values.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.ButtonBase.TextAlign" />
      </Docs>
    </Member>
    <Member MemberName="ImageIndex">
      <MemberSignature Language="C#" Value="public int ImageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ImageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonBase.ImageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ImageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ImageIndex : int with get, set" Usage="System.Windows.Forms.ButtonBase.ImageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ImageIndexConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0cd8-187">Gets or sets the image list index value of the image displayed on the button control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-187">Gets or sets the image list index value of the image displayed on the button control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0cd8-188">Отсчитываемый от нуля индекс, который предоставляет позицию рисунка в <see cref="T:System.Windows.Forms.ImageList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-188">A zero-based index, which represents the image position in an <see cref="T:System.Windows.Forms.ImageList" />.</span>
          </span>
          <span data-ttu-id="e0cd8-189">Значение по умолчанию — -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-189">The default is -1.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0cd8-190">Когда <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> или <xref:System.Windows.Forms.ButtonBase.ImageList%2A> заданы свойства, <xref:System.Windows.Forms.ButtonBase.Image%2A> задано значение по умолчанию `null`.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-190">When the <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> or <xref:System.Windows.Forms.ButtonBase.ImageList%2A> properties are set, the <xref:System.Windows.Forms.ButtonBase.Image%2A> property is set to its default value, `null`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0cd8-191">Если <xref:System.Windows.Forms.ButtonBase.ImageList%2A> значение свойства изменяется на `null`, <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> свойство возвращает значение по умолчанию -1.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-191">If the <xref:System.Windows.Forms.ButtonBase.ImageList%2A> property value is changed to `null`, the <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> property returns its default value, -1.</span></span> <span data-ttu-id="e0cd8-192">Тем не менее назначенного <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> значение внутренне сохраняется и используется, если другая <xref:System.Windows.Forms.ImageList> объект присваивается <xref:System.Windows.Forms.ButtonBase.ImageList%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-192">However, the assigned <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> value is retained internally and used when another <xref:System.Windows.Forms.ImageList> object is assigned to the <xref:System.Windows.Forms.ButtonBase.ImageList%2A> property.</span></span> <span data-ttu-id="e0cd8-193">Если новый <xref:System.Windows.Forms.ImageList> назначенные <xref:System.Windows.Forms.ButtonBase.ImageList%2A> свойство имеет <xref:System.Windows.Forms.ImageList.ImageCollection.Count%2A?displayProperty=nameWithType> значение свойства, которое меньше или равно значение, присваиваемое <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> свойство минус один (для учетной записи, для которого отсчитываемый от нуля индекс коллекции), <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A>значение свойства устанавливается на единицу меньше, чем <xref:System.Windows.Forms.ImageList.ImageCollection.Count%2A> значение свойства.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-193">If the new <xref:System.Windows.Forms.ImageList> assigned to the <xref:System.Windows.Forms.ButtonBase.ImageList%2A> property has an <xref:System.Windows.Forms.ImageList.ImageCollection.Count%2A?displayProperty=nameWithType> property value that is less than or equal to the value assigned to the <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> property minus one (to account for the collection being a zero-based index), the <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> property value is adjusted to one less than the <xref:System.Windows.Forms.ImageList.ImageCollection.Count%2A> property value.</span></span> <span data-ttu-id="e0cd8-194">Например, рассмотрим кнопки элемент управления <xref:System.Windows.Forms.ImageList> содержит три изображения и для которой <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> свойство имеет значение 2.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-194">For example, consider a button control whose <xref:System.Windows.Forms.ImageList> has three images and whose <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> property is set to 2.</span></span> <span data-ttu-id="e0cd8-195">Если новый <xref:System.Windows.Forms.ImageList> , имеет только два изображения назначенного кнопке панели <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> значение изменяется на 1.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-195">If a new <xref:System.Windows.Forms.ImageList> that has only two images is assigned to the button, the <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> value changes to 1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0cd8-196">В следующем примере кода используется производный класс <xref:System.Windows.Forms.Button> и задает <xref:System.Windows.Forms.ButtonBase.ImageList%2A> и <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-196">The following code example uses the derived class, <xref:System.Windows.Forms.Button> and sets the <xref:System.Windows.Forms.ButtonBase.ImageList%2A> and <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> properties.</span></span> <span data-ttu-id="e0cd8-197">Этот код требует <xref:System.Windows.Forms.ImageList> был создан и с минимальным одного <xref:System.Drawing.Image> был назначен его.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-197">This code requires that an <xref:System.Windows.Forms.ImageList> has been created and a minimum of one <xref:System.Drawing.Image> has been assigned to it.</span></span> <span data-ttu-id="e0cd8-198">Этот код также требует наличия растровое изображение с именем `MyBitMap.bmp` хранятся в `C:\Graphics` каталога.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-198">This code also requires that you have a bitmap image named `MyBitMap.bmp` stored in the `C:\Graphics` directory.</span></span>  
  
 [!code-cpp[Classic ButtonBase.ImageIndex Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ButtonBase.ImageIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ButtonBase.ImageIndex Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ButtonBase.ImageIndex Example/CS/source.cs#1)]
 [!code-vb[Classic ButtonBase.ImageIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ButtonBase.ImageIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="e0cd8-199">The assigned value is less than the lower bounds of the <see cref="P:System.Windows.Forms.ButtonBase.ImageIndex" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-199">The assigned value is less than the lower bounds of the <see cref="P:System.Windows.Forms.ButtonBase.ImageIndex" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Forms.ImageList" />
      </Docs>
    </Member>
    <Member MemberName="ImageKey">
      <MemberSignature Language="C#" Value="public string ImageKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonBase.ImageKey" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ImageKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageKey : string with get, set" Usage="System.Windows.Forms.ButtonBase.ImageKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ImageIndexEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.ImageKeyConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0cd8-200">Gets or sets the key accessor for the image in the <see cref="P:System.Windows.Forms.ButtonBase.ImageList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-200">Gets or sets the key accessor for the image in the <see cref="P:System.Windows.Forms.ButtonBase.ImageList" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0cd8-201">Строка, представляющая ключ изображения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-201">A string representing the key of the image.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0cd8-202"><xref:System.Windows.Forms.ButtonBase.ImageKey%2A> Свойство указывает образ из списка изображений для отображения в элементе управления.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-202">The <xref:System.Windows.Forms.ButtonBase.ImageKey%2A> property specifies the image from the image list to display on the control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ImageList">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImageList ImageList { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ImageList ImageList" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonBase.ImageList" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageList As ImageList" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImageList ^ ImageList { System::Windows::Forms::ImageList ^ get(); void set(System::Windows::Forms::ImageList ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ImageList : System.Windows.Forms.ImageList with get, set" Usage="System.Windows.Forms.ButtonBase.ImageList" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.RefreshProperties</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImageList</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0cd8-203">Gets or sets the <see cref="T:System.Windows.Forms.ImageList" /> that contains the <see cref="T:System.Drawing.Image" /> displayed on a button control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-203">Gets or sets the <see cref="T:System.Windows.Forms.ImageList" /> that contains the <see cref="T:System.Drawing.Image" /> displayed on a button control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0cd8-204">Объект <see cref="T:System.Windows.Forms.ImageList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-204">An <see cref="T:System.Windows.Forms.ImageList" />.</span>
          </span>
          <span data-ttu-id="e0cd8-205">Значение по умолчанию — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-205">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0cd8-206">При <xref:System.Windows.Forms.ButtonBase.ImageList%2A> или <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> свойство задано, <xref:System.Windows.Forms.ButtonBase.Image%2A> свойству `null`, который является значением по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-206">When the <xref:System.Windows.Forms.ButtonBase.ImageList%2A> or <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> property is set, the <xref:System.Windows.Forms.ButtonBase.Image%2A> property is set `null`, which is its default value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0cd8-207">Если <xref:System.Windows.Forms.ButtonBase.ImageList%2A> значение свойства изменяется на `null`, <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> свойство возвращает значение по умолчанию -1.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-207">If the <xref:System.Windows.Forms.ButtonBase.ImageList%2A> property value is changed to `null`, the <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> property returns its default value, -1.</span></span> <span data-ttu-id="e0cd8-208">Тем не менее назначенного <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> значение внутренне сохраняется и используется, если другая <xref:System.Windows.Forms.ImageList> назначается <xref:System.Windows.Forms.ButtonBase.ImageList%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-208">However, the assigned <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> value is retained internally and used when another <xref:System.Windows.Forms.ImageList> is assigned to the <xref:System.Windows.Forms.ButtonBase.ImageList%2A> property.</span></span> <span data-ttu-id="e0cd8-209">Если новый <xref:System.Windows.Forms.ImageList> назначенные <xref:System.Windows.Forms.ButtonBase.ImageList%2A> свойство имеет <xref:System.Windows.Forms.ImageList.ImageCollection.Count%2A?displayProperty=nameWithType> значение свойства, которое меньше или равно значение, присваиваемое <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> свойство минус один (поскольку коллекция является отсчитываемый от нуля индекс), <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> значение свойства устанавливается на единицу меньше, чем <xref:System.Windows.Forms.ImageList.ImageCollection.Count%2A> значение свойства.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-209">If the new <xref:System.Windows.Forms.ImageList> assigned to the <xref:System.Windows.Forms.ButtonBase.ImageList%2A> property has an <xref:System.Windows.Forms.ImageList.ImageCollection.Count%2A?displayProperty=nameWithType> property value that is less than or equal to the value assigned to the <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> property minus one (because the collection is a zero-based index), the <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> property value is adjusted to one less than the <xref:System.Windows.Forms.ImageList.ImageCollection.Count%2A> property value.</span></span> <span data-ttu-id="e0cd8-210">Например, рассмотрим кнопки элемент управления <xref:System.Windows.Forms.ImageList> содержит три изображения и для которой <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> свойство имеет значение 2.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-210">For example, consider a button control whose <xref:System.Windows.Forms.ImageList> has three images and whose <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> property is set to 2.</span></span> <span data-ttu-id="e0cd8-211">Если новый <xref:System.Windows.Forms.ImageList> , имеет только два изображения назначенного кнопке панели <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> значение изменяется на 1.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-211">If a new <xref:System.Windows.Forms.ImageList> that has only two images is assigned to the button, the <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> value changes to 1.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0cd8-212">В следующем примере кода используется производный класс <xref:System.Windows.Forms.Button> и задает <xref:System.Windows.Forms.ButtonBase.ImageList%2A> и <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> свойства.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-212">The following code example uses the derived class, <xref:System.Windows.Forms.Button> and sets the <xref:System.Windows.Forms.ButtonBase.ImageList%2A> and <xref:System.Windows.Forms.ButtonBase.ImageIndex%2A> properties.</span></span> <span data-ttu-id="e0cd8-213">Этот код требует <xref:System.Windows.Forms.ImageList> был создан и с минимальным одного <xref:System.Drawing.Image> был назначен его.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-213">This code requires that an <xref:System.Windows.Forms.ImageList> has been created and a minimum of one <xref:System.Drawing.Image> has been assigned to it.</span></span> <span data-ttu-id="e0cd8-214">Этот код также требует наличия растровое изображение с именем `MyBitMap.bmp` хранятся в `C:\Graphics` каталога.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-214">This code also requires that you have a bitmap image named `MyBitMap.bmp` stored in the `C:\Graphics` directory.</span></span>  
  
 [!code-cpp[Classic ButtonBase.ImageIndex Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ButtonBase.ImageIndex Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ButtonBase.ImageIndex Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ButtonBase.ImageIndex Example/CS/source.cs#1)]
 [!code-vb[Classic ButtonBase.ImageIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ButtonBase.ImageIndex Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Image" />
        <altmember cref="P:System.Windows.Forms.ButtonBase.ImageIndex" />
      </Docs>
    </Member>
    <Member MemberName="ImeMode">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ImeMode ImeMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.ImeMode ImeMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonBase.ImeMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ImeMode As ImeMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ImeMode ImeMode { System::Windows::Forms::ImeMode get(); void set(System::Windows::Forms::ImeMode value); };" />
      <MemberSignature Language="F#" Value="member this.ImeMode : System.Windows.Forms.ImeMode with get, set" Usage="System.Windows.Forms.ButtonBase.ImeMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ImeMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0cd8-215">Gets or sets the Input Method Editor (IME) mode supported by this control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-215">Gets or sets the Input Method Editor (IME) mode supported by this control.</span>
          </span>
          <span data-ttu-id="e0cd8-216">This property is not relevant for this class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-216">This property is not relevant for this class.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0cd8-217">Одно из значений перечисления <see cref="T:System.Windows.Forms.ImeMode" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-217">One of the <see cref="T:System.Windows.Forms.ImeMode" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0cd8-218">Данное свойство не применимо к этому классу.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-218">This property is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ImeMode" />
        <altmember cref="P:System.Windows.Forms.ButtonBase.DefaultImeMode" />
      </Docs>
    </Member>
    <Member MemberName="ImeModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ImeModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ImeModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ButtonBase.ImeModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ImeModeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ImeModeChanged;" />
      <MemberSignature Language="F#" Value="member this.ImeModeChanged : EventHandler " Usage="member this.ImeModeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0cd8-219">Occurs when the <see cref="P:System.Windows.Forms.ButtonBase.ImeMode" /> property is changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-219">Occurs when the <see cref="P:System.Windows.Forms.ButtonBase.ImeMode" /> property is changed.</span>
          </span>
          <span data-ttu-id="e0cd8-220">This event is not relevant for this class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-220">This event is not relevant for this class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0cd8-221">Данное событие не применимо к этому классу.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-221">This event is not relevant for this class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDefault">
      <MemberSignature Language="C#" Value="protected internal bool IsDefault { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDefault" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonBase.IsDefault" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property IsDefault As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property bool IsDefault { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IsDefault : bool with get, set" Usage="System.Windows.Forms.ButtonBase.IsDefault" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0cd8-222">Gets or sets a value indicating whether the button control is the default button.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-222">Gets or sets a value indicating whether the button control is the default button.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0cd8-223">
            <see langword="true" /> Если кнопка является кнопкой по умолчанию; в противном случае <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-223">
              <see langword="true" /> if the button control is the default button; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0cd8-224">Когда <xref:System.Windows.Forms.ButtonBase.IsDefault%2A> свойству `true`, кнопка является кнопкой по умолчанию для <xref:System.Windows.Forms.Form>.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-224">When the <xref:System.Windows.Forms.ButtonBase.IsDefault%2A> property is set to `true`, the button is the default button for the <xref:System.Windows.Forms.Form>.</span></span> <span data-ttu-id="e0cd8-225">Это означает, что кнопки при нажатии клавиши ВВОД, если другие кнопки или фокус в элементе управления, отражающая клавишу ВВОД.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-225">This means that the button is clicked when the ENTER key is pressed if no other button or any other control that captures the ENTER key has focus.</span></span>  
  
 <span data-ttu-id="e0cd8-226">Чтобы указать кнопку по умолчанию формы, задайте <xref:System.Windows.Forms.Form.AcceptButton%2A> формы нужной кнопке.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-226">To specify the default button of a form, set the <xref:System.Windows.Forms.Form.AcceptButton%2A> property of the form to the desired button.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Form.AcceptButton" />
      </Docs>
    </Member>
    <Member MemberName="OnEnabledChanged">
      <MemberSignature Language="C#" Value="protected override void OnEnabledChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEnabledChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonBase.OnEnabledChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEnabledChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEnabledChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnEnabledChanged : EventArgs -&gt; unit" Usage="buttonBase.OnEnabledChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e0cd8-227">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-227">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e0cd8-228">Raises the <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-228">Raises the <see cref="E:System.Windows.Forms.Control.EnabledChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonBase.OnGotFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotFocus(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnGotFocus : EventArgs -&gt; unit" Usage="buttonBase.OnGotFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e0cd8-229">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-229">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e0cd8-230">Raises the <see cref="E:System.Windows.Forms.Control.GotFocus" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-230">Raises the <see cref="E:System.Windows.Forms.Control.GotFocus" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0cd8-231">При возникновении события через делегат вызывается обработчик события.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-231">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="e0cd8-232">Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="e0cd8-232">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="e0cd8-233">Метод <xref:System.Windows.Forms.ButtonBase.OnGotFocus%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-233">The <xref:System.Windows.Forms.ButtonBase.OnGotFocus%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="e0cd8-234">Это предпочтительная методика обработки событий в производном классе.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-234">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="e0cd8-235">
            <para>При переопределении метода <see cref="M:System.Windows.Forms.ButtonBase.OnGotFocus(System.EventArgs)" /> в производном классе, не забудьте вызвать базовый класс <see cref="M:System.Windows.Forms.ButtonBase.OnGotFocus(System.EventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-235">
              <para>When overriding <see cref="M:System.Windows.Forms.ButtonBase.OnGotFocus(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ButtonBase.OnGotFocus(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Forms.ButtonBase.OnLostFocus(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyDown">
      <MemberSignature Language="C#" Value="protected override void OnKeyDown (System.Windows.Forms.KeyEventArgs kevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyDown(class System.Windows.Forms.KeyEventArgs kevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyDown (kevent As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyDown(System::Windows::Forms::KeyEventArgs ^ kevent);" />
      <MemberSignature Language="F#" Value="override this.OnKeyDown : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="buttonBase.OnKeyDown kevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kevent" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="kevent">
          <span data-ttu-id="e0cd8-236">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-236">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e0cd8-237">Raises the <see cref="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-237">Raises the <see cref="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0cd8-238">При возникновении события через делегат вызывается обработчик события.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-238">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="e0cd8-239">Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="e0cd8-239">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="e0cd8-240">Метод <xref:System.Windows.Forms.ButtonBase.OnKeyDown%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-240">The <xref:System.Windows.Forms.ButtonBase.OnKeyDown%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="e0cd8-241">Это предпочтительная методика обработки событий в производном классе.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-241">This is the preferred technique for handling the event in a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0cd8-242">Не вызывайте <xref:System.Windows.Forms.ButtonBase.OnKeyDown%2A> Если кнопка отключена (Это включает в себя вызовы к базовому классу <xref:System.Windows.Forms.ButtonBase.OnKeyDown%2A> метод при переопределении <xref:System.Windows.Forms.ButtonBase.OnKeyDown%2A> в производном классе).</span><span class="sxs-lookup"><span data-stu-id="e0cd8-242">Do not call <xref:System.Windows.Forms.ButtonBase.OnKeyDown%2A> if the button is disabled (this includes calls to the base class's <xref:System.Windows.Forms.ButtonBase.OnKeyDown%2A> method when you override <xref:System.Windows.Forms.ButtonBase.OnKeyDown%2A> in a derived class).</span></span> <span data-ttu-id="e0cd8-243">При отключении кнопка в переопределении <xref:System.Windows.Forms.ButtonBase.OnKeyDown%2A>, вызвать базовый класс <xref:System.Windows.Forms.ButtonBase.OnKeyDown%2A> метод перед отключением кнопки, или его не следует вызывать вообще.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-243">When disabling the button in an override of <xref:System.Windows.Forms.ButtonBase.OnKeyDown%2A>, call the base class's <xref:System.Windows.Forms.ButtonBase.OnKeyDown%2A> method before disabling the button, or do not call it at all.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="e0cd8-244">
            <para>При переопределении метода <see cref="M:System.Windows.Forms.ButtonBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> в производном классе, не забудьте вызвать базовый класс <see cref="M:System.Windows.Forms.ButtonBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-244">
              <para>When overriding <see cref="M:System.Windows.Forms.ButtonBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ButtonBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnKeyUp">
      <MemberSignature Language="C#" Value="protected override void OnKeyUp (System.Windows.Forms.KeyEventArgs kevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyUp(class System.Windows.Forms.KeyEventArgs kevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyUp (kevent As KeyEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyUp(System::Windows::Forms::KeyEventArgs ^ kevent);" />
      <MemberSignature Language="F#" Value="override this.OnKeyUp : System.Windows.Forms.KeyEventArgs -&gt; unit" Usage="buttonBase.OnKeyUp kevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="kevent" Type="System.Windows.Forms.KeyEventArgs" />
      </Parameters>
      <Docs>
        <param name="kevent">
          <span data-ttu-id="e0cd8-245">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-245">A <see cref="T:System.Windows.Forms.KeyEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e0cd8-246">Raises the <see cref="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-246">Raises the <see cref="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0cd8-247">При возникновении события через делегат вызывается обработчик события.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-247">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="e0cd8-248">Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="e0cd8-248">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="e0cd8-249">Метод <xref:System.Windows.Forms.ButtonBase.OnKeyUp%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-249">The <xref:System.Windows.Forms.ButtonBase.OnKeyUp%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="e0cd8-250">Это предпочтительная методика обработки событий в производном классе.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-250">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="e0cd8-251">
            <para>При переопределении метода <see cref="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> в производном классе, не забудьте вызвать базовый класс <see cref="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-251">
              <para>When overriding <see cref="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ButtonBase.OnKeyUp(System.Windows.Forms.KeyEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Forms.ButtonBase.OnKeyDown(System.Windows.Forms.KeyEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnLostFocus">
      <MemberSignature Language="C#" Value="protected override void OnLostFocus (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnLostFocus(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonBase.OnLostFocus(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnLostFocus (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnLostFocus(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnLostFocus : EventArgs -&gt; unit" Usage="buttonBase.OnLostFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e0cd8-252">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-252">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e0cd8-253">Raises the <see cref="M:System.Windows.Forms.ButtonBase.OnLostFocus(System.EventArgs)" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-253">Raises the <see cref="M:System.Windows.Forms.ButtonBase.OnLostFocus(System.EventArgs)" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0cd8-254">При возникновении события через делегат вызывается обработчик события.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-254">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="e0cd8-255">Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="e0cd8-255">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="e0cd8-256">Метод <xref:System.Windows.Forms.ButtonBase.OnLostFocus%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-256">The <xref:System.Windows.Forms.ButtonBase.OnLostFocus%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="e0cd8-257">Это предпочтительная методика обработки событий в производном классе.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-257">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="e0cd8-258">
            <para>При переопределении метода <see cref="M:System.Windows.Forms.ButtonBase.OnLostFocus(System.EventArgs)" /> в производном классе, не забудьте вызвать базовый класс <see cref="M:System.Windows.Forms.ButtonBase.OnLostFocus(System.EventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-258">
              <para>When overriding <see cref="M:System.Windows.Forms.ButtonBase.OnLostFocus(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ButtonBase.OnLostFocus(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Forms.ButtonBase.OnGotFocus(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseDown">
      <MemberSignature Language="C#" Value="protected override void OnMouseDown (System.Windows.Forms.MouseEventArgs mevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseDown(class System.Windows.Forms.MouseEventArgs mevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseDown (mevent As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseDown(System::Windows::Forms::MouseEventArgs ^ mevent);" />
      <MemberSignature Language="F#" Value="override this.OnMouseDown : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="buttonBase.OnMouseDown mevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mevent" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="mevent">
          <span data-ttu-id="e0cd8-259">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-259">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e0cd8-260">Raises the <see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-260">Raises the <see cref="M:System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0cd8-261">При возникновении события через делегат вызывается обработчик события.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-261">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="e0cd8-262">Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="e0cd8-262">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="e0cd8-263">Метод <xref:System.Windows.Forms.ButtonBase.OnMouseDown%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-263">The <xref:System.Windows.Forms.ButtonBase.OnMouseDown%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="e0cd8-264">Это предпочтительная методика обработки событий в производном классе.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-264">This is the preferred technique for handling the event in a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0cd8-265">Не вызывайте <xref:System.Windows.Forms.ButtonBase.OnMouseDown%2A> Если кнопка отключена (Это включает в себя вызовы к базовому классу <xref:System.Windows.Forms.ButtonBase.OnMouseDown%2A> метод при переопределении <xref:System.Windows.Forms.ButtonBase.OnMouseDown%2A> в производном классе).</span><span class="sxs-lookup"><span data-stu-id="e0cd8-265">Do not call <xref:System.Windows.Forms.ButtonBase.OnMouseDown%2A> if the button is disabled (this includes calls to the base class's <xref:System.Windows.Forms.ButtonBase.OnMouseDown%2A> method when you override <xref:System.Windows.Forms.ButtonBase.OnMouseDown%2A> in a derived class).</span></span> <span data-ttu-id="e0cd8-266">При отключении кнопка в переопределении <xref:System.Windows.Forms.ButtonBase.OnMouseDown%2A>, вызвать базовый класс <xref:System.Windows.Forms.ButtonBase.OnMouseDown%2A> метод перед отключением кнопки, или его не следует вызывать вообще.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-266">When disabling the button in an override of <xref:System.Windows.Forms.ButtonBase.OnMouseDown%2A>, call the base class's <xref:System.Windows.Forms.ButtonBase.OnMouseDown%2A> method before disabling the button, or do not call it at all.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="e0cd8-267">
            <para>При переопределении метода <see cref="M:System.Windows.Forms.ButtonBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> в производном классе, не забудьте вызвать базовый класс <see cref="M:System.Windows.Forms.ButtonBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-267">
              <para>When overriding <see cref="M:System.Windows.Forms.ButtonBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ButtonBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseEnter">
      <MemberSignature Language="C#" Value="protected override void OnMouseEnter (EventArgs eventargs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseEnter(class System.EventArgs eventargs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonBase.OnMouseEnter(System.EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseEnter(EventArgs ^ eventargs);" />
      <MemberSignature Language="F#" Value="override this.OnMouseEnter : EventArgs -&gt; unit" Usage="buttonBase.OnMouseEnter eventargs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventargs" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="eventargs">
          <span data-ttu-id="e0cd8-268">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-268">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e0cd8-269">Raises the <see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-269">Raises the <see cref="M:System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0cd8-270">При возникновении события через делегат вызывается обработчик события.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-270">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="e0cd8-271">Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="e0cd8-271">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="e0cd8-272">Метод <xref:System.Windows.Forms.ButtonBase.OnMouseEnter%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-272">The <xref:System.Windows.Forms.ButtonBase.OnMouseEnter%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="e0cd8-273">Это предпочтительная методика обработки событий в производном классе.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-273">This is the preferred technique for handling the event in a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0cd8-274">Не вызывайте <xref:System.Windows.Forms.ButtonBase.OnMouseEnter%2A> Если кнопка отключена (Это включает вызов базового класса <xref:System.Windows.Forms.ButtonBase.OnMouseEnter%2A> метод при переопределении <xref:System.Windows.Forms.ButtonBase.OnMouseEnter%2A> в производном классе).</span><span class="sxs-lookup"><span data-stu-id="e0cd8-274">Do not call <xref:System.Windows.Forms.ButtonBase.OnMouseEnter%2A> if the button is disabled (this includes call to the base class's <xref:System.Windows.Forms.ButtonBase.OnMouseEnter%2A> method when you override <xref:System.Windows.Forms.ButtonBase.OnMouseEnter%2A> in a derived class).</span></span> <span data-ttu-id="e0cd8-275">При отключении кнопка в переопределении <xref:System.Windows.Forms.ButtonBase.OnMouseEnter%2A>, вызвать базовый класс <xref:System.Windows.Forms.ButtonBase.OnMouseEnter%2A> метод перед отключением кнопки, или его не следует вызывать вообще.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-275">When disabling the button in an override of <xref:System.Windows.Forms.ButtonBase.OnMouseEnter%2A>, call the base class's <xref:System.Windows.Forms.ButtonBase.OnMouseEnter%2A> method before disabling the button, or do not call it at all.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="e0cd8-276">
            <para>При переопределении метода <see cref="M:System.Windows.Forms.ButtonBase.OnMouseEnter(System.EventArgs)" /> в производном классе, не забудьте вызвать базовый класс <see cref="M:System.Windows.Forms.ButtonBase.OnMouseEnter(System.EventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-276">
              <para>When overriding <see cref="M:System.Windows.Forms.ButtonBase.OnMouseEnter(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ButtonBase.OnMouseEnter(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Forms.ButtonBase.OnMouseLeave(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseLeave">
      <MemberSignature Language="C#" Value="protected override void OnMouseLeave (EventArgs eventargs);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseLeave(class System.EventArgs eventargs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonBase.OnMouseLeave(System.EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseLeave(EventArgs ^ eventargs);" />
      <MemberSignature Language="F#" Value="override this.OnMouseLeave : EventArgs -&gt; unit" Usage="buttonBase.OnMouseLeave eventargs" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventargs" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="eventargs">
          <span data-ttu-id="e0cd8-277">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-277">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e0cd8-278">Raises the <see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-278">Raises the <see cref="M:System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0cd8-279">При возникновении события через делегат вызывается обработчик события.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-279">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="e0cd8-280">Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="e0cd8-280">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="e0cd8-281">Метод <xref:System.Windows.Forms.ButtonBase.OnMouseLeave%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-281">The <xref:System.Windows.Forms.ButtonBase.OnMouseLeave%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="e0cd8-282">Это предпочтительная методика обработки событий в производном классе.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-282">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="e0cd8-283">
            <para>При переопределении метода <see cref="M:System.Windows.Forms.ButtonBase.OnMouseLeave(System.EventArgs)" /> в производном классе, не забудьте вызвать базовый класс <see cref="M:System.Windows.Forms.ButtonBase.OnMouseLeave(System.EventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-283">
              <para>When overriding <see cref="M:System.Windows.Forms.ButtonBase.OnMouseLeave(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ButtonBase.OnMouseLeave(System.EventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Forms.ButtonBase.OnMouseEnter(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnMouseMove">
      <MemberSignature Language="C#" Value="protected override void OnMouseMove (System.Windows.Forms.MouseEventArgs mevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseMove(class System.Windows.Forms.MouseEventArgs mevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonBase.OnMouseMove(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseMove (mevent As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseMove(System::Windows::Forms::MouseEventArgs ^ mevent);" />
      <MemberSignature Language="F#" Value="override this.OnMouseMove : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="buttonBase.OnMouseMove mevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mevent" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="mevent">
          <span data-ttu-id="e0cd8-284">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-284">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e0cd8-285">Raises the <see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-285">Raises the <see cref="M:System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0cd8-286">При возникновении события через делегат вызывается обработчик события.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-286">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="e0cd8-287">Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="e0cd8-287">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="e0cd8-288">Метод <xref:System.Windows.Forms.ButtonBase.OnMouseMove%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-288">The <xref:System.Windows.Forms.ButtonBase.OnMouseMove%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="e0cd8-289">Это предпочтительная методика обработки событий в производном классе.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-289">This is the preferred technique for handling the event in a derived class.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e0cd8-290">Не вызывайте <xref:System.Windows.Forms.ButtonBase.OnMouseMove%2A> Если кнопка отключена (Это включает в себя вызовы к базовому классу <xref:System.Windows.Forms.ButtonBase.OnMouseMove%2A> метод при переопределении <xref:System.Windows.Forms.ButtonBase.OnMouseMove%2A> в производном классе).</span><span class="sxs-lookup"><span data-stu-id="e0cd8-290">Do not call <xref:System.Windows.Forms.ButtonBase.OnMouseMove%2A> if the button is disabled (this includes calls to the base class's <xref:System.Windows.Forms.ButtonBase.OnMouseMove%2A> method when you override <xref:System.Windows.Forms.ButtonBase.OnMouseMove%2A> in a derived class).</span></span> <span data-ttu-id="e0cd8-291">При отключении кнопка в переопределении <xref:System.Windows.Forms.ButtonBase.OnMouseMove%2A>, вызвать базовый класс <xref:System.Windows.Forms.ButtonBase.OnMouseMove%2A> метод перед отключением кнопки, или его не следует вызывать вообще.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-291">When disabling the button in an override of <xref:System.Windows.Forms.ButtonBase.OnMouseMove%2A>, call the base class's <xref:System.Windows.Forms.ButtonBase.OnMouseMove%2A> method before disabling the button, or do not call it at all.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="e0cd8-292">
            <para>При переопределении метода <see cref="M:System.Windows.Forms.ButtonBase.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> в производном классе, не забудьте вызвать базовый класс <see cref="M:System.Windows.Forms.ButtonBase.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-292">
              <para>When overriding <see cref="M:System.Windows.Forms.ButtonBase.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ButtonBase.OnMouseMove(System.Windows.Forms.MouseEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMouseUp">
      <MemberSignature Language="C#" Value="protected override void OnMouseUp (System.Windows.Forms.MouseEventArgs mevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMouseUp(class System.Windows.Forms.MouseEventArgs mevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMouseUp (mevent As MouseEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMouseUp(System::Windows::Forms::MouseEventArgs ^ mevent);" />
      <MemberSignature Language="F#" Value="override this.OnMouseUp : System.Windows.Forms.MouseEventArgs -&gt; unit" Usage="buttonBase.OnMouseUp mevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mevent" Type="System.Windows.Forms.MouseEventArgs" />
      </Parameters>
      <Docs>
        <param name="mevent">
          <span data-ttu-id="e0cd8-293">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-293">A <see cref="T:System.Windows.Forms.MouseEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e0cd8-294">Raises the <see cref="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-294">Raises the <see cref="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0cd8-295">При возникновении события через делегат вызывается обработчик события.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-295">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="e0cd8-296">Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="e0cd8-296">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="e0cd8-297">Метод <xref:System.Windows.Forms.ButtonBase.OnMouseUp%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-297">The <xref:System.Windows.Forms.ButtonBase.OnMouseUp%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="e0cd8-298">Это предпочтительная методика обработки событий в производном классе.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-298">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="e0cd8-299">
            <para>При переопределении метода <see cref="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> в производном классе, не забудьте вызвать базовый класс <see cref="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-299">
              <para>When overriding <see cref="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ButtonBase.OnMouseUp(System.Windows.Forms.MouseEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Forms.ButtonBase.OnMouseDown(System.Windows.Forms.MouseEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnPaint">
      <MemberSignature Language="C#" Value="protected override void OnPaint (System.Windows.Forms.PaintEventArgs pevent);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPaint(class System.Windows.Forms.PaintEventArgs pevent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonBase.OnPaint(System.Windows.Forms.PaintEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPaint (pevent As PaintEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPaint(System::Windows::Forms::PaintEventArgs ^ pevent);" />
      <MemberSignature Language="F#" Value="override this.OnPaint : System.Windows.Forms.PaintEventArgs -&gt; unit" Usage="buttonBase.OnPaint pevent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="pevent" Type="System.Windows.Forms.PaintEventArgs" />
      </Parameters>
      <Docs>
        <param name="pevent">
          <span data-ttu-id="e0cd8-300">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-300">A <see cref="T:System.Windows.Forms.PaintEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e0cd8-301">Raises the <see cref="M:System.Windows.Forms.ButtonBase.OnPaint(System.Windows.Forms.PaintEventArgs)" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-301">Raises the <see cref="M:System.Windows.Forms.ButtonBase.OnPaint(System.Windows.Forms.PaintEventArgs)" /> event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0cd8-302">При возникновении события через делегат вызывается обработчик события.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-302">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="e0cd8-303">Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).</span><span class="sxs-lookup"><span data-stu-id="e0cd8-303">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="e0cd8-304">Метод <xref:System.Windows.Forms.ButtonBase.OnPaint%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-304">The <xref:System.Windows.Forms.ButtonBase.OnPaint%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="e0cd8-305">Это предпочтительная методика обработки событий в производном классе.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-305">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="e0cd8-306">
            <para>При переопределении метода <see cref="M:System.Windows.Forms.ButtonBase.OnPaint(System.Windows.Forms.PaintEventArgs)" /> в производном классе, не забудьте вызвать базовый класс <see cref="M:System.Windows.Forms.ButtonBase.OnPaint(System.Windows.Forms.PaintEventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-306">
              <para>When overriding <see cref="M:System.Windows.Forms.ButtonBase.OnPaint(System.Windows.Forms.PaintEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Windows.Forms.ButtonBase.OnPaint(System.Windows.Forms.PaintEventArgs)" /> method so that registered delegates receive the event.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnParentChanged">
      <MemberSignature Language="C#" Value="protected override void OnParentChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnParentChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonBase.OnParentChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnParentChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnParentChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnParentChanged : EventArgs -&gt; unit" Usage="buttonBase.OnParentChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e0cd8-307">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-307">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e0cd8-308">Raises the <see cref="E:System.Windows.Forms.Control.ParentChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-308">Raises the <see cref="E:System.Windows.Forms.Control.ParentChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnParentChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnTextChanged">
      <MemberSignature Language="C#" Value="protected override void OnTextChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnTextChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonBase.OnTextChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnTextChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnTextChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnTextChanged : EventArgs -&gt; unit" Usage="buttonBase.OnTextChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e0cd8-309">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-309">An <see cref="T:System.EventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e0cd8-310">Raises the <see cref="E:System.Windows.Forms.Control.TextChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-310">Raises the <see cref="E:System.Windows.Forms.Control.TextChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnTextChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnVisibleChanged">
      <MemberSignature Language="C#" Value="protected override void OnVisibleChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnVisibleChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonBase.OnVisibleChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnVisibleChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnVisibleChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnVisibleChanged : EventArgs -&gt; unit" Usage="buttonBase.OnVisibleChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="e0cd8-311">An <see cref="T:System.EventArgs" /> object that contains the event data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-311">An <see cref="T:System.EventArgs" /> object that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e0cd8-312">Raises the <see cref="E:System.Windows.Forms.Control.VisibleChanged" /> event.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-312">Raises the <see cref="E:System.Windows.Forms.Control.VisibleChanged" /> event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ResetFlagsandPaint">
      <MemberSignature Language="C#" Value="protected void ResetFlagsandPaint ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ResetFlagsandPaint() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonBase.ResetFlagsandPaint" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ResetFlagsandPaint ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ResetFlagsandPaint();" />
      <MemberSignature Language="F#" Value="member this.ResetFlagsandPaint : unit -&gt; unit" Usage="buttonBase.ResetFlagsandPaint " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e0cd8-313">Resets the <see cref="T:System.Windows.Forms.Button" /> control to the state before it is pressed and redraws it.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-313">Resets the <see cref="T:System.Windows.Forms.Button" /> control to the state before it is pressed and redraws it.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public override string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonBase.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Text : string with get, set" Usage="System.Windows.Forms.ButtonBase.Text" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.ComponentModel.Design.MultilineStringEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.SettingsBindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0cd8-314">Gets or sets the text associated with this control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-314">Gets or sets the text associated with this control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0cd8-315">Текст, связанный с этим элементом управления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-315">The text associated with this control.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Forms.Control.Text" />
      </Docs>
    </Member>
    <Member MemberName="TextAlign">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.ContentAlignment TextAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.ContentAlignment TextAlign" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonBase.TextAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TextAlign As ContentAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::ContentAlignment TextAlign { System::Drawing::ContentAlignment get(); void set(System::Drawing::ContentAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.TextAlign : System.Drawing.ContentAlignment with get, set" Usage="System.Windows.Forms.ButtonBase.TextAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.ContentAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0cd8-316">Gets or sets the alignment of the text on the button control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-316">Gets or sets the alignment of the text on the button control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0cd8-317">Одно из значений перечисления <see cref="T:System.Drawing.ContentAlignment" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-317">One of the <see cref="T:System.Drawing.ContentAlignment" /> values.</span>
          </span>
          <span data-ttu-id="e0cd8-318">Значение по умолчанию — <see langword="MiddleCenter" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-318">The default is <see langword="MiddleCenter" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e0cd8-319">В следующем примере кода используется производный класс <xref:System.Windows.Forms.Button> и задаются некоторые его основные свойства.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-319">The following code example uses the derived class, <xref:System.Windows.Forms.Button> and sets some of its common properties.</span></span> <span data-ttu-id="e0cd8-320">Результатом будет плоскую кнопку с текстом в левой части и изображение справа.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-320">The result will be a flat button with text on the left and an image on the right.</span></span> <span data-ttu-id="e0cd8-321">Этот код требует наличия растровое изображение с именем `MyBitMap.bmp` хранятся в `C:\Graphics` directory и ссылку на <xref:System.Drawing?displayProperty=nameWithType> пространство имен.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-321">This code requires that you have a bitmap image named `MyBitMap.bmp` stored in the `C:\Graphics` directory, and that a reference to the <xref:System.Drawing?displayProperty=nameWithType> namespace is included.</span></span>  
  
 [!code-cpp[Classic ButtonBase.FlatStyle Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ButtonBase.FlatStyle Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ButtonBase.FlatStyle Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ButtonBase.FlatStyle Example/CS/source.cs#1)]
 [!code-vb[Classic ButtonBase.FlatStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ButtonBase.FlatStyle Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="e0cd8-322">The value assigned is not one of the <see cref="T:System.Drawing.ContentAlignment" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-322">The value assigned is not one of the <see cref="T:System.Drawing.ContentAlignment" /> values.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.ButtonBase.ImageAlign" />
      </Docs>
    </Member>
    <Member MemberName="TextImageRelation">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.TextImageRelation TextImageRelation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.TextImageRelation TextImageRelation" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonBase.TextImageRelation" />
      <MemberSignature Language="VB.NET" Value="Public Property TextImageRelation As TextImageRelation" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::TextImageRelation TextImageRelation { System::Windows::Forms::TextImageRelation get(); void set(System::Windows::Forms::TextImageRelation value); };" />
      <MemberSignature Language="F#" Value="member this.TextImageRelation : System.Windows.Forms.TextImageRelation with get, set" Usage="System.Windows.Forms.ButtonBase.TextImageRelation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.TextImageRelation</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0cd8-323">Gets or sets the position of text and image relative to each other.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-323">Gets or sets the position of text and image relative to each other.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0cd8-324">Одно из значений <see cref="T:System.Windows.Forms.TextImageRelation" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-324">One of the values of <see cref="T:System.Windows.Forms.TextImageRelation" />.</span>
          </span>
          <span data-ttu-id="e0cd8-325">Значение по умолчанию — <see cref="F:System.Windows.Forms.TextImageRelation.Overlay" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-325">The default is <see cref="F:System.Windows.Forms.TextImageRelation.Overlay" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="e0cd8-326">The value is not one of the <see cref="T:System.Windows.Forms.TextImageRelation" /> values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-326">The value is not one of the <see cref="T:System.Windows.Forms.TextImageRelation" /> values.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="UseCompatibleTextRendering">
      <MemberSignature Language="C#" Value="public bool UseCompatibleTextRendering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCompatibleTextRendering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonBase.UseCompatibleTextRendering" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCompatibleTextRendering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseCompatibleTextRendering { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseCompatibleTextRendering : bool with get, set" Usage="System.Windows.Forms.ButtonBase.UseCompatibleTextRendering" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0cd8-327">Gets or sets a value that determines whether to use the <see cref="T:System.Drawing.Graphics" /> class ([!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]) or the <see cref="T:System.Windows.Forms.TextRenderer" /> class ([!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]) to render text.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-327">Gets or sets a value that determines whether to use the <see cref="T:System.Drawing.Graphics" /> class ([!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]) or the <see cref="T:System.Windows.Forms.TextRenderer" /> class ([!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]) to render text.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0cd8-328">
            <see langword="true" /> Если <see cref="T:System.Drawing.Graphics" /> класс следует использовать для отрисовки текста для совместимости с версиями 1.0 и 1.1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-328">
              <see langword="true" /> if the <see cref="T:System.Drawing.Graphics" /> class should be used to perform text rendering for compatibility with versions 1.0 and 1.1.</span>
          </span>
          <span data-ttu-id="e0cd8-329">платформы .NET Framework; в противном случае <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-329">of the .NET Framework; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e0cd8-330">Значение по умолчанию — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-330">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0cd8-331">`UseCompatibleTextRendering` Свойство предназначено для предоставления visual совместимости между элементами управления Windows Forms, в этой визуализации текста с помощью <xref:System.Windows.Forms.TextRenderer> класс и [!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)] и [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)] приложений, которые выполняют отрисовку пользовательского текста, с помощью <xref:System.Drawing.Graphics>класса.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-331">The `UseCompatibleTextRendering` property is intended to provide visual compatibility between Windows Forms controls that render text using the <xref:System.Windows.Forms.TextRenderer> class and [!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)] and [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)] applications that perform custom text rendering using the <xref:System.Drawing.Graphics> class.</span></span> <span data-ttu-id="e0cd8-332">В большинстве случаев, если приложение не обновляется из [!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)] или [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)], рекомендуется оставить установленным `UseCompatibleTextRendering` присвоено значение по умолчанию `false`.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-332">In most cases, if your application is not being upgraded from [!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)] or [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)], it is recommended that you leave `UseCompatibleTextRendering` set to the default value of `false`.</span></span>  
  
 <span data-ttu-id="e0cd8-333">[!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] Основе <xref:System.Windows.Forms.TextRenderer> класс впервые появился в [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] для повышения производительности, как сделать текст поиска лучше и улучшить поддержку международных шрифтов.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-333">The [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] based <xref:System.Windows.Forms.TextRenderer> class was introduced in the [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] to improve performance, make text look better, and improve support for international fonts.</span></span> <span data-ttu-id="e0cd8-334">В более ранних версиях [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] основе <xref:System.Drawing.Graphics> класс был использован для выполнения всех отрисовки текста.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-334">In earlier versions of the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], the [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] based <xref:System.Drawing.Graphics> class was used to perform all text rendering.</span></span> [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]<span data-ttu-id="e0cd8-335"> вычисляет интервал и переноса строк по-разному из [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)].</span><span class="sxs-lookup"><span data-stu-id="e0cd8-335"> calculates character spacing and word wrapping differently from [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)].</span></span> <span data-ttu-id="e0cd8-336">В приложении Windows Forms, использующего <xref:System.Drawing.Graphics> класса для вывода текста, это может привести к текст для элементов управления, использующих <xref:System.Windows.Forms.TextRenderer> отображаться отличается от другого текста в приложении.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-336">In a Windows Forms application that uses the <xref:System.Drawing.Graphics> class to render text, this could cause the text for controls that use <xref:System.Windows.Forms.TextRenderer> to appear different from the other text in the application.</span></span> <span data-ttu-id="e0cd8-337">Чтобы устранить проблему несовместимости, можно задать `UseCompatibleTextRendering` свойства `true` для конкретного элемента управления.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-337">To resolve this incompatibility, you can set the `UseCompatibleTextRendering` property to `true` for a specific control.</span></span> <span data-ttu-id="e0cd8-338">Чтобы задать `UseCompatibleTextRendering` для `true` для всех элементов управления в приложении, вызовите <xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A?displayProperty=nameWithType> метод с параметром `true`.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-338">To set `UseCompatibleTextRendering` to `true` for all supported controls in the application, call the <xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A?displayProperty=nameWithType> method with a parameter of `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)" />
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering" />
      </Docs>
    </Member>
    <Member MemberName="UseMnemonic">
      <MemberSignature Language="C#" Value="public bool UseMnemonic { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseMnemonic" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonBase.UseMnemonic" />
      <MemberSignature Language="VB.NET" Value="Public Property UseMnemonic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseMnemonic { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseMnemonic : bool with get, set" Usage="System.Windows.Forms.ButtonBase.UseMnemonic" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0cd8-339">Gets or sets a value indicating whether the first character that is preceded by an ampersand (&amp;) is used as the mnemonic key of the control.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-339">Gets or sets a value indicating whether the first character that is preceded by an ampersand (&amp;) is used as the mnemonic key of the control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0cd8-340">
            <see langword="true" /> Если первый символ, который предшествует знак амперсанда (&amp;) используется как назначенная клавиша элемента управления; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-340">
              <see langword="true" /> if the first character that is preceded by an ampersand (&amp;) is used as the mnemonic key of the control; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e0cd8-341">Значение по умолчанию — <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-341">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseVisualStyleBackColor">
      <MemberSignature Language="C#" Value="public bool UseVisualStyleBackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseVisualStyleBackColor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ButtonBase.UseVisualStyleBackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property UseVisualStyleBackColor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseVisualStyleBackColor { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseVisualStyleBackColor : bool with get, set" Usage="System.Windows.Forms.ButtonBase.UseVisualStyleBackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0cd8-342">Gets or sets a value that determines if the background is drawn using visual styles, if supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-342">Gets or sets a value that determines if the background is drawn using visual styles, if supported.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0cd8-343">
            <see langword="true" /> Если фон должен рисоваться с использованием стилей оформления; в противном случае <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-343">
              <see langword="true" /> if the background is drawn using visual styles; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0cd8-344">Визуальные стили являются спецификации для внешнего вида элементов управления.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-344">Visual styles are specifications for the appearance of controls.</span></span> <span data-ttu-id="e0cd8-345">Например стили оформления можно определить цвет, размер и шрифт элементов управления, и они позволяют настраивать визуальный интерфейс для координации с интерфейсом приложения.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-345">For example, visual styles can define the color, size, and font of controls, and they enable you to configure the visual interface to coordinate with your application interface.</span></span> <span data-ttu-id="e0cd8-346">Кроме того они предоставляют механизм для всех приложений на основе Windows для применения стилей оформления.</span><span class="sxs-lookup"><span data-stu-id="e0cd8-346">Additionally, they provide a mechanism for all Windows-based applications to have visual styles applied.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ButtonBase.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="override this.WndProc :  -&gt; unit" Usage="buttonBase.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="e0cd8-347">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-347">The Windows <see cref="T:System.Windows.Forms.Message" /> to process.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e0cd8-348">Processes Windows messages.</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0cd8-348">Processes Windows messages.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
  </Members>
</Type>