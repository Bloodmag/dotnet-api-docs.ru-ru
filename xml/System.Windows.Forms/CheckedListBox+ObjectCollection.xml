<Type Name="CheckedListBox+ObjectCollection" FullName="System.Windows.Forms.CheckedListBox+ObjectCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e8a66691b63db60515bf8b4d13612cf911210989" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30637978" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CheckedListBox.ObjectCollection : System.Windows.Forms.ListBox.ObjectCollection" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit CheckedListBox/ObjectCollection extends System.Windows.Forms.ListBox/ObjectCollection" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.CheckedListBox.ObjectCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class CheckedListBox.ObjectCollection&#xA;Inherits ListBox.ObjectCollection" />
  <TypeSignature Language="C++ CLI" Value="public: ref class CheckedListBox::ObjectCollection : System::Windows::Forms::ListBox::ObjectCollection" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ListBox+ObjectCollection</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет коллекцию позиций элемента управления <see cref="T:System.Windows.Forms.CheckedListBox" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Доступ к коллекции из родительского элемента управления <xref:System.Windows.Forms.CheckedListBox>, по <xref:System.Windows.Forms.CheckedListBox.Items%2A> свойство. Чтобы создать коллекцию объектов для отображения в <xref:System.Windows.Forms.CheckedListBox> управления, можно добавить или удалить элементы по отдельности с помощью <xref:System.Windows.Forms.CheckedListBox.ObjectCollection.Add%2A> и <xref:System.Windows.Forms.ListBox.ObjectCollection.Remove%2A> методы.  
  
   
  
## Examples  
 В следующем примере перечисляются элементы в <xref:System.Windows.Forms.CheckedListBox> и проверяет каждый элемент в списке. В примере показано использование <xref:System.Windows.Forms.CheckedListBox.Items%2A> свойства <xref:System.Windows.Forms.CheckedListBox.ObjectCollection> для получения <xref:System.Windows.Forms.ListBox.ObjectCollection.Count%2A> элементов.  
  
 В примере также демонстрируется использование <xref:System.Windows.Forms.CheckedListBox.SetItemCheckState%2A> и <xref:System.Windows.Forms.CheckedListBox.SetItemChecked%2A> методы для установки состояния флажка элемента. Для каждого элемента, который требуется проверить <xref:System.Windows.Forms.CheckedListBox.SetItemCheckState%2A> вызывается для задания <xref:System.Windows.Forms.CheckState> для `Indeterminate`, пока <xref:System.Windows.Forms.CheckedListBox.SetItemChecked%2A> вызывается для других элементов, чтобы задать состояния флажка `Checked`.  
  
 [!code-cpp[CheckedListBox#3](~/samples/snippets/cpp/VS_Snippets_Winforms/CheckedListBox/CPP/source.cpp#3)]
 [!code-csharp[CheckedListBox#3](~/samples/snippets/csharp/VS_Snippets_Winforms/CheckedListBox/CS/source.cs#3)]
 [!code-vb[CheckedListBox#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CheckedListBox/VB/source.vb#3)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectCollection (System.Windows.Forms.CheckedListBox owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.CheckedListBox owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.ObjectCollection.#ctor(System.Windows.Forms.CheckedListBox)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As CheckedListBox)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectCollection(System::Windows::Forms::CheckedListBox ^ owner);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.CheckedListBox" />
      </Parameters>
      <Docs>
        <param name="owner">Объект <see cref="T:System.Windows.Forms.CheckedListBox" />, которому принадлежит данная коллекция.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.CheckedListBox.ObjectCollection" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Добавляет элемент в список позиций <see cref="T:System.Windows.Forms.CheckedListBox" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (object item, bool isChecked);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(object item, bool isChecked) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.ObjectCollection.Add(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (item As Object, isChecked As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Object ^ item, bool isChecked);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="isChecked" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="item">Объект, представляющий элемент для добавления в коллекцию.</param>
        <param name="isChecked">
          Значение <see langword="true" /> для проверки элемента; в противном случае — <see langword="false" />.</param>
        <summary>Добавляет элемент в список элементов для <see cref="T:System.Windows.Forms.CheckedListBox" />, указывая объект для добавления и наличие у него отметки.</summary>
        <returns>Индекс только что добавленного элемента.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод добавляет элемент в список. Список элемент добавляется в конец существующего списка элементов. Для поля отсортированного списка отмеченных элемент вставляется в списке нарушить порядок. Объект `SystemException` возникает, если недостаточно места для хранения нового элемента.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется инициализация <xref:System.Windows.Forms.CheckedListBox> управления <xref:System.Windows.Forms.CheckedListBox.CheckOnClick%2A>, <xref:System.Windows.Forms.CheckedListBox.SelectionMode%2A>, и <xref:System.Windows.Forms.CheckedListBox.ThreeDCheckBoxes%2A> свойства. В примере происходит заполнение <xref:System.Windows.Forms.CheckedListBox> с элементами управления и наборы <xref:System.Windows.Forms.CheckedListBox.DisplayMember%2A> для <xref:System.Windows.Forms.Control.Name%2A?displayProperty=nameWithType> свойства элемента управления.  
  
 Чтобы запустить пример, вставьте следующий код в форму, содержащую <xref:System.Windows.Forms.CheckedListBox> с именем CheckedListBox1 и вызовите `InitializeCheckListBox` метод из конструктора формы или `Load` метод.  
  
 [!code-cpp[System.Windows.Forms.PropertyGridExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.PropertyGridExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.PropertyGridExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (object item, System.Windows.Forms.CheckState check);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(object item, valuetype System.Windows.Forms.CheckState check) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.ObjectCollection.Add(System.Object,System.Windows.Forms.CheckState)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (item As Object, check As CheckState) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Object ^ item, System::Windows::Forms::CheckState check);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
        <Parameter Name="check" Type="System.Windows.Forms.CheckState" />
      </Parameters>
      <Docs>
        <param name="item">Объект, представляющий элемент для добавления в коллекцию.</param>
        <param name="check">Начальное состояние <see cref="T:System.Windows.Forms.CheckState" /> для отмеченной части элемента.</param>
        <summary>Добавляет элемент в список элементов для <see cref="T:System.Windows.Forms.CheckedListBox" />, указывая объект для добавления и начальное отмеченное значение.</summary>
        <returns>Индекс только что добавленного элемента.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод добавляет элемент в установленном списке. Для поля неотсортированного списка отмеченных элемент добавляется в конец существующего списка элементов. Для поля отсортированного списка отмеченных элемент вставляется в списке нарушить порядок. Объект `SystemException` возникает, если недостаточно места для хранения нового элемента.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Параметр <paramref name="check" /> не является допустимым значением состояния <see cref="T:System.Windows.Forms.CheckState" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>