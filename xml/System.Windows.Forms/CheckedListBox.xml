<Type Name="CheckedListBox" FullName="System.Windows.Forms.CheckedListBox">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d2ba0042838fdb654d01656bb60fa077b0072088" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30641508" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CheckedListBox : System.Windows.Forms.ListBox" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi CheckedListBox extends System.Windows.Forms.ListBox" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.CheckedListBox" />
  <TypeSignature Language="VB.NET" Value="Public Class CheckedListBox&#xA;Inherits ListBox" />
  <TypeSignature Language="C++ CLI" Value="public ref class CheckedListBox : System::Windows::Forms::ListBox" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.ListBox</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.LookupBindingProperties</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ClassInterface</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Отображает объект <see cref="T:System.Windows.Forms.ListBox" />, в котором флажок отображается слева от каждого элемента.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот элемент управления представляет список элементов, которые пользователь может перейти с помощью клавиатуры или полоса прокрутки в правой части элемента управления. Пользователя можно установить флажок на один или несколько элементов и отмеченных элементов может быть проведена с <xref:System.Windows.Forms.CheckedListBox.CheckedItemCollection> и <xref:System.Windows.Forms.CheckedListBox.CheckedIndexCollection>.  
  
 Чтобы добавить объекты в список во время выполнения, назначьте массив ссылок на объекты с <xref:System.Windows.Forms.ListBox.ObjectCollection.AddRange%2A> метод. Затем в списке отображаются строковое значение по умолчанию для каждого объекта. Отдельные элементы можно добавить в список с <xref:System.Windows.Forms.CheckedListBox.ObjectCollection.Add%2A> метод.  
  
 <xref:System.Windows.Forms.CheckedListBox> Объект поддерживает три состояния <xref:System.Windows.Forms.CheckState> перечисления: <xref:System.Windows.Forms.CheckState.Checked>, <xref:System.Windows.Forms.CheckState.Indeterminate>, и <xref:System.Windows.Forms.CheckState.Unchecked>. Необходимо задать для состояния <xref:System.Windows.Forms.CheckState.Indeterminate> в коде, так как интерфейс пользователя для <xref:System.Windows.Forms.CheckedListBox> не предоставляет механизм для этого.  
  
 Если <xref:System.Windows.Forms.ListBox.UseTabStops%2A> — `true`, <xref:System.Windows.Forms.CheckedListBox> распознает и знаки табуляции в элемент текста, создания столбцов. Эти позиции табуляции заданы и не может быть изменено. Чтобы использовать табуляции, задайте <xref:System.Windows.Forms.ListBox.UseTabStops%2A> для `false`, задайте <xref:System.Windows.Forms.ListBox.UseCustomTabOffsets%2A> для `true`и добавлении пользовательских значений для <xref:System.Windows.Forms.ListBox.CustomTabOffsets%2A> коллекции.  
  
> [!NOTE]
>  Если <xref:System.Windows.Forms.CheckedListBox.UseCompatibleTextRendering%2A> свойство `false`, <xref:System.Windows.Forms.ListBox.CustomTabOffsets%2A> свойство будет пропущен и заменены смещения вкладка "Стандартные".  
  
 <xref:System.Windows.Forms.CheckedListBox> Класс поддерживает три следующие индексированные коллекции:  
  
|Коллекция|Класс, инкапсулирующий|  
|----------------|-------------------------|  
|Все элементы, содержащиеся в <xref:System.Windows.Forms.CheckedListBox> элемента управления.|<xref:System.Windows.Forms.CheckedListBox.ObjectCollection>|  
|Помеченных элементов (включая элементы в неопределенном состоянии), который подмножество элементов содержится в <xref:System.Windows.Forms.CheckedListBox> элемента управления.|<xref:System.Windows.Forms.CheckedListBox.CheckedItemCollection>|  
|Проверка индексов, которая является подмножеством индексов в коллекции элементов. Эти индексы указывают элементы в отмеченном или неопределенном состоянии.|<xref:System.Windows.Forms.CheckedListBox.CheckedIndexCollection>|  
  
 Три следующие таблицы являются примерами трех индексированных коллекций, <xref:System.Windows.Forms.CheckedListBox> поддерживает класс.  
  
 Первая таблица содержит пример индексированной коллекции элементов в элементе управления (все элементы, содержащиеся в элементе управления).  
  
|Индекс|Элемент|Проверка состояния|  
|-----------|----------|-----------------|  
|0|Объект 1|<xref:System.Windows.Forms.CheckState.Unchecked>|  
|1|объект 2|<xref:System.Windows.Forms.CheckState.Checked>|  
|2|объект 3|<xref:System.Windows.Forms.CheckState.Unchecked>|  
|3|Объект 4|<xref:System.Windows.Forms.CheckState.Indeterminate>|  
|4|Объект 5|<xref:System.Windows.Forms.CheckState.Checked>|  
  
 Второй пример индексированной коллекции отмеченных элементов.  
  
|Индекс|Элемент|  
|-----------|----------|  
|0|объект 2|  
|1|Объект 4|  
|2|Объект 5|  
  
 Третья таблица пример индексированной коллекции индексов помеченных элементов.  
  
|Индекс|Индекс элемента|  
|-----------|-------------------|  
|0|1|  
|1|3|  
|2|4|  
  
   
  
## Examples  
 В следующем примере показано, как можно использовать методы, свойства и коллекции <xref:System.Windows.Forms.CheckedListBox>. Это полный пример, готовый для выполнения после копирования его в проект. Проверьте и снимите флажки элементов, использовать для добавления элементов текстовое поле и после нажатия сохранения кнопку, очистите отмеченных элементов.  
  
 [!code-cpp[Classic CheckedListBox Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic CheckedListBox Example/CPP/source.cpp#1)]
 [!code-csharp[Classic CheckedListBox Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic CheckedListBox Example/CS/source.cs#1)]
 [!code-vb[Classic CheckedListBox Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic CheckedListBox Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListBox" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CheckedListBox ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CheckedListBox();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.CheckedListBox" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию <xref:System.Windows.Forms.CheckedListBox> использует <xref:System.Windows.Forms.Control.SetStyle%2A> и `ResizeRedraw` значение <xref:System.Windows.Forms.ControlStyles> для указания, что элемент управления перерисовывается при изменении размеров.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckedIndices">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.CheckedListBox.CheckedIndexCollection CheckedIndices { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CheckedListBox/CheckedIndexCollection CheckedIndices" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckedListBox.CheckedIndices" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckedIndices As CheckedListBox.CheckedIndexCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::CheckedListBox::CheckedIndexCollection ^ CheckedIndices { System::Windows::Forms::CheckedListBox::CheckedIndexCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CheckedListBox+CheckedIndexCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Коллекция отмеченных индексов в данном элементе управления <see cref="T:System.Windows.Forms.CheckedListBox" />.</summary>
        <value>Коллекция <see cref="T:System.Windows.Forms.CheckedListBox.CheckedIndexCollection" /> для объекта <see cref="T:System.Windows.Forms.CheckedListBox" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Коллекция отмеченных индексов является подмножеством индексов в коллекции всех элементов в <xref:System.Windows.Forms.CheckedListBox> элемента управления. Эти индексы указывают элементы в отмеченном или неопределенном состоянии.  
  
   
  
## Examples  
 В следующем примере перечисляются отмеченных элементов в <xref:System.Windows.Forms.CheckedListBox.CheckedIndexCollection> чтобы увидеть, что Проверьте состояние элемента. В примере показано использование <xref:System.Windows.Forms.CheckedListBox.CheckedIndices%2A> свойства <xref:System.Windows.Forms.CheckedListBox.CheckedIndexCollection>и <xref:System.Windows.Forms.CheckedListBox.CheckedItems%2A> свойства <xref:System.Windows.Forms.CheckedListBox.CheckedItemCollection>.  
  
 В первом цикле используется <xref:System.Windows.Forms.CheckedListBox.GetItemCheckState%2A> метода <xref:System.Windows.Forms.CheckState> каждого проверенного элемента с заданным индексом элемента. Во втором цикле также использует <xref:System.Windows.Forms.CheckedListBox.GetItemCheckState%2A>, но использует <xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A?displayProperty=nameWithType> метод для извлечения индекса элемента.  
  
 [!code-cpp[CheckedListBox#2](~/samples/snippets/cpp/VS_Snippets_Winforms/CheckedListBox/CPP/source.cpp#2)]
 [!code-csharp[CheckedListBox#2](~/samples/snippets/csharp/VS_Snippets_Winforms/CheckedListBox/CS/source.cs#2)]
 [!code-vb[CheckedListBox#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CheckedListBox/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.CheckedListBox.CheckedIndexCollection" />
      </Docs>
    </Member>
    <Member MemberName="CheckedItems">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.CheckedListBox.CheckedItemCollection CheckedItems { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CheckedListBox/CheckedItemCollection CheckedItems" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckedListBox.CheckedItems" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckedItems As CheckedListBox.CheckedItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::CheckedListBox::CheckedItemCollection ^ CheckedItems { System::Windows::Forms::CheckedListBox::CheckedItemCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CheckedListBox+CheckedItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Коллекция отмеченных элементов в данном элементе управления <see cref="T:System.Windows.Forms.CheckedListBox" />.</summary>
        <value>Коллекция <see cref="T:System.Windows.Forms.CheckedListBox.CheckedItemCollection" /> для объекта <see cref="T:System.Windows.Forms.CheckedListBox" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Коллекции — это подмножество объектов в <xref:System.Windows.Forms.CheckedListBox.Items%2A> набор, представляющий только те элементы, <xref:System.Windows.Forms.CheckState?displayProperty=nameWithType> — `Checked` или `Indeterminate`. Индексы в этой коллекции, в порядке возрастания.  
  
   
  
## Examples  
 В следующем примере перечисляются отмеченных элементов в <xref:System.Windows.Forms.CheckedListBox.CheckedIndexCollection> чтобы увидеть, что Проверьте состояние элемента. В примере показано использование <xref:System.Windows.Forms.CheckedListBox.CheckedIndices%2A> свойства <xref:System.Windows.Forms.CheckedListBox.CheckedIndexCollection>и <xref:System.Windows.Forms.CheckedListBox.CheckedItems%2A> свойства <xref:System.Windows.Forms.CheckedListBox.CheckedItemCollection>.  
  
 В первом цикле используется <xref:System.Windows.Forms.CheckedListBox.GetItemCheckState%2A> метода <xref:System.Windows.Forms.CheckState> каждого проверенного элемента с заданным индексом элемента. Во втором цикле также использует <xref:System.Windows.Forms.CheckedListBox.GetItemCheckState%2A>, но использует <xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A?displayProperty=nameWithType> метод для извлечения индекса элемента.  
  
 Чтобы выполнить этот пример, выполните следующие действия.  
  
1.  Создайте новое приложение Windows Forms.  
  
2.  Добавить <xref:System.Windows.Forms.CheckedListBox> и <xref:System.Windows.Forms.Button> в форму.  
  
3.  Имя создаваемой кнопки `WhatIsChecked`, добавьте обработчик для его <xref:System.Windows.Forms.Control.Click> событий и скопируйте в коде из тела следующий обработчик.  
  
4.  Добавьте несколько элементов для <xref:System.Windows.Forms.CheckedListBox>.  
  
5.  Запустите пример и отметьте некоторые флажки в окне списка.  
  
6.  Нажмите кнопку.  
  
     Вы увидите ряд окон сообщений, указывающие, какие элементы были отмечены.  
  
 [!code-cpp[CheckedListBox#2](~/samples/snippets/cpp/VS_Snippets_Winforms/CheckedListBox/CPP/source.cpp#2)]
 [!code-csharp[CheckedListBox#2](~/samples/snippets/csharp/VS_Snippets_Winforms/CheckedListBox/CS/source.cs#2)]
 [!code-vb[CheckedListBox#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CheckedListBox/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.CheckedListBox.CheckedItemCollection" />
      </Docs>
    </Member>
    <Member MemberName="CheckOnClick">
      <MemberSignature Language="C#" Value="public bool CheckOnClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckOnClick" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckedListBox.CheckOnClick" />
      <MemberSignature Language="VB.NET" Value="Public Property CheckOnClick As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckOnClick { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, должен ли переключаться флажок при выборе элемента.</summary>
        <value>
          Значение <see langword="true" />, если галочка устанавливается немедленно; в противном случае — значение <see langword="false" />. Значение по умолчанию: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.CheckedListBox.CheckOnClick%2A> Указывает, должен ли переключаться флажок всякий раз, когда элемент выбран. Поведение по умолчанию является изменение выбора при первом щелчке, а затем пользователь должен щелкнуть еще раз, чтобы применить флажок. В некоторых случаях, тем не менее, может потребоваться, у элемента посредством сразу после нажатия.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется инициализация <xref:System.Windows.Forms.CheckedListBox> управления <xref:System.Windows.Forms.CheckedListBox.CheckOnClick%2A>, <xref:System.Windows.Forms.CheckedListBox.SelectionMode%2A>, и <xref:System.Windows.Forms.CheckedListBox.ThreeDCheckBoxes%2A> свойства. В примере происходит заполнение <xref:System.Windows.Forms.CheckedListBox> с элементами управления и наборы <xref:System.Windows.Forms.CheckedListBox.DisplayMember%2A> для <xref:System.Windows.Forms.Control.Name%2A?displayProperty=nameWithType> свойства элемента управления.  
  
 Чтобы запустить пример, вставьте следующий код в форму, содержащую <xref:System.Windows.Forms.CheckedListBox> с именем `CheckedListBox1` и вызвать `InitializeCheckListBox` метод из конструктора формы или метода Load.  
  
 [!code-cpp[System.Windows.Forms.PropertyGridExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.PropertyGridExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.PropertyGridExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckedListBox.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Click;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при нажатии элемента управления <see cref="T:System.Windows.Forms.CheckedListBox" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.CheckedListBox.Click> Событие передает <xref:System.EventArgs> обработчику событий, поэтому он только указывает щелчка. Если требуется более конкретные сведения о мыши (например, кнопка количество щелчков, повороте колесика или расположения) использовать <xref:System.Windows.Forms.Control.MouseDown> и <xref:System.Windows.Forms.Control.MouseUp> события, которые передают <xref:System.Windows.Forms.MouseEventArgs> обработчику событий.  
  
 Двойной щелчок определяется настройками мыши в операционной системе пользователя. Пользователь может изменять количество времени, которое может пройти между щелчками двойным щелчком кнопки мыши. <xref:System.Windows.Forms.CheckedListBox.Click> Событие вызывается каждый раз, когда пользователь дважды щелкает элемент управления. Например, если у вас есть методы обработки событий для <xref:System.Windows.Forms.CheckedListBox.Click> и <xref:System.Windows.Forms.Control.DoubleClick> события формы, события вызываются при двойном щелчке формы и вызове обоих методов обработки событий. Если пользователь дважды щелкает элемент управления, который не поддерживает <xref:System.Windows.Forms.Control.DoubleClick> событий, <xref:System.Windows.Forms.CheckedListBox.Click> событие может быть вызвано дважды.  
  
   
  
## Examples  
 В следующем примере кода показано применение этого элемента. В примере обработчик событий сообщает при наступлении <xref:System.Windows.Forms.CheckedListBox.Click> событий. Этот отчет позволяет выяснить, когда произошло событие и может оказаться полезным при отладке. Отчет по несколько событий или события, которые происходят часто, рассмотрите возможность замены <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> с <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> или добавление сообщения в многострочном <xref:System.Windows.Forms.TextBox>.  
  
 Чтобы запустить пример кода, вставьте его в проект, который содержит экземпляр типа <xref:System.Windows.Forms.CheckedListBox> с именем `CheckedListBox1`. Убедитесь, что обработчик событий связан с <xref:System.Windows.Forms.CheckedListBox.Click> событий.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#157](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#157)]
 [!code-vb[System.Windows.Forms.EventExamples#157](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#157)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateAccessibilityInstance">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.AccessibleObject CreateAccessibilityInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.CreateAccessibilityInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateAccessibilityInstance () As AccessibleObject" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::AccessibleObject ^ CreateAccessibilityInstance();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.AccessibleObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает для элемента управления <see cref="T:System.Windows.Forms.CheckedListBox" /> новый объект с поддержкой специальных возможностей.</summary>
        <returns>Новый объект <see cref="T:System.Windows.Forms.AccessibleObject" /> для элемента управления.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если метод <xref:System.Windows.Forms.CheckedListBox.CreateAccessibilityInstance%2A> не вызывается явно, он будет вызван при обращении к свойству <xref:System.Windows.Forms.Control.AccessibilityObject%2A>.  
  
> [!NOTE]
>  Чтобы получить или задать <xref:System.Windows.Forms.Control.AccessibilityObject%2A> необходимо добавить ссылку на `Accessibility` сборку вместе с платформой .NET Framework.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Windows.Forms.CheckedListBox.CreateAccessibilityInstance" /> в производном классе, не следует вызывать базовый класс <see cref="M:System.Windows.Forms.CheckedListBox.CreateAccessibilityInstance" /> метод.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateItemCollection">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.ListBox.ObjectCollection CreateItemCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Forms.ListBox/ObjectCollection CreateItemCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.CreateItemCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateItemCollection () As ListBox.ObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Forms::ListBox::ObjectCollection ^ CreateItemCollection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListBox+ObjectCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает новый экземпляр коллекции элементов.</summary>
        <returns>Объект <see cref="T:System.Windows.Forms.ListBox.ObjectCollection" />, представляющий новую коллекцию элементов.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.ListBox.CreateItemCollection" />
      </Docs>
    </Member>
    <Member MemberName="CreateParams">
      <MemberSignature Language="C#" Value="protected override System.Windows.Forms.CreateParams CreateParams { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CreateParams CreateParams" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckedListBox.CreateParams" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property CreateParams As CreateParams" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Windows::Forms::CreateParams ^ CreateParams { System::Windows::Forms::CreateParams ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CreateParams</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает параметры, необходимые для создания дескриптора элемента управления.</summary>
        <value>Объект <see cref="T:System.Windows.Forms.CreateParams" />, содержащий требуемые параметры.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Control.CreateParams%2A> Свойства не должны переопределить и позволяет изменять свойства элемента управления. Такие свойства, как <xref:System.Windows.Forms.CreateParams.Caption%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.CreateParams.Width%2A?displayProperty=nameWithType>, и <xref:System.Windows.Forms.CreateParams.Height%2A?displayProperty=nameWithType> должен установить соответствующие свойства в элементе управления, таких как <xref:System.Windows.Forms.Control.Text%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Control.Width%2A?displayProperty=nameWithType> и <xref:System.Windows.Forms.Control.Height%2A?displayProperty=nameWithType>. <xref:System.Windows.Forms.CreateParams> Следует только расширить при упаковки стандартный класс элемента управления Windows или задать стили, не предоставляемые пространством имен Windows Forms. Дополнительные сведения о создании параметров элементов управления см. в разделе `CreateWindow` и `CreateWindowEx` функции и `CREATESTRUCT` документации по структуре в справочнике по Windows Platform SDK, расположенном в библиотеке MSDN по http://msdn.microsoft.com/library.  
  
   
  
## Examples  
 В следующем примере кода расширяет <xref:System.Windows.Forms.Control.CreateParams%2A> свойство <xref:System.Windows.Forms.Button> производного класса. <xref:System.Windows.Forms.CreateParams.Style%2A?displayProperty=nameWithType> Изменить свойство, которое вызывает кнопку, чтобы отобразить <xref:System.Drawing.Icon> вместо <xref:System.Drawing.Image>. В этом примере требуется, что имеется класс, наследующий от <xref:System.Windows.Forms.Button> класса.  
  
 [!code-cpp[CreateParams#3](~/samples/snippets/cpp/VS_Snippets_Winforms/CreateParams/CPP/createparams.cpp#3)]
 [!code-csharp[CreateParams#3](~/samples/snippets/csharp/VS_Snippets_Winforms/CreateParams/CS/createparams.cs#3)]
 [!code-vb[CreateParams#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CreateParams/VB/createparams.vb#3)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для работы с неуправляемым кодом. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="P:System.Windows.Forms.Control.CreateParams" /> свойство в производном классе используйте свойство базового класса <see cref="P:System.Windows.Forms.Control.CreateParams" /> для расширения базовой реализации. В противном случае необходимо предоставить реализацию.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckedListBox.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает источник данных для элемента управления.</summary>
        <value>Объект, представляющий источник данных.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSourceChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DataSourceChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DataSourceChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckedListBox.DataSourceChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataSourceChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DataSourceChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при изменении свойства <see cref="P:System.Windows.Forms.CheckedListBox.DataSource" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayMember">
      <MemberSignature Language="C#" Value="public string DisplayMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayMember" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckedListBox.DisplayMember" />
      <MemberSignature Language="VB.NET" Value="Public Property DisplayMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает строку, указывающую свойство объектов, содержащихся в списке, содержимое которого требуется отобразить.</summary>
        <value>Строка, которая задает имя свойства объектов, содержащихся в списке. Значение по умолчанию — пустая строка ("").</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию <xref:System.Windows.Forms.CheckedListBox> отображает строку по умолчанию для элементов, которые он содержит. Тем не менее <xref:System.Windows.Forms.CheckedListBox> могут отображать различные типы объектов, и требуется изменить, указав отображается строка <xref:System.Windows.Forms.CheckedListBox.DisplayMember%2A> свойство. Если указанное свойство не существует, или значение <xref:System.Windows.Forms.CheckedListBox.DisplayMember%2A> свойства является пустая строка ("»), результаты объекта <xref:System.Windows.Forms.ListBox.ToString%2A> метод отображаются вместо него.  
  
 Если новое значение <xref:System.Windows.Forms.CheckedListBox.DisplayMember%2A> не может быть задано, сохраняется предыдущее значение.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется инициализация <xref:System.Windows.Forms.CheckedListBox> управления <xref:System.Windows.Forms.CheckedListBox.CheckOnClick%2A>, <xref:System.Windows.Forms.CheckedListBox.SelectionMode%2A>, и <xref:System.Windows.Forms.CheckedListBox.ThreeDCheckBoxes%2A> свойства. В примере происходит заполнение <xref:System.Windows.Forms.CheckedListBox> с элементами управления и наборы <xref:System.Windows.Forms.CheckedListBox.DisplayMember%2A> для <xref:System.Windows.Forms.Control.Name%2A?displayProperty=nameWithType> свойства элемента управления.  
  
 Чтобы запустить пример, вставьте следующий код в форму, содержащую <xref:System.Windows.Forms.CheckedListBox> с именем `CheckedListBox1` и вызвать `InitializeCheckListBox` метод из конструктора формы или метода Load.  
  
 [!code-cpp[System.Windows.Forms.PropertyGridExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.PropertyGridExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.PropertyGridExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DisplayMemberChanged">
      <MemberSignature Language="C#" Value="public event EventHandler DisplayMemberChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler DisplayMemberChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckedListBox.DisplayMemberChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DisplayMemberChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ DisplayMemberChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при изменении свойства <see cref="P:System.Windows.Forms.CheckedListBox.DisplayMember" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.DrawItemEventHandler DrawItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.DrawItemEventHandler DrawItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckedListBox.DrawItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DrawItem As DrawItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::DrawItemEventHandler ^ DrawItem;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при изменении вида элемента <see cref="T:System.Windows.Forms.CheckedListBox" />, рисуемого владельцем. Данное событие не применимо к этому классу.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие используется рисуемого владельцем <xref:System.Windows.Forms.CheckedListBox>. Это событие возникает только при <xref:System.Windows.Forms.CheckedListBox.DrawMode%2A> свойству <xref:System.Windows.Forms.DrawMode.OwnerDrawFixed?displayProperty=nameWithType> или <xref:System.Windows.Forms.DrawMode.OwnerDrawVariable?displayProperty=nameWithType>. Это событие можно использовать для выполнения задач, необходимых для прорисовки элементов <xref:System.Windows.Forms.CheckedListBox>. Если у вас есть элемент переменного размера (то есть <xref:System.Windows.Forms.CheckedListBox.DrawMode%2A> имеет значение <xref:System.Windows.Forms.DrawMode.OwnerDrawVariable?displayProperty=nameWithType>), <xref:System.Windows.Forms.CheckedListBox.MeasureItem> события перед рисованием элемента. Можно создать обработчик событий для <xref:System.Windows.Forms.CheckedListBox.MeasureItem> событий для указания размера для элемента, который требуется нарисовать в обработчике событий для <xref:System.Windows.Forms.CheckedListBox.DrawItem> события.  
  
 Данное событие не применимо к этому классу.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DrawMode">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.DrawMode DrawMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.DrawMode DrawMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckedListBox.DrawMode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property DrawMode As DrawMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::DrawMode DrawMode { System::Windows::Forms::DrawMode get(); void set(System::Windows::Forms::DrawMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.DrawMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее режим рисования компонентов для элемента управления <see cref="T:System.Windows.Forms.CheckedListBox" />. Данное свойство не применимо к этому классу.</summary>
        <value>Всегда режим <see cref="T:System.Windows.Forms.DrawMode" /> со значением <see langword="Normal" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Данное свойство не применимо к этому классу.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetItemChecked">
      <MemberSignature Language="C#" Value="public bool GetItemChecked (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetItemChecked(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.GetItemChecked(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemChecked (index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetItemChecked(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Индекс элемента.</param>
        <summary>Возвращает значение, указывающее, отмечен ли заданный элемент.</summary>
        <returns>
          Значение <see langword="true" />, если команда отмечена флажком; в обратном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.CheckedListBox.GetItemChecked%2A> Возвращает `true` Если значение <xref:System.Windows.Forms.CheckState> — `Checked` или `Indeterminate` для элемента. Чтобы определить элемент находится в определенном состоянии, используйте <xref:System.Windows.Forms.CheckedListBox.GetItemCheckState%2A> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Задаваемое значение параметра <paramref name="index" /> меньше нуля.  
  
 - или -  
  
 Задаваемое значение параметра <paramref name="index" /> больше или равно количеству элементов в списке.</exception>
        <altmember cref="M:System.Windows.Forms.CheckedListBox.GetItemCheckState(System.Int32)" />
        <altmember cref="T:System.Windows.Forms.CheckState" />
      </Docs>
    </Member>
    <Member MemberName="GetItemCheckState">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.CheckState GetItemCheckState (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Forms.CheckState GetItemCheckState(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.GetItemCheckState(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetItemCheckState (index As Integer) As CheckState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::CheckState GetItemCheckState(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CheckState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Индекс элемента, значение состояния которого требуется получить.</param>
        <summary>Возвращает значение, указывающее состояние пометки текущего элемента.</summary>
        <returns>Одно из значений перечисления <see cref="T:System.Windows.Forms.CheckState" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.CheckedListBox.GetItemCheckState%2A> Метод обеспечивает возможность получения <xref:System.Windows.Forms.CheckState> значение элемента с заданным индексом. Никогда не указывайте состояния флажка элемента `Indeterminate`, затем с помощью <xref:System.Windows.Forms.CheckedListBox.GetItemChecked%2A> метод.  
  
   
  
## Examples  
 В следующем примере перечисляются отмеченных элементов в <xref:System.Windows.Forms.CheckedListBox.CheckedIndexCollection> чтобы увидеть, что Проверьте состояние элемента. В примере показано использование <xref:System.Windows.Forms.CheckedListBox.GetItemCheckState%2A> метод для установки состояния флажка элемента. В примере также демонстрируется использование <xref:System.Windows.Forms.CheckedListBox.CheckedIndices%2A> свойства <xref:System.Windows.Forms.CheckedListBox.CheckedIndexCollection> и <xref:System.Windows.Forms.CheckedListBox.CheckedItems%2A> свойства <xref:System.Windows.Forms.CheckedListBox.CheckedItemCollection>.  
  
 В первом цикле используется <xref:System.Windows.Forms.CheckedListBox.GetItemCheckState%2A> метода <xref:System.Windows.Forms.CheckState> каждого проверенного элемента с заданным индексом элемента. Во втором цикле также использует <xref:System.Windows.Forms.CheckedListBox.GetItemCheckState%2A>, но использует <xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A?displayProperty=nameWithType> метод для извлечения индекса элемента.  
  
 [!code-cpp[CheckedListBox#2](~/samples/snippets/cpp/VS_Snippets_Winforms/CheckedListBox/CPP/source.cpp#2)]
 [!code-csharp[CheckedListBox#2](~/samples/snippets/csharp/VS_Snippets_Winforms/CheckedListBox/CS/source.cs#2)]
 [!code-vb[CheckedListBox#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CheckedListBox/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Задаваемое значение параметра <paramref name="index" /> меньше нуля.  
  
 - или -  
  
 Задаваемое значение параметра <paramref name="index" /> больше или равно количеству элементов в списке.</exception>
        <altmember cref="M:System.Windows.Forms.CheckedListBox.GetItemChecked(System.Int32)" />
        <altmember cref="T:System.Windows.Forms.CheckState" />
      </Docs>
    </Member>
    <Member MemberName="ItemCheck">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.ItemCheckEventHandler ItemCheck;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.ItemCheckEventHandler ItemCheck" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckedListBox.ItemCheck" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCheck As ItemCheckEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::ItemCheckEventHandler ^ ItemCheck;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ItemCheckEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при изменении состояния флажка элемента.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Состояние флажка не обновляется до после <xref:System.Windows.Forms.CheckedListBox.ItemCheck> событием.  
  
   
  
## Examples  
 В следующем примере кода показано применение этого элемента. В примере обработчик событий сообщает при наступлении <xref:System.Windows.Forms.CheckedListBox.ItemCheck> событий. Этот отчет позволяет выяснить, когда произошло событие и может оказаться полезным при отладке. Отчет по несколько событий или события, которые происходят часто, рассмотрите возможность замены <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> с <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> или добавление сообщения в многострочном <xref:System.Windows.Forms.TextBox>.  
  
 Чтобы запустить пример кода, вставьте его в проект, который содержит экземпляр типа <xref:System.Windows.Forms.CheckedListBox> с именем `CheckedListBox1`. Убедитесь, что обработчик событий связан с <xref:System.Windows.Forms.CheckedListBox.ItemCheck> событий.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#156](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#156)]
 [!code-vb[System.Windows.Forms.EventExamples#156](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#156)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemHeight">
      <MemberSignature Language="C#" Value="public override int ItemHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ItemHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckedListBox.ItemHeight" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ItemHeight As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ItemHeight { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает высоту области элемента.</summary>
        <value>Высота области элемента в пикселях.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это измерение основано на высоте шрифта плюс небольшом поле для обеспечения пустого пространства вокруг элемента.  
  
 При изменении шрифта Arial 9,75 точки части знаков, например, «g» и «y» не отображаются должным образом. Чтобы исправить это, создайте класс, производный от <xref:System.Windows.Forms.CheckedListBox> и Переопределите <xref:System.Windows.Forms.CheckedListBox.ItemHeight%2A> для возврата `base.ItemHeight+2`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.CheckedListBox.ObjectCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.CheckedListBox/ObjectCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckedListBox.Items" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Items As CheckedListBox.ObjectCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::CheckedListBox::ObjectCollection ^ Items { System::Windows::Forms::CheckedListBox::ObjectCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Windows.Forms.Design.ListControlStringCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CheckedListBox+ObjectCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает коллекцию элементов в данном элементе управления <see cref="T:System.Windows.Forms.CheckedListBox" />.</summary>
        <value>Коллекция <see cref="T:System.Windows.Forms.CheckedListBox.ObjectCollection" />, представляющая элементы в списке <see cref="T:System.Windows.Forms.CheckedListBox" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.CheckedListBox.Items%2A> Свойство позволяет получить ссылку на список элементов, хранящихся в настоящее время <xref:System.Windows.Forms.CheckedListBox> элемента управления. С помощью этой ссылки можно добавлять элементы, удалять элементы и получить количество элементов в коллекции. Дополнительные сведения о задачах, которые можно выполнить с помощью коллекции элементов см. в разделе <xref:System.Windows.Forms.CheckedListBox.ObjectCollection> класса справочные разделы.  
  
   
  
## Examples  
 В следующем примере перечисляются отмеченных элементов в <xref:System.Windows.Forms.CheckedListBox.CheckedIndexCollection> чтобы увидеть, что Проверьте состояние элемента. В этом примере <xref:System.Windows.Forms.CheckedListBox.Items%2A> свойства <xref:System.Windows.Forms.CheckedListBox.ObjectCollection> для извлечения элементов с помощью индекса <xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A?displayProperty=nameWithType> метод. В примере также демонстрируется использование <xref:System.Windows.Forms.CheckedListBox.CheckedIndices%2A> свойства <xref:System.Windows.Forms.CheckedListBox.CheckedIndexCollection>и <xref:System.Windows.Forms.CheckedListBox.CheckedItems%2A> свойства <xref:System.Windows.Forms.CheckedListBox.CheckedItemCollection>.  
  
 В первом цикле используется <xref:System.Windows.Forms.CheckedListBox.GetItemCheckState%2A> метода <xref:System.Windows.Forms.CheckState> каждого проверенного элемента с заданным индексом элемента. Во втором цикле также использует <xref:System.Windows.Forms.CheckedListBox.GetItemCheckState%2A>, но использует <xref:System.Windows.Forms.ListBox.ObjectCollection.IndexOf%2A?displayProperty=nameWithType> метод для извлечения индекса элемента.  
  
 [!code-cpp[CheckedListBox#2](~/samples/snippets/cpp/VS_Snippets_Winforms/CheckedListBox/CPP/source.cpp#2)]
 [!code-csharp[CheckedListBox#2](~/samples/snippets/csharp/VS_Snippets_Winforms/CheckedListBox/CS/source.cs#2)]
 [!code-vb[CheckedListBox#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CheckedListBox/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.CheckedListBox.CheckedItems" />
        <altmember cref="P:System.Windows.Forms.CheckedListBox.CheckedIndices" />
      </Docs>
    </Member>
    <Member MemberName="MeasureItem">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MeasureItemEventHandler MeasureItem;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MeasureItemEventHandler MeasureItem" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckedListBox.MeasureItem" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MeasureItem As MeasureItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MeasureItemEventHandler ^ MeasureItem;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MeasureItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит, когда создается элемент управления <see cref="T:System.Windows.Forms.ListBox" />, рисуемый владельцем, и определяются размеры элементов списка. Данное событие не применимо к этому классу.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно создать обработчик событий для этого события указать размер элемента перед изображением в <xref:System.Windows.Forms.CheckedListBox.DrawItem> событий. Это событие возникает только при <xref:System.Windows.Forms.CheckedListBox.DrawMode%2A> свойству <xref:System.Windows.Forms.DrawMode.OwnerDrawVariable>.  
  
 Максимальная высота <xref:System.Windows.Forms.ListBox> элементов — 255 пикселей.  
  
 Данное событие не применимо к этому классу.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MouseClick">
      <MemberSignature Language="C#" Value="public event System.Windows.Forms.MouseEventHandler MouseClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Forms.MouseEventHandler MouseClick" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckedListBox.MouseClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event MouseClick As MouseEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Forms::MouseEventHandler ^ MouseClick;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Always)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MouseEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит, когда пользователь щелкает элемент управления <see cref="T:System.Windows.Forms.CheckedListBox" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода показано применение этого элемента. В примере обработчик событий сообщает при наступлении <xref:System.Windows.Forms.CheckedListBox.MouseClick> событий. Этот отчет позволяет выяснить, когда произошло событие и может оказаться полезным при отладке. Отчет по несколько событий или события, которые происходят часто, рассмотрите возможность замены <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> с <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> или добавление сообщения в многострочном <xref:System.Windows.Forms.TextBox>.  
  
 Чтобы запустить пример кода, вставьте его в проект, который содержит экземпляр типа <xref:System.Windows.Forms.CheckedListBox> с именем `CheckedListBox1`. Убедитесь, что обработчик событий связан с <xref:System.Windows.Forms.CheckedListBox.MouseClick> событий.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#158](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#158)]
 [!code-vb[System.Windows.Forms.EventExamples#158](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#158)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBackColorChanged">
      <MemberSignature Language="C#" Value="protected override void OnBackColorChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnBackColorChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.OnBackColorChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnBackColorChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnBackColorChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.Control.BackColorChanged" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected override void OnClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.OnClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClick(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.CheckedListBox.Click" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.CheckedListBox.OnClick%2A> Метод установить или снять флажок для элемента, которую щелкнули. Если <xref:System.Windows.Forms.CheckedListBox.CheckOnClick%2A> свойству `true`, флажок переключается с состояние установленного или снятого первый раз щелчке данного элемента. В противном случае флажок переключается только в том случае, если элемент уже выбран.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.CheckedListBox.OnClick%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Windows.Forms.CheckedListBox.OnClick(System.EventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Windows.Forms.CheckedListBox.OnClick(System.EventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDrawItem">
      <MemberSignature Language="C#" Value="protected override void OnDrawItem (System.Windows.Forms.DrawItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDrawItem(class System.Windows.Forms.DrawItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDrawItem (e As DrawItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDrawItem(System::Windows::Forms::DrawItemEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.DrawItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.DrawItemEventArgs" /> с подробностями.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.CheckedListBox.DrawItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.CheckedListBox.OnDrawItem%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Windows.Forms.CheckedListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.CheckedListBox.OnDrawItem(System.Windows.Forms.DrawItemEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnFontChanged">
      <MemberSignature Language="C#" Value="protected override void OnFontChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnFontChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.OnFontChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnFontChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnFontChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.Control.FontChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.CheckedListBox.OnFontChanged%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Windows.Forms.CheckedListBox.OnFontChanged(System.EventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Windows.Forms.CheckedListBox.OnFontChanged(System.EventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnHandleCreated">
      <MemberSignature Language="C#" Value="protected override void OnHandleCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnHandleCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.OnHandleCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnHandleCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnHandleCreated(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.Control.HandleCreated" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.CheckedListBox.OnHandleCreated%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Windows.Forms.CheckedListBox.OnHandleCreated(System.EventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Windows.Forms.CheckedListBox.OnHandleCreated(System.EventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnItemCheck">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCheck (System.Windows.Forms.ItemCheckEventArgs ice);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCheck(class System.Windows.Forms.ItemCheckEventArgs ice) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCheck (ice As ItemCheckEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCheck(System::Windows::Forms::ItemCheckEventArgs ^ ice);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="ice" Type="System.Windows.Forms.ItemCheckEventArgs" />
      </Parameters>
      <Docs>
        <param name="ice">Объект класса <see cref="T:System.Windows.Forms.ItemCheckEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.CheckedListBox.ItemCheck" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.CheckedListBox.OnItemCheck%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Windows.Forms.CheckedListBox.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Windows.Forms.CheckedListBox.OnItemCheck(System.Windows.Forms.ItemCheckEventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnKeyPress">
      <MemberSignature Language="C#" Value="protected override void OnKeyPress (System.Windows.Forms.KeyPressEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnKeyPress(class System.Windows.Forms.KeyPressEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnKeyPress (e As KeyPressEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnKeyPress(System::Windows::Forms::KeyPressEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.KeyPressEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Вызванный объект <see cref="T:System.Windows.Forms.KeyPressEventArgs" />.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.Control.KeyPress" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если нажать клавишу ПРОБЕЛ и <xref:System.Windows.Forms.CheckedListBox.SelectionMode%2A> не задано значение <xref:System.Windows.Forms.SelectionMode.None?displayProperty=nameWithType>, <xref:System.Windows.Forms.CheckedListBox.OnKeyPress%2A> метод коммутаторы состояния флажка элемента, выбранного в данный момент.  
  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.CheckedListBox.OnKeyPress%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Windows.Forms.CheckedListBox.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> в производном классе нужно убедиться, что вызов базового класса <see cref="M:System.Windows.Forms.CheckedListBox.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" /> метод, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnMeasureItem">
      <MemberSignature Language="C#" Value="protected override void OnMeasureItem (System.Windows.Forms.MeasureItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnMeasureItem(class System.Windows.Forms.MeasureItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnMeasureItem (e As MeasureItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnMeasureItem(System::Windows::Forms::MeasureItemEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Forms.MeasureItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Forms.MeasureItemEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.CheckedListBox.MeasureItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.CheckedListBox.OnMeasureItem%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Windows.Forms.CheckedListBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.CheckedListBox.OnMeasureItem(System.Windows.Forms.MeasureItemEventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelectedIndexChanged">
      <MemberSignature Language="C#" Value="protected override void OnSelectedIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnSelectedIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.OnSelectedIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnSelectedIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnSelectedIndexChanged(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.ListBox.SelectedIndexChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события. Дополнительные сведения см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
 Метод <xref:System.Windows.Forms.CheckedListBox.OnSelectedIndexChanged%2A> также позволяет производным классам обрабатывать событие, не присоединяя делегат. Это предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Windows.Forms.CheckedListBox.OnSelectedIndexChanged(System.EventArgs)" /> в производном классе нужно убедиться, что вызывается метод <see cref="M:System.Windows.Forms.CheckedListBox.OnSelectedIndexChanged(System.EventArgs)" /> базового класса, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Padding">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Padding Padding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.Padding Padding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckedListBox.Padding" />
      <MemberSignature Language="VB.NET" Value="Public Property Padding As Padding" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Padding Padding { System::Windows::Forms::Padding get(); void set(System::Windows::Forms::Padding value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Padding</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает внутренние поля в элементе управления <see cref="T:System.Windows.Forms.CheckedListBox" />. Данное свойство не применимо к этому классу.</summary>
        <value>Объект <see cref="T:System.Windows.Forms.Padding" />, представляющий параметры внутренних зазоров элемента управления.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Элементы управления получают значения по умолчанию для <xref:System.Windows.Forms.Control.Padding%2A> , которые достаточно близко к рекомендации по пользовательскому интерфейсу Windows. Некоторые корректировки по-прежнему могут быть необходимы для конкретных приложений.  
  
 Данное свойство не применимо к этому классу.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RefreshItems">
      <MemberSignature Language="C#" Value="protected override void RefreshItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RefreshItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.RefreshItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RefreshItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RefreshItems();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Снова выполняет синтаксический анализ всех элементов <see cref="T:System.Windows.Forms.CheckedListBox" /> и получает для элементов новые текстовые строки.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectionMode">
      <MemberSignature Language="C#" Value="public override System.Windows.Forms.SelectionMode SelectionMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.SelectionMode SelectionMode" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckedListBox.SelectionMode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SelectionMode As SelectionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::SelectionMode SelectionMode { System::Windows::Forms::SelectionMode get(); void set(System::Windows::Forms::SelectionMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.SelectionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, определяющее режим выбора.</summary>
        <value>Или значение <see langword="One" />, или значение <see langword="None" /> объекта <see cref="T:System.Windows.Forms.SelectionMode" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.CheckedListBox.SelectionMode%2A> Свойство определяет, можно выбрать один элемент в поле со списком или не могут быть выбраны элементы. Для <xref:System.Windows.Forms.CheckedListBox> объектов множественный выбор не поддерживается. Можно задать режим для одного элемента или элементов.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется инициализация <xref:System.Windows.Forms.CheckedListBox> управления <xref:System.Windows.Forms.CheckedListBox.SelectionMode%2A> позволяет в списке, чтобы выбрать один элемент.  
  
 Чтобы запустить пример, вставьте следующий код в форму, содержащую <xref:System.Windows.Forms.CheckedListBox> с именем `CheckedListBox1` и вызвать `InitializeCheckListBox` метод из конструктора формы или метода Load.  
  
 [!code-cpp[System.Windows.Forms.PropertyGridExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.PropertyGridExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.PropertyGridExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Предпринята попытка присвоить значение, которое не равно ни значению <see langword="One" />, ни значению <see langword="None" /> объекта <see cref="T:System.Windows.Forms.SelectionMode" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Предпринята попытка присвоить элементу управления значение <see langword="MultiExtended" /> объекта <see cref="T:System.Windows.Forms.SelectionMode" />.</exception>
        <altmember cref="T:System.Windows.Forms.SelectionMode" />
      </Docs>
    </Member>
    <Member MemberName="SetItemChecked">
      <MemberSignature Language="C#" Value="public void SetItemChecked (int index, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetItemChecked(int32 index, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.SetItemChecked(System.Int32,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetItemChecked (index As Integer, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetItemChecked(int index, bool value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="index">Индекс элемента, для которого требуется установить состояние проверки.</param>
        <param name="value">
          Значение <see langword="true" />, чтобы задать элемент как отмеченный; в противном случае — значение <see langword="false" />.</param>
        <summary>Устанавливает для состояния <see cref="T:System.Windows.Forms.CheckState" /> элемента с заданным индексом значение <see langword="Checked" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если значение `true` передается этот метод задает <xref:System.Windows.Forms.CheckState> значение `Checked`. Значение `false` задает <xref:System.Windows.Forms.CheckState> для `Unchecked`.  
  
   
  
## Examples  
 В следующем примере перечисляются элементы в <xref:System.Windows.Forms.CheckedListBox> и проверяет каждый элемент в списке. В примере показано использование <xref:System.Windows.Forms.CheckedListBox.SetItemCheckState%2A> и <xref:System.Windows.Forms.CheckedListBox.SetItemChecked%2A> методы для установки состояния флажка элемента. Для каждого элемента, который требуется проверить <xref:System.Windows.Forms.CheckedListBox.SetItemCheckState%2A> вызывается для задания <xref:System.Windows.Forms.CheckState> для `Indeterminate`, пока <xref:System.Windows.Forms.CheckedListBox.SetItemChecked%2A> вызывается для других элементов, чтобы задать состояния флажка `Checked`.  
  
 В примере также демонстрируется использование <xref:System.Windows.Forms.CheckedListBox.Items%2A> свойства <xref:System.Windows.Forms.CheckedListBox.ObjectCollection> для получения <xref:System.Windows.Forms.ListBox.ObjectCollection.Count%2A> элементов.  
  
 [!code-cpp[CheckedListBox#3](~/samples/snippets/cpp/VS_Snippets_Winforms/CheckedListBox/CPP/source.cpp#3)]
 [!code-csharp[CheckedListBox#3](~/samples/snippets/csharp/VS_Snippets_Winforms/CheckedListBox/CS/source.cs#3)]
 [!code-vb[CheckedListBox#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CheckedListBox/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Задаваемое значение индекса меньше нуля.  
  
 - или -  
  
 Значение индекса больше числа элементов в списке.</exception>
      </Docs>
    </Member>
    <Member MemberName="SetItemCheckState">
      <MemberSignature Language="C#" Value="public void SetItemCheckState (int index, System.Windows.Forms.CheckState value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetItemCheckState(int32 index, valuetype System.Windows.Forms.CheckState value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.SetItemCheckState(System.Int32,System.Windows.Forms.CheckState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetItemCheckState (index As Integer, value As CheckState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetItemCheckState(int index, System::Windows::Forms::CheckState value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Windows.Forms.CheckState" />
      </Parameters>
      <Docs>
        <param name="index">Индекс элемента, для которого требуется задать его состояние.</param>
        <param name="value">Одно из значений перечисления <see cref="T:System.Windows.Forms.CheckState" />.</param>
        <summary>Задает состояние пометки элемента с указанным индексом.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Windows.Forms.CheckedListBox.SetItemCheckState%2A> вызывает событие <xref:System.Windows.Forms.CheckedListBox.ItemCheck>.  
  
 Элементы, <xref:System.Windows.Forms.CheckState> равно `Indeterminate` отображаются с флажком рядом с флажком, однако поле отображается серым цветом, чтобы указать неопределенное состояние отмеченного элемента.  
  
   
  
## Examples  
 В следующем примере перечисляются элементы в <xref:System.Windows.Forms.CheckedListBox> и проверяет каждый элемент в списке. В примере показано использование <xref:System.Windows.Forms.CheckedListBox.SetItemCheckState%2A> и <xref:System.Windows.Forms.CheckedListBox.SetItemChecked%2A> методы для установки состояния флажка элемента. Для каждого элемента, который требуется проверить <xref:System.Windows.Forms.CheckedListBox.SetItemCheckState%2A> вызывается для задания <xref:System.Windows.Forms.CheckState> для `Indeterminate`, пока <xref:System.Windows.Forms.CheckedListBox.SetItemChecked%2A> вызывается для других элементов, чтобы задать состояния флажка `Checked`.  
  
 В примере также демонстрируется использование <xref:System.Windows.Forms.CheckedListBox.Items%2A> свойства <xref:System.Windows.Forms.CheckedListBox.ObjectCollection> для получения <xref:System.Windows.Forms.ListBox.ObjectCollection.Count%2A> элементов.  
  
 [!code-cpp[CheckedListBox#3](~/samples/snippets/cpp/VS_Snippets_Winforms/CheckedListBox/CPP/source.cpp#3)]
 [!code-csharp[CheckedListBox#3](~/samples/snippets/csharp/VS_Snippets_Winforms/CheckedListBox/CS/source.cs#3)]
 [!code-vb[CheckedListBox#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CheckedListBox/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Задаваемое значение параметра <paramref name="index" /> меньше нуля.  
  
 - или -  
  
 Значение параметра <paramref name="index" /> больше или равно количеству элементов в списке.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Значение <paramref name="value" /> не равно ни одному из значений объекта <see cref="T:System.Windows.Forms.CheckState" />.</exception>
        <altmember cref="T:System.Windows.Forms.CheckState" />
      </Docs>
    </Member>
    <Member MemberName="ThreeDCheckBoxes">
      <MemberSignature Language="C#" Value="public bool ThreeDCheckBoxes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ThreeDCheckBoxes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckedListBox.ThreeDCheckBoxes" />
      <MemberSignature Language="VB.NET" Value="Public Property ThreeDCheckBoxes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ThreeDCheckBoxes { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее чему равен для флажков объект <see cref="T:System.Windows.Forms.ButtonState" />: значению <see langword="Flat" /> или значению <see langword="Normal" />.</summary>
        <value>
          Значение <see langword="true" />, если флажок имеет плоский внешний вид; в противном случае — значение <see langword="false" />. Значение по умолчанию: <see langword="true" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода демонстрируется инициализация <xref:System.Windows.Forms.CheckedListBox> управления <xref:System.Windows.Forms.CheckedListBox.CheckOnClick%2A>, <xref:System.Windows.Forms.CheckedListBox.SelectionMode%2A>, и <xref:System.Windows.Forms.CheckedListBox.ThreeDCheckBoxes%2A> свойства. В примере происходит заполнение <xref:System.Windows.Forms.CheckedListBox> с элементами управления и наборы <xref:System.Windows.Forms.CheckedListBox.DisplayMember%2A> для <xref:System.Windows.Forms.Control.Name%2A?displayProperty=nameWithType> свойства элемента управления.  
  
 Чтобы запустить пример, вставьте следующий код в форму, содержащую <xref:System.Windows.Forms.CheckedListBox> с именем `CheckedListBox1` и вызвать `InitializeCheckListBox` метод из конструктора формы или метода Load.  
  
 [!code-cpp[System.Windows.Forms.PropertyGridExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.PropertyGridExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.PropertyGridExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.PropertyGridExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ButtonState" />
      </Docs>
    </Member>
    <Member MemberName="UseCompatibleTextRendering">
      <MemberSignature Language="C#" Value="public bool UseCompatibleTextRendering { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseCompatibleTextRendering" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckedListBox.UseCompatibleTextRendering" />
      <MemberSignature Language="VB.NET" Value="Public Property UseCompatibleTextRendering As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseCompatibleTextRendering { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, определяющее, какой класс следует использовать для визуализации текста: <see cref="T:System.Drawing.Graphics" /> ([!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]) или <see cref="T:System.Windows.Forms.TextRenderer" /> ([!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)]).</summary>
        <value>
          Значение <see langword="true" />, если для отрисовки текста должен использоваться класс <see cref="T:System.Drawing.Graphics" /> с целью обеспечения совместимости с версиями 1.0 и 1.1 .NET Framework; в противном случае — значение <see langword="false" />. Значение по умолчанию: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `UseCompatibleTextRendering` Свойство предназначено для предоставления visual совместимости между элементами управления Windows Forms, отрисовки текста с помощью <xref:System.Windows.Forms.TextRenderer> класса и [!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)] и [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)] приложения, выполняющие отрисовку пользовательского текста, с использованием <xref:System.Drawing.Graphics>класса. В большинстве случаев, если приложение не обновлен из [!INCLUDE[net_v10_short](~/includes/net-v10-short-md.md)] или [!INCLUDE[net_v11_short](~/includes/net-v11-short-md.md)], рекомендуется оставить установленным `UseCompatibleTextRendering` присвоено значение по умолчанию `false`.  
  
 [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] На основе <xref:System.Windows.Forms.TextRenderer> класс впервые появился в [!INCLUDE[dnprdnlong](~/includes/dnprdnlong-md.md)] для повышения производительности, как сделать текст улучшения отображения и улучшить поддержку международных шрифтов. В более ранних версиях [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)], [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)] на основе <xref:System.Drawing.Graphics> класс используется для выполнения всех отрисовки текста. [!INCLUDE[ndptecgdi](~/includes/ndptecgdi-md.md)] вычисляет интервал и переноса по-разному из [!INCLUDE[ndptecgdiplus](~/includes/ndptecgdiplus-md.md)]. В приложении Windows Forms, которое использует <xref:System.Drawing.Graphics> класса для вывода текста, это может привести к текст для элементов управления, использующих <xref:System.Windows.Forms.TextRenderer> чтобы отличаться от другого текста в приложении. Чтобы устранить проблему несовместимости, можно задать `UseCompatibleTextRendering` свойства `true` для конкретного элемента управления. Чтобы задать `UseCompatibleTextRendering` для `true` для всех элементов управления в приложении, вызывать <xref:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault%2A?displayProperty=nameWithType> метод с параметром `true`.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Application.SetCompatibleTextRenderingDefault(System.Boolean)" />
        <altmember cref="P:Microsoft.VisualBasic.ApplicationServices.WindowsFormsApplicationBase.UseCompatibleTextRendering" />
      </Docs>
    </Member>
    <Member MemberName="ValueMember">
      <MemberSignature Language="C#" Value="public string ValueMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValueMember" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.CheckedListBox.ValueMember" />
      <MemberSignature Language="VB.NET" Value="Public Property ValueMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ValueMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает строку, указывающую свойство источника данных, из которого извлекается значение.</summary>
        <value>Строка, указывающая свойство источника данных, из которого извлекается значение.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Укажите содержимое <xref:System.Windows.Forms.CheckedListBox.ValueMember%2A> свойство в случаях, когда выполняется связывание данных.  
  
 Можно снять <xref:System.Windows.Forms.CheckedListBox.ValueMember%2A> свойство, присвоив свойству пустую строку ("») или `null`.  
  
 Задание нового <xref:System.Windows.Forms.CheckedListBox.ValueMember%2A> свойство вызывает <xref:System.Windows.Forms.CheckedListBox.ValueMemberChanged> и <xref:System.Windows.Forms.ListControl.SelectedValueChanged> события.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Указанное свойство невозможно найти в объекте, заданном значением свойства <see cref="P:System.Windows.Forms.CheckedListBox.DataSource" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ValueMemberChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ValueMemberChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ValueMemberChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.CheckedListBox.ValueMemberChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ValueMemberChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ValueMemberChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при изменении свойства <see cref="P:System.Windows.Forms.CheckedListBox.ValueMember" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WmReflectCommand">
      <MemberSignature Language="C#" Value="protected override void WmReflectCommand (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WmReflectCommand(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.WmReflectCommand(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WmReflectCommand (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WmReflectCommand(System::Windows::Forms::Message % m);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">Сообщение <see cref="T:System.Windows.Forms.Message" />, посылаемое окном верхнего уровня в элемент управления <see cref="T:System.Windows.Forms.CheckedListBox" />.</param>
        <summary>Обрабатывает сообщение команды, получаемое элементом управления <see cref="T:System.Windows.Forms.CheckedListBox" /> из окна верхнего уровня.</summary>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для работы с неуправляемым кодом. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected override void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.CheckedListBox.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void WndProc(System::Windows::Forms::Message % m);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">Сообщение <see cref="T:System.Windows.Forms.Message" /> Windows для обработки.</param>
        <summary>Обрабатывает сообщения Windows.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано переопределение <xref:System.Windows.Forms.Control.WndProc%2A> метод для обработки сообщений операционной системы, указанные в <xref:System.Windows.Forms.Message> структуры. В этом примере, чтобы узнать, когда другое приложение станет активным обрабатывается сообщение операционной системы WM_ACTIVATEAPP. См. в документации Platform SDK в библиотеке MSDN по http://msdn.microsoft.com/library о возможных <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=nameWithType>, <xref:System.Windows.Forms.Message.LParam%2A?displayProperty=nameWithType>, и <xref:System.Windows.Forms.Message.WParam%2A?displayProperty=nameWithType> значения. Фактические значения констант, которые можно найти в файле заголовка Windows.h, входит в состав пакета Platform SDK (раздел Core SDK), которое доступно в библиотеке MSDN по http://msdn.microsoft.com/library.  
  
 [!code-cpp[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.Control.WndProc#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.Control.WndProc/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для работы с неуправляемым кодом. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
      </Docs>
    </Member>
  </Members>
</Type>