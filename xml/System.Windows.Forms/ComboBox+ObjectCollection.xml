<Type Name="ComboBox+ObjectCollection" FullName="System.Windows.Forms.ComboBox+ObjectCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8bc759759c10a1e2366c36bfdaf5c18cf1e58f9e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30639898" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ComboBox.ObjectCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ComboBox/ObjectCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ComboBox.ObjectCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ComboBox.ObjectCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ComboBox::ObjectCollection : System::Collections::IList" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет коллекцию позиций элемента управления <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ComboBox.ObjectCollection?displayProperty=nameWithType> Класс инкапсулирует элементы в <xref:System.Windows.Forms.ComboBox>. Коллекция объектов в поле со списком можно использовать для управления множеством типов объектов, включая строки, изображения и настраиваемые бизнес-объекты.  
  
 Элементы добавляются в коллекцию несколькими способами. <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> Метод добавляет в коллекцию одного объекта. Чтобы добавить несколько объектов в коллекцию, лучше всего создать массив элементов и присвоить <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> метод. Чтобы вставить объект в определенное место в коллекции, можно использовать <xref:System.Windows.Forms.ComboBox.ObjectCollection.Insert%2A> метода. Для удаления элементов при известном индексе в коллекции можно использовать <xref:System.Windows.Forms.ComboBox.ObjectCollection.Remove%2A> метода или <xref:System.Windows.Forms.ComboBox.ObjectCollection.RemoveAt%2A> метод. <xref:System.Windows.Forms.ComboBox.ObjectCollection.Clear%2A> Метод удаляет все элементы из коллекции.  
  
 Помимо методов и свойств для добавления и удаления элементов <xref:System.Windows.Forms.ComboBox.ObjectCollection?displayProperty=nameWithType> также предоставляет методы для поиска элементов в коллекции. <xref:System.Windows.Forms.ComboBox.ObjectCollection.Contains%2A> Метод позволяет определить, является ли объект элемента коллекции. Если известно, что элемент является элементом коллекции, можно использовать <xref:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf%2A> метод, чтобы определить, где расположен элемент в коллекции.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectCollection (System.Windows.Forms.ComboBox owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ComboBox owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.#ctor(System.Windows.Forms.ComboBox)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ComboBox)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectCollection(System::Windows::Forms::ComboBox ^ owner);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ComboBox" />
      </Parameters>
      <Docs>
        <param name="owner">Поле со списком <see cref="T:System.Windows.Forms.ComboBox" />, которому принадлежит коллекция объектов.</param>
        <summary>Инициализирует новый экземпляр <see cref="T:System.Windows.Forms.ComboBox.ObjectCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Экземпляр этого класса невозможно без его сопоставления с <xref:System.Windows.Forms.ComboBox> элемента управления.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (item As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">Объект, представляющий элемент для добавления в коллекцию.</param>
        <summary>Добавляет элемент в список позиций <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
        <returns>Отсчитываемый с нуля индекс элемента в коллекции.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод добавляет элемент в поле со списком. Если <xref:System.Windows.Forms.ComboBox.Sorted%2A> свойство <xref:System.Windows.Forms.ComboBox> равно `true`, элемент вставляется в список в алфавитном порядке. В противном случае — элемент вставляется в конец списка.  
  
 Визуальное представление элемента отображается в поле со списком. Такое представление содержания определяется <xref:System.Windows.Forms.ListControl.DisplayMember%2A> свойство. Если <xref:System.Windows.Forms.ListControl.DisplayMember%2A> свойство `null`, элемента `ToString` метод вызывается для получения строки, отображается в поле со списком; в противном случае — свойство объекта, хранимых в соответствии с <xref:System.Windows.Forms.ListControl.DisplayMember%2A> свойство отображается. Объект <xref:System.SystemException> возникает, если недостаточно места для хранения нового элемента. Добавление набора элементов в поле со списком, лучше всего использовать <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> метода. Если вы решили использовать <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> метод, чтобы добавить несколько элементов в поле со списком, используйте <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> метод, чтобы приостановить обновление изображения в процессе добавления и <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> метод, чтобы возобновить обновление. Можно использовать <xref:System.Windows.Forms.ComboBox.ObjectCollection.Insert%2A> метод для указания расположения в списке, когда элемент добавляется. Когда объект добавляется в коллекцию <xref:System.Windows.Forms.ComboBox> вызывает объект <xref:System.Object.ToString%2A> метод, чтобы получить строку, отображаемую в списке.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="item" /> имел значение <see langword="null" />.</exception>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (object[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(object[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.AddRange(System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Object ^&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Object[]" />
      </Parameters>
      <Docs>
        <param name="items">Массив объектов, добавляемый в список.</param>
        <summary>Добавляет массив элементов в список позиций <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Windows.Forms.ComboBox.Sorted%2A> свойство <xref:System.Windows.Forms.ComboBox> имеет значение true, элементы вставляются в список в алфавитном порядке. В противном случае элементы вставляются в порядке их появления в массиве. Этот метод обычно передается массив <xref:System.String> этому методу могут передаваться объекты, а также массив объектов любого типа. Когда объект добавляется в коллекцию, метод вызывает объект <xref:System.Object.ToString%2A> метод, чтобы получить строку, отображаемую в списке. При использовании этого метода для добавления элементов в коллекцию, необходимо вызвать <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> и <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> методы для оптимизации производительности.  
  
   
  
## Examples  
 В следующем примере кода показано, как инициализировать <xref:System.Windows.Forms.ComboBox> управления, задав свойство text и используя <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> метод для заполнения <xref:System.Windows.Forms.ComboBox>. Он также демонстрирует обработку <xref:System.Windows.Forms.ComboBox.DropDown> событий. Чтобы запустить пример, вставьте следующий код в форму и вызовите `InitializeComboBox` метод из конструктора формы или `Load` метод.  
  
 [!code-cpp[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/CPP/form1.cpp#2)]
 [!code-csharp[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/CS/form1.cs#2)]
 [!code-vb[System.Windows.Forms.ComboBoxDropDown#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxDropDown/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Элемент в параметре <paramref name="items" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Удаляет все элементы из коллекции <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При удалении элементов из списка теряются все сведения об удаленных элементах. Чтобы удалить один элемент из <xref:System.Windows.Forms.ComboBox>, используйте <xref:System.Windows.Forms.ComboBox.ObjectCollection.Remove%2A> или <xref:System.Windows.Forms.ComboBox.ObjectCollection.RemoveAt%2A> метод.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Объект, представляющий элемент для поиска в коллекции.</param>
        <summary>Определяет, входит ли указанный элемент в данную коллекцию.</summary>
        <returns>
          Значение <see langword="true" />, если элемент входит в коллекцию; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ComboBox.ObjectCollection.Contains%2A> Метод позволяет определить, является ли объект элемента коллекции. Если известно, что элемент является элементом коллекции, можно использовать <xref:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf%2A> метод, чтобы определить, где расположен элемент в коллекции.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (object[] destination, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(object[] destination, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.CopyTo(System.Object[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (destination As Object(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Object ^&gt; ^ destination, int arrayIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Object[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="destination">Массив объектов, в который копируется коллекция.</param>
        <param name="arrayIndex">Место в целевом массиве, в которое копируется коллекция.</param>
        <summary>Копирует коллекцию целиком в заданное место существующего массива объектов.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод можно использовать для объединения элементов из нескольких коллекций в одном массиве. Затем можно использовать этот массив для заполнения содержимого другого <xref:System.Windows.Forms.ComboBox> управлять с помощью <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> метод <xref:System.Windows.Forms.ComboBox.ObjectCollection> класса.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.ObjectCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает количество элементов в коллекции.</summary>
        <value>Количество элементов в коллекции.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство позволяет определить число элементов в <xref:System.Windows.Forms.ComboBox>. Это значение можно использовать при выполнении цикла по значениям коллекции.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает перечислитель, который может использоваться для перемещения по коллекции элементов.</summary>
        <returns>Перечислитель <see cref="T:System.Collections.IEnumerator" />, представляющий коллекцию элементов.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOf(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Объект, представляющий элемент для поиска в коллекции.</param>
        <summary>Возвращает индекс указанного элемента в коллекции.</summary>
        <returns>Индекс расположения элемента в коллекции (индексация ведется от нуля); в противном случае — "минус единица" (-1).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf%2A> Метод позволяет определить, где находится элемент в коллекции. Чтобы определить, если элемент в коллекции перед вызовом этого метода, используйте <xref:System.Windows.Forms.ComboBox.ObjectCollection.Contains%2A> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имел значение <see langword="null" />.</exception>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, System::Object ^ item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Отсчитываемое от нуля расположение в индексе для вставки элемента.</param>
        <param name="item">Объект, который представляет элемент для вставки.</param>
        <summary>Вставляет элемент в коллекцию по указанному индексу.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Windows.Forms.ComboBox.Sorted%2A> свойство <xref:System.Windows.Forms.ComboBox> имеет значение true, `index` параметр учитывается. Когда объект добавляется в коллекцию <xref:System.Windows.Forms.ComboBox> вызывает объект <xref:System.Object.ToString%2A> метод — получить строку, отображаемую в списке.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Запрос <paramref name="item" /> имел значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="index" /> меньше нуля.  
  
 - или -  
  
 Значение параметра <paramref name="index" /> больше числа элементов в коллекции.</exception>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.ObjectCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, определяющее возможность изменения данной коллекции.</summary>
        <value>Всегда <see langword="false" />.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.ObjectCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Индекс элемента, извлекаемого из коллекции.</param>
        <summary>Возвращает из коллекции элемент по указанному индексу.</summary>
        <value>Объект, представляющий элемент, который расположен в коллекции по указанному индексу.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод можно использовать для получения элемента в указанном месте в пределах коллекции. Можно использовать <xref:System.Windows.Forms.ComboBox.ObjectCollection.IndexOf%2A> чтобы найти расположение элемента, или можно использовать индекс, возвращаемый <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Индекс меньше нуля.  
  
 -или-  
  
 Значение параметра <paramref name="index" /> больше или равно количеству элементов в коллекции.</exception>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Объект <see cref="T:System.Object" />, удаляемый из списка.</param>
        <summary>Удаляет заданный элемент из <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Исключение не возникает, если указанный элемент не найден.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Индекс удаляемого элемента.</param>
        <summary>Удаляет элемент с указанным индексом из поля со списком <see cref="T:System.Windows.Forms.ComboBox" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как инициализировать <xref:System.Windows.Forms.ComboBox> управления <xref:System.Windows.Forms.ComboBox.MaxDropDownItems%2A> и <xref:System.Windows.Forms.ComboBox.DropDownStyle%2A> свойства с помощью <xref:System.Windows.Forms.ComboBox.FindStringExact%2A> методы для поиска <xref:System.Windows.Forms.ComboBox> и <xref:System.Windows.Forms.ComboBox.ObjectCollection.RemoveAt%2A> метод, чтобы удалить элемент из <xref:System.Windows.Forms.ComboBox>. Здесь также показано обработки <xref:System.Windows.Forms.ComboBox.SelectedIndexChanged> событий.  
  
 [!code-cpp[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/CPP/form1.cpp#0)]
 [!code-csharp[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/CS/form1.cs#0)]
 [!code-vb[System.Windows.Forms.ComboBoxFindString#0](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ComboBoxFindString/VB/form1.vb#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Значение параметра <paramref name="value" /> меньше нуля.  
  
 - или -  
  
 Значение параметра <paramref name="value" /> больше или равно количеству элементов в коллекции.</exception>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array destination, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array destination, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (destination As Array, index As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ destination, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="destination">Одномерный массив, куда копируются элементы из данной коллекции. Индекс в массиве должен начинаться с нуля.</param>
        <param name="index">Индекс (отсчет с нуля) в массиве, с которого начинается копирование.</param>
        <summary>Описание этого члена см. в разделе <see cref="M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.ComboBox.ObjectCollection> приведен к типу интерфейса <xref:System.Collections.ICollection>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.ObjectCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Описание этого члена см. в разделе <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
        <value>
          Значение <see langword="false" /> во всех случаях.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.ComboBox.ObjectCollection> приведен к типу интерфейса <xref:System.Collections.ICollection>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.ObjectCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Описание этого члена см. в разделе <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
        <value>Объект, который может использоваться для синхронизации доступа к <see cref="T:System.Windows.Forms.ComboBox.ObjectCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.ComboBox.ObjectCollection> приведен к типу интерфейса <xref:System.Collections.ICollection>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ComboBox.ObjectCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (item As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ item) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">Объект, представляющий элемент для добавления в коллекцию.</param>
        <summary>Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
        <returns>Отсчитываемый с нуля индекс элемента в коллекции.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.ComboBox.ObjectCollection> приведен к типу интерфейса <xref:System.Collections.IList>.  
  
 Этот метод добавляет элемент в поле со списком. Если <xref:System.Windows.Forms.ComboBox.Sorted%2A> свойство <xref:System.Windows.Forms.ComboBox> равно `true`, элемент вставляется в список в алфавитном порядке. В противном случае — элемент вставляется в конец списка.  
  
 Визуальное представление элемента отображается в поле со списком. Такое представление содержания определяется <xref:System.Windows.Forms.ListControl.DisplayMember%2A> свойство. Если <xref:System.Windows.Forms.ListControl.DisplayMember%2A> свойство `null`, элемента <xref:System.Object.ToString%2A> метод вызывается для получения строки, отображается в поле со списком; в противном случае — свойство объекта, хранимых в соответствии с <xref:System.Windows.Forms.ListControl.DisplayMember%2A> свойство отображается. Чтобы добавить поле со списком набора элементов, лучше всего использовать <xref:System.Windows.Forms.ComboBox.ObjectCollection.AddRange%2A> метода. Если вы решили использовать <xref:System.Windows.Forms.ComboBox.ObjectCollection.Add%2A> метод, чтобы добавить набор элементов в поле со списком, используйте <xref:System.Windows.Forms.ComboBox.BeginUpdate%2A> метод, чтобы приостановить обновление изображения в процессе добавления и <xref:System.Windows.Forms.ComboBox.EndUpdate%2A> метод, чтобы возобновить обновление. Можно использовать <xref:System.Windows.Forms.ComboBox.ObjectCollection.Insert%2A> метод для указания расположения в списке, когда элемент добавляется. Когда объект добавляется в коллекцию <xref:System.Windows.Forms.ComboBox> вызывает объект <xref:System.Object.ToString%2A> метод, чтобы получить строку, отображаемую в списке.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="item" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.SystemException">Недостаточно места для сохранения нового элемента.</exception>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ComboBox.ObjectCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Описание этого члена см. в разделе <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
        <value>
          Значение <see langword="false" /> во всех случаях.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.ComboBox.ObjectCollection> приведен к типу интерфейса <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
      </Docs>
    </Member>
  </Members>
</Type>