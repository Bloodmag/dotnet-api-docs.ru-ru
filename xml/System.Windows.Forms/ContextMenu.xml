<Type Name="ContextMenu" FullName="System.Windows.Forms.ContextMenu">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fe2cf057631a1298ec0800a4b11c6a22e626bd52" />
    <Meta Name="ms.sourcegitcommit" Value="058bfa0b75b777d3171411d35da8f11617fc06b0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="05/04/2018" />
    <Meta Name="ms.locfileid" Value="33659634" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ContextMenu : System.Windows.Forms.Menu" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ContextMenu extends System.Windows.Forms.Menu" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ContextMenu" />
  <TypeSignature Language="VB.NET" Value="Public Class ContextMenu&#xA;Inherits Menu" />
  <TypeSignature Language="C++ CLI" Value="public ref class ContextMenu : System::Windows::Forms::Menu" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Forms.Menu</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Popup")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет контекстное меню. Хотя элемент управления <see cref="T:System.Windows.Forms.ContextMenuStrip" /> заменяет элемент управления <see cref="T:System.Windows.Forms.ContextMenu" /> предыдущих версий и расширяет его функциональные возможности, однако при необходимости элемент управления <see cref="T:System.Windows.Forms.ContextMenu" /> можно сохранить для обратной совместимости и использования в будущем.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ContextMenu> Класс представляет контекстные меню, которые могут отображаться при нажатии правой кнопки мыши над элементом управления или область формы. Контекстные меню обычно используются для объединения различных элементов из меню <xref:System.Windows.Forms.MainMenu> формы, что помогает пользователю в заданном контексте приложения. Например, можно использовать контекстное меню, назначенное <xref:System.Windows.Forms.TextBox> элемента управления, чтобы предоставить элементы меню для изменения шрифта текста, поиска текста в элементе управления, а также функции буфера обмена для копирования и вставки текста. Можно также отобразить новые <xref:System.Windows.Forms.MenuItem> объекты в контекстном меню, которые находятся не в <xref:System.Windows.Forms.MainMenu> для предоставления определенных команд ситуации, которые не подходят для <xref:System.Windows.Forms.MainMenu> для отображения.  
  
 Как правило контекстное меню отображается, когда пользователь щелкает правой кнопкой мыши элемент управления или самой формы. Видимые элементы управления и <xref:System.Windows.Forms.Form> имеют <xref:System.Windows.Forms.Control.ContextMenu%2A> свойство, которое связывает <xref:System.Windows.Forms.ContextMenu> класса, чтобы элемент управления, отображающий контекстное меню. Можно использовать более одного элемента управления <xref:System.Windows.Forms.ContextMenu>. Можно использовать <xref:System.Windows.Forms.ContextMenu.SourceControl%2A> свойства, чтобы определить, какой элемент управления последнего отображается контекстное меню для выполнения задачи, относящиеся к элементу управления или изменить контекстное меню, отображаемое для элемента управления.  
  
 Вы можете узнать, когда отображается в контекстном меню, чтобы установить метки, отключить элементы и выполнить другие задачи меню перед отображением меню для пользователя. Можно обработать <xref:System.Windows.Forms.ContextMenu.Popup> событие, чтобы определить, когда отображается в контекстном меню.  
  
> [!NOTE]
>  Чтобы повторно использовать <xref:System.Windows.Forms.MenuItem> объектов, отображаемых в <xref:System.Windows.Forms.MainMenu> для использования в <xref:System.Windows.Forms.ContextMenu>, необходимо создать копию этого меню с помощью <xref:System.Windows.Forms.MenuItem.CloneMenu%2A> метод <xref:System.Windows.Forms.MenuItem> класса. Можно также объединить пункты меню и их подменю в один <xref:System.Windows.Forms.MenuItem> с помощью <xref:System.Windows.Forms.MenuItem.MergeMenu%2A> метод <xref:System.Windows.Forms.MenuItem> класса.  
  
   
  
## Examples  
 В следующем примере кода создается обработчик событий для <xref:System.Windows.Forms.ContextMenu.Popup> событие <xref:System.Windows.Forms.ContextMenu>. Код в обработчик событий определяет, какой из двух элементов управления <xref:System.Windows.Forms.PictureBox> с именем `pictureBox1` и <xref:System.Windows.Forms.TextBox> с именем `textBox1` — элемент управления, отображающий контекстное меню. В зависимости от того, какой элемент управления вызывает <xref:System.Windows.Forms.ContextMenu> для отображения контекстного меню, добавляет соответствующий элемент управления <xref:System.Windows.Forms.MenuItem> объектов <xref:System.Windows.Forms.ContextMenu>. В этом примере требуется наличие экземпляра <xref:System.Windows.Forms.ContextMenu> класс с именем `contextMenu1`, определенный в форме. В этом примере также требует наличия <xref:System.Windows.Forms.TextBox> и <xref:System.Windows.Forms.PictureBox> добавлены в форму и что <xref:System.Windows.Forms.Control.ContextMenu%2A> этих элементов управления задано значение `contextMenu1`.  
  
 [!code-cpp[Classic ContextMenu Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ContextMenu Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ContextMenu Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ContextMenu Example/CS/source.cs#1)]
 [!code-vb[Classic ContextMenu Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ContextMenu Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.Menu" />
    <altmember cref="T:System.Windows.Forms.MenuItem" />
    <altmember cref="T:System.Windows.Forms.MainMenu" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.ContextMenu" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextMenu ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenu.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContextMenu();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.ContextMenu" /> без указания команд меню.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 После использования этой версии конструктора можно добавить элементы меню, <xref:System.Windows.Forms.ContextMenu> с помощью <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A> метод <xref:System.Windows.Forms.Menu.MenuItemCollection> класса. Вы можете получить доступ к <xref:System.Windows.Forms.Menu.MenuItemCollection> через <xref:System.Windows.Forms.Menu.MenuItems%2A> свойство.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.Menu.MenuItemCollection" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ContextMenu (System.Windows.Forms.MenuItem[] menuItems);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.MenuItem[] menuItems) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenu.#ctor(System.Windows.Forms.MenuItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (menuItems As MenuItem())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ContextMenu(cli::array &lt;System::Windows::Forms::MenuItem ^&gt; ^ menuItems);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="menuItems" Type="System.Windows.Forms.MenuItem[]" />
      </Parameters>
      <Docs>
        <param name="menuItems">Массив объектов <see cref="T:System.Windows.Forms.MenuItem" />, представляющих добавляемые в контекстное меню команды.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.ContextMenu" /> с указанным набором объектов <see cref="T:System.Windows.Forms.MenuItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта версия конструктора можно использовать для создания <xref:System.Windows.Forms.ContextMenu> с элементами меню, заданного во время его создания. После использования этой версии конструктора можно добавить дополнительные пункты меню для <xref:System.Windows.Forms.ContextMenu> с помощью <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A> метод <xref:System.Windows.Forms.Menu.MenuItemCollection> класса. Вы можете получить доступ к <xref:System.Windows.Forms.Menu.MenuItemCollection> через <xref:System.Windows.Forms.Menu.MenuItems%2A> свойство.  
  
   
  
## Examples  
 В следующем примере кода показано создание контекстное меню и с помощью <xref:System.Windows.Forms.ContextMenu.Show%2A> метод. Чтобы запустить пример, вставьте следующий код в форму, содержащую кнопку с именем Button1. Убедитесь, что все события связаны с их методы обработки событий.  
  
 [!code-cpp[System.Windows.Forms.ManualContextMenu#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ManualContextMenu/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ManualContextMenu#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ManualContextMenu/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ManualContextMenu#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ManualContextMenu/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MenuItem" />
      </Docs>
    </Member>
    <Member MemberName="Collapse">
      <MemberSignature Language="C#" Value="public event EventHandler Collapse;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Collapse" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ContextMenu.Collapse" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Collapse As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Collapse;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при свертывании контекстного меню.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода показано применение этого элемента. В примере обработчик событий сообщает при наступлении <xref:System.Windows.Forms.ContextMenu.Collapse> событий. Этот отчет позволяет выяснить, когда произошло событие и может оказаться полезным при отладке. Отчет по несколько событий или события, которые происходят часто, рассмотрите возможность замены <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> с <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> или добавление сообщения в многострочном <xref:System.Windows.Forms.TextBox>.  
  
 Чтобы запустить пример кода, вставьте его в проект, который содержит экземпляр типа <xref:System.Windows.Forms.ContextMenu> с именем `ContextMenu1`. Убедитесь, что обработчик событий связан с <xref:System.Windows.Forms.ContextMenu.Collapse> событий.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#170](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#170)]
 [!code-vb[System.Windows.Forms.EventExamples#170](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#170)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCollapse">
      <MemberSignature Language="C#" Value="protected internal virtual void OnCollapse (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnCollapse(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenu.OnCollapse(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnCollapse (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnCollapse(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.ContextMenu.Collapse" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPopup">
      <MemberSignature Language="C#" Value="protected internal virtual void OnPopup (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnPopup(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenu.OnPopup(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnPopup (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnPopup(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект класса <see cref="T:System.EventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Forms.ContextMenu.Popup" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Popup">
      <MemberSignature Language="C#" Value="public event EventHandler Popup;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Popup" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Forms.ContextMenu.Popup" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Popup As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Popup;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит перед отображением контекстного меню.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это событие можно использовать для инициализации <xref:System.Windows.Forms.MenuItem> объектов перед их отображением. Например, если вы используете <xref:System.Windows.Forms.ContextMenu> для трех <xref:System.Windows.Forms.TextBox> элементов управления и вы хотите отключить конкретные команды меню в <xref:System.Windows.Forms.ContextMenu> в зависимости от того <xref:System.Windows.Forms.TextBox> является выводом контекстного меню, можно создать обработчик событий для этого события. Можно использовать <xref:System.Windows.Forms.ContextMenu.SourceControl%2A> свойство, чтобы определить, какие <xref:System.Windows.Forms.TextBox> является отображение <xref:System.Windows.Forms.ContextMenu> и отключить соответствующие <xref:System.Windows.Forms.MenuItem> объектов.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода создается обработчик событий для <xref:System.Windows.Forms.ContextMenu.Popup> событие <xref:System.Windows.Forms.ContextMenu>. Код в обработчик событий определяет, какой из двух элементов управления <xref:System.Windows.Forms.PictureBox> с именем `pictureBox1` и <xref:System.Windows.Forms.TextBox> с именем `textBox1` — элемент управления, отображающий контекстное меню. В зависимости от того, какой элемент управления вызывает <xref:System.Windows.Forms.ContextMenu> для отображения контекстного меню, добавляет соответствующий элемент управления <xref:System.Windows.Forms.MenuItem> объектов <xref:System.Windows.Forms.ContextMenu>. В этом примере требуется наличие экземпляра <xref:System.Windows.Forms.ContextMenu> класс с именем `contextMenu1`, определенный в форме. В этом примере также требует наличия <xref:System.Windows.Forms.TextBox> и <xref:System.Windows.Forms.PictureBox> добавлены в форму и что <xref:System.Windows.Forms.Control.ContextMenu%2A> этих элементов управления задано значение `contextMenu1`.  
  
 [!code-cpp[Classic ContextMenu Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ContextMenu Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ContextMenu Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ContextMenu Example/CS/source.cs#1)]
 [!code-vb[Classic ContextMenu Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ContextMenu Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProcessCmdKey">
      <MemberSignature Language="C#" Value="protected internal virtual bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData, System.Windows.Forms.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance bool ProcessCmdKey(valuetype System.Windows.Forms.Message&amp; msg, valuetype System.Windows.Forms.Keys keyData, class System.Windows.Forms.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenu.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys,System.Windows.Forms.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual bool ProcessCmdKey(System::Windows::Forms::Message % msg, System::Windows::Forms::Keys keyData, System::Windows::Forms::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="msg" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
        <Parameter Name="keyData" Type="System.Windows.Forms.Keys" />
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="msg">Передаваемый по ссылке объект <see cref="T:System.Windows.Forms.Message" />, который представляет сообщение окна для обработки.</param>
        <param name="keyData">Одно из значений <see cref="T:System.Windows.Forms.Keys" />, представляющее обрабатываемую клавишу.</param>
        <param name="control">Элемент управления, к которому относится клавиша для команд.</param>
        <summary>Обрабатывает клавишу для команд.</summary>
        <returns>
          Значение <see langword="true" />, если знак был обработан элементом управления; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается во время предварительной обработки сообщения для обработки управляющих клавиш. Сочетания клавиш являются ключами, всегда имеют приоритет над обычными клавишами ввода. Сочетания клавиш примеры клавиш меню и сочетания клавиш. Метод должен вернуть `true` для указания, что командная клавиша обработана или `false` для указания, что ключ не является ключом команды. Этот метод вызывается только в том случае, если элемент управления размещен в приложении Windows Forms или как элемент управления ActiveX.  
  
 <xref:System.Windows.Forms.ContextMenu.ProcessCmdKey%2A> Метод сначала определяет, имеет ли элемент управления <xref:System.Windows.Forms.ContextMenu>и если да, позволяет <xref:System.Windows.Forms.ContextMenu> для обработки клавишу для команд. Если командная клавиша не контекстное меню и элемент управления имеет родительский элемент, ключ передается с родительским <xref:System.Windows.Forms.ContextMenu.ProcessCmdKey%2A> метод. В итоге получается этой команды ключи» выводятся» вверх по иерархии элементов управления. В дополнение к нажатой клавише данные ключа также указывается, если таковые имеются, модификатор были нажаты в то же время в качестве ключа. Клавиши-модификаторы включают клавиш SHIFT, CTRL и ALT.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для непосредственно вызывающего метода вызова неуправляемого кода. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></permission>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" /> метод в производном классе элемент управления должен возвращать <see langword="true" /> для указания, что клавиша обработана. Для ключей, которые не обрабатываются элементом управления, результат вызова метода базового класса <see cref="M:System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)" /> метода должны быть возвращены. Элементы управления редко, если когда-либо, необходимо переопределить этот метод.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RightToLeft">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.RightToLeft RightToLeft { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.RightToLeft RightToLeft" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ContextMenu.RightToLeft" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RightToLeft As RightToLeft" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::RightToLeft RightToLeft { System::Windows::Forms::RightToLeft get(); void set(System::Windows::Forms::RightToLeft value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.RightToLeft</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, размещается ли текст, отображаемый элементом управления, справа налево.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Windows.Forms.RightToLeft" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство позволяет меню поддерживать языки с написанием справа налево. Если значение этого свойства `RightToLeft.Yes`, текст пункта меню отображается справа налево, а не слева направо по умолчанию.  
  
> [!NOTE]
>  Дополнительные сведения о том, как включение выравнивания справа налево влияет на элементы управления Windows Forms см. в разделе <xref:System.Windows.Forms.Control.RightToLeft%2A> свойство.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Значение, присвоенное свойству, не является допустимым в перечислении <see cref="T:System.Windows.Forms.RightToLeft" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Show">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Отображает контекстное меню в указанном месте.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show (System.Windows.Forms.Control control, System.Drawing.Point pos);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show(class System.Windows.Forms.Control control, valuetype System.Drawing.Point pos) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenu.Show(System.Windows.Forms.Control,System.Drawing.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Show(System::Windows::Forms::Control ^ control, System::Drawing::Point pos);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
        <Parameter Name="pos" Type="System.Drawing.Point" />
      </Parameters>
      <Docs>
        <param name="control">Объект <see cref="T:System.Windows.Forms.Control" />, указывающий элемент управления, с которым связано это контекстное меню.</param>
        <param name="pos">Объект <see cref="T:System.Drawing.Point" />, указывающий координаты места отображения меню. Эти координаты указаны относительно клиентских координат элемента управления, указанных в параметре <c>control</c>.</param>
        <summary>Отображает контекстное меню в указанном месте.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Как правило <xref:System.Windows.Forms.ContextMenu> отображается, когда пользователь щелкает правой кнопкой мыши элемент управления или область формы, <xref:System.Windows.Forms.ContextMenu> привязан к. Этот метод можно использовать вручную отображения контекстного меню в определенном месте и связать его с конкретного элемента управления. Этот метод не возвращает до закрытия меню.  
  
   
  
## Examples  
 В следующем примере кода показано создание контекстное меню и с помощью <xref:System.Windows.Forms.ContextMenu.Show%2A> метод. Чтобы запустить пример, вставьте следующий код в форму, содержащую кнопку с именем Button1. Убедитесь, что все события связаны с их методы обработки событий.  
  
 [!code-cpp[System.Windows.Forms.ManualContextMenu#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ManualContextMenu/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ManualContextMenu#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ManualContextMenu/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ManualContextMenu#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ManualContextMenu/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="control" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Дескриптор элемента управления не существует или элемент управления является невидимым.</exception>
      </Docs>
    </Member>
    <Member MemberName="Show">
      <MemberSignature Language="C#" Value="public void Show (System.Windows.Forms.Control control, System.Drawing.Point pos, System.Windows.Forms.LeftRightAlignment alignment);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Show(class System.Windows.Forms.Control control, valuetype System.Drawing.Point pos, valuetype System.Windows.Forms.LeftRightAlignment alignment) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ContextMenu.Show(System.Windows.Forms.Control,System.Drawing.Point,System.Windows.Forms.LeftRightAlignment)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Show(System::Windows::Forms::Control ^ control, System::Drawing::Point pos, System::Windows::Forms::LeftRightAlignment alignment);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="control" Type="System.Windows.Forms.Control" />
        <Parameter Name="pos" Type="System.Drawing.Point" />
        <Parameter Name="alignment" Type="System.Windows.Forms.LeftRightAlignment" />
      </Parameters>
      <Docs>
        <param name="control">Объект <see cref="T:System.Windows.Forms.Control" />, указывающий элемент управления, с которым связано это контекстное меню.</param>
        <param name="pos">Объект <see cref="T:System.Drawing.Point" />, указывающий координаты места отображения меню. Эти координаты указаны относительно клиентских координат элемента управления, указанных в параметре <c>control</c>.</param>
        <param name="alignment">Объект <see cref="T:System.Windows.Forms.LeftRightAlignment" />, определяющий выравнивание элемента управления относительно параметра <c>pos</c>.</param>
        <summary>Отображает контекстное меню в указанном месте с заданным видом выравнивания.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceControl">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control SourceControl { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control SourceControl" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ContextMenu.SourceControl" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SourceControl As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control ^ SourceControl { System::Windows::Forms::Control ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает элемент управления, отображающий контекстное меню.</summary>
        <value>Объект <see cref="T:System.Windows.Forms.Control" />, представляющий элемент управления, который отображает данное контекстное меню. Если контекстное меню не отображается ни одним элементом управления, свойство возвращает значение <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство позволяет определить элемента управления, который в настоящее время отображает контекстное меню, определенное в <xref:System.Windows.Forms.ContextMenu>. Если в настоящее время не отображается в контекстном меню, можно использовать это свойство определяет, какой элемент управления последнего отобразить контекстное меню. Можно использовать это свойство в <xref:System.Windows.Forms.ContextMenu.Popup> событий, чтобы убедиться, что элемент управления отображает команд меню. Это свойство может использоваться для передачи в метод, который выполняет задачи, связанные с помощью команды меню, отображаемых в контекстном меню ссылку на элемент управления. Поскольку <xref:System.Windows.Forms.Form> класс наследует от <xref:System.Windows.Forms.Control>, это свойство также можно использовать, если <xref:System.Windows.Forms.ContextMenu> связан с формой.  
  
   
  
## Examples  
 В следующем примере кода создается обработчик событий для <xref:System.Windows.Forms.ContextMenu.Popup> событие <xref:System.Windows.Forms.ContextMenu>. Код в обработчик событий определяет, какой из двух элементов управления <xref:System.Windows.Forms.PictureBox> с именем `pictureBox1` и <xref:System.Windows.Forms.TextBox> с именем `textBox1` — элемент управления, отображающий контекстное меню. В зависимости от того, какой элемент управления вызывает <xref:System.Windows.Forms.ContextMenu> для отображения контекстного меню, добавляет соответствующий элемент управления <xref:System.Windows.Forms.MenuItem> объектов <xref:System.Windows.Forms.ContextMenu>. В этом примере требуется наличие экземпляра <xref:System.Windows.Forms.ContextMenu> класс с именем `contextMenu1`, определенный в форме. В этом примере также требует наличия <xref:System.Windows.Forms.TextBox> и <xref:System.Windows.Forms.PictureBox> добавлены в форму и что <xref:System.Windows.Forms.Control.ContextMenu%2A> этих элементов управления задано значение `contextMenu1`.  
  
 [!code-cpp[Classic ContextMenu Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic ContextMenu Example/CPP/source.cpp#1)]
 [!code-csharp[Classic ContextMenu Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic ContextMenu Example/CS/source.cs#1)]
 [!code-vb[Classic ContextMenu Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic ContextMenu Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>