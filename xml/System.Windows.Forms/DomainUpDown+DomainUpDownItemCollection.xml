<Type Name="DomainUpDown+DomainUpDownItemCollection" FullName="System.Windows.Forms.DomainUpDown+DomainUpDownItemCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2996c0e57625cedab47e298d063f54f7979a05db" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36522661" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class DomainUpDown.DomainUpDownItemCollection : System.Collections.ArrayList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit DomainUpDown/DomainUpDownItemCollection extends System.Collections.ArrayList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class DomainUpDown.DomainUpDownItemCollection&#xA;Inherits ArrayList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class DomainUpDown::DomainUpDownItemCollection : System::Collections::ArrayList" />
  <TypeSignature Language="F#" Value="type DomainUpDown.DomainUpDownItemCollection = class&#xA;    inherit ArrayList" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.ArrayList</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Инкапсулирует коллекцию объектов для использования классом <see cref="T:System.Windows.Forms.DomainUpDown" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы создать коллекцию объектов для отображения в <xref:System.Windows.Forms.DomainUpDown> управления, можно добавить или удалить элементы по отдельности с помощью <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Add%2A> и <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Remove%2A> методы. Доступ к коллекции из родительского элемента управления <xref:System.Windows.Forms.DomainUpDown>, по <xref:System.Windows.Forms.DomainUpDown.Items%2A> свойство.  
  
   
  
## Examples  
 Следующий пример создает и инициализирует <xref:System.Windows.Forms.DomainUpDown> элемента управления. Пример позволяет задать некоторые из его свойств и создать коллекцию строк, отображаемых в элементе управления вверх / вниз. Предполагается, что <xref:System.Windows.Forms.TextBox>, <xref:System.Windows.Forms.CheckBox> и <xref:System.Windows.Forms.Button> уже созданы в форме. В примере предполагается наличие переменной-члена на уровне класса, объявленные как 32-разрядное целое число со знаком с именем `myCounter`. Можно ввести строку в текстовом поле и добавьте его в <xref:System.Windows.Forms.DomainUpDown.Items%2A> коллекции при нажатии кнопки. Установив флажок, можно переключить <xref:System.Windows.Forms.DomainUpDown.Sorted%2A> свойство и наблюдать различия в коллекции элементов в элементе управления вверх / вниз.  
  
 [!code-cpp[Classic DomainUpDown.DomainUpDownItemCollection Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DomainUpDown.DomainUpDownItemCollection Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DomainUpDown.DomainUpDownItemCollection Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DomainUpDown.DomainUpDownItemCollection Example/CS/source.cs#1)]
 [!code-vb[Classic DomainUpDown.DomainUpDownItemCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DomainUpDown.DomainUpDownItemCollection Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.Forms.DomainUpDown.Items" />
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public override int Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Add (item As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int Add(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Add : obj -&gt; int&#xA;override this.Add : obj -&gt; int" Usage="domainUpDownItemCollection.Add item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">Объект <see cref="T:System.Object" />, добавляемый в конец коллекции.</param>
        <summary>Добавляет заданный объект в конец коллекции.</summary>
        <returns>Отсчитываемый с нуля индекс объекта <see cref="T:System.Object" />, добавляемого в коллекцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Также можно добавить новый <xref:System.Object> в коллекцию с помощью <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Insert%2A> метод.  
  
 Чтобы удалить <xref:System.Object> , который был добавлен ранее, используйте <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Remove%2A> или <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.RemoveAt%2A> методы.  
  
   
  
## Examples  
 Следующий пример создает и инициализирует <xref:System.Windows.Forms.DomainUpDown> элемента управления. Пример позволяет задать некоторые из его свойств и создать коллекцию строк, отображаемых в элементе управления вверх / вниз. Предполагается, что <xref:System.Windows.Forms.TextBox>, <xref:System.Windows.Forms.CheckBox> и <xref:System.Windows.Forms.Button> уже созданы в форме. В примере предполагается наличие переменной-члена на уровне класса, объявленные как 32-разрядное целое число со знаком с именем `myCounter`. Можно ввести строку в текстовом поле и добавьте его в <xref:System.Windows.Forms.DomainUpDown.Items%2A> коллекции при нажатии кнопки. Установив флажок, можно переключить <xref:System.Windows.Forms.DomainUpDown.Sorted%2A> свойство и наблюдать различия в коллекции элементов в элементе управления вверх / вниз.  
  
 [!code-cpp[Classic DomainUpDown.DomainUpDownItemCollection Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic DomainUpDown.DomainUpDownItemCollection Example/CPP/source.cpp#1)]
 [!code-csharp[Classic DomainUpDown.DomainUpDownItemCollection Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic DomainUpDown.DomainUpDownItemCollection Example/CS/source.cs#1)]
 [!code-vb[Classic DomainUpDown.DomainUpDownItemCollection Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic DomainUpDown.DomainUpDownItemCollection Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Insert(System.Int32,System.Object)" />
        <altmember cref="M:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Remove(System.Object)" />
        <altmember cref="M:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public override void Insert (int index, object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Insert(int32 index, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Insert (index As Integer, item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Insert(int index, System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Insert : int * obj -&gt; unit&#xA;override this.Insert : int * obj -&gt; unit" Usage="domainUpDownItemCollection.Insert (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Индекс в коллекции, по которому вставляется объект <see cref="T:System.Object" />.</param>
        <param name="item">Вставляемый объект <see cref="T:System.Object" />.</param>
        <summary>Вставляет указанный объект в коллекцию в указанное место.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Также можно добавить новый <xref:System.Object> в коллекцию с помощью <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Add%2A> метод.  
  
 Чтобы удалить <xref:System.Object> , который был добавлен ранее, используйте <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Remove%2A> или <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.RemoveAt%2A> методы.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Add(System.Object)" />
        <altmember cref="M:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Remove(System.Object)" />
        <altmember cref="M:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public override object this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overrides Property Item(index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ default[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : obj with get, set" Usage="System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Индекс элемента в коллекции.</param>
        <summary>Получает или задает элемент по указанному индексу в коллекции.</summary>
        <value>Объект <see cref="T:System.Object" />, представляющий собой элемент по указанному индексу.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы назначить элементов в определенное расположение или извлечь их из <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection>, могут ссылаться на объект коллекции с заданным значением индекса. Значение индекса <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection> начинается с нуля.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.DomainUpDown.Items" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public override void Remove (object item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Remove(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub Remove (item As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Remove(System::Object ^ item);" />
      <MemberSignature Language="F#" Value="abstract member Remove : obj -&gt; unit&#xA;override this.Remove : obj -&gt; unit" Usage="domainUpDownItemCollection.Remove item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">Объект <see cref="T:System.Object" />, который требуется удалить из коллекции.</param>
        <summary>Удаляет заданный элемент из коллекции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно также удалить <xref:System.Object> , у вас уже есть с помощью <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.RemoveAt%2A> метод.  
  
 Чтобы добавить новый <xref:System.Object> в коллекцию, используйте <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Insert%2A> или <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Add%2A> методы.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Add(System.Object)" />
        <altmember cref="M:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public override void RemoveAt (int item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RemoveAt(int32 item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RemoveAt (item As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RemoveAt(int item);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="domainUpDownItemCollection.RemoveAt item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="item">Заданное индексом местоположение объекта <see cref="T:System.Object" /> в коллекции.</param>
        <summary>Удаляет элемент из указанного места в коллекции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно также удалить <xref:System.Object> , у вас уже есть с помощью <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Remove%2A> метод.  
  
 Чтобы добавить новый <xref:System.Object> в коллекцию, используйте <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Insert%2A> или <xref:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Add%2A> методы.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Add(System.Object)" />
        <altmember cref="M:System.Windows.Forms.DomainUpDown.DomainUpDownItemCollection.Remove(System.Object)" />
      </Docs>
    </Member>
  </Members>
</Type>