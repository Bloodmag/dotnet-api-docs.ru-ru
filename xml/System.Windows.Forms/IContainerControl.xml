<Type Name="IContainerControl" FullName="System.Windows.Forms.IContainerControl">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="daa3a1806d86f0a9617d1345a5205ad0fa97f1e8" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36520510" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IContainerControl" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IContainerControl" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.IContainerControl" />
  <TypeSignature Language="VB.NET" Value="Public Interface IContainerControl" />
  <TypeSignature Language="C++ CLI" Value="public interface class IContainerControl" />
  <TypeSignature Language="F#" Value="type IContainerControl = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Предоставляет функциональные возможности, позволяющие одному элементу управления быть родительским по отношению к другим элементам управления.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 Следующий пример наследует от <xref:System.Windows.Forms.ScrollableControl> класс и реализует <xref:System.Windows.Forms.IContainerControl> интерфейса. Реализация добавляется к <xref:System.Windows.Forms.IContainerControl.ActiveControl%2A> свойство и <xref:System.Windows.Forms.IContainerControl.ActivateControl%2A> метод.  
  
 [!code-cpp[IContainerControl Implementation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IContainerControl Implementation/CPP/mycontainercontrol.cpp#1)]
 [!code-csharp[IContainerControl Implementation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IContainerControl Implementation/CS/mycontainercontrol.cs#1)]
 [!code-vb[IContainerControl Implementation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IContainerControl Implementation/VB/mycontainercontrol.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>Реализуйте этот интерфейс в классах, которые требуется в родительскую коллекцию элементов управления. Члены этого интерфейса позволяют активировать дочернего элемента управления, или определить, какой элемент управления в данный момент активна. При реализации в классе <see cref="M:System.Windows.Forms.IContainerControl.ActivateControl(System.Windows.Forms.Control)" /> принимает <see cref="T:System.Windows.Forms.Control" /> как параметр и активирует указанного элемента управления. <see cref="P:System.Windows.Forms.IContainerControl.ActiveControl" /> Свойство активизирует или извлекает элемент управления, которая является активной.  В большинстве случаев вы не обязательно должны непосредственно реализовывать этот интерфейс. Например при создании проекта библиотеки элементов управления Windows, Visual Studio создает класс начальной для вас. Этот класс наследуется из <see cref="T:System.Windows.Forms.UserControl" /> класса, и <see cref="T:System.Windows.Forms.UserControl" /> реализует <see cref="T:System.Windows.Forms.IContainerControl" /> для вас.</para>
    </block>
    <altmember cref="T:System.Windows.Forms.ContainerControl" />
    <altmember cref="T:System.Windows.Forms.Control" />
  </Docs>
  <Members>
    <Member MemberName="ActivateControl">
      <MemberSignature Language="C#" Value="public bool ActivateControl (System.Windows.Forms.Control active);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ActivateControl(class System.Windows.Forms.Control active) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.IContainerControl.ActivateControl(System.Windows.Forms.Control)" />
      <MemberSignature Language="VB.NET" Value="Public Function ActivateControl (active As Control) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ActivateControl(System::Windows::Forms::Control ^ active);" />
      <MemberSignature Language="F#" Value="abstract member ActivateControl : System.Windows.Forms.Control -&gt; bool" Usage="iContainerControl.ActivateControl active" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="active" Type="System.Windows.Forms.Control" />
      </Parameters>
      <Docs>
        <param name="active">Активизированный объект <see cref="T:System.Windows.Forms.Control" />.</param>
        <summary>Активизирует заданный элемент управления.</summary>
        <returns>Значение <see langword="true" />, если элемент управления успешно активизирован; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Следующий пример наследует от <xref:System.Windows.Forms.ScrollableControl> класс и реализует <xref:System.Windows.Forms.IContainerControl> интерфейса. Реализация добавляется к <xref:System.Windows.Forms.IContainerControl.ActiveControl%2A> свойство и <xref:System.Windows.Forms.IContainerControl.ActivateControl%2A> метод.  
  
 [!code-cpp[IContainerControl Implementation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IContainerControl Implementation/CPP/mycontainercontrol.cpp#1)]
 [!code-csharp[IContainerControl Implementation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IContainerControl Implementation/CS/mycontainercontrol.cs#1)]
 [!code-vb[IContainerControl Implementation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IContainerControl Implementation/VB/mycontainercontrol.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При реализации в классе этот метод активизирует заданную <see cref="T:System.Windows.Forms.Control" />. Элемент управления должен быть потомком контейнерный элемент управления.</para>
        </block>
        <altmember cref="P:System.Windows.Forms.IContainerControl.ActiveControl" />
        <altmember cref="T:System.Windows.Forms.ContainerControl" />
      </Docs>
    </Member>
    <Member MemberName="ActiveControl">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.Control ActiveControl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.Control ActiveControl" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.IContainerControl.ActiveControl" />
      <MemberSignature Language="VB.NET" Value="Public Property ActiveControl As Control" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::Control ^ ActiveControl { System::Windows::Forms::Control ^ get(); void set(System::Windows::Forms::Control ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ActiveControl : System.Windows.Forms.Control with get, set" Usage="System.Windows.Forms.IContainerControl.ActiveControl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.Control</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает элемент управления, являющийся активным в элементе управления контейнера.</summary>
        <value>Элемент управления <see cref="T:System.Windows.Forms.Control" />, который активен в данный момент в элементе управления контейнера.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Следующий пример наследует от <xref:System.Windows.Forms.ScrollableControl> класс и реализует <xref:System.Windows.Forms.IContainerControl> интерфейса. Реализация добавляется к <xref:System.Windows.Forms.IContainerControl.ActiveControl%2A> свойство и <xref:System.Windows.Forms.IContainerControl.ActivateControl%2A> метод.  
  
 [!code-cpp[IContainerControl Implementation#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IContainerControl Implementation/CPP/mycontainercontrol.cpp#1)]
 [!code-csharp[IContainerControl Implementation#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IContainerControl Implementation/CS/mycontainercontrol.cs#1)]
 [!code-vb[IContainerControl Implementation#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IContainerControl Implementation/VB/mycontainercontrol.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При реализации в классе это свойство активизирует или извлекает активный элемент управления в элементе управления контейнера.</para>
        </block>
        <altmember cref="M:System.Windows.Forms.IContainerControl.ActivateControl(System.Windows.Forms.Control)" />
      </Docs>
    </Member>
  </Members>
</Type>