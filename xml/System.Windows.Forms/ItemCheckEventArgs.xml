<Type Name="ItemCheckEventArgs" FullName="System.Windows.Forms.ItemCheckEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4e36065c019366bb0d8240203c76bc2b39c63243" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30647678" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ItemCheckEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ItemCheckEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ItemCheckEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ItemCheckEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ItemCheckEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет данные для события <see cref="E:System.Windows.Forms.CheckedListBox.ItemCheck" /> элементов управления <see cref="T:System.Windows.Forms.CheckedListBox" /> и <see cref="T:System.Windows.Forms.ListView" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.CheckedListBox.ItemCheck> Событие возникает при изменении состояния флажка элемента в установленном списке. <xref:System.Windows.Forms.ItemCheckEventArgs> Класс указывает индекс элемента для изменения, текущее значение флажок для элемента и новое значение для флажка.  
  
 Дополнительные сведения об обработке событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере кода демонстрируется извлеченный <xref:System.Windows.Forms.ListView> управления, обрабатывающий <xref:System.Windows.Forms.ListView.ItemCheck?displayProperty=nameWithType> событий. Этот метод использует <xref:System.Windows.Forms.ItemCheckEventArgs.CurrentValue%2A> и <xref:System.Windows.Forms.ItemCheckEventArgs.Index%2A> свойства <xref:System.Windows.Forms.ItemCheckEventArgs> объекта для получения и регистрировались цены выбранных элементов меню. Чтобы выполнить этот пример, вставьте следующий код в форму, содержащую <xref:System.Windows.Forms.ListView> с именем `ListView1` и <xref:System.Windows.Forms.TextBox> с именем `Textbox1`. Вызовите `InititalizeListView` метод из конструктора формы или `Load` метод. Убедитесь, что все события связаны с их методы обработки событий.  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView2#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView2#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView2#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.CheckedListBox" />
    <altmember cref="E:System.Windows.Forms.CheckedListBox.ItemCheck" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ItemCheckEventArgs (int index, System.Windows.Forms.CheckState newCheckValue, System.Windows.Forms.CheckState currentValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 index, valuetype System.Windows.Forms.CheckState newCheckValue, valuetype System.Windows.Forms.CheckState currentValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ItemCheckEventArgs.#ctor(System.Int32,System.Windows.Forms.CheckState,System.Windows.Forms.CheckState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (index As Integer, newCheckValue As CheckState, currentValue As CheckState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ItemCheckEventArgs(int index, System::Windows::Forms::CheckState newCheckValue, System::Windows::Forms::CheckState currentValue);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="newCheckValue" Type="System.Windows.Forms.CheckState" />
        <Parameter Name="currentValue" Type="System.Windows.Forms.CheckState" />
      </Parameters>
      <Docs>
        <param name="index">Начинающийся с нуля индекс изменяемого элемента.</param>
        <param name="newCheckValue">Одно из значений <see cref="T:System.Windows.Forms.CheckState" />, указывающее, нужно ли изменить флажок для записи, чтобы он был установлен, не установлен или не определен.</param>
        <param name="currentValue">Одно из значений <see cref="T:System.Windows.Forms.CheckState" />, указывающее, является ли флажок для записи в настоящее время установленным, неустановленным или неопределенным.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.ItemCheckEventArgs" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Forms.CheckState" />
      </Docs>
    </Member>
    <Member MemberName="CurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.CheckState CurrentValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.CheckState CurrentValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ItemCheckEventArgs.CurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentValue As CheckState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::CheckState CurrentValue { System::Windows::Forms::CheckState get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CheckState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее текущее состояние флажка элемента.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Windows.Forms.CheckState" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство позволяет определить состояние флажка элемента, указанного в <xref:System.Windows.Forms.CheckedListBox> перед проверкой, состояние для применения изменения.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется извлеченный <xref:System.Windows.Forms.ListView> управления, обрабатывающий <xref:System.Windows.Forms.ListView.ItemChecked?displayProperty=nameWithType> событий. Этот метод использует <xref:System.Windows.Forms.ItemCheckEventArgs.CurrentValue%2A> и <xref:System.Windows.Forms.ItemCheckEventArgs.Index%2A> свойства <xref:System.Windows.Forms.ItemCheckEventArgs> объекта для получения и регистрировались цены выбранных элементов меню. Чтобы выполнить этот пример, вставьте следующий код в форму, содержащую <xref:System.Windows.Forms.ListView> с именем `ListView1` и <xref:System.Windows.Forms.TextBox> с именем `Textbox1`. Вызовите `InititalizeListView` метод из конструктора формы или `Load` метод. Убедитесь, что все события связаны с их методы обработки событий.  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView2#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView2#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView2#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ItemCheckEventArgs.NewValue" />
      </Docs>
    </Member>
    <Member MemberName="Index">
      <MemberSignature Language="C#" Value="public int Index { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Index" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ItemCheckEventArgs.Index" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Index As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Index { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает начинающийся с нуля индекс изменяемого элемента.</summary>
        <value>Начинающийся с нуля индекс изменяемого элемента.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство можно использовать, чтобы определить, какой элемент флажок в <xref:System.Windows.Forms.CheckedListBox> , изменяется.  
  
   
  
## Examples  
 В следующем примере кода демонстрируется извлеченный <xref:System.Windows.Forms.ListView> управления, обрабатывающий <xref:System.Windows.Forms.ListView.ItemChecked?displayProperty=nameWithType> событий. Этот метод использует <xref:System.Windows.Forms.ItemCheckEventArgs.CurrentValue%2A> и <xref:System.Windows.Forms.ItemCheckEventArgs.Index%2A> свойства <xref:System.Windows.Forms.ItemCheckEventArgs> объекта для получения и регистрировались цены выбранных элементов меню. Чтобы выполнить этот пример, вставьте следующий код в форму, содержащую <xref:System.Windows.Forms.ListView> с именем `ListView1` и <xref:System.Windows.Forms.TextBox> с именем `Textbox1`. Вызовите `InititalizeListView` метод из конструктора формы или `Load` метод. Убедитесь, что все события связаны с их методы обработки событий.  
  
 [!code-cpp[System.Windows.Forms.ListView2#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView2#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#1)]
 [!code-vb[System.Windows.Forms.ListView2#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#1)]  
[!code-cpp[System.Windows.Forms.ListView2#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CPP/form1.cpp#2)]
[!code-csharp[System.Windows.Forms.ListView2#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView2/CS/form1.cs#2)]
[!code-vb[System.Windows.Forms.ListView2#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView2/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NewValue">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.CheckState NewValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Forms.CheckState NewValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ItemCheckEventArgs.NewValue" />
      <MemberSignature Language="VB.NET" Value="Public Property NewValue As CheckState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::CheckState NewValue { System::Windows::Forms::CheckState get(); void set(System::Windows::Forms::CheckState value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.CheckState</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, определяющее состояния флажка элемента: установлен, не установлен или неопределенное состояние.</summary>
        <value>Одно из значений перечисления <see cref="T:System.Windows.Forms.CheckState" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство позволяет определить состояние флажка для указанного элемента перед изменением состояния флажка с <xref:System.Windows.Forms.CheckedListBox> элемента управления. Кроме определения нового состояния флажка, это свойство можно использовать в обработчике событий для <xref:System.Windows.Forms.CheckedListBox.ItemCheck> событий для изменения состояния для другого состояния флажка отличный от указанного. Например, если установлен флажок рядом с элементом в <xref:System.Windows.Forms.CheckedListBox> вы определили не должен быть установлен на основании состояния приложения, можно переопределить изменение в состоянии флажка, присвоив этому свойству его предыдущего значения или t o другого состояния флажка.  
  
   
  
## Examples  
 В следующем примере кода показано применение этого элемента. В примере обработчик событий сообщает при наступлении <xref:System.Windows.Forms.CheckedListBox.ItemCheck?displayProperty=nameWithType> событий. Этот отчет позволяет выяснить, когда произошло событие и может оказаться полезным при отладке. Отчет по несколько событий или события, которые происходят часто, рассмотрите возможность замены <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=nameWithType> с <xref:System.Console.WriteLine%2A?displayProperty=nameWithType> или добавление сообщения в многострочном <xref:System.Windows.Forms.TextBox>.  
  
 Чтобы запустить пример кода, вставьте его в проект, который содержит экземпляр типа <xref:System.Windows.Forms.CheckedListBox> с именем `CheckedListBox1`. Убедитесь, что обработчик событий связан с <xref:System.Windows.Forms.CheckedListBox.ItemCheck?displayProperty=nameWithType> событий.  
  
 [!code-csharp[System.Windows.Forms.EventExamples#156](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/CS/EventExamples.cs#156)]
 [!code-vb[System.Windows.Forms.EventExamples#156](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.EventExamples/VB/EventExamples.vb#156)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.ItemCheckEventArgs.CurrentValue" />
      </Docs>
    </Member>
  </Members>
</Type>