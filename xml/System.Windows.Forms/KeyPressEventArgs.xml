<Type Name="KeyPressEventArgs" FullName="System.Windows.Forms.KeyPressEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dffe3a90d9e36ff28b69e6f18be491d69a6e7afb" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36519538" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class KeyPressEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyPressEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.KeyPressEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyPressEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyPressEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type KeyPressEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет данные для события <see cref="E:System.Windows.Forms.Control.KeyPress" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Windows.Forms.KeyPressEventArgs> знак, получаемый при нажатии клавиши. Например, при нажатии клавиш SHIFT + K, <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> свойство возвращает прописной знак K.  
  
 Объект <xref:System.Windows.Forms.Control.KeyPress> событие возникает при нажатии клавиши. Два события, которые тесно связаны <xref:System.Windows.Forms.Control.KeyPress> событие <xref:System.Windows.Forms.Control.KeyUp> и <xref:System.Windows.Forms.Control.KeyDown>. <xref:System.Windows.Forms.Control.KeyDown> Событие предшествует каждому <xref:System.Windows.Forms.Control.KeyPress> событие, когда пользователь нажимает клавишу и <xref:System.Windows.Forms.Control.KeyUp> событие происходит, когда пользователь отпускает клавишу. При удерживании пользователем ключ дублировать <xref:System.Windows.Forms.Control.KeyDown> и <xref:System.Windows.Forms.Control.KeyPress> события происходят при каждом повторе символ. Один <xref:System.Windows.Forms.Control.KeyUp> событие создается после выпуска.  
  
 С каждым <xref:System.Windows.Forms.Control.KeyPress> событий, <xref:System.Windows.Forms.KeyPressEventArgs> передается. Объект <xref:System.Windows.Forms.KeyEventArgs> передается с каждым <xref:System.Windows.Forms.Control.KeyDown> и <xref:System.Windows.Forms.Control.KeyUp> событий. Объект <xref:System.Windows.Forms.KeyEventArgs> указывает, были ли любые клавиши-модификаторы (CTRL, SHIFT или ALT) нажаты вместе с другим ключом. (Этот модификатор сведения можно также получить с помощью <xref:System.Windows.Forms.Control.ModifierKeys%2A> свойство <xref:System.Windows.Forms.Control> класса.)  
  
 Задать <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> для `true` отменить `KeyPress` событий. Это предотвращает управления обработки нажатия клавиши.  
  
> [!NOTE]
>  Некоторые элементы управления будет обрабатывать определенные нажатий клавиш на <xref:System.Windows.Forms.Control.KeyDown>. Например <xref:System.Windows.Forms.RichTextBox> обрабатывает клавишу ВВОД до <xref:System.Windows.Forms.Control.KeyPress> вызывается. В таких случаях не удается отменить <xref:System.Windows.Forms.Control.KeyPress> события и необходимо отменить нажатия клавиши из <xref:System.Windows.Forms.Control.KeyDown> вместо него.  
  
 Сведения о модели событий см. в разделе [обработка и вызов событий](~/docs/standard/events/index.md).  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Windows.Forms.KeyPressEventArgs> количество ключей, как их нажатия и отображения результатов после каждого нажатия клавиши. <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> Затем значение true, если оставить операционной системы из дальнейших обрабатывает ключ. В примере предполагается формы с <xref:System.Windows.Forms.TextBox> к нему.  
  
 [!code-cpp[Classic KeyPressEventArgs Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CPP/source.cpp#1)]
 [!code-csharp[Classic KeyPressEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic KeyPressEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/VB/source.vb#1)]  
  
 Необходимо создать новый экземпляр этого класса. Необходимо также задать обработчик событий. Это можно сделать в конструкторе класса.  
  
 [!code-cpp[Classic KeyPressEventArgs Example#2](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CPP/source2.cpp#2)]
 [!code-csharp[Classic KeyPressEventArgs Example#2](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/CS/source2.cs#2)]
 [!code-vb[Classic KeyPressEventArgs Example#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic KeyPressEventArgs Example/VB/source2.vb#2)]  
  
 При возникновении указанного события в элементе управления вызывается связанный метод, и приложение может выполнить код в ответ на событие.  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)" />
    <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
    <altmember cref="T:System.Windows.Forms.KeyEventArgs" />
    <altmember cref="E:System.Windows.Forms.Control.KeyDown" />
    <altmember cref="E:System.Windows.Forms.Control.KeyUp" />
    <altmember cref="P:System.Windows.Forms.Control.ModifierKeys" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyPressEventArgs (char keyChar);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(char keyChar) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.KeyPressEventArgs.#ctor(System.Char)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (keyChar As Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyPressEventArgs(char keyChar);" />
      <MemberSignature Language="F#" Value="new System.Windows.Forms.KeyPressEventArgs : char -&gt; System.Windows.Forms.KeyPressEventArgs" Usage="new System.Windows.Forms.KeyPressEventArgs keyChar" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="keyChar" Type="System.Char" />
      </Parameters>
      <Docs>
        <param name="keyChar">Знак ASCII, соответствующий нажатой клавише.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.KeyPressEventArgs" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Windows.Forms.Control.ModifierKeys%2A?displayProperty=nameWithType> свойство, чтобы получить текущее состояние клавиш.  
  
   
  
## Examples  
 Следующий пример отображает окно сообщения, которое отображает текущее состояние клавиши SHIFT.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyPressEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Handled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Handled : bool with get, set" Usage="System.Windows.Forms.KeyPressEventArgs.Handled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, показывающее, было ли обработано событие <see cref="E:System.Windows.Forms.Control.KeyPress" />.</summary>
        <value>Значение <see langword="true" />, если событие обработано; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если событие не обработано, отправляемом в операционную систему для обработки по умолчанию. Задать <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> для `true` отменить `KeyPress` событий.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Windows.Forms.TextBox> элемента управления. `keypressed` Использует метод <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> свойство, чтобы проверить, является ли нажата клавиша ВВОД. При нажатии клавиши ВВОД, <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> свойству `true`, который указывает событие обрабатывается.  
  
 [!code-cpp[KeyPressEventArgs#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyPressEventArgs/CPP/form1.cpp#1)]
 [!code-csharp[KeyPressEventArgs#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyPressEventArgs/CS/form1.cs#1)]
 [!code-vb[KeyPressEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyPressEventArgs/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
      </Docs>
    </Member>
    <Member MemberName="KeyChar">
      <MemberSignature Language="C#" Value="public char KeyChar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char KeyChar" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.KeyPressEventArgs.KeyChar" />
      <MemberSignature Language="VB.NET" Value="Public Property KeyChar As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char KeyChar { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.KeyChar : char with get, set" Usage="System.Windows.Forms.KeyPressEventArgs.KeyChar" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает символ, соответствующий нажатой клавише.</summary>
        <value>Получаемый знак ASCII. Например, при нажатии клавиш SHIFT + K данное свойство возвращает прописной знак K.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> свойства для образца нажатия клавиш, во время выполнения и изменения нажатия клавиш в особых случаях во время выполнения. Например, можно использовать <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> для отключения нечисловых, когда пользователь вводит ПОЧТОВЫЙ индекс, изменить всех буквенных клавиш в верхний регистр в поля для ввода данных или отслеживания клавиатуры или другого устройства ввода для определенных сочетаний клавиш.  
  
 Можно получить или задать следующие клавиши:  
  
-   a – z, A-Z.  
  
-   CTRL.  
  
-   Знаки пунктуации.  
  
-   Число ключей, как в верхней части клавиатуры и на цифровой клавиатуре.  
  
-   ВВЕДИТЕ.  
  
 Не удается получить или задать следующие ключи:  
  
-   Клавиша TAB.  
  
-   INSERT и DELETE.  
  
-   HOME.  
  
-   ОКОНЧАНИЕ.  
  
-   PAGE UP и PAGE DOWN.  
  
-   F1-F2.  
  
-   ALT.  
  
-   Клавиши со стрелками  
  
> [!NOTE]
>  Сведения об обнаружении какой-либо несимвольных упомянутых выше в разделе <xref:System.Windows.Forms.KeyEventArgs> класса.  
  
-  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Windows.Forms.TextBox> элемента управления. `keypressed` Использует метод <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A> свойство для проверки ли нажата клавиша ВВОД. При нажатии клавиши ВВОД, <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A> свойству `true`, который указывает событие обрабатывается.  
  
 [!code-cpp[KeyPressEventArgs#1](~/samples/snippets/cpp/VS_Snippets_Winforms/KeyPressEventArgs/CPP/form1.cpp#1)]
 [!code-csharp[KeyPressEventArgs#1](~/samples/snippets/csharp/VS_Snippets_Winforms/KeyPressEventArgs/CS/form1.cs#1)]
 [!code-vb[KeyPressEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/KeyPressEventArgs/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Forms.Control.KeyPress" />
        <altmember cref="M:System.Windows.Forms.Control.IsInputChar(System.Char)" />
      </Docs>
    </Member>
  </Members>
</Type>