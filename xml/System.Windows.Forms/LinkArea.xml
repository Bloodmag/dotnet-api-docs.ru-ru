<Type Name="LinkArea" FullName="System.Windows.Forms.LinkArea">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a9a846e08b309a19391842fc2eafa5a763f0b6ac" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30647868" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct LinkArea" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit LinkArea extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.LinkArea" />
  <TypeSignature Language="VB.NET" Value="Public Structure LinkArea" />
  <TypeSignature Language="C++ CLI" Value="public value class LinkArea" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Forms.LinkArea/LinkAreaConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет область в элементе управления <see cref="T:System.Windows.Forms.LinkLabel" />, представляющую гиперссылку в элементе управления.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Существует два способа добавления гиперссылки в текст <xref:System.Windows.Forms.LinkLabel> элемента управления. Вы можете получить доступ к <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A> метод <xref:System.Windows.Forms.LinkLabel.LinkCollection> класса через <xref:System.Windows.Forms.LinkLabel.Links%2A> свойство <xref:System.Windows.Forms.LinkLabel> Добавление нескольких гиперссылок в тексте элемента управления. Если требуется только добавить одну гиперссылку в тексте элемента управления, можно использовать <xref:System.Windows.Forms.LinkLabel.LinkArea%2A> свойство <xref:System.Windows.Forms.LinkLabel>. Это свойство принимает <xref:System.Windows.Forms.LinkArea> , определяющий расположение гиперссылки в тексте элемента управления. Если гиперссылка указана с помощью <xref:System.Windows.Forms.LinkArea> свойство, область ссылки затем добавляется <xref:System.Windows.Forms.LinkLabel.LinkCollection> так же, как и при добавлении ссылки с помощью <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A> метод <xref:System.Windows.Forms.LinkLabel.LinkCollection>.  
  
 <xref:System.Windows.Forms.LinkArea.Length%2A> Свойство указывает количество символов в тексте <xref:System.Windows.Forms.LinkLabel> для включения в области ссылки. <xref:System.Windows.Forms.LinkArea.Start%2A> Свойство указывает первый символ в тексте элемента управления для включения в гиперссылку. Чтобы определить, является ли определенный <xref:System.Windows.Forms.LinkArea> является пустым, можно использовать <xref:System.Windows.Forms.LinkArea.IsEmpty%2A> свойство вместо проверки значений свойств <xref:System.Windows.Forms.LinkArea.Start%2A> и <xref:System.Windows.Forms.LinkArea.Length%2A> свойства.  
  
   
  
## Examples  
 В следующем примере кода показано использование <xref:System.Windows.Forms.LinkLabel> класс с несколькими <xref:System.Windows.Forms.LinkArea> разделы, определенные для отображения метки в форме. В примере показано задание <xref:System.Windows.Forms.Label.AutoSize%2A>, <xref:System.Windows.Forms.LinkLabel.LinkBehavior%2A>, <xref:System.Windows.Forms.LinkLabel.DisabledLinkColor%2A>, <xref:System.Windows.Forms.LinkLabel.LinkColor%2A>, и <xref:System.Windows.Forms.LinkLabel.VisitedLinkColor%2A> свойства для настройки внешнего вида <xref:System.Windows.Forms.LinkLabel>. Первый <xref:System.Windows.Forms.LinkArea> задается с помощью <xref:System.Windows.Forms.LinkLabel.LinkArea%2A?displayProperty=nameWithType> свойство. Дополнительные ссылки добавляются к <xref:System.Windows.Forms.LinkLabel> с помощью <xref:System.Windows.Forms.LinkLabel.LinkCollection.Add%2A?displayProperty=nameWithType> метод. В примере показана обработка <xref:System.Windows.Forms.LinkLabel.LinkClicked> событие путем запуска веб-браузер для гиперссылок и отображение <xref:System.Windows.Forms.MessageBox> для других ссылок.  
  
 [!code-cpp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CPP/linklabel.cpp#1)]
 [!code-csharp[System.Windows.Forms.LinkLabel#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/CS/linklabel.cs#1)]
 [!code-vb[System.Windows.Forms.LinkLabel#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.LinkLabel/VB/linklabel.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Windows.Forms.LinkLabel.LinkArea" />
    <altmember cref="T:System.Windows.Forms.LinkLabel" />
    <altmember cref="T:System.Windows.Forms.LinkLabel.LinkCollection" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinkArea (int start, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 start, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkArea.#ctor(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (start As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinkArea(int start, int length);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="start" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="start">Начинающееся с нуля начальное расположение области ссылки в тексте элемента управления <see cref="T:System.Windows.Forms.LinkLabel" />.</param>
        <param name="length">Число символов после начального, включаемых в область ссылки.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.LinkArea" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkArea.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Объект, который требуется сравнить с данным объектом <see cref="T:System.Windows.Forms.LinkArea" />.</param>
        <summary>Определяет, совпадает ли данный объект <see cref="T:System.Windows.Forms.LinkArea" /> с указанным объектом.</summary>
        <returns>
          Значение <see langword="true" />, если заданный объект равен текущему объекту <see cref="T:System.Windows.Forms.LinkArea" />; в противном случае — значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkArea.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает хэш-код данного экземпляра.</summary>
        <returns>32-разрядное целое число со знаком, являющееся хэш-кодом для данного экземпляра.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.GetHashCode" />
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkArea.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEmpty { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, определяющее, пуст ли объект <see cref="T:System.Windows.Forms.LinkArea" />.</summary>
        <value>
          Значение <see langword="true" />, если указанное начало и длина возвращают пустую область ссылки; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство можно использовать для определения, был ли задан указана допустимая область ссылки в этом объекте вместо вычисления значения <xref:System.Windows.Forms.LinkArea.Length%2A> и <xref:System.Windows.Forms.LinkArea.Start%2A> свойства.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkArea.Length" />
      <MemberSignature Language="VB.NET" Value="Public Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает число знаков в области ссылки.</summary>
        <value>Число знаков в области ссылки, включая пробелы.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы указать текст из <xref:System.Windows.Forms.LinkLabel> для отображения в виде ссылки необходимо установить <xref:System.Windows.Forms.LinkArea.Start%2A> свойство место в тексте, чтобы приступить к созданию по ссылке. После <xref:System.Windows.Forms.LinkArea.Start%2A> установлено, задать значение свойства <xref:System.Windows.Forms.LinkArea.Length%2A> количество символов, включая позиции, указанной в <xref:System.Windows.Forms.LinkArea.Start%2A> свойство, необходимо сделать текст ссылки. Например, если вы хотите сделать первое слово «quick brown fox» текста ссылки, можно задать <xref:System.Windows.Forms.LinkArea.Start%2A> значение ноль (0) и <xref:System.Windows.Forms.LinkArea.Length%2A> свойства трех (3).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.LinkArea.Start" />
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.Forms.LinkArea linkArea1, System.Windows.Forms.LinkArea linkArea2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.Forms.LinkArea linkArea1, valuetype System.Windows.Forms.LinkArea linkArea2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkArea.op_Equality(System.Windows.Forms.LinkArea,System.Windows.Forms.LinkArea)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (linkArea1 As LinkArea, linkArea2 As LinkArea) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::Forms::LinkArea linkArea1, System::Windows::Forms::LinkArea linkArea2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linkArea1" Type="System.Windows.Forms.LinkArea" />
        <Parameter Name="linkArea2" Type="System.Windows.Forms.LinkArea" />
      </Parameters>
      <Docs>
        <param name="linkArea1">Ключ <see cref="T:System.Windows.Forms.LinkArea" /> для сравнения.</param>
        <param name="linkArea2">Ключ <see cref="T:System.Windows.Forms.LinkArea" /> для сравнения.</param>
        <summary>Возвращает значение, показывающее, являются ли эквивалентными экземпляры класса <see cref="T:System.Windows.Forms.LinkArea" />.</summary>
        <returns>
          Значение <see langword="true" />, если два экземпляра класса <see cref="T:System.Windows.Forms.LinkArea" /> эквивалентны; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[Эквивалентный метод для этого оператора <xref:System.Windows.Forms.LinkArea.Equals%28System.Object%29?displayProperty=nameWithType>]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.Forms.LinkArea linkArea1, System.Windows.Forms.LinkArea linkArea2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.Forms.LinkArea linkArea1, valuetype System.Windows.Forms.LinkArea linkArea2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkArea.op_Inequality(System.Windows.Forms.LinkArea,System.Windows.Forms.LinkArea)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (linkArea1 As LinkArea, linkArea2 As LinkArea) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::Forms::LinkArea linkArea1, System::Windows::Forms::LinkArea linkArea2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linkArea1" Type="System.Windows.Forms.LinkArea" />
        <Parameter Name="linkArea2" Type="System.Windows.Forms.LinkArea" />
      </Parameters>
      <Docs>
        <param name="linkArea1">Ключ <see cref="T:System.Windows.Forms.LinkArea" /> для сравнения.</param>
        <param name="linkArea2">Ключ <see cref="T:System.Windows.Forms.LinkArea" /> для сравнения.</param>
        <summary>Возвращает значение, показывающее, являются ли два экземпляра класса <see cref="T:System.Windows.Forms.LinkArea" /> неэквивалентными.</summary>
        <returns>
          Значение <see langword="true" />, если два экземпляра класса <see cref="T:System.Windows.Forms.LinkArea" /> неэквивалентны; в противном случае — значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Start">
      <MemberSignature Language="C#" Value="public int Start { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Start" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.LinkArea.Start" />
      <MemberSignature Language="VB.NET" Value="Public Property Start As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Start { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает начальное расположение области ссылки в тексте элемента управления <see cref="T:System.Windows.Forms.LinkLabel" />.</summary>
        <value>Расположение в тексте элемента управления <see cref="T:System.Windows.Forms.LinkLabel" />, с которого начинается ссылка.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы указать текст из <xref:System.Windows.Forms.LinkLabel> для отображения в виде ссылки необходимо установить <xref:System.Windows.Forms.LinkArea.Start%2A> свойство место в тексте, чтобы приступить к созданию по ссылке. После <xref:System.Windows.Forms.LinkArea.Start%2A> установлено, задать значение свойства <xref:System.Windows.Forms.LinkArea.Length%2A> количество символов, включая позиции, указанной в <xref:System.Windows.Forms.LinkArea.Start%2A> свойство, необходимо сделать текст ссылки. Например, если вы хотите сделать первое слово «quick brown fox» текста ссылки, можно задать <xref:System.Windows.Forms.LinkArea.Start%2A> значение ноль (0) и <xref:System.Windows.Forms.LinkArea.Length%2A> свойства трех (3).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.LinkArea.Length" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.LinkArea.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает полное имя типа этого экземпляра.</summary>
        <returns>Объект типа <see cref="T:System.String" />, содержащий полное имя типа.</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.ValueType.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>