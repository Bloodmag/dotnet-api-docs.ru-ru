<Type Name="ListViewGroupCollection" FullName="System.Windows.Forms.ListViewGroupCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0bcdeaf566c5053057291fcf612b4552616d300e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30650128" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListViewGroupCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListViewGroupCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListViewGroupCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ListViewGroupCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListViewGroupCollection : System::Collections::IList" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет коллекцию групп в элементе управления <see cref="T:System.Windows.Forms.ListView" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> свойства <xref:System.Windows.Forms.ListViewGroupCollection> связанных с <xref:System.Windows.Forms.ListView> элемента управления. Эта коллекция содержит <xref:System.Windows.Forms.ListViewGroup> объекты, представляющие группы, показанные в элементе управления при <xref:System.Windows.Forms.ListView.View%2A?displayProperty=nameWithType> свойству присвоено значение, отличное от <xref:System.Windows.Forms.View.List?displayProperty=nameWithType>. Любые элементы, которые не назначены в группу появится в группе по умолчанию с меткой заголовка «DefaultGroup {0}». Не входит в группу по умолчанию <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> коллекции и не могут быть изменены. В основном полезно при отладке, чтобы убедиться, что все элементы должным образом добавлены в группы. Если нет групп в <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> коллекции, функция группирования отключена.  
  
 Используйте <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> метод, чтобы добавить одну группу в коллекцию. Используйте <xref:System.Windows.Forms.ListViewGroupCollection.Insert%2A> метод, чтобы добавить группу с определенного индекса в коллекции. Чтобы удалить группу, используйте <xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A> метод. Используйте <xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A> метод, чтобы удалить группу с заданным индексом.  
  
 Не удается добавить <xref:System.Windows.Forms.ListViewGroup> в коллекцию несколько раз. Чтобы изменить положение группы в коллекции, он должен быть удален из коллекции, а затем вставляется в нужном месте. Используйте <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> метод, чтобы определить, является ли определенной группе в коллекции. Чтобы получить индекс группы в коллекции, используйте <xref:System.Windows.Forms.ListViewGroupCollection.IndexOf%2A> метод. Можно получить или задать группу с определенного индекса с <xref:System.Windows.Forms.ListViewGroupCollection.Item%2A> индексатора.  
  
 Используйте <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> метод для добавления нескольких групп в коллекции. Можно добавлять несколько групп, либо как массив групп или в качестве <xref:System.Windows.Forms.ListViewGroupCollection> , полученный через <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> свойство другого <xref:System.Windows.Forms.ListView> элемента управления. Используйте <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> метод, чтобы удалить все группы из коллекции.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A>, <xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A>, И <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> методы удаления группы из коллекции, но не удаляйте все элементы из <xref:System.Windows.Forms.ListView> элемента управления. Если нет групп в <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> отключена функция группирования коллекции, а также все элементы в элементе управления отображаются обычным образом.  
  
 <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> И <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> методы полезны, когда необходимо предоставить несколько способов группирования элементов в <xref:System.Windows.Forms.ListView> элемента управления. Чтобы сделать это, создайте несколько массивов групп. Чтобы изменить способ группирования, сначала используйте <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> метод, чтобы удалить все группы из коллекции, а затем <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> метод, чтобы добавить следующий массив групп для отображения.  
  
 Используйте <xref:System.Windows.Forms.ListViewGroupCollection.CopyTo%2A> метод копирования группы в коллекцию в совместимый массив, начиная с указанного индекса. Это полезно, например, если необходимо отсортировать групп в коллекции с помощью <xref:System.Array.Sort%2A?displayProperty=nameWithType> метод. Для этого скопируйте группы в совместимый массив, а затем сортировки массива. Затем используйте <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> метод, чтобы удалить все группы из коллекции, а затем <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> способ добавления отсортированного массива в коллекцию.  
  
 Используйте <xref:System.Windows.Forms.ListViewGroupCollection.Count%2A> свойство, чтобы определить, сколько групп в коллекции. Для прохода по коллекции, используйте <xref:System.Collections.IEnumerator> , возвращенные <xref:System.Windows.Forms.ListViewGroupCollection.GetEnumerator%2A> метод.  
  
> [!NOTE]
>  Функция группирования доступен только в Windows XP и Windows Server 2003 семейства, когда приложение вызывает <xref:System.Windows.Forms.Application.EnableVisualStyles%2A?displayProperty=nameWithType> метод. В предыдущих версиях операционных систем любой код, относящийся к группам, пропускаются и группы не будут. В результате код, зависящий от функции группирования, может работать неправильно. Можно включить проверку, которая определяет, доступна ли функция группирования и предоставить альтернативную функциональность, когда она недоступна. Например может потребоваться альтернативную сортировку, когда в операционных системах, которые не поддерживают сортировку по группам.  
>   
>  Функция метки вставки обеспечивается той же библиотеке, которая предоставляет функцию тем операционной системы. Для проверки доступности этой библиотеки, вызовите <xref:System.Windows.Forms.FeatureSupport.IsPresent%28System.Object%29?displayProperty=nameWithType> перегрузка метода и передайте его в <xref:System.Windows.Forms.OSFeature.Themes?displayProperty=nameWithType> значение.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Windows.Forms.ListView> функция группирования для упорядочения элементов по значениям подэлементов в табличном представлении. Этот вид группирования аналогичен группированию, используемому в проводнике Windows. В примере группы создаются динамически. Для каждого столбца подэлементов одна группа создается для каждого уникального значения подэлемента. Для столбца родительских элементов одна группа создается для каждой уникальной начальной буквы. Сортирует элементы в группах, созданных для этого столбца, щелкнув заголовок столбца. Повторное нажатие один и тот же заголовок столбца изменяет порядок групп.  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#1)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#1)]
 [!code-vb[System.Windows.Forms.ListView.Groups#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListView" />
    <altmember cref="T:System.Windows.Forms.ListViewGroup" />
  </Docs>
  <Members>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Добавляет <see cref="T:System.Windows.Forms.ListViewGroup" /> в коллекцию.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public int Add (System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Add(class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Add(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (group As ListViewGroup) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Add(System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="group">Параметр <see cref="T:System.Windows.Forms.ListViewGroup" /> для добавления в коллекцию.</param>
        <summary>Добавляет указанный параметр <see cref="T:System.Windows.Forms.ListViewGroup" /> в коллекцию.</summary>
        <returns>Индекс группы в коллекции или -1, если группа уже существует в коллекции.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод служит для добавления существующего <xref:System.Windows.Forms.ListViewGroup> в коллекцию. Не удается добавить <xref:System.Windows.Forms.ListViewGroup> в коллекцию несколько раз. При вызове <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> с помощью метода <xref:System.Windows.Forms.ListViewGroup> уже присутствует в коллекции, добавление завершается ошибкой, и возвращается значение -1.  
  
 Чтобы добавить несколько групп в коллекции, используйте <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="group" /> содержит хотя бы один объект <see cref="T:System.Windows.Forms.ListViewItem" />, который принадлежит элементу управления <see cref="T:System.Windows.Forms.ListView" />, отличному от элемента управления, являющегося владельцем этой коллекции <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</exception>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroup Add (string key, string headerText);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewGroup Add(string key, string headerText) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (key As String, headerText As String) As ListViewGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewGroup ^ Add(System::String ^ key, System::String ^ headerText);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="headerText" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Исходное значение свойства <see cref="P:System.Windows.Forms.ListViewGroup.Name" /> для новой группы.</param>
        <param name="headerText">Исходное значение свойства <see cref="P:System.Windows.Forms.ListViewGroup.Header" /> для новой группы.</param>
        <summary>Добавляет новую группу <see cref="T:System.Windows.Forms.ListViewGroup" /> в коллекцию с использованием указанных значений для инициализации свойств <see cref="P:System.Windows.Forms.ListViewGroup.Name" /> и <see cref="P:System.Windows.Forms.ListViewGroup.Header" />.</summary>
        <returns>Новый объект <see cref="T:System.Windows.Forms.ListViewGroup" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Добавляет в коллекцию несколько групп.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListViewGroup[] groups);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListViewGroup[] groups) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.AddRange(System.Windows.Forms.ListViewGroup[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (groups As ListViewGroup())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Windows::Forms::ListViewGroup ^&gt; ^ groups);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groups" Type="System.Windows.Forms.ListViewGroup[]" />
      </Parameters>
      <Docs>
        <param name="groups">Массив типа <see cref="T:System.Windows.Forms.ListViewGroup" />, который указывает группы, добавляемые в коллекцию.</param>
        <summary>Добавляет массив групп в коллекцию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта версия <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> метод для добавления в коллекцию группы массив групп. Этот метод полезен при создании нескольких <xref:System.Windows.Forms.ListViewGroup> объектов и добавить их в коллекцию с помощью одного вызова метода. Чтобы добавить отдельные группы в коллекции, используйте <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> метод.  
  
 Этот метод также является полезным для предоставления нескольких способов группирования элементов в <xref:System.Windows.Forms.ListView> элемента управления. Чтобы сделать это, создайте несколько массивов групп. Чтобы изменить способ группирования, сначала используйте <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> метод, чтобы удалить все группы из коллекции, а затем <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> метод для добавления групп с другим массивом.  
  
 В отличие от <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> метода <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> метод не имеет возвращаемое значение, которое позволяет определить, является ли добавляемой группе в коллекции. Если эти сведения понадобятся, используйте <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> метод перед использованием <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> метод.  
  
   
  
## Examples  
 В следующем примере показано, как <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> метод может использоваться в приложении, которая организует <xref:System.Windows.Forms.ListView> элементов по значениям подэлементов в табличном представлении. Этот вид группирования аналогичен группированию, используемому в проводнике Windows. В примере группы создаются динамически. Для каждого столбца подэлементов одна группа создается для каждого уникального значения подэлемента. Для столбца родительских элементов одна группа создается для каждой уникальной начальной буквы. Группы, созданные для каждого столбца, хранятся в хэш-таблице вместе с текстом подэлемента или начальной буквой. При щелчке заголовка столбца <xref:System.Windows.Forms.ListViewGroupCollection> очищается. Затем извлекается хэш-таблицы, соответствующий выбранному столбцу и каждый элемент назначается в соответствующую группу. Наконец, отсортированный строковый массив групп в хэш-таблице добавляется <xref:System.Windows.Forms.ListViewGroupCollection>.  
  
 Полный пример см. в разделе <xref:System.Windows.Forms.ListViewGroupCollection> Обзор справочном разделе.  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#2)]
 [!code-vb[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="groups" /> содержит хотя бы одну группу хотя бы с одним объектом <see cref="T:System.Windows.Forms.ListViewItem" />, который принадлежит элементу управления <see cref="T:System.Windows.Forms.ListView" />, отличному от элемента управления, являющегося владельцем этой коллекции <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</exception>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListViewGroupCollection groups);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListViewGroupCollection groups) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.AddRange(System.Windows.Forms.ListViewGroupCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (groups As ListViewGroupCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(System::Windows::Forms::ListViewGroupCollection ^ groups);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="groups" Type="System.Windows.Forms.ListViewGroupCollection" />
      </Parameters>
      <Docs>
        <param name="groups">Коллекция <see cref="T:System.Windows.Forms.ListViewGroupCollection" />, содержащая группы для добавления в коллекцию.</param>
        <summary>Добавляет группы из существующего объекта <see cref="T:System.Windows.Forms.ListViewGroupCollection" /> в коллекцию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта версия <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> метод, чтобы добавить элементы <xref:System.Windows.Forms.ListViewGroupCollection> , полученный через <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> свойство другого <xref:System.Windows.Forms.ListView> элемента управления.  
  
 В отличие от <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> метода <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> метод не имеет возвращаемое значение, которое позволяет определить, является ли добавляемой группе в коллекции. Если эти сведения понадобятся, используйте <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> метод перед использованием <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="groups" /> содержит хотя бы одну группу хотя бы с одним объектом <see cref="T:System.Windows.Forms.ListViewItem" />, который принадлежит элементу управления <see cref="T:System.Windows.Forms.ListView" />, отличному от элемента управления, являющегося владельцем этой коллекции <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Удаляет все группы из коллекции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте этот метод, чтобы удалить все группы из коллекции. Обратите внимание, что удаление группы из <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> коллекции не удаляет элементы из <xref:System.Windows.Forms.ListView> элемента управления.  
  
 Этот метод полезен для отключения функции группирования. Если нет групп в <xref:System.Windows.Forms.ListView> управления обычно отображаются элементы. Чтобы удалить отдельные группы из коллекции, используйте <xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A> или <xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A> метод.  
  
 Этот метод также полезен, когда необходимо предоставить несколько способов группировки элементов. Чтобы изменить способ группирования, сначала используйте <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> метод, чтобы удалить все группы из коллекции, а затем <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> метод для добавления групп с другим массивом.  
  
   
  
## Examples  
 В следующем примере показано, как <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> метод может использоваться в приложении, которая организует <xref:System.Windows.Forms.ListView> элементов по значениям подэлементов в табличном представлении. Этот вид группирования аналогичен группированию, используемому в проводнике Windows. В примере группы создаются динамически. Для каждого столбца подэлементов одна группа создается для каждого уникального значения подэлемента. Для столбца родительских элементов одна группа создается для каждой уникальной начальной буквы. Группы, созданные для каждого столбца, хранятся в хэш-таблице вместе с текстом подэлемента или начальной буквой. При щелчке заголовка столбца <xref:System.Windows.Forms.ListViewGroupCollection> очищается. Затем извлекается хэш-таблицы, соответствующий выбранному столбцу и каждый элемент назначается в соответствующую группу. Наконец, отсортированный строковый массив групп в хэш-таблице добавляется <xref:System.Windows.Forms.ListViewGroupCollection>.  
  
 Полный пример см. в разделе <xref:System.Windows.Forms.ListViewGroupCollection> Обзор справочном разделе.  
  
 [!code-cpp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/cpp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CPP/listviewgroupsexample.cpp#2)]
 [!code-csharp[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/CS/listviewgroupsexample.cs#2)]
 [!code-vb[System.Windows.Forms.ListView.Groups#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.ListView.Groups/VB/listviewgroupsexample.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.ListViewGroup value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.ListViewGroup value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Contains(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As ListViewGroup) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::ListViewGroup ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="value">Объект <see cref="T:System.Windows.Forms.ListViewGroup" />, местоположение которого требуется найти в коллекции.</param>
        <summary>Определяет, находится ли указанная группа в данной коллекции.</summary>
        <returns>
          Значение <see langword="true" />, если группа находится в коллекции; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Не удается добавить <xref:System.Windows.Forms.ListViewGroup> в коллекцию несколько раз. Однако попытка добавления копии будут не возникает исключения. Вместо этого добавление не выполняется. <xref:System.Windows.Forms.ListViewGroupCollection.Add%2A> Метод в этом случае возвращает значение – 1. <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> И <xref:System.Windows.Forms.ListViewGroupCollection.Insert%2A> методы, однако не имеют возвращаемых значений. При добавлении группы, используя один из этих методов, используйте <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> метод, чтобы определить, является ли определенный <xref:System.Windows.Forms.ListViewGroup> уже присутствует в коллекции.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">Массив <see cref="T:System.Array" />, в который копируются группы.</param>
        <param name="index">Начальный индекс в массиве, в который копируются группы.</param>
        <summary>Копирует группы из коллекции в одномерный массив <see cref="T:System.Array" />, начиная с указанного индекса в массиве назначения.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Windows.Forms.ListViewGroupCollection.CopyTo%2A> метод копирования групп в коллекции (включая ссылки на элемент, они содержат) совместимый массив, начиная с указанного индекса. Это полезно, например, если необходимо отсортировать групп в коллекции с помощью <xref:System.Array.Sort%2A?displayProperty=nameWithType> метод. Для этого скопируйте группы в совместимый массив, а затем сортировки массива. Затем используйте <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> метод, чтобы удалить все группы из коллекции, а затем <xref:System.Windows.Forms.ListViewGroupCollection.AddRange%2A> способ добавления отсортированного массива в коллекцию.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает число групп в коллекции.</summary>
        <value>Число групп в коллекции.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство можно используйте для определения количества групп в коллекции. Это полезно, когда требуется цикл по коллекции и выполнения одинаковых операций для каждой группы. Можно также использовать <xref:System.Collections.IEnumerator> возвращенных <xref:System.Windows.Forms.ListViewGroupCollection.GetEnumerator%2A> метод для прохода по коллекции.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает перечислитель, который используется для итерации коллекции.</summary>
        <returns>Объект <see cref="T:System.Collections.IEnumerator" />, представляющий коллекцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод полезен, когда необходимо выполнять итерации по коллекции для выполнения той же операции для каждой группы. Также можно использовать цикл по коллекции один раз для каждой группы с помощью <xref:System.Windows.Forms.ListViewGroupCollection.Count%2A> свойства, чтобы определить количество циклов.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.ListViewGroup value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.ListViewGroup value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.IndexOf(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As ListViewGroup) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::ListViewGroup ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="value">Объект <see cref="T:System.Windows.Forms.ListViewGroup" />, местоположение которого требуется найти в коллекции.</param>
        <summary>Возвращает индекс указанного объекта <see cref="T:System.Windows.Forms.ListViewGroup" /> в коллекции.</summary>
        <returns>Начинающийся с нуля индекс группы в коллекции или -1, если группа не содержится в коллекции.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте этот метод для определения индекса группы в коллекции. Это полезно, например, для определения индекса каждой группы при итерации по коллекции с помощью <xref:System.Collections.IEnumerator> возвращенных <xref:System.Windows.Forms.ListViewGroupCollection.GetEnumerator%2A> метод.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Insert(System.Int32,System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="index">Индекс в коллекции, по которому следует вставить группу.</param>
        <param name="group">Объект <see cref="T:System.Windows.Forms.ListViewGroup" /> для вставки в коллекцию.</param>
        <summary>Вставляет в коллекцию заданный объект <see cref="T:System.Windows.Forms.ListViewGroup" /> по указанному индексу.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте этот метод, чтобы вставить существующий <xref:System.Windows.Forms.ListViewGroup> с определенного индекса в коллекции.  
  
 Не удается добавить <xref:System.Windows.Forms.ListViewGroup> в коллекцию несколько раз. При вызове <xref:System.Windows.Forms.ListViewGroupCollection.Insert%2A> метода с помощью группу, которая уже находится в коллекции, вставка просто завершается с ошибкой. Используйте <xref:System.Windows.Forms.ListViewGroupCollection.Contains%2A> метод перед вставкой, чтобы определить, является ли определенной группе в коллекции. Чтобы изменить положение группы в коллекции, сначала удалите его и затем вставить ее по нужному индексу.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Получает или задает объект <see cref="T:System.Windows.Forms.ListViewGroup" /> в коллекции.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroup this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewGroup Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As ListViewGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewGroup ^ default[int] { System::Windows::Forms::ListViewGroup ^ get(int index); void set(int index, System::Windows::Forms::ListViewGroup ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Индекс возвращаемого или задаваемого объекта <see cref="T:System.Windows.Forms.ListViewGroup" /> в коллекции.</param>
        <summary>Получает или задает значение в коллекции <see cref="T:System.Windows.Forms.ListViewGroup" /> по указанному индексу в коллекции.</summary>
        <value>Объект <see cref="T:System.Windows.Forms.ListViewGroup" />, содержащийся в коллекции по указанному индексу.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте это свойство для извлечения группы по указанному индексу в коллекции. При наличии ссылки на объект групповой и требуется индекс используйте <xref:System.Windows.Forms.ListViewGroupCollection.IndexOf%2A> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Значение параметра <paramref name="index" /> меньше 0 или больше либо равно <see cref="P:System.Windows.Forms.ListViewGroupCollection.Count" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewGroup this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewGroup Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As String) As ListViewGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewGroup ^ default[System::String ^] { System::Windows::Forms::ListViewGroup ^ get(System::String ^ key); void set(System::String ^ key, System::Windows::Forms::ListViewGroup ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewGroup</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Имя группы, которую следует вернуть или задать.</param>
        <summary>Получает или задает объект <see cref="T:System.Windows.Forms.ListViewGroup" /> с указанным значением свойства <see cref="P:System.Windows.Forms.ListViewGroup.Name" />.</summary>
        <value>Объект <see cref="T:System.Windows.Forms.ListViewGroup" /> с указанным именем или значения <see langword="null" />, если объекта <see cref="T:System.Windows.Forms.ListViewGroup" /> не существует.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Forms.ListViewGroup group);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Forms.ListViewGroup group) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.Remove(System.Windows.Forms.ListViewGroup)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (group As ListViewGroup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::Forms::ListViewGroup ^ group);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="group" Type="System.Windows.Forms.ListViewGroup" />
      </Parameters>
      <Docs>
        <param name="group">Объект <see cref="T:System.Windows.Forms.ListViewGroup" />, который требуется удалить из коллекции.</param>
        <summary>Удаляет указанный объект <see cref="T:System.Windows.Forms.ListViewGroup" /> из коллекции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте этот метод для удаления группы из коллекции при наличии ссылки на эту группу. Обратите внимание, что удаление группы из <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> коллекции не удаляет элементы из <xref:System.Windows.Forms.ListView> элемента управления.  
  
 Чтобы удалить группу с определенного индекса, используйте <xref:System.Windows.Forms.ListViewGroupCollection.RemoveAt%2A> метод вместо него. Чтобы удалить все группы из коллекции, используйте <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> метод.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewGroup" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Индекс удаляемого объекта <see cref="T:System.Windows.Forms.ListViewGroup" /> в коллекции.</param>
        <summary>Удаляет из коллекции объект <see cref="T:System.Windows.Forms.ListViewGroup" /> по указанному индексу.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте этот метод для удаления группы из коллекции при наличии индекса группы в коллекции. Обратите внимание, что удаление группы из <xref:System.Windows.Forms.ListView.Groups%2A?displayProperty=nameWithType> коллекции не удаляет элементы из <xref:System.Windows.Forms.ListView> элемента управления.  
  
 Чтобы удалить группу с помощью ссылки на объект, используйте <xref:System.Windows.Forms.ListViewGroupCollection.Remove%2A> метод вместо него. Чтобы удалить все группы из коллекции, используйте <xref:System.Windows.Forms.ListViewGroupCollection.Clear%2A> метод. При удалении элемента из коллекции изменяются индексы последующих элементов коллекции. Все сведения об удаленных элементах удаляются.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, является ли доступ к коллекции синхронизированным (потокобезопасным).</summary>
        <value>
          Значение <see langword="true" /> во всех случаях.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект, который можно использовать для синхронизации доступа к коллекции.</summary>
        <value>Объект, используемый для синхронизации коллекции.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Объект <see cref="T:System.Windows.Forms.ListViewGroup" />, добавляемый в список <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</param>
        <summary>Добавляет новый объект <see cref="T:System.Windows.Forms.ListViewGroup" /> в объект <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</summary>
        <returns>Индекс, по которому добавлен параметр <see cref="T:System.Windows.Forms.ListViewGroup" />.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> не является объектом <see cref="T:System.Windows.Forms.ListViewGroup" />.  
  
 - или -  
  
 <paramref name="value" /> содержит хотя бы один объект <see cref="T:System.Windows.Forms.ListViewItem" />, который принадлежит элементу управления <see cref="T:System.Windows.Forms.ListView" />, отличному от элемента управления, являющегося владельцем этой коллекции <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Объект, представляющий группу <see cref="T:System.Windows.Forms.ListViewGroup" />, которую следует найти в коллекции.</param>
        <summary>Определяет, находится ли указанное значение в данной коллекции.</summary>
        <returns>
          Значение <see langword="true" />, если значением <paramref name="value" /> является объект <see cref="T:System.Windows.Forms.ListViewGroup" />, содержащийся в коллекции; в противном случае — <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Искомый объект <see cref="T:System.Windows.Forms.ListViewGroup" /> в коллекции <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</param>
        <summary>Возвращает индекс указанного значения в коллекции.</summary>
        <returns>Индекс (с нуля) <paramref name="value" />, если это значение существует в коллекции; в противном случае -1.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Расположение в коллекции, в которое добавляется объект <see cref="T:System.Windows.Forms.ListViewGroup" />.</param>
        <param name="value">Параметр <see cref="T:System.Windows.Forms.ListViewGroup" /> для добавления в коллекцию.</param>
        <summary>Вставляет объект <see cref="T:System.Windows.Forms.ListViewGroup" /> в коллекцию <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `value` не <xref:System.Windows.Forms.ListViewGroup>, не добавляется в коллекцию.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, имеет ли коллекция фиксированный размер.</summary>
        <value>
          Значение <see langword="false" /> во всех случаях.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, является ли коллекция доступной только для чтения.</summary>
        <value>
          Значение <see langword="false" /> во всех случаях.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Отсчитываемый от нуля индекс элемента, который требуется возвратить или задать.</param>
        <summary>Получает или задает значение в коллекции <see cref="T:System.Windows.Forms.ListViewGroup" /> по указанному индексу в коллекции.</summary>
        <value>Объект <see cref="T:System.Windows.Forms.ListViewGroup" />, представляющий элемент, который расположен в коллекции по указанному индексу.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewGroupCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Элемент <see cref="T:System.Windows.Forms.ListViewGroup" />, который требуется удалить из <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</param>
        <summary>Удаляет объект <see cref="T:System.Windows.Forms.ListViewGroup" /> из коллекции <see cref="T:System.Windows.Forms.ListViewGroupCollection" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>