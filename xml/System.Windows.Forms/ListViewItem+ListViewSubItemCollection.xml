<Type Name="ListViewItem+ListViewSubItemCollection" FullName="System.Windows.Forms.ListViewItem+ListViewSubItemCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="12e926e898f10a12962904d04584b808516851ea" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30650688" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListViewItem.ListViewSubItemCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit ListViewItem/ListViewSubItemCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class ListViewItem.ListViewSubItemCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class ListViewItem::ListViewSubItemCollection : System::Collections::IList" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Представляет коллекцию объектов <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />, хранящихся в <see cref="T:System.Windows.Forms.ListViewItem" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection> хранит <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> объектов, представляющих подэлементы родительского <xref:System.Windows.Forms.ListViewItem> в <xref:System.Windows.Forms.ListView> элемента управления. Подэлементы отображаются только в <xref:System.Windows.Forms.ListView> управления, если указанные столбцы в <xref:System.Windows.Forms.ListView.Columns%2A> свойство <xref:System.Windows.Forms.ListView> управления и когда <xref:System.Windows.Forms.ListView.View%2A> свойство <xref:System.Windows.Forms.ListView> задано для элемента управления <xref:System.Windows.Forms.View.Details>. Порядок элементов в <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection> определяет, какие столбцы подэлементы отображаются в <xref:System.Windows.Forms.ListView> элемента управления.  
  
 Существует несколько способов добавить дополнительные элементы в коллекции. <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> Метод добавляется один <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> в коллекцию. Чтобы добавить несколько элементов в коллекцию, создайте массив <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> объектов и передать его в <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A> метод. Если вы хотите вставить подэлемент в определенное место в коллекции, можно использовать <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert%2A> метода. Чтобы удалить подэлементы, можно использовать <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Remove%2A> метода или <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.RemoveAt%2A> метод, если известно расположение вложенного элемента в коллекции. <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Clear%2A> Метод позволяет удалить все подэлементы из коллекции вместо использования <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Remove%2A> метод для удаления одному за раз.  
  
 Помимо методов и свойств для добавления и удаления подэлементы <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection> также предоставляет методы для поиска в коллекции подэлементов. <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Contains%2A> Метод, который позволяет определить, следует ли <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> является членом коллекции. Если известно, что подэлемента в коллекции, можно использовать <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOf%2A> метод, чтобы определить расположение вложенного элемента в коллекции.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.ListViewItem" />
    <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
    <altmember cref="T:System.Windows.Forms.ListView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewSubItemCollection (System.Windows.Forms.ListViewItem owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.ListViewItem owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.#ctor(System.Windows.Forms.ListViewItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As ListViewItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewSubItemCollection(System::Windows::Forms::ListViewItem ^ owner);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.ListViewItem" />
      </Parameters>
      <Docs>
        <param name="owner">Объект <see cref="T:System.Windows.Forms.ListViewItem" />, которому принадлежит данная коллекция.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Невозможно создать экземпляр этого класса, не связывая его с <xref:System.Windows.Forms.ListViewItem>.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.ListViewItem" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Добавляет подэлемент в коллекцию подэлементов.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem.ListViewSubItem Add (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem/ListViewSubItem Add(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (text As String) As ListViewItem.ListViewSubItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem::ListViewSubItem ^ Add(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem+ListViewSubItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Отображаемый текст для подэлемента.</param>
        <summary>Добавляет в коллекцию подэлемент с заданным текстом.</summary>
        <returns>Объект <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />, добавленный в коллекцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта версия <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> метод позволяет добавить подэлемент в коллекцию, указав текст подэлемента. При вызове этого метода, новый <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> создается с указанным текстом. Затем можно использовать <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> возвращаемый этим методом, чтобы задать свойства и вызывать методы для вложенного элемента управления. Если уже имеется существующий <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> , нужно добавить в коллекцию, можно использовать версию <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> метод, который принимает <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> как параметр или используйте <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert%2A> метод, если вы хотите добавить в определенную вложенного элемента положение в коллекции.  
  
   
  
## Examples  
 В следующем примере кода создается <xref:System.Windows.Forms.ListView> управления с тремя <xref:System.Windows.Forms.ListViewItem> указанные объекты и три <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> объекты, указанные для каждого элемента. В примере также создается <xref:System.Windows.Forms.ColumnHeader> объектов для отображения в представлении details подэлементы. Два <xref:System.Windows.Forms.ImageList> также создаются в примере кода для изображений <xref:System.Windows.Forms.ListViewItem> объектов. Эти <xref:System.Windows.Forms.ImageList> объекты добавляются в <xref:System.Windows.Forms.ListView.LargeImageList%2A> и <xref:System.Windows.Forms.ListView.SmallImageList%2A> свойства. В этом примере следующие свойства в создании <xref:System.Windows.Forms.ListView> управления:  
  
-   <xref:System.Windows.Forms.ListView.View%2A>  
  
-   <xref:System.Windows.Forms.ListView.LabelEdit%2A>  
  
-   <xref:System.Windows.Forms.ListView.AllowColumnReorder%2A>  
  
-   <xref:System.Windows.Forms.ListView.CheckBoxes%2A>  
  
-   <xref:System.Windows.Forms.ListView.FullRowSelect%2A>  
  
-   <xref:System.Windows.Forms.ListView.GridLines%2A>  
  
-   <xref:System.Windows.Forms.ListView.Sorting%2A>  
  
 В этом примере требуется, вы добавили код, чтобы <xref:System.Windows.Forms.Form> и вызвать метод, созданный в примере из конструктора или другого метода на форме. Также в этом примере предполагается, что образы с именем `MySmallImage1`, `MySmallImage2`, `MyLargeImage1`, и `MyLargeImage2` находятся в корневом каталоге диска C.  
  
 [!code-cpp[ListViewExample#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ListViewExample/CPP/form1.cpp#1)]
 [!code-csharp[ListViewExample#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ListViewExample/CS/form1.cs#1)]
 [!code-vb[ListViewExample#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ListViewExample/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem.ListViewSubItem Add (System.Windows.Forms.ListViewItem.ListViewSubItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem/ListViewSubItem Add(class System.Windows.Forms.ListViewItem/ListViewSubItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (item As ListViewItem.ListViewSubItem) As ListViewItem.ListViewSubItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem::ListViewSubItem ^ Add(System::Windows::Forms::ListViewItem::ListViewSubItem ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem+ListViewSubItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem+ListViewSubItem" />
      </Parameters>
      <Docs>
        <param name="item">Параметр <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> для добавления в коллекцию.</param>
        <summary>Добавляет существующий <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> в коллекцию.</summary>
        <returns>Объект <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />, добавленный в коллекцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Данную версию можно использовать <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> метод для добавления существующего <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> в коллекцию. Этот метод обычно используется для повторного использования существующих подэлементов из других <xref:System.Windows.Forms.ListViewItem> объектов. Элементы, добавленные в коллекцию добавляются в конец списка. Чтобы вставить элемент в коллекцию в указанной позиции, используйте <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert%2A> метод. Если требуется добавить массив существующих <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> объектов, которые можно использовать версию <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A> метод, который принимает массив <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> объектов в качестве параметра.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange(System.Windows.Forms.ListViewItem.ListViewSubItem[])" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem.ListViewSubItem Add (string text, System.Drawing.Color foreColor, System.Drawing.Color backColor, System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.ListViewItem/ListViewSubItem Add(string text, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor, class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add(System.String,System.Drawing.Color,System.Drawing.Color,System.Drawing.Font)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Forms::ListViewItem::ListViewSubItem ^ Add(System::String ^ text, System::Drawing::Color foreColor, System::Drawing::Color backColor, System::Drawing::Font ^ font);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem+ListViewSubItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="text">Отображаемый текст для подэлемента.</param>
        <param name="foreColor">
          <see cref="T:System.Drawing.Color" />, представляющий цвет переднего плана данного подэлемента.</param>
        <param name="backColor">
          <see cref="T:System.Drawing.Color" />, представляющий цвет фона данного подэлемента.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" />, представляющий начертание шрифта для отображения текста подэлемента.</param>
        <summary>Добавляет в коллекцию подэлемент с данным текстом, цветом фона и переднего плана, а также параметрами шрифта.</summary>
        <returns>Объект <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />, добавленный в коллекцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта версия <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> метод позволяет добавить подэлемент в коллекцию, указав текст подэлемента. Кроме того, эта версия <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> метод позволяет указать начальный цвет, цвет фона и шрифт текста подэлемента. При вызове этого метода, новый <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> создается с указанным текстом. Затем можно использовать <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> возвращаемый этим методом, чтобы задать свойства и вызывать методы для вложенного элемента управления. Если уже имеется существующий <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> , нужно добавить в коллекцию, можно использовать версию <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> метод, который принимает <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> как параметр или используйте <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert%2A> метод, если вы хотите добавить в определенную вложенного элемента положение в коллекции.  
  
> [!NOTE]
>  По умолчанию подэлементы используют цвет, цвет фона и шрифт, указанный для родительского элемента. Задать <xref:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems%2A?displayProperty=nameWithType> свойства `false` для предотвращения переопределения стили подэлемента стили родительского элемента.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Drawing.Font" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddRange">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Добавляет в коллекцию массив подэлементов.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (string[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(string[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange(System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As String())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::String ^&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.String[]" />
      </Parameters>
      <Docs>
        <param name="items">Массив добавляемых в коллекцию строк, представляющих текст каждого подэлемента.</param>
        <summary>Создает с использованием массива новые подэлементы и добавляет их в данную коллекцию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Данную версию можно использовать <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A> метод, чтобы добавить массив строк в коллекцию, где каждая строка в коллекции представляет текст нового подэлемента. Можно использовать другую версию <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A> метод, который принимает массив строк в качестве параметра для указания цвета переднего плана, цвет фона и шрифт для каждого добавляемого элемента. Если вы хотите повторно использовать существующий <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> объектов и добавления их в коллекцию, можно использовать версию <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A> метод, который принимает массив <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> объектов в качестве параметра.  
  
 Если вы хотите добавить один <xref:System.Windows.Forms.ListViewItem.ListViewSubItem>, используйте <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> метод. Можно также использовать <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert%2A> метод, если требуется добавить один <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> в заданной позиции в коллекции.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (System.Windows.Forms.ListViewItem.ListViewSubItem[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(class System.Windows.Forms.ListViewItem/ListViewSubItem[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange(System.Windows.Forms.ListViewItem.ListViewSubItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddRange (items As ListViewItem.ListViewSubItem())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::Windows::Forms::ListViewItem::ListViewSubItem ^&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Windows.Forms.ListViewItem+ListViewSubItem[]" />
      </Parameters>
      <Docs>
        <param name="items">Массив объектов <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />, добавляемый в коллекцию.</param>
        <summary>Добавляет в коллекцию массив объектов <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод можно использовать для повторного использования подэлементов в другом <xref:System.Windows.Forms.ListViewItem>. Если вы хотите добавить один <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> , используйте <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> метод. Можно также использовать <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert%2A> метод, если требуется добавить один <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> в заданной позиции в коллекции.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem.ListViewSubItem)" />
        <altmember cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public void AddRange (string[] items, System.Drawing.Color foreColor, System.Drawing.Color backColor, System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddRange(string[] items, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor, class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange(System.String[],System.Drawing.Color,System.Drawing.Color,System.Drawing.Font)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddRange(cli::array &lt;System::String ^&gt; ^ items, System::Drawing::Color foreColor, System::Drawing::Color backColor, System::Drawing::Font ^ font);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.String[]" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="items">Массив добавляемых в коллекцию строк, представляющих текст каждого подэлемента.</param>
        <param name="foreColor">
          <see cref="T:System.Drawing.Color" />, представляющий цвет переднего плана данного подэлемента.</param>
        <param name="backColor">
          <see cref="T:System.Drawing.Color" />, представляющий цвет фона данного подэлемента.</param>
        <param name="font">
          <see cref="T:System.Drawing.Font" />, представляющий начертание шрифта для отображения текста подэлемента.</param>
        <summary>Создает с использованием массива новые подэлементы и добавляет их в данную коллекцию с заданными шрифтом, цветом фона и переднего плана.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Данную версию можно использовать <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A> метод, чтобы добавить массив строк в коллекцию, где каждая строка в коллекции представляет текст нового подэлемента. Кроме того, эта версия <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A> метод позволяет указать цвет, цвет фона и шрифт для каждого вложенного элемента. Можно использовать другую версию <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A> метод, который принимает массив строк в качестве параметра, если вы не хотите указать цвет, цвет фона и параметры шрифта для каждого вложенного элемента. Если вы хотите повторно использовать существующий <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> объектов и добавления их в коллекцию, можно использовать версию <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A> метод, который принимает массив <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> объектов в качестве параметра.  
  
 Если вы хотите добавить один <xref:System.Windows.Forms.ListViewItem.ListViewSubItem>, используйте <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> метод. Можно также использовать <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert%2A> метод, если требуется добавить один <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> в заданной позиции в коллекции.  
  
> [!NOTE]
>  По умолчанию подэлементы используют цвет, цвет фона и шрифт, указанный для родительского элемента. Задать <xref:System.Windows.Forms.ListViewItem.UseItemStyleForSubItems%2A?displayProperty=nameWithType> свойства `false` для предотвращения переопределения стили подэлемента стили родительского элемента.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Drawing.Font" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Удаляет из коллекции все подэлементы и родительский объект <see cref="T:System.Windows.Forms.ListViewItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При удалении из коллекции подэлементов, теряются все сведения об удаленных подэлементы. Чтобы удалить из коллекции, используется одному <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Remove%2A> или <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.RemoveAt%2A> метод.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Remove(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.ListViewItem.ListViewSubItem subItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.ListViewItem/ListViewSubItem subItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Contains(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (subItem As ListViewItem.ListViewSubItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::ListViewItem::ListViewSubItem ^ subItem);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subItem" Type="System.Windows.Forms.ListViewItem+ListViewSubItem" />
      </Parameters>
      <Docs>
        <param name="subItem">
          <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />, представляющий подэлемент для поиска в коллекции.</param>
        <summary>Определяет, находится ли указанный подэлемент в данной коллекции.</summary>
        <returns>
          Значение <see langword="true" />, если указанный подэлемент находится в коллекции; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Contains%2A> Метод, который позволяет определить, следует ли <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> является членом коллекции. Если известно, что данный подэлемент находится в коллекции, можно использовать <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOf%2A> метод для определения позиции вложенного элемента в коллекции.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Имя искомого объекта <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />.</param>
        <summary>Определяет, содержится ли в коллекции элемент с указанным ключом.</summary>
        <returns>
          Значение <see langword="true" /> указывает на то, что в коллекции содержится элемент с указанным ключом; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Name%2A> Свойство соответствует ключу для <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> в <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection>.  
  
 При сравнении ключей не учитывает регистр. Если `key` параметр `null` или является пустой строкой, <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.ContainsKey%2A> возвращает `false.`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает число подэлементов в коллекции.</summary>
        <value>Число подэлементов в коллекции.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство позволяет определить число подэлементов, определенных для <xref:System.Windows.Forms.ListViewItem>. Это значение затем можно использовать, когда цикла по значениям коллекции, и необходимо указать число итераций для выполнения цикла.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает перечислитель для итерации по всем элементам в коллекции подэлементов.</summary>
        <returns>Перечислитель <see cref="T:System.Collections.IEnumerator" />, представляющий коллекцию подэлементов.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.ListViewItem.ListViewSubItem subItem);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.ListViewItem/ListViewSubItem subItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOf(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (subItem As ListViewItem.ListViewSubItem) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::ListViewItem::ListViewSubItem ^ subItem);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subItem" Type="System.Windows.Forms.ListViewItem+ListViewSubItem" />
      </Parameters>
      <Docs>
        <param name="subItem">
          <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />, представляющий подэлемент для поиска в коллекции.</param>
        <summary>Возвращает индекс указанного подэлемента в коллекции.</summary>
        <returns>Индекс (с нуля) положения подэлемента в коллекции. Если этого подэлемента нет в данной коллекции, возвращается к отрицательному значению, равному -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOf%2A> Метод позволяет определить положение подэлемента в коллекции. Чтобы определить, содержится ли в коллекции перед вызовом этого метода подэлемент, используйте <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Contains%2A> метод.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Contains(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOfKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfKey (key As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfKey(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Имя элемента, для которого нужно извлечь индекс.</param>
        <summary>Возвращает индекс первого вхождения элемента с указанным ключом в коллекции.</summary>
        <returns>Индекс (с нуля) первого вхождения элемента с заданным ключом.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOfKey%2A> вызывается последовательно, последний возвращается индекс будет проверяться на соответствие ключа сначала, а если нет соответствия, поиск начинается с начала коллекции.  
  
 <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Name%2A> Свойство соответствует ключу для <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> в <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection>.  
  
 При сравнении ключей не учитывает регистр. Если `key` параметр `null` или является пустой строкой, <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOfKey%2A> возвращает значение -1.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Windows.Forms.ListViewItem.ListViewSubItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Windows.Forms.ListViewItem/ListViewSubItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Insert(System.Int32,System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, item As ListViewItem.ListViewSubItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Windows::Forms::ListViewItem::ListViewSubItem ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem+ListViewSubItem" />
      </Parameters>
      <Docs>
        <param name="index">Отсчитываемое от нуля расположение в индексе для вставки элемента.</param>
        <param name="item">
          <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />, представляющий подэлемент для вставки в коллекцию.</param>
        <summary>Вставляет подэлемент в коллекцию по указанному индексу.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод позволяет вставить подэлемент в указанной позиции в <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection>. Чтобы добавить подэлемент, не указывая определенное место, используйте <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add%2A> метод. Если вы хотите добавить в коллекцию массив подэлементов, используйте <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange%2A> метод. Этот метод можно использовать, если вы хотите вставить новый подэлемент в существующую коллекцию суб-элементов.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="index" /> меньше нуля или больше значения свойства <see cref="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Count" /> коллекции <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" />.</exception>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Add(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.AddRange(System.Windows.Forms.ListViewItem.ListViewSubItem[])" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, является ли коллекция доступной только для чтения.</summary>
        <value>
          Значение <see langword="true" />, если коллекция доступна только для чтения; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Данное свойство всегда имеет `false` для этой коллекции.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает элемент из коллекции.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.ListViewItem.ListViewSubItem this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem/ListViewSubItem Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(index As Integer) As ListViewItem.ListViewSubItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Forms::ListViewItem::ListViewSubItem ^ default[int] { System::Windows::Forms::ListViewItem::ListViewSubItem ^ get(int index); void set(int index, System::Windows::Forms::ListViewItem::ListViewSubItem ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem+ListViewSubItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Индекс элемента, извлекаемого из коллекции.</param>
        <summary>Возвращает или задает подэлемент с заданным индексом в коллекции.</summary>
        <value>
          <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />, представляющий подэлемент, расположенный в коллекции по указанному индексу.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод можно использовать для получения <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> хранимых в определенном месте в коллекции. Чтобы определить индекс заданного элемента в коллекции, используйте <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.IndexOf%2A> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="index" /> меньше нуля либо больше или равен значению свойства <see cref="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Count" /> класса <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.ListViewItem.ListViewSubItem this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.ListViewItem/ListViewSubItem Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(key As String) As ListViewItem.ListViewSubItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::ListViewItem::ListViewSubItem ^ default[System::String ^] { System::Windows::Forms::ListViewItem::ListViewSubItem ^ get(System::String ^ key); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.ListViewItem+ListViewSubItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Имя извлекаемого объекта <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />.</param>
        <summary>Возвращает из коллекции элемент с указанным ключом.</summary>
        <value>Объект <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> с указанным ключом.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Name%2A> Свойство соответствует ключу для <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> в <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection>.  
  
 При сравнении ключей не учитывает регистр. Если `key` параметр `null` или является пустой строкой, <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Item%2A> возвращает `null.`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Forms.ListViewItem.ListViewSubItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Forms.ListViewItem/ListViewSubItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Remove(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (item As ListViewItem.ListViewSubItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::Forms::ListViewItem::ListViewSubItem ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Windows.Forms.ListViewItem+ListViewSubItem" />
      </Parameters>
      <Docs>
        <param name="item">Элемент, который нужно удалить из коллекции.</param>
        <summary>Удаляет заданный элемент из коллекции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если вы хотите удалить элемент по указанному индексу или с указанным ключом, используйте <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.RemoveAt%2A> метода или <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.RemoveByKey%2A> метода, соответственно.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Индекс (с нуля) подэлемента, который требуется удалить.</param>
        <summary>Удаляет из коллекции подэлемент с заданным индексом.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При удалении подэлемента из коллекции индексы изменяются последующих суб-элементов в коллекции. Все сведения об удаленных вложенного элемента удаляется. Этот метод можно использовать для удаления определенного подэлемента из коллекции, указав индекс подэлемента, который требуется удалить из коллекции. Чтобы указать удаляемый вместо индекса для вложенного элемента, используйте <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Remove%2A> метод. Чтобы удалить все подэлементы из коллекции, используйте <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Clear%2A> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="index" /> меньше нуля либо больше или равен значению свойства <see cref="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Count" /> класса <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" />.</exception>
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Remove(System.Windows.Forms.ListViewItem.ListViewSubItem)" />
        <altmember cref="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="RemoveByKey">
      <MemberSignature Language="C#" Value="public virtual void RemoveByKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveByKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.RemoveByKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveByKey (key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveByKey(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Имя элемента для удаления из коллекции.</param>
        <summary>Удаляет элемент с заданным ключом из коллекции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.ListViewItem.ListViewSubItem.Name%2A> Свойство соответствует ключу для <xref:System.Windows.Forms.ListViewItem.ListViewSubItem> в <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection>.  
  
 При сравнении ключей не учитывает регистр.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (dest As Array, index As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ dest, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest">Массив <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />.</param>
        <param name="index">Отсчитываемый от нуля индекс в массиве, с которого начинается копирование.</param>
        <summary>Копирует элемент и коллекцию подэлементов в массив.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArrayTypeMismatchException">Установленный массив не совместим с типом <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, является ли доступ к коллекции синхронизированным (потокобезопасным).</summary>
        <value>
          Значение <see langword="true" /> во всех случаях.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект, который можно использовать для синхронизации доступа к коллекции.</summary>
        <value>Объект, используемый для синхронизации коллекции.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (item As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ item) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">Параметр <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> для добавления в коллекцию.</param>
        <summary>Добавляет существующий <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> в коллекцию.</summary>
        <returns>Индекс (с нуля), который показывает расположениe объекта, добавленного в коллекцию.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="item" /> не является объектом <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object subItem);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object subItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (subItem As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ subItem) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="subItem">Объект, представляющий подэлемент для поиска в коллекции.</param>
        <summary>Определяет, находится ли указанный подэлемент в данной коллекции.</summary>
        <returns>
          Значение <see langword="true" />, если указанный подэлемент находится в коллекции; в противном случае — значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object subItem);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object subItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (subItem As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ subItem) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="subItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="subItem">Объект, представляющий подэлемент для поиска в коллекции.</param>
        <summary>Возвращает индекс указанного подэлемента в коллекции.</summary>
        <returns>Индекс (с нуля) подэлемента, если он присутствует в коллекции; в противном случае — значение -1.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, item As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ item) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Отсчитываемое от нуля расположение в индексе для вставки элемента.</param>
        <param name="item">Объект, представляющий подэлемент, вставляемый в коллекцию.</param>
        <summary>Вставляет подэлемент в коллекцию по указанному индексу.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="item" /> не является объектом <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Индекс параметра меньше либо больше нуля или равен значению свойства Count класса <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItemCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, имеет ли коллекция фиксированный размер.</summary>
        <value>
          Значение <see langword="false" /> во всех случаях.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Отсчитываемый от нуля индекс элемента, который требуется возвратить или задать.</param>
        <summary>Получает или задает значение в коллекции <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" /> по указанному индексу в коллекции.</summary>
        <value>Объект <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />, представляющий элемент, который расположен в коллекции по указанному индексу.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Индекс параметра меньше либо больше нуля или равен значению свойства Count класса <see cref="T:System.Windows.Forms.ListView.ColumnHeaderCollection" />.</exception>
        <exception cref="T:System.ArgumentException">Этот объект — не <see cref="T:System.Windows.Forms.ListViewItem.ListViewSubItem" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object item);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.ListViewItem.ListViewSubItemCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (item As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ item) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="item">Элемент, который нужно удалить из коллекции.</param>
        <summary>Удаляет заданный элемент из коллекции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.ListViewItem.ListViewSubItemCollection> приведен к типу интерфейса <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>