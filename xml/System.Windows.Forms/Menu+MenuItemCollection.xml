<Type Name="Menu+MenuItemCollection" FullName="System.Windows.Forms.Menu+MenuItemCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="eaff18f615f61a33c96dbd6729979c7c2951ae0d" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30650418" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Menu.MenuItemCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit Menu/MenuItemCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.Menu.MenuItemCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class Menu.MenuItemCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class Menu::MenuItemCollection : System::Collections::IList" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет коллекцию объектов <see cref="T:System.Windows.Forms.MenuItem" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот класс представляет коллекцию <xref:System.Windows.Forms.MenuItem> объектов, хранящихся в <xref:System.Windows.Forms.MainMenu>, <xref:System.Windows.Forms.ContextMenu>, или <xref:System.Windows.Forms.MenuItem>. Для <xref:System.Windows.Forms.MainMenu> и <xref:System.Windows.Forms.ContextMenu> классы, эта коллекция представляет всю структуру меню для элемента управления. Для <xref:System.Windows.Forms.MenuItem> класса, эта коллекция представляет список элементов вложенного меню, связанное с <xref:System.Windows.Forms.MenuItem>.  
  
 <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A> И <xref:System.Windows.Forms.Menu.MenuItemCollection.Remove%2A> методы позволяют добавлять и удалять отдельные элементы из коллекции. Можно также использовать <xref:System.Windows.Forms.Menu.MenuItemCollection.Clear%2A> метод для удаления всех элементов меню из коллекции.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public MenuItemCollection (System.Windows.Forms.Menu owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.Menu owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.#ctor(System.Windows.Forms.Menu)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As Menu)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; MenuItemCollection(System::Windows::Forms::Menu ^ owner);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.Menu" />
      </Parameters>
      <Docs>
        <param name="owner">Объект  <see cref="T:System.Windows.Forms.Menu" />, являющийся владельцем данной коллекции.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.Menu.MenuItemCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для этого класса требуется связать коллекцию с помощью класса, производного от <xref:System.Windows.Forms.Menu>, такие как <xref:System.Windows.Forms.MainMenu>, <xref:System.Windows.Forms.ContextMenu>, или <xref:System.Windows.Forms.MenuItem> класса. Поскольку необходимо указать меню, связанное с этой коллекцией, нельзя создать несколько меню наборов элементов и связать их с меню, при необходимости. Для перехода между элементами меню, связанное с меню, необходимо очистить коллекцию элементов и добавить элементы меню, отображаемые в коллекцию.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.MainMenu" />
        <altmember cref="T:System.Windows.Forms.ContextMenu" />
        <altmember cref="T:System.Windows.Forms.MenuItem" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Добавляет в коллекцию новый объект <see cref="T:System.Windows.Forms.MenuItem" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.MenuItem Add (string caption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.MenuItem Add(string caption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (caption As String) As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::MenuItem ^ Add(System::String ^ caption);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MenuItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="caption" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="caption">Надпись элемента меню.</param>
        <summary>Добавляет новый объект <see cref="T:System.Windows.Forms.MenuItem" /> с заданной надписью в конец текущего меню.</summary>
        <returns>Объект <see cref="T:System.Windows.Forms.MenuItem" />, представляющий элемент меню, добавляемый в коллекцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Windows.Forms.MenuItem> может содержаться только в одном меню одновременно и невозможно добавить более одного раза то же меню. Для повторного использования <xref:System.Windows.Forms.MenuItem> в более чем одном меню используйте <xref:System.Windows.Forms.MenuItem.CloneMenu%2A> метод <xref:System.Windows.Forms.MenuItem> класса. Чтобы удалить <xref:System.Windows.Forms.MenuItem> , который был добавлен ранее, используйте <xref:System.Windows.Forms.Menu.MenuItemCollection.Remove%2A> метод.  
  
   
  
## Examples  
 В следующем примере кода используется производный класс <xref:System.Windows.Forms.MainMenu> для создания главного меню, `mainMenu1`, имеющего два <xref:System.Windows.Forms.MenuItem> объектов, добавленных в его <xref:System.Windows.Forms.Menu.MenuItems%2A> коллекции. Затем код присваивает `mainMenu1` для <xref:System.Windows.Forms.Form.Menu%2A> свойство <xref:System.Windows.Forms.Form>. В этом примере требуется, определенный в этом примере код расположен в форме.  
  
 [!code-cpp[Classic Menu.MenuItemCollection.Add Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Menu.MenuItemCollection.Add Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Menu.MenuItemCollection.Add Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Menu.MenuItemCollection.Add Example/CS/source.cs#1)]
 [!code-vb[Classic Menu.MenuItemCollection.Add Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Menu.MenuItemCollection.Add Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Menu.MenuItemCollection.Remove(System.Windows.Forms.MenuItem)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add (System.Windows.Forms.MenuItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(class System.Windows.Forms.MenuItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.Add(System.Windows.Forms.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (item As MenuItem) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Add(System::Windows::Forms::MenuItem ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Windows.Forms.MenuItem" />
      </Parameters>
      <Docs>
        <param name="item">Добавляемый объект <see cref="T:System.Windows.Forms.MenuItem" />.</param>
        <summary>Добавляет ранее созданный объект <see cref="T:System.Windows.Forms.MenuItem" /> в конец текущего меню.</summary>
        <returns>Начинающийся с нуля индекс элемента, хранящегося в коллекции.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Windows.Forms.MenuItem> может содержаться только в одном меню одновременно и невозможно добавить более одного раза то же меню. Для повторного использования <xref:System.Windows.Forms.MenuItem> в более чем одном меню используйте <xref:System.Windows.Forms.MenuItem.CloneMenu%2A> метод <xref:System.Windows.Forms.MenuItem> класса. Чтобы удалить <xref:System.Windows.Forms.MenuItem> , который был добавлен ранее, используйте <xref:System.Windows.Forms.Menu.MenuItemCollection.Remove%2A> метод.  
  
 Эта версия <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A> метод позволяет добавить ранее созданные <xref:System.Windows.Forms.MenuItem> объектов меню в конец коллекции элементов.  
  
   
  
## Examples  
 В следующем примере кода создается экземпляр производного класса <xref:System.Windows.Forms.MainMenu>и добавляет <xref:System.Windows.Forms.MenuItem> в его коллекцию <xref:System.Windows.Forms.MenuItem> объектов. В этом примере требуется, что метод, определенный в этом примере, расположенного внутри класса для формы и вызывается методом из этого класса.  
  
 [!code-cpp[Classic Menu.MenuItems Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Menu.MenuItems Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Menu.MenuItems Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Menu.MenuItems Example/CS/source.cs#1)]
 [!code-vb[Classic Menu.MenuItems Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Menu.MenuItems Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Menu.MenuItemCollection.Remove(System.Windows.Forms.MenuItem)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add (int index, System.Windows.Forms.MenuItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(int32 index, class System.Windows.Forms.MenuItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.Add(System.Int32,System.Windows.Forms.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (index As Integer, item As MenuItem) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Add(int index, System::Windows::Forms::MenuItem ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Windows.Forms.MenuItem" />
      </Parameters>
      <Docs>
        <param name="index">Позиция, в которую добавляется новый элемент.</param>
        <param name="item">Добавляемый объект <see cref="T:System.Windows.Forms.MenuItem" />.</param>
        <summary>Добавляет ранее созданный объект <see cref="T:System.Windows.Forms.MenuItem" /> в позицию с заданным индексом в коллекции элементов меню.</summary>
        <returns>Начинающийся с нуля индекс элемента, хранящегося в коллекции.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Windows.Forms.MenuItem> может содержаться только в одном меню одновременно и невозможно добавить более одного раза то же меню. Для повторного использования <xref:System.Windows.Forms.MenuItem> в более чем одном меню используйте <xref:System.Windows.Forms.MenuItem.CloneMenu%2A> метод <xref:System.Windows.Forms.MenuItem> класса. Чтобы удалить <xref:System.Windows.Forms.MenuItem> , который был добавлен ранее, используйте <xref:System.Windows.Forms.Menu.MenuItemCollection.Remove%2A> метод.  
  
 Эта версия <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A> метод позволяет добавить ранее созданные <xref:System.Windows.Forms.MenuItem> объекты в расположение указанного индекса в коллекции. Любой <xref:System.Windows.Forms.MenuItem> располагающийся по данному индексу и все <xref:System.Windows.Forms.MenuItem> объекты после этого индекса, перемещаются в далее наименьшим индексом в коллекции.  
  
   
  
## Examples  
 В следующем примере кода создается экземпляр производного класса <xref:System.Windows.Forms.MainMenu>и добавляет <xref:System.Windows.Forms.MenuItem> объект в его коллекцию <xref:System.Windows.Forms.MenuItem> объектов в определенном месте в меню коллекции элементов. В этом примере требуется, что метод, определенный в этом примере, расположенного внутри класса для формы и вызывается методом из этого класса.  
  
 [!code-cpp[Classic Menu.MenuItemCollection.Add4 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Menu.MenuItemCollection.Add4 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Menu.MenuItemCollection.Add4 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Menu.MenuItemCollection.Add4 Example/CS/source.cs#1)]
 [!code-vb[Classic Menu.MenuItemCollection.Add4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Menu.MenuItemCollection.Add4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">Добавляемый объект <see cref="T:System.Windows.Forms.MenuItem" /> уже используется.</exception>
        <exception cref="T:System.ArgumentException">Индекс, переданный в параметре <paramref name="index" />, больше размера данной коллекции.</exception>
        <altmember cref="M:System.Windows.Forms.Menu.MenuItemCollection.Remove(System.Windows.Forms.MenuItem)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.MenuItem Add (string caption, EventHandler onClick);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.MenuItem Add(string caption, class System.EventHandler onClick) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.Add(System.String,System.EventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (caption As String, onClick As EventHandler) As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::MenuItem ^ Add(System::String ^ caption, EventHandler ^ onClick);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MenuItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="onClick" Type="System.EventHandler" />
      </Parameters>
      <Docs>
        <param name="caption">Надпись элемента меню.</param>
        <param name="onClick">Объект <see cref="T:System.EventHandler" />, представляющий обработчик событий, вызываемый, когда пользователь щелкает этот элемент мышью или нажимает сочетание клавиш, соответствующее данному элементу меню.</param>
        <summary>Добавляет в конец текущего меню новый объект <see cref="T:System.Windows.Forms.MenuItem" /> с заданной надписью и указанным обработчиком для событий <see cref="E:System.Windows.Forms.MenuItem.Click" />.</summary>
        <returns>Объект <see cref="T:System.Windows.Forms.MenuItem" />, представляющий элемент меню, добавляемый в коллекцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Windows.Forms.MenuItem> может содержаться только в одном меню одновременно и невозможно добавить более одного раза то же меню. Для повторного использования <xref:System.Windows.Forms.MenuItem> в более чем одном меню используйте <xref:System.Windows.Forms.MenuItem.CloneMenu%2A> метод <xref:System.Windows.Forms.MenuItem> класса. Чтобы удалить <xref:System.Windows.Forms.MenuItem> , который был добавлен ранее, используйте <xref:System.Windows.Forms.Menu.MenuItemCollection.Remove%2A> метод.  
  
 Эта версия <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A> метод позволяет указать заголовок элемента меню и делегата для обработки <xref:System.Windows.Forms.MenuItem.Click> событий. Данную версию можно использовать <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A> метод, если приложение уже имеет обработчик событий для обработки <xref:System.Windows.Forms.MenuItem.Click> событий.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.MenuItem.Click> Событие не вызывается для <xref:System.Windows.Forms.MenuItem> , содержащий элементы вложенного меню.  
  
   
  
## Examples  
 В следующем примере кода используется производный класс <xref:System.Windows.Forms.MainMenu> для создания главного меню, `mainMenu1`, имеющего два <xref:System.Windows.Forms.MenuItem> объектов, добавленных в его <xref:System.Windows.Forms.Menu.MenuItems%2A> коллекции. Код использует эту версию <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A> метод для определения обработчика событий для <xref:System.Windows.Forms.MenuItem.Click> событий второго элемента меню, добавляемый в коллекцию. Затем код присваивает `mainMenu1` для <xref:System.Windows.Forms.Form.Menu%2A> свойство <xref:System.Windows.Forms.Form>. В этом примере требуется, определенный в этом примере код находится в форме.  
  
 [!code-cpp[Classic Menu.MenuItemCollection.Add1 Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Menu.MenuItemCollection.Add1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Menu.MenuItemCollection.Add1 Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Menu.MenuItemCollection.Add1 Example/CS/source.cs#1)]
 [!code-vb[Classic Menu.MenuItemCollection.Add1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Menu.MenuItemCollection.Add1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Menu.MenuItemCollection.Remove(System.Windows.Forms.MenuItem)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.MenuItem Add (string caption, System.Windows.Forms.MenuItem[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.MenuItem Add(string caption, class System.Windows.Forms.MenuItem[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.Add(System.String,System.Windows.Forms.MenuItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (caption As String, items As MenuItem()) As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::MenuItem ^ Add(System::String ^ caption, cli::array &lt;System::Windows::Forms::MenuItem ^&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MenuItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="caption" Type="System.String" />
        <Parameter Name="items" Type="System.Windows.Forms.MenuItem[]" />
      </Parameters>
      <Docs>
        <param name="caption">Надпись элемента меню.</param>
        <param name="items">Массив объектов <see cref="T:System.Windows.Forms.MenuItem" />, которые будет содержать этот объект <see cref="T:System.Windows.Forms.MenuItem" />.</param>
        <summary>Добавляет в конец этого меню новый объект <see cref="T:System.Windows.Forms.MenuItem" /> с заданной надписью, обработчиком событий <see cref="E:System.Windows.Forms.MenuItem.Click" /> и элементами.</summary>
        <returns>Объект <see cref="T:System.Windows.Forms.MenuItem" />, представляющий элемент меню, добавляемый в коллекцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Windows.Forms.MenuItem> может содержаться только в одном меню одновременно и невозможно добавить более одного раза то же меню. Для повторного использования <xref:System.Windows.Forms.MenuItem> в более чем одном меню используйте <xref:System.Windows.Forms.MenuItem.CloneMenu%2A> метод <xref:System.Windows.Forms.MenuItem> класса. Чтобы удалить <xref:System.Windows.Forms.MenuItem> , который был добавлен ранее, используйте <xref:System.Windows.Forms.Menu.MenuItemCollection.Remove%2A> метод.  
  
 Эта версия <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A> метод позволяет указать заголовок элемента меню и делегата, который будет обрабатывать его <xref:System.Windows.Forms.MenuItem.Click> событий. Данную версию можно использовать <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A> метод, если приложение уже имеет обработчик событий для обработки <xref:System.Windows.Forms.MenuItem.Click> событий. Эта версия метода также позволяет задать массив ранее созданных <xref:System.Windows.Forms.MenuItem> объекты, которые требуется добавить в коллекцию. Эту функцию можно использовать для повторного использования существующих <xref:System.Windows.Forms.MenuItem> объекты, которые созданы с помощью <xref:System.Windows.Forms.MenuItem.CloneMenu%2A> метод. Если `items` параметр не является пустым или `null`, <xref:System.Windows.Forms.MenuItem> , добавляемый в коллекцию будет содержать подменю.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.MenuItem.Click> Событие не вызывается для <xref:System.Windows.Forms.MenuItem> , содержащий элементы вложенного меню.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Menu.MenuItemCollection.Remove(System.Windows.Forms.MenuItem)" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public virtual void AddRange (System.Windows.Forms.MenuItem[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRange(class System.Windows.Forms.MenuItem[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.AddRange(System.Windows.Forms.MenuItem[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddRange (items As MenuItem())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddRange(cli::array &lt;System::Windows::Forms::MenuItem ^&gt; ^ items);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Windows.Forms.MenuItem[]" />
      </Parameters>
      <Docs>
        <param name="items">Массив объектов <see cref="T:System.Windows.Forms.MenuItem" />, представляющий элементы меню, добавляемые в коллекцию.</param>
        <summary>Добавляет в коллекцию массив ранее созданных объектов <see cref="T:System.Windows.Forms.MenuItem" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод используется для быстрого добавления группы ранее созданных <xref:System.Windows.Forms.MenuItem> объекты в коллекцию вместо вручную добавлять каждый <xref:System.Windows.Forms.MenuItem> в коллекцию с помощью <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A> метод. Если коллекция уже содержит <xref:System.Windows.Forms.MenuItem> объектов, вызов этого метода будет добавлен новый <xref:System.Windows.Forms.MenuItem> объекты в конец коллекции.  
  
   
  
## Examples  
 В следующем примере кода создается массив и копирует <xref:System.Windows.Forms.Menu.MenuItemCollection> объектов из двух <xref:System.Windows.Forms.MenuItem> объекты в массиве. В примере затем копируется массив <xref:System.Windows.Forms.MenuItem> объектов в коллекции элементов управления для <xref:System.Windows.Forms.ContextMenu> с именем `contextMenu1`. В этом примере требуется, что имеются два <xref:System.Windows.Forms.MenuItem> объектов, содержащих элементы вложенного меню с именем `menuItem1` и `menuItem2`.  
  
 [!code-cpp[Classic Menu.MenuItemCollection.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Menu.MenuItemCollection.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Menu.MenuItemCollection.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Menu.MenuItemCollection.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic Menu.MenuItemCollection.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Menu.MenuItemCollection.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.Menu.MenuItemCollection.Add(System.String)" />
        <altmember cref="M:System.Windows.Forms.Menu.MenuItemCollection.CopyTo(System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Удаляет все объекты <see cref="T:System.Windows.Forms.MenuItem" /> из коллекции элементов меню.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод позволяет очистить всю коллекцию пунктов меню из меню. Чтобы удалить отдельный элемент из коллекции, используйте <xref:System.Windows.Forms.Menu.MenuItemCollection.Remove%2A> метод. Для добавления новых <xref:System.Windows.Forms.MenuItem> объекты в коллекцию, используйте <xref:System.Windows.Forms.Menu.MenuItemCollection.Add%2A> метод.  
  
   
  
## Examples  
 В этом примере создается главного меню, `myMainMenu`, с двумя <xref:System.Windows.Forms.MenuItem> объектов, `File` и `Edit`. `File` Меню содержит три элемента вложенного меню `New`, `Open`, и `Exit`. С помощью `Clear` метод, сначала удалить все <xref:System.Windows.Forms.MenuItem> объекты в `File` коллекцию меню. Эта программа требует, что вы уже создали <xref:System.Windows.Forms.Form> с именем `Form1`.  
  
 [!code-cpp[ClearItems#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ClearItems/CPP/clearitems.cpp#1)]
 [!code-csharp[ClearItems#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ClearItems/CS/clearitems.cs#1)]
 [!code-vb[ClearItems#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ClearItems/VB/clearitems.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Menu.MenuItems" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.MenuItem value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.MenuItem value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.Contains(System.Windows.Forms.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (value As MenuItem) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::MenuItem ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.MenuItem" />
      </Parameters>
      <Docs>
        <param name="value">Объект <see cref="T:System.Windows.Forms.MenuItem" />, местоположение которого требуется найти в коллекции.</param>
        <summary>Определяет, является ли заданный объект <see cref="T:System.Windows.Forms.MenuItem" /> членом данной коллекции.</summary>
        <returns>
          Значение <see langword="true" />, если объект <see cref="T:System.Windows.Forms.MenuItem" /> является членом коллекции; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод позволяет определить, следует ли <xref:System.Windows.Forms.MenuItem> членом коллекции, прежде чем пытаться выполнять операции над <xref:System.Windows.Forms.MenuItem>. Этот метод можно использовать, чтобы убедиться, что <xref:System.Windows.Forms.MenuItem> был добавлен или все еще является членом коллекции.  
  
   
  
## Examples  
 В этом примере создается главного меню, `myMainMenu`, с двумя <xref:System.Windows.Forms.MenuItem> объектов, `File` и `Edit`. `File` Меню содержит три элемента вложенного меню `New`, `Open`, и `Exit`. С помощью <xref:System.Windows.Forms.Menu.MenuItemCollection.Contains%2A> метод, то проверьте `File` меню коллекция содержит элемент `Open`. Если этот элемент существует, результат отображается в текстовом поле. Эта программа требует, что вы уже создали <xref:System.Windows.Forms.Form> с именем `Form1`.  
  
 [!code-cpp[ContainsItems#1](~/samples/snippets/cpp/VS_Snippets_Winforms/ContainsItems/CPP/containsitems.cpp#1)]
 [!code-csharp[ContainsItems#1](~/samples/snippets/csharp/VS_Snippets_Winforms/ContainsItems/CS/containsitems.cs#1)]
 [!code-vb[ContainsItems#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/ContainsItems/VB/containsitems.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Имя искомого элемента.</param>
        <summary>Определяет, содержится ли в коллекции элемент с указанным ключом.</summary>
        <returns>
          Значение <see langword="true" />, если коллекция содержит элемент с указанным ключом, в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Menu.Name%2A> Свойство соответствует ключу для <xref:System.Windows.Forms.MenuItem> в <xref:System.Windows.Forms.Menu.MenuItemCollection>.  
  
 При сравнении ключей не учитывает регистр. Если `key` параметр `null` или является пустой строкой, <xref:System.Windows.Forms.Menu.MenuItemCollection.ContainsKey%2A> возвращает `false.`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (dest As Array, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ dest, int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest">Массив назначения.</param>
        <param name="index">Индекс массива назначения, с которого начинается сохранение.</param>
        <summary>Копирует коллекцию целиком в заданное место существующего массива.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод можно использовать для объединения <xref:System.Windows.Forms.MenuItem> объекты из нескольких коллекций в одном массиве. Эта функция позволяет легко объединять два или несколько наборов элементов меню для использования в <xref:System.Windows.Forms.ContextMenu> или <xref:System.Windows.Forms.MainMenu>.  
  
   
  
## Examples  
 В следующем примере кода создается массив и копирует <xref:System.Windows.Forms.Menu.MenuItemCollection> объектов из двух <xref:System.Windows.Forms.MenuItem> объекты в массиве. В примере затем копируется массив <xref:System.Windows.Forms.MenuItem> объектов в коллекции элементов управления для <xref:System.Windows.Forms.ContextMenu> с именем `contextMenu1`. В этом примере требуется, что имеются два <xref:System.Windows.Forms.MenuItem> объектов, содержащих элементы вложенного меню с именем `menuItem1` и `menuItem2`.  
  
 [!code-cpp[Classic Menu.MenuItemCollection.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Menu.MenuItemCollection.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Menu.MenuItemCollection.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Menu.MenuItemCollection.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic Menu.MenuItemCollection.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Menu.MenuItemCollection.CopyTo Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Menu.MenuItemCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, показывающее полное число объектов <see cref="T:System.Windows.Forms.MenuItem" /> в коллекции.</summary>
        <value>Количество объектов <see cref="T:System.Windows.Forms.MenuItem" /> в коллекции.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Count` Свойство содержит количество <xref:System.Windows.Forms.MenuItem> объектов, назначенных в коллекцию. Можно использовать `Count` значением свойства в качестве верхней границы цикла для перебора элементов коллекции. Помните, значение индекса в коллекции является отсчитываемый от нуля индекс, поэтому необходимо вычесть единицу из переменной цикла. Если это не сделать, будет превышена верхняя граница коллекции и создает исключение.  
  
   
  
## Examples  
 В следующем примере кода показано, как создать основное меню, `myMainMenu`, с одним <xref:System.Windows.Forms.MenuItem>, `File`, который имеет три элемента вложенного меню: `New`, `Open`, и `Exit`. С помощью `Count` свойства, подсчета количества объектов в `File` меню и это число отображается в окне сообщения. В этом примере требуется, что вы уже создали <xref:System.Windows.Forms.Form> с именем `Form1`.  
  
 [!code-cpp[CountProperty#1](~/samples/snippets/cpp/VS_Snippets_Winforms/CountProperty/CPP/countitems.cpp#1)]
 [!code-csharp[CountProperty#1](~/samples/snippets/csharp/VS_Snippets_Winforms/CountProperty/CS/countitems.cs#1)]
 [!code-vb[CountProperty#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/CountProperty/VB/countitems.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.Menu.MenuItems" />
      </Docs>
    </Member>
    <Member MemberName="Find">
      <MemberSignature Language="C#" Value="public System.Windows.Forms.MenuItem[] Find (string key, bool searchAllChildren);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Forms.MenuItem[] Find(string key, bool searchAllChildren) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.Find(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Find (key As String, searchAllChildren As Boolean) As MenuItem()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::Windows::Forms::MenuItem ^&gt; ^ Find(System::String ^ key, bool searchAllChildren);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MenuItem[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="searchAllChildren" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="key">Имя искомого элемента меню.</param>
        <param name="searchAllChildren">
          Значение <see langword="true" />, если требуется найти дочерние элементы меню; в противном случае — значение <see langword="false" />.</param>
        <summary>Производит поиск элемента с заданным ключом, ведя поиск, при необходимости, для элементов вложенного меню.</summary>
        <returns>Массив объектов <see cref="T:System.Windows.Forms.MenuItem" />, свойство <see cref="P:System.Windows.Forms.Menu.Name" /> у которых соответствует заданному значению <paramref name="key" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При сравнении ключей не учитывает регистр. Если `key` параметр `null` или является пустой строкой или не найдено совпадений <xref:System.Windows.Forms.Menu.MenuItemCollection.Find%2A> возвращает пустой массив.  
  
 <xref:System.Windows.Forms.Menu.Name%2A> Свойство соответствует ключу для <xref:System.Windows.Forms.MenuItem> в <xref:System.Windows.Forms.Menu.MenuItemCollection>.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Параметр <paramref name="key" /> имеет значение <see langword="null" /> или является пустой строкой.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает перечислитель, который можно использовать для итерации по коллекции элементов меню.</summary>
        <returns>Объект <see cref="T:System.Collections.IEnumerator" />, представляющий коллекцию элементов меню.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.MenuItem value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.MenuItem value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.IndexOf(System.Windows.Forms.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (value As MenuItem) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::MenuItem ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.MenuItem" />
      </Parameters>
      <Docs>
        <param name="value">Объект <see cref="T:System.Windows.Forms.MenuItem" />, местоположение которого требуется найти в коллекции.</param>
        <summary>Извлекает индекс заданного элемента в коллекции.</summary>
        <returns>Начинающийся с нуля индекс найденного элемента в коллекции, в противном случае — -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере кода показано, как создать основное меню, `myMainMenu`, с двумя <xref:System.Windows.Forms.MenuItem> объектов, `File` и `Edit`. `File` Меню содержит три элемента вложенного меню: `New`, `Open`, и `Exit`. С помощью <xref:System.Windows.Forms.Menu.MenuItemCollection.IndexOf%2A> метода извлечения индекса `Exit` элемент `File` коллекции меню и затем отобразить ее значение в окне сообщения. В этом примере требуется, что вы уже создали <xref:System.Windows.Forms.Form> с именем `Form1`.  
  
 [!code-cpp[IndexOf#1](~/samples/snippets/cpp/VS_Snippets_Winforms/IndexOf/CPP/indexof.cpp#1)]
 [!code-csharp[IndexOf#1](~/samples/snippets/csharp/VS_Snippets_Winforms/IndexOf/CS/indexof.cs#1)]
 [!code-vb[IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/IndexOf/VB/indexof.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.IndexOfKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfKey (key As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfKey(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Имя искомого элемента меню.</param>
        <summary>Производит поиск индекса первого вхождения элемента меню с указанным ключом.</summary>
        <returns>Отсчитываемый с нуля индекс первого элемента меню с заданным ключом.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Windows.Forms.Menu.MenuItemCollection.IndexOfKey%2A> вызывается последовательно, последний возвращается индекс будет проверяться на соответствие ключа сначала, а если нет соответствия, поиск начинается с начала коллекции.  
  
 <xref:System.Windows.Forms.Menu.Name%2A> Свойство соответствует ключу для <xref:System.Windows.Forms.MenuItem> в <xref:System.Windows.Forms.Menu.MenuItemCollection>.  
  
 При сравнении ключей не учитывает регистр. Если `key` параметр `null` или является пустой строкой или не найдено совпадений <xref:System.Windows.Forms.Menu.MenuItemCollection.IndexOfKey%2A> возвращает -1.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Menu.MenuItemCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, является ли коллекция доступной только для чтения.</summary>
        <value>
          Значение <see langword="true" />, если коллекция доступна только для чтения; в противном случае — значение <see langword="false" />. Значение по умолчанию: <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает элемент из коллекции.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.MenuItem this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.MenuItem Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Menu.MenuItemCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(index As Integer) As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::MenuItem ^ default[int] { System::Windows::Forms::MenuItem ^ get(int index); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MenuItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Заданное индексом местоположение объекта <see cref="T:System.Windows.Forms.MenuItem" /> в коллекции.</param>
        <summary>Извлекает объект <see cref="T:System.Windows.Forms.MenuItem" /> в позиции коллекции с заданным индексом.</summary>
        <value>Класс <see cref="T:System.Windows.Forms.MenuItem" /> в заданном местоположении.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы назначить <xref:System.Windows.Forms.MenuItem> в определенное расположение или извлечь их из объектов <xref:System.Windows.Forms.Menu.MenuItemCollection>, могут ссылаться на объект коллекции с заданным значением индекса. Значение индекса <xref:System.Windows.Forms.Menu.MenuItemCollection> начинается с нуля.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Параметр <paramref name="value" /> имеет значение <see langword="null" />.  
  
 или  
  
 Значение параметра <paramref name="index" /> меньше нуля.  
  
 или  
  
 Параметр <paramref name="index" /> больше числа элементов меню в этой коллекции и коллекция элементов меню не имеет значения <see langword="null" />.</exception>
        <altmember cref="P:System.Windows.Forms.Menu.MenuItemCollection.Count" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.MenuItem this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.MenuItem Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Menu.MenuItemCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(key As String) As MenuItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::MenuItem ^ default[System::String ^] { System::Windows::Forms::MenuItem ^ get(System::String ^ key); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.MenuItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Имя извлекаемого из коллекции элемента.</param>
        <summary>Возвращает из коллекции элемент с указанным ключом.</summary>
        <value>Объект <see cref="T:System.Windows.Forms.MenuItem" /> с указанным ключом.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Menu.Name%2A> Свойство соответствует ключу для <xref:System.Windows.Forms.MenuItem> в <xref:System.Windows.Forms.Menu.MenuItemCollection>.  
  
 При сравнении ключей не учитывает регистр. Если `key` параметр `null` или является пустой строкой, <xref:System.Windows.Forms.Menu.MenuItemCollection.Item%2A> возвращает `null.`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (System.Windows.Forms.MenuItem item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(class System.Windows.Forms.MenuItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.Remove(System.Windows.Forms.MenuItem)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (item As MenuItem)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Windows::Forms::MenuItem ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Windows.Forms.MenuItem" />
      </Parameters>
      <Docs>
        <param name="item">Объект <see cref="T:System.Windows.Forms.MenuItem" /> для удаления.</param>
        <summary>Удаляет заданный объект <see cref="T:System.Windows.Forms.MenuItem" /> из коллекции элементов меню.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда <xref:System.Windows.Forms.MenuItem> удаляется из коллекции элементов меню, все последующие меню, элементы сдвигаются на одну позицию в коллекции. Данную версию можно использовать `Remove` для удаления определенных <xref:System.Windows.Forms.MenuItem> из коллекции, используя ссылку на <xref:System.Windows.Forms.MenuItem> должны быть удалены. Если у вас ссылку на <xref:System.Windows.Forms.MenuItem> необходимо удалить, можно использовать другую версию метода, принимающую в качестве параметра, индекса, соответствующие <xref:System.Windows.Forms.MenuItem> должны быть удалены.  
  
   
  
## Examples  
 В следующем примере кода показано, как создать основное меню, `myMainMenu`, с двумя <xref:System.Windows.Forms.MenuItem> объектов, `File` и `Edit`. `File` Меню содержит три элемента вложенного меню: `New`, `Open`, и `Exit`. С помощью `Remove` метод, удалите `Open` элемента из `File` коллекции меню. В этом примере требуется, что вы уже создали <xref:System.Windows.Forms.Form> с именем `Form1`.  
  
 [!code-cpp[RemoveMenuItems#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RemoveMenuItems/CPP/removeitems.cpp#1)]
 [!code-csharp[RemoveMenuItems#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RemoveMenuItems/CS/removeitems.cs#1)]
 [!code-vb[RemoveMenuItems#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RemoveMenuItems/VB/removeitems.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Индекс удаляемого объекта <see cref="T:System.Windows.Forms.MenuItem" />.</param>
        <summary>Удаляет объект <see cref="T:System.Windows.Forms.MenuItem" /> с заданным индексом из коллекции элементов меню.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда <xref:System.Windows.Forms.MenuItem> удаляется из коллекции элементов меню, все последующие меню, элементы сдвигаются на одну позицию в коллекции.  
  
   
  
## Examples  
 В следующем примере кода показано, как создать основное меню, `myMainMenu`, с двумя <xref:System.Windows.Forms.MenuItem> объектов, `File` и `Edit`. `File` Меню содержит три элемента вложенного меню: `New`, `Open`, и `Exit`. С помощью `RemoveAt` метод, удалите `Exit` элемента из `File` меню коллекции, используя его индексный номер. В этом примере требуется, что вы уже создали <xref:System.Windows.Forms.Form> с именем `Form1`.  
  
 [!code-cpp[RemoveAt#1](~/samples/snippets/cpp/VS_Snippets_Winforms/RemoveAt/CPP/removeat.cpp#1)]
 [!code-csharp[RemoveAt#1](~/samples/snippets/csharp/VS_Snippets_Winforms/RemoveAt/CS/removeat.cs#1)]
 [!code-vb[RemoveAt#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/RemoveAt/VB/removeat.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveByKey">
      <MemberSignature Language="C#" Value="public virtual void RemoveByKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveByKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.RemoveByKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveByKey (key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveByKey(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Имя удаляемого элемента меню.</param>
        <summary>Удаляет элемент меню с заданным ключом из коллекции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.Menu.Name%2A> Свойство соответствует ключу для <xref:System.Windows.Forms.MenuItem> в <xref:System.Windows.Forms.Menu.MenuItemCollection>.  
  
 При сравнении ключей не учитывает регистр.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Menu.MenuItemCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Описание этого члена см. в разделе <see cref="P:System.Collections.ICollection.IsSynchronized" />.</summary>
        <value>
          Значение <see langword="false" /> во всех случаях.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.Menu.MenuItemCollection> приведен к типу интерфейса <xref:System.Collections.ICollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Menu.MenuItemCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Описание этого члена см. в разделе <see cref="P:System.Collections.ICollection.SyncRoot" />.</summary>
        <value>Объект, который может использоваться для синхронизации доступа к <see cref="T:System.Windows.Forms.Menu.MenuItemCollection" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.Menu.MenuItemCollection> приведен к типу интерфейса <xref:System.Collections.ICollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Параметр <see cref="T:System.Windows.Forms.MenuItem" /> для добавления в коллекцию.</param>
        <summary>Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Add(System.Object)" />.</summary>
        <returns>Позиция, в которую вставлен объект <see cref="T:System.Windows.Forms.MenuItem" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.Menu.MenuItemCollection> приведен к типу интерфейса <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Объект, который требуется найти в коллекции.</param>
        <summary>Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Contains(System.Object)" />.</summary>
        <returns>
          Значение <see langword="true" />, если указанный объект имеется в коллекции <see cref="T:System.Windows.Forms.MenuItem" />; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.Menu.MenuItemCollection> приведен к типу интерфейса <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Объект <see cref="T:System.Windows.Forms.MenuItem" />, местоположение которого требуется найти в коллекции.</param>
        <summary>Описание этого члена см. в разделе <see cref="M:System.Collections.IList.IndexOf(System.Object)" />.</summary>
        <returns>Индекс (с нуля), если <paramref name="value" /> имеется в коллекции <see cref="T:System.Windows.Forms.MenuItem" />; в противном случае — значение -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.Menu.MenuItemCollection> приведен к типу интерфейса <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Отсчитываемый с нуля индекс, по которому следует вставить объект <see cref="T:System.Windows.Forms.MenuItem" />.</param>
        <param name="value">Объект <see cref="T:System.Windows.Forms.MenuItem" />, вставляемый в <see cref="T:System.Windows.Forms.Menu.MenuItemCollection" />.</param>
        <summary>Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Insert(System.Int32,System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.Menu.MenuItemCollection> приведен к типу интерфейса <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Menu.MenuItemCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Описание этого члена см. в разделе <see cref="P:System.Collections.IList.IsFixedSize" />.</summary>
        <value>
          Значение <see langword="false" /> во всех случаях.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.Menu.MenuItemCollection> приведен к типу интерфейса <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.Menu.MenuItemCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Индекс элемента (с нуля), который требуется получить.</param>
        <summary>Описание этого члена см. в разделе <see cref="P:System.Collections.IList.Item(System.Int32)" />.</summary>
        <value>Параметр <see cref="T:System.Windows.Forms.MenuItem" /> по указанному индексу.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.Menu.MenuItemCollection> приведен к типу интерфейса <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.Menu.MenuItemCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Объект <see cref="T:System.Windows.Forms.MenuItem" /> для удаления.</param>
        <summary>Описание этого члена см. в разделе <see cref="M:System.Collections.IList.Remove(System.Object)" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот член представляет собой явную реализацию члена интерфейса. Он может использоваться, только если экземпляр <xref:System.Windows.Forms.Menu.MenuItemCollection> приведен к типу интерфейса <xref:System.Collections.IList>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>