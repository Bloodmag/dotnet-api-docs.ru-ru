<Type Name="NativeWindow" FullName="System.Windows.Forms.NativeWindow">
  <TypeSignature Language="C#" Value="public class NativeWindow : MarshalByRefObject, System.Windows.Forms.IWin32Window" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi NativeWindow extends System.MarshalByRefObject implements class System.Windows.Forms.IWin32Window" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.NativeWindow" />
  <TypeSignature Language="VB.NET" Value="Public Class NativeWindow&#xA;Inherits MarshalByRefObject&#xA;Implements IWin32Window" />
  <TypeSignature Language="C++ CLI" Value="public ref class NativeWindow : MarshalByRefObject, System::Windows::Forms::IWin32Window" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Forms.IWin32Window</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="445ce-101">Обеспечивает низкоуровневую инкапсуляцию дескриптора окна и процедуры окна.</span><span class="sxs-lookup"><span data-stu-id="445ce-101">Provides a low-level encapsulation of a window handle and a window procedure.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="445ce-102">Этот класс автоматически управляет созданием и класса окна регистрации.</span><span class="sxs-lookup"><span data-stu-id="445ce-102">This class automatically manages window class creation and registration.</span></span>  
  
 <span data-ttu-id="445ce-103">Окно не подходит для сборки мусора, если он связан с дескриптором окна.</span><span class="sxs-lookup"><span data-stu-id="445ce-103">A window is not eligible for garbage collection when it is associated with a window handle.</span></span> <span data-ttu-id="445ce-104">Чтобы обеспечить правильную сборку мусора, дескрипторы должны быть либо уничтожены вручную с помощью <xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A> либо освобождены с помощью <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A>.</span><span class="sxs-lookup"><span data-stu-id="445ce-104">To ensure proper garbage collection, handles must either be destroyed manually using <xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A> or released using <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="445ce-105"><xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> Метод вызывается во время обработки сообщения WM_NCDESTROY.</span><span class="sxs-lookup"><span data-stu-id="445ce-105">The <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> method is called when the WM_NCDESTROY message is processed.</span></span> <span data-ttu-id="445ce-106">Это означает, что существуют случаи, которые после вам не требуется вручную вызывать <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A>, но рекомендуется сделать это.</span><span class="sxs-lookup"><span data-stu-id="445ce-106">This means there are cases in which when you do not need to manually call <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A>, but it is good practice to do so.</span></span>  
  
 <span data-ttu-id="445ce-107"><xref:System.Windows.Forms.NativeWindow> Класс предоставляет следующие свойства и методы для управления дескрипторами: <xref:System.Windows.Forms.NativeWindow.Handle%2A>, <xref:System.Windows.Forms.NativeWindow.CreateHandle%2A>, <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A>, <xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A>, и <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A>.</span><span class="sxs-lookup"><span data-stu-id="445ce-107">The <xref:System.Windows.Forms.NativeWindow> class provides the following properties and methods to manage handles: <xref:System.Windows.Forms.NativeWindow.Handle%2A>, <xref:System.Windows.Forms.NativeWindow.CreateHandle%2A>, <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A>, <xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A>, and <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="445ce-108">В следующем примере кода показывается перехват сообщений окна операционной системы в процедуре окна и создание окна с определенной операционной системой имя класса окна.</span><span class="sxs-lookup"><span data-stu-id="445ce-108">The following code example demonstrates intercepting operating system window messages in a window procedure, and creating a window with a specific operating system window class name.</span></span> <span data-ttu-id="445ce-109">В примере создается два классы, наследующие от <xref:System.Windows.Forms.NativeWindow> , выполнения этой задачи.</span><span class="sxs-lookup"><span data-stu-id="445ce-109">The example creates two classes that inherit from <xref:System.Windows.Forms.NativeWindow> that accomplish this.</span></span>  
  
 <span data-ttu-id="445ce-110">`MyNativeWindowListener` Класс подключает в процедуру окна формы, переданное конструктору и переопределяет <xref:System.Windows.Forms.NativeWindow.WndProc%2A> метод для перехвата `WM_ACTIVATEAPP` окна сообщения.</span><span class="sxs-lookup"><span data-stu-id="445ce-110">The `MyNativeWindowListener` class hooks into the window procedure of the form passed into the constructor, and overrides the <xref:System.Windows.Forms.NativeWindow.WndProc%2A> method to intercept the `WM_ACTIVATEAPP` window message.</span></span> <span data-ttu-id="445ce-111">Класс демонстрирует использование <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A> и <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> методы для определения дескриптора окна <xref:System.Windows.Forms.NativeWindow> будет использовать.</span><span class="sxs-lookup"><span data-stu-id="445ce-111">The class demonstrates the usage of the <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A> and <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> methods to identify the window handle the <xref:System.Windows.Forms.NativeWindow> will use.</span></span> <span data-ttu-id="445ce-112">Дескриптор назначается в зависимости от <xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType> и <xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType> события.</span><span class="sxs-lookup"><span data-stu-id="445ce-112">The handle is assign based upon the <xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType> and <xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType> events.</span></span> <span data-ttu-id="445ce-113">Когда `WM_ACTIVATEAPP` сообщение окна класса вызывает `form1.ApplicationActivated` метод.</span><span class="sxs-lookup"><span data-stu-id="445ce-113">When the `WM_ACTIVATEAPP` window message is received, the class calls the `form1.ApplicationActivated` method.</span></span>  
  
 <span data-ttu-id="445ce-114">`MyNativeWindow` Класс создает новое окно с <xref:System.Windows.Forms.CreateParams.ClassName%2A> значение `BUTTON`.</span><span class="sxs-lookup"><span data-stu-id="445ce-114">The `MyNativeWindow` class creates a new window with the <xref:System.Windows.Forms.CreateParams.ClassName%2A> set to `BUTTON`.</span></span> <span data-ttu-id="445ce-115">Класс демонстрирует использование <xref:System.Windows.Forms.NativeWindow.CreateHandle%2A> метода, а также путем переопределения <xref:System.Windows.Forms.NativeWindow.WndProc%2A> метод для перехвата сообщений окна, которые принимаются.</span><span class="sxs-lookup"><span data-stu-id="445ce-115">The class demonstrates using the <xref:System.Windows.Forms.NativeWindow.CreateHandle%2A> method and overriding the <xref:System.Windows.Forms.NativeWindow.WndProc%2A> method to intercept window messages that are received.</span></span>  
  
 [!code-cpp[NativeWindow#1](~/samples/snippets/cpp/VS_Snippets_Winforms/NativeWindow/CPP/form1.cpp#1)]
 [!code-csharp[NativeWindow#1](~/samples/snippets/csharp/VS_Snippets_Winforms/NativeWindow/CS/form1.cs#1)]
 [!code-vb[NativeWindow#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/NativeWindow/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission"><span data-ttu-id="445ce-116">для непосредственно вызывающего метода вызова неуправляемого кода.</span><span class="sxs-lookup"><span data-stu-id="445ce-116">for the immediate caller to call unmanaged code.</span></span> <span data-ttu-id="445ce-117">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span><span class="sxs-lookup"><span data-stu-id="445ce-117">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span></span></permission>
    <altmember cref="T:System.IntPtr" />
    <altmember cref="T:System.Windows.Forms.Application" />
    <altmember cref="T:System.Windows.Forms.AxHost" />
    <altmember cref="T:System.Windows.Forms.Control" />
    <altmember cref="T:System.Windows.Forms.Form" />
    <altmember cref="T:System.Windows.Forms.IWin32Window" />
    <altmember cref="T:System.Windows.Forms.Message" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NativeWindow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NativeWindow();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="445ce-118">Инициализирует экземпляр класса <see cref="T:System.Windows.Forms.NativeWindow" />.</span><span class="sxs-lookup"><span data-stu-id="445ce-118">Initializes an instance of the <see cref="T:System.Windows.Forms.NativeWindow" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="445ce-119">Это значение по умолчанию <xref:System.Windows.Forms.NativeWindow.%23ctor%2A> конструктор, предоставленные компилятором.</span><span class="sxs-lookup"><span data-stu-id="445ce-119">This is the default <xref:System.Windows.Forms.NativeWindow.%23ctor%2A> constructor provided by the compiler.</span></span> <span data-ttu-id="445ce-120"><xref:System.Windows.Forms.NativeWindow> Класс также содержит статический конструктор, который инициализирует обработчики сообщений домена приложения и хэш-таблицы.</span><span class="sxs-lookup"><span data-stu-id="445ce-120">The <xref:System.Windows.Forms.NativeWindow> class also has a static constructor that initializes application domain-wide message handlers and hash tables.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.NativeWindow.Finalize" />
        <altmember cref="T:System.AppDomain" />
      </Docs>
    </Member>
    <Member MemberName="AssignHandle">
      <MemberSignature Language="C#" Value="public void AssignHandle (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssignHandle(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssignHandle (handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AssignHandle(IntPtr handle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="445ce-121">Дескриптор, назначаемый данному окну.</span><span class="sxs-lookup"><span data-stu-id="445ce-121">The handle to assign to this window.</span></span></param>
        <summary><span data-ttu-id="445ce-122">Назначает дескриптор данному окну.</span><span class="sxs-lookup"><span data-stu-id="445ce-122">Assigns a handle to this window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="445ce-123"><xref:System.Windows.Forms.NativeWindow.WndProc%2A> окно сообщения, отправляемые перехватывает `handle` параметра.</span><span class="sxs-lookup"><span data-stu-id="445ce-123"><xref:System.Windows.Forms.NativeWindow.WndProc%2A> intercepts window messages sent to the `handle` parameter.</span></span> <span data-ttu-id="445ce-124">Используйте <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> сбросить процедуру окна дескриптора процедуру окна по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="445ce-124">Use <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> to reset the handle's window procedure to the default window procedure.</span></span>  
  
 <span data-ttu-id="445ce-125"><xref:System.Windows.Forms.NativeWindow.AssignHandle%2A> Вызовы метода <xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A> метод, чтобы указать, что значение <xref:System.Windows.Forms.NativeWindow.Handle%2A> измененное свойство.</span><span class="sxs-lookup"><span data-stu-id="445ce-125">The <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A> method calls the <xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A> method to indicate that the value of the <xref:System.Windows.Forms.NativeWindow.Handle%2A> property has changed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="445ce-126">Дескриптор для назначения не может принадлежать процессу другого приложения.</span><span class="sxs-lookup"><span data-stu-id="445ce-126">The handle to assign cannot be in a different application process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="445ce-127">В следующем примере кода показывается перехват сообщений окна операционной системы в процедуру окна.</span><span class="sxs-lookup"><span data-stu-id="445ce-127">The following code example demonstrates intercepting operating system window messages in a window procedure.</span></span> <span data-ttu-id="445ce-128">В примере создается класс, который наследует от <xref:System.Windows.Forms.NativeWindow> для выполнения этой задачи.</span><span class="sxs-lookup"><span data-stu-id="445ce-128">The example creates a class that inherits from <xref:System.Windows.Forms.NativeWindow> to accomplish this.</span></span>  
  
 <span data-ttu-id="445ce-129">`MyNativeWindowListener` Класс подключает в процедуру окна формы, переданное конструктору и переопределяет <xref:System.Windows.Forms.NativeWindow.WndProc%2A> метод перехватывает `WM_ACTIVATEAPP` окна сообщения.</span><span class="sxs-lookup"><span data-stu-id="445ce-129">The `MyNativeWindowListener` class hooks into the window procedure of the form passed into the constructor, and overrides the <xref:System.Windows.Forms.NativeWindow.WndProc%2A> method to intercepts the `WM_ACTIVATEAPP` window message.</span></span> <span data-ttu-id="445ce-130">Класс демонстрирует использование <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A> и <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> методы для определения окна обработки <xref:System.Windows.Forms.NativeWindow> будет использовать.</span><span class="sxs-lookup"><span data-stu-id="445ce-130">The class demonstrates the use of the <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A> and <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> methods to identify which window handle the <xref:System.Windows.Forms.NativeWindow> will use.</span></span> <span data-ttu-id="445ce-131">Дескриптор назначается в зависимости от <xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType> и <xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType> события.</span><span class="sxs-lookup"><span data-stu-id="445ce-131">The handle is assigned based upon the <xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType> and <xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType> events.</span></span> <span data-ttu-id="445ce-132">Когда `WM_ACTIVATEAPP` сообщение окна класса вызывает `form1.ApplicationActivated` метод.</span><span class="sxs-lookup"><span data-stu-id="445ce-132">When the `WM_ACTIVATEAPP` window message is received, the class calls the `form1.ApplicationActivated` method.</span></span>  
  
 <span data-ttu-id="445ce-133">Этот код является фрагментом кода из примера, приведенного в <xref:System.Windows.Forms.NativeWindow> Общие сведения о классе.</span><span class="sxs-lookup"><span data-stu-id="445ce-133">This code is an excerpt from the example shown in the <xref:System.Windows.Forms.NativeWindow> class overview.</span></span> <span data-ttu-id="445ce-134">Часть кода не отображается для краткости изложения.</span><span class="sxs-lookup"><span data-stu-id="445ce-134">Some code is not shown for the purpose of brevity.</span></span> <span data-ttu-id="445ce-135">В разделе <xref:System.Windows.Forms.NativeWindow> для кода.</span><span class="sxs-lookup"><span data-stu-id="445ce-135">See <xref:System.Windows.Forms.NativeWindow> for the whole code listing.</span></span>  
  
 [!code-cpp[NativeWindow#2](~/samples/snippets/cpp/VS_Snippets_Winforms/NativeWindow/CPP/form1.cpp#2)]
 [!code-csharp[NativeWindow#2](~/samples/snippets/csharp/VS_Snippets_Winforms/NativeWindow/CS/form1.cs#2)]
 [!code-vb[NativeWindow#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/NativeWindow/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception"><span data-ttu-id="445ce-136">Этому окну уже назначен дескриптор.</span><span class="sxs-lookup"><span data-stu-id="445ce-136">This window already has a handle.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="445ce-137">Не удается извлечь процедуру окна для связанного собственного окна.</span><span class="sxs-lookup"><span data-stu-id="445ce-137">The windows procedure for the associated native window could not be retrieved.</span></span></exception>
        <altmember cref="P:System.Windows.Forms.NativeWindow.Handle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.DestroyHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.ReleaseHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.Finalize" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.OnHandleChange" />
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="public virtual void CreateHandle (System.Windows.Forms.CreateParams cp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateHandle(class System.Windows.Forms.CreateParams cp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CreateHandle (cp As CreateParams)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CreateHandle(System::Windows::Forms::CreateParams ^ cp);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cp" Type="System.Windows.Forms.CreateParams" />
      </Parameters>
      <Docs>
        <param name="cp"><span data-ttu-id="445ce-138">Структура <see cref="T:System.Windows.Forms.CreateParams" />, задающая параметры создания для данного окна.</span><span class="sxs-lookup"><span data-stu-id="445ce-138">A <see cref="T:System.Windows.Forms.CreateParams" /> that specifies the creation parameters for this window.</span></span></param>
        <summary><span data-ttu-id="445ce-139">Создает окно и его дескриптор, используя указанные параметры создания.</span><span class="sxs-lookup"><span data-stu-id="445ce-139">Creates a window and its handle with the specified creation parameters.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="445ce-140">`cp` Определяет значения, которые передаются в машинном коде Win32 `CreateWindowEx` метод для создания окна и его дескриптора.</span><span class="sxs-lookup"><span data-stu-id="445ce-140">The `cp` parameter specifies the values that are passed to the native Win32 `CreateWindowEx` method to create a window and its handle.</span></span>  
  
 <span data-ttu-id="445ce-141">Когда <xref:System.Windows.Forms.CreateParams.ClassName%2A> поле не является `null`, дескриптор вновь созданного наследует от заданного класса.</span><span class="sxs-lookup"><span data-stu-id="445ce-141">When the <xref:System.Windows.Forms.CreateParams.ClassName%2A> field is not `null`, the newly created window handle inherits from the specified class.</span></span> <span data-ttu-id="445ce-142">Например если <xref:System.Windows.Forms.CreateParams.ClassName%2A> равно `BUTTON`, только что созданный окно основано на Win32 `BUTTON` класс окна.</span><span class="sxs-lookup"><span data-stu-id="445ce-142">For example, if <xref:System.Windows.Forms.CreateParams.ClassName%2A> is set to `BUTTON`, the newly created window is based on the Win32 `BUTTON` window class.</span></span> <span data-ttu-id="445ce-143"><xref:System.Windows.Forms.CreateParams.Param%2A> Свойство <xref:System.Windows.Forms.CreateParams.ClassName%2A> объект должен быть `null` или ссылку на экземпляр класса, который был объявлен как структура.</span><span class="sxs-lookup"><span data-stu-id="445ce-143">The <xref:System.Windows.Forms.CreateParams.Param%2A> property of the <xref:System.Windows.Forms.CreateParams.ClassName%2A> object must either be `null` or reference an instance of a class that was declared as a structure.</span></span>  
  
 <span data-ttu-id="445ce-144">Этот код является фрагментом кода из примера, приведенного в <xref:System.Windows.Forms.NativeWindow> Общие сведения о классе.</span><span class="sxs-lookup"><span data-stu-id="445ce-144">This code is an excerpt from the example shown in the <xref:System.Windows.Forms.NativeWindow> class overview.</span></span> <span data-ttu-id="445ce-145">Часть кода не отображается для краткости изложения.</span><span class="sxs-lookup"><span data-stu-id="445ce-145">Some code is not shown for the purpose of brevity.</span></span> <span data-ttu-id="445ce-146">В разделе <xref:System.Windows.Forms.NativeWindow> для кода.</span><span class="sxs-lookup"><span data-stu-id="445ce-146">See <xref:System.Windows.Forms.NativeWindow> for the whole code listing.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="445ce-147">Предоставленное имя класса регистрируется с операционной системой.</span><span class="sxs-lookup"><span data-stu-id="445ce-147">The class name provided is registered with the operating system.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="445ce-148">В следующем примере кода демонстрируется создание окна с определенной операционной системой имя класса окна.</span><span class="sxs-lookup"><span data-stu-id="445ce-148">The following code example demonstrates creating a window with a specific operating system window class name.</span></span> <span data-ttu-id="445ce-149">В примере создается класс, который наследует от <xref:System.Windows.Forms.NativeWindow> для выполнения этой задачи.</span><span class="sxs-lookup"><span data-stu-id="445ce-149">The example creates a class that inherits from <xref:System.Windows.Forms.NativeWindow> to accomplish this.</span></span>  
  
 <span data-ttu-id="445ce-150">`MyNativeWindow` Класс создает новое окно с <xref:System.Windows.Forms.CreateParams.ClassName%2A> значение `BUTTON`.</span><span class="sxs-lookup"><span data-stu-id="445ce-150">The `MyNativeWindow` class creates a new window with the <xref:System.Windows.Forms.CreateParams.ClassName%2A> set to `BUTTON`.</span></span> <span data-ttu-id="445ce-151">При этом создается окно кнопки Win32.</span><span class="sxs-lookup"><span data-stu-id="445ce-151">This creates a Win32 button window.</span></span> <span data-ttu-id="445ce-152">Расположение и размер кнопки имеет значение, а также указанные дополнительные стили окна.</span><span class="sxs-lookup"><span data-stu-id="445ce-152">The location and size of the button is set, along with specifying additional window styles.</span></span> <span data-ttu-id="445ce-153">Класс демонстрирует использование <xref:System.Windows.Forms.NativeWindow.CreateHandle%2A> метод и переопределение <xref:System.Windows.Forms.NativeWindow.WndProc%2A> метод для перехвата сообщений окна, которые принимаются.</span><span class="sxs-lookup"><span data-stu-id="445ce-153">The class demonstrates how to use the <xref:System.Windows.Forms.NativeWindow.CreateHandle%2A> method and override the <xref:System.Windows.Forms.NativeWindow.WndProc%2A> method to intercept window messages that are received.</span></span> <span data-ttu-id="445ce-154">Несмотря на то, что в примере выполняется поиск сообщения WM_ACTIVATEAPP, оно может быть заменено в реальной программе сообщения окна, специфичные для созданного типа.</span><span class="sxs-lookup"><span data-stu-id="445ce-154">Although the example looks for the WM_ACTIVATEAPP message, this can be replaced in a real program with window messages specific to the type created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="445ce-155">Некоторые типы элементов управления отправляют свои оконные сообщения родительскому вместо окна.</span><span class="sxs-lookup"><span data-stu-id="445ce-155">Some control types send their window messages to the window parent instead of the window.</span></span> <span data-ttu-id="445ce-156">Дополнительные сведения см. в разделе.</span><span class="sxs-lookup"><span data-stu-id="445ce-156">See the Windows Platform SDK for more information.</span></span>  
  
 [!code-cpp[NativeWindow#3](~/samples/snippets/cpp/VS_Snippets_Winforms/NativeWindow/CPP/form1.cpp#3)]
 [!code-csharp[NativeWindow#3](~/samples/snippets/csharp/VS_Snippets_Winforms/NativeWindow/CS/form1.cs#3)]
 [!code-vb[NativeWindow#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/NativeWindow/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException"><span data-ttu-id="445ce-157">При попытке создать собственное окно закончились ресурсы операционной системы.</span><span class="sxs-lookup"><span data-stu-id="445ce-157">The operating system ran out of resources when trying to create the native window.</span></span></exception>
        <exception cref="T:System.ComponentModel.Win32Exception"><span data-ttu-id="445ce-158">Не удается создать указанное окно с помощью собственного интерфейса Win32 API.</span><span class="sxs-lookup"><span data-stu-id="445ce-158">The native Win32 API could not create the specified window.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="445ce-159">Дескриптор текущего собственного окна уже назначен; в пояснении свойство <see cref="P:System.Windows.Forms.NativeWindow.Handle" /> не равно <see cref="F:System.IntPtr.Zero" />.</span><span class="sxs-lookup"><span data-stu-id="445ce-159">The handle of the current native window is already assigned; in explanation, the <see cref="P:System.Windows.Forms.NativeWindow.Handle" /> property is not equal to <see cref="F:System.IntPtr.Zero" />.</span></span></exception>
        <permission cref="T:System.Security.Permissions.UIPermission"><span data-ttu-id="445ce-160">Чтобы создать окно верхнего уровня.</span><span class="sxs-lookup"><span data-stu-id="445ce-160">to create a top-level window.</span></span> <span data-ttu-id="445ce-161">Это разрешение необходимо только в том случае, если стиль окна не является дочерним или окно имеет родительский элемент.</span><span class="sxs-lookup"><span data-stu-id="445ce-161">This permission is only demanded if the window style is not a child or if the window does not have a parent.</span></span> <span data-ttu-id="445ce-162">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span><span class="sxs-lookup"><span data-stu-id="445ce-162">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span></span></permission>
        <altmember cref="T:System.Windows.Forms.CreateParams" />
        <altmember cref="P:System.Windows.Forms.NativeWindow.Handle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.DestroyHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.Finalize" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.ReleaseHandle" />
      </Docs>
    </Member>
    <Member MemberName="DefWndProc">
      <MemberSignature Language="C#" Value="public void DefWndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefWndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.DefWndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DefWndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefWndProc(System::Windows::Forms::Message % m);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="445ce-163">Обрабатываемое в данный момент сообщение.</span><span class="sxs-lookup"><span data-stu-id="445ce-163">The message that is currently being processed.</span></span></param>
        <summary><span data-ttu-id="445ce-164">Вызывает процедуру окна по умолчанию, связанную с этим окном.</span><span class="sxs-lookup"><span data-stu-id="445ce-164">Invokes the default window procedure associated with this window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="445ce-165">Как правило, можно вызвать только <xref:System.Windows.Forms.NativeWindow.DefWndProc%2A> метод при перехвате сообщений окна и хотите процедуру окна по умолчанию для обработки сообщения.</span><span class="sxs-lookup"><span data-stu-id="445ce-165">Typically, you only call the <xref:System.Windows.Forms.NativeWindow.DefWndProc%2A> method when you are intercepting window messages and would like the default window procedure to handle the message.</span></span> <span data-ttu-id="445ce-166"><xref:System.Windows.Forms.NativeWindow.DefWndProc%2A> не должен вызываться для отправки сообщение окна для окна. вызов Win32 `SendMessage` вместо этого функцию.</span><span class="sxs-lookup"><span data-stu-id="445ce-166"><xref:System.Windows.Forms.NativeWindow.DefWndProc%2A> should not be called to send a window message to the window; call the Win32 `SendMessage` function instead.</span></span>  
  
 <span data-ttu-id="445ce-167">Это ошибка для вызова <xref:System.Windows.Forms.NativeWindow.DefWndProc%2A> при <xref:System.Windows.Forms.NativeWindow.Handle%2A> свойства равно 0.</span><span class="sxs-lookup"><span data-stu-id="445ce-167">It is an error to call <xref:System.Windows.Forms.NativeWindow.DefWndProc%2A> when the <xref:System.Windows.Forms.NativeWindow.Handle%2A> property is 0.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="445ce-168">Переопределите этот метод в производном классе, чтобы реализовать обобщенную обработку настраиваемых сообщений для конкретного собственного окна или .NET Windows Forms <see cref="T:System.Windows.Forms.Control" />.</span><span class="sxs-lookup"><span data-stu-id="445ce-168">Override this method in a derived class to implement generalized custom message handling for a specific native window or .NET Windows Forms <see cref="T:System.Windows.Forms.Control" />.</span></span> <span data-ttu-id="445ce-169">Настраиваемая обработка выполняются перед, после или вместо вызова реализации базового класса этот метод, который выполняет стандартную обработку сообщения.</span><span class="sxs-lookup"><span data-stu-id="445ce-169">Custom processing can be performed before, after, or instead of a call to the base class implementation of this method, which performs standard message processing.</span></span>  
  
 <span data-ttu-id="445ce-170">Напротив, добавление настроенной обработка сообщений для приложения можно сделать с помощью <see cref="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)" /> метод <see cref="T:System.Windows.Forms.Application" /> класса.</span><span class="sxs-lookup"><span data-stu-id="445ce-170">In contrast, adding customized message handling for an application can be accomplished through the <see cref="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)" /> method of the <see cref="T:System.Windows.Forms.Application" /> class.</span></span></para>
        </block>
        <altmember cref="T:System.Windows.Forms.Message" />
        <altmember cref="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)" />
        <altmember cref="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)" />
      </Docs>
    </Member>
    <Member MemberName="DestroyHandle">
      <MemberSignature Language="C#" Value="public virtual void DestroyHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DestroyHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.DestroyHandle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DestroyHandle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DestroyHandle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="445ce-171">Уничтожает окно и его дескриптор.</span><span class="sxs-lookup"><span data-stu-id="445ce-171">Destroys the window and its handle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="445ce-172">Этот метод уничтожает окно, связанное с <xref:System.Windows.Forms.NativeWindow.Handle%2A>, задает <xref:System.Windows.Forms.NativeWindow.Handle%2A> свойства равным 0 и вызывает <xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A> метод в соответствии с изменениями.</span><span class="sxs-lookup"><span data-stu-id="445ce-172">This method destroys the window associated with the <xref:System.Windows.Forms.NativeWindow.Handle%2A>, sets the <xref:System.Windows.Forms.NativeWindow.Handle%2A> property to 0, and calls the <xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A> method to reflect the change.</span></span> <span data-ttu-id="445ce-173">Как правило, можно вызвать только <xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A> после с собственного окна.</span><span class="sxs-lookup"><span data-stu-id="445ce-173">Typically, you only call <xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A> when you are done with the native window.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="445ce-174"><xref:System.Windows.Forms.NativeWindow> Класса автоматически уничтожит соответствующее окно и освободит его ресурсы в ответ на сообщение WM_DESTROY.</span><span class="sxs-lookup"><span data-stu-id="445ce-174">The <xref:System.Windows.Forms.NativeWindow> class automatically will destroy the associated window and release its resources in response to a WM_DESTROY message.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NativeWindow.Handle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.Finalize" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.ReleaseHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.OnHandleChange" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~NativeWindow ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!NativeWindow ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="445ce-175">Освобождает ресурсы, связанные с данным окном.</span><span class="sxs-lookup"><span data-stu-id="445ce-175">Releases the resources associated with this window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="445ce-176"><xref:System.Windows.Forms.NativeWindow.Finalize%2A> Метод удаляет Win32 производный класс, связанный с текущим <xref:System.Windows.Forms.NativeWindow> освобождает дескриптор экземпляра и отправляет сообщения WM_CLOSE соответствующее окно.</span><span class="sxs-lookup"><span data-stu-id="445ce-176">The <xref:System.Windows.Forms.NativeWindow.Finalize%2A> method removes the Win32 derived class associated with the current <xref:System.Windows.Forms.NativeWindow> instance, releases the handle, and posts a WM_CLOSE message to the associated window.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.NativeWindow.#ctor" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.ReleaseHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.DestroyHandle" />
      </Docs>
    </Member>
    <Member MemberName="FromHandle">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.NativeWindow FromHandle (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Forms.NativeWindow FromHandle(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.FromHandle(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHandle (handle As IntPtr) As NativeWindow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::NativeWindow ^ FromHandle(IntPtr handle);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.NativeWindow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle"><span data-ttu-id="445ce-177">Дескриптор окна.</span><span class="sxs-lookup"><span data-stu-id="445ce-177">A handle to a window.</span></span></param>
        <summary><span data-ttu-id="445ce-178">Извлекает окно, связанное с указанным дескриптором.</span><span class="sxs-lookup"><span data-stu-id="445ce-178">Retrieves the window associated with the specified handle.</span></span></summary>
        <returns><span data-ttu-id="445ce-179">Класс <see cref="T:System.Windows.Forms.NativeWindow" />, связанный с указанным дескриптором.</span><span class="sxs-lookup"><span data-stu-id="445ce-179">The <see cref="T:System.Windows.Forms.NativeWindow" /> associated with the specified handle.</span></span> <span data-ttu-id="445ce-180">Если дескриптор не связан ни с каким окном, этот метод возвращает <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="445ce-180">This method returns <see langword="null" /> when the handle does not have an associated window.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="445ce-181">Получив дескриптор с помощью другого метода, используйте этот метод для извлечения окно, связанное с дескриптором.</span><span class="sxs-lookup"><span data-stu-id="445ce-181">If you receive a handle from another method, use this method to retrieve the window associated with the handle.</span></span> <span data-ttu-id="445ce-182">Дескриптор уже принадлежит другой <xref:System.Windows.Forms.NativeWindow> текущего процесса, в противном случае — `null` возвращается.</span><span class="sxs-lookup"><span data-stu-id="445ce-182">The handle must already be owned by another <xref:System.Windows.Forms.NativeWindow> in the current process; otherwise, `null` is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NativeWindow.Handle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.DestroyHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.ReleaseHandle" />
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NativeWindow.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.IWin32Window.Handle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="445ce-183">Получает дескриптор данного окна.</span><span class="sxs-lookup"><span data-stu-id="445ce-183">Gets the handle for this window.</span></span></summary>
        <value><span data-ttu-id="445ce-184">В случае успеха объект <see cref="T:System.IntPtr" />, представляющий дескриптор для связанного собственного окна Win32; в противном случае — 0, если нет дескриптора, связанного с окном.</span><span class="sxs-lookup"><span data-stu-id="445ce-184">If successful, an <see cref="T:System.IntPtr" /> representing the handle to the associated native Win32 window; otherwise, 0 if no handle is associated with the window.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="445ce-185">Используйте этот метод при вызове методов Windows API, которым требуется дескриптор окна или элемента управления.</span><span class="sxs-lookup"><span data-stu-id="445ce-185">Use this method when calling Windows API methods that require a handle for a window or control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="445ce-186">В следующем примере кода демонстрируется создание окна с определенной операционной системой имя класса окна.</span><span class="sxs-lookup"><span data-stu-id="445ce-186">The following code example demonstrates creating a window with a specific operating system window class name.</span></span> <span data-ttu-id="445ce-187">В примере создается класс, который наследует от <xref:System.Windows.Forms.NativeWindow> для выполнения этой задачи.</span><span class="sxs-lookup"><span data-stu-id="445ce-187">The example creates a class that inherits from <xref:System.Windows.Forms.NativeWindow> to accomplish this.</span></span> <span data-ttu-id="445ce-188">В этом примере показано переопределение <xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A> метод получать уведомления при <xref:System.Windows.Forms.NativeWindow.Handle%2A> изменения.</span><span class="sxs-lookup"><span data-stu-id="445ce-188">The example also demonstrates overriding the <xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A> method to be notified when the <xref:System.Windows.Forms.NativeWindow.Handle%2A> changes.</span></span>  
  
 <span data-ttu-id="445ce-189">`MyNativeWindow` Класс создает новое окно с <xref:System.Windows.Forms.CreateParams.ClassName%2A> значение кнопки.</span><span class="sxs-lookup"><span data-stu-id="445ce-189">The `MyNativeWindow` class creates a new window with the <xref:System.Windows.Forms.CreateParams.ClassName%2A> set to BUTTON.</span></span> <span data-ttu-id="445ce-190">При этом создается окно кнопки Win32.</span><span class="sxs-lookup"><span data-stu-id="445ce-190">This creates a Win32 button window.</span></span> <span data-ttu-id="445ce-191">Расположение и размер кнопки имеет значение, а также указанные дополнительные стили окна.</span><span class="sxs-lookup"><span data-stu-id="445ce-191">The location and size of the button is set, along with specifying additional window styles.</span></span> <span data-ttu-id="445ce-192">Класс демонстрирует использование <xref:System.Windows.Forms.NativeWindow.CreateHandle%2A> метод и переопределение <xref:System.Windows.Forms.NativeWindow.WndProc%2A> метод для перехвата сообщений окна, которые принимаются.</span><span class="sxs-lookup"><span data-stu-id="445ce-192">The class demonstrates how to use the <xref:System.Windows.Forms.NativeWindow.CreateHandle%2A> method and override the <xref:System.Windows.Forms.NativeWindow.WndProc%2A> method to intercept window messages that are received.</span></span> <span data-ttu-id="445ce-193">Несмотря на то, что в примере выполняется поиск сообщения WM_ACTIVATEAPP, оно может быть заменено в реальной программе сообщения окна, специфичные для созданного типа.</span><span class="sxs-lookup"><span data-stu-id="445ce-193">Although the example looks for the WM_ACTIVATEAPP message, this could be replaced in a real program with window messages specific to the type created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="445ce-194">Некоторые типы элементов управления отправляют свои оконные сообщения родительскому вместо окна.</span><span class="sxs-lookup"><span data-stu-id="445ce-194">Some control types send their window messages to the window parent instead of the window.</span></span> <span data-ttu-id="445ce-195">Дополнительные сведения см. в разделе.</span><span class="sxs-lookup"><span data-stu-id="445ce-195">See the Windows Platform SDK for more information.</span></span>  
  
 [!code-cpp[NativeWindow#3](~/samples/snippets/cpp/VS_Snippets_Winforms/NativeWindow/CPP/form1.cpp#3)]
 [!code-csharp[NativeWindow#3](~/samples/snippets/csharp/VS_Snippets_Winforms/NativeWindow/CS/form1.cs#3)]
 [!code-vb[NativeWindow#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/NativeWindow/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.DestroyHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.ReleaseHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.OnHandleChange" />
      </Docs>
    </Member>
    <Member MemberName="OnHandleChange">
      <MemberSignature Language="C#" Value="protected virtual void OnHandleChange ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHandleChange() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.OnHandleChange" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHandleChange ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHandleChange();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="445ce-196">Задает метод уведомления, вызываемый при изменении дескриптора окна.</span><span class="sxs-lookup"><span data-stu-id="445ce-196">Specifies a notification method that is called when the handle for a window is changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="445ce-197">Этот метод вызывается, когда значение <xref:System.Windows.Forms.NativeWindow.Handle%2A> измененное свойство.</span><span class="sxs-lookup"><span data-stu-id="445ce-197">This method is invoked when the value of the <xref:System.Windows.Forms.NativeWindow.Handle%2A> property has changed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="445ce-198">В следующем примере кода демонстрируется создание окна с определенной операционной системой имя класса окна.</span><span class="sxs-lookup"><span data-stu-id="445ce-198">The following code example demonstrates creating a window with a specific operating system window class name.</span></span> <span data-ttu-id="445ce-199">В примере создается класс, который наследует от <xref:System.Windows.Forms.NativeWindow> для выполнения этой задачи.</span><span class="sxs-lookup"><span data-stu-id="445ce-199">The example creates a class that inherits from <xref:System.Windows.Forms.NativeWindow> to accomplish this.</span></span> <span data-ttu-id="445ce-200">В этом примере показано переопределение <xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A> метод получать уведомления при <xref:System.Windows.Forms.NativeWindow.Handle%2A> изменения.</span><span class="sxs-lookup"><span data-stu-id="445ce-200">The example also demonstrates overriding the <xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A> method to be notified when the <xref:System.Windows.Forms.NativeWindow.Handle%2A> changes.</span></span>  
  
 <span data-ttu-id="445ce-201">`MyNativeWindow` Класс создает новое окно с <xref:System.Windows.Forms.CreateParams.ClassName%2A> значение `BUTTON`.</span><span class="sxs-lookup"><span data-stu-id="445ce-201">The `MyNativeWindow` class creates a new window with the <xref:System.Windows.Forms.CreateParams.ClassName%2A> set to `BUTTON`.</span></span> <span data-ttu-id="445ce-202">При этом создается окно кнопки Win32.</span><span class="sxs-lookup"><span data-stu-id="445ce-202">This creates a Win32 button window.</span></span> <span data-ttu-id="445ce-203">Расположение и размер кнопки имеет значение, а также указанные дополнительные стили окна.</span><span class="sxs-lookup"><span data-stu-id="445ce-203">The location and size of the button is set, along with specifying additional window styles.</span></span> <span data-ttu-id="445ce-204">Класс демонстрирует использование <xref:System.Windows.Forms.NativeWindow.CreateHandle%2A> метод и переопределение <xref:System.Windows.Forms.NativeWindow.WndProc%2A> метод для перехвата сообщений окна, которые принимаются.</span><span class="sxs-lookup"><span data-stu-id="445ce-204">The class demonstrates how to use the <xref:System.Windows.Forms.NativeWindow.CreateHandle%2A> method and override the <xref:System.Windows.Forms.NativeWindow.WndProc%2A> method to intercept window messages that are received.</span></span> <span data-ttu-id="445ce-205">Несмотря на то, что в примере выполняется поиск сообщения WM_ACTIVATEAPP, оно может быть заменено в реальной программе сообщения окна, специфичные для созданного типа.</span><span class="sxs-lookup"><span data-stu-id="445ce-205">Although the example looks for the WM_ACTIVATEAPP message, this can be replaced in a real program with window messages specific to the type created.</span></span>  
  
 <span data-ttu-id="445ce-206">Этот код является фрагментом кода из примера, приведенного в <xref:System.Windows.Forms.NativeWindow> Общие сведения о классе.</span><span class="sxs-lookup"><span data-stu-id="445ce-206">This code is an excerpt from the example shown in the <xref:System.Windows.Forms.NativeWindow> class overview.</span></span> <span data-ttu-id="445ce-207">Часть кода не отображается для краткости изложения.</span><span class="sxs-lookup"><span data-stu-id="445ce-207">Some code is not shown for the purpose of brevity.</span></span> <span data-ttu-id="445ce-208">В разделе <xref:System.Windows.Forms.NativeWindow> для кода.</span><span class="sxs-lookup"><span data-stu-id="445ce-208">See <xref:System.Windows.Forms.NativeWindow> for the whole code listing.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="445ce-209">Некоторые типы элементов управления отправляют свои оконные сообщения родительскому вместо окна.</span><span class="sxs-lookup"><span data-stu-id="445ce-209">Some control types send their window messages to the window parent instead of the window.</span></span> <span data-ttu-id="445ce-210">Дополнительные сведения см. в разделе.</span><span class="sxs-lookup"><span data-stu-id="445ce-210">See the Windows Platform SDK for more information.</span></span>  
  
 [!code-cpp[NativeWindow#3](~/samples/snippets/cpp/VS_Snippets_Winforms/NativeWindow/CPP/form1.cpp#3)]
 [!code-csharp[NativeWindow#3](~/samples/snippets/csharp/VS_Snippets_Winforms/NativeWindow/CS/form1.cs#3)]
 [!code-vb[NativeWindow#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/NativeWindow/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="445ce-211">Переопределите этот метод, чтобы отслеживать изменения, внесенные в дескриптор окна.</span><span class="sxs-lookup"><span data-stu-id="445ce-211">Override this method to track changes that are made to the window handle.</span></span></para>
        </block>
        <altmember cref="P:System.Windows.Forms.NativeWindow.Handle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.DestroyHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.ReleaseHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
    <Member MemberName="OnThreadException">
      <MemberSignature Language="C#" Value="protected virtual void OnThreadException (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnThreadException(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.OnThreadException(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnThreadException (e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnThreadException(Exception ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="445ce-212">Объект <see cref="T:System.Exception" />, задающий необработанное исключение потока.</span><span class="sxs-lookup"><span data-stu-id="445ce-212">An <see cref="T:System.Exception" /> that specifies the unhandled thread exception.</span></span></param>
        <summary><span data-ttu-id="445ce-213">Будучи переопределен в производном классе, управляет необработанным исключением потока.</span><span class="sxs-lookup"><span data-stu-id="445ce-213">When overridden in a derived class, manages an unhandled thread exception.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="445ce-214">Как правило <xref:System.Windows.Forms.Application.OnThreadException%2A> исключения потока обрабатываются.</span><span class="sxs-lookup"><span data-stu-id="445ce-214">Typically, <xref:System.Windows.Forms.Application.OnThreadException%2A> handles thread exceptions.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NativeWindow.Handle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.DestroyHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.ReleaseHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)" />
        <altmember cref="T:System.Windows.Forms.Application" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseHandle">
      <MemberSignature Language="C#" Value="public virtual void ReleaseHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.ReleaseHandle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReleaseHandle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseHandle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="445ce-215">Освобождает дескриптор, связанный с данным окном.</span><span class="sxs-lookup"><span data-stu-id="445ce-215">Releases the handle associated with this window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="445ce-216">Этот метод не уничтожает дескриптор окна.</span><span class="sxs-lookup"><span data-stu-id="445ce-216">This method does not destroy the window handle.</span></span> <span data-ttu-id="445ce-217">Вместо этого он задает процедуру окна дескриптора процедуру окна по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="445ce-217">Instead, it sets the handle's window procedure to the default window procedure.</span></span> <span data-ttu-id="445ce-218">Он задает <xref:System.Windows.Forms.NativeWindow.Handle%2A> свойства равным 0 и вызывает <xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A> в соответствии с изменениями.</span><span class="sxs-lookup"><span data-stu-id="445ce-218">It sets the <xref:System.Windows.Forms.NativeWindow.Handle%2A> property to 0 and calls <xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A> to reflect the change.</span></span>  
  
 <span data-ttu-id="445ce-219">Окно автоматически вызывает этот метод, сообщение Win32 WM_NCDESTROY, указывающее на то, что Windows уничтожены дескриптор.</span><span class="sxs-lookup"><span data-stu-id="445ce-219">A window automatically calls this method if it receives a native Win32 WM_NCDESTROY message, indicating that Windows has destroyed the handle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="445ce-220">В следующем примере кода показывается перехват сообщений окна операционной системы в процедуру окна.</span><span class="sxs-lookup"><span data-stu-id="445ce-220">The following code example demonstrates intercepting operating system window messages in a window procedure.</span></span> <span data-ttu-id="445ce-221">В примере создается класс, который наследует от <xref:System.Windows.Forms.NativeWindow> для выполнения этой задачи.</span><span class="sxs-lookup"><span data-stu-id="445ce-221">The example creates a class that inherits from <xref:System.Windows.Forms.NativeWindow> to accomplish this.</span></span>  
  
 <span data-ttu-id="445ce-222">`MyNativeWindowListener` Класс подключает в процедуру окна формы, переданное конструктору и переопределяет <xref:System.Windows.Forms.NativeWindow.WndProc%2A> метод перехватывает `WM_ACTIVATEAPP` окна сообщения.</span><span class="sxs-lookup"><span data-stu-id="445ce-222">The `MyNativeWindowListener` class hooks into the window procedure of the form passed into the constructor, and overrides the <xref:System.Windows.Forms.NativeWindow.WndProc%2A> method to intercepts the `WM_ACTIVATEAPP` window message.</span></span> <span data-ttu-id="445ce-223">Класс демонстрирует использование <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A> и <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> методы для определения дескриптора окна <xref:System.Windows.Forms.NativeWindow> будет использовать.</span><span class="sxs-lookup"><span data-stu-id="445ce-223">The class demonstrates the use of the <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A> and <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> methods to identify the window handle the <xref:System.Windows.Forms.NativeWindow> will use.</span></span> <span data-ttu-id="445ce-224">Дескриптор назначается в зависимости от <xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType> и <xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType> события.</span><span class="sxs-lookup"><span data-stu-id="445ce-224">The handle is assign based upon the <xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType> and <xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType> events.</span></span> <span data-ttu-id="445ce-225">Когда `WM_ACTIVATEAPP` сообщение окна класса вызывает `form1.ApplicationActivated` метод.</span><span class="sxs-lookup"><span data-stu-id="445ce-225">When the `WM_ACTIVATEAPP` window message is received, the class calls the `form1.ApplicationActivated` method.</span></span>  
  
 <span data-ttu-id="445ce-226">Этот код является фрагментом кода из примера, приведенного в <xref:System.Windows.Forms.NativeWindow> Общие сведения о классе.</span><span class="sxs-lookup"><span data-stu-id="445ce-226">This code is an excerpt from the example shown in the <xref:System.Windows.Forms.NativeWindow> class overview.</span></span> <span data-ttu-id="445ce-227">Часть кода не отображается для краткости изложения.</span><span class="sxs-lookup"><span data-stu-id="445ce-227">Some code is not shown for the purpose of brevity.</span></span> <span data-ttu-id="445ce-228">В разделе <xref:System.Windows.Forms.NativeWindow> для кода.</span><span class="sxs-lookup"><span data-stu-id="445ce-228">See <xref:System.Windows.Forms.NativeWindow> for the whole code listing.</span></span>  
  
 [!code-cpp[NativeWindow#2](~/samples/snippets/cpp/VS_Snippets_Winforms/NativeWindow/CPP/form1.cpp#2)]
 [!code-csharp[NativeWindow#2](~/samples/snippets/csharp/VS_Snippets_Winforms/NativeWindow/CS/form1.cs#2)]
 [!code-vb[NativeWindow#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/NativeWindow/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NativeWindow.Handle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.DestroyHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.OnHandleChange" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.Finalize" />
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected virtual void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WndProc(System::Windows::Forms::Message % m);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message&amp;" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m"><span data-ttu-id="445ce-229">Объект <see cref="T:System.Windows.Forms.Message" />, связанный с текущим сообщением Windows.</span><span class="sxs-lookup"><span data-stu-id="445ce-229">A <see cref="T:System.Windows.Forms.Message" /> that is associated with the current Windows message.</span></span></param>
        <summary><span data-ttu-id="445ce-230">Вызывает процедуру окна по умолчанию, связанную с этим окном.</span><span class="sxs-lookup"><span data-stu-id="445ce-230">Invokes the default window procedure associated with this window.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="445ce-231">Этот метод вызывается при отправке сообщения окна дескриптор окна.</span><span class="sxs-lookup"><span data-stu-id="445ce-231">This method is called when a window message is sent to the handle of the window.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="445ce-232">В следующем примере кода показывается перехват сообщений окна операционной системы в процедуру окна.</span><span class="sxs-lookup"><span data-stu-id="445ce-232">The following code example demonstrates intercepting operating system window messages in a window procedure.</span></span> <span data-ttu-id="445ce-233">В примере создается класс, который наследует от <xref:System.Windows.Forms.NativeWindow> для выполнения этой задачи.</span><span class="sxs-lookup"><span data-stu-id="445ce-233">The example creates a class that inherits from <xref:System.Windows.Forms.NativeWindow> to accomplish this.</span></span>  
  
 <span data-ttu-id="445ce-234">`MyNativeWindowListener` Класс подключает в процедуру окна формы, переданное конструктору и переопределяет <xref:System.Windows.Forms.NativeWindow.WndProc%2A> метод для перехвата `WM_ACTIVATEAPP` окна сообщения.</span><span class="sxs-lookup"><span data-stu-id="445ce-234">The `MyNativeWindowListener` class hooks into the window procedure of the form passed into the constructor, and overrides the <xref:System.Windows.Forms.NativeWindow.WndProc%2A> method to intercept the `WM_ACTIVATEAPP` window message.</span></span> <span data-ttu-id="445ce-235">Класс демонстрирует использование <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A> и <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> методы для определения дескриптора окна <xref:System.Windows.Forms.NativeWindow> будет использовать.</span><span class="sxs-lookup"><span data-stu-id="445ce-235">The class demonstrates the use of the <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A> and <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> methods to identify the window handle the <xref:System.Windows.Forms.NativeWindow> will use.</span></span> <span data-ttu-id="445ce-236">Дескриптор назначается в зависимости от <xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType> и <xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType> события.</span><span class="sxs-lookup"><span data-stu-id="445ce-236">The handle is assigned based upon the <xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType> and <xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType> events.</span></span> <span data-ttu-id="445ce-237">Когда `WM_ACTIVATEAPP` сообщение окна класса вызывает `form1.ApplicationActivated` метод.</span><span class="sxs-lookup"><span data-stu-id="445ce-237">When the `WM_ACTIVATEAPP` window message is received, the class calls the `form1.ApplicationActivated` method.</span></span>  
  
 <span data-ttu-id="445ce-238">Этот код является фрагментом кода из примера, приведенного в <xref:System.Windows.Forms.NativeWindow> Общие сведения о классе.</span><span class="sxs-lookup"><span data-stu-id="445ce-238">This code is an excerpt from the example shown in the <xref:System.Windows.Forms.NativeWindow> class overview.</span></span> <span data-ttu-id="445ce-239">Часть кода не отображается для краткости изложения.</span><span class="sxs-lookup"><span data-stu-id="445ce-239">Some code is not shown for the purpose of brevity.</span></span> <span data-ttu-id="445ce-240">В разделе <xref:System.Windows.Forms.NativeWindow> для кода.</span><span class="sxs-lookup"><span data-stu-id="445ce-240">See <xref:System.Windows.Forms.NativeWindow> for the whole code listing.</span></span>  
  
 [!code-cpp[NativeWindow#2](~/samples/snippets/cpp/VS_Snippets_Winforms/NativeWindow/CPP/form1.cpp#2)]
 [!code-csharp[NativeWindow#2](~/samples/snippets/csharp/VS_Snippets_Winforms/NativeWindow/CS/form1.cs#2)]
 [!code-vb[NativeWindow#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/NativeWindow/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="445ce-241">Переопределите этот метод для реализации обработки конкретного сообщения.</span><span class="sxs-lookup"><span data-stu-id="445ce-241">Override this method to implement specific message processing.</span></span> <span data-ttu-id="445ce-242">Вызовите <c>базового. WndProc</c> для необработанных сообщений.</span><span class="sxs-lookup"><span data-stu-id="445ce-242">Call <c>base.WndProc</c> for unhandled messages.</span></span></para>
        </block>
        <altmember cref="P:System.Windows.Forms.NativeWindow.Handle" />
        <altmember cref="T:System.Windows.Forms.Message" />
        <altmember cref="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.OnThreadException(System.Exception)" />
      </Docs>
    </Member>
  </Members>
</Type>