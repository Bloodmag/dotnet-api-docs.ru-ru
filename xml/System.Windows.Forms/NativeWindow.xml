<Type Name="NativeWindow" FullName="System.Windows.Forms.NativeWindow">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1f08773771fb4a10a7de82ed774e9bbcb32dbf4e" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39979291" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class NativeWindow : MarshalByRefObject, System.Windows.Forms.IWin32Window" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi NativeWindow extends System.MarshalByRefObject implements class System.Windows.Forms.IWin32Window" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.NativeWindow" />
  <TypeSignature Language="VB.NET" Value="Public Class NativeWindow&#xA;Inherits MarshalByRefObject&#xA;Implements IWin32Window" />
  <TypeSignature Language="C++ CLI" Value="public ref class NativeWindow : MarshalByRefObject, System::Windows::Forms::IWin32Window" />
  <TypeSignature Language="F#" Value="type NativeWindow = class&#xA;    inherit MarshalByRefObject&#xA;    interface IWin32Window" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Windows.Forms.IWin32Window</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="2308c-101">Обеспечивает низкоуровневую инкапсуляцию дескриптора окна и процедуры окна.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2308c-101">Provides a low-level encapsulation of a window handle and a window procedure.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2308c-102">Этот класс автоматически управляет созданием и класса окна регистрации.</span><span class="sxs-lookup"><span data-stu-id="2308c-102">This class automatically manages window class creation and registration.</span></span>  
  
 <span data-ttu-id="2308c-103">Окно не под сбор мусора, когда оно связано с дескриптором окна.</span><span class="sxs-lookup"><span data-stu-id="2308c-103">A window is not eligible for garbage collection when it is associated with a window handle.</span></span> <span data-ttu-id="2308c-104">Чтобы обеспечить правильную сборку мусора, дескрипторы должны быть либо уничтожены вручную с помощью <xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A> или освобожден посредством <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A>.</span><span class="sxs-lookup"><span data-stu-id="2308c-104">To ensure proper garbage collection, handles must either be destroyed manually using <xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A> or released using <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2308c-105"><xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> Был вызван при обработке сообщения WM_NCDESTROY.</span><span class="sxs-lookup"><span data-stu-id="2308c-105">The <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> method is called when the WM_NCDESTROY message is processed.</span></span> <span data-ttu-id="2308c-106">Это означает, что существуют случаи, в который, будучи не нужно вручную вызвать <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A>, но рекомендуется сделать это.</span><span class="sxs-lookup"><span data-stu-id="2308c-106">This means there are cases in which when you do not need to manually call <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A>, but it is good practice to do so.</span></span>  
  
 <span data-ttu-id="2308c-107"><xref:System.Windows.Forms.NativeWindow> Класс предоставляет следующие свойства и методы управления дескрипторами: <xref:System.Windows.Forms.NativeWindow.Handle%2A>, <xref:System.Windows.Forms.NativeWindow.CreateHandle%2A>, <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A>, <xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A>, и <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A>.</span><span class="sxs-lookup"><span data-stu-id="2308c-107">The <xref:System.Windows.Forms.NativeWindow> class provides the following properties and methods to manage handles: <xref:System.Windows.Forms.NativeWindow.Handle%2A>, <xref:System.Windows.Forms.NativeWindow.CreateHandle%2A>, <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A>, <xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A>, and <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2308c-108">В следующем примере кода демонстрируется перехват сообщений окна операционной системы в процедуре окна и создание окна с определенной операционной системой имя класса окна.</span><span class="sxs-lookup"><span data-stu-id="2308c-108">The following code example demonstrates intercepting operating system window messages in a window procedure, and creating a window with a specific operating system window class name.</span></span> <span data-ttu-id="2308c-109">В примере создается два класса, которые наследуют <xref:System.Windows.Forms.NativeWindow> этого.</span><span class="sxs-lookup"><span data-stu-id="2308c-109">The example creates two classes that inherit from <xref:System.Windows.Forms.NativeWindow> that accomplish this.</span></span>  
  
 <span data-ttu-id="2308c-110">`MyNativeWindowListener` Класс подключается в процедуре окна формы, переданные в конструктор и переопределяет <xref:System.Windows.Forms.NativeWindow.WndProc%2A> метод для перехвата `WM_ACTIVATEAPP` сообщения окна.</span><span class="sxs-lookup"><span data-stu-id="2308c-110">The `MyNativeWindowListener` class hooks into the window procedure of the form passed into the constructor, and overrides the <xref:System.Windows.Forms.NativeWindow.WndProc%2A> method to intercept the `WM_ACTIVATEAPP` window message.</span></span> <span data-ttu-id="2308c-111">Класс демонстрирует использование <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A> и <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> методы для определения дескриптор окна <xref:System.Windows.Forms.NativeWindow> будет использовать.</span><span class="sxs-lookup"><span data-stu-id="2308c-111">The class demonstrates the usage of the <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A> and <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> methods to identify the window handle the <xref:System.Windows.Forms.NativeWindow> will use.</span></span> <span data-ttu-id="2308c-112">Дескриптор назначается в зависимости от <xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType> и <xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType> события.</span><span class="sxs-lookup"><span data-stu-id="2308c-112">The handle is assign based upon the <xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType> and <xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType> events.</span></span> <span data-ttu-id="2308c-113">Когда `WM_ACTIVATEAPP` оконное сообщение поступает, класс вызывает `form1.ApplicationActivated` метод.</span><span class="sxs-lookup"><span data-stu-id="2308c-113">When the `WM_ACTIVATEAPP` window message is received, the class calls the `form1.ApplicationActivated` method.</span></span>  
  
 <span data-ttu-id="2308c-114">`MyNativeWindow` Класс создает новое окно с <xref:System.Windows.Forms.CreateParams.ClassName%2A> присвоено `BUTTON`.</span><span class="sxs-lookup"><span data-stu-id="2308c-114">The `MyNativeWindow` class creates a new window with the <xref:System.Windows.Forms.CreateParams.ClassName%2A> set to `BUTTON`.</span></span> <span data-ttu-id="2308c-115">Класс демонстрирует использование <xref:System.Windows.Forms.NativeWindow.CreateHandle%2A> метод и переопределение <xref:System.Windows.Forms.NativeWindow.WndProc%2A> метод для перехвата сообщений окна, которые получены.</span><span class="sxs-lookup"><span data-stu-id="2308c-115">The class demonstrates using the <xref:System.Windows.Forms.NativeWindow.CreateHandle%2A> method and overriding the <xref:System.Windows.Forms.NativeWindow.WndProc%2A> method to intercept window messages that are received.</span></span>  
  
 [!code-cpp[NativeWindow#1](~/samples/snippets/cpp/VS_Snippets_Winforms/NativeWindow/CPP/form1.cpp#1)]
 [!code-csharp[NativeWindow#1](~/samples/snippets/csharp/VS_Snippets_Winforms/NativeWindow/CS/form1.cs#1)]
 [!code-vb[NativeWindow#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/NativeWindow/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <permission cref="T:System.Security.Permissions.SecurityPermission">
      <span data-ttu-id="2308c-116">для непосредственного вызывающего на вызов неуправляемого кода.</span>
      <span class="sxs-lookup">
        <span data-stu-id="2308c-116">for the immediate caller to call unmanaged code.</span>
      </span>
      <span data-ttu-id="2308c-117">Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
      <span class="sxs-lookup">
        <span data-stu-id="2308c-117">Associated enumeration: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.UnmanagedCode" /></span>
      </span>
    </permission>
    <altmember cref="T:System.IntPtr" />
    <altmember cref="T:System.Windows.Forms.Application" />
    <altmember cref="T:System.Windows.Forms.AxHost" />
    <altmember cref="T:System.Windows.Forms.Control" />
    <altmember cref="T:System.Windows.Forms.Form" />
    <altmember cref="T:System.Windows.Forms.IWin32Window" />
    <altmember cref="T:System.Windows.Forms.Message" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NativeWindow ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NativeWindow();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2308c-118">Инициализирует экземпляр класса <see cref="T:System.Windows.Forms.NativeWindow" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2308c-118">Initializes an instance of the <see cref="T:System.Windows.Forms.NativeWindow" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2308c-119">Это значение по умолчанию <xref:System.Windows.Forms.NativeWindow.%23ctor%2A> конструктор, предоставляемого компилятором.</span><span class="sxs-lookup"><span data-stu-id="2308c-119">This is the default <xref:System.Windows.Forms.NativeWindow.%23ctor%2A> constructor provided by the compiler.</span></span> <span data-ttu-id="2308c-120"><xref:System.Windows.Forms.NativeWindow> Класс также имеет статический конструктор, который инициализирует обработчики сообщений домена приложения и хэш-таблицы.</span><span class="sxs-lookup"><span data-stu-id="2308c-120">The <xref:System.Windows.Forms.NativeWindow> class also has a static constructor that initializes application domain-wide message handlers and hash tables.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.NativeWindow.Finalize" />
        <altmember cref="T:System.AppDomain" />
      </Docs>
    </Member>
    <Member MemberName="AssignHandle">
      <MemberSignature Language="C#" Value="public void AssignHandle (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AssignHandle(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AssignHandle (handle As IntPtr)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AssignHandle(IntPtr handle);" />
      <MemberSignature Language="F#" Value="member this.AssignHandle : nativeint -&gt; unit" Usage="nativeWindow.AssignHandle handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">
          <span data-ttu-id="2308c-121">Дескриптор, назначаемый данному окну.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2308c-121">The handle to assign to this window.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2308c-122">Назначает дескриптор данному окну.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2308c-122">Assigns a handle to this window.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2308c-123"><xref:System.Windows.Forms.NativeWindow.WndProc%2A> перехватывает окно сообщения, отправляемые `handle` параметра.</span><span class="sxs-lookup"><span data-stu-id="2308c-123"><xref:System.Windows.Forms.NativeWindow.WndProc%2A> intercepts window messages sent to the `handle` parameter.</span></span> <span data-ttu-id="2308c-124">Используйте <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> для сброса процедуру дескриптор окна в процедуре окна по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2308c-124">Use <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> to reset the handle's window procedure to the default window procedure.</span></span>  
  
 <span data-ttu-id="2308c-125"><xref:System.Windows.Forms.NativeWindow.AssignHandle%2A> Вызовы методов <xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A> метод, чтобы указать, что значение <xref:System.Windows.Forms.NativeWindow.Handle%2A> свойство изменилось.</span><span class="sxs-lookup"><span data-stu-id="2308c-125">The <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A> method calls the <xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A> method to indicate that the value of the <xref:System.Windows.Forms.NativeWindow.Handle%2A> property has changed.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2308c-126">Дескриптор для назначения не может быть в процессе другое приложение.</span><span class="sxs-lookup"><span data-stu-id="2308c-126">The handle to assign cannot be in a different application process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2308c-127">В следующем примере кода демонстрируется перехват сообщений окна операционной системы в процедуре окна.</span><span class="sxs-lookup"><span data-stu-id="2308c-127">The following code example demonstrates intercepting operating system window messages in a window procedure.</span></span> <span data-ttu-id="2308c-128">В примере создается класс, наследуемый от <xref:System.Windows.Forms.NativeWindow> для выполнения этой задачи.</span><span class="sxs-lookup"><span data-stu-id="2308c-128">The example creates a class that inherits from <xref:System.Windows.Forms.NativeWindow> to accomplish this.</span></span>  
  
 <span data-ttu-id="2308c-129">`MyNativeWindowListener` Класс подключается в процедуре окна формы, переданные в конструктор и переопределяет <xref:System.Windows.Forms.NativeWindow.WndProc%2A> метод перехватывает `WM_ACTIVATEAPP` сообщения окна.</span><span class="sxs-lookup"><span data-stu-id="2308c-129">The `MyNativeWindowListener` class hooks into the window procedure of the form passed into the constructor, and overrides the <xref:System.Windows.Forms.NativeWindow.WndProc%2A> method to intercepts the `WM_ACTIVATEAPP` window message.</span></span> <span data-ttu-id="2308c-130">Класс демонстрирует использование <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A> и <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> методы для определения окна обработки <xref:System.Windows.Forms.NativeWindow> будет использовать.</span><span class="sxs-lookup"><span data-stu-id="2308c-130">The class demonstrates the use of the <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A> and <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> methods to identify which window handle the <xref:System.Windows.Forms.NativeWindow> will use.</span></span> <span data-ttu-id="2308c-131">Дескриптор назначается в зависимости от <xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType> и <xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType> события.</span><span class="sxs-lookup"><span data-stu-id="2308c-131">The handle is assigned based upon the <xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType> and <xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType> events.</span></span> <span data-ttu-id="2308c-132">Когда `WM_ACTIVATEAPP` оконное сообщение поступает, класс вызывает `form1.ApplicationActivated` метод.</span><span class="sxs-lookup"><span data-stu-id="2308c-132">When the `WM_ACTIVATEAPP` window message is received, the class calls the `form1.ApplicationActivated` method.</span></span>  
  
 <span data-ttu-id="2308c-133">Этот код является выдержкой из примера, приведенного в <xref:System.Windows.Forms.NativeWindow> Общие сведения о классе.</span><span class="sxs-lookup"><span data-stu-id="2308c-133">This code is an excerpt from the example shown in the <xref:System.Windows.Forms.NativeWindow> class overview.</span></span> <span data-ttu-id="2308c-134">Для краткости изложения код не отображается.</span><span class="sxs-lookup"><span data-stu-id="2308c-134">Some code is not shown for the purpose of brevity.</span></span> <span data-ttu-id="2308c-135">См. в разделе <xref:System.Windows.Forms.NativeWindow> для кода.</span><span class="sxs-lookup"><span data-stu-id="2308c-135">See <xref:System.Windows.Forms.NativeWindow> for the whole code listing.</span></span>  
  
 [!code-cpp[NativeWindow#2](~/samples/snippets/cpp/VS_Snippets_Winforms/NativeWindow/CPP/form1.cpp#2)]
 [!code-csharp[NativeWindow#2](~/samples/snippets/csharp/VS_Snippets_Winforms/NativeWindow/CS/form1.cs#2)]
 [!code-vb[NativeWindow#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/NativeWindow/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Exception">
          <span data-ttu-id="2308c-136">Этому окну уже назначен дескриптор.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2308c-136">This window already has a handle.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="2308c-137">Не удается извлечь процедуру окна для связанного собственного окна.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2308c-137">The windows procedure for the associated native window could not be retrieved.</span>
          </span>
        </exception>
        <altmember cref="P:System.Windows.Forms.NativeWindow.Handle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.DestroyHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.ReleaseHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.Finalize" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.OnHandleChange" />
      </Docs>
    </Member>
    <Member MemberName="CreateHandle">
      <MemberSignature Language="C#" Value="public virtual void CreateHandle (System.Windows.Forms.CreateParams cp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CreateHandle(class System.Windows.Forms.CreateParams cp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CreateHandle (cp As CreateParams)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CreateHandle(System::Windows::Forms::CreateParams ^ cp);" />
      <MemberSignature Language="F#" Value="abstract member CreateHandle : System.Windows.Forms.CreateParams -&gt; unit&#xA;override this.CreateHandle : System.Windows.Forms.CreateParams -&gt; unit" Usage="nativeWindow.CreateHandle cp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cp" Type="System.Windows.Forms.CreateParams" />
      </Parameters>
      <Docs>
        <param name="cp">
          <span data-ttu-id="2308c-138">Структура <see cref="T:System.Windows.Forms.CreateParams" />, задающая параметры создания для данного окна.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2308c-138">A <see cref="T:System.Windows.Forms.CreateParams" /> that specifies the creation parameters for this window.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2308c-139">Создает окно и его дескриптор, используя указанные параметры создания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2308c-139">Creates a window and its handle with the specified creation parameters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2308c-140">`cp` Определяет значения, которые передаются в машинном коде Win32 `CreateWindowEx` метод для создания окна и его дескриптор.</span><span class="sxs-lookup"><span data-stu-id="2308c-140">The `cp` parameter specifies the values that are passed to the native Win32 `CreateWindowEx` method to create a window and its handle.</span></span>  
  
 <span data-ttu-id="2308c-141">Когда <xref:System.Windows.Forms.CreateParams.ClassName%2A> поле не `null`, наследует дескриптор только что созданный из указанного класса.</span><span class="sxs-lookup"><span data-stu-id="2308c-141">When the <xref:System.Windows.Forms.CreateParams.ClassName%2A> field is not `null`, the newly created window handle inherits from the specified class.</span></span> <span data-ttu-id="2308c-142">Например если <xref:System.Windows.Forms.CreateParams.ClassName%2A> присваивается `BUTTON`, вновь созданное окно основан на Win32 `BUTTON` класс окна.</span><span class="sxs-lookup"><span data-stu-id="2308c-142">For example, if <xref:System.Windows.Forms.CreateParams.ClassName%2A> is set to `BUTTON`, the newly created window is based on the Win32 `BUTTON` window class.</span></span> <span data-ttu-id="2308c-143"><xref:System.Windows.Forms.CreateParams.Param%2A> Свойство <xref:System.Windows.Forms.CreateParams.ClassName%2A> объект должен быть `null` или ссылку на экземпляр класса, который был объявлен как структура.</span><span class="sxs-lookup"><span data-stu-id="2308c-143">The <xref:System.Windows.Forms.CreateParams.Param%2A> property of the <xref:System.Windows.Forms.CreateParams.ClassName%2A> object must either be `null` or reference an instance of a class that was declared as a structure.</span></span>  
  
 <span data-ttu-id="2308c-144">Этот код является выдержкой из примера, приведенного в <xref:System.Windows.Forms.NativeWindow> Общие сведения о классе.</span><span class="sxs-lookup"><span data-stu-id="2308c-144">This code is an excerpt from the example shown in the <xref:System.Windows.Forms.NativeWindow> class overview.</span></span> <span data-ttu-id="2308c-145">Для краткости изложения код не отображается.</span><span class="sxs-lookup"><span data-stu-id="2308c-145">Some code is not shown for the purpose of brevity.</span></span> <span data-ttu-id="2308c-146">См. в разделе <xref:System.Windows.Forms.NativeWindow> для кода.</span><span class="sxs-lookup"><span data-stu-id="2308c-146">See <xref:System.Windows.Forms.NativeWindow> for the whole code listing.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2308c-147">Предоставленное имя класса регистрируется с операционной системой.</span><span class="sxs-lookup"><span data-stu-id="2308c-147">The class name provided is registered with the operating system.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2308c-148">В следующем примере кода показано создание окна с определенной операционной системой имя класса окна.</span><span class="sxs-lookup"><span data-stu-id="2308c-148">The following code example demonstrates creating a window with a specific operating system window class name.</span></span> <span data-ttu-id="2308c-149">В примере создается класс, наследуемый от <xref:System.Windows.Forms.NativeWindow> для выполнения этой задачи.</span><span class="sxs-lookup"><span data-stu-id="2308c-149">The example creates a class that inherits from <xref:System.Windows.Forms.NativeWindow> to accomplish this.</span></span>  
  
 <span data-ttu-id="2308c-150">`MyNativeWindow` Класс создает новое окно с <xref:System.Windows.Forms.CreateParams.ClassName%2A> присвоено `BUTTON`.</span><span class="sxs-lookup"><span data-stu-id="2308c-150">The `MyNativeWindow` class creates a new window with the <xref:System.Windows.Forms.CreateParams.ClassName%2A> set to `BUTTON`.</span></span> <span data-ttu-id="2308c-151">При этом создается окно кнопки Win32.</span><span class="sxs-lookup"><span data-stu-id="2308c-151">This creates a Win32 button window.</span></span> <span data-ttu-id="2308c-152">Расположение и размер кнопки имеет значение, а также указанные дополнительные стили окна.</span><span class="sxs-lookup"><span data-stu-id="2308c-152">The location and size of the button is set, along with specifying additional window styles.</span></span> <span data-ttu-id="2308c-153">Класс демонстрирует использование <xref:System.Windows.Forms.NativeWindow.CreateHandle%2A> метод и переопределение <xref:System.Windows.Forms.NativeWindow.WndProc%2A> метод для перехвата сообщений окна, которые получены.</span><span class="sxs-lookup"><span data-stu-id="2308c-153">The class demonstrates how to use the <xref:System.Windows.Forms.NativeWindow.CreateHandle%2A> method and override the <xref:System.Windows.Forms.NativeWindow.WndProc%2A> method to intercept window messages that are received.</span></span> <span data-ttu-id="2308c-154">Несмотря на то, что в примере выполняется поиск сообщения WM_ACTIVATEAPP, его можно заменить в реальной программе сообщения окна, специфичные для созданного типа.</span><span class="sxs-lookup"><span data-stu-id="2308c-154">Although the example looks for the WM_ACTIVATEAPP message, this can be replaced in a real program with window messages specific to the type created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2308c-155">Некоторые типы элементов управления отправляют свои оконные сообщения для родительского окна, а не в окно.</span><span class="sxs-lookup"><span data-stu-id="2308c-155">Some control types send their window messages to the window parent instead of the window.</span></span> <span data-ttu-id="2308c-156">См. в разделе Platform SDK Windows, Дополнительные сведения.</span><span class="sxs-lookup"><span data-stu-id="2308c-156">See the Windows Platform SDK for more information.</span></span>  
  
 [!code-cpp[NativeWindow#3](~/samples/snippets/cpp/VS_Snippets_Winforms/NativeWindow/CPP/form1.cpp#3)]
 [!code-csharp[NativeWindow#3](~/samples/snippets/csharp/VS_Snippets_Winforms/NativeWindow/CS/form1.cs#3)]
 [!code-vb[NativeWindow#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/NativeWindow/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OutOfMemoryException">
          <span data-ttu-id="2308c-157">При попытке создать собственное окно закончились ресурсы операционной системы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2308c-157">The operating system ran out of resources when trying to create the native window.</span>
          </span>
        </exception>
        <exception cref="T:System.ComponentModel.Win32Exception">
          <span data-ttu-id="2308c-158">Не удается создать указанное окно с помощью собственного интерфейса Win32 API.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2308c-158">The native Win32 API could not create the specified window.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2308c-159">Дескриптор текущего собственного окна уже назначен; в пояснении свойство <see cref="P:System.Windows.Forms.NativeWindow.Handle" /> не равно <see cref="F:System.IntPtr.Zero" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2308c-159">The handle of the current native window is already assigned; in explanation, the <see cref="P:System.Windows.Forms.NativeWindow.Handle" /> property is not equal to <see cref="F:System.IntPtr.Zero" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="2308c-160">для создания окна верхнего уровня.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2308c-160">to create a top-level window.</span>
          </span>
          <span data-ttu-id="2308c-161">Это разрешение необходимо только в том случае, если стиль окна не является дочерним, или если окно имеет родительский элемент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2308c-161">This permission is only demanded if the window style is not a child or if the window does not have a parent.</span>
          </span>
          <span data-ttu-id="2308c-162">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2308c-162">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.SafeTopLevelWindows" /></span>
          </span>
        </permission>
        <altmember cref="T:System.Windows.Forms.CreateParams" />
        <altmember cref="P:System.Windows.Forms.NativeWindow.Handle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.DestroyHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.Finalize" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.ReleaseHandle" />
      </Docs>
    </Member>
    <Member MemberName="DefWndProc">
      <MemberSignature Language="C#" Value="public void DefWndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DefWndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.DefWndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DefWndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DefWndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="member this.DefWndProc :  -&gt; unit" Usage="nativeWindow.DefWndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="2308c-163">Обрабатываемое в данный момент сообщение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2308c-163">The message that is currently being processed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2308c-164">Вызывает процедуру окна по умолчанию, связанную с этим окном.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2308c-164">Invokes the default window procedure associated with this window.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2308c-165">Как правило, вызывается только <xref:System.Windows.Forms.NativeWindow.DefWndProc%2A> метод при перехвате сообщений окна и хотите процедуру окна по умолчанию для обработки сообщения.</span><span class="sxs-lookup"><span data-stu-id="2308c-165">Typically, you only call the <xref:System.Windows.Forms.NativeWindow.DefWndProc%2A> method when you are intercepting window messages and would like the default window procedure to handle the message.</span></span> <span data-ttu-id="2308c-166"><xref:System.Windows.Forms.NativeWindow.DefWndProc%2A> не следует вызывать для отправки сообщения окна для окна. вызов Win32 `SendMessage` вместо этого функцию.</span><span class="sxs-lookup"><span data-stu-id="2308c-166"><xref:System.Windows.Forms.NativeWindow.DefWndProc%2A> should not be called to send a window message to the window; call the Win32 `SendMessage` function instead.</span></span>  
  
 <span data-ttu-id="2308c-167">Это ошибка для вызова <xref:System.Windows.Forms.NativeWindow.DefWndProc%2A> при <xref:System.Windows.Forms.NativeWindow.Handle%2A> свойства равно 0.</span><span class="sxs-lookup"><span data-stu-id="2308c-167">It is an error to call <xref:System.Windows.Forms.NativeWindow.DefWndProc%2A> when the <xref:System.Windows.Forms.NativeWindow.Handle%2A> property is 0.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="2308c-168">
            <para>Переопределите этот метод в производном классе для реализации универсального обработку настраиваемых сообщений для определенного собственного окна или .NET Windows Forms <see cref="T:System.Windows.Forms.Control" />. Настраиваемая обработка может выполняться до, после или вместо вызова реализации базового класса этот метод, который выполняет обработку стандартное сообщение.  В противоположность этому, Добавление настраиваемых обработка сообщений для приложения может быть выполнен через <see cref="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)" /> метод <see cref="T:System.Windows.Forms.Application" /> класса.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="2308c-168">
              <para>Override this method in a derived class to implement generalized custom message handling for a specific native window or .NET Windows Forms <see cref="T:System.Windows.Forms.Control" />. Custom processing can be performed before, after, or instead of a call to the base class implementation of this method, which performs standard message processing.  In contrast, adding customized message handling for an application can be accomplished through the <see cref="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)" /> method of the <see cref="T:System.Windows.Forms.Application" /> class.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Windows.Forms.Message" />
        <altmember cref="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)" />
        <altmember cref="M:System.Windows.Forms.Application.AddMessageFilter(System.Windows.Forms.IMessageFilter)" />
      </Docs>
    </Member>
    <Member MemberName="DestroyHandle">
      <MemberSignature Language="C#" Value="public virtual void DestroyHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DestroyHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.DestroyHandle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DestroyHandle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DestroyHandle();" />
      <MemberSignature Language="F#" Value="abstract member DestroyHandle : unit -&gt; unit&#xA;override this.DestroyHandle : unit -&gt; unit" Usage="nativeWindow.DestroyHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2308c-169">Уничтожает окно и его дескриптор.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2308c-169">Destroys the window and its handle.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2308c-170">Этот метод уничтожает окно, связанное с <xref:System.Windows.Forms.NativeWindow.Handle%2A>, задает <xref:System.Windows.Forms.NativeWindow.Handle%2A> свойство 0, а также вызовы <xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A> метода в соответствии с изменениями.</span><span class="sxs-lookup"><span data-stu-id="2308c-170">This method destroys the window associated with the <xref:System.Windows.Forms.NativeWindow.Handle%2A>, sets the <xref:System.Windows.Forms.NativeWindow.Handle%2A> property to 0, and calls the <xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A> method to reflect the change.</span></span> <span data-ttu-id="2308c-171">Как правило, вызывается только <xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A> после с помощью собственного окна.</span><span class="sxs-lookup"><span data-stu-id="2308c-171">Typically, you only call <xref:System.Windows.Forms.NativeWindow.DestroyHandle%2A> when you are done with the native window.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2308c-172"><xref:System.Windows.Forms.NativeWindow> Класс автоматически уничтожит соответствующее окно и освобождения ресурсов в ответ на сообщение WM_DESTROY.</span><span class="sxs-lookup"><span data-stu-id="2308c-172">The <xref:System.Windows.Forms.NativeWindow> class automatically will destroy the associated window and release its resources in response to a WM_DESTROY message.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NativeWindow.Handle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.Finalize" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.ReleaseHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.OnHandleChange" />
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~NativeWindow ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!NativeWindow ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="nativeWindow.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2308c-173">Освобождает ресурсы, связанные с данным окном.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2308c-173">Releases the resources associated with this window.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2308c-174"><xref:System.Windows.Forms.NativeWindow.Finalize%2A> Метод удаляет Win32 производный класс, связанный с текущим <xref:System.Windows.Forms.NativeWindow> экземпляра, освобождает дескриптор и отправляет сообщения WM_CLOSE соответствующее окно.</span><span class="sxs-lookup"><span data-stu-id="2308c-174">The <xref:System.Windows.Forms.NativeWindow.Finalize%2A> method removes the Win32 derived class associated with the current <xref:System.Windows.Forms.NativeWindow> instance, releases the handle, and posts a WM_CLOSE message to the associated window.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.NativeWindow.#ctor" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.ReleaseHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.DestroyHandle" />
      </Docs>
    </Member>
    <Member MemberName="FromHandle">
      <MemberSignature Language="C#" Value="public static System.Windows.Forms.NativeWindow FromHandle (IntPtr handle);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Forms.NativeWindow FromHandle(native int handle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.FromHandle(System.IntPtr)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FromHandle (handle As IntPtr) As NativeWindow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Forms::NativeWindow ^ FromHandle(IntPtr handle);" />
      <MemberSignature Language="F#" Value="static member FromHandle : nativeint -&gt; System.Windows.Forms.NativeWindow" Usage="System.Windows.Forms.NativeWindow.FromHandle handle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.NativeWindow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="handle" Type="System.IntPtr" />
      </Parameters>
      <Docs>
        <param name="handle">
          <span data-ttu-id="2308c-175">Дескриптор окна.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2308c-175">A handle to a window.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2308c-176">Извлекает окно, связанное с указанным дескриптором.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2308c-176">Retrieves the window associated with the specified handle.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2308c-177">Класс <see cref="T:System.Windows.Forms.NativeWindow" />, связанный с указанным дескриптором.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2308c-177">The <see cref="T:System.Windows.Forms.NativeWindow" /> associated with the specified handle.</span>
          </span>
          <span data-ttu-id="2308c-178">Если дескриптор не связан ни с каким окном, этот метод возвращает <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2308c-178">This method returns <see langword="null" /> when the handle does not have an associated window.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2308c-179">Если вы получаете дескриптор из другого метода, используйте этот метод для извлечения окно, связанное с дескриптором.</span><span class="sxs-lookup"><span data-stu-id="2308c-179">If you receive a handle from another method, use this method to retrieve the window associated with the handle.</span></span> <span data-ttu-id="2308c-180">Дескриптор уже принадлежит другой <xref:System.Windows.Forms.NativeWindow> в текущем обработки; в противном случае — значение `null` возвращается.</span><span class="sxs-lookup"><span data-stu-id="2308c-180">The handle must already be owned by another <xref:System.Windows.Forms.NativeWindow> in the current process; otherwise, `null` is returned.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NativeWindow.Handle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.DestroyHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.ReleaseHandle" />
      </Docs>
    </Member>
    <Member MemberName="Handle">
      <MemberSignature Language="C#" Value="public IntPtr Handle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance native int Handle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.NativeWindow.Handle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Handle As IntPtr" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property IntPtr Handle { IntPtr get(); };" />
      <MemberSignature Language="F#" Value="member this.Handle : nativeint" Usage="System.Windows.Forms.NativeWindow.Handle" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Forms.IWin32Window.Handle</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IntPtr</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2308c-181">Получает дескриптор данного окна.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2308c-181">Gets the handle for this window.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2308c-182">В случае успеха объект <see cref="T:System.IntPtr" />, представляющий дескриптор для связанного собственного окна Win32; в противном случае — 0, если нет дескриптора, связанного с окном.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2308c-182">If successful, an <see cref="T:System.IntPtr" /> representing the handle to the associated native Win32 window; otherwise, 0 if no handle is associated with the window.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2308c-183">Используйте этот метод при вызове методов Windows API, требующими дескриптор окна или элемента управления.</span><span class="sxs-lookup"><span data-stu-id="2308c-183">Use this method when calling Windows API methods that require a handle for a window or control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2308c-184">В следующем примере кода показано создание окна с определенной операционной системой имя класса окна.</span><span class="sxs-lookup"><span data-stu-id="2308c-184">The following code example demonstrates creating a window with a specific operating system window class name.</span></span> <span data-ttu-id="2308c-185">В примере создается класс, наследуемый от <xref:System.Windows.Forms.NativeWindow> для выполнения этой задачи.</span><span class="sxs-lookup"><span data-stu-id="2308c-185">The example creates a class that inherits from <xref:System.Windows.Forms.NativeWindow> to accomplish this.</span></span> <span data-ttu-id="2308c-186">В этом примере показано переопределение <xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A> метод получить уведомление при <xref:System.Windows.Forms.NativeWindow.Handle%2A> изменения.</span><span class="sxs-lookup"><span data-stu-id="2308c-186">The example also demonstrates overriding the <xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A> method to be notified when the <xref:System.Windows.Forms.NativeWindow.Handle%2A> changes.</span></span>  
  
 <span data-ttu-id="2308c-187">`MyNativeWindow` Класс создает новое окно с <xref:System.Windows.Forms.CreateParams.ClassName%2A> значение кнопки.</span><span class="sxs-lookup"><span data-stu-id="2308c-187">The `MyNativeWindow` class creates a new window with the <xref:System.Windows.Forms.CreateParams.ClassName%2A> set to BUTTON.</span></span> <span data-ttu-id="2308c-188">При этом создается окно кнопки Win32.</span><span class="sxs-lookup"><span data-stu-id="2308c-188">This creates a Win32 button window.</span></span> <span data-ttu-id="2308c-189">Расположение и размер кнопки имеет значение, а также указанные дополнительные стили окна.</span><span class="sxs-lookup"><span data-stu-id="2308c-189">The location and size of the button is set, along with specifying additional window styles.</span></span> <span data-ttu-id="2308c-190">Класс демонстрирует использование <xref:System.Windows.Forms.NativeWindow.CreateHandle%2A> метод и переопределение <xref:System.Windows.Forms.NativeWindow.WndProc%2A> метод для перехвата сообщений окна, которые получены.</span><span class="sxs-lookup"><span data-stu-id="2308c-190">The class demonstrates how to use the <xref:System.Windows.Forms.NativeWindow.CreateHandle%2A> method and override the <xref:System.Windows.Forms.NativeWindow.WndProc%2A> method to intercept window messages that are received.</span></span> <span data-ttu-id="2308c-191">Несмотря на то, что в примере выполняется поиск сообщения WM_ACTIVATEAPP, это может быть заменено в реальной программе сообщения окна, специфичные для созданного типа.</span><span class="sxs-lookup"><span data-stu-id="2308c-191">Although the example looks for the WM_ACTIVATEAPP message, this could be replaced in a real program with window messages specific to the type created.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2308c-192">Некоторые типы элементов управления отправляют свои оконные сообщения для родительского окна, а не в окно.</span><span class="sxs-lookup"><span data-stu-id="2308c-192">Some control types send their window messages to the window parent instead of the window.</span></span> <span data-ttu-id="2308c-193">См. в разделе Platform SDK Windows, Дополнительные сведения.</span><span class="sxs-lookup"><span data-stu-id="2308c-193">See the Windows Platform SDK for more information.</span></span>  
  
 [!code-cpp[NativeWindow#3](~/samples/snippets/cpp/VS_Snippets_Winforms/NativeWindow/CPP/form1.cpp#3)]
 [!code-csharp[NativeWindow#3](~/samples/snippets/csharp/VS_Snippets_Winforms/NativeWindow/CS/form1.cs#3)]
 [!code-vb[NativeWindow#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/NativeWindow/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.DestroyHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.ReleaseHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.OnHandleChange" />
      </Docs>
    </Member>
    <Member MemberName="OnHandleChange">
      <MemberSignature Language="C#" Value="protected virtual void OnHandleChange ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnHandleChange() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.OnHandleChange" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnHandleChange ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnHandleChange();" />
      <MemberSignature Language="F#" Value="abstract member OnHandleChange : unit -&gt; unit&#xA;override this.OnHandleChange : unit -&gt; unit" Usage="nativeWindow.OnHandleChange " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2308c-194">Задает метод уведомления, вызываемый при изменении дескриптора окна.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2308c-194">Specifies a notification method that is called when the handle for a window is changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2308c-195">Этот метод вызывается при значение <xref:System.Windows.Forms.NativeWindow.Handle%2A> свойство изменилось.</span><span class="sxs-lookup"><span data-stu-id="2308c-195">This method is invoked when the value of the <xref:System.Windows.Forms.NativeWindow.Handle%2A> property has changed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2308c-196">В следующем примере кода показано создание окна с определенной операционной системой имя класса окна.</span><span class="sxs-lookup"><span data-stu-id="2308c-196">The following code example demonstrates creating a window with a specific operating system window class name.</span></span> <span data-ttu-id="2308c-197">В примере создается класс, наследуемый от <xref:System.Windows.Forms.NativeWindow> для выполнения этой задачи.</span><span class="sxs-lookup"><span data-stu-id="2308c-197">The example creates a class that inherits from <xref:System.Windows.Forms.NativeWindow> to accomplish this.</span></span> <span data-ttu-id="2308c-198">В этом примере показано переопределение <xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A> метод получить уведомление при <xref:System.Windows.Forms.NativeWindow.Handle%2A> изменения.</span><span class="sxs-lookup"><span data-stu-id="2308c-198">The example also demonstrates overriding the <xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A> method to be notified when the <xref:System.Windows.Forms.NativeWindow.Handle%2A> changes.</span></span>  
  
 <span data-ttu-id="2308c-199">`MyNativeWindow` Класс создает новое окно с <xref:System.Windows.Forms.CreateParams.ClassName%2A> присвоено `BUTTON`.</span><span class="sxs-lookup"><span data-stu-id="2308c-199">The `MyNativeWindow` class creates a new window with the <xref:System.Windows.Forms.CreateParams.ClassName%2A> set to `BUTTON`.</span></span> <span data-ttu-id="2308c-200">При этом создается окно кнопки Win32.</span><span class="sxs-lookup"><span data-stu-id="2308c-200">This creates a Win32 button window.</span></span> <span data-ttu-id="2308c-201">Расположение и размер кнопки имеет значение, а также указанные дополнительные стили окна.</span><span class="sxs-lookup"><span data-stu-id="2308c-201">The location and size of the button is set, along with specifying additional window styles.</span></span> <span data-ttu-id="2308c-202">Класс демонстрирует использование <xref:System.Windows.Forms.NativeWindow.CreateHandle%2A> метод и переопределение <xref:System.Windows.Forms.NativeWindow.WndProc%2A> метод для перехвата сообщений окна, которые получены.</span><span class="sxs-lookup"><span data-stu-id="2308c-202">The class demonstrates how to use the <xref:System.Windows.Forms.NativeWindow.CreateHandle%2A> method and override the <xref:System.Windows.Forms.NativeWindow.WndProc%2A> method to intercept window messages that are received.</span></span> <span data-ttu-id="2308c-203">Несмотря на то, что в примере выполняется поиск сообщения WM_ACTIVATEAPP, его можно заменить в реальной программе сообщения окна, специфичные для созданного типа.</span><span class="sxs-lookup"><span data-stu-id="2308c-203">Although the example looks for the WM_ACTIVATEAPP message, this can be replaced in a real program with window messages specific to the type created.</span></span>  
  
 <span data-ttu-id="2308c-204">Этот код является выдержкой из примера, приведенного в <xref:System.Windows.Forms.NativeWindow> Общие сведения о классе.</span><span class="sxs-lookup"><span data-stu-id="2308c-204">This code is an excerpt from the example shown in the <xref:System.Windows.Forms.NativeWindow> class overview.</span></span> <span data-ttu-id="2308c-205">Для краткости изложения код не отображается.</span><span class="sxs-lookup"><span data-stu-id="2308c-205">Some code is not shown for the purpose of brevity.</span></span> <span data-ttu-id="2308c-206">См. в разделе <xref:System.Windows.Forms.NativeWindow> для кода.</span><span class="sxs-lookup"><span data-stu-id="2308c-206">See <xref:System.Windows.Forms.NativeWindow> for the whole code listing.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="2308c-207">Некоторые типы элементов управления отправляют свои оконные сообщения для родительского окна, а не в окно.</span><span class="sxs-lookup"><span data-stu-id="2308c-207">Some control types send their window messages to the window parent instead of the window.</span></span> <span data-ttu-id="2308c-208">См. в разделе Platform SDK Windows, Дополнительные сведения.</span><span class="sxs-lookup"><span data-stu-id="2308c-208">See the Windows Platform SDK for more information.</span></span>  
  
 [!code-cpp[NativeWindow#3](~/samples/snippets/cpp/VS_Snippets_Winforms/NativeWindow/CPP/form1.cpp#3)]
 [!code-csharp[NativeWindow#3](~/samples/snippets/csharp/VS_Snippets_Winforms/NativeWindow/CS/form1.cs#3)]
 [!code-vb[NativeWindow#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/NativeWindow/VB/form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="2308c-209">
            <para>Переопределите этот метод для отслеживания изменений, внесенных в дескриптор окна.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="2308c-209">
              <para>Override this method to track changes that are made to the window handle.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.Forms.NativeWindow.Handle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.DestroyHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.ReleaseHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)" />
      </Docs>
    </Member>
    <Member MemberName="OnThreadException">
      <MemberSignature Language="C#" Value="protected virtual void OnThreadException (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnThreadException(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.OnThreadException(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnThreadException (e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnThreadException(Exception ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnThreadException : Exception -&gt; unit&#xA;override this.OnThreadException : Exception -&gt; unit" Usage="nativeWindow.OnThreadException e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="2308c-210">Объект <see cref="T:System.Exception" />, задающий необработанное исключение потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2308c-210">An <see cref="T:System.Exception" /> that specifies the unhandled thread exception.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2308c-211">Будучи переопределен в производном классе, управляет необработанным исключением потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2308c-211">When overridden in a derived class, manages an unhandled thread exception.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2308c-212">Как правило <xref:System.Windows.Forms.Application.OnThreadException%2A> обрабатывает исключения потока.</span><span class="sxs-lookup"><span data-stu-id="2308c-212">Typically, <xref:System.Windows.Forms.Application.OnThreadException%2A> handles thread exceptions.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NativeWindow.Handle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.DestroyHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.ReleaseHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)" />
        <altmember cref="T:System.Windows.Forms.Application" />
      </Docs>
    </Member>
    <Member MemberName="ReleaseHandle">
      <MemberSignature Language="C#" Value="public virtual void ReleaseHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReleaseHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.ReleaseHandle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ReleaseHandle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ReleaseHandle();" />
      <MemberSignature Language="F#" Value="abstract member ReleaseHandle : unit -&gt; unit&#xA;override this.ReleaseHandle : unit -&gt; unit" Usage="nativeWindow.ReleaseHandle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2308c-213">Освобождает дескриптор, связанный с данным окном.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2308c-213">Releases the handle associated with this window.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2308c-214">Этот метод не уничтожает дескриптор окна.</span><span class="sxs-lookup"><span data-stu-id="2308c-214">This method does not destroy the window handle.</span></span> <span data-ttu-id="2308c-215">Вместо этого он задает процедуру окна дескриптора и процедуру окна по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="2308c-215">Instead, it sets the handle's window procedure to the default window procedure.</span></span> <span data-ttu-id="2308c-216">Он задает <xref:System.Windows.Forms.NativeWindow.Handle%2A> свойство равным 0 и вызывает <xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A> в соответствии с изменениями.</span><span class="sxs-lookup"><span data-stu-id="2308c-216">It sets the <xref:System.Windows.Forms.NativeWindow.Handle%2A> property to 0 and calls <xref:System.Windows.Forms.NativeWindow.OnHandleChange%2A> to reflect the change.</span></span>  
  
 <span data-ttu-id="2308c-217">Окно автоматически вызывает этот метод, собственного сообщение Win32 WM_NCDESTROY, о том, что Windows уничтожила дескриптор.</span><span class="sxs-lookup"><span data-stu-id="2308c-217">A window automatically calls this method if it receives a native Win32 WM_NCDESTROY message, indicating that Windows has destroyed the handle.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2308c-218">В следующем примере кода демонстрируется перехват сообщений окна операционной системы в процедуре окна.</span><span class="sxs-lookup"><span data-stu-id="2308c-218">The following code example demonstrates intercepting operating system window messages in a window procedure.</span></span> <span data-ttu-id="2308c-219">В примере создается класс, наследуемый от <xref:System.Windows.Forms.NativeWindow> для выполнения этой задачи.</span><span class="sxs-lookup"><span data-stu-id="2308c-219">The example creates a class that inherits from <xref:System.Windows.Forms.NativeWindow> to accomplish this.</span></span>  
  
 <span data-ttu-id="2308c-220">`MyNativeWindowListener` Класс подключается в процедуре окна формы, переданные в конструктор и переопределяет <xref:System.Windows.Forms.NativeWindow.WndProc%2A> метод перехватывает `WM_ACTIVATEAPP` сообщения окна.</span><span class="sxs-lookup"><span data-stu-id="2308c-220">The `MyNativeWindowListener` class hooks into the window procedure of the form passed into the constructor, and overrides the <xref:System.Windows.Forms.NativeWindow.WndProc%2A> method to intercepts the `WM_ACTIVATEAPP` window message.</span></span> <span data-ttu-id="2308c-221">Класс демонстрирует использование <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A> и <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> методы для определения дескриптор окна <xref:System.Windows.Forms.NativeWindow> будет использовать.</span><span class="sxs-lookup"><span data-stu-id="2308c-221">The class demonstrates the use of the <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A> and <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> methods to identify the window handle the <xref:System.Windows.Forms.NativeWindow> will use.</span></span> <span data-ttu-id="2308c-222">Дескриптор назначается в зависимости от <xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType> и <xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType> события.</span><span class="sxs-lookup"><span data-stu-id="2308c-222">The handle is assign based upon the <xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType> and <xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType> events.</span></span> <span data-ttu-id="2308c-223">Когда `WM_ACTIVATEAPP` оконное сообщение поступает, класс вызывает `form1.ApplicationActivated` метод.</span><span class="sxs-lookup"><span data-stu-id="2308c-223">When the `WM_ACTIVATEAPP` window message is received, the class calls the `form1.ApplicationActivated` method.</span></span>  
  
 <span data-ttu-id="2308c-224">Этот код является выдержкой из примера, приведенного в <xref:System.Windows.Forms.NativeWindow> Общие сведения о классе.</span><span class="sxs-lookup"><span data-stu-id="2308c-224">This code is an excerpt from the example shown in the <xref:System.Windows.Forms.NativeWindow> class overview.</span></span> <span data-ttu-id="2308c-225">Для краткости изложения код не отображается.</span><span class="sxs-lookup"><span data-stu-id="2308c-225">Some code is not shown for the purpose of brevity.</span></span> <span data-ttu-id="2308c-226">См. в разделе <xref:System.Windows.Forms.NativeWindow> для кода.</span><span class="sxs-lookup"><span data-stu-id="2308c-226">See <xref:System.Windows.Forms.NativeWindow> for the whole code listing.</span></span>  
  
 [!code-cpp[NativeWindow#2](~/samples/snippets/cpp/VS_Snippets_Winforms/NativeWindow/CPP/form1.cpp#2)]
 [!code-csharp[NativeWindow#2](~/samples/snippets/csharp/VS_Snippets_Winforms/NativeWindow/CS/form1.cs#2)]
 [!code-vb[NativeWindow#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/NativeWindow/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Forms.NativeWindow.Handle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.AssignHandle(System.IntPtr)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.CreateHandle(System.Windows.Forms.CreateParams)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.DestroyHandle" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.OnHandleChange" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.Finalize" />
      </Docs>
    </Member>
    <Member MemberName="WndProc">
      <MemberSignature Language="C#" Value="protected virtual void WndProc (ref System.Windows.Forms.Message m);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void WndProc(valuetype System.Windows.Forms.Message&amp; m) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.NativeWindow.WndProc(System.Windows.Forms.Message@)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub WndProc (ByRef m As Message)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void WndProc(System::Windows::Forms::Message % m);" />
      <MemberSignature Language="F#" Value="abstract member WndProc :  -&gt; unit&#xA;override this.WndProc :  -&gt; unit" Usage="nativeWindow.WndProc m" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="m" Type="System.Windows.Forms.Message" RefType="ref" />
      </Parameters>
      <Docs>
        <param name="m">
          <span data-ttu-id="2308c-227">Объект <see cref="T:System.Windows.Forms.Message" />, связанный с текущим сообщением Windows.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2308c-227">A <see cref="T:System.Windows.Forms.Message" /> that is associated with the current Windows message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2308c-228">Вызывает процедуру окна по умолчанию, связанную с этим окном.</span>
          <span class="sxs-lookup">
            <span data-stu-id="2308c-228">Invokes the default window procedure associated with this window.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2308c-229">Этот метод вызывается при отправке сообщения окна дескриптор окна.</span><span class="sxs-lookup"><span data-stu-id="2308c-229">This method is called when a window message is sent to the handle of the window.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="2308c-230">В следующем примере кода демонстрируется перехват сообщений окна операционной системы в процедуре окна.</span><span class="sxs-lookup"><span data-stu-id="2308c-230">The following code example demonstrates intercepting operating system window messages in a window procedure.</span></span> <span data-ttu-id="2308c-231">В примере создается класс, наследуемый от <xref:System.Windows.Forms.NativeWindow> для выполнения этой задачи.</span><span class="sxs-lookup"><span data-stu-id="2308c-231">The example creates a class that inherits from <xref:System.Windows.Forms.NativeWindow> to accomplish this.</span></span>  
  
 <span data-ttu-id="2308c-232">`MyNativeWindowListener` Класс подключается в процедуре окна формы, переданные в конструктор и переопределяет <xref:System.Windows.Forms.NativeWindow.WndProc%2A> метод для перехвата `WM_ACTIVATEAPP` сообщения окна.</span><span class="sxs-lookup"><span data-stu-id="2308c-232">The `MyNativeWindowListener` class hooks into the window procedure of the form passed into the constructor, and overrides the <xref:System.Windows.Forms.NativeWindow.WndProc%2A> method to intercept the `WM_ACTIVATEAPP` window message.</span></span> <span data-ttu-id="2308c-233">Класс демонстрирует использование <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A> и <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> методы для определения дескриптор окна <xref:System.Windows.Forms.NativeWindow> будет использовать.</span><span class="sxs-lookup"><span data-stu-id="2308c-233">The class demonstrates the use of the <xref:System.Windows.Forms.NativeWindow.AssignHandle%2A> and <xref:System.Windows.Forms.NativeWindow.ReleaseHandle%2A> methods to identify the window handle the <xref:System.Windows.Forms.NativeWindow> will use.</span></span> <span data-ttu-id="2308c-234">Дескриптор назначается в зависимости от <xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType> и <xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType> события.</span><span class="sxs-lookup"><span data-stu-id="2308c-234">The handle is assigned based upon the <xref:System.Windows.Forms.Control.HandleCreated?displayProperty=nameWithType> and <xref:System.Windows.Forms.Control.HandleDestroyed?displayProperty=nameWithType> events.</span></span> <span data-ttu-id="2308c-235">Когда `WM_ACTIVATEAPP` оконное сообщение поступает, класс вызывает `form1.ApplicationActivated` метод.</span><span class="sxs-lookup"><span data-stu-id="2308c-235">When the `WM_ACTIVATEAPP` window message is received, the class calls the `form1.ApplicationActivated` method.</span></span>  
  
 <span data-ttu-id="2308c-236">Этот код является выдержкой из примера, приведенного в <xref:System.Windows.Forms.NativeWindow> Общие сведения о классе.</span><span class="sxs-lookup"><span data-stu-id="2308c-236">This code is an excerpt from the example shown in the <xref:System.Windows.Forms.NativeWindow> class overview.</span></span> <span data-ttu-id="2308c-237">Для краткости изложения код не отображается.</span><span class="sxs-lookup"><span data-stu-id="2308c-237">Some code is not shown for the purpose of brevity.</span></span> <span data-ttu-id="2308c-238">См. в разделе <xref:System.Windows.Forms.NativeWindow> для кода.</span><span class="sxs-lookup"><span data-stu-id="2308c-238">See <xref:System.Windows.Forms.NativeWindow> for the whole code listing.</span></span>  
  
 [!code-cpp[NativeWindow#2](~/samples/snippets/cpp/VS_Snippets_Winforms/NativeWindow/CPP/form1.cpp#2)]
 [!code-csharp[NativeWindow#2](~/samples/snippets/csharp/VS_Snippets_Winforms/NativeWindow/CS/form1.cs#2)]
 [!code-vb[NativeWindow#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/NativeWindow/VB/form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="2308c-239">
            <para>Переопределите этот метод для реализации специфической обработки сообщений. Вызовите <c>базовый. WndProc</c> для необработанных сообщений.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="2308c-239">
              <para>Override this method to implement specific message processing. Call <c>base.WndProc</c> for unhandled messages.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.Forms.NativeWindow.Handle" />
        <altmember cref="T:System.Windows.Forms.Message" />
        <altmember cref="M:System.Windows.Forms.Application.SetUnhandledExceptionMode(System.Windows.Forms.UnhandledExceptionMode)" />
        <altmember cref="M:System.Windows.Forms.NativeWindow.OnThreadException(System.Exception)" />
      </Docs>
    </Member>
  </Members>
</Type>