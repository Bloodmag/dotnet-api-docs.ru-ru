<Type Name="StatusBar+StatusBarPanelCollection" FullName="System.Windows.Forms.StatusBar+StatusBarPanelCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7c57ca8db58b9a0be211583bd6f50a484394995f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30650878" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StatusBar.StatusBarPanelCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class nested public auto ansi beforefieldinit StatusBar/StatusBarPanelCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.StatusBar.StatusBarPanelCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class StatusBar.StatusBarPanelCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public: ref class StatusBar::StatusBarPanelCollection : System::Collections::IList" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ListBindable(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет коллекцию панелей элемента управления <see cref="T:System.Windows.Forms.StatusBar" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> Класс хранит панели, отображаемые в <xref:System.Windows.Forms.StatusBar>. Каждый объект в коллекции является экземпляром <xref:System.Windows.Forms.StatusBarPanel> класс, который определяет характеристики отображения и поведения панели, отображаемой в <xref:System.Windows.Forms.StatusBar>.  
  
 Существует несколько способов добавить панели в коллекции. <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A> Метод обеспечивает возможность добавления одной панели в коллекцию. Чтобы добавить в коллекцию несколько панелей, создайте массив <xref:System.Windows.Forms.StatusBarPanel> объектов и назначьте его <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange%2A> метод. Если вы хотите вставить панель в определенное место в коллекции, можно использовать <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert%2A> метода. Чтобы удалить панелей, можно использовать <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Remove%2A> метода или <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.RemoveAt%2A> метод, если вы знаете, где находится в пределах коллекции. <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Clear%2A> Метод позволяет удалить все элементы управления из коллекции вместо использования <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Remove%2A> метод для удаления одной панели одновременно.  
  
 Помимо методов и свойств для добавления и удаления элементов управления <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> также предоставляет методы для поиска элементов управления в пределах коллекции. <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Contains%2A> Метод позволяет определить, является ли элемент управления является членом коллекции. Если известно, что элемент управления находится в пределах коллекции, можно использовать <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.IndexOf%2A> метод, чтобы определить, где находится в пределах коллекции.  
  
   
  
## Examples  
 В следующем примере кода создается <xref:System.Windows.Forms.StatusBar> управления на форме и добавляет два <xref:System.Windows.Forms.StatusBarPanel> объектов. Один из <xref:System.Windows.Forms.StatusBarPanel>с именем `panel1`, отображает текст состояния для приложения. Второй <xref:System.Windows.Forms.StatusBarPanel>с именем `panel2`, отображает текущую дату и использует <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A> свойство <xref:System.Windows.Forms.StatusBarPanel> класса для отображения текущего времени. В этом примере <xref:System.Windows.Forms.StatusBar.ShowPanels%2A> свойство, чтобы панелей вместо стандартных, и она использует и <xref:System.Windows.Forms.StatusBar.Panels%2A> свойство для доступа к <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A> метод <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> добавление панелей в <xref:System.Windows.Forms.StatusBar>. В примере также используется <xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A>, <xref:System.Windows.Forms.StatusBarPanel.BorderStyle%2A>, <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A>, и <xref:System.Windows.Forms.StatusBarPanel.Text%2A> свойств для инициализации <xref:System.Windows.Forms.StatusBarPanel> объектов. В этом примере предполагается, что метод, определенный в примере определен и вызывается из конструктора <xref:System.Windows.Forms.Form>.  
  
 [!code-cpp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CPP/form1.cpp#1)]
 [!code-csharp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CS/form1.cs#1)]
 [!code-vb[StatusBar and StatusBarPanel Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/VB/form1.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Forms.StatusBarPanel" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StatusBarPanelCollection (System.Windows.Forms.StatusBar owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Forms.StatusBar owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.#ctor(System.Windows.Forms.StatusBar)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As StatusBar)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StatusBarPanelCollection(System::Windows::Forms::StatusBar ^ owner);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Windows.Forms.StatusBar" />
      </Parameters>
      <Docs>
        <param name="owner">Элемент управления <see cref="T:System.Windows.Forms.StatusBar" />, содержащий эту коллекцию.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Forms.StatusBar.StatusBarPanelCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Невозможно создать экземпляр этого класса, не связывая его с <xref:System.Windows.Forms.StatusBar> элемента управления.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Добавляет <see cref="T:System.Windows.Forms.StatusBarPanel" /> в коллекцию.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.StatusBarPanel Add (string text);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Forms.StatusBarPanel Add(string text) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (text As String) As StatusBarPanel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Forms::StatusBarPanel ^ Add(System::String ^ text);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.StatusBarPanel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="text">Текст для панели <see cref="T:System.Windows.Forms.StatusBarPanel" />, добавляемой в коллекцию.</param>
        <summary>Добавляет в коллекцию панель <see cref="T:System.Windows.Forms.StatusBarPanel" /> с указанным текстом.</summary>
        <returns>Объект <see cref="T:System.Windows.Forms.StatusBarPanel" />, представляющий панель, добавляемую в коллекцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно добавить элементы <xref:System.Windows.Forms.StatusBar> элемента управления для отображения более чем один тип данных. Эта версия <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A> метод создает новый <xref:System.Windows.Forms.StatusBarPanel> с текста, указанного в `text` параметра и добавляет его в коллекцию. Расположения панелей в <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> представляет порядок отображения элементов в пределах <xref:System.Windows.Forms.StatusBar> элемента управления. Панели отображаются слева направо, начиная с первой панели в коллекции. <xref:System.Windows.Forms.Control.RightToLeft%2A> Свойство <xref:System.Windows.Forms.StatusBar> управления не изменяет порядок отображения панелей в <xref:System.Windows.Forms.StatusBar>. Чтобы вставить панель в заданной позиции в коллекции, используйте <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert%2A> метод. Чтобы добавить несколько элементов управления в одной операции в коллекцию, используйте <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange%2A> метод.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Forms.StatusBarPanel" />
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange(System.Windows.Forms.StatusBarPanel[])" />
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert(System.Int32,System.Windows.Forms.StatusBarPanel)" />
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual int Add (System.Windows.Forms.StatusBarPanel value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 Add(class System.Windows.Forms.StatusBarPanel value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add(System.Windows.Forms.StatusBarPanel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (value As StatusBarPanel) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int Add(System::Windows::Forms::StatusBarPanel ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.StatusBarPanel" />
      </Parameters>
      <Docs>
        <param name="value">Объект <see cref="T:System.Windows.Forms.StatusBarPanel" />, представляющий панель, добавляемую в коллекцию.</param>
        <summary>Добавляет <see cref="T:System.Windows.Forms.StatusBarPanel" /> в коллекцию.</summary>
        <returns>Отсчитываемый с нуля индекс элемента в коллекции.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно добавить элементы <xref:System.Windows.Forms.StatusBar> элемента управления для отображения более чем один тип данных. Эта версия <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A> добавляет метод <xref:System.Windows.Forms.StatusBarPanel> указано в `value` параметр в коллекцию. Расположения панелей в <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> представляет порядок отображения элементов в пределах <xref:System.Windows.Forms.StatusBar> элемента управления. Панели отображаются слева направо, начиная с первой панели в коллекции. <xref:System.Windows.Forms.Control.RightToLeft%2A> Свойство <xref:System.Windows.Forms.StatusBar> управления не изменяет порядок отображения панелей в <xref:System.Windows.Forms.StatusBar>. Чтобы вставить панель в заданной позиции в коллекции, используйте <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert%2A> метод. Чтобы добавить несколько элементов управления в одной операции в коллекцию, используйте <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange%2A> метод.  
  
   
  
## Examples  
 В следующем примере кода создается <xref:System.Windows.Forms.StatusBar> управления на форме и добавляет два <xref:System.Windows.Forms.StatusBarPanel> объектов. Один из <xref:System.Windows.Forms.StatusBarPanel> объектов с именем `panel1`, отображает текст состояния для приложения. Второй <xref:System.Windows.Forms.StatusBarPanel>с именем `panel2`, отображает текущую дату и использует <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A> свойство <xref:System.Windows.Forms.StatusBarPanel> класса для отображения текущего времени. В этом примере <xref:System.Windows.Forms.StatusBar.ShowPanels%2A> свойство, чтобы панелей вместо стандартных, и она использует и <xref:System.Windows.Forms.StatusBar.Panels%2A> свойство для доступа к <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A> метод <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> добавление панелей в <xref:System.Windows.Forms.StatusBar>. В примере также используется <xref:System.Windows.Forms.StatusBarPanel.AutoSize%2A>, <xref:System.Windows.Forms.StatusBarPanel.BorderStyle%2A>, <xref:System.Windows.Forms.StatusBarPanel.ToolTipText%2A>, и <xref:System.Windows.Forms.StatusBarPanel.Text%2A> свойств для инициализации <xref:System.Windows.Forms.StatusBarPanel> объектов. В этом примере предполагается, что метод, определенный в примере определен и вызывается из конструктора <xref:System.Windows.Forms.Form>.  
  
 [!code-cpp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CPP/form1.cpp#1)]
 [!code-csharp[StatusBar and StatusBarPanel Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/CS/form1.cs#1)]
 [!code-vb[StatusBar and StatusBarPanel Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/StatusBar and StatusBarPanel Example/VB/form1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Значением объекта <see cref="T:System.Windows.Forms.StatusBarPanel" />, добавляемого в коллекцию, было <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Родитель панели <see cref="T:System.Windows.Forms.StatusBarPanel" />, заданный в параметре <paramref name="value" />, не является значением <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Forms.StatusBarPanel" />
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange(System.Windows.Forms.StatusBarPanel[])" />
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert(System.Int32,System.Windows.Forms.StatusBarPanel)" />
      </Docs>
    </Member>
    <Member MemberName="AddRange">
      <MemberSignature Language="C#" Value="public virtual void AddRange (System.Windows.Forms.StatusBarPanel[] panels);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddRange(class System.Windows.Forms.StatusBarPanel[] panels) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange(System.Windows.Forms.StatusBarPanel[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddRange (panels As StatusBarPanel())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddRange(cli::array &lt;System::Windows::Forms::StatusBarPanel ^&gt; ^ panels);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="panels" Type="System.Windows.Forms.StatusBarPanel[]" />
      </Parameters>
      <Docs>
        <param name="panels">Добавляемый массив объектов <see cref="T:System.Windows.Forms.StatusBarPanel" />.</param>
        <summary>Добавляет в коллекцию массив объектов <see cref="T:System.Windows.Forms.StatusBarPanel" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно добавить элементы <xref:System.Windows.Forms.StatusBar> элемента управления для отображения более чем один тип данных. <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange%2A> Метод добавляет массив <xref:System.Windows.Forms.StatusBarPanel> объекты, указанные в `panels` параметр в коллекцию. Из коллекции перед вставкой новых панелей удаляются все существующие элементы управления в коллекции. Расположения панелей в <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> представляет порядок отображения элементов в пределах <xref:System.Windows.Forms.StatusBar> элемента управления. Панели отображаются слева направо, начиная с первой панели в коллекции. <xref:System.Windows.Forms.Control.RightToLeft%2A> Свойство <xref:System.Windows.Forms.StatusBar> управления не изменяет порядок отображения панелей в <xref:System.Windows.Forms.StatusBar>. Для добавления одного <xref:System.Windows.Forms.StatusBarPanel> в коллекцию, используйте <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A> метод. Чтобы вставить элемент управления в заданной позиции в <xref:System.Windows.Forms.StatusBar> управления (и в этой коллекции), используйте <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert%2A> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Массив объектов <see cref="T:System.Windows.Forms.StatusBarPanel" />, добавленный в эту коллекцию, имел значение <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Forms.StatusBarPanel" />
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add(System.String)" />
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert(System.Int32,System.Windows.Forms.StatusBarPanel)" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public virtual void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Удаляет все элементы из коллекции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При удалении панелей из коллекции все сведения об удаленных элементах управления будут потеряны. Чтобы удалить один элемент управления из <xref:System.Windows.Forms.StatusBar>, используйте <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Remove%2A> или <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.RemoveAt%2A> метод.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Remove(System.Windows.Forms.StatusBarPanel)" />
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.RemoveAt(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Windows.Forms.StatusBarPanel panel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Windows.Forms.StatusBarPanel panel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Contains(System.Windows.Forms.StatusBarPanel)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (panel As StatusBarPanel) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Windows::Forms::StatusBarPanel ^ panel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="panel" Type="System.Windows.Forms.StatusBarPanel" />
      </Parameters>
      <Docs>
        <param name="panel">Объект <see cref="T:System.Windows.Forms.StatusBarPanel" />, местоположение которого требуется найти в коллекции.</param>
        <summary>Определяет, находится ли указанный элемент управления в коллекции.</summary>
        <returns>
          Значение <see langword="true" />, если элемент управления содержится в коллекции; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Contains%2A> Метод позволяет определить, является ли элемент управления является членом коллекции. Если известно, что элемент является элементом коллекции, можно использовать <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.IndexOf%2A> метод, чтобы определить, где находится в пределах коллекции.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.IndexOf(System.Windows.Forms.StatusBarPanel)" />
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public virtual bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ContainsKey (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Имя элемента, который требуется найти в коллекции.</param>
        <summary>Определяет, содержится ли в коллекции панель <see cref="T:System.Windows.Forms.StatusBarPanel" /> с указанным ключом.</summary>
        <returns>
          Значение <see langword="true" /> указывает на то, что в коллекции содержится объект <see cref="T:System.Windows.Forms.StatusBarPanel" /> с указанным ключом; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.StatusBarPanel.Name%2A> Свойство соответствует ключу для <xref:System.Windows.Forms.StatusBarPanel> в <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection>.  
  
 При сравнении ключей не учитывает регистр. Если `key` параметр `null` или является пустой строкой, <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.ContainsKey%2A> возвращает `false.`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает количество элементов в коллекции.</summary>
        <value>Количество объектов <see cref="T:System.Windows.Forms.StatusBarPanel" /> в коллекции.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство позволяет определить количество элементов управления в <xref:System.Windows.Forms.StatusBar>. Это значение затем можно использовать, когда цикла по значениям коллекции, и необходимо указать число итераций для выполнения цикла.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает перечислитель для перебора элементов коллекции.</summary>
        <returns>Перечислитель <see cref="T:System.Collections.IEnumerator" />, представляющий коллекцию элементов.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Forms.StatusBarPanel panel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Forms.StatusBarPanel panel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.IndexOf(System.Windows.Forms.StatusBarPanel)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (panel As StatusBarPanel) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Forms::StatusBarPanel ^ panel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="panel" Type="System.Windows.Forms.StatusBarPanel" />
      </Parameters>
      <Docs>
        <param name="panel">Объект <see cref="T:System.Windows.Forms.StatusBarPanel" />, местоположение которого требуется найти в коллекции.</param>
        <summary>Возвращает индекс указанной панели в коллекции.</summary>
        <returns>Отсчитываемый от нуля индекс, соответствующий данной панели в коллекции, в противном случае минус единица (-1).</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.IndexOf%2A> Метод позволяет определить, где находится элемент управления в пределах коллекции. Чтобы определить, находится ли элемент в коллекции перед вызовом этого метода, используйте <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Contains%2A> метод.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Contains(System.Windows.Forms.StatusBarPanel)" />
      </Docs>
    </Member>
    <Member MemberName="IndexOfKey">
      <MemberSignature Language="C#" Value="public virtual int IndexOfKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 IndexOfKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.IndexOfKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function IndexOfKey (key As String) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int IndexOfKey(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Имя панели <see cref="T:System.Windows.Forms.StatusBarPanel" />, которую нужно найти в коллекции.</param>
        <summary>Возвращает индекс первого вхождения панели <see cref="T:System.Windows.Forms.StatusBarPanel" /> с указанным ключом.</summary>
        <returns>Отсчитываемый от нуля индекс для первого вхождения панели <see cref="T:System.Windows.Forms.StatusBarPanel" /> с заданным ключом; в противном случае — значение -1.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.IndexOfKey%2A> вызывается последовательно, последний возвращается индекс будет проверяться на соответствие ключа сначала, а если нет соответствия, поиск начинается с начала коллекции.  
  
 <xref:System.Windows.Forms.StatusBarPanel.Name%2A> Свойство соответствует ключу для <xref:System.Windows.Forms.StatusBarPanel> в <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection>. При сравнении ключей не учитывает регистр.  
  
 Если `key` параметр `null` или является пустой строкой, <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.IndexOfKey%2A> возвращает значение -1.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public virtual void Insert (int index, System.Windows.Forms.StatusBarPanel value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Insert(int32 index, class System.Windows.Forms.StatusBarPanel value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert(System.Int32,System.Windows.Forms.StatusBarPanel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Insert (index As Integer, value As StatusBarPanel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Insert(int index, System::Windows::Forms::StatusBarPanel ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Windows.Forms.StatusBarPanel" />
      </Parameters>
      <Docs>
        <param name="index">Отсчитываемый от нуля индекс места вставки панели.</param>
        <param name="value">Объект <see cref="T:System.Windows.Forms.StatusBarPanel" />, предоставляющий вставляемую панель.</param>
        <summary>Вставляет в коллекцию заданный объект <see cref="T:System.Windows.Forms.StatusBarPanel" /> по указанному индексу.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно добавить элементы <xref:System.Windows.Forms.StatusBar> элемента управления для отображения более чем один тип данных. <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Insert%2A> Метод позволяет создать новую <xref:System.Windows.Forms.StatusBarPanel> и вставить его в определенное место в коллекции. Расположения панелей в <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection> представляет порядок отображения элементов в пределах <xref:System.Windows.Forms.StatusBar> элемента управления. Панели отображаются слева направо, начиная с первой панели в коллекции. <xref:System.Windows.Forms.Control.RightToLeft%2A> Свойство <xref:System.Windows.Forms.StatusBar> управления не изменяет порядок отображения панелей в <xref:System.Windows.Forms.StatusBar>. Чтобы добавить элемент управления в конец коллекции, используйте <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add%2A> метод. Чтобы добавить несколько элементов управления в одной операции в коллекцию, используйте <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange%2A> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="value" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">Родитель параметра <paramref name="value" /> не является значением <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="index" /> меньше нуля или больше значения свойства <see cref="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Count" /> класса <see cref="T:System.Windows.Forms.StatusBar.StatusBarPanelCollection" />.</exception>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">Свойство <see cref="P:System.Windows.Forms.StatusBarPanel.AutoSize" /> панели, заданной параметром <paramref name="value" />, не является допустимым значением <see cref="T:System.Windows.Forms.StatusBarPanelAutoSize" />.</exception>
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Add(System.String)" />
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.AddRange(System.Windows.Forms.StatusBarPanel[])" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, которое определяет, является ли коллекция доступной только для чтения.</summary>
        <value>
          Значение <see langword="true" />, если данная коллекция доступна только для чтения; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Данное свойство всегда имеет `false` для этой коллекции.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Item">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Получает или задает элемент в коллекции.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.StatusBarPanel this[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.StatusBarPanel Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable Property Item(index As Integer) As StatusBarPanel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::StatusBarPanel ^ default[int] { System::Windows::Forms::StatusBarPanel ^ get(int index); void set(int index, System::Windows::Forms::StatusBarPanel ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.StatusBarPanel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Возвращаемый или устанавливаемый индекс элемента управления в коллекции.</param>
        <summary>Возвращает или задает объект <see cref="T:System.Windows.Forms.StatusBarPanel" /> с заданным индексом.</summary>
        <value>Объект <see cref="T:System.Windows.Forms.StatusBarPanel" />, представляющий панель, находящуюся в коллекции по указанному индексу.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод можно использовать для получения <xref:System.Windows.Forms.StatusBarPanel> хранимых в определенном месте в коллекции. Чтобы определить индекс определенного элемента управления в коллекции, используйте <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.IndexOf%2A> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="index" /> меньше нуля либо больше или равен значению свойства <see cref="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Count" /> класса <see cref="T:System.Windows.Forms.StatusBar.StatusBarPanelCollection" />.</exception>
        <exception cref="T:System.ArgumentNullException">Объект <see cref="T:System.Windows.Forms.StatusBarPanel" />, назначенный этой коллекции, имел значение <see langword="null" />.</exception>
        <altmember cref="T:System.Windows.Forms.StatusBarPanel" />
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Forms.StatusBarPanel this[string key] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Forms.StatusBarPanel Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Overridable ReadOnly Property Item(key As String) As StatusBarPanel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Forms::StatusBarPanel ^ default[System::String ^] { System::Windows::Forms::StatusBarPanel ^ get(System::String ^ key); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.StatusBarPanel</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Имя извлекаемого из коллекции элемента.</param>
        <summary>Возвращает из коллекции элемент с указанным ключом.</summary>
        <value>Объект <see cref="T:System.Windows.Forms.StatusBarPanel" /> с указанным ключом.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.StatusBarPanel.Name%2A> Свойство соответствует ключу для <xref:System.Windows.Forms.StatusBarPanel> в <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection>.  
  
 При сравнении ключей не учитывает регистр. Если `key` параметр `null` или является пустой строкой, <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Item%2A> возвращает `null.`  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public virtual void Remove (System.Windows.Forms.StatusBarPanel value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Remove(class System.Windows.Forms.StatusBarPanel value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Remove(System.Windows.Forms.StatusBarPanel)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Remove (value As StatusBarPanel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Remove(System::Windows::Forms::StatusBarPanel ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Windows.Forms.StatusBarPanel" />
      </Parameters>
      <Docs>
        <param name="value">Объект <see cref="T:System.Windows.Forms.StatusBarPanel" />, представляющий панель, удаляемую из коллекции.</param>
        <summary>Удаляет указанный объект <see cref="T:System.Windows.Forms.StatusBarPanel" /> из коллекции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При удалении панели из списка индексов изменить для последующих элементов в коллекции. Все сведения об удаленных панелях удаляются. Этот метод можно использовать для удаления определенного элемента управления из <xref:System.Windows.Forms.StatusBar> , указав фактический <xref:System.Windows.Forms.StatusBarPanel> для удаления из коллекции. Чтобы указать индекс панели, чтобы удалить вместо самой панели, используйте <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.RemoveAt%2A> метод. Чтобы удалить все элементы управления из коллекции, используйте <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Clear%2A> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Объект <see cref="T:System.Windows.Forms.StatusBarPanel" />, назначенный параметру <paramref name="value" />, имеет значение <see langword="null" />.</exception>
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.RemoveAt(System.Int32)" />
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public virtual void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Отсчитываемый от нуля индекс удаляемого элемента.</param>
        <summary>Удаляет панель <see cref="T:System.Windows.Forms.StatusBarPanel" />, находящуюся по указанному индексу в коллекции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При удалении элемента управления из коллекции изменяются индексы последующих панелей в коллекции. Все сведения об удаленных панелях удаляются. Этот метод можно использовать для удаления определенной панели в списке, указав индекс панели, чтобы удалить из коллекции. Чтобы указать удаляемый вместо индекса на панель, используйте <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Remove%2A> метод. Чтобы удалить все панели с <xref:System.Windows.Forms.StatusBar> управления, используйте <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Clear%2A> метод.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Параметр <paramref name="index" /> меньше нуля либо больше или равен значению свойства <see cref="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Count" /> класса <see cref="T:System.Windows.Forms.StatusBar.StatusBarPanelCollection" />.</exception>
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Remove(System.Windows.Forms.StatusBarPanel)" />
        <altmember cref="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.Clear" />
      </Docs>
    </Member>
    <Member MemberName="RemoveByKey">
      <MemberSignature Language="C#" Value="public virtual void RemoveByKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveByKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.RemoveByKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RemoveByKey (key As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveByKey(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">Имя удаляемого из коллекции объекта <see cref="T:System.Windows.Forms.StatusBarPanel" />.</param>
        <summary>Удаляет из коллекции объект <see cref="T:System.Windows.Forms.StatusBarPanel" /> с указанным ключом.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.StatusBarPanel.Name%2A> Свойство соответствует ключу для <xref:System.Windows.Forms.StatusBarPanel> в <xref:System.Windows.Forms.StatusBar.StatusBarPanelCollection>.  
  
 При сравнении ключей не учитывает регистр.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array dest, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array dest, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub CopyTo (dest As Array, index As Integer) Implements ICollection.CopyTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ dest, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dest" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dest">Одномерный массив, куда копируются элементы из данной коллекции. Индекс в массиве должен начинаться с нуля.</param>
        <param name="index">Индекс (отсчет с нуля) в массиве, с которого начинается копирование.</param>
        <summary>Копирует всю коллекцию <see cref="T:System.Windows.Forms.StatusBar.StatusBarPanelCollection" /> в совместимый одномерный массив, начиная с указанного индекса целевого массива.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="array" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Значение параметра <paramref name="index" /> меньше нуля.</exception>
        <exception cref="T:System.ArgumentException">
          Массив <paramref name="array" /> является многомерным.  
  
 - или -  
  
 Количество элементов в коллекции <see cref="T:System.Windows.Forms.StatusBar.StatusBarPanelCollection" /> больше, чем размер свободного места, начиная с индекса и до конца параметра <paramref name="array" />.</exception>
        <exception cref="T:System.InvalidCastException">Тип в коллекции не может быть автоматически приведен к типу параметра <paramref name="array" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, является ли доступ к коллекции синхронизированным (потокобезопасным).</summary>
        <value>
          Значение <see langword="false" /> во всех случаях.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект, который можно использовать для синхронизации доступа к коллекции.</summary>
        <value>Объект, используемый для синхронизации доступа к коллекции.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Объект <see cref="T:System.Windows.Forms.StatusBarPanel" />, представляющий панель, добавляемую в коллекцию.</param>
        <summary>Добавляет <see cref="T:System.Windows.Forms.StatusBarPanel" /> в коллекцию.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> не является объектом <see cref="T:System.Windows.Forms.StatusBarPanel" />.  
  
 - или -  
  
 Родительский объект параметра не является значением <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object panel);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object panel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (panel As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ panel) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="panel" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="panel">Объект <see cref="T:System.Windows.Forms.StatusBarPanel" />, местоположение которого требуется найти в коллекции.</param>
        <summary>Определяет, находится ли указанный элемент управления в коллекции.</summary>
        <returns>
          Значение <see langword="true" />, если панель является объектом <see cref="T:System.Windows.Forms.StatusBarPanel" />, находящимся в коллекции; в противном случае — значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object panel);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object panel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (panel As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ panel) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="panel" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="panel">Объект <see cref="T:System.Windows.Forms.StatusBarPanel" />, местоположение которого требуется найти в коллекции.</param>
        <summary>Возвращает индекс указанной панели в коллекции.</summary>
        <returns>Отсчитываемый от нуля индекс панели, если панель найдена, во всей коллекции; в противном случае — значение -1.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">Отсчитываемый от нуля индекс места вставки панели.</param>
        <param name="value">Объект <see cref="T:System.Windows.Forms.StatusBarPanel" />, представляющий вставляемую панель.</param>
        <summary>Вставляет в коллекцию заданный объект <see cref="T:System.Windows.Forms.StatusBarPanel" /> по указанному индексу.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">Параметр индекса меньше нуля или больше значения свойства <see langword="Count" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> не является объектом <see cref="T:System.Windows.Forms.StatusBarPanel" />.  
  
 - или -  
  
 Родительский объект параметра не является значением <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, имеет ли коллекция фиксированный размер.</summary>
        <value>
          Значение <see langword="false" /> во всех случаях.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Forms.StatusBar.StatusBarPanelCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Отсчитываемый от нуля индекс элемента, который требуется возвратить или задать.</param>
        <summary>Возвращает или задает элемент по указанному индексу.</summary>
        <value>Элемент, расположенный по указанному индексу.</value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="value" /> не является объектом <see cref="T:System.Windows.Forms.StatusBarPanel" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.StatusBar.StatusBarPanelCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">Объект <see cref="T:System.Windows.Forms.StatusBarPanel" />, представляющий панель, удаляемую из коллекции.</param>
        <summary>Удаляет указанный объект <see cref="T:System.Windows.Forms.StatusBarPanel" /> из коллекции.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>