<Type Name="TextRenderer" FullName="System.Windows.Forms.TextRenderer">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1d0655bdd836d1f2fea1a3b84cbf6d681179018e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30650608" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class TextRenderer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit TextRenderer extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.TextRenderer" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class TextRenderer" />
  <TypeSignature Language="C++ CLI" Value="public ref class TextRenderer sealed" />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет методы, используемые для измерения и визуализации текста. Этот класс не наследуется.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TextRenderer> Класс предоставляет набор `static` методы, которые могут использоваться для измерения и Рисование текста в элементе управления формы Windows Forms.  
  
 Управлять прорисовкой текста можно с помощью одной из перегрузок метода <xref:System.Windows.Forms.TextRenderer.DrawText%2A>, принимающей параметр <xref:System.Windows.Forms.TextFormatFlags>. Например, поведение класса <xref:System.Windows.Forms.TextRenderer> по умолчанию предполагает добавление внутренних полей в ограничивающий прямоугольник отображаемого текста с целью вместить в этот прямоугольник части глифов, выступающие за его границы. Если требуется прорисовать строку текста без этих дополнительных областей, следует использовать версии методов <xref:System.Windows.Forms.TextRenderer.DrawText%2A> и <xref:System.Windows.Forms.TextRenderer.MeasureText%2A>, которые принимают объект <xref:System.Drawing.Size> и параметр <xref:System.Windows.Forms.TextFormatFlags>. Пример см. в разделе <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.  
  
> [!NOTE]
>  Методы <xref:System.Windows.Forms.TextRenderer.DrawText%2A> класса <xref:System.Windows.Forms.TextRenderer> не поддерживаются для печати. Следует всегда использовать <xref:System.Drawing.Graphics.DrawString%2A> методы <xref:System.Drawing.Graphics> класса.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Windows.Forms.TextRenderer.DrawText%2A>. Чтобы выполнить этот пример, вставьте код в форму Windows Forms и вызовите `RenderText1` из формы <xref:System.Windows.Forms.Control.Paint> обработчик событий, передав `e` как <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName="DrawText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Прорисовывает указываемый текст в заданном месте, используя задаваемые значения контекста устройства, цвета и шрифта.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Предлагаемые отрисовки текста <xref:System.Windows.Forms.TextRenderer> класс основан на GDI отрисовки текста и не поддерживается для печати в Windows Forms. Вместо этого используйте <xref:System.Drawing.Graphics.DrawString%2A> методы <xref:System.Drawing.Graphics> класса.  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Point pt, System.Drawing.Color foreColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Point pt, valuetype System.Drawing.Color foreColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Point pt, System::Drawing::Color foreColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="dc">Контекст устройства, в котором следует отобразить текст.</param>
        <param name="text">Текст для отрисовки.</param>
        <param name="font">Объект <see cref="T:System.Drawing.Font" /> для применения к отображаемому тексту.</param>
        <param name="pt">Объект <see cref="T:System.Drawing.Point" />, представляющий верхний левый угол отображаемого текста.</param>
        <param name="foreColor">Объект <see cref="T:System.Drawing.Color" /> для применения к отображаемому тексту.</param>
        <summary>Прорисовывает указываемый текст в заданном месте, используя задаваемые значения контекста устройства, шрифта и цвета.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Управлять прорисовкой текста можно с помощью одной из перегрузок метода <xref:System.Windows.Forms.TextRenderer.DrawText%2A>, принимающей параметр <xref:System.Windows.Forms.TextFormatFlags>.  
  
 Если `font` — `null` или `forecolor` — <xref:System.Drawing.Color.Empty?displayProperty=nameWithType>, <xref:System.Windows.Forms.TextRenderer.DrawText%2A> метод будет рисовать текст в шрифта или цвета, выбранного в данный момент в контексте устройства, заданные `dc`. Если `forecolor` — <xref:System.Drawing.Color.Transparent%2A>, не будет отображаться текст.  
  
 Предлагаемые отрисовки текста <xref:System.Windows.Forms.TextRenderer> класс основан на GDI отрисовки текста и не поддерживается для печати в Windows Forms. Вместо этого используйте <xref:System.Drawing.Graphics.DrawString%2A> методы <xref:System.Drawing.Graphics> класса.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.TextRenderer.DrawText%2A> Методы, которые указывают <xref:System.Drawing.Point> от верхнего левого угла отображаемого текста отображаются некорректно в Windows 2000. Если приложение предназначено для использования на компьютерах под управлением Windows 2000, следует использовать один из <xref:System.Windows.Forms.TextRenderer.DrawText%2A> методы, которые указывают <xref:System.Drawing.Rectangle> границы создаваемого текста.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Windows.Forms.TextRenderer.DrawText%2A>. Чтобы выполнить этот пример, вставьте код в форму Windows Forms и вызовите `RenderText1` из формы <xref:System.Windows.Forms.Control.Paint> обработчик событий, передав `e` как <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#2](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#2)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="dc" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="T:System.Drawing.IDeviceContext" />
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Rectangle bounds, System.Drawing.Color foreColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Color foreColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Rectangle bounds, System::Drawing::Color foreColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="dc">Контекст устройства, в котором следует отобразить текст.</param>
        <param name="text">Текст для отрисовки.</param>
        <param name="font">Объект <see cref="T:System.Drawing.Font" /> для применения к отображаемому тексту.</param>
        <param name="bounds">Объект <see cref="T:System.Drawing.Rectangle" />, представляющий границы текста.</param>
        <param name="foreColor">Объект <see cref="T:System.Drawing.Color" /> для применения к отображаемому тексту.</param>
        <summary>Прорисовывает указываемый текст в заданных границах, используя задаваемые значения контекста устройства, шрифта и цвета.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `font` или `forecolor` — `null` или <xref:System.Drawing.Color.Empty?displayProperty=nameWithType>соответственно; <xref:System.Windows.Forms.TextRenderer.DrawText%2A> метод будет рисовать текст в шрифта или цвета, выбранного в данный момент в контексте устройства, заданные `dc`. Если `forecolor` — <xref:System.Drawing.Color.Transparent%2A>, не будет отображаться текст.  
  
 Этот метод приведет к текст, который выравнивается по горизонтали и вертикали по центру в прямоугольник, задаваемый параметром `bounds` параметр. Чтобы изменить способ рисования текста, используйте версию <xref:System.Windows.Forms.TextRenderer.DrawText%2A> , который принимает <xref:System.Windows.Forms.TextFormatFlags> тип параметра.  
  
 Предлагаемые отрисовки текста <xref:System.Windows.Forms.TextRenderer> класс основан на GDI отрисовки текста и не поддерживается для печати в Windows Forms. Вместо этого используйте <xref:System.Drawing.Graphics.DrawString%2A> методы <xref:System.Drawing.Graphics> класса.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Windows.Forms.TextRenderer.DrawText%2A>. Чтобы выполнить этот пример, вставьте код в форму Windows Forms и вызовите `RenderText2` из формы <xref:System.Windows.Forms.Control.Paint> обработчик событий, передав `e` как <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#3](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#3)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="dc" /> имеет значение <see langword="null" />.</exception>
        <altmember cref="T:System.Drawing.IDeviceContext" />
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Point pt, System.Drawing.Color foreColor, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Point pt, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Point pt, System::Drawing::Color foreColor, System::Drawing::Color backColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="dc">Контекст устройства, в котором следует отобразить текст.</param>
        <param name="text">Текст для отрисовки.</param>
        <param name="font">Объект <see cref="T:System.Drawing.Font" /> для применения к отображаемому тексту.</param>
        <param name="pt">Объект <see cref="T:System.Drawing.Point" />, представляющий верхний левый угол отображаемого текста.</param>
        <param name="foreColor">Объект <see cref="T:System.Drawing.Color" /> для применения к отображаемому тексту.</param>
        <param name="backColor">Объект <see cref="T:System.Drawing.Color" /> для применения к области фона прорисовываемого текста.</param>
        <summary>Прорисовывает указываемый текст в заданном месте, используя задаваемые значения контекста устройства, шрифта, цвета и цвета фона.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `backColor` Параметр применяется к прямоугольной области, содержащей отображаемый текст. Если `font`, `backcolor` или `forecolor` — `null` или <xref:System.Drawing.Color.Empty?displayProperty=nameWithType>соответственно; <xref:System.Windows.Forms.TextRenderer.DrawText%2A> метод будет рисовать текст в шрифта или цвета, выбранного в данный момент в контексте устройства, заданные `dc`. Если `forecolor` — <xref:System.Drawing.Color.Transparent%2A>, не будет отображаться текст.  
  
 Управлять прорисовкой текста можно с помощью одной из перегрузок метода <xref:System.Windows.Forms.TextRenderer.DrawText%2A>, принимающей параметр <xref:System.Windows.Forms.TextFormatFlags>.  
  
 Предлагаемые отрисовки текста <xref:System.Windows.Forms.TextRenderer> класс основан на GDI отрисовки текста и не поддерживается для печати в Windows Forms. Вместо этого используйте <xref:System.Drawing.Graphics.DrawString%2A> методы <xref:System.Drawing.Graphics> класса.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.TextRenderer.DrawText%2A> Методы, которые указывают <xref:System.Drawing.Point> от верхнего левого угла отображаемого текста отображаются некорректно в Windows 2000. Если приложение предназначено для использования на компьютерах под управлением Windows 2000, следует использовать один из <xref:System.Windows.Forms.TextRenderer.DrawText%2A> методы, которые указывают <xref:System.Drawing.Rectangle> границы создаваемого текста.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Windows.Forms.TextRenderer.DrawText%2A>. Чтобы выполнить этот пример, вставьте код в форму Windows Forms и вызовите `RenderText3` из формы <xref:System.Windows.Forms.Control.Paint> обработчик событий, передав `e` как <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#4](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#4)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="dc" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Point pt, System.Drawing.Color foreColor, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Point pt, valuetype System.Drawing.Color foreColor, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Point pt, System::Drawing::Color foreColor, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">Контекст устройства, в котором следует отобразить текст.</param>
        <param name="text">Текст для отрисовки.</param>
        <param name="font">Объект <see cref="T:System.Drawing.Font" /> для применения к отображаемому тексту.</param>
        <param name="pt">Объект <see cref="T:System.Drawing.Point" />, представляющий верхний левый угол отображаемого текста.</param>
        <param name="foreColor">Объект <see cref="T:System.Drawing.Color" /> для применения к отображаемому тексту.</param>
        <param name="flags">Поразрядное сочетание значений <see cref="T:System.Windows.Forms.TextFormatFlags" />.</param>
        <summary>Прорисовывает указываемый текст в заданном месте, используя задаваемые значения контекста устройства, шрифта, цвета и инструкции форматирования.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Управлять прорисовкой текста можно с помощью одной из перегрузок метода <xref:System.Windows.Forms.TextRenderer.DrawText%2A>, принимающей параметр <xref:System.Windows.Forms.TextFormatFlags>. Например, поведение класса <xref:System.Windows.Forms.TextRenderer> по умолчанию предполагает добавление внутренних полей в ограничивающий прямоугольник отображаемого текста с целью вместить в этот прямоугольник части глифов, выступающие за его границы. Если требуется прорисовать строку текста без этих дополнительных областей, следует использовать версии методов <xref:System.Windows.Forms.TextRenderer.DrawText%2A> и <xref:System.Windows.Forms.TextRenderer.MeasureText%2A>, которые принимают объект <xref:System.Drawing.Size> и параметр <xref:System.Windows.Forms.TextFormatFlags>. Пример см. в разделе <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.  
  
 `backColor` Параметр применяется к область в пределах `bounds` параметра. Если `font` или `forecolor` — `null` или <xref:System.Drawing.Color.Empty?displayProperty=nameWithType>соответственно; <xref:System.Windows.Forms.TextRenderer.DrawText%2A> метод будет рисовать текст в шрифта или цвета, выбранного в данный момент в контексте устройства, заданные `dc`. Если `forecolor` — <xref:System.Drawing.Color.Transparent%2A>, не будет отображаться текст.  
  
 Предлагаемые отрисовки текста <xref:System.Windows.Forms.TextRenderer> класс основан на GDI отрисовки текста и не поддерживается для печати в Windows Forms. Вместо этого используйте <xref:System.Drawing.Graphics.DrawString%2A> методы <xref:System.Drawing.Graphics> класса.  
  
 <xref:System.Windows.Forms.TextRenderer> Поддерживает добавление позиции табуляции для отображаемого текста, несмотря на то, что вы можете развернуть существующую вкладку прекратит использование выполняет <xref:System.Windows.Forms.TextFormatFlags.ExpandTabs> флаг.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.TextRenderer.DrawText%2A> Методы, которые указывают <xref:System.Drawing.Point> от верхнего левого угла отображаемого текста отображаются некорректно в Windows 2000. Если приложение предназначено для использования на компьютерах под управлением Windows 2000, следует использовать один из <xref:System.Windows.Forms.TextRenderer.DrawText%2A> методы, которые указывают <xref:System.Drawing.Rectangle> границы создаваемого текста.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Windows.Forms.TextRenderer.DrawText%2A>. Чтобы выполнить этот пример, вставьте код в форму Windows Forms и вызовите `RenderText5` из формы <xref:System.Windows.Forms.Control.Paint> обработчик событий, передав `e` как <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#6](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#6)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#6](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="dc" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Rectangle bounds, System.Drawing.Color foreColor, System.Drawing.Color backColor);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Rectangle bounds, System::Drawing::Color foreColor, System::Drawing::Color backColor);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
      </Parameters>
      <Docs>
        <param name="dc">Контекст устройства, в котором следует отобразить текст.</param>
        <param name="text">Текст для отрисовки.</param>
        <param name="font">Объект <see cref="T:System.Drawing.Font" /> для применения к отображаемому тексту.</param>
        <param name="bounds">Объект <see cref="T:System.Drawing.Rectangle" />, представляющий границы текста.</param>
        <param name="foreColor">Объект <see cref="T:System.Drawing.Color" /> для применения к отображаемому тексту.</param>
        <param name="backColor">Объект <see cref="T:System.Drawing.Color" /> для применения к области, представленной параметром <c>bounds</c>.</param>
        <summary>Прорисовывает указываемый текст в заданных границах, используя задаваемые значения контекста устройства, шрифта, цвета и цвета фона.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `backColor` Параметр применяется к область в пределах `bounds` параметра. Если `font`, `backcolor` или `forecolor` — `null` или <xref:System.Drawing.Color.Empty>соответственно; <xref:System.Windows.Forms.TextRenderer.DrawText%2A> метод будет рисовать текст в шрифта или цвета, выбранного в данный момент в контексте устройства, заданные `dc`. Если `forecolor` — <xref:System.Drawing.Color.Transparent%2A>, не будет отображаться текст.  
  
 Этот метод приведет к текст, который выравнивается по горизонтали и вертикали по центру в прямоугольник, задаваемый параметром `bounds` параметр. Чтобы изменить способ рисования текста, используйте версию <xref:System.Windows.Forms.TextRenderer.DrawText%2A> , который принимает <xref:System.Windows.Forms.TextFormatFlags> тип параметра.  
  
 Предлагаемые отрисовки текста <xref:System.Windows.Forms.TextRenderer> класс основан на GDI отрисовки текста и не поддерживается для печати в Windows Forms. Вместо этого используйте <xref:System.Drawing.Graphics.DrawString%2A> методы <xref:System.Drawing.Graphics> класса.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Windows.Forms.TextRenderer.DrawText%2A>. Чтобы выполнить этот пример, вставьте код в форму Windows Forms и вызовите `RenderText4` из формы <xref:System.Windows.Forms.Control.Paint> обработчик событий, передав `e` как <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#5](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#5)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#5](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="dc" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Rectangle bounds, System.Drawing.Color foreColor, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Color foreColor, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Rectangle bounds, System::Drawing::Color foreColor, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">Контекст устройства, в котором следует отобразить текст.</param>
        <param name="text">Текст для отрисовки.</param>
        <param name="font">Объект <see cref="T:System.Drawing.Font" /> для применения к отображаемому тексту.</param>
        <param name="bounds">Объект <see cref="T:System.Drawing.Rectangle" />, представляющий границы текста.</param>
        <param name="foreColor">Объект <see cref="T:System.Drawing.Color" /> для применения к отображаемому тексту.</param>
        <param name="flags">Поразрядное сочетание значений <see cref="T:System.Windows.Forms.TextFormatFlags" />.</param>
        <summary>Прорисовывает указываемый текст в заданных границах, используя задаваемые значения контекста устройства, шрифта, цвета и инструкции форматирования.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если `font` или `color` — `null` или <xref:System.Drawing.Color.Empty>соответственно; <xref:System.Windows.Forms.TextRenderer.DrawText%2A> метод будет рисовать текст в шрифта или цвета, выбранного в данный момент в контексте устройства, заданные `dc`. Если `forecolor` — <xref:System.Drawing.Color.Transparent%2A>, не будет отображаться текст.  
  
 Управлять прорисовкой текста можно с помощью одной из перегрузок метода <xref:System.Windows.Forms.TextRenderer.DrawText%2A>, принимающей параметр <xref:System.Windows.Forms.TextFormatFlags>. Например, поведение класса <xref:System.Windows.Forms.TextRenderer> по умолчанию предполагает добавление внутренних полей в ограничивающий прямоугольник отображаемого текста с целью вместить в этот прямоугольник части глифов, выступающие за его границы. Если требуется прорисовать строку текста без этих дополнительных областей, следует использовать версии методов <xref:System.Windows.Forms.TextRenderer.DrawText%2A> и <xref:System.Windows.Forms.TextRenderer.MeasureText%2A>, которые принимают объект <xref:System.Drawing.Size> и параметр <xref:System.Windows.Forms.TextFormatFlags>. Пример см. в разделе <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.  
  
 Предлагаемые отрисовки текста <xref:System.Windows.Forms.TextRenderer> класс основан на GDI отрисовки текста и не поддерживается для печати в Windows Forms. Вместо этого используйте <xref:System.Drawing.Graphics.DrawString%2A> методы <xref:System.Drawing.Graphics> класса.  
  
 <xref:System.Windows.Forms.TextRenderer> Поддерживает добавление позиции табуляции для отображаемого текста, несмотря на то, что вы можете развернуть существующую вкладку прекратит использование выполняет <xref:System.Windows.Forms.TextFormatFlags.ExpandTabs> флаг.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Windows.Forms.TextRenderer.DrawText%2A>. Чтобы выполнить этот пример, вставьте код в форму Windows Forms и вызовите `RenderText6` из формы <xref:System.Windows.Forms.Control.Paint> обработчик событий, передав `e` как <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#7](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#7)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#7](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="dc" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Point pt, System.Drawing.Color foreColor, System.Drawing.Color backColor, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Point pt, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Point pt, System::Drawing::Color foreColor, System::Drawing::Color backColor, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="pt" Type="System.Drawing.Point" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">Контекст устройства, в котором следует отобразить текст.</param>
        <param name="text">Текст для отрисовки.</param>
        <param name="font">Объект <see cref="T:System.Drawing.Font" /> для применения к отображаемому тексту.</param>
        <param name="pt">Объект <see cref="T:System.Drawing.Point" />, представляющий верхний левый угол отображаемого текста.</param>
        <param name="foreColor">Объект <see cref="T:System.Drawing.Color" />, применяемый к тексту.</param>
        <param name="backColor">Объект <see cref="T:System.Drawing.Color" /> для применения к области фона прорисовываемого текста.</param>
        <param name="flags">Поразрядное сочетание значений <see cref="T:System.Windows.Forms.TextFormatFlags" />.</param>
        <summary>Прорисовывает указываемый текст в заданном месте, используя задаваемые значения контекста устройства, шрифта, цвета, цвета фона и инструкции форматирования.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `backcolor` Применяется параметр прямоугольной области, содержащей отображаемый текст. Если `font` или `forecolor` — `null` или <xref:System.Drawing.Color.Empty>соответственно; <xref:System.Windows.Forms.TextRenderer.DrawText%2A> метод будет рисовать текст в шрифта или цвета, выбранного в данный момент в контексте устройства, заданные `dc`. Если `forecolor` — <xref:System.Drawing.Color.Transparent%2A>, не будет отображаться текст.  
  
 Управлять прорисовкой текста можно с помощью одной из перегрузок метода <xref:System.Windows.Forms.TextRenderer.DrawText%2A>, принимающей параметр <xref:System.Windows.Forms.TextFormatFlags>. Например, поведение класса <xref:System.Windows.Forms.TextRenderer> по умолчанию предполагает добавление внутренних полей в ограничивающий прямоугольник отображаемого текста с целью вместить в этот прямоугольник части глифов, выступающие за его границы. Если требуется прорисовать строку текста без этих дополнительных областей, следует использовать версии методов <xref:System.Windows.Forms.TextRenderer.DrawText%2A> и <xref:System.Windows.Forms.TextRenderer.MeasureText%2A>, которые принимают объект <xref:System.Drawing.Size> и параметр <xref:System.Windows.Forms.TextFormatFlags>. Пример см. в разделе <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.  
  
 Предлагаемые отрисовки текста <xref:System.Windows.Forms.TextRenderer> класс основан на GDI отрисовки текста и не поддерживается для печати в Windows Forms. Вместо этого используйте <xref:System.Drawing.Graphics.DrawString%2A> методы <xref:System.Drawing.Graphics> класса.  
  
 <xref:System.Windows.Forms.TextRenderer> Поддерживает добавление позиции табуляции для отображаемого текста, несмотря на то, что вы можете развернуть существующую вкладку прекратит использование выполняет <xref:System.Windows.Forms.TextFormatFlags.ExpandTabs> флаг.  
  
> [!NOTE]
>  <xref:System.Windows.Forms.TextRenderer.DrawText%2A> Методы, которые указывают <xref:System.Drawing.Point> от верхнего левого угла отображаемого текста отображаются некорректно в Windows 2000. Если приложение предназначено для использования на компьютерах под управлением Windows 2000, следует использовать один из <xref:System.Windows.Forms.TextRenderer.DrawText%2A> методы, которые указывают <xref:System.Drawing.Rectangle> границы создаваемого текста.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Windows.Forms.TextRenderer.DrawText%2A>. Чтобы выполнить этот пример, вставьте код в форму Windows Forms и вызовите `RenderText7` из формы <xref:System.Windows.Forms.Control.Paint> обработчик событий, передав `e` как <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#8](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#8)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#8](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#8)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="dc" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="DrawText">
      <MemberSignature Language="C#" Value="public static void DrawText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Rectangle bounds, System.Drawing.Color foreColor, System.Drawing.Color backColor, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void DrawText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Rectangle bounds, valuetype System.Drawing.Color foreColor, valuetype System.Drawing.Color backColor, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void DrawText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Rectangle bounds, System::Drawing::Color foreColor, System::Drawing::Color backColor, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="bounds" Type="System.Drawing.Rectangle" />
        <Parameter Name="foreColor" Type="System.Drawing.Color" />
        <Parameter Name="backColor" Type="System.Drawing.Color" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">Контекст устройства, в котором следует отобразить текст.</param>
        <param name="text">Текст для отрисовки.</param>
        <param name="font">Объект <see cref="T:System.Drawing.Font" /> для применения к отображаемому тексту.</param>
        <param name="bounds">Объект <see cref="T:System.Drawing.Rectangle" />, представляющий границы текста.</param>
        <param name="foreColor">Объект <see cref="T:System.Drawing.Color" />, применяемый к тексту.</param>
        <param name="backColor">Объект <see cref="T:System.Drawing.Color" /> для применения к области, представленной параметром <c>bounds</c>.</param>
        <param name="flags">Поразрядное сочетание значений <see cref="T:System.Windows.Forms.TextFormatFlags" />.</param>
        <summary>Прорисовывает указываемый текст в заданных границах, используя задаваемые значения контекста устройства, шрифта, цвета, цвета фона и инструкции форматирования.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `backcolor` Параметр применяется к область в пределах `bounds` параметр`.` Если `font`, `forecolor` или `backcolor` — `null` или <xref:System.Drawing.Color.Empty>соответственно; <xref:System.Windows.Forms.TextRenderer.DrawText%2A> будет метод Рисование текста в шрифта или цвета, выбранного в данный момент в контексте устройства, заданные `dc`. Если `forecolor` — <xref:System.Drawing.Color.Transparent%2A>, не будет отображаться текст.  
  
 Управлять прорисовкой текста можно с помощью одной из перегрузок метода <xref:System.Windows.Forms.TextRenderer.DrawText%2A>, принимающей параметр <xref:System.Windows.Forms.TextFormatFlags>. Например, поведение класса <xref:System.Windows.Forms.TextRenderer> по умолчанию предполагает добавление внутренних полей в ограничивающий прямоугольник отображаемого текста с целью вместить в этот прямоугольник части глифов, выступающие за его границы. Если требуется прорисовать строку текста без этих дополнительных областей, следует использовать версии методов <xref:System.Windows.Forms.TextRenderer.DrawText%2A> и <xref:System.Windows.Forms.TextRenderer.MeasureText%2A>, которые принимают объект <xref:System.Drawing.Size> и параметр <xref:System.Windows.Forms.TextFormatFlags>. Пример см. в разделе <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.  
  
 Предлагаемые отрисовки текста <xref:System.Windows.Forms.TextRenderer> класс основан на GDI отрисовки текста и не поддерживается для печати в Windows Forms. Вместо этого используйте <xref:System.Drawing.Graphics.DrawString%2A> методы <xref:System.Drawing.Graphics> класса.  
  
 <xref:System.Windows.Forms.TextRenderer> Поддерживает добавление позиции табуляции для отображаемого текста, несмотря на то, что вы можете развернуть существующую вкладку прекратит использование выполняет <xref:System.Windows.Forms.TextFormatFlags.ExpandTabs> флаг.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Windows.Forms.TextRenderer.DrawText%2A>. Чтобы выполнить этот пример, вставьте код в форму Windows Forms и вызовите `RenderText8` из формы <xref:System.Windows.Forms.Control.Paint> обработчик событий, передав `e` как <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#9](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#9)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#9](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#9)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="dc" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="MeasureText">
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Измеряет указанный текст при прорисовке с помощью указанного шрифта.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (string text, System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(string text, class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.String,System.Drawing.Font)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::String ^ text, System::Drawing::Font ^ font);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="text">Текст для измерения.</param>
        <param name="font">Объект <see cref="T:System.Drawing.Font" /> для применения к измеряемому тексту.</param>
        <summary>Предоставляет размер (в пикселях) указанного текста при отрисовке с помощью заданного шрифта.</summary>
        <returns>Размер <see cref="T:System.Drawing.Size" /> (в пикселях) объекта <paramref name="text" />, отрисовываемого на одной строке с помощью задаваемого объекта <paramref name="font" />. Управлять прорисовкой текста можно с помощью одной из перегрузок метода <see cref="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Rectangle,System.Drawing.Color,System.Windows.Forms.TextFormatFlags)" />, принимающей параметр <see cref="T:System.Windows.Forms.TextFormatFlags" />. Например, поведение класса <see cref="T:System.Windows.Forms.TextRenderer" /> по умолчанию предполагает добавление внутренних полей в ограничивающий прямоугольник отображаемого текста с целью вместить в этот прямоугольник части глифов, выступающие за его границы. Если требуется прорисовать строку текста без этих дополнительных областей, следует использовать версии методов <see cref="M:System.Windows.Forms.TextRenderer.DrawText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Point,System.Drawing.Color)" /> и <see cref="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font)" />, которые принимают объект <see cref="T:System.Drawing.Size" /> и параметр <see cref="T:System.Windows.Forms.TextFormatFlags" />. Пример см. в разделе <see cref="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> Метод требует, что текст выводится в одной строке.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать метод <xref:System.Windows.Forms.TextRenderer.MeasureText%2A>. Чтобы выполнить этот пример, вставьте код в форму Windows Forms и вызовите `MeasureText1` из формы <xref:System.Windows.Forms.Control.Paint> обработчик событий, передав `e` как <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#1](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#1)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
      </Parameters>
      <Docs>
        <param name="dc">Контекст устройства, в котором должен измеряться текст.</param>
        <param name="text">Текст для измерения.</param>
        <param name="font">Объект <see cref="T:System.Drawing.Font" /> для применения к измеряемому тексту.</param>
        <summary>Предоставляет размер (в пикселях) указанного текста, отрисовываемого с помощью заданного шрифта в указанном контексте устройства.</summary>
        <returns>Размер <see cref="T:System.Drawing.Size" /> (в пикселях) объекта <paramref name="text" />, отрисовываемого на одной строке с помощью указанного параметра <paramref name="font" /> в заданном контексте устройства.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> Метод требует, что текст выводится в одной строке.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать одно из <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> методы. Чтобы выполнить этот пример, вставьте код в форму Windows Forms и вызовите `DrawALineOfText` из формы <xref:System.Windows.Forms.Control.Paint> обработчик событий, передав `e` как <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (string text, System.Drawing.Font font, System.Drawing.Size proposedSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(string text, class System.Drawing.Font font, valuetype System.Drawing.Size proposedSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.String,System.Drawing.Font,System.Drawing.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Size proposedSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="proposedSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="text">Текст для измерения.</param>
        <param name="font">Объект <see cref="T:System.Drawing.Font" /> для применения к измеряемому тексту.</param>
        <param name="proposedSize">Размер <see cref="T:System.Drawing.Size" /> исходного ограничивающего прямоугольника.</param>
        <summary>Предоставляет размер (в пикселях) указанного текста при его отрисовке с помощью указанного шрифта, с использованием заданного размера для создания исходного ограничивающего прямоугольника.</summary>
        <returns>Размер <see cref="T:System.Drawing.Size" /> (в пикселях) объекта <paramref name="text" />, отрисовываемого с помощью указанного параметра <paramref name="font" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> Использует метод `proposedSize` параметр, чтобы указать отношение высоты к ширине, определяя размер текста. Если измерение текста на одну строку, если `proposedSize` представляет параметр <xref:System.Drawing.Size> с Измерение высоты больше <xref:System.Int32.MaxValue?displayProperty=nameWithType>, возвращенный <xref:System.Drawing.Size> будут корректироваться с учетом фактического высота текста.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать одно из <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> методы. Чтобы выполнить этот пример, вставьте код в форму Windows Forms и вызовите `DrawALineOfText` из формы <xref:System.Windows.Forms.Control.Paint> обработчик событий, передав `e` как <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Size proposedSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Size proposedSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Size proposedSize);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="proposedSize" Type="System.Drawing.Size" />
      </Parameters>
      <Docs>
        <param name="dc">Контекст устройства, в котором должен измеряться текст.</param>
        <param name="text">Текст для измерения.</param>
        <param name="font">Объект <see cref="T:System.Drawing.Font" /> для применения к измеряемому тексту.</param>
        <param name="proposedSize">Размер <see cref="T:System.Drawing.Size" /> исходного ограничивающего прямоугольника.</param>
        <summary>Предоставляет размер (в пикселях) указанного текста при его отрисовке с помощью указанного шрифта в заданном контексте устройства, с использованием заданного размера для создания исходного ограничивающего прямоугольника для текста.</summary>
        <returns>Размер <see cref="T:System.Drawing.Size" /> (в пикселях) объекта <paramref name="text" />, отрисовываемого с помощью указанного параметра <paramref name="font" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> Использует метод `proposedSize` параметр, чтобы указать отношение высоты к ширине, определяя размер текста. Если измерение текста на одну строку, если `proposedSize` представляет параметр <xref:System.Drawing.Size> с Измерение высоты больше <xref:System.Int32.MaxValue?displayProperty=nameWithType>, возвращенный <xref:System.Drawing.Size> будут корректироваться с учетом фактического высота текста.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать одно из <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> методы. Чтобы выполнить этот пример, вставьте код в форму Windows Forms и вызовите `DrawALineOfText` из формы <xref:System.Windows.Forms.Control.Paint> обработчик событий, передав `e` как <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="dc" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (string text, System.Drawing.Font font, System.Drawing.Size proposedSize, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(string text, class System.Drawing.Font font, valuetype System.Drawing.Size proposedSize, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Size proposedSize, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="proposedSize" Type="System.Drawing.Size" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="text">Текст для измерения.</param>
        <param name="font">Объект <see cref="T:System.Drawing.Font" /> для применения к измеряемому тексту.</param>
        <param name="proposedSize">Размер <see cref="T:System.Drawing.Size" /> исходного ограничивающего прямоугольника.</param>
        <param name="flags">Инструкции форматирования для применения к измеряемому тексту.</param>
        <summary>Предоставляет размер (в пикселях) указанного текста при его отрисовке с помощью указанного шрифта и инструкций форматирования, с использованием заданного размера для создания исходного ограничивающего прямоугольника для текста.</summary>
        <returns>Размер <see cref="T:System.Drawing.Size" /> (в пикселях) объекта <paramref name="text" />, отрисовываемого с помощью задаваемых значений параметра <paramref name="font" /> и формата.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> использует `proposedSize` и `flags` параметров, чтобы указать отношение высоты к ширине, определяя размер текста. Если измерение текста на одну строку, если `proposedSize` представляет параметр <xref:System.Drawing.Size> с Измерение высоты больше <xref:System.Int32.MaxValue?displayProperty=nameWithType>, возвращенный <xref:System.Drawing.Size> будут корректироваться с учетом фактического высота текста.  
  
 Управлять прорисовкой текста можно с помощью одной из перегрузок метода <xref:System.Windows.Forms.TextRenderer.DrawText%2A>, принимающей параметр <xref:System.Windows.Forms.TextFormatFlags>. Например, поведение класса <xref:System.Windows.Forms.TextRenderer> по умолчанию предполагает добавление внутренних полей в ограничивающий прямоугольник отображаемого текста с целью вместить в этот прямоугольник части глифов, выступающие за его границы. Если требуется прорисовать строку текста без этих дополнительных областей, следует использовать версии методов <xref:System.Windows.Forms.TextRenderer.DrawText%2A> и <xref:System.Windows.Forms.TextRenderer.MeasureText%2A>, которые принимают объект <xref:System.Drawing.Size> и параметр <xref:System.Windows.Forms.TextFormatFlags>. Пример см. в разделе <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29>.  
  
> [!NOTE]
>  Эта перегрузка <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29> будет игнорировать <xref:System.Windows.Forms.TextFormatFlags> значение <xref:System.Windows.Forms.TextFormatFlags.NoPadding> или <xref:System.Windows.Forms.TextFormatFlags.LeftAndRightPadding>. Если вы указываете значение заполнения, используемый по умолчанию, следует использовать перегруженный <xref:System.Windows.Forms.TextRenderer.MeasureText%28System.Drawing.IDeviceContext%2CSystem.String%2CSystem.Drawing.Font%2CSystem.Drawing.Size%2CSystem.Windows.Forms.TextFormatFlags%29> , который принимает <xref:System.Drawing.IDeviceContext> объекта.  
  
   
  
## Examples  
 В следующем примере кода показано, как использовать одно из <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> методы. Чтобы выполнить этот пример, вставьте код в форму Windows Forms и вызовите `DrawALineOfText` из формы <xref:System.Windows.Forms.Control.Paint> обработчик событий, передав `e` как <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureText">
      <MemberSignature Language="C#" Value="public static System.Drawing.Size MeasureText (System.Drawing.IDeviceContext dc, string text, System.Drawing.Font font, System.Drawing.Size proposedSize, System.Windows.Forms.TextFormatFlags flags);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Drawing.Size MeasureText(class System.Drawing.IDeviceContext dc, string text, class System.Drawing.Font font, valuetype System.Drawing.Size proposedSize, valuetype System.Windows.Forms.TextFormatFlags flags) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Forms.TextRenderer.MeasureText(System.Drawing.IDeviceContext,System.String,System.Drawing.Font,System.Drawing.Size,System.Windows.Forms.TextFormatFlags)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Drawing::Size MeasureText(System::Drawing::IDeviceContext ^ dc, System::String ^ text, System::Drawing::Font ^ font, System::Drawing::Size proposedSize, System::Windows::Forms::TextFormatFlags flags);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Drawing.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dc" Type="System.Drawing.IDeviceContext" />
        <Parameter Name="text" Type="System.String" />
        <Parameter Name="font" Type="System.Drawing.Font" />
        <Parameter Name="proposedSize" Type="System.Drawing.Size" />
        <Parameter Name="flags" Type="System.Windows.Forms.TextFormatFlags" />
      </Parameters>
      <Docs>
        <param name="dc">Контекст устройства, в котором должен измеряться текст.</param>
        <param name="text">Текст для измерения.</param>
        <param name="font">Объект <see cref="T:System.Drawing.Font" /> для применения к измеряемому тексту.</param>
        <param name="proposedSize">Размер <see cref="T:System.Drawing.Size" /> исходного ограничивающего прямоугольника.</param>
        <param name="flags">Инструкции форматирования для применения к измеряемому тексту.</param>
        <summary>Предоставляет размер (в пикселях) указанного текста при его отрисовке с помощью указанных значений контекста устройства, шрифта и инструкций форматирования, с использованием заданного размера для создания исходного ограничивающего прямоугольника для текста.</summary>
        <returns>Размер <see cref="T:System.Drawing.Size" /> (в пикселях) объекта <paramref name="text" />, отрисовываемого с помощью задаваемых значений параметра <paramref name="font" /> и формата.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> Использует метод `proposedSize` и `flags` параметров, чтобы указать отношение высоты к ширине, определяя размер текста. Если измерение текста на одну строку, если `proposedSize` представляет параметр <xref:System.Drawing.Size> с Измерение высоты больше <xref:System.Int32.MaxValue?displayProperty=nameWithType>, возвращенный <xref:System.Drawing.Size> будут корректироваться с учетом фактического высота текста.  
  
 Управлять прорисовкой текста можно с помощью одной из перегрузок метода <xref:System.Windows.Forms.TextRenderer.DrawText%2A>, принимающей параметр <xref:System.Windows.Forms.TextFormatFlags>. Например, поведение класса <xref:System.Windows.Forms.TextRenderer> по умолчанию предполагает добавление внутренних полей в ограничивающий прямоугольник отображаемого текста с целью вместить в этот прямоугольник части глифов, выступающие за его границы. Если необходимо нарисовать линию текста без этих дополнительных пробелов, используйте версии <xref:System.Windows.Forms.TextRenderer.DrawText%2A> и <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> , которые принимают <xref:System.Drawing.Size> и <xref:System.Windows.Forms.TextFormatFlags> параметра, как показано в примере.  
  
   
  
## Examples  
 В следующем примере демонстрируется использование <xref:System.Windows.Forms.TextRenderer.MeasureText%2A> и <xref:System.Windows.Forms.TextRenderer.DrawText%2A> методы для рисования одну строку текста в различные стили шрифтов. Чтобы выполнить этот пример, вставьте следующий код в форму Windows Forms и вызовите `DrawALineOfText` из формы <xref:System.Windows.Forms.Control.Paint> обработчик событий, передав `e` как <xref:System.Windows.Forms.PaintEventArgs>.  
  
 [!code-csharp[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/csharp/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/CS/Form1.cs#11)]
 [!code-vb[System.Windows.Forms.TextRendererExamples#11](~/samples/snippets/visualbasic/VS_Snippets_Winforms/System.Windows.Forms.TextRendererExamples/VB/Form1.vb#11)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="dc" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
  </Members>
</Type>