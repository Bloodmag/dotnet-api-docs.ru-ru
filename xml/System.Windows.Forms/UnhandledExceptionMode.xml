<Type Name="UnhandledExceptionMode" FullName="System.Windows.Forms.UnhandledExceptionMode">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4859b45dcfec59a8197964f5effd83fc5ec4ff0d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36510214" />
  </Metadata>
  <TypeSignature Language="C#" Value="public enum UnhandledExceptionMode" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed UnhandledExceptionMode extends System.Enum" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Forms.UnhandledExceptionMode" />
  <TypeSignature Language="VB.NET" Value="Public Enum UnhandledExceptionMode" />
  <TypeSignature Language="C++ CLI" Value="public enum class UnhandledExceptionMode" />
  <TypeSignature Language="F#" Value="type UnhandledExceptionMode = " />
  <AssemblyInfo>
    <AssemblyName>System.Windows.Forms</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Enum</BaseTypeName>
  </Base>
  <Docs>
    <summary>
      <span data-ttu-id="55350-101">Определяет, куда приложение Windows Forms должно отправлять необработанные исключения.</span>
      <span class="sxs-lookup">
        <span data-stu-id="55350-101">Defines where a Windows Forms application should send unhandled exceptions.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="55350-102">Это перечисление используется методом <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A>.</span><span class="sxs-lookup"><span data-stu-id="55350-102">This enumeration is used by <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="55350-103">В платформе .NET Framework версии 2.0 общее поведение среды выполнения языка изменена, чтобы разрешить необработанные исключения для распространения вверх по стеку вызовов.</span><span class="sxs-lookup"><span data-stu-id="55350-103">In the .NET Framework version 2.0, the common language runtime behavior changed to allow unhandled exceptions to propagate up the call stack.</span></span> <span data-ttu-id="55350-104">Это поведение можно отключить через файл конфигурации приложения.</span><span class="sxs-lookup"><span data-stu-id="55350-104">This behavior can be disabled via the application configuration file.</span></span> <span data-ttu-id="55350-105">Дополнительные сведения см. в статье [Исключения в управляемых потоках](~/docs/standard/threading/exceptions-in-managed-threads.md).</span><span class="sxs-lookup"><span data-stu-id="55350-105">For more information, see [Exceptions in Managed Threads](~/docs/standard/threading/exceptions-in-managed-threads.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="55350-106">В следующем примере кода задаются обработчики событий для ошибок, возникающих в потоках Windows Forms и ошибок, возникающих в других потоках.</span><span class="sxs-lookup"><span data-stu-id="55350-106">The following code example sets event handlers for both errors that occur on Windows Forms threads and errors that occur on other threads.</span></span> <span data-ttu-id="55350-107">Он задает <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A> , и все ошибки обрабатываются приложением, независимо от настроек в файле конфигурации приложения пользователя.</span><span class="sxs-lookup"><span data-stu-id="55350-107">It sets <xref:System.Windows.Forms.Application.SetUnhandledExceptionMode%2A> so that all errors are handled by the application, regardless of the settings in the application's user configuration file.</span></span> <span data-ttu-id="55350-108">Она использует <xref:System.Windows.Forms.Application.ThreadException> событий для первый из них и <xref:System.AppDomain.UnhandledException> событий для второго.</span><span class="sxs-lookup"><span data-stu-id="55350-108">It uses the <xref:System.Windows.Forms.Application.ThreadException> event for the former, and the <xref:System.AppDomain.UnhandledException> event for the latter.</span></span> <span data-ttu-id="55350-109">Поскольку <xref:System.AppDomain.UnhandledException> не может помешать приложению завершение работы, пример просто ошибка регистрируется в журнале событий системы до завершения.</span><span class="sxs-lookup"><span data-stu-id="55350-109">Since <xref:System.AppDomain.UnhandledException> cannot prevent an application from terminating, the example simply logs the error in the system Event Log prior to termination.</span></span>  
  
 <span data-ttu-id="55350-110">В этом примере предполагается, что вы определили два <xref:System.Windows.Forms.Button> элементов управления, `button1` и `button2`на ваш <xref:System.Windows.Forms.Form> класса.</span><span class="sxs-lookup"><span data-stu-id="55350-110">This sample assumes that you have defined two <xref:System.Windows.Forms.Button> controls, `button1` and `button2`, on your <xref:System.Windows.Forms.Form> class.</span></span>  
  
 [!code-cpp[Classic Application.ThreadException Example#1](~/samples/snippets/cpp/VS_Snippets_Winforms/Classic Application.ThreadException Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Application.ThreadException Example#1](~/samples/snippets/csharp/VS_Snippets_Winforms/Classic Application.ThreadException Example/CS/source.cs#1)]
 [!code-vb[Classic Application.ThreadException Example#1](~/samples/snippets/visualbasic/VS_Snippets_Winforms/Classic Application.ThreadException Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Automatic">
      <MemberSignature Language="C#" Value="Automatic" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.UnhandledExceptionMode Automatic = int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.UnhandledExceptionMode.Automatic" />
      <MemberSignature Language="VB.NET" Value="Automatic" />
      <MemberSignature Language="C++ CLI" Value="Automatic" />
      <MemberSignature Language="F#" Value="Automatic = 0" Usage="System.Windows.Forms.UnhandledExceptionMode.Automatic" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.UnhandledExceptionMode</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="55350-111">Направлять все события в обработчик <see cref="E:System.Windows.Forms.Application.ThreadException" />, если в файле конфигурации приложения не указано иное.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55350-111">Route all exceptions to the <see cref="E:System.Windows.Forms.Application.ThreadException" /> handler, unless the application's configuration file specifies otherwise.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="CatchException">
      <MemberSignature Language="C#" Value="CatchException" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.UnhandledExceptionMode CatchException = int32(2)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.UnhandledExceptionMode.CatchException" />
      <MemberSignature Language="VB.NET" Value="CatchException" />
      <MemberSignature Language="C++ CLI" Value="CatchException" />
      <MemberSignature Language="F#" Value="CatchException = 2" Usage="System.Windows.Forms.UnhandledExceptionMode.CatchException" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.UnhandledExceptionMode</ReturnType>
      </ReturnValue>
      <MemberValue>2</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="55350-112">Всегда направлять события в обработчик <see cref="E:System.Windows.Forms.Application.ThreadException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55350-112">Always route exceptions to the <see cref="E:System.Windows.Forms.Application.ThreadException" /> handler.</span>
          </span>
          <span data-ttu-id="55350-113">Файл конфигурации приложения не учитывается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55350-113">Ignore the application configuration file.</span>
          </span>
        </summary>
      </Docs>
    </Member>
    <Member MemberName="ThrowException">
      <MemberSignature Language="C#" Value="ThrowException" />
      <MemberSignature Language="ILAsm" Value=".field public static literal valuetype System.Windows.Forms.UnhandledExceptionMode ThrowException = int32(1)" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Forms.UnhandledExceptionMode.ThrowException" />
      <MemberSignature Language="VB.NET" Value="ThrowException" />
      <MemberSignature Language="C++ CLI" Value="ThrowException" />
      <MemberSignature Language="F#" Value="ThrowException = 1" Usage="System.Windows.Forms.UnhandledExceptionMode.ThrowException" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Windows.Forms</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Forms.UnhandledExceptionMode</ReturnType>
      </ReturnValue>
      <MemberValue>1</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="55350-114">Никогда не направлять события в обработчик <see cref="E:System.Windows.Forms.Application.ThreadException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55350-114">Never route exceptions to the <see cref="E:System.Windows.Forms.Application.ThreadException" /> handler.</span>
          </span>
          <span data-ttu-id="55350-115">Файл конфигурации приложения не учитывается.</span>
          <span class="sxs-lookup">
            <span data-stu-id="55350-115">Ignore the application configuration file.</span>
          </span>
        </summary>
      </Docs>
    </Member>
  </Members>
</Type>