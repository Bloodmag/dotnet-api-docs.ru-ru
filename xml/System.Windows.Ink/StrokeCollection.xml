<Type Name="StrokeCollection" FullName="System.Windows.Ink.StrokeCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5b4cf8910185e5ae416d5a30e9e9a138571eeb14" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30650718" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class StrokeCollection : System.Collections.ObjectModel.Collection&lt;System.Windows.Ink.Stroke&gt;, System.Collections.Specialized.INotifyCollectionChanged, System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit StrokeCollection extends System.Collections.ObjectModel.Collection`1&lt;class System.Windows.Ink.Stroke&gt; implements class System.Collections.Specialized.INotifyCollectionChanged, class System.ComponentModel.INotifyPropertyChanged" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Ink.StrokeCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class StrokeCollection&#xA;Inherits Collection(Of Stroke)&#xA;Implements INotifyCollectionChanged, INotifyPropertyChanged" />
  <TypeSignature Language="C++ CLI" Value="public ref class StrokeCollection : System::Collections::ObjectModel::Collection&lt;System::Windows::Ink::Stroke ^&gt;, System::Collections::Specialized::INotifyCollectionChanged, System::ComponentModel::INotifyPropertyChanged" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.Collection&lt;System.Windows.Ink.Stroke&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.Windows.Ink.Stroke</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Specialized.INotifyCollectionChanged</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.INotifyPropertyChanged</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.StrokeCollectionConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет коллекцию объектов <see cref="T:System.Windows.Ink.Stroke" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection> Позволяет выполнять функции, такие как попадание тестирование, обрезки и стирание штрихов рукописного ввода. <xref:System.Windows.Controls.InkCanvas> Элемент управления выполняет многие из этих функций, но если требуется больший контроль, чем <xref:System.Windows.Controls.InkCanvas> предоставляет, <xref:System.Windows.Ink.StrokeCollection> предоставляет дополнительные возможности.  
  
 В следующей таблице перечислены источники сведений об управлении рукописного ввода на пользовательский элемент управления.  
  
|Чтобы сделать это...|См. в статье|  
|-----------------|----------------------|  
|Создание элемента управления, который собирает рукописного ввода|[Создание элемента управления рукописным вводом](~/docs/framework/wpf/advanced/creating-an-ink-input-control.md)|  
|Создайте элемент управления, позволяющий пользователю выбрать рукописного ввода|[Как: выбор рукописного ввода из пользовательского элемента управления](~/docs/framework/wpf/advanced/how-to-select-ink-from-a-custom-control.md)|  
|Создание элемента управления, пользователь может стереть рукописного ввода|[Как: стирание рукописного ввода на пользовательский элемент управления](~/docs/framework/wpf/advanced/how-to-erase-ink-on-a-custom-control.md)|  
  
<a name="xamlAttributeUsage_StrokeCollection"></a>   
## <a name="xaml-attribute-usage"></a>Использование атрибута XAML  
  
```  
<object StrokeCollection="isfString"/>  
```  
  
<a name="xamlObjectElementUsage_StrokeCollection"></a>   
## <a name="xaml-object-element-usage"></a>Использование элемента объекта XAML  
  
```  
<object>isfString</object>  
```  
  
<a name="xamlValues_StrokeCollection"></a>   
## <a name="xaml-values"></a>Значения XAML  
  
|Термин|Определение|  
|----------|----------------|  
|`isfString`|Строка, представляющая штрих в Base64-кодировке формат сериализации рукописного ввода (ISF).|  
  
   
  
## Examples  
 Следующий пример демонстрирует скопировать рукописные данные в одном <xref:System.Windows.Controls.InkCanvas> на другой <xref:System.Windows.Controls.InkCanvas>. В этом примере предполагается:  
  
-   Существует два <xref:System.Windows.Controls.InkCanvas> объекты, называемые `inkCanvas1` и `inkCanvas2`.  
  
-   <xref:System.Windows.Controls.Primitives.ButtonBase.Click> Событий подключился к обработчику событий.  
  
 [!code-csharp[StrokeCollectionMethods#21](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#21)]
 [!code-vb[StrokeCollectionMethods#21](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#21)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Ink.StrokeCollection" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StrokeCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StrokeCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Ink.StrokeCollection" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StrokeCollection (System.Collections.Generic.IEnumerable&lt;System.Windows.Ink.Stroke&gt; strokes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Ink.Stroke&gt; strokes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Ink.Stroke})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (strokes As IEnumerable(Of Stroke))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StrokeCollection(System::Collections::Generic::IEnumerable&lt;System::Windows::Ink::Stroke ^&gt; ^ strokes);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="strokes" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Ink.Stroke&gt;" />
      </Parameters>
      <Docs>
        <param name="strokes">Штрихи для добавления в коллекцию <see cref="T:System.Windows.Ink.StrokeCollection" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Ink.StrokeCollection" />, который содержит заданные штрихи.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public StrokeCollection (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.#ctor(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; StrokeCollection(System::IO::Stream ^ stream);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Поток, содержащий данные рукописного текста.</param>
        <summary>Инициализирует коллекцию <see cref="T:System.Windows.Ink.StrokeCollection" /> из заданного потока <see cref="T:System.IO.Stream" /> объектов в формате ISF.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере показано, как сохранять и загружать <xref:System.Windows.Ink.StrokeCollection>. В этом примере предполагается наличие <xref:System.Windows.Controls.InkCanvas> вызывается `inkCanvas1`.  
  
 [!code-csharp[StrokeCollectionMethods#10](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#10)]
 [!code-vb[StrokeCollectionMethods#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#10)]  
[!code-csharp[StrokeCollectionMethods#11](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#11)]
[!code-vb[StrokeCollectionMethods#11](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Windows.Ink.StrokeCollection strokes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Windows.Ink.StrokeCollection strokes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Add(System.Windows.Ink.StrokeCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (strokes As StrokeCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Windows::Ink::StrokeCollection ^ strokes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strokes" Type="System.Windows.Ink.StrokeCollection" />
      </Parameters>
      <Docs>
        <param name="strokes">Параметр <see cref="T:System.Windows.Ink.StrokeCollection" /> для добавления в коллекцию.</param>
        <summary>Добавляет указанные штрихи в коллекцию <see cref="T:System.Windows.Ink.StrokeCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Windows.Ink.StrokeCollection.Add%2A> вызывает событие <xref:System.Windows.Ink.StrokeCollection.StrokesChanged>.  
  
   
  
## Examples  
 Следующий пример демонстрирует скопировать рукописные данные в одном <xref:System.Windows.Controls.InkCanvas> на другой <xref:System.Windows.Controls.InkCanvas>. В этом примере предполагается:  
  
-   Существует два <xref:System.Windows.Controls.InkCanvas> объекты, называемые `inkCanvas1` и `inkCanvas2`.  
  
-   <xref:System.Windows.Controls.Primitives.ButtonBase.Click> Событий подключился к обработчику событий.  
  
 [!code-csharp[StrokeCollectionMethods#21](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#21)]
 [!code-vb[StrokeCollectionMethods#21](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#21)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Объект <see cref="T:System.Windows.Ink.Stroke" /> в <paramref name="strokes" /> уже является элементом коллекции <see cref="T:System.Windows.Ink.StrokeCollection" />.</exception>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="strokes" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AddPropertyData">
      <MemberSignature Language="C#" Value="public void AddPropertyData (Guid propertyDataId, object propertyData);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddPropertyData(valuetype System.Guid propertyDataId, object propertyData) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.AddPropertyData(System.Guid,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddPropertyData (propertyDataId As Guid, propertyData As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddPropertyData(Guid propertyDataId, System::Object ^ propertyData);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDataId" Type="System.Guid" />
        <Parameter Name="propertyData" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="propertyDataId">
          <see cref="T:System.Guid" /> для связывания с пользовательским свойством.</param>
        <param name="propertyData">Значение настраиваемого свойства. Параметр <c>propertyData</c> должен относиться к типу <see cref="T:System.Char" />, <see cref="T:System.Byte" />, <see cref="T:System.Int16" />, <see cref="T:System.UInt16" />, <see cref="T:System.Int32" />, <see cref="T:System.UInt32" />, <see cref="T:System.Int64" />, <see cref="T:System.UInt64" />, <see cref="T:System.Single" />, <see cref="T:System.Double" />, <see cref="T:System.DateTime" />, <see cref="T:System.Boolean" />, <see cref="T:System.String" />, <see cref="T:System.Decimal" /> или быть массивом этих типов данных, кроме типа <see cref="T:System.String" />, который не допускается.</param>
        <summary>Добавляет настраиваемое свойство в коллекцию <see cref="T:System.Windows.Ink.StrokeCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A> Метод позволяет добавлять пользовательские свойства для <xref:System.Windows.Ink.StrokeCollection>. Затем можно включить дополнительные данные с <xref:System.Windows.Ink.StrokeCollection>.  
  
   
  
## Examples  
 Следующий пример демонстрирует добавление и получение данных пользовательского свойства. `AddTimeStamp_Click` Использует метод <xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A> метод, чтобы добавить текущее время в <xref:System.Windows.Ink.StrokeCollection>. `GetTimeStap_Click` Использует метод <xref:System.Windows.Ink.StrokeCollection.GetPropertyData%2A> метод для извлечения меткам <xref:System.Windows.Ink.StrokeCollection>. В этом примере предполагается наличие <xref:System.Windows.Controls.InkCanvas> вызывается `inkCanvas1`.  
  
 [!code-csharp[StrokeCollectionMethods#12](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#12)]
 [!code-vb[StrokeCollectionMethods#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="propertyDataId" /> является пустым <see cref="T:System.Guid" />.  
  
 - или -  
  
 Параметр <paramref name="propertyData" /> не относится ни к одному из разрешенных типов данных, перечисленных в разделе <see langword="Parameters" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="ClearItems">
      <MemberSignature Language="C#" Value="protected override sealed void ClearItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ClearItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.ClearItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub ClearItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ClearItems();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Очищает все штрихи из коллекции <see cref="T:System.Windows.Ink.StrokeCollection" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Clip">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Удаляет из коллекции <see cref="T:System.Windows.Ink.StrokeCollection" /> все штрихи, которые выходят за установленные границы.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Clip">
      <MemberSignature Language="C#" Value="public void Clip (System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt; lassoPoints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clip(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Point&gt; lassoPoints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Clip(System.Collections.Generic.IEnumerable{System.Windows.Point})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clip (lassoPoints As IEnumerable(Of Point))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clip(System::Collections::Generic::IEnumerable&lt;System::Windows::Point&gt; ^ lassoPoints);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lassoPoints" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt;" />
      </Parameters>
      <Docs>
        <param name="lassoPoints">Массив типа <see cref="T:System.Drawing.Point" />, который указывает обрезаемую область.</param>
        <summary>Удаляет из коллекции <see cref="T:System.Windows.Ink.StrokeCollection" /> все штрихи, которые выходят за границы заданного массива <see cref="T:System.Drawing.Point" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection.Clip%2A> Метод подключается начальную и конечную точки в `lassoPoints` Создание лассо.  
  
 <xref:System.Windows.Ink.StrokeCollection.Clip%2A> Вызывает метод <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> событий для каждого <xref:System.Windows.Ink.Stroke> обрезает его.  
  
   
  
## Examples  
 Следующий пример демонстрирует обрезает штрихов рукописного ввода в <xref:System.Windows.Ink.StrokeCollection>. В этом примере предполагается наличие <xref:System.Windows.Controls.InkPresenter> вызывается `presenter`.  
  
 [!code-csharp[StrokeCollectionMethods#13](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#13)]
 [!code-vb[StrokeCollectionMethods#13](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#13)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clip">
      <MemberSignature Language="C#" Value="public void Clip (System.Windows.Rect bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Clip(valuetype System.Windows.Rect bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Clip(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clip (bounds As Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Clip(System::Windows::Rect bounds);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="bounds">Объект <see cref="T:System.Windows.Rect" />, определяющий область для обрезания.</param>
        <summary>Заменяет все штрихи, обрезанные заданным прямоугольником, новыми штрихами, которые не выходят за границы заданного прямоугольника.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Удаляются все штрихи, которые полностью располагаются вне заданного прямоугольника.  
  
   
  
## Examples  
 Следующий пример демонстрирует стереть рукописный фрагмент, который находится за пределами границ <xref:System.Windows.Rect>. В этом примере предполагается наличие <xref:System.Windows.Controls.InkPresenter> вызывается `presenter`.  
  
 [!code-csharp[StrokeCollectionMethods#35](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#35)]
 [!code-vb[StrokeCollectionMethods#35](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#35)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public virtual System.Windows.Ink.StrokeCollection Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Windows.Ink.StrokeCollection Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Clone () As StrokeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Windows::Ink::StrokeCollection ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Копирует коллекцию <see cref="T:System.Windows.Ink.StrokeCollection" />.</summary>
        <returns>Копия объекта <see cref="T:System.Windows.Ink.StrokeCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection.Clone%2A> Метод копирует каждый <xref:System.Windows.Ink.Stroke> в коллекции и новых <xref:System.Windows.Ink.StrokeCollection> ссылается на новый штрихов рукописного ввода.  
  
   
  
## Examples  
 Следующий пример демонстрирует скопировать рукописные данные в одном <xref:System.Windows.Controls.InkCanvas> на другой <xref:System.Windows.Controls.InkCanvas>. В этом примере предполагается:  
  
-   Существует два <xref:System.Windows.Controls.InkCanvas> объекты, называемые `inkCanvas1` и `inkCanvas2.`  
  
-   <xref:System.Windows.Controls.Primitives.ButtonBase.Click> Событий подключился к обработчику событий.  
  
 [!code-csharp[StrokeCollectionMethods#21](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#21)]
 [!code-vb[StrokeCollectionMethods#21](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#21)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContainsPropertyData">
      <MemberSignature Language="C#" Value="public bool ContainsPropertyData (Guid propertyDataId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ContainsPropertyData(valuetype System.Guid propertyDataId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.ContainsPropertyData(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsPropertyData (propertyDataId As Guid) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ContainsPropertyData(Guid propertyDataId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDataId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="propertyDataId">Объект <see cref="T:System.Guid" />, который требуется найти в коллекции <see cref="T:System.Windows.Ink.StrokeCollection" />.</param>
        <summary>Возвращает значение, которое указывает, содержится ли заданный идентификатор настраиваемого свойства в коллекции <see cref="T:System.Windows.Ink.StrokeCollection" />.</summary>
        <returns>
          Значение <see langword="true" />, если заданный идентификатор настраиваемого свойства содержится в коллекции <see cref="T:System.Windows.Ink.StrokeCollection" />; в обратном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере показано, как для проверки пользовательского свойства в <xref:System.Windows.Ink.StrokeCollection>. Если пользовательские свойства, связанные с `timestamp`, в примере, пользовательское свойство и показывает, когда <xref:System.Windows.Ink.StrokeCollection> был сохранен. В этом примере предполагается наличие <xref:System.Windows.Controls.InkCanvas> вызывается `inkCanvas1`.  
  
 [!code-csharp[StrokeCollectionMethods#12](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#12)]
 [!code-vb[StrokeCollectionMethods#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Draw">
      <MemberSignature Language="C#" Value="public void Draw (System.Windows.Media.DrawingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Draw(class System.Windows.Media.DrawingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Draw(System.Windows.Media.DrawingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Draw (context As DrawingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Draw(System::Windows::Media::DrawingContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Windows.Media.DrawingContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <see cref="T:System.Windows.Media.DrawingContext" /> для рисования <see cref="T:System.Windows.Ink.StrokeCollection" />.</param>
        <summary>Рисует штрихи, содержащиеся в коллекции <see cref="T:System.Windows.Ink.StrokeCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере создается пользовательский элемент, в котором отображаются эскиз <xref:System.Windows.Controls.InkCanvas>. Пользовательский элемент хранит ссылки на <xref:System.Windows.Controls.InkCanvas> и перерисовывается при <xref:System.Windows.Controls.InkCanvas.StrokeCollected> событием.  
  
 [!code-csharp[StrokeCollectionMethods#33](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window3.xaml.cs#33)]
 [!code-vb[StrokeCollectionMethods#33](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window3.xaml.vb#33)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Erase">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Удаляет рукописный текст, который находится в границах заданной области.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Erase">
      <MemberSignature Language="C#" Value="public void Erase (System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt; lassoPoints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Erase(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Point&gt; lassoPoints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Erase(System.Collections.Generic.IEnumerable{System.Windows.Point})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Erase (lassoPoints As IEnumerable(Of Point))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Erase(System::Collections::Generic::IEnumerable&lt;System::Windows::Point&gt; ^ lassoPoints);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lassoPoints" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt;" />
      </Parameters>
      <Docs>
        <param name="lassoPoints">Массив типа <see cref="T:System.Drawing.Point" />, который указывает обрезаемую область.</param>
        <summary>Удаляет рукописный текст, который находится в границах заданной области.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection.Erase%2A> Метод подключается начальную и конечную точки в `lassoPoints` Создание лассо.  
  
 <xref:System.Windows.Ink.StrokeCollection> Может содержать новые штрихи после <xref:System.Windows.Ink.StrokeCollection.Erase%2A> вызывается метод. Например, если указанная область является до середины <xref:System.Windows.Ink.Stroke>, метод очистки удаляет, <xref:System.Windows.Ink.Stroke> и создает двумя новыми.  
  
 <xref:System.Windows.Ink.StrokeCollection.Erase%2A> Вызывает метод <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> событий для каждого <xref:System.Windows.Ink.Stroke> она удаляет.  
  
   
  
## Examples  
 Следующий пример демонстрирует стирать штрихи в <xref:System.Windows.Ink.StrokeCollection>. В этом примере предполагается наличие <xref:System.Windows.Controls.InkPresenter> вызывается `presenter`.  
  
 [!code-csharp[StrokeCollectionMethods#2](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#2)]
 [!code-vb[StrokeCollectionMethods#2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Erase">
      <MemberSignature Language="C#" Value="public void Erase (System.Windows.Rect bounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Erase(valuetype System.Windows.Rect bounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Erase(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Erase (bounds As Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Erase(System::Windows::Rect bounds);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="bounds">Параметр <see cref="T:System.Windows.Rect" />, определяющий область для удаления.</param>
        <summary>Заменяет все штрихи, обрезанные заданным прямоугольником, на новые штрихи, которые не входят в границы заданного прямоугольника.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection> Может содержать новые штрихи после <xref:System.Windows.Ink.StrokeCollection.Erase%2A> вызывается метод. Например, если указанная область является до середины <xref:System.Windows.Ink.Stroke>, метод очистки удаляет, <xref:System.Windows.Ink.Stroke> и создает двумя новыми.  Удаляются все штрихи, которые полностью располагаются в заданном прямоугольнике.  
  
 <xref:System.Windows.Ink.StrokeCollection.Erase%2A> Вызывает метод <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> событий для каждого <xref:System.Windows.Ink.Stroke> она удаляет.  
  
   
  
## Examples  
 Следующий пример демонстрирует стереть рукописный ввод в <xref:System.Windows.Rect>. В этом примере предполагается наличие <xref:System.Windows.Controls.InkPresenter> вызывается `presenter`.  
  
 [!code-csharp[StrokeCollectionMethods#34](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#34)]
 [!code-vb[StrokeCollectionMethods#34](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#34)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Erase">
      <MemberSignature Language="C#" Value="public void Erase (System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt; eraserPath, System.Windows.Ink.StylusShape eraserShape);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Erase(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Point&gt; eraserPath, class System.Windows.Ink.StylusShape eraserShape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Erase(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Erase (eraserPath As IEnumerable(Of Point), eraserShape As StylusShape)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Erase(System::Collections::Generic::IEnumerable&lt;System::Windows::Point&gt; ^ eraserPath, System::Windows::Ink::StylusShape ^ eraserShape);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eraserPath" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt;" />
        <Parameter Name="eraserShape" Type="System.Windows.Ink.StylusShape" />
      </Parameters>
      <Docs>
        <param name="eraserPath">Массив типа <see cref="T:System.Windows.Point" />, который указывает путь для стирания.</param>
        <param name="eraserShape">
          <see cref="T:System.Windows.Ink.StylusShape" />, определяющий форму ластика.</param>
        <summary>Заменяет все штрихи, обрезанные в области, которая была создана в результате перемещения заданного объекта <see cref="T:System.Windows.Ink.StylusShape" /> по указанному пути, новыми штрихами, которые не попадают в эту область.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection> Может содержать новые штрихи после <xref:System.Windows.Ink.StrokeCollection.Erase%2A> вызывается метод. Например если `path` пересекается с середины <xref:System.Windows.Ink.Stroke>, метод очистки удаляет, <xref:System.Windows.Ink.Stroke> и создает двумя новыми.  
  
 <xref:System.Windows.Ink.StrokeCollection.Erase%2A> Вызывает метод <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> событий для каждого <xref:System.Windows.Ink.Stroke> она удаляет.  
  
   
  
## Examples  
 Следующий пример демонстрирует стирания рукописного ввода по заданному пути. В этом примере предполагается наличие <xref:System.Windows.Controls.InkPresenter> вызывается `presenter`.  
  
 [!code-csharp[StrokeCollectionMethods#14](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#14)]
 [!code-vb[StrokeCollectionMethods#14](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#14)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBounds">
      <MemberSignature Language="C#" Value="public System.Windows.Rect GetBounds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Rect GetBounds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.GetBounds" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBounds () As Rect" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Rect GetBounds();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Rect</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает границы штрихов в коллекции.</summary>
        <returns>Объект <see cref="T:System.Windows.Rect" />, содержащий границы штрихов в коллекции <see cref="T:System.Windows.Ink.StrokeCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection.GetBounds%2A> Возвращает <xref:System.Windows.Rect> , который принимает вид отображаемого объекта <xref:System.Windows.Ink.Stroke>. Например если <xref:System.Windows.Ink.Stroke> — 10 Отображение независимых пикселов (DIP), <xref:System.Windows.Rect> включает всю ширину <xref:System.Windows.Ink.Stroke>.  
  
   
  
## Examples  
 Следующий пример демонстрирует получение границы <xref:System.Windows.Ink.StrokeCollection> их и отображения в элементе управления. В этом примере предполагается наличие <xref:System.Windows.Controls.InkCanvas> вызывается `inkCanvas1`.  
  
 [!code-csharp[StrokeCollectionMethods#20](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#20)]
 [!code-vb[StrokeCollectionMethods#20](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#20)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIncrementalLassoHitTester">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.IncrementalLassoHitTester GetIncrementalLassoHitTester (int percentageWithinLasso);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.IncrementalLassoHitTester GetIncrementalLassoHitTester(int32 percentageWithinLasso) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.GetIncrementalLassoHitTester(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIncrementalLassoHitTester (percentageWithinLasso As Integer) As IncrementalLassoHitTester" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Ink::IncrementalLassoHitTester ^ GetIncrementalLassoHitTester(int percentageWithinLasso);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.IncrementalLassoHitTester</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="percentageWithinLasso" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="percentageWithinLasso">Минимальный процент каждого из объектов <see cref="T:System.Windows.Ink.Stroke" />, который должен содержаться в лассо для получения положительного результата проверки на касание.</param>
        <summary>Создает объект <see cref="T:System.Windows.Ink.IncrementalLassoHitTester" />, который выполняет проверку касания для коллекции <see cref="T:System.Windows.Ink.StrokeCollection" /> с использованием пути, определенного лассо (произвольной линией).</summary>
        <returns>Объект <see cref="T:System.Windows.Ink.IncrementalLassoHitTester" />, который выполняет проверку на касание для коллекции <see cref="T:System.Windows.Ink.StrokeCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection.GetIncrementalLassoHitTester%2A> Возвращает <xref:System.Windows.Ink.IncrementalLassoHitTester> , считает, что <xref:System.Windows.Ink.Stroke> «попадания» при окружающего лассо пути. Это полезно для реализации функции, такие как возможность выбора с помощью инструмента Лассо штриха. <xref:System.Windows.Controls.InkCanvas> Использует <xref:System.Windows.Ink.IncrementalLassoHitTester> для реализации Лассо Выделение.  
  
   
  
## Examples  
 Следующий пример демонстрирует получение <xref:System.Windows.Ink.IncrementalLassoHitTester> , позволяющий пользователю выбрать штрихов рукописного ввода с помощью инструмента Лассо. Чтобы создать элемент управления, позволяющий пользователю выбрать рукописного ввода, в разделе [как: выберите рукописного ввода из пользовательского элемента управления](~/docs/framework/wpf/advanced/how-to-select-ink-from-a-custom-control.md).  
  
 [!code-csharp[StrokeCollectionMethods#17](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/InkSelector.cs#17)]
 [!code-vb[StrokeCollectionMethods#17](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/InkSelector.vb#17)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetIncrementalStrokeHitTester">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.IncrementalStrokeHitTester GetIncrementalStrokeHitTester (System.Windows.Ink.StylusShape eraserShape);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.IncrementalStrokeHitTester GetIncrementalStrokeHitTester(class System.Windows.Ink.StylusShape eraserShape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester(System.Windows.Ink.StylusShape)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIncrementalStrokeHitTester (eraserShape As StylusShape) As IncrementalStrokeHitTester" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Ink::IncrementalStrokeHitTester ^ GetIncrementalStrokeHitTester(System::Windows::Ink::StylusShape ^ eraserShape);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.IncrementalStrokeHitTester</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eraserShape" Type="System.Windows.Ink.StylusShape" />
      </Parameters>
      <Docs>
        <param name="eraserShape">Объект <see cref="T:System.Windows.Ink.StylusShape" />, определяющий форму кончика стилуса.</param>
        <summary>Создает объект <see cref="T:System.Windows.Ink.IncrementalStrokeHitTester" />, который выполняет проверку касания для коллекции <see cref="T:System.Windows.Ink.StrokeCollection" /> с использованием пути стирания.</summary>
        <returns>Объект <see cref="T:System.Windows.Ink.IncrementalStrokeHitTester" />, который выполняет проверку на касание для коллекции <see cref="T:System.Windows.Ink.StrokeCollection" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection.GetIncrementalStrokeHitTester%2A> Возвращает <xref:System.Windows.Ink.IncrementalStrokeHitTester> , считает, что <xref:System.Windows.Ink.Stroke> «попадания» при путем ластика с ним его. Это полезно для реализации функции, такие как возможность удаления часть <xref:System.Windows.Ink.Stroke>. <xref:System.Windows.Controls.InkCanvas> Использует <xref:System.Windows.Ink.IncrementalStrokeHitTester> при <xref:System.Windows.Controls.InkCanvas.EditingMode%2A> свойству <xref:System.Windows.Controls.InkCanvasEditingMode.EraseByPoint>.  
  
   
  
## Examples  
 Следующий пример демонстрирует получение <xref:System.Windows.Ink.IncrementalStrokeHitTester> , можно использовать для стирания часть <xref:System.Windows.Ink.Stroke>. Чтобы создать элемент управления, позволяющий пользователю стирать рукописный фрагмент, см. [как: О пользовательский элемент управления](~/docs/framework/wpf/advanced/how-to-erase-ink-on-a-custom-control.md).  
  
 [!code-csharp[InkEraser#4](~/samples/snippets/csharp/VS_Snippets_Wpf/InkEraser/CSharp/InkEraser.cs#4)]
 [!code-vb[InkEraser#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/InkEraser/VisualBasic/InkEraser.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyData">
      <MemberSignature Language="C#" Value="public object GetPropertyData (Guid propertyDataId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetPropertyData(valuetype System.Guid propertyDataId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.GetPropertyData(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyData (propertyDataId As Guid) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetPropertyData(Guid propertyDataId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDataId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="propertyDataId">
          <see cref="T:System.Guid" />, связанный с пользовательским свойством, значение которого необходимо получить.</param>
        <summary>Возвращает значение настраиваемого свойства, сопоставленного указанному идентификатору <see cref="T:System.Guid" />.</summary>
        <returns>Значение пользовательского свойства, связанного с указанным <see cref="T:System.Guid" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A> И <xref:System.Windows.Ink.StrokeCollection.GetPropertyData%2A> методы позволяют добавлять пользовательские свойства для <xref:System.Windows.Ink.StrokeCollection>. Затем можно включить дополнительные данные с <xref:System.Windows.Ink.StrokeCollection>.  
  
   
  
## Examples  
 Следующий пример демонстрирует добавление и получение данных пользовательского свойства. `AddTimeStamp_Click` Использует метод <xref:System.Windows.Ink.StrokeCollection.AddPropertyData%2A> метод, чтобы добавить текущее время в <xref:System.Windows.Ink.StrokeCollection>. `GetTimeStap_Click` Использует метод <xref:System.Windows.Ink.StrokeCollection.GetPropertyData%2A> метод для извлечения меткам <xref:System.Windows.Ink.StrokeCollection>. В этом примере предполагается наличие <xref:System.Windows.Controls.InkCanvas> вызывается `inkCanvas1`.  
  
 [!code-csharp[StrokeCollectionMethods#12](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#12)]
 [!code-vb[StrokeCollectionMethods#12](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          Параметр <paramref name="propertyDataId" /> не сопоставлен настраиваемому свойству коллекции <see cref="T:System.Windows.Ink.StrokeCollection" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetPropertyDataIds">
      <MemberSignature Language="C#" Value="public Guid[] GetPropertyDataIds ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Guid[] GetPropertyDataIds() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.GetPropertyDataIds" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPropertyDataIds () As Guid()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;Guid&gt; ^ GetPropertyDataIds();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Guid[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает идентификаторы GUID всех пользовательских свойств, связанных с <see cref="T:System.Windows.Ink.StrokeCollection" />.</summary>
        <returns>Массив типа <see cref="T:System.Guid" />, который содержит идентификаторы настраиваемых свойств.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Ниже приведен пример, как получить идентификаторы пользовательское свойство из <xref:System.Windows.Ink.StrokeCollection>.  
  
 [!code-csharp[StrokeCollectionMethods#27](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#27)]
 [!code-vb[StrokeCollectionMethods#27](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#27)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="HitTest">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает коллекцию штрихов, содержащихся в заданной области.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection HitTest (System.Windows.Point point);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.StrokeCollection HitTest(valuetype System.Windows.Point point) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Point)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Ink::StrokeCollection ^ HitTest(System::Windows::Point point);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
      </Parameters>
      <Docs>
        <param name="point">Точка для проверки нажатия.</param>
        <summary>Возвращает коллекцию штрихов, пересекающих указанную точку.</summary>
        <returns>Коллекция объектов <see cref="T:System.Windows.Ink.Stroke" />, которая пересекает заданную точку.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Следующий пример демонстрирует получение штрихов, которые пересекают указанного <xref:System.Windows.Point>. В этом примере предполагается наличие <xref:System.Windows.Controls.InkPresenter> вызывается `presenter`.  
  
 [!code-csharp[StrokeCollectionMethods#15](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#15)]
 [!code-vb[StrokeCollectionMethods#15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection HitTest (System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt; lassoPoints, int percentageWithinLasso);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.StrokeCollection HitTest(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Point&gt; lassoPoints, int32 percentageWithinLasso) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (lassoPoints As IEnumerable(Of Point), percentageWithinLasso As Integer) As StrokeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Ink::StrokeCollection ^ HitTest(System::Collections::Generic::IEnumerable&lt;System::Windows::Point&gt; ^ lassoPoints, int percentageWithinLasso);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="lassoPoints" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt;" />
        <Parameter Name="percentageWithinLasso" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="lassoPoints">Массив типа <see cref="T:System.Windows.Point" />, который содержит границы области, подлежащей проверки на касание.</param>
        <param name="percentageWithinLasso">Допустимая длина объекта <see cref="T:System.Windows.Ink.Stroke" /> в процентах, которую может содержать параметр <c>lassoPoints</c>.</param>
        <summary>Возвращает коллекцию штрихов, которые по меньшей мере частично попадают в указанную область.</summary>
        <returns>Коллекция <see cref="T:System.Windows.Ink.StrokeCollection" />, штрихи из которой имеют не менее заданной доли в массиве <see cref="T:System.Windows.Point" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Ниже приведен пример, как удалить все штрихи, которые не менее 80% в течение указанного лассо из <xref:System.Windows.Ink.StrokeCollection>. Это полезно в том случае, если пользовательский элемент управления позволяет пользователю выбрать рукописный ввод с помощью лассо. Чтобы создать элемент управления, позволяющий пользователю выбрать рукописный ввод с помощью лассо, в разделе [как: выберите рукописного ввода из пользовательского элемента управления](~/docs/framework/wpf/advanced/how-to-select-ink-from-a-custom-control.md).  
  
 [!code-csharp[StrokeCollectionMethods#16](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#16)]
 [!code-vb[StrokeCollectionMethods#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="lassoPoints" /> имеет значение <see langword="null" />.  
  
 - или -  
  
 Свойство <paramref name="percentageWithinLasso" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          Параметр <paramref name="lassoPoints" /> содержит пустой массив.</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          Параметр <paramref name="percentageWithinLasso" /> имеет значение меньше 0 или больше 100.</exception>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection HitTest (System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt; path, System.Windows.Ink.StylusShape stylusShape);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.StrokeCollection HitTest(class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Windows.Point&gt; path, class System.Windows.Ink.StylusShape stylusShape) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.HitTest(System.Collections.Generic.IEnumerable{System.Windows.Point},System.Windows.Ink.StylusShape)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Ink::StrokeCollection ^ HitTest(System::Collections::Generic::IEnumerable&lt;System::Windows::Point&gt; ^ path, System::Windows::Ink::StylusShape ^ stylusShape);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.Collections.Generic.IEnumerable&lt;System.Windows.Point&gt;" />
        <Parameter Name="stylusShape" Type="System.Windows.Ink.StylusShape" />
      </Parameters>
      <Docs>
        <param name="path">Массив типа <see cref="T:System.Windows.Point" />, который указывает путь для проверки касания.</param>
        <param name="stylusShape">Объект <see cref="T:System.Windows.Ink.StylusShape" />, который определяет форму объекта <c>eraserPath</c>.</param>
        <summary>Возвращает коллекцию штрихов, пересекающих указанный путь.</summary>
        <returns>Коллекция <see cref="T:System.Windows.Ink.StrokeCollection" /> штрихов, пересекающихся с объектом <paramref name="path" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере изменяется цвет всех штрихов, которые пересекают путь, созданный <xref:System.Windows.Point> массива.  В этом примере предполагается наличие <xref:System.Windows.Controls.InkPresenter> вызывается `presenter`.  
  
 [!code-csharp[StrokeCollectionMethods#37](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#37)]
 [!code-vb[StrokeCollectionMethods#37](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#37)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection HitTest (System.Windows.Point point, double diameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.StrokeCollection HitTest(valuetype System.Windows.Point point, float64 diameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Point,System.Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Ink::StrokeCollection ^ HitTest(System::Windows::Point point, double diameter);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="diameter" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="point">
          <see cref="T:System.Windows.Point" />, используемая для проверки на пересечение.</param>
        <param name="diameter">Размер области вокруг объекта <see cref="T:System.Windows.Point" /> для проверки касания.</param>
        <summary>Возвращает коллекцию штрихов, пересекающих указанную область.</summary>
        <returns>Коллекция объектов <see cref="T:System.Windows.Ink.Stroke" />, которая пересекает заданную точку.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Следующий пример демонстрирует получение штрихов, которые пересекают указанного <xref:System.Windows.Point>. В этом примере предполагается наличие <xref:System.Windows.Controls.InkPresenter> вызывается `presenter`.  
  
 [!code-csharp[StrokeCollectionMethods#15](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#15)]
 [!code-vb[StrokeCollectionMethods#15](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#15)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HitTest">
      <MemberSignature Language="C#" Value="public System.Windows.Ink.StrokeCollection HitTest (System.Windows.Rect bounds, int percentageWithinBounds);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Ink.StrokeCollection HitTest(valuetype System.Windows.Rect bounds, int32 percentageWithinBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.HitTest(System.Windows.Rect,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function HitTest (bounds As Rect, percentageWithinBounds As Integer) As StrokeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Ink::StrokeCollection ^ HitTest(System::Windows::Rect bounds, int percentageWithinBounds);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bounds" Type="System.Windows.Rect" />
        <Parameter Name="percentageWithinBounds" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bounds">Объект <see cref="T:System.Windows.Rect" />, определяющий границы для проверки касания.</param>
        <param name="percentageWithinBounds">Минимальная обязательная длина штриха, которая должна попадать в границы для признания результатов проверки положительными.</param>
        <summary>Возвращает коллекцию штрихов, которые по меньшей мере частично попадают в указанный прямоугольник.</summary>
        <returns>Коллекция <see cref="T:System.Windows.Ink.StrokeCollection" />, штрихи из которой имеют не менее заданной доли в объекте <see cref="T:System.Windows.Rect" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Следующий пример удаляет штрихи, по крайней мере на 50% в границах <xref:System.Windows.Rect>. В этом примере предполагается наличие <xref:System.Windows.Controls.InkPresenter> вызывается `presenter`.  
  
 [!code-csharp[StrokeCollectionMethods#36](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#36)]
 [!code-vb[StrokeCollectionMethods#36](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#36)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Windows.Ink.Stroke stroke);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Windows.Ink.Stroke stroke) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.IndexOf(System.Windows.Ink.Stroke)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Windows::Ink::Stroke ^ stroke);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stroke" Type="System.Windows.Ink.Stroke" />
      </Parameters>
      <Docs>
        <param name="stroke">Штрих, позиция которого обязательна.</param>
        <summary>Возвращает индекс заданного объекта <see cref="T:System.Windows.Ink.Stroke" /> в коллекции <see cref="T:System.Windows.Ink.StrokeCollection" />.</summary>
        <returns>Индекс штриха.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection.IndexOf%2A> Метод возвращает -1, если `stroke` не является членом <xref:System.Windows.Ink.StrokeCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InkSerializedFormat">
      <MemberSignature Language="C#" Value="public static readonly string InkSerializedFormat;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string InkSerializedFormat" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Ink.StrokeCollection.InkSerializedFormat" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InkSerializedFormat As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ InkSerializedFormat;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Отражает встроенный формат сохранения данных рукописного текста.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Windows.Ink.StrokeCollection.InkSerializedFormat> поле для указания формата <xref:System.Windows.Ink.StrokeCollection> для передачи данных, например при копировании <xref:System.Windows.Ink.StrokeCollection> в буфер обмена.  
  
   
  
## Examples  
 Следующий пример демонстрирует скопируйте <xref:System.Windows.Ink.StrokeCollection> в буфер обмена. В примере указывается, <xref:System.Windows.Ink.StrokeCollection> — в Ink сериализации формат ISF, чтобы другие программы, такие как Microsoft Office Word может принимать данные, скопированные.  
  
 [!code-csharp[StrokeCollectionMethods#5](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#5)]
 [!code-vb[StrokeCollectionMethods#5](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected override sealed void InsertItem (int index, System.Windows.Ink.Stroke stroke);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InsertItem(int32 index, class System.Windows.Ink.Stroke stroke) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.InsertItem(System.Int32,System.Windows.Ink.Stroke)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InsertItem(int index, System::Windows::Ink::Stroke ^ stroke);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="stroke" Type="System.Windows.Ink.Stroke" />
      </Parameters>
      <Docs>
        <param name="index">Заданный индекс.</param>
        <param name="stroke">Заданный штрих.</param>
        <summary>Вставляет штрих в коллекцию <see cref="T:System.Windows.Ink.StrokeCollection" /> по указанному индексу.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyChanged (System.ComponentModel.PropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyChanged(class System.ComponentModel.PropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyChanged (e As PropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyChanged(System::ComponentModel::PropertyChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.ComponentModel.PropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Данные события.</param>
        <summary>Происходит при изменении любого свойства <see cref="T:System.Windows.Ink.StrokeCollection" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyDataChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPropertyDataChanged (System.Windows.Ink.PropertyDataChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPropertyDataChanged(class System.Windows.Ink.PropertyDataChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.OnPropertyDataChanged(System.Windows.Ink.PropertyDataChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPropertyDataChanged (e As PropertyDataChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPropertyDataChanged(System::Windows::Ink::PropertyDataChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Ink.PropertyDataChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Ink.PropertyDataChangedEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Ink.StrokeCollection.PropertyDataChanged" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnStrokesChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnStrokesChanged (System.Windows.Ink.StrokeCollectionChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnStrokesChanged(class System.Windows.Ink.StrokeCollectionChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.OnStrokesChanged(System.Windows.Ink.StrokeCollectionChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnStrokesChanged (e As StrokeCollectionChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnStrokesChanged(System::Windows::Ink::StrokeCollectionChangedEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Ink.StrokeCollectionChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">Объект <see cref="T:System.Windows.Ink.StrokeCollectionChangedEventArgs" />, содержащий данные события.</param>
        <summary>Вызывает событие <see cref="E:System.Windows.Ink.StrokeCollection.StrokesChanged" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При возникновении события через делегат вызывается обработчик события.  
  
 <xref:System.Windows.Ink.StrokeCollection.OnStrokesChanged%2A> Метод также позволяет производным классам обрабатывать событие, не присоединяя делегат, который является предпочтительная методика обработки событий в производном классе.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>При переопределении метода <see cref="M:System.Windows.Ink.StrokeCollection.OnStrokesChanged(System.Windows.Ink.StrokeCollectionChangedEventArgs)" /> в производном классе нужно убедиться, что для вызова <see cref="M:System.Windows.Ink.StrokeCollection.OnStrokesChanged(System.Windows.Ink.StrokeCollectionChangedEventArgs)" /> метод базового класса, чтобы зарегистрированные делегаты получили событие.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="PropertyDataChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Ink.PropertyDataChangedEventHandler PropertyDataChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Ink.PropertyDataChangedEventHandler PropertyDataChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Ink.StrokeCollection.PropertyDataChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event PropertyDataChanged As PropertyDataChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Ink::PropertyDataChangedEventHandler ^ PropertyDataChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.PropertyDataChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при добавлении настраиваемого свойства в коллекцию <see cref="T:System.Windows.Ink.StrokeCollection" /> или при удалении такого свойства из нее.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере показан способ обработки <xref:System.Windows.Ink.StrokeCollection.PropertyDataChanged> событий. В этом примере предполагается наличие <xref:System.Guid> вызывается `dateTimeGuid` и <xref:System.Windows.Ink.StrokeCollection.PropertyDataChanged> событие подключено к обработчику событий, определенный в этом примере.  
  
 [!code-csharp[StrokeCollectionMethods#29](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#29)]
 [!code-vb[StrokeCollectionMethods#29](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#29)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.Ink.StrokeCollection strokes);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.Ink.StrokeCollection strokes) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Remove(System.Windows.Ink.StrokeCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (strokes As StrokeCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::Ink::StrokeCollection ^ strokes);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strokes" Type="System.Windows.Ink.StrokeCollection" />
      </Parameters>
      <Docs>
        <param name="strokes">Объект <see cref="T:System.Windows.Ink.StrokeCollection" />, который требуется удалить из коллекции.</param>
        <summary>Удаляет заданные штрихи из коллекции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection.Remove%2A> Вызывает метод <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> событий для каждого <xref:System.Windows.Ink.Stroke> удаляется.  
  
   
  
## Examples  
 Ниже приведен пример, как удалить все штрихи, которые не менее 80% в течение указанного лассо из <xref:System.Windows.Ink.StrokeCollection>. Это полезно в том случае, если пользовательский элемент управления позволяет пользователю выбрать рукописный ввод с помощью лассо. Чтобы создать элемент управления, позволяющий пользователю выбрать рукописный ввод с помощью лассо, в разделе [как: выберите рукописного ввода из пользовательского элемента управления](~/docs/framework/wpf/advanced/how-to-select-ink-from-a-custom-control.md).  
  
 [!code-csharp[StrokeCollectionMethods#16](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/StrokeCollectionDemo.cs#16)]
 [!code-vb[StrokeCollectionMethods#16](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/StrokeCollectionDemo.vb#16)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="protected override sealed void RemoveItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RemoveItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.RemoveItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub RemoveItem (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RemoveItem(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">Заданный индекс.</param>
        <summary>Удаляет штрих с заданным индексом из коллекции <see cref="T:System.Windows.Ink.StrokeCollection" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemovePropertyData">
      <MemberSignature Language="C#" Value="public void RemovePropertyData (Guid propertyDataId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RemovePropertyData(valuetype System.Guid propertyDataId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.RemovePropertyData(System.Guid)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemovePropertyData (propertyDataId As Guid)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RemovePropertyData(Guid propertyDataId);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyDataId" Type="System.Guid" />
      </Parameters>
      <Docs>
        <param name="propertyDataId">
          <see cref="T:System.Guid" />, связанный с пользовательским свойством, которое необходимо удалить.</param>
        <summary>Удаляет пользовательское свойство, связанное с указанным <see cref="T:System.Guid" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 Ниже приведен пример, как удалить пользовательское свойство из <xref:System.Windows.Ink.StrokeCollection>. В этом примере предполагается наличие <xref:System.Windows.Controls.InkCanvas> вызывается `inkCanvas1` и <xref:System.Guid> вызывается `timestamp`.  
  
 [!code-csharp[StrokeCollectionMethods#28](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#28)]
 [!code-vb[StrokeCollectionMethods#28](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#28)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Replace">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Заменяет штрихи в коллекции.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public void Replace (System.Windows.Ink.Stroke strokeToReplace, System.Windows.Ink.StrokeCollection strokesToReplaceWith);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Replace(class System.Windows.Ink.Stroke strokeToReplace, class System.Windows.Ink.StrokeCollection strokesToReplaceWith) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.Stroke,System.Windows.Ink.StrokeCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Replace (strokeToReplace As Stroke, strokesToReplaceWith As StrokeCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Replace(System::Windows::Ink::Stroke ^ strokeToReplace, System::Windows::Ink::StrokeCollection ^ strokesToReplaceWith);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strokeToReplace" Type="System.Windows.Ink.Stroke" />
        <Parameter Name="strokesToReplaceWith" Type="System.Windows.Ink.StrokeCollection" />
      </Parameters>
      <Docs>
        <param name="strokeToReplace">Узел <see cref="T:System.Windows.Ink.Stroke" /> для замены.</param>
        <param name="strokesToReplaceWith">Источник <see cref="T:System.Windows.Ink.StrokeCollection" />.</param>
        <summary>Заменяет указанный объект <see cref="T:System.Windows.Ink.Stroke" /> указанной коллекцией <see cref="T:System.Windows.Ink.StrokeCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Метод <xref:System.Windows.Ink.StrokeCollection.Replace%2A> вызывает событие <xref:System.Windows.Ink.StrokeCollection.StrokesChanged>.  
  
   
  
## Examples  
 Ниже приведен пример, как заменить на выбранных штрихов <xref:System.Windows.Controls.InkCanvas> с другим <xref:System.Windows.Ink.StrokeCollection>. В этом примере предполагается наличие <xref:System.Windows.Controls.InkCanvas> вызывается `inkCanvas1`.  
  
 [!code-csharp[StrokeCollectionMethods#7](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#7)]
 [!code-vb[StrokeCollectionMethods#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          Параметр <paramref name="strokesToReplace" /> пуст.  
  
 - или -  
  
 Параметр <paramref name="strokesToReplaceWith" /> пуст.  
  
 - или -  
  
 Объект <see cref="T:System.Windows.Ink.Stroke" /> в коллекции <paramref name="strokesToReplaceWith" /> уже содержится в <paramref name="strokesToReplace" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Replace">
      <MemberSignature Language="C#" Value="public void Replace (System.Windows.Ink.StrokeCollection strokesToReplace, System.Windows.Ink.StrokeCollection strokesToReplaceWith);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Replace(class System.Windows.Ink.StrokeCollection strokesToReplace, class System.Windows.Ink.StrokeCollection strokesToReplaceWith) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Replace(System.Windows.Ink.StrokeCollection,System.Windows.Ink.StrokeCollection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Replace (strokesToReplace As StrokeCollection, strokesToReplaceWith As StrokeCollection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Replace(System::Windows::Ink::StrokeCollection ^ strokesToReplace, System::Windows::Ink::StrokeCollection ^ strokesToReplaceWith);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="strokesToReplace" Type="System.Windows.Ink.StrokeCollection" />
        <Parameter Name="strokesToReplaceWith" Type="System.Windows.Ink.StrokeCollection" />
      </Parameters>
      <Docs>
        <param name="strokesToReplace">Назначение <see cref="T:System.Windows.Ink.StrokeCollection" />.</param>
        <param name="strokesToReplaceWith">Источник <see cref="T:System.Windows.Ink.StrokeCollection" />.</param>
        <summary>Заменяет указанную коллекцию <see cref="T:System.Windows.Ink.StrokeCollection" /> новой коллекцией <see cref="T:System.Windows.Ink.StrokeCollection" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection.Replace%2A> Вызывает метод <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> событий для каждого <xref:System.Windows.Ink.Stroke> заменяется.  
  
   
  
## Examples  
 Ниже приведен пример, как заменить на выбранных штрихов <xref:System.Windows.Controls.InkCanvas> с другим <xref:System.Windows.Ink.StrokeCollection>. В этом примере предполагается наличие <xref:System.Windows.Controls.InkCanvas> вызывается `inkCanvas1`.  
  
 [!code-csharp[StrokeCollectionMethods#7](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#7)]
 [!code-vb[StrokeCollectionMethods#7](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#7)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          Параметр <paramref name="strokesToReplace" /> пуст.  
  
 - или -  
  
 Параметр <paramref name="strokesToReplaceWith" /> пуст.  
  
 - или -  
  
 Объект <see cref="T:System.Windows.Ink.Stroke" /> в коллекции <paramref name="strokesToReplaceWith" /> уже содержится в <paramref name="strokesToReplace." />.  
  
 - или -  
  
 Штрихи в коллекции <paramref name="strokesToReplaceWith" /> не являются последовательными.</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Save">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Сохраняет коллекцию <see cref="T:System.Windows.Ink.StrokeCollection" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public void Save (System.IO.Stream stream);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Save(class System.IO.Stream stream) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Save(System.IO.Stream)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Save(System::IO::Stream ^ stream);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
      </Parameters>
      <Docs>
        <param name="stream">Объект <see cref="T:System.IO.Stream" />, в котором будет сохранен объект <see cref="T:System.Windows.Ink.StrokeCollection" />.</param>
        <summary>Сохраняет коллекцию <see cref="T:System.Windows.Ink.StrokeCollection" /> в заданный поток <see cref="T:System.IO.Stream" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection.Save%2A> Метод сохраняет <xref:System.Windows.Ink.StrokeCollection> как формат сериализации рукописного ввода (ISF).  
  
   
  
## Examples  
 В следующем примере показано, как сохранить <xref:System.Windows.Ink.StrokeCollection> в файл с помощью <xref:System.Windows.Ink.StrokeCollection.Save%28System.IO.Stream%2CSystem.Boolean%29> метод. В этом примере предполагается наличие <xref:System.Windows.Controls.InkCanvas> вызывается `inkCanvas1`.  
  
 [!code-csharp[StrokeCollectionMethods#10](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#10)]
 [!code-vb[StrokeCollectionMethods#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Save">
      <MemberSignature Language="C#" Value="public virtual void Save (System.IO.Stream stream, bool compress);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Save(class System.IO.Stream stream, bool compress) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Save(System.IO.Stream,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Save(System::IO::Stream ^ stream, bool compress);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="stream" Type="System.IO.Stream" />
        <Parameter Name="compress" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="stream">Объект <see cref="T:System.IO.Stream" />, в котором будет сохранен объект <see cref="T:System.Windows.Ink.StrokeCollection" />.</param>
        <param name="compress">
          Значение <see langword="true" /> для сжатия коллекции <see cref="T:System.Windows.Ink.StrokeCollection" />; в обратном случае — значение <see langword="false" />.</param>
        <summary>Сохраняет коллекцию <see cref="T:System.Windows.Ink.StrokeCollection" /> в заданный поток <see cref="T:System.IO.Stream" /> и выполняет ее сжатие, если указан соответствующий параметр.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Ink.StrokeCollection.Save%2A> Метод сохраняет <xref:System.Windows.Ink.StrokeCollection> как формат сериализации рукописного ввода (ISF).  
  
   
  
## Examples  
 В следующем примере показано, как сохранить <xref:System.Windows.Ink.StrokeCollection> в файл с помощью <xref:System.Windows.Ink.StrokeCollection.Save%28System.IO.Stream%2CSystem.Boolean%29> метод. В этом примере предполагается наличие <xref:System.Windows.Controls.InkCanvas> вызывается `inkCanvas1`.  
  
 [!code-csharp[StrokeCollectionMethods#10](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#10)]
 [!code-vb[StrokeCollectionMethods#10](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#10)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="protected override sealed void SetItem (int index, System.Windows.Ink.Stroke stroke);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetItem(int32 index, class System.Windows.Ink.Stroke stroke) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.SetItem(System.Int32,System.Windows.Ink.Stroke)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetItem(int index, System::Windows::Ink::Stroke ^ stroke);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="stroke" Type="System.Windows.Ink.Stroke" />
      </Parameters>
      <Docs>
        <param name="index">Место для замены росчерка.</param>
        <param name="stroke">Росчерк для замены текущего росчерка.</param>
        <summary>Заменяет росчерк по указанному индексу.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StrokesChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.Ink.StrokeCollectionChangedEventHandler StrokesChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Ink.StrokeCollectionChangedEventHandler StrokesChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Ink.StrokeCollection.StrokesChanged" />
      <MemberSignature Language="VB.NET" Value="Public Event StrokesChanged As StrokeCollectionChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Ink::StrokeCollectionChangedEventHandler ^ StrokesChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Ink.StrokeCollectionChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит при изменении объекта <see cref="T:System.Windows.Ink.Stroke" /> в коллекции.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере добавляется текущее время как пользовательское свойство для каждого нового штриха в <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> обработчика событий. Предполагается, что <xref:System.Windows.Ink.StrokeCollection.StrokesChanged> событие подключено к обработчику событий, определенный в этом примере.  
  
 [!code-csharp[DrawingAttributes#4](~/samples/snippets/csharp/VS_Snippets_Wpf/DrawingAttributes/CSharp/Window1.xaml.cs#4)]
 [!code-vb[DrawingAttributes#4](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DrawingAttributes/VisualBasic/Window1.xaml.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Transform">
      <MemberSignature Language="C#" Value="public void Transform (System.Windows.Media.Matrix transformMatrix, bool applyToStylusTip);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Transform(valuetype System.Windows.Media.Matrix transformMatrix, bool applyToStylusTip) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Ink.StrokeCollection.Transform(System.Windows.Media.Matrix,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Transform (transformMatrix As Matrix, applyToStylusTip As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Transform(System::Windows::Media::Matrix transformMatrix, bool applyToStylusTip);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="transformMatrix" Type="System.Windows.Media.Matrix" />
        <Parameter Name="applyToStylusTip" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="transformMatrix">Объект <see cref="T:System.Windows.Media.Matrix" />, который определяет, какое преобразование должно быть выполнено для коллекции <see cref="T:System.Windows.Ink.StrokeCollection" />.</param>
        <param name="applyToStylusTip">
          <see langword="true" /> для применения преобразования к кончику пера; иначе <see langword="false" />.</param>
        <summary>Изменяет каждый из объектов <see cref="P:System.Windows.Ink.Stroke.StylusPoints" />, а также свойство <see cref="P:System.Windows.Ink.DrawingAttributes.StylusTipTransform" /> (необязательно) для каждого штриха в коллекции <see cref="T:System.Windows.Ink.StrokeCollection" /> в соответствии с заданным объектом <see cref="T:System.Windows.Media.Matrix" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда `applyToStylusTip` — `true`, <xref:System.Windows.Ink.StrokeCollection.Transform%2A> метод влияет на форму кончиком пера, а также позиции штрихов. Например, при повороте <xref:System.Windows.Ink.StrokeCollection> 90 градусов штрихи перемещаются вокруг оси, а высота и ширина штрихов получают обратные.  
  
   
  
## Examples  
 Ниже приведен пример, как переместить все штрихи <xref:System.Windows.Controls.InkCanvas>. В этом примере предполагается наличие <xref:System.Windows.Controls.InkCanvas> вызывается `inkCanvas1`.  
  
 [!code-csharp[StrokeCollectionMethods#9](~/samples/snippets/csharp/VS_Snippets_Wpf/StrokeCollectionMethods/CSharp/Window2.xaml.cs#9)]
 [!code-vb[StrokeCollectionMethods#9](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StrokeCollectionMethods/VisualBasic/Window2.xaml.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>