<Type Name="CanExecuteRoutedEventHandler" FullName="System.Windows.Input.CanExecuteRoutedEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="40314ee81839ebd0b1ef25f5f831b2e68f2b0ad5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30646668" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void CanExecuteRoutedEventHandler(object sender, CanExecuteRoutedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CanExecuteRoutedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.CanExecuteRoutedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub CanExecuteRoutedEventHandler(sender As Object, e As CanExecuteRoutedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void CanExecuteRoutedEventHandler(System::Object ^ sender, CanExecuteRoutedEventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Input.CanExecuteRoutedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">Целевой объект команды, вызывающей данный обработчик.</param>
    <param name="e">Данные события.</param>
    <summary>Представляет метод, обрабатывающий событие <see cref="E:System.Windows.Input.CommandBinding.CanExecute" />.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Input.CanExecuteRoutedEventHandler> Определяет, является ли команда, связанная с источником событий может выполнять на целевой объект команды. Если команда имеет источник команды, указывающее целевой объект, то сведения о целевом можно получить с помощью `sender`. Если <xref:System.Windows.Input.ICommandSource.CommandTarget%2A> не задано, элемент с фокусом клавиатуры является целевым, а также может быть получен с помощью `sender`.  Если выяснилось, что данная команда выполняться на целевом сервере, а затем <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A?displayProperty=nameWithType> должно быть равно `true`; в противном случае присвойте ему значение `false`.  
  
 Необходимо полагаться на данные события, чтобы определить команды, источник и целевой объект. Можно ограничить использование обработчика известными возможными вызовами команды, несмотря на то, что это более сложным для выполнения, если структура команды сильно зависит от ее маршрутизации для выполнения той же команды для последующих потенциальных целевых объектов в событии маршрут.  
  
   
  
## Examples  
 В следующем примере показан <xref:System.Windows.Input.CanExecuteRoutedEventHandler> , которая устанавливает <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> для `true`.  
  
 [!code-csharp[commandwithhandler#CommandHandlerCanExecuteHandler](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml.cs#commandhandlercanexecutehandler)]
 [!code-vb[commandwithhandler#CommandHandlerCanExecuteHandler](~/samples/snippets/visualbasic/VS_Snippets_Wpf/commandWithHandler/VisualBasic/Window1.xaml.vb#commandhandlercanexecutehandler)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.ExecutedRoutedEventHandler" />
  </Docs>
</Type>