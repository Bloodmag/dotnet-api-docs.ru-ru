<Type Name="ExecutedRoutedEventHandler" FullName="System.Windows.Input.ExecutedRoutedEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5e7060feb6bd9cc789b91cd51b75c1f71d708b5f" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void ExecutedRoutedEventHandler(object sender, ExecutedRoutedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ExecutedRoutedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ExecutedRoutedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ExecutedRoutedEventHandler(sender As Object, e As ExecutedRoutedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ExecutedRoutedEventHandler(System::Object ^ sender, ExecutedRoutedEventArgs ^ e);" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Input.ExecutedRoutedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">
      <span data-ttu-id="3f6a3-101">Объект, к которому присоединен обработчик событий.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3f6a3-101">The object where the event handler is attached.</span>
      </span>
    </param>
    <param name="e">
      <span data-ttu-id="3f6a3-102">Данные события.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3f6a3-102">The event data.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="3f6a3-103">Представляет метод, обрабатывающий перенаправленные события <see cref="E:System.Windows.Input.CommandBinding.Executed" /> и <see cref="E:System.Windows.Input.CommandBinding.PreviewExecuted" />, а также связанные присоединенные события.</span>
      <span class="sxs-lookup">
        <span data-stu-id="3f6a3-103">Represents the method that will handle the <see cref="E:System.Windows.Input.CommandBinding.Executed" /> and <see cref="E:System.Windows.Input.CommandBinding.PreviewExecuted" /> routed events, as well as related attached events.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="3f6a3-104">Этот делегат содержит логику для реализации <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="3f6a3-104">This delegate contains the implementation logic for a <xref:System.Windows.Input.RoutedCommand>.</span></span>  <span data-ttu-id="3f6a3-105">Отделение логики реализации с помощью команды позволяет команду можно было вызывать из разных источников и типов и централизовать ее логику.</span><span class="sxs-lookup"><span data-stu-id="3f6a3-105">Separating the implementation logic from the command allows the command to be invoked from different sources and types, and enables the centralization of command logic.</span></span>  
  
 <span data-ttu-id="3f6a3-106">Этот делегат используется также для <xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType> и <xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=nameWithType>, что присоединенные события на <xref:System.Windows.Input.CommandManager> класс, реализующий большая часть команд инфраструктуры.</span><span class="sxs-lookup"><span data-stu-id="3f6a3-106">This delegate is also used for <xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType> and <xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=nameWithType>, which are attached events on the <xref:System.Windows.Input.CommandManager> class that implements much of the commanding infrastructure.</span></span> <span data-ttu-id="3f6a3-107">Но наиболее удобным обработчики будут обрабатывать <xref:System.Windows.Input.CommandBinding.Executed> события из определенного <xref:System.Windows.Input.CommandBinding>, а не работают на <xref:System.Windows.Input.CommandManager> уровне.</span><span class="sxs-lookup"><span data-stu-id="3f6a3-107">But most practical handlers will handle the <xref:System.Windows.Input.CommandBinding.Executed> events from a particular <xref:System.Windows.Input.CommandBinding>, rather than work at the <xref:System.Windows.Input.CommandManager> level.</span></span>  
  
 <span data-ttu-id="3f6a3-108">В пределах <xref:System.Windows.Input.ExecutedRoutedEventArgs>, следующие свойства обычно являются интерес при написании обработчика событий для перенаправленных событий, полученный в результате выполнения команды:</span><span class="sxs-lookup"><span data-stu-id="3f6a3-108">Within <xref:System.Windows.Input.ExecutedRoutedEventArgs>, the following properties are generally of interest when you write an event handler for a routed event that results from an executed command:</span></span>  
  
-   <span data-ttu-id="3f6a3-109"><xref:System.Windows.RoutedEventArgs.Source%2A> Возвращает целевой объект, где была выполнена команда.</span><span class="sxs-lookup"><span data-stu-id="3f6a3-109"><xref:System.Windows.RoutedEventArgs.Source%2A> reports the target where the command was executed.</span></span> <span data-ttu-id="3f6a3-110">После выполнения команды можно также представить <xref:System.Windows.RoutedEventArgs.Source%2A> более обычно в глобальных понятий маршрутизируемых событий, как объект, создавший перенаправленного события.</span><span class="sxs-lookup"><span data-stu-id="3f6a3-110">Once the command is executed, you can also think of the <xref:System.Windows.RoutedEventArgs.Source%2A> more generally in routed event terms, as the object that raised a routed event.</span></span>  
  
-   <span data-ttu-id="3f6a3-111"><xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A> отчеты, выполняемые команды.</span><span class="sxs-lookup"><span data-stu-id="3f6a3-111"><xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A> reports the command that executed.</span></span> <span data-ttu-id="3f6a3-112">Это свойство полезно при использовании привязок команд и написании обработчиков, потенциально обрабатывающих несколько команд.</span><span class="sxs-lookup"><span data-stu-id="3f6a3-112">This property is useful if you use command bindings and if you write handlers that potentially handle multiple commands.</span></span>  
  
-   <span data-ttu-id="3f6a3-113"><xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A> сообщает все параметры, относящиеся к команд, переданных по исполняемой команды.</span><span class="sxs-lookup"><span data-stu-id="3f6a3-113"><xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A> reports any command-specific parameters that were passed by the executing command.</span></span> <span data-ttu-id="3f6a3-114">Не все команды используют или ожидают параметров конкретных команд.</span><span class="sxs-lookup"><span data-stu-id="3f6a3-114">Not all commands use or expect command-specific parameters.</span></span>  
  
-   <span data-ttu-id="3f6a3-115"><xref:System.Windows.RoutedEventArgs.Handled%2A> Показывает, было ли уже обработано перенаправленного события, которое является результатом выполнения команды с другим элементом на маршруте.</span><span class="sxs-lookup"><span data-stu-id="3f6a3-115"><xref:System.Windows.RoutedEventArgs.Handled%2A> reports whether the routed event that resulted from the executed command was already handled by a different element along the route.</span></span> <span data-ttu-id="3f6a3-116">Для обработчиков перенаправленных событий, это рекомендуется иметь обработчики, которые смысла работы при обработке события, чтобы задать <xref:System.Windows.RoutedEventArgs.Handled%2A> для `true`.</span><span class="sxs-lookup"><span data-stu-id="3f6a3-116">For routed event handlers, it is a recommended practice to have handlers that do meaningful work when handling the event to set <xref:System.Windows.RoutedEventArgs.Handled%2A> to `true`.</span></span> <span data-ttu-id="3f6a3-117">Это предотвращает обработку события снова его прохождении по маршруту Типичный обработчик для события.</span><span class="sxs-lookup"><span data-stu-id="3f6a3-117">This prevents typical handlers for the event from handling the event again further along the route.</span></span> <span data-ttu-id="3f6a3-118">Дополнительные сведения об обработке маршрутизируемых событий см. в разделе [как Handled и обработка класса](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span><span class="sxs-lookup"><span data-stu-id="3f6a3-118">For more information on handling routed events, see [Marking Routed Events as Handled, and Class Handling](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).</span></span>  
  
 <span data-ttu-id="3f6a3-119">Этот делегат также представляет обработчики для <xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType> и <xref:System.Windows.Input.CommandManager.PreviewExecutedEvent?displayProperty=nameWithType>, что присоединенные события на <xref:System.Windows.Input.CommandManager> класс, реализующий большая часть команд инфраструктуры.</span><span class="sxs-lookup"><span data-stu-id="3f6a3-119">This delegate also represents handlers for <xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType> and <xref:System.Windows.Input.CommandManager.PreviewExecutedEvent?displayProperty=nameWithType>, which are attached events on the <xref:System.Windows.Input.CommandManager> class that implements much of the commanding infrastructure.</span></span> <span data-ttu-id="3f6a3-120">Но наиболее удобным обработчики будут обрабатывать <xref:System.Windows.Input.CommandBinding.Executed> события из определенного <xref:System.Windows.Input.CommandBinding>, а не работают на <xref:System.Windows.Input.CommandManager> уровне.</span><span class="sxs-lookup"><span data-stu-id="3f6a3-120">But most practical handlers will handle the <xref:System.Windows.Input.CommandBinding.Executed> events from a particular <xref:System.Windows.Input.CommandBinding>, rather than work at the <xref:System.Windows.Input.CommandManager> level.</span></span>  
  
 <span data-ttu-id="3f6a3-121">Дополнительные сведения о системе команд см. в разделе [Общие сведения о системе команд](~/docs/framework/wpf/advanced/commanding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="3f6a3-121">For more information on commanding, see [Commanding Overview](~/docs/framework/wpf/advanced/commanding-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="3f6a3-122">В этом примере создается <xref:System.Windows.Input.ExecutedRoutedEventHandler> , задает визуальное свойство на целевом сервере при выполнении команды.</span><span class="sxs-lookup"><span data-stu-id="3f6a3-122">This example creates an <xref:System.Windows.Input.ExecutedRoutedEventHandler> that sets a visual property on the target when the command is executed.</span></span> <span data-ttu-id="3f6a3-123">В примере также содержит <xref:System.Windows.Input.CanExecuteRoutedEventHandler> для той же команде.</span><span class="sxs-lookup"><span data-stu-id="3f6a3-123">The example also includes the <xref:System.Windows.Input.CanExecuteRoutedEventHandler> for the same command.</span></span>  
  
 [!code-csharp[Custom_RoutedCommand#Custom_RoutedCommandHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/Custom_RoutedCommand/CSharp/Window1.xaml.cs#custom_routedcommandhandlers)]
 [!code-vb[Custom_RoutedCommand#Custom_RoutedCommandHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Custom_RoutedCommand/visualbasic/window1.xaml.vb#custom_routedcommandhandlers)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.ExecutedRoutedEventArgs" />
  </Docs>
</Type>