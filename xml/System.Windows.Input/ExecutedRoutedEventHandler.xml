<Type Name="ExecutedRoutedEventHandler" FullName="System.Windows.Input.ExecutedRoutedEventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="53db9f986636f3d10b370f1e9e248937fbe4827b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36507896" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void ExecutedRoutedEventHandler(object sender, ExecutedRoutedEventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed ExecutedRoutedEventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.ExecutedRoutedEventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub ExecutedRoutedEventHandler(sender As Object, e As ExecutedRoutedEventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void ExecutedRoutedEventHandler(System::Object ^ sender, ExecutedRoutedEventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type ExecutedRoutedEventHandler = delegate of obj * ExecutedRoutedEventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.Windows.Input.ExecutedRoutedEventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">Объект, к которому присоединен обработчик событий.</param>
    <param name="e">Данные события.</param>
    <summary>Представляет метод, обрабатывающий перенаправленные события <see cref="E:System.Windows.Input.CommandBinding.Executed" /> и <see cref="E:System.Windows.Input.CommandBinding.PreviewExecuted" />, а также связанные присоединенные события.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот делегат содержит логику для реализации <xref:System.Windows.Input.RoutedCommand>.  Отделение логики реализации с помощью команды позволяет команду можно было вызывать из разных источников и типов и централизовать ее логику.  
  
 Этот делегат используется также для <xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType> и <xref:System.Windows.Input.CommandManager.PreviewExecuted?displayProperty=nameWithType>, что присоединенные события на <xref:System.Windows.Input.CommandManager> класс, реализующий большая часть команд инфраструктуры. Но наиболее удобным обработчики будут обрабатывать <xref:System.Windows.Input.CommandBinding.Executed> события из определенного <xref:System.Windows.Input.CommandBinding>, а не работают на <xref:System.Windows.Input.CommandManager> уровне.  
  
 В пределах <xref:System.Windows.Input.ExecutedRoutedEventArgs>, следующие свойства обычно являются интерес при написании обработчика событий для перенаправленных событий, полученный в результате выполнения команды:  
  
-   <xref:System.Windows.RoutedEventArgs.Source%2A> Возвращает целевой объект, где была выполнена команда. После выполнения команды можно также представить <xref:System.Windows.RoutedEventArgs.Source%2A> более обычно в глобальных понятий маршрутизируемых событий, как объект, создавший перенаправленного события.  
  
-   <xref:System.Windows.Input.ExecutedRoutedEventArgs.Command%2A> отчеты, выполняемые команды. Это свойство полезно при использовании привязок команд и написании обработчиков, потенциально обрабатывающих несколько команд.  
  
-   <xref:System.Windows.Input.ExecutedRoutedEventArgs.Parameter%2A> сообщает все параметры, относящиеся к команд, переданных по исполняемой команды. Не все команды используют или ожидают параметров конкретных команд.  
  
-   <xref:System.Windows.RoutedEventArgs.Handled%2A> Показывает, было ли уже обработано перенаправленного события, которое является результатом выполнения команды с другим элементом на маршруте. Для обработчиков перенаправленных событий, это рекомендуется иметь обработчики, которые смысла работы при обработке события, чтобы задать <xref:System.Windows.RoutedEventArgs.Handled%2A> для `true`. Это предотвращает обработку события снова его прохождении по маршруту Типичный обработчик для события. Дополнительные сведения об обработке маршрутизируемых событий см. в разделе [как Handled и обработка класса](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md).  
  
 Этот делегат также представляет обработчики для <xref:System.Windows.Input.CommandManager.Executed?displayProperty=nameWithType> и <xref:System.Windows.Input.CommandManager.PreviewExecutedEvent?displayProperty=nameWithType>, что присоединенные события на <xref:System.Windows.Input.CommandManager> класс, реализующий большая часть команд инфраструктуры. Но наиболее удобным обработчики будут обрабатывать <xref:System.Windows.Input.CommandBinding.Executed> события из определенного <xref:System.Windows.Input.CommandBinding>, а не работают на <xref:System.Windows.Input.CommandManager> уровне.  
  
 Дополнительные сведения о системе команд см. в разделе [Общие сведения о системе команд](~/docs/framework/wpf/advanced/commanding-overview.md).  
  
   
  
## Examples  
 В этом примере создается <xref:System.Windows.Input.ExecutedRoutedEventHandler> , задает визуальное свойство на целевом сервере при выполнении команды. В примере также содержит <xref:System.Windows.Input.CanExecuteRoutedEventHandler> для той же команде.  
  
 [!code-csharp[Custom_RoutedCommand#Custom_RoutedCommandHandlers](~/samples/snippets/csharp/VS_Snippets_Wpf/Custom_RoutedCommand/CSharp/Window1.xaml.cs#custom_routedcommandhandlers)]
 [!code-vb[Custom_RoutedCommand#Custom_RoutedCommandHandlers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Custom_RoutedCommand/visualbasic/window1.xaml.vb#custom_routedcommandhandlers)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.ExecutedRoutedEventArgs" />
  </Docs>
</Type>