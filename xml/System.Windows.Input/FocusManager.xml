<Type Name="FocusManager" FullName="System.Windows.Input.FocusManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="1ed5f4d178044d3c901f591ddd05762d1fa33d2a" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36507981" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class FocusManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit FocusManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.FocusManager" />
  <TypeSignature Language="VB.NET" Value="Public Class FocusManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class FocusManager abstract sealed" />
  <TypeSignature Language="F#" Value="type FocusManager = class" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c0b2f-101">Предоставляет набор статических методов, вложенных свойств зависимостей и событий для определения и установки областей фокуса и для установки имеющих фокус элементов в данной области.</span>
      <span class="sxs-lookup">
        <span data-stu-id="c0b2f-101">Provides a set of static methods, attached properties, and events for determining and setting focus scopes and for setting the focused element within the scope.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0b2f-102">В Windows Presentation Foundation (WPF) имеет два понятия, касающиеся фокуса: фокус клавиатуры и логический фокус.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-102">In Windows Presentation Foundation (WPF) there are two concepts concerning focus: keyboard focus and logical focus.</span></span>  
  
 <span data-ttu-id="c0b2f-103">Фокус клавиатуры относится к элементу, который получает ввод с клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-103">Keyboard focus pertains to the element which is currently receiving keyboard input.</span></span>  <span data-ttu-id="c0b2f-104">Может существовать только один элемент с фокусом клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-104">There can be only one element with keyboard focus.</span></span>  <span data-ttu-id="c0b2f-105">У этого элемента с фокусом клавиатуры <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> значение `true`.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-105">This element with keyboard focus has <xref:System.Windows.IInputElement.IsKeyboardFocused%2A> set to `true`.</span></span>  <span data-ttu-id="c0b2f-106"><xref:System.Windows.Input.Keyboard.FocusedElement%2A?displayProperty=nameWithType> Возвращает элемент с фокусом клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-106"><xref:System.Windows.Input.Keyboard.FocusedElement%2A?displayProperty=nameWithType> returns the element with keyboard focus.</span></span>  
  
 <span data-ttu-id="c0b2f-107">Логический фокус, относящиеся к элементам <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> в области определенной фокуса.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-107">Logical focus pertains to the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within a specific focus scope.</span></span>  
  
 <span data-ttu-id="c0b2f-108">Областью фокуса является элемент-контейнер, который отслеживает <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> в своей области действия.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-108">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="c0b2f-109">По умолчанию <xref:System.Windows.Window> класс является областью фокуса как <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, и <xref:System.Windows.Controls.ToolBar> классы.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-109">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="c0b2f-110">Элемент, являющийся областью фокуса имеет <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> значение `true`.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-110">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="c0b2f-111">Может существовать несколько элементов с логическим фокусом, но может быть только один элемент с логическим фокусом в пределах одной области фокуса.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-111">There can be multiple elements with logical focus, but there can only be one element with logical focus within a single focus scope.</span></span>  <span data-ttu-id="c0b2f-112">Элемент с логическим фокусом не обязательно имеет фокус клавиатуры, но элемент с фокусом клавиатуры будет иметь логический фокус.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-112">An element with logical focus does not necessarily have keyboard focus, but an element with keyboard focus will have logical focus.</span></span>  <span data-ttu-id="c0b2f-113">Это можно определить области фокуса в области фокуса.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-113">It is possible to define a focus scope within a focus scope.</span></span>  <span data-ttu-id="c0b2f-114">В этом случае может иметь область фокуса родительской и дочерней области фокуса <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-114">In this case, both the parent focus scope and the child focus scope can have a <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="c0b2f-115">В следующем сценарии рассматривается, как изменить фокус клавиатуры и логический фокус в приложении WPF с <xref:System.Windows.Window> с <xref:System.Windows.Controls.TextBox> и <xref:System.Windows.Controls.Menu> содержит <xref:System.Windows.Controls.MenuItem>.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-115">The following scenario illustrates how keyboard focus and logical focus change in a WPF application that has a <xref:System.Windows.Window> with a <xref:System.Windows.Controls.TextBox> and a <xref:System.Windows.Controls.Menu> which has a <xref:System.Windows.Controls.MenuItem>.</span></span>  <span data-ttu-id="c0b2f-116">При изменении фокуса клавиатуры из <xref:System.Windows.Controls.TextBox> для <xref:System.Windows.Controls.MenuItem>, <xref:System.Windows.Controls.TextBox> теряет фокус, но оставляет логический фокус для <xref:System.Windows.Window> сосредоточиться области.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-116">When keyboard focus changes from the <xref:System.Windows.Controls.TextBox> to the <xref:System.Windows.Controls.MenuItem>, the <xref:System.Windows.Controls.TextBox> losses keyboard focus but retains logical focus for the <xref:System.Windows.Window> focus scope.</span></span>  <span data-ttu-id="c0b2f-117"><xref:System.Windows.Controls.MenuItem> Получает фокус и получает логический фокус для <xref:System.Windows.Controls.Menu> сосредоточиться области.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-117">The <xref:System.Windows.Controls.MenuItem> obtains keyboard focus and obtains logical focus for the <xref:System.Windows.Controls.Menu> focus scope.</span></span>  <span data-ttu-id="c0b2f-118">При возвращении фокуса к корню <xref:System.Windows.Window>, элемент в <xref:System.Windows.Window> области фокуса с логическим фокусом будет получать фокус клавиатуры, в данном случае <xref:System.Windows.Controls.TextBox>.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-118">When keyboard focus returns to the root <xref:System.Windows.Window>, the element in <xref:System.Windows.Window> focus scope with logical focus will obtain keyboard focus, which in this case is the <xref:System.Windows.Controls.TextBox>.</span></span>  <span data-ttu-id="c0b2f-119"><xref:System.Windows.Controls.TextBox> Теперь имеет фокус клавиатуры и логический фокус.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-119">The <xref:System.Windows.Controls.TextBox> now has keyboard focus and logical focus.</span></span>  <span data-ttu-id="c0b2f-120"><xref:System.Windows.Controls.MenuItem> Теряет фокус клавиатуры, но сохраняет логический фокус для <xref:System.Windows.Controls.Menu> сосредоточиться области.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-120">The <xref:System.Windows.Controls.MenuItem> loses keyboard focus, but retains logical focus for the <xref:System.Windows.Controls.Menu> focus scope.</span></span>  
  
 <span data-ttu-id="c0b2f-121">Значение по умолчанию <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> на <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, и <xref:System.Windows.Controls.ContextMenu> — `true`.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-121">The default value of <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> on a <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, and <xref:System.Windows.Controls.ContextMenu> is `true`.</span></span>  
  
 <span data-ttu-id="c0b2f-122">Дополнительные сведения о фокус в разделе [фокусе](~/docs/framework/wpf/advanced/input-overview.md) и [фокус Обзор](~/docs/framework/wpf/advanced/focus-overview.md).</span><span class="sxs-lookup"><span data-stu-id="c0b2f-122">For more information on focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md) and the [Focus Overview](~/docs/framework/wpf/advanced/focus-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddGotFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddGotFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddGotFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.AddGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddGotFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddGotFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddGotFocusHandler : System.Windows.DependencyObject * System.Windows.RoutedEventHandler -&gt; unit" Usage="System.Windows.Input.FocusManager.AddGotFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="c0b2f-123">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0b2f-123">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="c0b2f-124">Добавляемый обработчик событий.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0b2f-124">The event handler to be added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0b2f-125">Добавляет обработчик для вложенного события <see cref="E:System.Windows.Input.FocusManager.GotFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0b2f-125">Adds a handler for the <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLostFocusHandler">
      <MemberSignature Language="C#" Value="public static void AddLostFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddLostFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.AddLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddLostFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddLostFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member AddLostFocusHandler : System.Windows.DependencyObject * System.Windows.RoutedEventHandler -&gt; unit" Usage="System.Windows.Input.FocusManager.AddLostFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="c0b2f-126">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0b2f-126">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="c0b2f-127">Добавляемый обработчик событий.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0b2f-127">The event handler to be added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0b2f-128">Добавляет обработчик для вложенного события <see cref="E:System.Windows.Input.FocusManager.LostFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0b2f-128">Adds a handler for the <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusedElement">
      <MemberSignature Language="C#" Value="see GetFocusedElement, and SetFocusedElement" />
      <MemberSignature Language="ILAsm" Value="see GetFocusedElement, and SetFocusedElement" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.FocusManager.FocusedElement" />
      <MemberSignature Language="VB.NET" Value="see GetFocusedElement, and SetFocusedElement" />
      <MemberSignature Language="F#" Value="see GetFocusedElement, and SetFocusedElement" Usage="see GetFocusedElement, and SetFocusedElement" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusedElementProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FocusedElementProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FocusedElementProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.FocusedElementProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FocusedElementProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FocusedElementProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FocusedElementProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.FocusManager.FocusedElementProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0b2f-129">Идентифицирует присоединенное свойство <see cref="P:System.Windows.Input.FocusManager.FocusedElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0b2f-129">Identifies the <see cref="P:System.Windows.Input.FocusManager.FocusedElement" /> attached property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetFocusedElement">
      <MemberSignature Language="C#" Value="public static System.Windows.IInputElement GetFocusedElement (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.IInputElement GetFocusedElement(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.GetFocusedElement(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFocusedElement (element As DependencyObject) As IInputElement" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::IInputElement ^ GetFocusedElement(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetFocusedElement : System.Windows.DependencyObject -&gt; System.Windows.IInputElement" Usage="System.Windows.Input.FocusManager.GetFocusedElement element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.IInputElement</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="c0b2f-130">Элемент с логическим фокусом в заданной области фокуса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0b2f-130">The element with logical focus in the specified focus scope.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0b2f-131">Получает элемент с логическим фокусом в заданной области фокуса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0b2f-131">Gets the element with logical focus within the specified focus scope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0b2f-132">Элемент в заданной области фокуса с логическим фокусом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0b2f-132">The element in the specified focus scope with logical focus.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0b2f-133"><xref:System.Windows.Input.FocusManager.FocusedElement%2A> Является элемент, который имеет логический фокус для области конкретных фокуса.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-133">The <xref:System.Windows.Input.FocusManager.FocusedElement%2A> is the element which has logical focus for a specific focus scope.</span></span>  <span data-ttu-id="c0b2f-134">Этот объект может или не может иметь фокус клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-134">This object may or may not have keyboard focus.</span></span>  <span data-ttu-id="c0b2f-135">Фокус ввода ссылается на элемент, получающий ввод с клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-135">Keyboard focus refers to the element that receives keyboard input.</span></span>  <span data-ttu-id="c0b2f-136">Дополнительные сведения о фокус, фокус клавиатуры и логический фокус см. в разделе [фокусе](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="c0b2f-136">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="c0b2f-137">Если `element` не является областью фокуса, этот метод будет возвращать `null`.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-137">If `element` is not a focus scope, this method will return `null`.</span></span>  
  
 <span data-ttu-id="c0b2f-138">Используйте <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>, чтобы указать элемент с логическим фокусом в заданной области фокуса.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-138">Use <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>, to specify the element with logical focus within a specified focus scope.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0b2f-139">Следующий пример задает элемент с логическим фокусом с помощью <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> и он получает элемент с логическим фокусом с помощью <xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-139">The following example sets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> and it gets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>.</span></span>  
  
 [!code-csharp[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSnippets/CSharp/Window1.xaml.cs#focusgetsetfocusedelement)]
 [!code-vb[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSnippets/visualbasic/window1.xaml.vb#focusgetsetfocusedelement)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c0b2f-140">Свойство <paramref name="element" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0b2f-140">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetFocusScope">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject GetFocusScope (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject GetFocusScope(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.GetFocusScope(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFocusScope (element As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ GetFocusScope(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetFocusScope : System.Windows.DependencyObject -&gt; System.Windows.DependencyObject" Usage="System.Windows.Input.FocusManager.GetFocusScope element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="c0b2f-141">Элемент, для которого требуется получить ближайшую область фокуса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0b2f-141">The element to get the closest focus scope for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0b2f-142">Определяет ближайший наследник заданного элемента, у которого <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> имеет значение <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0b2f-142">Determines the closest ancestor of the specified element that has <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> set to <see langword="true" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0b2f-143">Область фокуса для заданного элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0b2f-143">The focus scope for the specified element.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0b2f-144">Значение по умолчанию <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> на <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu> — `true`.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-144">The default value of <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> on a <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu> is `true`.</span></span>  
  
 <span data-ttu-id="c0b2f-145">Областью фокуса является элемент-контейнер, который отслеживает <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> в своей области действия.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-145">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="c0b2f-146">По умолчанию <xref:System.Windows.Window> класс является областью фокуса как <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, и <xref:System.Windows.Controls.ToolBar> классы.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-146">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="c0b2f-147">Элемент, являющийся областью фокуса имеет <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> значение `true`.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-147">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="c0b2f-148">Дополнительные сведения о фокус, фокус клавиатуры и логический фокус см. в разделе [фокусе](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="c0b2f-148">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="c0b2f-149">Свойство <paramref name="element" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0b2f-149">
              <paramref name="element" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetIsFocusScope">
      <MemberSignature Language="C#" Value="public static bool GetIsFocusScope (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool GetIsFocusScope(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.GetIsFocusScope(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetIsFocusScope (element As DependencyObject) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool GetIsFocusScope(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetIsFocusScope : System.Windows.DependencyObject -&gt; bool" Usage="System.Windows.Input.FocusManager.GetIsFocusScope element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="c0b2f-150">Элемент, из которого необходимо получить значение присоединенного свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0b2f-150">The element from which to read the attached property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0b2f-151">Определяет, является ли заданный <see cref="T:System.Windows.DependencyObject" /> областью фокуса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0b2f-151">Determines whether the specified <see cref="T:System.Windows.DependencyObject" /> is a focus scope.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="c0b2f-152">
            <see langword="true" />, если свойство <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> установлено в <see langword="true" /> для заданного элемента; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0b2f-152">
              <see langword="true" /> if <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> is set to <see langword="true" /> on the specified element; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0b2f-153">Областью фокуса является элемент-контейнер, который отслеживает <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> в своей области действия.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-153">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="c0b2f-154">По умолчанию <xref:System.Windows.Window> класс является областью фокуса как <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, и <xref:System.Windows.Controls.ToolBar> классы.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-154">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="c0b2f-155">Элемент, являющийся областью фокуса имеет <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> значение `true`.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-155">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="c0b2f-156">Дополнительные сведения о фокус, фокус клавиатуры и логический фокус см. в разделе [фокусе](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="c0b2f-156">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocus">
      <MemberSignature Language="C#" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.FocusManager.GotFocus" />
      <MemberSignature Language="VB.NET" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberSignature Language="F#" Value="see AddGotFocusHandler, and RemoveGotFocusHandler" Usage="see AddGotFocusHandler, and RemoveGotFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GotFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent GotFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent GotFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.GotFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly GotFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ GotFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable GotFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.FocusManager.GotFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0b2f-157">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.FocusManager.GotFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0b2f-157">Identifies the <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocusScope">
      <MemberSignature Language="C#" Value="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberSignature Language="ILAsm" Value="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.FocusManager.IsFocusScope" />
      <MemberSignature Language="VB.NET" Value="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberSignature Language="F#" Value="see GetIsFocusScope, and SetIsFocusScope" Usage="see GetIsFocusScope, and SetIsFocusScope" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFocusScopeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty IsFocusScopeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty IsFocusScopeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.IsFocusScopeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly IsFocusScopeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ IsFocusScopeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable IsFocusScopeProperty : System.Windows.DependencyProperty" Usage="System.Windows.Input.FocusManager.IsFocusScopeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0b2f-158">Идентифицирует присоединенное свойство <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0b2f-158">Identifies the <see cref="P:System.Windows.Input.FocusManager.IsFocusScope" /> attached property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0b2f-159">Значение по умолчанию <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> на <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu> — `true`.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-159">The default value of <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> on a <xref:System.Windows.Window>, <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ToolBar>, <xref:System.Windows.Controls.ContextMenu> is `true`.</span></span>  
  
 <span data-ttu-id="c0b2f-160">Областью фокуса является элемент-контейнер, который отслеживает <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> в своей области действия.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-160">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="c0b2f-161">По умолчанию <xref:System.Windows.Window> класс является областью фокуса как <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, и <xref:System.Windows.Controls.ToolBar> классы.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-161">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="c0b2f-162">Элемент, являющийся областью фокуса имеет <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> значение `true`.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-162">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="c0b2f-163">Дополнительные сведения о фокус, фокус клавиатуры и логический фокус см. в разделе [фокусе](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="c0b2f-163">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocus">
      <MemberSignature Language="C#" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberSignature Language="ILAsm" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Input.FocusManager.LostFocus" />
      <MemberSignature Language="VB.NET" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberSignature Language="F#" Value="see AddLostFocusHandler, and RemoveLostFocusHandler" Usage="see AddLostFocusHandler, and RemoveLostFocusHandler" />
      <MemberType>AttachedEvent</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LostFocusEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LostFocusEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LostFocusEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.FocusManager.LostFocusEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LostFocusEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LostFocusEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LostFocusEvent : System.Windows.RoutedEvent" Usage="System.Windows.Input.FocusManager.LostFocusEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c0b2f-164">Идентифицирует присоединенное событие <see cref="E:System.Windows.Input.FocusManager.LostFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0b2f-164">Identifies the <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveGotFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveGotFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveGotFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.RemoveGotFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveGotFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveGotFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveGotFocusHandler : System.Windows.DependencyObject * System.Windows.RoutedEventHandler -&gt; unit" Usage="System.Windows.Input.FocusManager.RemoveGotFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="c0b2f-165">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0b2f-165">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="c0b2f-166">Удаляемый обработчик событий.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0b2f-166">The event handler to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0b2f-167">Удаляет обработчик для вложенного события <see cref="E:System.Windows.Input.FocusManager.GotFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0b2f-167">Removes a handler for the <see cref="E:System.Windows.Input.FocusManager.GotFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveLostFocusHandler">
      <MemberSignature Language="C#" Value="public static void RemoveLostFocusHandler (System.Windows.DependencyObject element, System.Windows.RoutedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveLostFocusHandler(class System.Windows.DependencyObject element, class System.Windows.RoutedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.RemoveLostFocusHandler(System.Windows.DependencyObject,System.Windows.RoutedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveLostFocusHandler (element As DependencyObject, handler As RoutedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveLostFocusHandler(System::Windows::DependencyObject ^ element, System::Windows::RoutedEventHandler ^ handler);" />
      <MemberSignature Language="F#" Value="static member RemoveLostFocusHandler : System.Windows.DependencyObject * System.Windows.RoutedEventHandler -&gt; unit" Usage="System.Windows.Input.FocusManager.RemoveLostFocusHandler (element, handler)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="handler" Type="System.Windows.RoutedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="c0b2f-168">Объект <see cref="T:System.Windows.UIElement" /> или <see cref="T:System.Windows.ContentElement" />, прослушивающий данное событие.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0b2f-168">The <see cref="T:System.Windows.UIElement" /> or <see cref="T:System.Windows.ContentElement" /> that listens to this event.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="c0b2f-169">Удаляемый обработчик событий.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0b2f-169">The event handler to be removed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0b2f-170">Удаляет обработчик для вложенного события <see cref="E:System.Windows.Input.FocusManager.LostFocus" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0b2f-170">Removes a handler for the <see cref="E:System.Windows.Input.FocusManager.LostFocus" /> attached event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFocusedElement">
      <MemberSignature Language="C#" Value="public static void SetFocusedElement (System.Windows.DependencyObject element, System.Windows.IInputElement value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetFocusedElement(class System.Windows.DependencyObject element, class System.Windows.IInputElement value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.SetFocusedElement(System.Windows.DependencyObject,System.Windows.IInputElement)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetFocusedElement (element As DependencyObject, value As IInputElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetFocusedElement(System::Windows::DependencyObject ^ element, System::Windows::IInputElement ^ value);" />
      <MemberSignature Language="F#" Value="static member SetFocusedElement : System.Windows.DependencyObject * System.Windows.IInputElement -&gt; unit" Usage="System.Windows.Input.FocusManager.SetFocusedElement (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.IInputElement" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="c0b2f-171">Область фокуса, в которой следует сделать указанный элемент элементом <see cref="P:System.Windows.Input.FocusManager.FocusedElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0b2f-171">The focus scope in which to make the specified element the <see cref="P:System.Windows.Input.FocusManager.FocusedElement" />.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c0b2f-172">Элемент, которому следует передать логический фокус.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0b2f-172">The element to give logical focus to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0b2f-173">Устанавливает логический фокус на указанный элемент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0b2f-173">Sets logical focus on the specified element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0b2f-174"><xref:System.Windows.Input.FocusManager.FocusedElement%2A> Является элемент, который имеет логический фокус для области конкретных фокуса.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-174">The <xref:System.Windows.Input.FocusManager.FocusedElement%2A> is the element which has logical focus for the specific focus scope.</span></span>  <span data-ttu-id="c0b2f-175">Этот объект может или не может иметь фокус клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-175">This object may or may not have keyboard focus.</span></span>  <span data-ttu-id="c0b2f-176">Фокус ввода ссылается на элемент, получающий ввод с клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-176">Keyboard focus refers to the element that receives keyboard input.</span></span>  <span data-ttu-id="c0b2f-177">Дополнительные сведения о фокус, фокус клавиатуры и логический фокус см. в разделе [фокусе](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="c0b2f-177">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
 <span data-ttu-id="c0b2f-178">Можно задать область фокуса, являющегося предком области фокуса, в которой находится элемент.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-178">It is possible to specify a focus scope that is an ancestor of the focus scope the element is in.</span></span>  <span data-ttu-id="c0b2f-179">Например если <xref:System.Windows.Controls.StackPanel> является областью фокуса и его родительским элементом <xref:System.Windows.Window> является областью фокуса <xref:System.Windows.Controls.TextBox> потомком <xref:System.Windows.Controls.StackPanel> указать <xref:System.Windows.Window> область фокуса, что при вызове <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-179">For example, if a <xref:System.Windows.Controls.StackPanel> is a focus scope and its parent <xref:System.Windows.Window> is a focus scope, a <xref:System.Windows.Controls.TextBox> child of the <xref:System.Windows.Controls.StackPanel> could specify the <xref:System.Windows.Window> as the focus scope when calling <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A>.</span></span>  <span data-ttu-id="c0b2f-180"><xref:System.Windows.Controls.TextBox> Затем <xref:System.Windows.Input.FocusManager.FocusedElement%2A> для обоих <xref:System.Windows.Window> сосредоточиться области и <xref:System.Windows.Controls.StackPanel> сосредоточиться области.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-180">The <xref:System.Windows.Controls.TextBox> is then <xref:System.Windows.Input.FocusManager.FocusedElement%2A> for both the <xref:System.Windows.Window> focus scope and the <xref:System.Windows.Controls.StackPanel> focus scope.</span></span>  
  
 <span data-ttu-id="c0b2f-181"><xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> даст указанный элемент логический фокус в заданной области фокуса и будет предпринята попытка установить фокус клавиатуры элемент.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-181"><xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> will give the specified element logical focus in the specified focus scope and will attempt to give the element keyboard focus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0b2f-182">Следующий пример задает элемент с логическим фокусом с помощью <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> и он получает элемент с логическим фокусом с помощью <xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-182">The following example sets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.SetFocusedElement%2A> and it gets the element with logical focus by using the <xref:System.Windows.Input.FocusManager.GetFocusedElement%2A>.</span></span>  
  
 [!code-csharp[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSnippets/CSharp/Window1.xaml.cs#focusgetsetfocusedelement)]
 [!code-vb[focussnippets#FocusGetSetFocusedElement](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSnippets/visualbasic/window1.xaml.vb#focusgetsetfocusedelement)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetIsFocusScope">
      <MemberSignature Language="C#" Value="public static void SetIsFocusScope (System.Windows.DependencyObject element, bool value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetIsFocusScope(class System.Windows.DependencyObject element, bool value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.FocusManager.SetIsFocusScope(System.Windows.DependencyObject,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetIsFocusScope (element As DependencyObject, value As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetIsFocusScope(System::Windows::DependencyObject ^ element, bool value);" />
      <MemberSignature Language="F#" Value="static member SetIsFocusScope : System.Windows.DependencyObject * bool -&gt; unit" Usage="System.Windows.Input.FocusManager.SetIsFocusScope (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="c0b2f-183">Элемент, который следует сделать областью фокуса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0b2f-183">The element to make a focus scope.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="c0b2f-184">Значение <see langword="true" />, если элемент <c>element</c> является областью фокуса; в противном случае значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0b2f-184">
              <see langword="true" /> if <c>element</c> is a focus scope; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="c0b2f-185">Задает заданный <see cref="T:System.Windows.DependencyObject" /> как область фокуса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="c0b2f-185">Sets the specified <see cref="T:System.Windows.DependencyObject" /> as a focus scope.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c0b2f-186">Областью фокуса является элемент-контейнер, который отслеживает <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> в своей области действия.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-186">A focus scope is a container element that keeps track of the <xref:System.Windows.Input.FocusManager.FocusedElement%2A?displayProperty=nameWithType> within its scope.</span></span>  <span data-ttu-id="c0b2f-187">По умолчанию <xref:System.Windows.Window> класс является областью фокуса как <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, и <xref:System.Windows.Controls.ToolBar> классы.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-187">By default, the <xref:System.Windows.Window> class is a focus scope as are the <xref:System.Windows.Controls.Menu>, <xref:System.Windows.Controls.ContextMenu>, and <xref:System.Windows.Controls.ToolBar> classes.</span></span>  <span data-ttu-id="c0b2f-188">Элемент, являющийся областью фокуса имеет <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> значение `true`.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-188">An element which is a focus scope has <xref:System.Windows.Input.FocusManager.IsFocusScope%2A> set to `true`.</span></span>  
  
 <span data-ttu-id="c0b2f-189">Дополнительные сведения о фокус, фокус клавиатуры и логический фокус см. в разделе [фокусе](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="c0b2f-189">For more information on focus, keyboard focus, and logical focus, see the [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c0b2f-190">В следующем примере делает элемент области фокуса, используя <xref:System.Windows.Input.FocusManager.SetIsFocusScope%2A>.</span><span class="sxs-lookup"><span data-stu-id="c0b2f-190">The follow example makes an element a focus scope by using <xref:System.Windows.Input.FocusManager.SetIsFocusScope%2A>.</span></span>  
  
 [!code-csharp[focussnippets#FocusSetIsFocusScope](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSnippets/CSharp/Window1.xaml.cs#focussetisfocusscope)]
 [!code-vb[focussnippets#FocusSetIsFocusScope](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSnippets/visualbasic/window1.xaml.vb#focussetisfocusscope)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>