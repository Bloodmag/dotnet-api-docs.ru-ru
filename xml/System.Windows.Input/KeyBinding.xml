<Type Name="KeyBinding" FullName="System.Windows.Input.KeyBinding">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f7ffcff8092d477e75345cd0afc6f0d3c265489e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class KeyBinding : System.Windows.Input.InputBinding" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyBinding extends System.Windows.Input.InputBinding" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.KeyBinding" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyBinding&#xA;Inherits InputBinding" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyBinding : System::Windows::Input::InputBinding" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputBinding</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="4ab59-101">Binds a <see cref="T:System.Windows.Input.KeyGesture" /> to a <see cref="T:System.Windows.Input.RoutedCommand" /> (or another  <see cref="T:System.Windows.Input.ICommand" /> implementation).</span>
      <span class="sxs-lookup">
        <span data-stu-id="4ab59-101">Binds a <see cref="T:System.Windows.Input.KeyGesture" /> to a <see cref="T:System.Windows.Input.RoutedCommand" /> (or another  <see cref="T:System.Windows.Input.ICommand" /> implementation).</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ab59-102">Объект <xref:System.Windows.Input.KeyBinding> связывает <xref:System.Windows.Input.KeyGesture> с <xref:System.Windows.Input.ICommand>, такие как <xref:System.Windows.Input.RoutedCommand>.</span><span class="sxs-lookup"><span data-stu-id="4ab59-102">A <xref:System.Windows.Input.KeyBinding> associates a <xref:System.Windows.Input.KeyGesture> with a <xref:System.Windows.Input.ICommand>, such as a <xref:System.Windows.Input.RoutedCommand>.</span></span> <span data-ttu-id="4ab59-103"><xref:System.Windows.Input.RoutedCommand> является основной реализацией <xref:System.Windows.Input.ICommand> интерфейс для [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] заставляя системы.</span><span class="sxs-lookup"><span data-stu-id="4ab59-103"><xref:System.Windows.Input.RoutedCommand> is the primary implementation of the <xref:System.Windows.Input.ICommand> interface for the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] commanding system .</span></span>  <span data-ttu-id="4ab59-104">В общем случае, если <xref:System.Windows.Input.KeyGesture> выполняется вызов команды, несмотря на то, что поведение команды дальнейшей зависит от факторов в конкретных команд например <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> значение.</span><span class="sxs-lookup"><span data-stu-id="4ab59-104">In general, when the <xref:System.Windows.Input.KeyGesture> is executed the command is invoked, although the command behavior is further influenced by command-specific factors such as the <xref:System.Windows.Input.CanExecuteRoutedEventArgs.CanExecute%2A> value.</span></span>  <span data-ttu-id="4ab59-105">Дополнительные сведения о командах см. в разделе [Общие сведения о работе с командами](~/docs/framework/wpf/advanced/commanding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="4ab59-105">For more information on commanding, see the [Commanding Overview](~/docs/framework/wpf/advanced/commanding-overview.md).</span></span>  
  
 <span data-ttu-id="4ab59-106">За исключением сочетания клавиш и клавиши цифровой клавиатуре, является допустимым <xref:System.Windows.Input.KeyGesture> должен содержать ровно один <xref:System.Windows.Input.Key> и один или несколько <xref:System.Windows.Input.ModifierKeys>.</span><span class="sxs-lookup"><span data-stu-id="4ab59-106">With the exception of the function keys and the numeric keypad keys, a valid <xref:System.Windows.Input.KeyGesture> must contain exactly one <xref:System.Windows.Input.Key> and one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  <span data-ttu-id="4ab59-107">Сочетания клавиш и клавиши на цифровой клавиатуре не требуется клавиши-модификатора чтобы быть допустимыми <xref:System.Windows.Input.KeyGesture>.</span><span class="sxs-lookup"><span data-stu-id="4ab59-107">Function keys and numeric keypad keys do not require a modifier key in order to be a valid <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="4ab59-108">Можно указать недопустимое <xref:System.Windows.Input.KeyGesture> и <xref:System.Windows.Input.KeyBinding> с недопустимым связанные жестов, либо с помощью [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] или кода.</span><span class="sxs-lookup"><span data-stu-id="4ab59-108">It is possible to specify an invalid <xref:System.Windows.Input.KeyGesture> and a <xref:System.Windows.Input.KeyBinding> with an invalid associated gesture, either through [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] or code.</span></span> <span data-ttu-id="4ab59-109">Например, отсутствует проверка, предотвращающая создание и привязка <xref:System.Windows.Input.KeyGesture> , содержащий только обнаружен ключ, или только модификаторы но без ключа.</span><span class="sxs-lookup"><span data-stu-id="4ab59-109">For instance, there is no validation that prevents creating and binding a <xref:System.Windows.Input.KeyGesture> that contains only a nonfunction key, or only modifiers but no key.</span></span> <span data-ttu-id="4ab59-110">Такие <xref:System.Windows.Input.KeyBinding> никогда не будет пытаться вызвать ее связанная команда.</span><span class="sxs-lookup"><span data-stu-id="4ab59-110">Such a <xref:System.Windows.Input.KeyBinding> will never attempt to invoke its associated command.</span></span>  
  
 <span data-ttu-id="4ab59-111">При определении <xref:System.Windows.Input.KeyBinding> в [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] существует два способа указать <xref:System.Windows.Input.KeyGesture>.</span><span class="sxs-lookup"><span data-stu-id="4ab59-111">When defining a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] there are two ways to specify the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="4ab59-112">Первый способ для установления <xref:System.Windows.Input.KeyBinding> в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] является определение <xref:System.Windows.Input.KeyBinding.Gesture%2A> атрибут <xref:System.Windows.Input.KeyBinding> элемент, который включает синтаксис для указания разделов и модификаторы в виде одной строки, например «CTRL + P».</span><span class="sxs-lookup"><span data-stu-id="4ab59-112">The first way to establish a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is to define the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute of the <xref:System.Windows.Input.KeyBinding> element, which enables a syntax to specify keys and modifiers as a single string, for example "CTRL+P".</span></span> <span data-ttu-id="4ab59-113">Вторым способом является определение <xref:System.Windows.Input.KeyBinding.Key%2A> атрибута и <xref:System.Windows.Input.KeyBinding.Modifiers%2A> атрибуты <xref:System.Windows.Input.KeyBinding> элемента.</span><span class="sxs-lookup"><span data-stu-id="4ab59-113">The second way is to define the <xref:System.Windows.Input.KeyBinding.Key%2A> attribute and the <xref:System.Windows.Input.KeyBinding.Modifiers%2A> attributes of the <xref:System.Windows.Input.KeyBinding> element.</span></span> <span data-ttu-id="4ab59-114">Оба способа параметр <xref:System.Windows.Input.KeyGesture> эквивалентны и изменять один и тот же базовый объект, но будет конфликтов, если оба используются.</span><span class="sxs-lookup"><span data-stu-id="4ab59-114">Both ways of setting the <xref:System.Windows.Input.KeyGesture> are equivalent and modify the same underlying object, but there will be a conflict if both are used.</span></span>  <span data-ttu-id="4ab59-115">В случае, когда <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>и <xref:System.Windows.Input.KeyBinding.Gesture%2A> атрибуты имеют значение, атрибут которого определен последнего будет использоваться для <xref:System.Windows.Input.KeyGesture>.</span><span class="sxs-lookup"><span data-stu-id="4ab59-115">In the case when the <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>, and the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attributes are all set, the attribute which is defined last will be used for the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="4ab59-116">Потенциально может иметь ситуациях, где например <xref:System.Windows.Input.KeyBinding.Key%2A> набор последнего будет перезаписывать компонент клавиши предыдущего жеста, но оставьте жеста прежним.</span><span class="sxs-lookup"><span data-stu-id="4ab59-116">You can potentially have situations where for example a <xref:System.Windows.Input.KeyBinding.Key%2A> set last will overwrite just the Key component of a preceding Gesture but leave the Gesture's modifiers the same.</span></span> <span data-ttu-id="4ab59-117">В общем случае рекомендуется использовать только <xref:System.Windows.Input.KeyBinding.Gesture%2A> атрибута из [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; это позволит избежать неоднозначности, обеспечивает более строгий синтаксис и наиболее последовательное представление для сериализации.</span><span class="sxs-lookup"><span data-stu-id="4ab59-117">In general, it is recommended that you use only the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute from [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; this will avoid ambiguity, provides the most streamlined syntax, and provides the most straightforward representation for serialization.</span></span>  
  
 <span data-ttu-id="4ab59-118">Объект <xref:System.Windows.Input.KeyBinding> можно определить для определенного объекта или на уровне класса, зарегистрировав <xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A> на <xref:System.Windows.Input.CommandManager> класса.</span><span class="sxs-lookup"><span data-stu-id="4ab59-118">A <xref:System.Windows.Input.KeyBinding> can be defined on a specific object or at the class level by registering a <xref:System.Windows.Input.CommandManager.RegisterClassInputBinding%2A> on the <xref:System.Windows.Input.CommandManager> class.</span></span> <span data-ttu-id="4ab59-119">Наиболее типичный способ определения <xref:System.Windows.Input.KeyBinding> — в шаблоне элемента управления, установка <xref:System.Windows.UIElement.InputBindings%2A> свойство в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] путем объявления одного или нескольких <xref:System.Windows.Input.MouseBinding> или <xref:System.Windows.Input.KeyBinding> элементы.</span><span class="sxs-lookup"><span data-stu-id="4ab59-119">The most typical way to define a <xref:System.Windows.Input.KeyBinding> is within the control template, setting the <xref:System.Windows.UIElement.InputBindings%2A> property in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] by declaring one or more <xref:System.Windows.Input.MouseBinding> or <xref:System.Windows.Input.KeyBinding> elements.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4ab59-120">В следующем примере создается <xref:System.Windows.Input.KeyBinding> и добавляет его в <xref:System.Windows.Input.InputBindingCollection> корневого окна.</span><span class="sxs-lookup"><span data-stu-id="4ab59-120">The following example creates a <xref:System.Windows.Input.KeyBinding> and adds it to the <xref:System.Windows.Input.InputBindingCollection> of the root window.</span></span>  
  
 [!code-xaml[commandWithHandler#CommandHandlerKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlerkeybinding)]  
  
 [!code-csharp[CommandHandlerProcedural#CommandHandlerKeyBindingCodeBehind](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandHandlerProcedural/CSharp/Window1.xaml.cs#commandhandlerkeybindingcodebehind)]
 [!code-vb[CommandHandlerProcedural#CommandHandlerKeyBindingCodeBehind](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandHandlerProcedural/visualbasic/window1.xaml.vb#commandhandlerkeybindingcodebehind)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.KeyBinding" />
    <altmember cref="T:System.Windows.Input.MouseBinding" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.KeyGesture" />
    <altmember cref="T:System.Windows.Input.MouseGesture" />
    <altmember cref="T:System.Windows.Input.InputGesture" />
    <altmember cref="T:System.Windows.Input.InputBinding" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="4ab59-121">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyBinding" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab59-121">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyBinding" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4ab59-122">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyBinding" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab59-122">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyBinding" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding (System.Windows.Input.ICommand command, System.Windows.Input.KeyGesture gesture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, class System.Windows.Input.KeyGesture gesture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.KeyGesture)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (command As ICommand, gesture As KeyGesture)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::KeyGesture ^ gesture);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="gesture" Type="System.Windows.Input.KeyGesture" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="4ab59-123">The command to associate with <c>gesture</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab59-123">The command to associate with <c>gesture</c>.</span>
          </span>
        </param>
        <param name="gesture">
          <span data-ttu-id="4ab59-124">The key combination to associate with <c>command</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab59-124">The key combination to associate with <c>command</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ab59-125">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyBinding" /> class using the specified <see cref="T:System.Windows.Input.ICommand" /> and <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab59-125">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyBinding" /> class using the specified <see cref="T:System.Windows.Input.ICommand" /> and <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="4ab59-126">
            <paramref name="command" /> or <paramref name="gesture" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab59-126">
              <paramref name="command" /> or <paramref name="gesture" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyBinding (System.Windows.Input.ICommand command, System.Windows.Input.Key key, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.Input.ICommand command, valuetype System.Windows.Input.Key key, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.#ctor(System.Windows.Input.ICommand,System.Windows.Input.Key,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyBinding(System::Windows::Input::ICommand ^ command, System::Windows::Input::Key key, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Windows.Input.ICommand" />
        <Parameter Name="key" Type="System.Windows.Input.Key" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="command">
          <span data-ttu-id="4ab59-127">The command to invoke.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab59-127">The command to invoke.</span>
          </span>
        </param>
        <param name="key">
          <span data-ttu-id="4ab59-128">The key to be associated with <c>command</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab59-128">The key to be associated with <c>command</c>.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="4ab59-129">The modifiers to be associated with <c>command</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab59-129">The modifiers to be associated with <c>command</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="4ab59-130">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyBinding" /> class using the specified <see cref="T:System.Windows.Input.ICommand" /> and the specified <see cref="T:System.Windows.Input.Key" /> and <see cref="T:System.Windows.Input.ModifierKeys" /> which will be converted into a <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab59-130">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyBinding" /> class using the specified <see cref="T:System.Windows.Input.ICommand" /> and the specified <see cref="T:System.Windows.Input.Key" /> and <see cref="T:System.Windows.Input.ModifierKeys" /> which will be converted into a <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyBinding.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="4ab59-131">Creates an instance of a <see cref="T:System.Windows.Input.KeyBinding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab59-131">Creates an instance of a <see cref="T:System.Windows.Input.KeyBinding" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="4ab59-132">The new object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab59-132">The new object.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Gesture">
      <MemberSignature Language="C#" Value="public override System.Windows.Input.InputGesture Gesture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputGesture Gesture" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Gesture" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Gesture As InputGesture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::Input::InputGesture ^ Gesture { System::Windows::Input::InputGesture ^ get(); void set(System::Windows::Input::InputGesture ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Input.KeyGestureConverter))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Input.KeyGestureValueSerializer))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputGesture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ab59-133">Gets or sets the gesture associated with this <see cref="T:System.Windows.Input.KeyBinding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab59-133">Gets or sets the gesture associated with this <see cref="T:System.Windows.Input.KeyBinding" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4ab59-134">Порядковый номер ключа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab59-134">The key sequence.</span>
          </span>
          <span data-ttu-id="4ab59-135">Значение по умолчанию — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab59-135">The default value is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ab59-136">За исключением функциональные клавиши и цифровые клавиши <xref:System.Windows.Input.KeyGesture> должен содержать <xref:System.Windows.Input.Key> и один или несколько <xref:System.Windows.Input.ModifierKeys>.</span><span class="sxs-lookup"><span data-stu-id="4ab59-136">With the exception of the function keys and the numeric keypad keys, a <xref:System.Windows.Input.KeyGesture> must contain a <xref:System.Windows.Input.Key> and one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4ab59-137">Следующий пример показывает, как привязать <xref:System.Windows.Input.KeyGesture> для <xref:System.Windows.Input.RoutedCommand> с помощью <xref:System.Windows.Input.KeyBinding> (разметку и код примеры указания различных ключей, но эквивалентны в противном случае).</span><span class="sxs-lookup"><span data-stu-id="4ab59-137">The following example shows how to bind a <xref:System.Windows.Input.KeyGesture> to a <xref:System.Windows.Input.RoutedCommand> using a <xref:System.Windows.Input.KeyBinding> (the markup and code examples specify different keys but are otherwise equivalent).</span></span>  
  
 [!code-xaml[commandWithHandler#CommandHandlerKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlerkeybinding)]  
  
 [!code-csharp[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keybindingwithkeyandmodifiers)]
 [!code-vb[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keybindingwithkeyandmodifiers)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="4ab59-138">the value <paramref name="gesture" /> is being set to is not a <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab59-138">the value <paramref name="gesture" /> is being set to is not a <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Key Key { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.Key Key" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Key" />
      <MemberSignature Language="VB.NET" Value="Public Property Key As Key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Key Key { System::Windows::Input::Key get(); void set(System::Windows::Input::Key value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ab59-139">Gets or sets the <see cref="T:System.Windows.Input.Key" /> of the <see cref="T:System.Windows.Input.KeyGesture" /> associated with this <see cref="T:System.Windows.Input.KeyBinding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab59-139">Gets or sets the <see cref="T:System.Windows.Input.Key" /> of the <see cref="T:System.Windows.Input.KeyGesture" /> associated with this <see cref="T:System.Windows.Input.KeyBinding" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4ab59-140">Ключевой момент <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab59-140">The key part of the <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
          <span data-ttu-id="4ab59-141">Значение по умолчанию — <see cref="F:System.Windows.Input.Key.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab59-141">The default value is <see cref="F:System.Windows.Input.Key.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ab59-142">За исключением функциональные клавиши и цифровые клавиши <xref:System.Windows.Input.KeyGesture> должен содержать <xref:System.Windows.Input.Key> и один или несколько <xref:System.Windows.Input.ModifierKeys>.</span><span class="sxs-lookup"><span data-stu-id="4ab59-142">With the exception of the function keys and the numeric keypad keys, a <xref:System.Windows.Input.KeyGesture> must contain a <xref:System.Windows.Input.Key> and one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  
  
 <span data-ttu-id="4ab59-143">При определении <xref:System.Windows.Input.KeyBinding> в [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] существует два способа указать <xref:System.Windows.Input.KeyGesture>.</span><span class="sxs-lookup"><span data-stu-id="4ab59-143">When defining a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] there are two ways to specify the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="4ab59-144">Первый способ для установления <xref:System.Windows.Input.KeyBinding> в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] является определение <xref:System.Windows.Input.KeyBinding.Gesture%2A> атрибут <xref:System.Windows.Input.KeyBinding> элемент, который включает синтаксис для указания разделов и модификаторы в виде одной строки, например «CTRL + P».</span><span class="sxs-lookup"><span data-stu-id="4ab59-144">The first way to establish a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is to define the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute of the <xref:System.Windows.Input.KeyBinding> element, which enables a syntax to specify keys and modifiers as a single string, for example "CTRL+P".</span></span> <span data-ttu-id="4ab59-145">Вторым способом является определение <xref:System.Windows.Input.KeyBinding.Key%2A> атрибута и <xref:System.Windows.Input.KeyBinding.Modifiers%2A> атрибуты <xref:System.Windows.Input.KeyBinding> элемента.</span><span class="sxs-lookup"><span data-stu-id="4ab59-145">The second way is to define the <xref:System.Windows.Input.KeyBinding.Key%2A> attribute and the <xref:System.Windows.Input.KeyBinding.Modifiers%2A> attributes of the <xref:System.Windows.Input.KeyBinding> element.</span></span> <span data-ttu-id="4ab59-146">Оба способа параметр <xref:System.Windows.Input.KeyGesture> эквивалентны и изменять один и тот же базовый объект, но будет конфликтов, если оба используются.</span><span class="sxs-lookup"><span data-stu-id="4ab59-146">Both ways of setting the <xref:System.Windows.Input.KeyGesture> are equivalent and modify the same underlying object, but there will be a conflict if both are used.</span></span>  <span data-ttu-id="4ab59-147">В случае, когда <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>и <xref:System.Windows.Input.KeyBinding.Gesture%2A> атрибуты имеют значение, атрибут которого определен последнего будет использоваться для <xref:System.Windows.Input.KeyGesture>.</span><span class="sxs-lookup"><span data-stu-id="4ab59-147">In the case when the <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>, and the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attributes are all set, the attribute which is defined last will be used for the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="4ab59-148">Потенциально может иметь ситуациях, где например <xref:System.Windows.Input.KeyBinding.Key%2A> набор последнего будет перезаписывать компонент клавиши предыдущего жеста, но оставьте жеста прежним.</span><span class="sxs-lookup"><span data-stu-id="4ab59-148">You can potentially have situations where for example a <xref:System.Windows.Input.KeyBinding.Key%2A> set last will overwrite just the Key component of a preceding Gesture but leave the Gesture's modifiers the same.</span></span> <span data-ttu-id="4ab59-149">В общем случае рекомендуется использовать только <xref:System.Windows.Input.KeyBinding.Gesture%2A> атрибута из [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; это позволит избежать неоднозначности, обеспечивает более строгий синтаксис и наиболее последовательное представление для сериализации.</span><span class="sxs-lookup"><span data-stu-id="4ab59-149">In general, it is recommended that you use only the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute from [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; this will avoid ambiguity, provides the most streamlined syntax, and provides the most straightforward representation for serialization.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="KeyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty KeyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty KeyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.KeyBinding.KeyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly KeyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ KeyProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ab59-150">Identifies the <see cref="P:System.Windows.Input.KeyBinding.Key" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab59-150">Identifies the <see cref="P:System.Windows.Input.KeyBinding.Key" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ModifierKeys Modifiers { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.ModifierKeys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyBinding.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public Property Modifiers As ModifierKeys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ModifierKeys Modifiers { System::Windows::Input::ModifierKeys get(); void set(System::Windows::Input::ModifierKeys value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ModifierKeys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ab59-151">Gets or sets the <see cref="T:System.Windows.Input.ModifierKeys" /> of the <see cref="T:System.Windows.Input.KeyGesture" /> associated with this <see cref="T:System.Windows.Input.KeyBinding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab59-151">Gets or sets the <see cref="T:System.Windows.Input.ModifierKeys" /> of the <see cref="T:System.Windows.Input.KeyGesture" /> associated with this <see cref="T:System.Windows.Input.KeyBinding" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="4ab59-152">Клавиши-модификаторы из <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab59-152">The modifier keys of the <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
          <span data-ttu-id="4ab59-153">Значение по умолчанию — <see cref="F:System.Windows.Input.ModifierKeys.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab59-153">The default value is <see cref="F:System.Windows.Input.ModifierKeys.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4ab59-154">За исключением функциональные клавиши и цифровые клавиши <xref:System.Windows.Input.KeyGesture> должен содержать <xref:System.Windows.Input.Key> и один или несколько <xref:System.Windows.Input.ModifierKeys>.</span><span class="sxs-lookup"><span data-stu-id="4ab59-154">With the exception of the function keys and the numeric keypad keys, a <xref:System.Windows.Input.KeyGesture> must contain a <xref:System.Windows.Input.Key> and one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  
  
 <span data-ttu-id="4ab59-155">При определении <xref:System.Windows.Input.KeyBinding> в [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] существует два способа указать <xref:System.Windows.Input.KeyGesture>.</span><span class="sxs-lookup"><span data-stu-id="4ab59-155">When defining a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] there are two ways to specify the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="4ab59-156">Первый способ для установления <xref:System.Windows.Input.KeyBinding> в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] является определение <xref:System.Windows.Input.KeyBinding.Gesture%2A> атрибут <xref:System.Windows.Input.KeyBinding> элемент, который включает синтаксис для указания разделов и модификаторы в виде одной строки, например «CTRL + P».</span><span class="sxs-lookup"><span data-stu-id="4ab59-156">The first way to establish a <xref:System.Windows.Input.KeyBinding> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is to define the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute of the <xref:System.Windows.Input.KeyBinding> element, which enables a syntax to specify keys and modifiers as a single string, for example "CTRL+P".</span></span> <span data-ttu-id="4ab59-157">Вторым способом является определение <xref:System.Windows.Input.KeyBinding.Key%2A> атрибута и <xref:System.Windows.Input.KeyBinding.Modifiers%2A> атрибуты <xref:System.Windows.Input.KeyBinding> элемента.</span><span class="sxs-lookup"><span data-stu-id="4ab59-157">The second way is to define the <xref:System.Windows.Input.KeyBinding.Key%2A> attribute and the <xref:System.Windows.Input.KeyBinding.Modifiers%2A> attributes of the <xref:System.Windows.Input.KeyBinding> element.</span></span> <span data-ttu-id="4ab59-158">Оба способа параметр <xref:System.Windows.Input.KeyGesture> эквивалентны и изменять один и тот же базовый объект, но будет конфликтов, если оба используются.</span><span class="sxs-lookup"><span data-stu-id="4ab59-158">Both ways of setting the <xref:System.Windows.Input.KeyGesture> are equivalent and modify the same underlying object, but there will be a conflict if both are used.</span></span>  <span data-ttu-id="4ab59-159">В случае, когда <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>и <xref:System.Windows.Input.KeyBinding.Gesture%2A> атрибуты имеют значение, атрибут которого определен последнего будет использоваться для <xref:System.Windows.Input.KeyGesture>.</span><span class="sxs-lookup"><span data-stu-id="4ab59-159">In the case when the <xref:System.Windows.Input.KeyBinding.Key%2A>, <xref:System.Windows.Input.KeyBinding.Modifiers%2A>, and the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attributes are all set, the attribute which is defined last will be used for the <xref:System.Windows.Input.KeyGesture>.</span></span> <span data-ttu-id="4ab59-160">Потенциально может иметь ситуациях, где например <xref:System.Windows.Input.KeyBinding.Key%2A> набор последнего будет перезаписывать компонент клавиши предыдущего жеста, но оставьте жеста прежним.</span><span class="sxs-lookup"><span data-stu-id="4ab59-160">You can potentially have situations where for example a <xref:System.Windows.Input.KeyBinding.Key%2A> set last will overwrite just the Key component of a preceding Gesture but leave the Gesture's modifiers the same.</span></span> <span data-ttu-id="4ab59-161">В общем случае рекомендуется использовать только <xref:System.Windows.Input.KeyBinding.Gesture%2A> атрибута из [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; это позволит избежать неоднозначности, обеспечивает более строгий синтаксис и наиболее последовательное представление для сериализации.</span><span class="sxs-lookup"><span data-stu-id="4ab59-161">In general, it is recommended that you use only the <xref:System.Windows.Input.KeyBinding.Gesture%2A> attribute from [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]; this will avoid ambiguity, provides the most streamlined syntax, and provides the most straightforward representation for serialization.</span></span>  
  
<a name="xamlAttributeUsage_Modifiers"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="4ab59-162">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="4ab59-162">XAML Attribute Usage</span></span>  
  
```  
<object Modifiers="oneOrMoreModifierKeys"/>  
  
```  
  
<a name="xamlValues_Modifiers"></a>   
## <a name="xaml-values"></a><span data-ttu-id="4ab59-163">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="4ab59-163">XAML Values</span></span>  
 <span data-ttu-id="4ab59-164">*oneOrMoreModifierKeys*</span><span class="sxs-lookup"><span data-stu-id="4ab59-164">*oneOrMoreModifierKeys*</span></span>  
 <span data-ttu-id="4ab59-165">Один или несколько клавиши-модификаторы, определяемый <xref:System.Windows.Input.ModifierKeys> перечисления, разделенных символом «+».</span><span class="sxs-lookup"><span data-stu-id="4ab59-165">One or more modifier keys, defined by the <xref:System.Windows.Input.ModifierKeys> enumeration, delimited with a "+" character.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.KeyGesture" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
      </Docs>
    </Member>
    <Member MemberName="ModifiersProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ModifiersProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ModifiersProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Input.KeyBinding.ModifiersProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ModifiersProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ModifiersProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="4ab59-166">Identifies the <see cref="P:System.Windows.Input.KeyBinding.Modifiers" /> dependency property.</span>
          <span class="sxs-lookup">
            <span data-stu-id="4ab59-166">Identifies the <see cref="P:System.Windows.Input.KeyBinding.Modifiers" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>