<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="KeyEventArgs.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d9cce80d3cf05fd16f500c09e4d925d670abf183.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d9cce80d3cf05fd16f500c09e4d925d670abf183</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Input.KeyEventArgs">
          <source>Provides data for the <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.KeyUp" /&gt;</ph> and <ph id="ph2">&lt;see cref="E:System.Windows.UIElement.KeyDown" /&gt;</ph> routed events, as well as related attached and Preview events.</source>
          <target state="translated">Предоставляет данные для перенаправленных событий <ph id="ph1">&lt;see cref="E:System.Windows.UIElement.KeyUp" /&gt;</ph> и <ph id="ph2">&lt;see cref="E:System.Windows.UIElement.KeyDown" /&gt;</ph>, а также связанных присоединенных событий и событий предварительного просмотра.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyEventArgs">
          <source>This event data class is used with the following attached events:</source>
          <target state="translated">Данный класс данных события используется со следующими вложенными событиями:</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyEventArgs">
          <source>This event data class is also used with the following routed events on base elements.</source>
          <target state="translated">Данный класс данных события также используется со следующей перенаправленные события базовых элементов.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyEventArgs">
          <source>These routed events forward the previously listed attached events to make them more accessible to the general element model in <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>.</source>
          <target state="translated">Эти перенаправленные события пересылать перечисленных выше присоединенных событий, чтобы сделать их более доступными для общего элемента модели в <ph id="ph1">[!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyEventArgs">
          <source>The attached events and the base element routed events share their event data, and the bubbling and tunneling versions of the routed events also share event data.</source>
          <target state="translated">Вложенные события и перенаправленные события базового элемента доступ к своим и восходящей и туннелирования версии перенаправленных событий также совместно использовать данные события.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyEventArgs">
          <source>This can affect the handled characteristics of the event as it travels the event route.</source>
          <target state="translated">Это может повлиять на обрабатываемых характеристиках события при перемещении по маршруту события.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyEventArgs">
          <source>For details, see <bpt id="p1">[</bpt>Input Overview<ept id="p1">](~/docs/framework/wpf/advanced/input-overview.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>фокусе<ept id="p1">](~/docs/framework/wpf/advanced/input-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyEventArgs">
          <source>A key can be in both the up and toggled states or the down and toggled states.</source>
          <target state="translated">Ключ может находиться в состояния вверх и переключаемых или в нажатом и включенном состоянии одновременно.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyEventArgs">
          <source>For this reason, determining whether a key is up or down is not as simple as checking the <ph id="ph1">&lt;xref:System.Windows.Input.KeyEventArgs.KeyStates%2A&gt;</ph> value as a numeric value.</source>
          <target state="translated">Для этого необходимо определить, является ли ключ вверх или вниз не сложнее, чем проверка <ph id="ph1">&lt;xref:System.Windows.Input.KeyEventArgs.KeyStates%2A&gt;</ph> значение в виде числового значения.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyEventArgs">
          <source>Instead, you should check the value by treating it as a flag enumeration.</source>
          <target state="translated">Вместо этого следует проверить значение, рассматривая их как перечисление флагов.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyEventArgs">
          <source>Use an <ph id="ph1">`AND`</ph> comparison of the first bit.</source>
          <target state="translated">Используйте <ph id="ph1">`AND`</ph> сравнения первого бита.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Input.KeyEventArgs">
          <source>Alternatively, use the helper properties <ph id="ph1">&lt;xref:System.Windows.Input.KeyEventArgs.IsUp%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Input.KeyEventArgs.IsDown%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Input.KeyEventArgs.IsToggled%2A&gt;</ph> to determine whether a given key is up, down, or toggled.</source>
          <target state="translated">Кроме того, используйте вспомогательные свойства <ph id="ph1">&lt;xref:System.Windows.Input.KeyEventArgs.IsUp%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Input.KeyEventArgs.IsDown%2A&gt;</ph>, и <ph id="ph3">&lt;xref:System.Windows.Input.KeyEventArgs.IsToggled%2A&gt;</ph> для определения ли заданного ключа является вверх, вниз или выключатель.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyEventArgs.#ctor(System.Windows.Input.KeyboardDevice,System.Windows.PresentationSource,System.Int32,System.Windows.Input.Key)">
          <source>The logical keyboard device associated with this event.</source>
          <target state="translated">Логическое устройство клавиатуры, связанное с этим событием.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyEventArgs.#ctor(System.Windows.Input.KeyboardDevice,System.Windows.PresentationSource,System.Int32,System.Windows.Input.Key)">
          <source>The input source.</source>
          <target state="translated">Источник ввода.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyEventArgs.#ctor(System.Windows.Input.KeyboardDevice,System.Windows.PresentationSource,System.Int32,System.Windows.Input.Key)">
          <source>The time when the input occurred.</source>
          <target state="translated">Время, когда был выполнен ввод.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyEventArgs.#ctor(System.Windows.Input.KeyboardDevice,System.Windows.PresentationSource,System.Int32,System.Windows.Input.Key)">
          <source>The key referenced by the event.</source>
          <target state="translated">Клавиша, на которую ссылается данное событие.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyEventArgs.#ctor(System.Windows.Input.KeyboardDevice,System.Windows.PresentationSource,System.Int32,System.Windows.Input.Key)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyEventArgs" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Windows.Input.KeyEventArgs" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.KeyEventArgs.DeadCharProcessedKey">
          <source>Gets the key that is part of dead key composition to create a single combined character.</source>
          <target state="translated">Получает клавишу, которая является частью объединения с мертвой клавишей, для создания одного объединенного символа.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyEventArgs.DeadCharProcessedKey">
          <source>The key that is part of dead key composition to create a single combined character.</source>
          <target state="translated">Клавиша, которая является частью объединения с мертвой клавишей, для создания одного объединенного символа.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyEventArgs.DeadCharProcessedKey">
          <source>A dead key, when pressed, produces no visible character but indicates that the key is to be combined with the character produced by the next letter key pressed.</source>
          <target state="translated">Неисправная клавиша, при нажатии, выводятся знака не видны, но указывает, что ключ для объединения с символов, полученных при нажатой клавише Далее буквы.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyEventArgs.DeadCharProcessedKey">
          <source>If <ph id="ph1">&lt;xref:System.Windows.Input.KeyEventArgs.Key%2A&gt;</ph> returns <ph id="ph2">&lt;xref:System.Windows.Input.Key.DeadCharProcessed?displayProperty=nameWithType&gt;</ph>, you can use this property to get the actual key that was entered.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Windows.Input.KeyEventArgs.Key%2A&gt;</ph> возвращает <ph id="ph2">&lt;xref:System.Windows.Input.Key.DeadCharProcessed?displayProperty=nameWithType&gt;</ph>, это свойство можно использовать для получения фактический ключ, который был введен.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.KeyEventArgs.ImeProcessedKey">
          <source>Gets the keyboard key referenced by the event, if the key will be processed by an <ph id="ph1">[!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)]</ph>.</source>
          <target state="translated">Получает клавишу клавиатуры, на которою ссылается событие, если эта клавиша будет обрабатываться <ph id="ph1">[!INCLUDE[TLA#tla_ime](~/includes/tlasharptla-ime-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyEventArgs.ImeProcessedKey">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Input.Key" /&gt;</ph> referenced by the event.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Windows.Input.Key" /&gt;</ph>, на который ссылается данное событие.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.KeyEventArgs.InputSource">
          <source>Gets the input source that provided this input.</source>
          <target state="translated">Получает источник ввода, предоставившего данный ввод.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyEventArgs.InputSource">
          <source>The input source.</source>
          <target state="translated">Источник ввода.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyEventArgs.InputSource">
          <source>for getting the input source.</source>
          <target state="translated">Для получения источника входных данных.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyEventArgs.InputSource">
          <source>Associated enumerations: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></source>
          <target state="translated">Связанные перечисления: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.PermissionState.Unrestricted" /&gt;</ph></target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
          <source>The generic handler to call in a type-specific way.</source>
          <target state="translated">Универсальный обработчик, способ вызова которого зависит от конкретного типа.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
          <source>The target to call the handler on.</source>
          <target state="translated">Объект, для которого необходимо вызвать данный обработчик.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Input.KeyEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
          <source>Invokes event handlers in a type-specific way, which can increase event system efficiency.</source>
          <target state="translated">Вызывает обработчики событий способом, зависящим от типа, что может повысить эффективность системы событий.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.KeyEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
          <source>This implementation casts the generic handler as a <ph id="ph1">&lt;xref:System.Windows.Input.KeyEventHandler&gt;</ph> and then invokes it.</source>
          <target state="translated">Эта реализация приводит Универсальный обработчик как <ph id="ph1">&lt;xref:System.Windows.Input.KeyEventHandler&gt;</ph> и затем вызывает его.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Input.KeyEventArgs.InvokeEventHandler(System.Delegate,System.Object)">
          <source>For details on this implementation pattern and the reasons for it, see <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A&gt;</ph> and <bpt id="p1">[</bpt>Routed Events Overview<ept id="p1">](~/docs/framework/wpf/advanced/routed-events-overview.md)</ept>.</source>
          <target state="translated">Сведения о шаблоне реализации и его разделе <ph id="ph1">&lt;xref:System.Windows.RoutedEventArgs.InvokeEventHandler%2A&gt;</ph> и <bpt id="p1">[</bpt>направлено Общие сведения о событиях<ept id="p1">](~/docs/framework/wpf/advanced/routed-events-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.KeyEventArgs.IsDown">
          <source>Gets a value that indicates whether the key referenced by the event is in the down state.</source>
          <target state="translated">Получает значение, которое показывает, нажата ли клавиша, на которую ссылается данное событие.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyEventArgs.IsDown">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key is down; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> если данная клавиша нажата; в противном случае — <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyEventArgs.IsDown">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard&gt;</ph> class also provides information about the state of the keys on the keyboard.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.Keyboard&gt;</ph> Класс также предоставляет сведения о состоянии клавиши на клавиатуре.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyEventArgs.IsDown">
          <source>For instance, the <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.IsKeyDown%2A&gt;</ph> method returns whether a specified key is down.</source>
          <target state="translated">Например <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.IsKeyDown%2A&gt;</ph> метод возвращает, является ли указанный ключ не работает.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyEventArgs.IsDown">
          <source>The following example checks whether the key associated with an instance of <ph id="ph1">&lt;xref:System.Windows.Input.KeyEventArgs&gt;</ph> is down by obtaining the state of the <ph id="ph2">&lt;xref:System.Windows.Input.KeyEventArgs.IsDown%2A&gt;</ph> property.</source>
          <target state="translated">В следующем примере проверяется, является ли ключ, связанный с экземпляром <ph id="ph1">&lt;xref:System.Windows.Input.KeyEventArgs&gt;</ph> не работает, получая состояние <ph id="ph2">&lt;xref:System.Windows.Input.KeyEventArgs.IsDown%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.KeyEventArgs.IsRepeat">
          <source>Gets a value that indicates whether the keyboard key referenced by the event is a repeated key.</source>
          <target state="translated">Получает значение, которое указывает, нажата ли повторно клавиша клавиатуры, на которую ссылается данное событие.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyEventArgs.IsRepeat">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key is repeated; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> если данная клавиша нажата повторно; в противном случае — <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyEventArgs.IsRepeat">
          <source>There is no default value.</source>
          <target state="translated">Значение по умолчанию отсутствует.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyEventArgs.IsRepeat">
          <source>The following example checks whether the key associated with an instance of <ph id="ph1">&lt;xref:System.Windows.Input.KeyEventArgs&gt;</ph> is a repeated key by obtaining the state of the <ph id="ph2">&lt;xref:System.Windows.Input.KeyEventArgs.IsRepeat%2A&gt;</ph> property.</source>
          <target state="translated">В следующем примере проверяется, является ли ключ, связанный с экземпляром <ph id="ph1">&lt;xref:System.Windows.Input.KeyEventArgs&gt;</ph> — это ключ, повторяющиеся, получая состояние <ph id="ph2">&lt;xref:System.Windows.Input.KeyEventArgs.IsRepeat%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.KeyEventArgs.IsToggled">
          <source>Gets a value that indicates whether the key referenced by the event is in the toggled state.</source>
          <target state="translated">Получает значение, которое показывает, включена ли клавиша, на которую ссылается данное событие.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyEventArgs.IsToggled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key is toggled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> если данная клавиша включена; в противном случае — <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyEventArgs.IsToggled">
          <source>There is no default value.</source>
          <target state="translated">Значение по умолчанию отсутствует.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyEventArgs.IsToggled">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard&gt;</ph> class also provides information about the state of the keys on the keyboard.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.Keyboard&gt;</ph> Класс также предоставляет сведения о состоянии клавиши на клавиатуре.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyEventArgs.IsToggled">
          <source>For instance, the <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.IsKeyToggled%2A&gt;</ph> method returns whether a specified key is toggled.</source>
          <target state="translated">Например <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.IsKeyToggled%2A&gt;</ph> метод возвращает, является ли указанная клавиша.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyEventArgs.IsToggled">
          <source>The following example checks whether the key associated with an instance of <ph id="ph1">&lt;xref:System.Windows.Input.KeyEventArgs&gt;</ph> is toggled by obtaining the state of the <ph id="ph2">&lt;xref:System.Windows.Input.KeyEventArgs.IsToggled%2A&gt;</ph> property.</source>
          <target state="translated">В следующем примере проверяется, является ли ключ, связанный с экземпляром <ph id="ph1">&lt;xref:System.Windows.Input.KeyEventArgs&gt;</ph> переключается с Получение состояния <ph id="ph2">&lt;xref:System.Windows.Input.KeyEventArgs.IsToggled%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.KeyEventArgs.IsUp">
          <source>Gets a value that indicates whether the key referenced by the event is in the up state.</source>
          <target state="translated">Получает значение, которое показывает, является ли ненажатой клавиша, на которую ссылается данное событие.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyEventArgs.IsUp">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the key is up; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, если данная клавиша не нажата; в противном случае — <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyEventArgs.IsUp">
          <source>There is no default value.</source>
          <target state="translated">Значение по умолчанию отсутствует.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyEventArgs.IsUp">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard&gt;</ph> class also provides information about the state of the keys on the keyboard.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Input.Keyboard&gt;</ph> Класс также предоставляет сведения о состоянии клавиши на клавиатуре.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyEventArgs.IsUp">
          <source>For instance, the <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.IsKeyUp%2A&gt;</ph> method returns whether a specified is up.</source>
          <target state="translated">Например <ph id="ph1">&lt;xref:System.Windows.Input.Keyboard.IsKeyUp%2A&gt;</ph> метод возвращает, находится ли указанный вверх.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyEventArgs.IsUp">
          <source>The following example checks whether the key associated with an instance of <ph id="ph1">&lt;xref:System.Windows.Input.KeyEventArgs&gt;</ph> is up by obtaining the state of the <ph id="ph2">&lt;xref:System.Windows.Input.KeyEventArgs.IsUp%2A&gt;</ph> property.</source>
          <target state="translated">В следующем примере проверяется, является ли ключ, связанный с экземпляром <ph id="ph1">&lt;xref:System.Windows.Input.KeyEventArgs&gt;</ph> работает путем получения состояния <ph id="ph2">&lt;xref:System.Windows.Input.KeyEventArgs.IsUp%2A&gt;</ph> свойство.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.KeyEventArgs.Key">
          <source>Gets the keyboard key associated with the event.</source>
          <target state="translated">Получает клавишу клавиатуры, связанную с данным событием.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyEventArgs.Key">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Input.Key" /&gt;</ph> referenced by the event.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Windows.Input.Key" /&gt;</ph>, на который ссылается данное событие.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyEventArgs.Key">
          <source>The following example creates a <ph id="ph1">&lt;xref:System.Windows.Input.KeyEventHandler&gt;</ph> and checks whether the key associated with the <ph id="ph2">&lt;xref:System.Windows.Input.KeyEventArgs&gt;</ph> is the <ph id="ph3">&lt;xref:System.Windows.Input.Key.Return&gt;</ph> key.</source>
          <target state="translated">В следующем примере создается <ph id="ph1">&lt;xref:System.Windows.Input.KeyEventHandler&gt;</ph> и проверяет, является ли ключ, связанный с <ph id="ph2">&lt;xref:System.Windows.Input.KeyEventArgs&gt;</ph> — <ph id="ph3">&lt;xref:System.Windows.Input.Key.Return&gt;</ph> ключа.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.KeyEventArgs.KeyStates">
          <source>Gets the state of the keyboard key associated with this event.</source>
          <target state="translated">Получает состояние клавиши клавиатуры, связанной с данным событием.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyEventArgs.KeyStates">
          <source>The state of the key.</source>
          <target state="translated">Состояние данной клавиши.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyEventArgs.KeyStates">
          <source>A key can be in both the up and toggled states or the down and toggled states.</source>
          <target state="translated">Ключ может находиться в состояния вверх и переключаемых или в нажатом и включенном состоянии одновременно.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyEventArgs.KeyStates">
          <source>For this reason, determining whether a key is up or down is not as simple as checking the <ph id="ph1">&lt;xref:System.Windows.Input.KeyEventArgs.KeyStates%2A&gt;</ph> value as a numeric value.</source>
          <target state="translated">Для этого необходимо определить, является ли ключ вверх или вниз не сложнее, чем проверка <ph id="ph1">&lt;xref:System.Windows.Input.KeyEventArgs.KeyStates%2A&gt;</ph> значение в виде числового значения.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyEventArgs.KeyStates">
          <source>Instead, you should check the value by treating it as a flag enumeration.</source>
          <target state="translated">Вместо этого следует проверить значение, рассматривая их как перечисление флагов.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyEventArgs.KeyStates">
          <source>Use an <ph id="ph1">`AND`</ph> comparison of the first bit.</source>
          <target state="translated">Используйте <ph id="ph1">`AND`</ph> сравнения первого бита.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyEventArgs.KeyStates">
          <source>Alternatively, use the helper properties <ph id="ph1">&lt;xref:System.Windows.Input.KeyEventArgs.IsUp%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Input.KeyEventArgs.IsDown%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Windows.Input.KeyEventArgs.IsToggled%2A&gt;</ph> to determine whether a given key is up, down, or toggled.</source>
          <target state="translated">Кроме того, используйте вспомогательные свойства <ph id="ph1">&lt;xref:System.Windows.Input.KeyEventArgs.IsUp%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Input.KeyEventArgs.IsDown%2A&gt;</ph>, и <ph id="ph3">&lt;xref:System.Windows.Input.KeyEventArgs.IsToggled%2A&gt;</ph> для определения ли заданного ключа является вверх, вниз или выключатель.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyEventArgs.KeyStates">
          <source>The following example checks whether a key associated with an instance of <ph id="ph1">&lt;xref:System.Windows.Input.KeyEventArgs&gt;</ph> is down by performing a bitwise <ph id="ph2">`AND`</ph> comparison on the <ph id="ph3">&lt;xref:System.Windows.Input.KeyEventArgs.KeyStates%2A&gt;</ph> of the key and the <ph id="ph4">&lt;xref:System.Windows.Input.KeyStates.Down&gt;</ph> enumeration value.</source>
          <target state="translated">В следующем примере проверяется, является ли ключ, связанный с экземпляром <ph id="ph1">&lt;xref:System.Windows.Input.KeyEventArgs&gt;</ph> не работает, выполняя битовую <ph id="ph2">`AND`</ph> сравнения на <ph id="ph3">&lt;xref:System.Windows.Input.KeyEventArgs.KeyStates%2A&gt;</ph> ключа и <ph id="ph4">&lt;xref:System.Windows.Input.KeyStates.Down&gt;</ph> значение перечисления.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="P:System.Windows.Input.KeyEventArgs.SystemKey">
          <source>Gets the keyboard key referenced by the event, if the key will be processed by the system.</source>
          <target state="translated">Получает клавишу клавиатуры, на которою ссылается событие, если эта клавиша будет обрабатываться системой.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Input.KeyEventArgs.SystemKey">
          <source>The <ph id="ph1">&lt;see cref="T:System.Windows.Input.Key" /&gt;</ph> referenced by the event.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Windows.Input.Key" /&gt;</ph>, на который ссылается данное событие.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>