<Type Name="KeyGesture" FullName="System.Windows.Input.KeyGesture">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="b15f77325a06e8d556a8f32acf29fbe01e1860bd" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37504492" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class KeyGesture : System.Windows.Input.InputGesture" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit KeyGesture extends System.Windows.Input.InputGesture" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Input.KeyGesture" />
  <TypeSignature Language="VB.NET" Value="Public Class KeyGesture&#xA;Inherits InputGesture" />
  <TypeSignature Language="C++ CLI" Value="public ref class KeyGesture : System::Windows::Input::InputGesture" />
  <TypeSignature Language="F#" Value="type KeyGesture = class&#xA;    inherit InputGesture" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Input.InputGesture</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Input.KeyGestureConverter))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Windows.Markup.ValueSerializer(typeof(System.Windows.Input.KeyGestureValueSerializer))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="f8045-101">Defines a keyboard combination that can be used to invoke a command.</span>
      <span class="sxs-lookup">
        <span data-stu-id="f8045-101">Defines a keyboard combination that can be used to invoke a command.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8045-102">В большинстве случаев <xref:System.Windows.Input.KeyGesture> должны быть связаны с одним или несколькими <xref:System.Windows.Input.ModifierKeys>.</span><span class="sxs-lookup"><span data-stu-id="f8045-102">In most cases, a <xref:System.Windows.Input.KeyGesture> must be associated with one or more <xref:System.Windows.Input.ModifierKeys>.</span></span> <span data-ttu-id="f8045-103">Это правило не применяется функциональные клавиши и ключи цифровой клавиатуре, которые могут быть допустимым <xref:System.Windows.Input.KeyGesture> сами по себе.</span><span class="sxs-lookup"><span data-stu-id="f8045-103">The exceptions to this rule are the function keys and the numeric keypad keys, which can be a valid <xref:System.Windows.Input.KeyGesture> by themselves.</span></span> <span data-ttu-id="f8045-104">Например, можно создать <xref:System.Windows.Input.KeyGesture> , используя только клавиши F12, но чтобы использовать X ключа в <xref:System.Windows.Input.KeyGesture> он должен соответствовать клавиши-модификатора.</span><span class="sxs-lookup"><span data-stu-id="f8045-104">For example, you can create a <xref:System.Windows.Input.KeyGesture> by using only the F12 key, but to use the X key in a <xref:System.Windows.Input.KeyGesture> it must be paired with a modifier key.</span></span>  
  
 <span data-ttu-id="f8045-105">Как правило вы можете</span><span class="sxs-lookup"><span data-stu-id="f8045-105">In general, you can</span></span>  
  
 <span data-ttu-id="f8045-106">Можно использовать <xref:System.Windows.Input.KeyBinding> для привязки <xref:System.Windows.Input.KeyGesture> для <xref:System.Windows.Input.ICommand>, так что при вызове команды при <xref:System.Windows.Input.KeyGesture> происходит.</span><span class="sxs-lookup"><span data-stu-id="f8045-106">You can use a <xref:System.Windows.Input.KeyBinding> to bind a <xref:System.Windows.Input.KeyGesture> to an <xref:System.Windows.Input.ICommand>, so that the command is invoked when the <xref:System.Windows.Input.KeyGesture> occurs.</span></span>  
  
 <span data-ttu-id="f8045-107">Для <xref:System.Windows.Input.KeyGesture> [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] данные об использовании, свойство, которое обычно задается в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] является <xref:System.Windows.Input.KeyBinding.Gesture%2A>, в случаях, где жест представляет стандартный ключ и клавиши-модификатора.</span><span class="sxs-lookup"><span data-stu-id="f8045-107">For <xref:System.Windows.Input.KeyGesture> [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usages, the property that is generally set in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is <xref:System.Windows.Input.KeyBinding.Gesture%2A>, in cases where the gesture represents both a standard key and a modifier key.</span></span> <span data-ttu-id="f8045-108">Можно также задать <xref:System.Windows.Input.KeyBinding.Gesture%2A> свойство должно просто функциональной клавиши или просто модификатор сочетание клавиш.</span><span class="sxs-lookup"><span data-stu-id="f8045-108">You can also set the <xref:System.Windows.Input.KeyBinding.Gesture%2A> property to be just a function key, or just a modifier key combination.</span></span> <span data-ttu-id="f8045-109">Тем не менее, очень часто присвоить <xref:System.Windows.Input.KeyBinding.Key%2A> свойства, если привязка предполагаемой команды является ключ функции без модификаторов или <xref:System.Windows.Input.KeyBinding.Modifiers%2A> Если привязка предполагаемой команды предназначен для только клавиши-модификаторы.</span><span class="sxs-lookup"><span data-stu-id="f8045-109">However, it is more common to set the <xref:System.Windows.Input.KeyBinding.Key%2A> property if the intended command binding is a function key with no modifiers, or <xref:System.Windows.Input.KeyBinding.Modifiers%2A> if the intended command binding is for modifier keys only.</span></span>  
  
<a name="xamlAttributeUsage_KeyGesture"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="f8045-110">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="f8045-110">XAML Attribute Usage</span></span>  
  
```  
<object property="oneOrMoreModifierKeys+key"/>  
- or -  
<object property="functionKey"/>  
```  
  
<a name="xamlValues_KeyGesture"></a>   
## <a name="xaml-values"></a><span data-ttu-id="f8045-111">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="f8045-111">XAML Values</span></span>  
 `functionKey`  
 <xref:System.Windows.Input.Key>  
  
 <span data-ttu-id="f8045-112">Единый значение ключа, который должен быть одним функциональные клавиши (F1-12) или ключей на цифровой клавиатуре.</span><span class="sxs-lookup"><span data-stu-id="f8045-112">A single key value, which must be one of the function keys (F1-12) or numeric keypad keys.</span></span>  
  
 `oneOrMoreModifierKeys`  
 <span data-ttu-id="f8045-113">Один или несколько клавиши-модификаторы, определяется <xref:System.Windows.Input.ModifierKeys> перечисления, разделенные символом «+».</span><span class="sxs-lookup"><span data-stu-id="f8045-113">One or more modifier keys, defined by the <xref:System.Windows.Input.ModifierKeys> enumeration, delimited with a "+" character.</span></span>  
  
 `key`  
 <xref:System.Windows.Input.Key>  
  
 <span data-ttu-id="f8045-114">Отдельное значение ключа.</span><span class="sxs-lookup"><span data-stu-id="f8045-114">A single key value.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8045-115">В следующем примере показано, как привязать <xref:System.Windows.Input.ApplicationCommands.Close%2A> команды <xref:System.Windows.Input.KeyGesture> с помощью <xref:System.Windows.Input.KeyBinding>.</span><span class="sxs-lookup"><span data-stu-id="f8045-115">The following example shows how to bind the <xref:System.Windows.Input.ApplicationCommands.Close%2A> command to a <xref:System.Windows.Input.KeyGesture> using a <xref:System.Windows.Input.KeyBinding>.</span></span>  
  
 [!code-csharp[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keybindingwithkeyandmodifiers)]
 [!code-vb[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keybindingwithkeyandmodifiers)]  
  
 <span data-ttu-id="f8045-116">В следующем примере показано, как использовать <xref:System.Windows.Input.KeyGesture> в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="f8045-116">The following example shows how to use <xref:System.Windows.Input.KeyGesture> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span> <span data-ttu-id="f8045-117">Обратите внимание, что [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] использования не объявляет непосредственно `<KeyGesture>` элемент.</span><span class="sxs-lookup"><span data-stu-id="f8045-117">Note that the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usage does not directly declare a `<KeyGesture>` element.</span></span> <span data-ttu-id="f8045-118">Что использования элементов объектов невозможна из-за <xref:System.Windows.Input.KeyGesture> не предоставляет открытый конструктор по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="f8045-118">That object element usage is not possible because <xref:System.Windows.Input.KeyGesture> does not expose a public default constructor.</span></span> <span data-ttu-id="f8045-119">Вместо этого [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] использования использует поведение typeconverter для объявления во всем <xref:System.Windows.Input.KeyGesture> встроенными как `Gesture` значение атрибута.</span><span class="sxs-lookup"><span data-stu-id="f8045-119">Instead, the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] usage uses the typeconverter behavior to declare an entire <xref:System.Windows.Input.KeyGesture> inline as the `Gesture` attribute value.</span></span>  
  
 [!code-xaml[commandWithHandler#CommandHandlerKeyBinding](~/samples/snippets/csharp/VS_Snippets_Wpf/commandWithHandler/CSharp/Window1.xaml#commandhandlerkeybinding)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Input.KeyBinding" />
    <altmember cref="T:System.Windows.Input.MouseBinding" />
    <altmember cref="T:System.Windows.Input.RoutedCommand" />
    <altmember cref="T:System.Windows.Input.CommandBinding" />
    <altmember cref="T:System.Windows.Input.MouseGesture" />
    <altmember cref="T:System.Windows.Input.InputBinding" />
    <altmember cref="T:System.Windows.Input.InputGesture" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f8045-120">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyGesture" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8045-120">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyGesture" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyGesture (System.Windows.Input.Key key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Input.Key key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyGesture(System::Windows::Input::Key key);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.KeyGesture : System.Windows.Input.Key -&gt; System.Windows.Input.KeyGesture" Usage="new System.Windows.Input.KeyGesture key" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="f8045-121">The key associated with this gesture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8045-121">The key associated with this gesture.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f8045-122">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyGesture" /> class with the specified <see cref="T:System.Windows.Input.Key" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8045-122">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyGesture" /> class with the specified <see cref="T:System.Windows.Input.Key" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8045-123">В большинстве случаев <xref:System.Windows.Input.KeyGesture> должны быть связаны с одним или несколькими <xref:System.Windows.Input.ModifierKeys>.</span><span class="sxs-lookup"><span data-stu-id="f8045-123">In most cases, a <xref:System.Windows.Input.KeyGesture> must be associated with one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  <span data-ttu-id="f8045-124">Это правило не применяется функциональные клавиши и ключи цифровой клавиатуре, которые могут быть допустимым <xref:System.Windows.Input.KeyGesture> сами по себе.</span><span class="sxs-lookup"><span data-stu-id="f8045-124">The exceptions to this rule are the function keys and the numeric keypad keys, which can be a valid <xref:System.Windows.Input.KeyGesture> by themselves.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8045-125">В следующем примере показано, как использовать этот конструктор для создания <xref:System.Windows.Input.KeyGesture> и свяжите ее с <xref:System.Windows.Input.KeyBinding>.</span><span class="sxs-lookup"><span data-stu-id="f8045-125">The following example shows how to use this constructor to create a <xref:System.Windows.Input.KeyGesture> and associate it with a <xref:System.Windows.Input.KeyBinding>.</span></span>  <span data-ttu-id="f8045-126"><xref:System.Windows.Input.KeyBinding> Добавляется <xref:System.Windows.Input.InputBindingCollection> из <xref:System.Windows.Window>.</span><span class="sxs-lookup"><span data-stu-id="f8045-126">The <xref:System.Windows.Input.KeyBinding> is then added to the <xref:System.Windows.Input.InputBindingCollection> of a <xref:System.Windows.Window>.</span></span>  
  
 [!code-csharp[commandlibrarysnippets#KeyBindingWithNoModifier](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keybindingwithnomodifier)]
 [!code-vb[commandlibrarysnippets#KeyBindingWithNoModifier](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keybindingwithnomodifier)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="f8045-127">
            <paramref name="key" /> is not a valid <see cref="T:System.Windows.Input.Key" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8045-127">
              <paramref name="key" /> is not a valid <see cref="T:System.Windows.Input.Key" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f8045-128">
            <paramref name="key" /> is not a valid <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8045-128">
              <paramref name="key" /> is not a valid <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyGesture (System.Windows.Input.Key key, System.Windows.Input.ModifierKeys modifiers);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Input.Key key, valuetype System.Windows.Input.ModifierKeys modifiers) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyGesture(System::Windows::Input::Key key, System::Windows::Input::ModifierKeys modifiers);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.KeyGesture : System.Windows.Input.Key * System.Windows.Input.ModifierKeys -&gt; System.Windows.Input.KeyGesture" Usage="new System.Windows.Input.KeyGesture (key, modifiers)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="f8045-129">The key associated with the gesture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8045-129">The key associated with the gesture.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="f8045-130">The modifier keys associated with the gesture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8045-130">The modifier keys associated with the gesture.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f8045-131">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyGesture" /> class with the specified <see cref="T:System.Windows.Input.Key" /> and <see cref="T:System.Windows.Input.ModifierKeys" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8045-131">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyGesture" /> class with the specified <see cref="T:System.Windows.Input.Key" /> and <see cref="T:System.Windows.Input.ModifierKeys" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8045-132">В большинстве случаев <xref:System.Windows.Input.KeyGesture> должны быть связаны с одним или несколькими <xref:System.Windows.Input.ModifierKeys>.</span><span class="sxs-lookup"><span data-stu-id="f8045-132">In most cases, a <xref:System.Windows.Input.KeyGesture> must be associated with one or more <xref:System.Windows.Input.ModifierKeys>.</span></span> <span data-ttu-id="f8045-133">Это правило не применяется функциональные клавиши и ключи цифровой клавиатуре, которые могут быть допустимым <xref:System.Windows.Input.KeyGesture> сами по себе.</span><span class="sxs-lookup"><span data-stu-id="f8045-133">The exceptions to this rule are the function keys and the numeric keypad keys, which can be a valid <xref:System.Windows.Input.KeyGesture> by themselves.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8045-134">В следующем примере показано, как использовать этот конструктор для создания <xref:System.Windows.Input.KeyGesture> и свяжите ее с <xref:System.Windows.Input.KeyBinding>.</span><span class="sxs-lookup"><span data-stu-id="f8045-134">The following example shows how to use this constructor to create a <xref:System.Windows.Input.KeyGesture> and associate it with a <xref:System.Windows.Input.KeyBinding>.</span></span> <span data-ttu-id="f8045-135"><xref:System.Windows.Input.KeyBinding> Добавляется <xref:System.Windows.Input.InputBindingCollection> из <xref:System.Windows.Window>.</span><span class="sxs-lookup"><span data-stu-id="f8045-135">The <xref:System.Windows.Input.KeyBinding> is then added to the <xref:System.Windows.Input.InputBindingCollection> of a <xref:System.Windows.Window>.</span></span>  
  
 [!code-csharp[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keybindingwithkeyandmodifiers)]
 [!code-vb[commandlibrarysnippets#KeyBindingWithKeyAndModifiers](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keybindingwithkeyandmodifiers)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="f8045-136">
            <paramref name="modifiers" /> is not a valid <see cref="T:System.Windows.Input.ModifierKeys" />  -or-  <paramref name="key" /> is not a valid <see cref="T:System.Windows.Input.Key" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8045-136">
              <paramref name="modifiers" /> is not a valid <see cref="T:System.Windows.Input.ModifierKeys" />  -or-  <paramref name="key" /> is not a valid <see cref="T:System.Windows.Input.Key" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f8045-137">
            <paramref name="key" /> and <paramref name="modifiers" /> do not form a valid <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8045-137">
              <paramref name="key" /> and <paramref name="modifiers" /> do not form a valid <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
        <altmember cref="T:System.Windows.Input.InputBinding" />
        <altmember cref="T:System.Windows.Input.InputGesture" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public KeyGesture (System.Windows.Input.Key key, System.Windows.Input.ModifierKeys modifiers, string displayString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Windows.Input.Key key, valuetype System.Windows.Input.ModifierKeys modifiers, string displayString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGesture.#ctor(System.Windows.Input.Key,System.Windows.Input.ModifierKeys,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; KeyGesture(System::Windows::Input::Key key, System::Windows::Input::ModifierKeys modifiers, System::String ^ displayString);" />
      <MemberSignature Language="F#" Value="new System.Windows.Input.KeyGesture : System.Windows.Input.Key * System.Windows.Input.ModifierKeys * string -&gt; System.Windows.Input.KeyGesture" Usage="new System.Windows.Input.KeyGesture (key, modifiers, displayString)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="key" Type="System.Windows.Input.Key" />
        <Parameter Name="modifiers" Type="System.Windows.Input.ModifierKeys" />
        <Parameter Name="displayString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">
          <span data-ttu-id="f8045-138">The key associated with the gesture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8045-138">The key associated with the gesture.</span>
          </span>
        </param>
        <param name="modifiers">
          <span data-ttu-id="f8045-139">The modifier keys associated with the gesture.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8045-139">The modifier keys associated with the gesture.</span>
          </span>
        </param>
        <param name="displayString">
          <span data-ttu-id="f8045-140">A string representation of the <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8045-140">A string representation of the <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f8045-141">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyGesture" /> class with the specified <see cref="T:System.Windows.Input.Key" />, <see cref="T:System.Windows.Input.ModifierKeys" />, and display string.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8045-141">Initializes a new instance of the <see cref="T:System.Windows.Input.KeyGesture" /> class with the specified <see cref="T:System.Windows.Input.Key" />, <see cref="T:System.Windows.Input.ModifierKeys" />, and display string.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8045-142"><xref:System.Windows.Input.KeyGesture.DisplayString%2A> Свойству `displayString` параметра.</span><span class="sxs-lookup"><span data-stu-id="f8045-142">The <xref:System.Windows.Input.KeyGesture.DisplayString%2A> property is set to the `displayString` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="f8045-143">
            <paramref name="modifiers" /> is not a valid <see cref="T:System.Windows.Input.ModifierKeys" />  -or-  <paramref name="key" /> is not a valid <see cref="T:System.Windows.Input.Key" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8045-143">
              <paramref name="modifiers" /> is not a valid <see cref="T:System.Windows.Input.ModifierKeys" />  -or-  <paramref name="key" /> is not a valid <see cref="T:System.Windows.Input.Key" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f8045-144">
            <paramref name="displayString" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8045-144">
              <paramref name="displayString" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="f8045-145">
            <paramref name="key" /> and <paramref name="modifiers" /> do not form a valid <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8045-145">
              <paramref name="key" /> and <paramref name="modifiers" /> do not form a valid <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
      </Docs>
    </Member>
    <Member MemberName="DisplayString">
      <MemberSignature Language="C#" Value="public string DisplayString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DisplayString" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyGesture.DisplayString" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DisplayString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DisplayString { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DisplayString : string" Usage="System.Windows.Input.KeyGesture.DisplayString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f8045-146">Gets a string representation of this <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8045-146">Gets a string representation of this <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f8045-147">Отображаемая строка для данного <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8045-147">The display string for this <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
          <span data-ttu-id="f8045-148">Значение по умолчанию — <see cref="F:System.String.Empty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8045-148">The default value is <see cref="F:System.String.Empty" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8045-149">Если строка отображения данных не был задан в конструкторе, возвращается пустая строка.</span><span class="sxs-lookup"><span data-stu-id="f8045-149">If a display string was not set in the constructor, an empty string is returned.</span></span>  
  
 <span data-ttu-id="f8045-150">Если это свойство не указано, <xref:System.Windows.Input.KeyGesture.GetDisplayStringForCulture%2A> метод возвращает строку, созданную из <xref:System.Windows.Input.KeyGesture.Key%2A> и <xref:System.Windows.Input.KeyGesture.Modifiers%2A>.</span><span class="sxs-lookup"><span data-stu-id="f8045-150">If this property is empty, the <xref:System.Windows.Input.KeyGesture.GetDisplayStringForCulture%2A> method returns a string created from the <xref:System.Windows.Input.KeyGesture.Key%2A> and <xref:System.Windows.Input.KeyGesture.Modifiers%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
      </Docs>
    </Member>
    <Member MemberName="GetDisplayStringForCulture">
      <MemberSignature Language="C#" Value="public string GetDisplayStringForCulture (System.Globalization.CultureInfo culture);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetDisplayStringForCulture(class System.Globalization.CultureInfo culture) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGesture.GetDisplayStringForCulture(System.Globalization.CultureInfo)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDisplayStringForCulture (culture As CultureInfo) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetDisplayStringForCulture(System::Globalization::CultureInfo ^ culture);" />
      <MemberSignature Language="F#" Value="member this.GetDisplayStringForCulture : System.Globalization.CultureInfo -&gt; string" Usage="keyGesture.GetDisplayStringForCulture culture" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="culture" Type="System.Globalization.CultureInfo" />
      </Parameters>
      <Docs>
        <param name="culture">
          <span data-ttu-id="f8045-151">The culture specific information.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8045-151">The culture specific information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f8045-152">Returns a string that can be used to display the <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8045-152">Returns a string that can be used to display the <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f8045-153">The string to display</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8045-153">The string to display</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8045-154">Если было задано отображение строки с помощью конструктора, который возвращается строка; в противном случае создается строка из <xref:System.Windows.Input.KeyGesture.Key%2A> и <xref:System.Windows.Input.KeyGesture.Modifiers%2A> с все необходимые преобразования с одновременным запретом на заданный <xref:System.Globalization.CultureInfo> объекта.</span><span class="sxs-lookup"><span data-stu-id="f8045-154">If the display string was set by the constructor, that string is returned; otherwise, a string is created from the <xref:System.Windows.Input.KeyGesture.Key%2A> and <xref:System.Windows.Input.KeyGesture.Modifiers%2A> with any necessary conversions being governed by the specified <xref:System.Globalization.CultureInfo> object.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
      </Docs>
    </Member>
    <Member MemberName="Key">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Key Key { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.Key Key" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyGesture.Key" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Key As Key" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Key Key { System::Windows::Input::Key get(); };" />
      <MemberSignature Language="F#" Value="member this.Key : System.Windows.Input.Key" Usage="System.Windows.Input.KeyGesture.Key" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Key</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f8045-155">Gets the key associated with this <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8045-155">Gets the key associated with this <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f8045-156">Ключ, связанный с данным жестом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8045-156">The key associated with the gesture.</span>
          </span>
          <span data-ttu-id="f8045-157">Значение по умолчанию — <see cref="F:System.Windows.Input.Key.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8045-157">The default value is <see cref="F:System.Windows.Input.Key.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8045-158">В большинстве случаев <xref:System.Windows.Input.KeyGesture> должны быть связаны с одним или несколькими <xref:System.Windows.Input.ModifierKeys>.</span><span class="sxs-lookup"><span data-stu-id="f8045-158">In most cases, a <xref:System.Windows.Input.KeyGesture> must be associated with one or more <xref:System.Windows.Input.ModifierKeys>.</span></span>  <span data-ttu-id="f8045-159">Это правило не применяется функциональные клавиши и ключи цифровой клавиатуре, которые могут быть допустимым <xref:System.Windows.Input.KeyGesture> сами по себе.</span><span class="sxs-lookup"><span data-stu-id="f8045-159">The exceptions to this rule are the function keys and the numeric keypad keys, which can be a valid <xref:System.Windows.Input.KeyGesture> by themselves.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
      </Docs>
    </Member>
    <Member MemberName="Matches">
      <MemberSignature Language="C#" Value="public override bool Matches (object targetElement, System.Windows.Input.InputEventArgs inputEventArgs);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Matches(object targetElement, class System.Windows.Input.InputEventArgs inputEventArgs) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Input.KeyGesture.Matches(System.Object,System.Windows.Input.InputEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Matches(System::Object ^ targetElement, System::Windows::Input::InputEventArgs ^ inputEventArgs);" />
      <MemberSignature Language="F#" Value="override this.Matches : obj * System.Windows.Input.InputEventArgs -&gt; bool" Usage="keyGesture.Matches (targetElement, inputEventArgs)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetElement" Type="System.Object" />
        <Parameter Name="inputEventArgs" Type="System.Windows.Input.InputEventArgs" />
      </Parameters>
      <Docs>
        <param name="targetElement">
          <span data-ttu-id="f8045-160">The target.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8045-160">The target.</span>
          </span>
        </param>
        <param name="inputEventArgs">
          <span data-ttu-id="f8045-161">The input event data to compare this gesture to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8045-161">The input event data to compare this gesture to.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f8045-162">Determines whether this <see cref="T:System.Windows.Input.KeyGesture" /> matches the input associated with the specified <see cref="T:System.Windows.Input.InputEventArgs" /> object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8045-162">Determines whether this <see cref="T:System.Windows.Input.KeyGesture" /> matches the input associated with the specified <see cref="T:System.Windows.Input.InputEventArgs" /> object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f8045-163">
            <see langword="true" /> if the event data matches this <see cref="T:System.Windows.Input.KeyGesture" />; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8045-163">
              <see langword="true" /> if the event data matches this <see cref="T:System.Windows.Input.KeyGesture" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8045-164">`targetElement` можно использовать для принятия более конкретные на команды должны вызываться на конкретный элемент.</span><span class="sxs-lookup"><span data-stu-id="f8045-164">`targetElement` can be used to make a more specific decision on whether a command should be invoked on a specific element.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="f8045-165">В следующем примере показано, как для тестирования ли <xref:System.Windows.Input.KeyGesture> извлекающий входные данные, связанные с экземпляром <xref:System.Windows.Input.InputEventArgs>.</span><span class="sxs-lookup"><span data-stu-id="f8045-165">The following example shows how to test whether a <xref:System.Windows.Input.KeyGesture> matches the input associated with an instance of an <xref:System.Windows.Input.InputEventArgs>.</span></span> <span data-ttu-id="f8045-166">Объект <xref:System.Windows.UIElement.KeyDown> создается обработчик событий, который сравнивает данные события с <xref:System.Windows.Input.KeyGesture> с помощью <xref:System.Windows.Input.KeyGesture.Matches%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="f8045-166">A <xref:System.Windows.UIElement.KeyDown> event handler is created that compares the event data with the <xref:System.Windows.Input.KeyGesture> by using the <xref:System.Windows.Input.KeyGesture.Matches%2A> method.</span></span>  
  
 [!code-csharp[commandlibrarysnippets#KeyDownHandlerKeyGestureMatches](~/samples/snippets/csharp/VS_Snippets_Wpf/CommandLibrarySnippets/CSharp/Window1.xaml.cs#keydownhandlerkeygesturematches)]
 [!code-vb[commandlibrarysnippets#KeyDownHandlerKeyGestureMatches](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CommandLibrarySnippets/visualbasic/window1.xaml.vb#keydownhandlerkeygesturematches)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Modifiers">
      <MemberSignature Language="C#" Value="public System.Windows.Input.ModifierKeys Modifiers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Input.ModifierKeys Modifiers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Input.KeyGesture.Modifiers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Modifiers As ModifierKeys" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::ModifierKeys Modifiers { System::Windows::Input::ModifierKeys get(); };" />
      <MemberSignature Language="F#" Value="member this.Modifiers : System.Windows.Input.ModifierKeys" Usage="System.Windows.Input.KeyGesture.Modifiers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.ModifierKeys</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f8045-167">Gets the modifier keys associated with this <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8045-167">Gets the modifier keys associated with this <see cref="T:System.Windows.Input.KeyGesture" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f8045-168">Клавиши-модификаторы, связанный с данным жестом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8045-168">The modifier keys associated with the gesture.</span>
          </span>
          <span data-ttu-id="f8045-169">Значение по умолчанию — <see cref="F:System.Windows.Input.ModifierKeys.None" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="f8045-169">The default value is <see cref="F:System.Windows.Input.ModifierKeys.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f8045-170">В большинстве случаев <xref:System.Windows.Input.KeyGesture> должны быть связаны с одним или несколькими <xref:System.Windows.Input.ModifierKeys>.</span><span class="sxs-lookup"><span data-stu-id="f8045-170">In most cases, a <xref:System.Windows.Input.KeyGesture> must be associated with one or more <xref:System.Windows.Input.ModifierKeys>.</span></span> <span data-ttu-id="f8045-171">Это правило не применяется функциональные клавиши и ключи цифровой клавиатуре, которые могут быть допустимым <xref:System.Windows.Input.KeyGesture> сами по себе.</span><span class="sxs-lookup"><span data-stu-id="f8045-171">The exceptions to this rule are the function keys and the numeric keypad keys, which can be a valid <xref:System.Windows.Input.KeyGesture> by themselves.</span></span> <span data-ttu-id="f8045-172">Например, можно создать <xref:System.Windows.Input.KeyGesture> , используя только клавиши F12, но чтобы использовать X ключа в <xref:System.Windows.Input.KeyGesture> он должен соответствовать клавиши-модификатора.</span><span class="sxs-lookup"><span data-stu-id="f8045-172">For example, you can create a <xref:System.Windows.Input.KeyGesture> by using only the F12 key, but to use the X key in a <xref:System.Windows.Input.KeyGesture> it must be paired with a modifier key.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.KeyBinding" />
        <altmember cref="T:System.Windows.Input.MouseBinding" />
        <altmember cref="T:System.Windows.Input.RoutedCommand" />
        <altmember cref="T:System.Windows.Input.CommandBinding" />
        <altmember cref="T:System.Windows.Input.MouseGesture" />
      </Docs>
    </Member>
  </Members>
</Type>