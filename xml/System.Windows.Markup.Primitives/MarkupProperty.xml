<Type Name="MarkupProperty" FullName="System.Windows.Markup.Primitives.MarkupProperty">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2cc84508111a2d2946b82d9bf0f0cdc390e0599e" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30659088" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MarkupProperty" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MarkupProperty extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.Primitives.MarkupProperty" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MarkupProperty" />
  <TypeSignature Language="C++ CLI" Value="public ref class MarkupProperty abstract" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="d5287-101">Абстрактный класс, предоставляющий описание свойств для использования при написании разметки, инкапсулирующей доступ к свойствам и их значениям.</span>
      <span class="sxs-lookup">
        <span data-stu-id="d5287-101">Abstract class that provides a property description to be used while writing to markup which encapsulates access to properties and their values.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5287-102">Свойство представлено строкой или список элементов.</span><span class="sxs-lookup"><span data-stu-id="d5287-102">A property is either represented as a string or a list of items.</span></span>  
  
 <span data-ttu-id="d5287-103">Если свойство может быть представлено в виде строки, <xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A> — `false`.</span><span class="sxs-lookup"><span data-stu-id="d5287-103">If the property can be represented as a string, <xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A> is `false`.</span></span>  
  
 <span data-ttu-id="d5287-104">Если <xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A> является `true`, свойство представляет список элементов.</span><span class="sxs-lookup"><span data-stu-id="d5287-104">If <xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A> is `true`, the property is a list of items.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public abstract System.ComponentModel.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ComponentModel::AttributeCollection ^ Attributes { System::ComponentModel::AttributeCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5287-105">При переопределении в производном классе возвращает атрибуты, связанные с данным <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5287-105">When overridden in a derived class, gets the attributes associated with this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5287-106">Коллекция атрибутов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5287-106">The collection of attributes.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DependencyProperty">
      <MemberSignature Language="C#" Value="public virtual System.Windows.DependencyProperty DependencyProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyProperty DependencyProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DependencyProperty As DependencyProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Windows::DependencyProperty ^ DependencyProperty { System::Windows::DependencyProperty ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5287-107">В случае переопределения в производном классе получает идентификатор <see cref="T:System.Windows.DependencyProperty" /> для свойства разметки, если это свойство реализуется как свойство зависимостей.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5287-107">When overridden in a derived class, gets the <see cref="T:System.Windows.DependencyProperty" /> identifier for the markup property if the property is implemented as a dependency property</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5287-108">Идентификатор для свойства зависимостей.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5287-108">The dependency property identifier.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5287-109">По умолчанию возвращает `null`.</span><span class="sxs-lookup"><span data-stu-id="d5287-109">The default behavior returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAttached">
      <MemberSignature Language="C#" Value="public virtual bool IsAttached { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAttached" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.IsAttached" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsAttached As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsAttached { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5287-110">При переопределении в производном классе определяет, является ли данное <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> вложенным <see cref="T:System.Windows.DependencyProperty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5287-110">When overridden in a derived class, determines whether this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> is an attached <see cref="T:System.Windows.DependencyProperty" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5287-111">
            <see langword="true" />, если свойство является вложенным <see cref="T:System.Windows.DependencyProperty" />; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5287-111">
              <see langword="true" /> if the property is an attached <see cref="T:System.Windows.DependencyProperty" />; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5287-112">По умолчанию возвращается `false`.</span><span class="sxs-lookup"><span data-stu-id="d5287-112">The default behavior is to return `false`.</span></span>  
  
 <span data-ttu-id="d5287-113">При <xref:System.Windows.Markup.Primitives.MarkupProperty.IsAttached%2A> — `true`, <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> не `null` и <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> может быть `null`, но не обязательно должна быть.</span><span class="sxs-lookup"><span data-stu-id="d5287-113">When <xref:System.Windows.Markup.Primitives.MarkupProperty.IsAttached%2A> is `true`, <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> is not `null` and <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> can be `null`, but is not required to be.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsComposite">
      <MemberSignature Language="C#" Value="public virtual bool IsComposite { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsComposite" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.IsComposite" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsComposite As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsComposite { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5287-114">При переопределении в производном классе определяет, является ли данное свойство <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> составным.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5287-114">When overridden in a derived class, determines whether this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> is a composite property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5287-115">
            <see langword="true" />, если данное свойство является составным; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5287-115">
              <see langword="true" /> is this property is a composite property; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5287-116">По умолчанию возвращается `false`.</span><span class="sxs-lookup"><span data-stu-id="d5287-116">The default behavior is to return `false`.</span></span>  
  
 <span data-ttu-id="d5287-117">Если <xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A> — `false`, свойство может быть представлено в виде строки и <xref:System.Windows.Markup.Primitives.MarkupProperty.Value%2A> и <xref:System.Windows.Markup.Primitives.MarkupProperty.StringValue%2A> являются допустимыми для использования.</span><span class="sxs-lookup"><span data-stu-id="d5287-117">If <xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A> is `false`, the property can be represented as a string and <xref:System.Windows.Markup.Primitives.MarkupProperty.Value%2A> and <xref:System.Windows.Markup.Primitives.MarkupProperty.StringValue%2A> are valid to use.</span></span>  
  
 <span data-ttu-id="d5287-118">Если <xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A> — `true`, свойство имеет один или несколько элементов и <xref:System.Windows.Markup.Primitives.MarkupProperty.Items%2A> является допустимым для использования.</span><span class="sxs-lookup"><span data-stu-id="d5287-118">If <xref:System.Windows.Markup.Primitives.MarkupProperty.IsComposite%2A> is `true`, the property is one or more items and <xref:System.Windows.Markup.Primitives.MarkupProperty.Items%2A> is valid to use.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConstructorArgument">
      <MemberSignature Language="C#" Value="public virtual bool IsConstructorArgument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConstructorArgument" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsConstructorArgument As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsConstructorArgument { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5287-119">При переопределении в производном классе определяет, представляет ли данное свойство <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> аргумент конструктора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5287-119">When overridden in a derived class, determines whether this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> represents a constructor argument.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5287-120">Значение <see langword="true" />, если данное свойство представляет аргумент конструктора; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5287-120">
              <see langword="true" /> if this property represents a constructor argument; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5287-121">Поведение по умолчанию возвращаемого `false`.</span><span class="sxs-lookup"><span data-stu-id="d5287-121">The default behavior is return `false`.</span></span>  
  
 <span data-ttu-id="d5287-122">Когда <xref:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument%2A> — `true`, <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> и <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> оба `null`.</span><span class="sxs-lookup"><span data-stu-id="d5287-122">When <xref:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument%2A> is `true`, <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> and <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> are both `null`.</span></span>  
  
 <span data-ttu-id="d5287-123">XAML использует только <xref:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument%2A> для представления аргументы конструктора экземпляров <xref:System.Windows.Markup.MarkupExtension>.</span><span class="sxs-lookup"><span data-stu-id="d5287-123">XAML only uses <xref:System.Windows.Markup.Primitives.MarkupProperty.IsConstructorArgument%2A> for representing the constructor arguments of instances of <xref:System.Windows.Markup.MarkupExtension>.</span></span> <span data-ttu-id="d5287-124">В разделе [расширения разметки и WPF XAML](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md).</span><span class="sxs-lookup"><span data-stu-id="d5287-124">See [Markup Extensions and WPF XAML](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsContent">
      <MemberSignature Language="C#" Value="public virtual bool IsContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsContent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.IsContent" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsContent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsContent { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5287-125">При переопределении в производном классе определяет, представляет ли данное свойство <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> непосредственное содержимое коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5287-125">When overridden in a derived class, determines whether this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> represents direct content of a collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5287-126">
            <see langword="true" />, если свойство представляет непосредственное содержимое; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5287-126">
              <see langword="true" /> if the property represents direct content; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5287-127">По умолчанию возвращается `false`.</span><span class="sxs-lookup"><span data-stu-id="d5287-127">The default behavior is to return `false`.</span></span>  
  
 <span data-ttu-id="d5287-128">Когда <xref:System.Windows.Markup.Primitives.MarkupProperty.IsContent%2A> — `true`, <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> и <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> оба `null`.</span><span class="sxs-lookup"><span data-stu-id="d5287-128">When <xref:System.Windows.Markup.Primitives.MarkupProperty.IsContent%2A> is `true`, <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> and <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> are both `null`.</span></span>  
  
 <span data-ttu-id="d5287-129">При определении словари входят ли это <xref:System.Windows.Markup.Primitives.MarkupProperty> представляет прямой содержимого.</span><span class="sxs-lookup"><span data-stu-id="d5287-129">Dictionaries are included when determining whether this <xref:System.Windows.Markup.Primitives.MarkupProperty> represents direct content.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsKey">
      <MemberSignature Language="C#" Value="public virtual bool IsKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.IsKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsKey As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsKey { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5287-130">При переопределении в производном классе определяет, представляет ли данное свойство <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> ключ, используемый объектом <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> для хранения элемента в словаре.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5287-130">When overridden in a derived class, determines whether this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> represents the key used by the <see cref="T:System.Windows.Markup.Primitives.MarkupObject" /> to store the item in a dictionary.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5287-131">
            <see langword="true" />, если это свойство представляет ключ; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5287-131">
              <see langword="true" /> if this property represents a key; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5287-132">По умолчанию возвращается `false`.</span><span class="sxs-lookup"><span data-stu-id="d5287-132">The default behavior is to return `false`.</span></span>  
  
 <span data-ttu-id="d5287-133">Когда <xref:System.Windows.Markup.Primitives.MarkupProperty.IsKey%2A> — `true`, <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> и <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> являются `null`.</span><span class="sxs-lookup"><span data-stu-id="d5287-133">When <xref:System.Windows.Markup.Primitives.MarkupProperty.IsKey%2A> is `true`, <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> and <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> are `null`.</span></span>  
  
 <span data-ttu-id="d5287-134">XAML будет использовать указанное свойство как `x:Key` атрибута.</span><span class="sxs-lookup"><span data-stu-id="d5287-134">XAML will use the identified property as an `x:Key` attribute.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsValueAsString">
      <MemberSignature Language="C#" Value="public virtual bool IsValueAsString { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsValueAsString" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsValueAsString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsValueAsString { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5287-135">При переопределении в производном классе определяет, представляет ли это свойство <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> текст, передаваемый преобразователю типов для создания экземпляра свойства, или должен использоваться конструктор.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5287-135">When overridden in a derived class, determines whether this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> represents text which is passed to a type converter to create an instance of the property or if a constructor should be used.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5287-136">
            <see langword="true" />, если это свойство <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> представляет строку; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5287-136">
              <see langword="true" />, if this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> represents a string; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5287-137">По умолчанию выполняется для возврата `false.`</span><span class="sxs-lookup"><span data-stu-id="d5287-137">The default behavior is to return `false.`</span></span>  
  
 <span data-ttu-id="d5287-138">Когда <xref:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString%2A> — `true`, <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> и <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> оба `null`.</span><span class="sxs-lookup"><span data-stu-id="d5287-138">When <xref:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString%2A> is `true`, <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> and <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> are both `null`.</span></span>  
  
 <span data-ttu-id="d5287-139">Если свойство обеспечивается <xref:System.Windows.Markup.Primitives.MarkupObject.Properties%2A> и <xref:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString%2A> — `true`, он будет единственным свойством, предоставляет тип.</span><span class="sxs-lookup"><span data-stu-id="d5287-139">If the property is provided through <xref:System.Windows.Markup.Primitives.MarkupObject.Properties%2A> and <xref:System.Windows.Markup.Primitives.MarkupProperty.IsValueAsString%2A> is `true`, it will be the only property the type will provide.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;System.Windows.Markup.Primitives.MarkupObject&gt; Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Windows.Markup.Primitives.MarkupObject&gt; Items" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.Items" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Items As IEnumerable(Of MarkupObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::IEnumerable&lt;System::Windows::Markup::Primitives::MarkupObject ^&gt; ^ Items { System::Collections::Generic::IEnumerable&lt;System::Windows::Markup::Primitives::MarkupObject ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Windows.Markup.Primitives.MarkupObject&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5287-140">При переопределении в производном классе возвращает элементы, составляющие значение данного свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5287-140">When overridden in a derived class, gets the items that make up the value of this property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5287-141">Элементы, составляющие значение данного свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5287-141">The items that make up the value of this property.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5287-142">Если свойство не является перечислением, будет возвращаться только один элемент.</span><span class="sxs-lookup"><span data-stu-id="d5287-142">If the property is not an enumeration, only one item will be returned.</span></span>  
  
 <span data-ttu-id="d5287-143">Если свойство является перечислением, или перечислимой, все элементы будут возвращены.</span><span class="sxs-lookup"><span data-stu-id="d5287-143">If the property is an enumeration, or enumerable, all the items will be returned.</span></span>  
  
 <span data-ttu-id="d5287-144">Хотя бы один элемент всегда возвращается, поскольку <xref:System.Windows.Markup.Primitives.MarkupObject> не будет создавать <xref:System.Windows.Markup.Primitives.MarkupProperty> для свойств без элементов.</span><span class="sxs-lookup"><span data-stu-id="d5287-144">At least one item is always returned, because <xref:System.Windows.Markup.Primitives.MarkupObject> will not create a <xref:System.Windows.Markup.Primitives.MarkupProperty> for properties with no items.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5287-145">При переопределении в производном классе возвращает имя, используемое для диагностики ошибок и уведомления о них.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5287-145">When overridden in a derived class, gets a name that is used for diagnostics and error reporting.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5287-146">Имя свойства идентификатора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5287-146">The identifier property name.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5287-147">Это значение не следует использовать сериализатор.</span><span class="sxs-lookup"><span data-stu-id="d5287-147">A serializer should not use this value.</span></span> <span data-ttu-id="d5287-148">Следует использовать <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> и/или <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> вместо него.</span><span class="sxs-lookup"><span data-stu-id="d5287-148">It should use the <xref:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor%2A> and/or <xref:System.Windows.Markup.Primitives.MarkupProperty.DependencyProperty%2A> instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyDescriptor">
      <MemberSignature Language="C#" Value="public virtual System.ComponentModel.PropertyDescriptor PropertyDescriptor { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ComponentModel.PropertyDescriptor PropertyDescriptor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.PropertyDescriptor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PropertyDescriptor As PropertyDescriptor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ComponentModel::PropertyDescriptor ^ PropertyDescriptor { System::ComponentModel::PropertyDescriptor ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.PropertyDescriptor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5287-149">При переопределении в производном классе возвращает<see cref="T:System.ComponentModel.PropertyDescriptor" /> для свойства разметки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5287-149">When overridden in a derived class, gets the <see cref="T:System.ComponentModel.PropertyDescriptor" /> for the markup property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5287-150">Дескриптор свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5287-150">The property descriptor.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5287-151">По умолчанию возвращает `null`.</span><span class="sxs-lookup"><span data-stu-id="d5287-151">The default behavior returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PropertyType">
      <MemberSignature Language="C#" Value="public abstract Type PropertyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type PropertyType" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.PropertyType" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property PropertyType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property Type ^ PropertyType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5287-152">При переопределении в производном классе получает CLR-тип свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5287-152">When overridden in a derived class, gets the CLR type of the property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5287-153">Тип CLR.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5287-153">The CLR type.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="StringValue">
      <MemberSignature Language="C#" Value="public abstract string StringValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StringValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.StringValue" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property StringValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ StringValue { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5287-154">При переопределении в производном классе возвращает строковое значение данного <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5287-154">When overridden in a derived class, gets the string value of this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5287-155">Строковое значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5287-155">The string value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeReferences">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IEnumerable&lt;Type&gt; TypeReferences { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IEnumerable`1&lt;class System.Type&gt; TypeReferences" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.TypeReferences" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property TypeReferences As IEnumerable(Of Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ TypeReferences { System::Collections::Generic::IEnumerable&lt;Type ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Type&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5287-156">При переопределении в производном классе получает набор типов, на которые будет ссылаться данный объект <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> при сериализации его значения в виде строки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5287-156">When overridden in a derived class, gets the set of types that this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" /> will reference when it serializes its value as a string.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5287-157">Набор типов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5287-157">The set of types.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d5287-158"><xref:System.Windows.Markup.Primitives.MarkupProperty.TypeReferences%2A> позволяет сериализатору гарантировать, что десериализатор будет иметь достаточно сведений, чтобы преобразовать ссылки на эти тип из строкового представления.</span><span class="sxs-lookup"><span data-stu-id="d5287-158"><xref:System.Windows.Markup.Primitives.MarkupProperty.TypeReferences%2A> enables a serializer to ensure that the de-serializer has enough information to convert references to these type from the string representations.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Value">
      <MemberSignature Language="C#" Value="public abstract object Value { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Value" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.Primitives.MarkupProperty.Value" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Value As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ Value { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="d5287-159">При переопределении в производном классе получает текущее значение данного <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5287-159">When overridden in a derived class, gets the current value of this <see cref="T:System.Windows.Markup.Primitives.MarkupProperty" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="d5287-160">Текущее значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="d5287-160">The current value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>