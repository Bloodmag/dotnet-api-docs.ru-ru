<Type Name="AmbientAttribute" FullName="System.Windows.Markup.AmbientAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="fed5ee82ed23838c0a8baef8d382515ec75d5620" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36503274" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AmbientAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AmbientAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.AmbientAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AmbientAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AmbientAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type AmbientAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class | System.AttributeTargets.Method | System.AttributeTargets.Property, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Указывает, что свойство или тип должны обрабатываться как свойство или тип окружения. Концепция окружения относится к тому, как обработчики XAML определяют владельцев типов членов.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Внешнее свойство является свойством, где значение должно быть доступным в контексте средства синтаксического анализа при создании графа объектов, но поиск типичного члена типа откладывается в целях немедленного создания набора узлов XAML. Существует два основных сценария Концепция окружения:  
  
-   Некоторые другие свойства одного объекта влияет на то и определяет работу этого свойства объекта подстановки.  
  
-   Свойство представляет механизм большей задержки и возможности окружающей среды для поиска значения элемента распространяется на все объекты, содержащиеся в текущем объекте.  
  
 Этот атрибут может применяться к определенным свойствам, которые содержат контейнеры, расширение функциональности внешнее свойство поиска или можно применить к классу, для включения поведения внешнего свойства во всех случаях этого типа значение для свойства.  
  
 <xref:System.Windows.Markup.AmbientAttribute> может также применяться к методу CLR, для поддержки атрибуты присоединяемое свойство XAML как внешнего. Это потенциально необходимо, поскольку в реализации CLR XAML вложенное свойство реализовано/представлено для отражения, как шаблон методов доступа с `get` и `set` методы. Фактическое свойство CLR атрибут существует, поэтому ограничение использования для <xref:System.AttributeTargets> для `Property` не позволило бы указания присоединяемого члена как внешнего. Присоединяемого члена, который вы хотите сообщить как свойство окружения, атрибут `get` метода доступа. Не следует пытаться атрибуты методов, которые не являются специальными методами поддержки прикрепляемые члены.  
  
 В предыдущих версиях платформы .NET Framework этот класс существовали в сборке WindowsBase конкретных WPF. В [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.AmbientAttribute> находится в сборке System.Xaml. Дополнительные сведения см. в разделе [типы, перенесенные из WPF в сборку System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).  
  
 Типы окружения (типы where <xref:System.Windows.Markup.AmbientAttribute> применяется на уровне типа) могут использоваться для обработки определенных XAML ситуаций, в которых тип свойства должен разрешаться не по порядку.  
  
## <a name="object-writer-scenarios"></a>Сценариев средства записи объектов  
 Если вы определяете средство записи объектов XAML и возникают свойства, метода или типа где <xref:System.Windows.Markup.AmbientAttribute> будет применено, обычно для доступа к службе для определения поведения поиска предполагаемого свойства окружения, необходимый для записи объектов. Дополнительные сведения см. в разделе <xref:System.Xaml.IAmbientProvider>.  
  
## <a name="value-converters"></a>Преобразователи значений  
 Преобразователи типов или расширения разметки следует знать внешние сведения для обработки свойств, представляющих сопоставления косвенных типов, таких как свойства, определяющие элементы или типы по именам строк с или без уточнения. В этом сценарии <xref:System.Windows.Markup.AmbientAttribute> не предназначен для использования непосредственно для логики кода преобразователь значения. Вместо этого преобразователь значений должен полагаться на поведение обработки модуля записи XAML, который передает <xref:System.Xaml.IAmbientProvider> в его контексты службы методам преобразователя значения при вызове.  
  
## <a name="wpf-scenarios-for-ambientattribute"></a>Сценарии AmbientAttribute WPF  
  
-   Свойство <xref:System.Windows.Style> (<xref:System.Windows.Style.TargetType%2A>) можно уточнить поиск имен необходимые свойства, которые нужно найти ссылки резервное копирование в именах свойств в <xref:System.Windows.Setter.Property%2A?displayProperty=nameWithType> значения.  
  
-   Все содержимое в `Resources` свойство (элементы <xref:System.Windows.ResourceDictionary>) а также содержимое шаблона должен иметь доступ к другие одноранговые узлы в качестве значений. Объявление всего `Resources` свойство как внешнего вызывает логику, которая позволяет это в средстве синтаксического анализа XAML в WPF.  
  
 В разделе <xref:System.Windows.ResourceDictionary> пример сценария для параметра <xref:System.Windows.Markup.AmbientAttribute> на уровне типа.  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.IsAmbient" />
    <altmember cref="T:System.Xaml.XamlMember" />
    <altmember cref="T:System.Xaml.IAmbientProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AmbientAttribute ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.AmbientAttribute.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AmbientAttribute();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Markup.AmbientAttribute" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>