<Type Name="IProvideValueTarget" FullName="System.Windows.Markup.IProvideValueTarget">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="6c97b7c2ed539ea717b0aab0adc17b547c77d1c7" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36502908" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IProvideValueTarget" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IProvideValueTarget" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IProvideValueTarget" />
  <TypeSignature Language="VB.NET" Value="Public Interface IProvideValueTarget" />
  <TypeSignature Language="C++ CLI" Value="public interface class IProvideValueTarget" />
  <TypeSignature Language="F#" Value="type IProvideValueTarget = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("PresentationFramework, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет службу, которая сообщает информацию о ситуационных отношениях "объект-свойство" для оценки расширения разметки.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.IProvideValueTarget> Представляет службу, которая сообщает информацию о котором вызывается преобразователь значений свойства объекта вокруг структуры.  
  
 Преобразователи типов или расширения разметки может запросить <xref:System.Windows.Markup.IProvideValueTarget> как служба в контексте службы, предоставляемые средство записи объектов XAML, когда средство записи объектов XAML вызывает поведение преобразования значения. Дополнительные сведения см. в разделе [преобразователи типов или расширения разметки для XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) и [служебные контексты, доступные для расширений разметки и преобразователей типов](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).  
  
 Для расширений разметки, в частности, сценарии где <xref:System.Windows.Markup.IProvideValueTarget> полезно является определение допустимости осведомленность об использовании расширения разметки. Например расширения разметки может реализовать механизм расхода значения, но с помощью этого механизма только может оказаться полезным в том случае, если целевой объект не может использовать другие компоненты механизма расхода во время выполнения. Можно проверить характеристики системы типа объектов, возвращаемых как <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> и убедитесь, что этот объект поддерживает ваш метод отсрочки. В этом случае расширение разметки возвращает значение, и если нет, расширение разметки, создает исключение, которое будет использоваться как внутреннее исключение при записи объектов XAML. Аналогичный сценарий точки зрения обеспечения безопасности, определенное свойство поддерживает возможность, проверив характеристики системы типа <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A>.  
  
 Хотя имя API <xref:System.Windows.Markup.IProvideValueTarget> может подразумеваться, связь с <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A?displayProperty=nameWithType>, сведения о которых сообщили <xref:System.Windows.Markup.IProvideValueTarget> также можно использовать для <xref:System.ComponentModel.TypeConverter> или <xref:System.Windows.Markup.ValueSerializer>. Объект <xref:System.ComponentModel.TypeConverter> или <xref:System.Windows.Markup.ValueSerializer> обычно имеют дополнительный контекст, чем расширения разметки, поскольку они предназначены для определенного целевого типа или целевое свойство, и, следовательно осведомленность допустимость обычно прогнозируемого в системе типов. Однако существуют другие сценарии. Ниже приведен список некоторых сценариев, которые могут быть реализованы преобразователя типов или расширения разметки.  
  
-   Получить <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> для чтения экземпляр значений других свойств для этого объекта. Обратите внимание, что обработка может быть надежными неопределенных значений, поскольку порядок обработки членов XAML для целевого объекта может быть недетерминированным.  
  
-   Получить <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> для чтения метаданных на уровне типа, или убедитесь, что необходимые интерфейсы реализованные этим типом.  
  
-   Получить <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> на чтение метаданных свойства.  
  
 Один сценарий — использование <xref:System.Windows.Markup.IProvideValueTarget> сведения до предела, какие объекты или свойства могут устанавливаться посредством использования расширения разметки.  
  
 Прежде чем использовать службу, убедитесь, что самой службы не `null` при возврате соответствующего параметра поставщика службы вы используете для контекста.  
  
> [!IMPORTANT]
>  При использовании службы, особенно важно не может изменять объект, упоминаемый в <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> свойства или другие объекты, которые ссылается этот объект. В частности, для WPF эти изменения могут вызвать непредсказуемые изменения, которые становится недействительным в системе свойств WPF.  
  
> [!NOTE]
>  Не используйте тип <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> определить точный тип разметки расширения или типа преобразователя должен возвращать. Это не рекомендуется. Ваш тип возвращаемого значения должны быть согласованы с присвоение атрибутов (<xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> для расширений разметки) или модели (имя класса преобразователя типа).  
  
 В предыдущих версиях платформы .NET Framework этот интерфейс существовали в сборке WindowsBase конкретных WPF. В [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.IProvideValueTarget> находится в сборке System.Xaml. Дополнительные сведения см. в разделе [типы, перенесенные из WPF в сборку System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).  
  
## <a name="wpf-usage-notes"></a>Примечания об использовании WPF  
 Эта служба поддерживает возможности платформы, например, привязка к свойству зависимостей.  
  
 В WPF, в виде службы <xref:System.Windows.Markup.IProvideValueTarget> может возвращать объекты и свойства для ситуаций, где значение, возвращаемое из разметки расширения или типа преобразователя зависит от контекста.  
  
 <xref:System.Windows.Markup.IProvideValueTarget> интенсивно используется в внутренней реализации <xref:System.Windows.Data.BindingBase>, класса, который реализует механизм привязки для свойства зависимостей в WPF.  
  
 Внутренняя служба поставщика по умолчанию для WPF реализует <xref:System.Windows.Markup.IProvideValueTarget> для использования с пользовательской разметки расширения или типа преобразователя. Объект, а свойство <xref:System.Windows.Markup.IProvideValueTarget> может устанавливаться только внутренняя служба WPF. Помимо этого определение того, как <xref:System.Windows.Markup.IProvideValueTarget> работает потребует определение собственный поставщик службы для использования конвертера разметки расширение и тип, реализующий по крайней мере <xref:System.Windows.Markup.IProvideValueTarget> и <xref:System.Windows.Markup.IXamlTypeResolver> служб и, Дополнительно сценарии, не описанные здесь.  
  
 Значение null для <xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A> или <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> не означает, что разметки расширения или типа преобразователя не может функционировать, несмотря на то, что зависит от реализации. Пример случай, когда значения из <xref:System.Windows.Markup.IProvideValueTarget> имеют значение null, даже если служба доступна тоже Если расширение разметки, вложенный в другое расширение разметки, таких как <xref:System.Windows.Data.Binding>. Реализация, которая зависит от <xref:System.Windows.Markup.IProvideValueTarget> всегда следует выполнять проверку для значения null, если только с целью генерации определенного исключения, если данный проект предназначен.  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
    <altmember cref="T:System.Windows.Markup.MarkupExtension" />
    <altmember cref="T:System.IServiceProvider" />
  </Docs>
  <Members>
    <Member MemberName="TargetObject">
      <MemberSignature Language="C#" Value="public object TargetObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetObject" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.IProvideValueTarget.TargetObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetObject : obj" Usage="System.Windows.Markup.IProvideValueTarget.TargetObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает сообщаемый целевой объект.</summary>
        <value>Сообщаемый целевой объект.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение, возвращаемое <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> фактическая ссылка, не системный идентификатор типа или другой идентификатор. Значение может быть также `null`; в разделе <xref:System.Windows.Markup.IProvideValueTarget>.  
  
> [!IMPORTANT]
>  При использовании службы, особенно важно не может изменять объект, упоминаемый в <xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A> свойства или другие объекты, которые ссылается этот объект как свойства, которые не являются специально преобразования значений случае его обработки. Для WPF в частности, изменения целевого объекта может вызвать непредвиденные изменения, которые сделают недействительными систему свойств WPF.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
      </Docs>
    </Member>
    <Member MemberName="TargetProperty">
      <MemberSignature Language="C#" Value="public object TargetProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object TargetProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.IProvideValueTarget.TargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetProperty As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ TargetProperty { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TargetProperty : obj" Usage="System.Windows.Markup.IProvideValueTarget.TargetProperty" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает идентификатор сообщаемого целевого свойства.</summary>
        <value>Идентификатор сообщаемого целевого свойства.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение может быть также `null`; в разделе <xref:System.Windows.Markup.IProvideValueTarget>.  
  
## <a name="wpf-usage-notes"></a>Примечания об использовании WPF  
 Для свойства зависимостей, могут возвращать служба по умолчанию WPF <xref:System.Windows.DependencyProperty>, таким образом, что метаданные можно использовать для расширения или типа преобразователя разметки. В противном случае возвращается объект может быть <xref:System.Reflection.PropertyInfo> для свойства среды CLR.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
      </Docs>
    </Member>
  </Members>
</Type>