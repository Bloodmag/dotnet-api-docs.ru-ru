<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IProvideValueTarget.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5fe449848bcdce05ca59b27ae4a3b23e50137f9b6.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fe449848bcdce05ca59b27ae4a3b23e50137f9b6</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>Represents a service that reports situational object-property relationships for markup extension evaluation.</source>
          <target state="translated">Представляет службу, которая сообщает информацию о ситуационных отношениях "объект-свойство" для оценки расширения разметки.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source><ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> represents a service that reports information regarding the object-property structure surrounding where a value converter is invoked.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> Представляет службу, которая сообщает информацию о котором вызывается преобразователь значений свойства объекта вокруг структуры.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>Type converters and markup extensions can query for <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> as a service on the service context that is provided by a XAML object writer, when the XAML object writer invokes value conversion behavior.</source>
          <target state="translated">Преобразователи типов или расширения разметки может запросить <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> как служба в контексте службы, предоставляемые средство записи объектов XAML, когда средство записи объектов XAML вызывает поведение преобразования значения.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>For more information, see <bpt id="p1">[</bpt>Type Converters and Markup Extensions for XAML<ept id="p1">](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md)</ept> and <bpt id="p2">[</bpt>Service Contexts Available to Type Converters and Markup Extensions<ept id="p2">](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>преобразователи типов или расширения разметки для XAML<ept id="p1">](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md)</ept> и <bpt id="p2">[</bpt>служебные контексты, доступные для расширений разметки и преобразователей типов<ept id="p2">](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md)</ept>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>For markup extensions specifically, a scenario where <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> is useful is to determine the validity of your markup extension's situational usage.</source>
          <target state="translated">Для расширений разметки, в частности, сценарии где <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> полезно является определение допустимости осведомленность об использовании расширения разметки.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>For example, your markup extension might implement a value deferral mechanism, but using that mechanism might only be appropriate if the target object is capable of using other components of your deferral mechanism at run time.</source>
          <target state="translated">Например расширения разметки может реализовать механизм расхода значения, но с помощью этого механизма только может оказаться полезным в том случае, если целевой объект не может использовать другие компоненты механизма расхода во время выполнения.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>You could check the type system characteristics of the object returned as <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A&gt;</ph> and make sure that object supports your deferral technique.</source>
          <target state="translated">Можно проверить характеристики системы типа объектов, возвращаемых как <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A&gt;</ph> и убедитесь, что этот объект поддерживает ваш метод отсрочки.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>If so, your markup extension returns a value, and if not, your markup extension throws an exception that will be picked up as an inner exception by a XAML object writer.</source>
          <target state="translated">В этом случае расширение разметки возвращает значение, и если нет, расширение разметки, создает исключение, которое будет использоваться как внутреннее исключение при записи объектов XAML.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>A similar scenario is assuring that a particular property supports a capability, by checking type system characteristics of the <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A&gt;</ph>.</source>
          <target state="translated">Аналогичный сценарий точки зрения обеспечения безопасности, определенное свойство поддерживает возможность, проверив характеристики системы типа <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>Although the API name <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> might imply an association with <ph id="ph2">&lt;xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A?displayProperty=nameWithType&gt;</ph>, the information reported by <ph id="ph3">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> can also be useful to a <ph id="ph4">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> or <ph id="ph5">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph>.</source>
          <target state="translated">Хотя имя API <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> может подразумеваться, связь с <ph id="ph2">&lt;xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A?displayProperty=nameWithType&gt;</ph>, сведения о которых сообщили <ph id="ph3">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> также можно использовать для <ph id="ph4">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> или <ph id="ph5">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>A <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph> typically have more context than a markup extension because they are dedicated to a particular target type or target property, and thus the situational validity is usually predictable in the type system.</source>
          <target state="translated">Объект <ph id="ph1">&lt;xref:System.ComponentModel.TypeConverter&gt;</ph> или <ph id="ph2">&lt;xref:System.Windows.Markup.ValueSerializer&gt;</ph> обычно имеют дополнительный контекст, чем расширения разметки, поскольку они предназначены для определенного целевого типа или целевое свойство, и, следовательно осведомленность допустимость обычно прогнозируемого в системе типов.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>However, other scenarios exist.</source>
          <target state="translated">Однако существуют другие сценарии.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>The following is a list of some scenarios that might be implemented by either a type converter or a markup extension:</source>
          <target state="translated">Ниже приведен список некоторых сценариев, которые могут быть реализованы преобразователя типов или расширения разметки.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>Get <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A&gt;</ph> to read instance values of other properties on that object.</source>
          <target state="translated">Получить <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A&gt;</ph> для чтения экземпляр значений других свойств для этого объекта.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>Note that your handling here might need to be robust for unset values, because the processing order of XAML members on the target object can be nondeterministic.</source>
          <target state="translated">Обратите внимание, что обработка может быть надежными неопределенных значений, поскольку порядок обработки членов XAML для целевого объекта может быть недетерминированным.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>Get <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A&gt;</ph> to read type-level metadata, or to verify that required interfaces are implemented by the type.</source>
          <target state="translated">Получить <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A&gt;</ph> для чтения метаданных на уровне типа, или убедитесь, что необходимые интерфейсы реализованные этим типом.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>Get <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A&gt;</ph> to read property metadata.</source>
          <target state="translated">Получить <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A&gt;</ph> на чтение метаданных свойства.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>One scenario is to use <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> information to limit which objects or properties are permitted to be set by your markup extension.</source>
          <target state="translated">Один сценарий — использование <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> сведения до предела, какие объекты или свойства могут устанавливаться посредством использования расширения разметки.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>Before attempting to use the service, make sure that the service itself is not <ph id="ph1">`null`</ph> when returned by the relevant service provider parameter you are using for context.</source>
          <target state="translated">Прежде чем использовать службу, убедитесь, что самой службы не <ph id="ph1">`null`</ph> при возврате соответствующего параметра поставщика службы вы используете для контекста.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>When using the service, it is particularly important not to modify the object referenced by the <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A&gt;</ph> property, or other objects referenced by that object.</source>
          <target state="translated">При использовании службы, особенно важно не может изменять объект, упоминаемый в <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A&gt;</ph> свойства или другие объекты, которые ссылается этот объект.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>For WPF specifically, these changes could cause unexpected changes that would invalidate the WPF property system.</source>
          <target state="translated">В частности, для WPF эти изменения могут вызвать непредсказуемые изменения, которые становится недействительным в системе свойств WPF.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>Do not use the type of <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A&gt;</ph> to determine which precise type a markup extension or type converter should return.</source>
          <target state="translated">Не используйте тип <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A&gt;</ph> определить точный тип разметки расширения или типа преобразователя должен возвращать.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>That is not a best practice.</source>
          <target state="translated">Это не рекомендуется.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>Your return type should be consistent with attributing (<ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&gt;</ph> for markup extensions) or patterns (class name of the type converter).</source>
          <target state="translated">Ваш тип возвращаемого значения должны быть согласованы с присвоение атрибутов (<ph id="ph1">&lt;xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute&gt;</ph> для расширений разметки) или модели (имя класса преобразователя типа).</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>In previous versions of the .NET Framework, this interface existed in the WPF-specific assembly WindowsBase.</source>
          <target state="translated">В предыдущих версиях платформы .NET Framework этот интерфейс существовали в сборке WindowsBase конкретных WPF.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>In <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> is in the System.Xaml assembly.</source>
          <target state="translated">В <ph id="ph1">[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> находится в сборке System.Xaml.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>For more information, see <bpt id="p1">[</bpt>Types Migrated from WPF to System.Xaml<ept id="p1">](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>типы, перенесенные из WPF в сборку System.Xaml<ept id="p1">](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md)</ept>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>WPF Usage Notes</source>
          <target state="translated">Примечания об использовании WPF</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>This service supports framework features such as binding on a dependency property.</source>
          <target state="translated">Эта служба поддерживает возможности платформы, например, привязка к свойству зависимостей.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>In WPF, the service represented by <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> can return objects and properties for situations where the value to return from a markup extension or type converter depends on context.</source>
          <target state="translated">В WPF, в виде службы <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> может возвращать объекты и свойства для ситуаций, где значение, возвращаемое из разметки расширения или типа преобразователя зависит от контекста.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source><ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> is leveraged heavily in the internal implementation of <ph id="ph2">&lt;xref:System.Windows.Data.BindingBase&gt;</ph>, the class that implements the binding mechanism for dependency properties in WPF.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> интенсивно используется в внутренней реализации <ph id="ph2">&lt;xref:System.Windows.Data.BindingBase&gt;</ph>, класса, который реализует механизм привязки для свойства зависимостей в WPF.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>A default internal service provider for WPF implements <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> for usage by a custom markup extension or type converter.</source>
          <target state="translated">Внутренняя служба поставщика по умолчанию для WPF реализует <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> для использования с пользовательской разметки расширения или типа преобразователя.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>The object and property reported by <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> can only be set by the internal WPF service.</source>
          <target state="translated">Объект, а свойство <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> может устанавливаться только внутренняя служба WPF.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>Going beyond this definition of how <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> operates would require defining your own service provider for markup extension and type converter usages that implements at the very least the <ph id="ph2">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> and <ph id="ph3">&lt;xref:System.Windows.Markup.IXamlTypeResolver&gt;</ph> services, and that is an advanced scenario that is not described here.</source>
          <target state="translated">Помимо этого определение того, как <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> работает потребует определение собственный поставщик службы для использования конвертера разметки расширение и тип, реализующий по крайней мере <ph id="ph2">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> и <ph id="ph3">&lt;xref:System.Windows.Markup.IXamlTypeResolver&gt;</ph> служб и, Дополнительно сценарии, не описанные здесь.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>A null value for <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A&gt;</ph> does not necessarily mean that a markup extension or type converter cannot act, although that depends on your implementation.</source>
          <target state="translated">Значение null для <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetProperty%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A&gt;</ph> не означает, что разметки расширения или типа преобразователя не может функционировать, несмотря на то, что зависит от реализации.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>An example case where the values from <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> are null even if the service is available is if your markup extension is nested within another markup extension, such as a <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>.</source>
          <target state="translated">Пример случай, когда значения из <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> имеют значение null, даже если служба доступна тоже Если расширение разметки, вложенный в другое расширение разметки, таких как <ph id="ph2">&lt;xref:System.Windows.Data.Binding&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.IProvideValueTarget">
          <source>An implementation that relies on <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> should always check for null values if only for the purpose of throwing a specific exception, if that is your intended design.</source>
          <target state="translated">Реализация, которая зависит от <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph> всегда следует выполнять проверку для значения null, если только с целью генерации определенного исключения, если данный проект предназначен.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.IProvideValueTarget.TargetObject">
          <source>Gets the target object being reported.</source>
          <target state="translated">Получает сообщаемый целевой объект.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.IProvideValueTarget.TargetObject">
          <source>The target object being reported.</source>
          <target state="translated">Сообщаемый целевой объект.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.IProvideValueTarget.TargetObject">
          <source>The value returned by <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A&gt;</ph> is the actual reference, not a type system identifier or other identifier.</source>
          <target state="translated">Значение, возвращаемое <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A&gt;</ph> фактическая ссылка, не системный идентификатор типа или другой идентификатор.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.IProvideValueTarget.TargetObject">
          <source>The value can also be <ph id="ph1">`null`</ph>; see <ph id="ph2">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph>.</source>
          <target state="translated">Значение может быть также <ph id="ph1">`null`</ph>; в разделе <ph id="ph2">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.IProvideValueTarget.TargetObject">
          <source>When using the service, it is particularly important not to modify the object referenced by the <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A&gt;</ph> property, or other objects referenced by that object as properties that are not specifically the value-conversion case you are handling.</source>
          <target state="translated">При использовании службы, особенно важно не может изменять объект, упоминаемый в <ph id="ph1">&lt;xref:System.Windows.Markup.IProvideValueTarget.TargetObject%2A&gt;</ph> свойства или другие объекты, которые ссылается этот объект как свойства, которые не являются специально преобразования значений случае его обработки.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.IProvideValueTarget.TargetObject">
          <source>For WPF specifically, changing the target object could cause unexpected changes that would invalidate the WPF  property system.</source>
          <target state="translated">Для WPF в частности, изменения целевого объекта может вызвать непредвиденные изменения, которые сделают недействительными систему свойств WPF.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.IProvideValueTarget.TargetProperty">
          <source>Gets an identifier for the target property being reported.</source>
          <target state="translated">Получает идентификатор сообщаемого целевого свойства.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.IProvideValueTarget.TargetProperty">
          <source>An identifier for the target property being reported.</source>
          <target state="translated">Идентификатор сообщаемого целевого свойства.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.IProvideValueTarget.TargetProperty">
          <source>The value can also be <ph id="ph1">`null`</ph>; see <ph id="ph2">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph>.</source>
          <target state="translated">Значение может быть также <ph id="ph1">`null`</ph>; в разделе <ph id="ph2">&lt;xref:System.Windows.Markup.IProvideValueTarget&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.IProvideValueTarget.TargetProperty">
          <source>WPF Usage Notes</source>
          <target state="translated">Примечания об использовании WPF</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.IProvideValueTarget.TargetProperty">
          <source>For a dependency property, the default WPF service may return a <ph id="ph1">&lt;xref:System.Windows.DependencyProperty&gt;</ph>, such that the markup extension or type converter can use metadata.</source>
          <target state="translated">Для свойства зависимостей, могут возвращать служба по умолчанию WPF <ph id="ph1">&lt;xref:System.Windows.DependencyProperty&gt;</ph>, таким образом, что метаданные можно использовать для расширения или типа преобразователя разметки.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.IProvideValueTarget.TargetProperty">
          <source>Otherwise, the returned object can be a <ph id="ph1">&lt;xref:System.Reflection.PropertyInfo&gt;</ph> for a CLR property.</source>
          <target state="translated">В противном случае возвращается объект может быть <ph id="ph1">&lt;xref:System.Reflection.PropertyInfo&gt;</ph> для свойства среды CLR.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>