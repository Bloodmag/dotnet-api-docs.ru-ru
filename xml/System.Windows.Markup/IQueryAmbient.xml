<Type Name="IQueryAmbient" FullName="System.Windows.Markup.IQueryAmbient">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="5b1419b6b996eab65fbdcda1f6ed9782df12197d" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36502768" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IQueryAmbient" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IQueryAmbient" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IQueryAmbient" />
  <TypeSignature Language="VB.NET" Value="Public Interface IQueryAmbient" />
  <TypeSignature Language="C++ CLI" Value="public interface class IQueryAmbient" />
  <TypeSignature Language="F#" Value="type IQueryAmbient = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>Запрашивает, должно ли заданное свойство в текущей области обрабатываться как свойство окружения.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Внешнего свойства предназначено для сокращения времени синтаксического анализа путем информирования средство записи объектов XAML, чтобы избежать создания экземпляров определенных объектов в случаях, когда известно, что объекты, для значений, которые являются временными и не полезны для обычной времени выполнения приложение. Обычно подстановки XAML или обработка XAML метода доступа get свойства должны создать такие объекты, чтобы заполнить представление графа объектов со значениями готовые к использованию.  
  
 <xref:System.Windows.Markup.IQueryAmbient> содержит один из элементов: <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>.  
  
 <xref:System.Windows.Markup.IQueryAmbient> представляет собой механизм параллельных <xref:System.Windows.Markup.AmbientAttribute>. <xref:System.Windows.Markup.IQueryAmbient> — специализированный механизм, который позволяет избежать использования отражения для получения сведений, а также могут act situationally (данный объект может выбрать отчет `true` или `false` для <xref:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable%2A>), тогда как атрибут является статическим Анализ). <xref:System.Windows.Markup.AmbientAttribute> представляет общий механизм, который может использоваться средства записи объектов XAML и, которые коррелируют выделенные свойства системы типов XAML обычно <xref:System.Xaml.XamlMember.IsAmbient%2A> и <xref:System.Xaml.XamlType.IsAmbient%2A>.  
  
## <a name="wpf-implementations-of-iqueryambient"></a>Реализация WPF IQueryAmbient  
 В WPF <xref:System.Windows.Markup.IQueryAmbient> используется для процесса поиска словарь ресурсов. Процесс поиска возвращает последовательные `Resources` значений повсюду в логическом дереве WPF, двигаясь от корня области видимости ресурса до либо ключ найден, или определяется ключ не существует в области. Как правило, это потребует создания экземпляра <xref:System.Windows.ResourceDictionary> каждый раз для получения результатов. Объявление содержимого `Resources` как свойство окружения, если `Resources` существует оптимизирует данный процесс поиска. В WPF этот интерфейс реализуется в следующих случаях:  
  
-   <xref:System.Windows.FrameworkElement> реализует <xref:System.Windows.FrameworkElement.System%23Windows%23Markup%23IQueryAmbient%23IsAmbientPropertyAvailable%2A> для возврата `true` все имена свойств, если он содержит существующий <xref:System.Windows.ResourceDictionary> для <xref:System.Windows.FrameworkElement.Resources%2A>, и при условии, что запрос не относится к <xref:System.Windows.FrameworkElement.Resources%2A> самого свойства.  
  
-   <xref:System.Windows.Style> реализует один и тот же шаблон для его <xref:System.Windows.Style.Resources%2A>.  
  
-   <xref:System.Windows.Application> реализует один и тот же шаблон для его <xref:System.Windows.Application.Resources%2A>.  
  
-   <xref:System.Windows.FrameworkContentElement> реализует один и тот же шаблон для его <xref:System.Windows.FrameworkContentElement.Resources%2A>.  
  
-   <xref:System.Windows.FrameworkTemplate> реализует один и тот же шаблон для его <xref:System.Windows.FrameworkTemplate.Resources%2A>. Также сообщает <xref:System.Windows.FrameworkTemplate.Template%2A> содержимого, но окружения возвращает `false` при запросе <xref:System.Windows.FrameworkTemplate.Template%2A> сам.  
  
-   В каждом из этих случаев, соответствующий `Resources` свойство (и <xref:System.Windows.FrameworkTemplate.Template%2A>) атрибутами как <xref:System.Windows.Markup.AmbientAttribute>. Стандартное использование-запрос для свойств, которые не являются <xref:System.Windows.Markup.AmbientAttribute> атрибутами свойства объекта, который определяет интерфейс. Другими словами при условии, что словарь ресурсов существует для обеспечения потенциальных значение времени выполнения при создании графа объектов, любое свойство, помимо контейнер свойств словарь ресурсов может обрабатываться как свойство окружения.  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Xaml.XamlMember.IsAmbient" />
  </Docs>
  <Members>
    <Member MemberName="IsAmbientPropertyAvailable">
      <MemberSignature Language="C#" Value="public bool IsAmbientPropertyAvailable (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsAmbientPropertyAvailable(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsAmbientPropertyAvailable (propertyName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsAmbientPropertyAvailable(System::String ^ propertyName);" />
      <MemberSignature Language="F#" Value="abstract member IsAmbientPropertyAvailable : string -&gt; bool" Usage="iQueryAmbient.IsAmbientPropertyAvailable propertyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">Имя свойства, состояние окружения которого необходимо проверить.</param>
        <summary>Запрашивает, можно ли считать заданное именованное свойство в текущей области свойством окружения.</summary>
        <returns>Значение <see langword="true" />, если запрашиваемое свойство можно считать свойством окружения; в противном случае — значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>