<Type Name="IUriContext" FullName="System.Windows.Markup.IUriContext">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="667f173923c3c295357076c22223354662b751bd" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37559993" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IUriContext" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IUriContext" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.IUriContext" />
  <TypeSignature Language="VB.NET" Value="Public Interface IUriContext" />
  <TypeSignature Language="C++ CLI" Value="public interface class IUriContext" />
  <TypeSignature Language="F#" Value="type IUriContext = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("PresentationCore, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Представляет службу, которая может использовать контекст приложения для разрешения предоставленного относительного URI в абсолютный URI.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.IUriContext> реализовано, как служба позволяет преобразователям типов используется контекст конкретного приложения, которые могут быть готовы выполнить свойство URI-типа.  
  
 Преобразователи типов или расширения разметки может запросить <xref:System.Windows.Markup.IUriContext> как услуга в контексте службы, предоставляемые средство записи объектов XAML, когда средство записи объектов XAML вызывает поведение преобразования значения. Дополнительные сведения см. в разделе [Type Converters and Markup Extensions for XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md) и [служебные контексты, доступные для расширений разметки и преобразователей типов](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).  
  
 <xref:System.Windows.Markup.IUriContext> не только для преобразования значений и контекст службы. Может также реализовывать логику класса для элементов пользовательского интерфейса или другие классы, которые поддерживают включения <xref:System.Windows.Markup.IUriContext> службы как распознанный шаблон, который дочерние элементы можно вызвать для информацию о базовом URI, или хранить информацию о базовом URI, полученный из XAML синтаксический анализ корневой элемент.  
  
 В предыдущих версиях .NET Framework этот интерфейс существовали в сборке PresentationCore относящихся к WPF. В [!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)], <xref:System.Windows.Markup.IUriContext> находится в сборке System.Xaml. Дополнительные сведения см. в разделе [типы, перенесенные из WPF в System.Xaml](~/docs/framework/xaml-services/types-migrated-from-wpf-to-system-xaml.md).  
  
## <a name="wpf-usage-notes"></a>Примечания об использовании WPF  
 Примеры сценариев для <xref:System.Windows.Markup.IUriContext> существуют в WPF.  
  
 Пример преобразователя значений <xref:System.Windows.Media.FontFamilyConverter> класс можно использовать относительный URI, который предоставляется для свойств, таких как <xref:System.Windows.Controls.Page.FontFamily%2A?displayProperty=nameWithType>, если <xref:System.Windows.Markup.IUriContext> доступен как служба на <xref:System.ComponentModel.ITypeDescriptorContext> ввода.  
  
 В качестве примера элемент варианта <xref:System.Windows.Documents.Hyperlink> реализует <xref:System.Windows.Markup.IUriContext> таким образом, чтобы его можно передать через базовые значения URI при синтаксическом анализе, который затем изменяет <xref:System.Windows.Documents.Hyperlink.NavigateUri%2A>.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="public Uri BaseUri { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.IUriContext.BaseUri" />
      <MemberSignature Language="VB.NET" Value="Public Property BaseUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseUri { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BaseUri : Uri with get, set" Usage="System.Windows.Markup.IUriContext.BaseUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает базовый универсальный идентификатор ресурса (URI) текущего контекста приложения.</summary>
        <value>Базовый универсальный идентификатор ресурса (URI) контекста приложения.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>