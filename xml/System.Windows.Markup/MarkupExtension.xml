<Type Name="MarkupExtension" FullName="System.Windows.Markup.MarkupExtension">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3746808349956fe51624132285df9c875558e01e" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36502598" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class MarkupExtension" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit MarkupExtension extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.MarkupExtension" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class MarkupExtension" />
  <TypeSignature Language="C++ CLI" Value="public ref class MarkupExtension abstract" />
  <TypeSignature Language="F#" Value="type MarkupExtension = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("WindowsBase, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Предоставляет базовый класс для реализаций расширений разметки XAML, которые могут поддерживаться службами XAML платформы .NET Framework и другими средствами чтения и записи XAML.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Расширения разметки возвращают объекты вызывающим объектам, на основе ввода значений атрибутов строки или элементов разметки в XAML. Расширения разметки возвращают объекты в более сложных так, как можно выполнить только преобразователей типов. Средство записи объектов XAML вызывает преобразователь типов, так как тип или член имеет реализация преобразователя типов, связанных с ним. Из среды CLR для ссылок, это означает, что тип или член является <xref:System.ComponentModel.TypeConverterAttribute> атрибутами. С точки зрения системы типов XAML, это означает, что тип или член XAML имеет значение для его `TypeConverter` свойство. Вызов преобразователя типов привязан к определению типа или свойства и всегда вызывается в этих случаях обработки XAML. В отличие от этого расширения разметки несколько в группе управления из пользовательского кода и разметки, созданной пользователем и могут применяться каждый раз, когда требует сценарий приложения. Расширения разметки может вызываться и может использоваться для задания значений другой член типа, при условии, что это значение назначается возвращаемого типа расширения разметки.  
  
 Сведения о создании пользовательского расширения разметки см. в разделе <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A>. Дополнительные сведения о расширениях разметки в целом см. в разделе [расширения разметки для XAML Обзор](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md). При создании в WPF и использование или Создание расширений разметки для XAML актуальную информацию можно найти в разделе [расширения разметки и WPF XAML](~/docs/framework/wpf/advanced/markup-extensions-and-wpf-xaml.md).  
  
 <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> Можно использовать метод каждой реализации расширения разметки <xref:System.IServiceProvider> во время выполнения, которая может предоставить контекст. Это <xref:System.IServiceProvider> запрашиваться для определенных служб, передающих данные, такие как <xref:System.Windows.Markup.IProvideValueTarget> или <xref:System.Windows.Markup.IXamlTypeResolver>. Дополнительные сведения о контекстах службы для расширения разметки см. в разделе [служебные контексты, доступные для расширений разметки и преобразователей типов](~/docs/framework/xaml-services/service-contexts-available-to-type-converters-and-markup-extensions.md).  
  
 Производные классы должны иметь атрибут <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute> для информирования потребителей наиболее подходящим возвращаемого типа из расширения разметки <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> реализации.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected MarkupExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.MarkupExtension.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; MarkupExtension();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса, производного от класса <see cref="T:System.Windows.Markup.MarkupExtension" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.MarkupExtension> Абстрактного класса не удерживает закрытые значения, в которых требуется инициализация.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Расширения функциональности разметки следует определить свой собственный открытый конструктор по умолчанию. Кроме того расширения разметки должны реализовывать конструкторы, которые подходят для предполагаемых возможностей расширения и разметки. Дополнительные сведения см. в разделе [расширения разметки для XAML Overview](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md).</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ProvideValue">
      <MemberSignature Language="C#" Value="public abstract object ProvideValue (IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ProvideValue(class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function ProvideValue (serviceProvider As IServiceProvider) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Object ^ ProvideValue(IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="abstract member ProvideValue : IServiceProvider -&gt; obj" Usage="markupExtension.ProvideValue serviceProvider" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceProvider">Вспомогательный объект поставщика служб, способный предоставлять службы для расширения разметки.</param>
        <summary>При реализации в производном классе возвращает объект, предоставляемый как значение целевого свойства для данного расширения разметки.</summary>
        <returns>Значение объекта, которое необходимо присвоить свойству, где применяется расширение.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда обработчик XAML обрабатывает значение узла и член типа, является расширением разметки, он вызывает <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> метод этого расширения разметки и записывает результат в поток графика или сериализации объекта. Средство записи объектов XAML передает контекст службы для каждой такой реализации через `serviceProvider` параметра.  
  
 См. раздел «Примечания для реализации» Дополнительные сведения о том, как реализовать <xref:System.Windows.Markup.MarkupExtension.ProvideValue%2A> в пользовательское расширение разметки.  
  
## <a name="wpf-usage-notes"></a>Примечания об использовании WPF  
  
> [!IMPORTANT]
>  Классы WPF, которые имеют определенные взаимодействия с множествами разметки не следует полагаться на <xref:System.Windows.Markup.IReceiveMarkupExtension> для [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] реализации. Используйте <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>-вместо этого обратные вызовы с атрибутами.  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Общие службы, возвращенные поставщиком по умолчанию службы, обычно доступные для пользовательской или существующей <see cref="T:System.Windows.Markup.MarkupExtension" /> реализации включают следующие основные службы.  - <see cref="T:System.Windows.Markup.IProvideValueTarget" /> сообщает ссылка на объект и свойство идентификатора из контекста, в которых используется расширение разметки - <see cref="T:System.Windows.Markup.IXamlTypeResolver" /> предоставляет службу, которая копирует запись поведение, которое может предоставить общие объектов XAML <see cref="T:System.Type" /> на основе XAML Имя типа. При необходимости, имя может включать префикс для сопоставленного пространства имен XAML.  - <see cref="T:System.Xaml.IXamlSchemaContextProvider" /> предоставляет контекст активной схемы XAML напрямую. Из отчета <see cref="T:System.Xaml.XamlSchemaContext" />, можно получить XAML сведения о контексте схемы таких как сборки, сопоставленных для поддержки типов, предпочтительный префикс в сборках, перечислены каждого <see cref="T:System.Xaml.XamlType" /> в сборки и т. д.  -Включить в другие службы, доступные для более специализированных сценариев расширения разметки:- <see cref="T:System.Windows.Markup.IUriContext" />   
  
    -    <see cref="T:System.Xaml.IAmbientProvider" />   
  
    -    <see cref="T:System.Xaml.IDestinationTypeProvider" />   
  
    -    <see cref="T:System.Xaml.IRootObjectProvider" />   
  
    -    <see cref="T:System.Xaml.IXamlNameResolver" />   
  
    -    <see cref="T:System.Xaml.IXamlNamespaceResolver" /> Потенциально реализации <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> можно игнорировать <paramref name="serviceProvider" /> параметра. Это применяется для некоторых основных сценариев, где контекст не вообще не требуется для возврата значения.  В типичных сценариях использования служб XAML .NET Framework и реализовано объектов XAML предоставляет модули записи поставщика услуг всем методам преобразователя значений, которые вызываются во время XAML обработки. Однако для надежности, необходимо предоставить пути кода для значений null для поставщика услуг, так и для запрошенных служб. Значения NULL применяется в случае использования расширения разметки применяется в случае когда обычной службы поддержки, обеспечиваемой инфраструктуру процессора XAML не доступен.  Дополнительные сведения о доступных служб из контекста поставщика службы XAML и способы их использования см. в разделе [преобразователи типов или расширения разметки для XAML](~/docs/framework/xaml-services/type-converters-and-markup-extensions-for-xaml.md).  Реализации, которым требуется определенная служба доступна для создания полезной <see cref="M:System.Windows.Markup.MarkupExtension.ProvideValue(System.IServiceProvider)" /> ожидаемый результат могут вызывать исключения, если эта служба недоступна. Рекомендуемые исключение, является <see cref="T:System.InvalidOperationException" />.  Реализация также могут вызывать исключения, если один из аргументов, необходимые для пользовательского расширения разметки для предоставления имеет значение null, является недопустимым для типа данных или не содержит значение, обработки способен расширения разметки. Рекомендуемые исключение, является <see cref="T:System.InvalidOperationException" />.</para>
        </block>
        <altmember cref="T:System.Windows.Markup.IProvideValueTarget" />
        <altmember cref="T:System.Windows.Markup.IXamlTypeResolver" />
      </Docs>
    </Member>
  </Members>
</Type>