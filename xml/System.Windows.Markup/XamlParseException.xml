<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XamlParseException.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5f7785f59cbc386e6af15aa0c6eb7b76532178de9.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">f7785f59cbc386e6af15aa0c6eb7b76532178de9</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.XamlParseException">
          <source>Represents the exception class for parser-specific exceptions from a WPF XAML parser.</source>
          <target state="translated">Представляет класс исключений для связанных с синтаксическим анализатором исключений из синтаксического анализатора XAML WPF.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.XamlParseException">
          <source>This exception is used in XAML API or WPF XAML parser operations from .NET Framework 3.0 and .NET Framework 3.5, or for specific use of the WPF XAML parser by calling <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlReader" /&gt;</ph> API.</source>
          <target state="translated">Это исключение используется в операциях синтаксического анализатора API XAML или XAML WPF из платформ .NET Framework 3.0 и .NET Framework 3.5, а также для выполнения специальных задач синтаксического анализатора XAML WPF путем вызова API <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XamlParseException">
          <source><ph id="ph1">&lt;xref:System.Windows.Markup.XamlParseException&gt;</ph> is used only for the WPF-implemented XAML parser that performs the XAML parsing and loading for WPF applications.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Markup.XamlParseException&gt;</ph> используется только для анализатор реализованы в WPF XAML, который выполняет синтаксический анализ и Загрузка XAML для приложений WPF.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XamlParseException">
          <source>Specifically, the exception is only relevant when an application targets <ph id="ph1">[!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)]</ph> and <ph id="ph2">[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]</ph>.</source>
          <target state="translated">В частности, исключение только в том случае, если обращается приложение <ph id="ph1">[!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)]</ph> и <ph id="ph2">[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]</ph>.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XamlParseException">
          <source>The exception can also originate from user code in run-time calls to APIs that hook up the WPF-implemented XAML parser to load XAML from within a running WPF application (for example, calls to <ph id="ph1">&lt;xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=nameWithType&gt;</ph>).</source>
          <target state="translated">Исключение также могут быть получены из пользовательского кода в вызовы интерфейсов API, подключить средство синтаксического анализа XAML реализованы в WPF для загрузки XAML из в работающем приложении WPF во время выполнения (например, вызовы <ph id="ph1">&lt;xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=nameWithType&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XamlParseException">
          <source>For <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>, the <ph id="ph2">&lt;xref:System.Xaml.XamlParseException&gt;</ph> exception that typically reports XAML processing exceptions is defined in a different namespace (<ph id="ph3">&lt;xref:System.Xaml&gt;</ph>) and a different assembly (System.Xaml).</source>
          <target state="translated">Для <ph id="ph1">[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]</ph>, <ph id="ph2">&lt;xref:System.Xaml.XamlParseException&gt;</ph> исключение, которое сообщает исключения обработки XAML, обычно определяется в другое пространство имен (<ph id="ph3">&lt;xref:System.Xaml&gt;</ph>) и другой сборке (System.Xaml).</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XamlParseException">
          <source>Unless you are writing an equivalent to the WPF XAML parser or working with <ph id="ph1">[!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)]</ph> and <ph id="ph2">[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]</ph> targeting, you generally will not throw <ph id="ph3">&lt;xref:System.Windows.Markup.XamlParseException&gt;</ph> from your own code.</source>
          <target state="translated">Если только не записи эквивалент для синтаксического анализа WPF XAML и работа с <ph id="ph1">[!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)]</ph> и <ph id="ph2">[!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]</ph> нацеливанием, вы обычно не будет вызывать <ph id="ph3">&lt;xref:System.Windows.Markup.XamlParseException&gt;</ph> из собственного кода.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XamlParseException">
          <source>However, handling for the exception is sometimes necessary.</source>
          <target state="translated">Тем не менее обработка для исключения иногда это необходимо.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XamlParseException">
          <source>For application scenarios, where you may want to suppress XAML parse errors, a <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher.UnhandledException&gt;</ph> event handler at the application level is one way to handle a run-time <ph id="ph3">&lt;xref:System.Windows.Markup.XamlParseException&gt;</ph>.</source>
          <target state="translated">Для сценариев приложений, где вы хотите отключить вывод ошибок синтаксического анализа XAML, <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher.UnhandledException&gt;</ph> обработчик событий на уровне приложения — один из способов обработки времени выполнения <ph id="ph3">&lt;xref:System.Windows.Markup.XamlParseException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XamlParseException">
          <source>Whether to suppress exceptions or let them surface to user code depends on how you design your application for purposes of loading XAML, and the trust level that you assign to the XAML your application loads.</source>
          <target state="translated">Необходимость подавления исключений или их вывода в пользовательском коде зависит от того, как вы разрабатываете приложение для целей загрузки XAML, и загружает уровень доверия, присвоенного XAML вашего приложения.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XamlParseException">
          <source>For more information, see <bpt id="p1">[</bpt>XAML Security Considerations<ept id="p1">](~/docs/framework/xaml-services/xaml-security-considerations.md)</ept> or "XAML Security" section of <bpt id="p2">[</bpt>XAML Overview (WPF)<ept id="p2">](~/docs/framework/wpf/advanced/xaml-overview-wpf.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>соображения безопасности XAML<ept id="p1">](~/docs/framework/xaml-services/xaml-security-considerations.md)</ept> или разделе «Безопасность XAML» <bpt id="p2">[</bpt>Обзор XAML (WPF)<ept id="p2">](~/docs/framework/wpf/advanced/xaml-overview-wpf.md)</ept>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XamlParseException">
          <source>For pages of an application, when the <ph id="ph1">&lt;xref:System.Windows.Markup.XamlParseException&gt;</ph> is thrown, it is usually in the context of the <ph id="ph2">`InitializeComponent`</ph> call made by your page class, which is the entry point for the WPF application model's usage of the WPF XAML parser at the per-page level.</source>
          <target state="translated">Для страницы приложения когда <ph id="ph1">&lt;xref:System.Windows.Markup.XamlParseException&gt;</ph> — исключение, это происходит в контексте <ph id="ph2">`InitializeComponent`</ph> вызова класса page, который является точкой входа для использования модели приложения WPF средства синтаксического анализа WPF XAML на уровне отдельных страниц.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XamlParseException">
          <source>Therefore another possible handling strategy is to place <ph id="ph1">`try/catch`</ph> blocks in <ph id="ph2">`InitializeComponent`</ph>.</source>
          <target state="translated">Поэтому другой возможные стратегии обработки заключается в размещении <ph id="ph1">`try/catch`</ph> блоков в <ph id="ph2">`InitializeComponent`</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Markup.XamlParseException">
          <source>However, this technique does not integrate well with templates, visual design surfaces and other generated sources that hook up <ph id="ph1">`InitializeComponent`</ph>.</source>
          <target state="translated">Однако этот способ не интегрируется с шаблонами, визуальной области конструирования и другие созданные источники, обработчик вверх <ph id="ph1">`InitializeComponent`</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="T:System.Windows.Markup.XamlParseException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlParseException" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlParseException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlParseException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlParseException" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlParseException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlParseException.#ctor(System.String)">
          <source>The exception message.</source>
          <target state="translated">Сообщение об исключении.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlParseException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlParseException" /&gt;</ph> class, using the specified exception message string.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlParseException" /&gt;</ph>, используя указанную строку сообщения об исключении.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Contains all the information that is required to serialize or deserialize the object.</source>
          <target state="translated">Содержит всю информацию, необходимую для выполнения сериализации или десериализации объекта.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The source and destination of a serialized stream.</source>
          <target state="translated">Источник и назначение сериализованного потока.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlParseException" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlParseException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.XamlParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is used for serialization when marshaling an exception of this type across an application domain or machine boundary.</source>
          <target state="translated">Этот конструктор используется для сериализации, при маршалинге через границы домена или компьютера приложения исключения этого типа.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Exception)">
          <source>The exception message.</source>
          <target state="translated">Сообщение об исключении.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Exception)">
          <source>The initial exception that occurred.</source>
          <target state="translated">Происшедшее начальное исключение.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlParseException" /&gt;</ph> class, using the specified exception message string and inner exception.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlParseException" /&gt;</ph>, используя указанную строку сообщения об исключении и внутреннее исключение.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception.</source>
          <target state="translated">Исключение, созданное как прямой результат предыдущего исключения должны включать ссылку на предыдущее исключение.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id="ph2">`null`</ph> if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> возвращает значение, переданное конструктору, или значение <ph id="ph2">`null`</ph>, если свойство <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> не передает конструктору значение внутреннего исключения.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Int32,System.Int32)">
          <source>The exception message.</source>
          <target state="translated">Сообщение об исключении.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Int32,System.Int32)">
          <source>The line number where the exception occurred.</source>
          <target state="translated">Номер строки, где произошло исключение.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Int32,System.Int32)">
          <source>The position in the line at which the exception occurred.</source>
          <target state="translated">Позиция в строке, в которой произошло исключение.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Int32,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlParseException" /&gt;</ph> class, using the specified exception message string, and the specified line number and position in the line.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlParseException" /&gt;</ph>, используя указанную строку сообщения об исключении, указанный номер строки и позицию в строке.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Int32,System.Int32,System.Exception)">
          <source>The exception message.</source>
          <target state="translated">Сообщение об исключении.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Int32,System.Int32,System.Exception)">
          <source>The line number where the exception occurred.</source>
          <target state="translated">Номер строки, где произошло исключение.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Int32,System.Int32,System.Exception)">
          <source>The position in the line at which the exception occurred.</source>
          <target state="translated">Позиция в строке, в которой произошло исключение.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Int32,System.Int32,System.Exception)">
          <source>The initial exception that occurred.</source>
          <target state="translated">Происшедшее начальное исключение.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Int32,System.Int32,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlParseException" /&gt;</ph> class, using the specified exception message, inner exception, line number, and position in the line.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Windows.Markup.XamlParseException" /&gt;</ph>, используя указанное сообщение об исключении, внутреннее исключение, номер строки и позицию в строке.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Int32,System.Int32,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception.</source>
          <target state="translated">Исключение, созданное как прямой результат предыдущего исключения должны включать ссылку на предыдущее исключение.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Int32,System.Int32,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or <ph id="ph2">`null`</ph> if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> возвращает значение, переданное конструктору, или значение <ph id="ph2">`null`</ph>, если свойство <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> не передает конструктору значение внутреннего исключения.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.XamlParseException.BaseUri">
          <source>Gets base URI information when the exception is thrown.</source>
          <target state="translated">Получает информацию о базовом URI, когда возникает исключение.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.XamlParseException.BaseUri">
          <source>The parser context base URI.</source>
          <target state="translated">Базовый URI контекста синтаксического анализатора.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.XamlParseException.BaseUri">
          <source>Base URI is potentially available because of parser context when the exception occurred.</source>
          <target state="translated">Базовый URI потенциально доступной из-за контекст анализатора возникновения исключения.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.XamlParseException.BaseUri">
          <source>Knowing the base URI can be useful for debugging cases where a resource resolution error is the underlying cause.</source>
          <target state="translated">Знание базового URI может быть полезна для отладки в случаях, когда ошибка разрешение ресурсов основную причину.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlParseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The serialization information object to add the serialization data to.</source>
          <target state="translated">Объект информации сериализации для добавления в него данных сериализации.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlParseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The destination for this serialization.</source>
          <target state="translated">Целевой объект этой сериализации.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.Markup.XamlParseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Gets the data that is required to serialize the specified object by populating the specified <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph> object.</source>
          <target state="translated">Получает данные, необходимые для сериализации заданного объекта путем заполнения заданного объекта <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.SerializationInfo" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.XamlParseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source><ph id="ph1">&lt;xref:System.Windows.Markup.XamlParseException.GetObjectData%2A&gt;</ph> sets a <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> object with all the exception object data targeted for serialization.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Markup.XamlParseException.GetObjectData%2A&gt;</ph> Задает <ph id="ph2">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> все данные объекта исключения, предназначенные для сериализации объекта.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.XamlParseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>During deserialization, the exception is reconstituted from the <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph> transmitted over the stream.</source>
          <target state="translated">В процессе десериализации исключение воссоздается из объекта <ph id="ph1">&lt;xref:System.Runtime.Serialization.SerializationInfo&gt;</ph>, переданного в потоке.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.XamlParseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>for providing serialization services.</source>
          <target state="translated">для предоставления служб сериализации.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Markup.XamlParseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Associated enumeration: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph> Security action: <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.Demand" /&gt;</ph>.</source>
          <target state="translated">Соответствующее перечисление: <ph id="ph1">&lt;see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /&gt;</ph> действие по обеспечению безопасности: <ph id="ph2">&lt;see cref="M:System.Security.PermissionSet.Demand" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.XamlParseException.KeyContext">
          <source>Gets or sets the key value of the item in a dictionary where the exception occurred.</source>
          <target state="translated">Получает или задает ключевое значение элемента в словаре, где произошло исключение.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.XamlParseException.KeyContext">
          <source>The relevant XAML <ph id="ph1">&lt;see langword="x:Key" /&gt;</ph> value.</source>
          <target state="translated">Применимое значение <ph id="ph1">&lt;see langword="x:Key" /&gt;</ph> XAML.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.XamlParseException.LineNumber">
          <source>Gets the line number where the exception occurred.</source>
          <target state="translated">Получает номер строки, где произошло исключение.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.XamlParseException.LineNumber">
          <source>The line number.</source>
          <target state="translated">Номер строки.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.XamlParseException.LinePosition">
          <source>Gets the position in the line where the exception occurred.</source>
          <target state="translated">Получает положение в строке, где произошло изменение.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.XamlParseException.LinePosition">
          <source>The line position.</source>
          <target state="translated">Позиция в строке.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.XamlParseException.NameContext">
          <source>Gets or sets the XAML name of the object where the exception occurred.</source>
          <target state="translated">Получает или задает XAML-имя объекта, где произошло исключение.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.XamlParseException.NameContext">
          <source>The XAML name of the object.</source>
          <target state="translated">XAML-имя объекта.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.Windows.Markup.XamlParseException.UidContext">
          <source>Gets or sets the <bpt id="p1">[</bpt>x:Uid Directive<ept id="p1">](~/docs/framework/xaml-services/x-uid-directive.md)</ept> of the object where the exception occurred.</source>
          <target state="translated">Возвращает или задает <bpt id="p1">[</bpt>x:Uid Directive<ept id="p1">](~/docs/framework/xaml-services/x-uid-directive.md)</ept> объекта, где произошло исключение.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Markup.XamlParseException.UidContext">
          <source>The value of the <ph id="ph1">&lt;see langword="Uid" /&gt;</ph> string.</source>
          <target state="translated">Значение строки <ph id="ph1">&lt;see langword="Uid" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>