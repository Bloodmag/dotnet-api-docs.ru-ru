<Type Name="XamlParseException" FullName="System.Windows.Markup.XamlParseException">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="373f7f4916b467da794aa4eaa281cb1a63bccceb" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37560058" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlParseException : SystemException" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit XamlParseException extends System.SystemException" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Markup.XamlParseException" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlParseException&#xA;Inherits SystemException" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlParseException : SystemException" />
  <TypeSignature Language="F#" Value="type XamlParseException = class&#xA;    inherit SystemException" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.SystemException</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Represents the exception class for parser-specific exceptions from a WPF XAML parser. This exception is used in XAML API or WPF XAML parser operations from .NET Framework 3.0 and .NET Framework 3.5, or for specific use of the WPF XAML parser by calling <see cref="T:System.Windows.Markup.XamlReader" /> API.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.XamlParseException> используется только для синтаксического анализатора XAML реализованы в WPF, выполняет XAML, анализа и загрузки для приложений WPF. В частности, исключение только в том случае, если приложение предназначено [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)] и [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)]. Исключение также могут быть получены из пользовательского кода в вызовы интерфейсов API, подключить средство синтаксического анализа реализованы в WPF XAML для загрузки в работающем приложении WPF XAML из среды выполнения (например, вызовы <xref:System.Windows.Markup.XamlReader.Load%2A?displayProperty=nameWithType>).  
  
 Для [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], <xref:System.Xaml.XamlParseException> исключение, которое обычно сообщает исключения обработки XAML определяется в другое пространство имен (<xref:System.Xaml>) и другую сборку (сборку System.Xaml).  
  
 Если при написании эквивалент в средство синтаксического анализа XAML WPF или работа с [!INCLUDE[net_v30_short](~/includes/net-v30-short-md.md)] и [!INCLUDE[net_v35_short](~/includes/net-v35-short-md.md)] нацеливания, вы обычно не вызывает исключение <xref:System.Windows.Markup.XamlParseException> из собственного кода. Тем не менее обработка для исключения иногда это необходимо. Для сценариев приложений, где вы хотите отключить ошибки синтаксического анализа XAML, <xref:System.Windows.Threading.Dispatcher> <xref:System.Windows.Threading.Dispatcher.UnhandledException> обработчик событий на уровне приложения является одним из способов обработки времени выполнения <xref:System.Windows.Markup.XamlParseException>. Нужно ли подавлять исключения их вывода в пользовательском коде зависит от того, как разработать приложение для целей загрузки XAML, и загружает уровень доверия, присвоенного XAML приложения. Дополнительные сведения см. в разделе [соображения безопасности XAML](~/docs/framework/xaml-services/xaml-security-considerations.md) или в разделе «Безопасность XAML» [Обзор XAML (WPF)](~/docs/framework/wpf/advanced/xaml-overview-wpf.md).  
  
 Для страницы приложения когда <xref:System.Windows.Markup.XamlParseException> является исключение, это обычно в контексте `InitializeComponent` вызова, сделанного классом страницы, который представляет собой точку входа для использования модели приложения WPF средства синтаксического анализа XAML WPF на уровне отдельных страниц. Таким образом другая возможная стратегия обработки заключается в размещении `try/catch` блоков в `InitializeComponent`. Тем не менее, этот метод не поддерживает интеграцию с шаблонами, поверхности визуальной разработки и другие созданные источники, которые вверх `InitializeComponent`.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException" /> class.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlParseException ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlParseException.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlParseException();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException" /> class.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlParseException (string message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlParseException.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlParseException(System::String ^ message);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.XamlParseException : string -&gt; System.Windows.Markup.XamlParseException" Usage="new System.Windows.Markup.XamlParseException message" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="message">The exception message.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException" /> class, using the specified exception message string.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlParseException (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlParseException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlParseException(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.XamlParseException : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; System.Windows.Markup.XamlParseException" Usage="new System.Windows.Markup.XamlParseException (info, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">Contains all the information that is required to serialize or deserialize the object.</param>
        <param name="context">The source and destination of a serialized stream.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор используется для сериализации, при маршалинге исключения этого типа через границы домена или компьютера приложения.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlParseException (string message, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlParseException(System::String ^ message, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.XamlParseException : string * Exception -&gt; System.Windows.Markup.XamlParseException" Usage="new System.Windows.Markup.XamlParseException (message, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">The exception message.</param>
        <param name="innerException">The initial exception that occurred.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException" /> class, using the specified exception message string and inner exception.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Исключение, созданное как прямой результат предыдущего исключения, следует включить ссылки на предыдущее исключение. Свойство <xref:System.Exception.InnerException%2A> возвращает значение, переданное конструктору, или значение `null`, если свойство <xref:System.Exception.InnerException%2A> не передает конструктору значение внутреннего исключения.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlParseException (string message, int lineNumber, int linePosition);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, int32 lineNumber, int32 linePosition) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, lineNumber As Integer, linePosition As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlParseException(System::String ^ message, int lineNumber, int linePosition);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.XamlParseException : string * int * int -&gt; System.Windows.Markup.XamlParseException" Usage="new System.Windows.Markup.XamlParseException (message, lineNumber, linePosition)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="lineNumber" Type="System.Int32" />
        <Parameter Name="linePosition" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="message">The exception message.</param>
        <param name="lineNumber">The line number where the exception occurred.</param>
        <param name="linePosition">The position in the line at which the exception occurred.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException" /> class, using the specified exception message string, and the specified line number and position in the line.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlParseException (string message, int lineNumber, int linePosition, Exception innerException);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string message, int32 lineNumber, int32 linePosition, class System.Exception innerException) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlParseException.#ctor(System.String,System.Int32,System.Int32,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (message As String, lineNumber As Integer, linePosition As Integer, innerException As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlParseException(System::String ^ message, int lineNumber, int linePosition, Exception ^ innerException);" />
      <MemberSignature Language="F#" Value="new System.Windows.Markup.XamlParseException : string * int * int * Exception -&gt; System.Windows.Markup.XamlParseException" Usage="new System.Windows.Markup.XamlParseException (message, lineNumber, linePosition, innerException)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="message" Type="System.String" />
        <Parameter Name="lineNumber" Type="System.Int32" />
        <Parameter Name="linePosition" Type="System.Int32" />
        <Parameter Name="innerException" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="message">The exception message.</param>
        <param name="lineNumber">The line number where the exception occurred.</param>
        <param name="linePosition">The position in the line at which the exception occurred.</param>
        <param name="innerException">The initial exception that occurred.</param>
        <summary>Initializes a new instance of the <see cref="T:System.Windows.Markup.XamlParseException" /> class, using the specified exception message, inner exception, line number, and position in the line.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Исключение, созданное как прямой результат предыдущего исключения, следует включить ссылки на предыдущее исключение. Свойство <xref:System.Exception.InnerException%2A> возвращает значение, переданное конструктору, или значение `null`, если свойство <xref:System.Exception.InnerException%2A> не передает конструктору значение внутреннего исключения.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseUri">
      <MemberSignature Language="C#" Value="public Uri BaseUri { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri BaseUri" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XamlParseException.BaseUri" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseUri As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ BaseUri { Uri ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BaseUri : Uri" Usage="System.Windows.Markup.XamlParseException.BaseUri" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets base URI information when the exception is thrown.</summary>
        <value>Базовый URI контекста синтаксического анализа.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Базовый универсальный код Ресурса доступен потенциально из-за контекста средства синтаксического анализа при возникновении исключения. Знание базового URI может быть полезным для отладки случаев, когда ошибка разрешение ресурсов является основной причиной.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Markup.XamlParseException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="override this.GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="xamlParseException.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">The serialization information object to add the serialization data to.</param>
        <param name="context">The destination for this serialization.</param>
        <summary>Gets the data that is required to serialize the specified object by populating the specified <see cref="T:System.Runtime.Serialization.SerializationInfo" /> object.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Markup.XamlParseException.GetObjectData%2A> Задает <xref:System.Runtime.Serialization.SerializationInfo> объект со всеми данными объекта исключения, предназначенного для сериализации. В процессе десериализации исключение воссоздается из объекта <xref:System.Runtime.Serialization.SerializationInfo>, переданного в потоке.  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.SecurityPermission">для предоставления служб сериализации. Связанное перечисление: <see cref="F:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter" /> действие по обеспечению безопасности: <see cref="M:System.Security.PermissionSet.Demand" />.</permission>
      </Docs>
    </Member>
    <Member MemberName="KeyContext">
      <MemberSignature Language="C#" Value="public object KeyContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object KeyContext" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XamlParseException.KeyContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyContext As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ KeyContext { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.KeyContext : obj" Usage="System.Windows.Markup.XamlParseException.KeyContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the key value of the item in a dictionary where the exception occurred.</summary>
        <value>Соответствующие XAML <see langword="x:Key" /> значение.</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Windows.ResourceDictionary" />
      </Docs>
    </Member>
    <Member MemberName="LineNumber">
      <MemberSignature Language="C#" Value="public int LineNumber { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LineNumber" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XamlParseException.LineNumber" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LineNumber As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LineNumber { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LineNumber : int" Usage="System.Windows.Markup.XamlParseException.LineNumber" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the line number where the exception occurred.</summary>
        <value>Номер строки.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LinePosition">
      <MemberSignature Language="C#" Value="public int LinePosition { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 LinePosition" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XamlParseException.LinePosition" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LinePosition As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int LinePosition { int get(); };" />
      <MemberSignature Language="F#" Value="member this.LinePosition : int" Usage="System.Windows.Markup.XamlParseException.LinePosition" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets the position in the line where the exception occurred.</summary>
        <value>Положение в строке.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NameContext">
      <MemberSignature Language="C#" Value="public string NameContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NameContext" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XamlParseException.NameContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NameContext As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NameContext { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NameContext : string" Usage="System.Windows.Markup.XamlParseException.NameContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the XAML name of the object where the exception occurred.</summary>
        <value>Имя XAML объекта.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UidContext">
      <MemberSignature Language="C#" Value="public string UidContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UidContext" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Markup.XamlParseException.UidContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UidContext As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UidContext { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UidContext : string" Usage="System.Windows.Markup.XamlParseException.UidContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the [x:Uid Directive](~/docs/framework/xaml-services/x-uid-directive.md) of the object where the exception occurred.</summary>
        <value>Значение <see langword="Uid" /> строка.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>