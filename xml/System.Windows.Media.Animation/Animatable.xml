<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Animatable.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58ea9713148e10c8f9a95421b6bcd7b78a6cb4d56.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8ea9713148e10c8f9a95421b6bcd7b78a6cb4d56</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.Animation.Animatable">
          <source>Abstract class that provides animation support.</source>
          <target state="translated">Абстрактный класс, который обеспечивает поддержку анимации.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.Animation.Animatable">
          <source>Animates the specified <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph> using the specified <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.AnimationClock" /&gt;</ph>.</source>
          <target state="translated">Анимирует указанное свойство <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph> с использованием указанного объекта <ph id="ph2">&lt;see cref="T:System.Windows.Media.Animation.AnimationClock" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)">
          <source>The property to animate.</source>
          <target state="translated">Анимируемое свойство.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)">
          <source>The clock with which to animate the specified property.</source>
          <target state="translated">Часы, с помощью которых нужно анимировать заданное свойство.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>clock<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, all animations will be removed from the specified property (but not stopped).</source>
          <target state="translated">Если <bpt id="p1">&lt;c&gt;</bpt>clock<ept id="p1">&lt;/c&gt;</ept> имеет значение <ph id="ph1">&lt;see langword="null" /&gt;</ph>, все анимации будут удалены из заданного свойства (но не остановлены).</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)">
          <source>Applies an <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.AnimationClock" /&gt;</ph> to the specified <ph id="ph2">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">Применяет <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.AnimationClock" /&gt;</ph> к заданному <ph id="ph2">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)">
          <source>If the property is already animated, the <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /&gt;</ph> handoff behavior is used.</source>
          <target state="translated">Если свойство уже анимировано, используется эстафетное поведение <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)">
          <source>Note that using this method to removing clocks from a property does not stop those clocks.</source>
          <target state="translated">Обратите внимание, что с помощью этого метода для удаления часов из свойства не останавливает эти часы.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>The property to animate.</source>
          <target state="translated">Анимируемое свойство.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>The clock with which to animate the specified property.</source>
          <target state="translated">Часы, с помощью которых нужно анимировать заданное свойство.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>handoffBehavior<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /&gt;</ph> and <bpt id="p2">&lt;c&gt;</bpt>clock<ept id="p2">&lt;/c&gt;</ept> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, all animations will be removed from the specified property (but not stopped).</source>
          <target state="translated">Если <bpt id="p1">&lt;c&gt;</bpt>handoffBehavior<ept id="p1">&lt;/c&gt;</ept> имеет значение <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /&gt;</ph>, а <bpt id="p2">&lt;c&gt;</bpt>clock<ept id="p2">&lt;/c&gt;</ept> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>, все анимации будут удалены из заданного свойства (но не остановлены).</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>handoffBehavior<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.Compose" /&gt;</ph> and clock is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, this method has no effect.</source>
          <target state="translated">Если параметр <bpt id="p1">&lt;c&gt;</bpt>handoffBehavior<ept id="p1">&lt;/c&gt;</ept> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>, а clock имеет значение <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.Compose" /&gt;</ph>, этот метод не действует.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>A value that specifies how the new animation should interact with any current animations already affecting the property value.</source>
          <target state="translated">Значение, которое указывает, как новая анимация должна взаимодействовать с любыми текущими анимациями, уже влияющими на значение свойства.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Applies an <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.AnimationClock" /&gt;</ph> to the specified <ph id="ph2">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">Применяет <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.AnimationClock" /&gt;</ph> к заданному <ph id="ph2">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>If the property is already animated, the specified <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.HandoffBehavior" /&gt;</ph> is used.</source>
          <target state="translated">Если свойство уже является анимированным, используется указанное поведение <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.HandoffBehavior" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Note that using this method to remove clocks from a property does not stop those clocks.</source>
          <target state="translated">Обратите внимание, что с помощью этого метода для удаления часов из свойства не останавливает эти часы.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Using the Compose HandoffBehavior</source>
          <target state="translated">Использование составлять руководство.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>When you apply a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to a property using the <ph id="ph4">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id="ph5">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph>, any <ph id="ph6">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects previously associated with that property continue to consume system resources; the timing system will not remove these clocks automatically.</source>
          <target state="translated">При применении <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph>, или <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> к свойству с помощью <ph id="ph4">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id="ph5">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph>, любые <ph id="ph6">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> ранее связанную с ним объекты по-прежнему потребление системных ресурсов; система времени не будет Удаляет эти часы автоматически.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>To avoid performance issues when you apply a large number of clocks using <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph>, you should remove composing clocks from the animated property after they complete.</source>
          <target state="translated">Чтобы избежать проблем с производительностью при применении большое число часов с помощью <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph>, необходимо удалить составляющую часами анимированное свойство после их завершения.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>There are several ways to remove a clock.</source>
          <target state="translated">Есть несколько способов удаления часов.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>To remove all clocks from a property, use the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;</ph> method of the animated object.</source>
          <target state="translated">Чтобы удалить все часы из свойства, используйте <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</ph> или <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;</ph> метод анимированного объекта.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Specify the property being animated as the first parameter, and <ph id="ph1">`null`</ph> as the second.</source>
          <target state="translated">Укажите в качестве первого параметра, анимируемого свойства и <ph id="ph1">`null`</ph> вторым.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>This will remove all animation clocks from the property.</source>
          <target state="translated">Это удалит из свойства все часы анимации.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>To remove a specific <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> from a list of clocks, use the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to retrieve a <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>, then call the <ph id="ph5">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph> method of the <ph id="ph6">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>.</source>
          <target state="translated">Для удаления определенных <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> из списка часов используйте <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> свойство <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> для получения <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>, затем вызовите <ph id="ph5">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph> метод <ph id="ph6">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>This is typically done in the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event handler for a clock.</source>
          <target state="translated">Обычно это делается <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> обработчика событий для часов.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Note that only root clocks can be controlled by a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>; the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of a child clock will return <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Обратите внимание, что только корневые часы могут управляться <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>; <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> свойство дочерних часов вернет <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Note also that the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event will not be called if the effective duration of the clock is forever.</source>
          <target state="translated">Обратите внимание, что <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> событие не будет вызвано, если эффективная продолжительность часов является бесконечностью.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>In that case, the user will need to determine when to call <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>.</source>
          <target state="translated">В этом случае пользователю будет необходимо определить, когда вызывать <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>This is primarily an issue for animations on objects that have a long lifetime.</source>
          <target state="translated">В основном это проблема для анимации объектов, имеющих длинное время жизни.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>When an object is garbage collected, its clocks will also be disconnected and garbage collected.</source>
          <target state="translated">Когда объект собирается как мусор, его часы отсоединяются и также собираются как мусор.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>For more information about clock objects, see the <bpt id="p1">[</bpt>Animation and Timing System Overview<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)</ept>.</source>
          <target state="translated">Дополнительные сведения об объектах часов см. в разделе <bpt id="p1">[</bpt>анимации и общие сведения о синхронизации системы<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)">
          <source>The following example shows how to apply animation clocks using different <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph> settings.</source>
          <target state="translated">В следующем примере демонстрируется применение часы анимации с помощью различных <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph> параметры.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="T:System.Windows.Media.Animation.Animatable">
          <source>Applies an animation to the specified <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">Применяет анимацию к указанному <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
          <source>The property to animate.</source>
          <target state="translated">Анимируемое свойство.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
          <source>The animation used to animate the specified property.</source>
          <target state="translated">Анимация, которая используется для анимирования указанного свойства.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
          <source>If the animation's <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>, any current animations will be removed and the current value of the property will be held.</source>
          <target state="translated">Если <ph id="ph1">&lt;see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /&gt;</ph> анимации — <ph id="ph2">&lt;see langword="null" /&gt;</ph>, любые текущие анимации будут удалены, и будет сохранено существующее значение свойства.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>animation<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see langword="null" /&gt;</ph>, all animations will be removed from the property and the property value will revert back to its base value.</source>
          <target state="translated">Если <bpt id="p1">&lt;c&gt;</bpt>animation<ept id="p1">&lt;/c&gt;</ept> имеет значение <ph id="ph1">&lt;see langword="null" /&gt;</ph>, все анимации будут удалены из свойства, а значение свойства вернется к базовому значению.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
          <source>Applies an animation to the specified <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">Применяет анимацию к указанному <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
          <source>The animation is started when the next frame is rendered.</source>
          <target state="translated">Анимация начинается при отрисовке следующего кадра.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
          <source>If the specified property is already animated, the <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /&gt;</ph> handoff behavior is used.</source>
          <target state="translated">Если указанное свойство уже анимировано, используется поведение перемещения <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)">
          <source>If the animation has a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;</ph> that is greater than zero, the animation begins after that amount of time has elapsed from the time the next frame is rendered.</source>
          <target state="translated">Если есть анимации <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;</ph> больше нуля, анимация начинается по истечении этого времени от времени отрисовке следующего кадра.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>The property to animate.</source>
          <target state="translated">Анимируемое свойство.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>The animation used to animate the specified property.</source>
          <target state="translated">Анимация, которая используется для анимирования указанного свойства.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>handoffBehavior<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /&gt;</ph> and the animation's <ph id="ph2">&lt;see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>, any current animations will be removed and the current value of the property will be held.</source>
          <target state="translated">Если параметр <bpt id="p1">&lt;c&gt;</bpt>handoffBehavior<ept id="p1">&lt;/c&gt;</ept> имеет значение <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /&gt;</ph>, а свойство анимации <ph id="ph2">&lt;see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /&gt;</ph> имеет значение <ph id="ph3">&lt;see langword="null" /&gt;</ph>, любые текущие анимации будут удалены, а текущее значение свойства будет сохранено.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>handoffBehavior<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /&gt;</ph> and <bpt id="p2">&lt;c&gt;</bpt>animation<ept id="p2">&lt;/c&gt;</ept> is a <ph id="ph2">&lt;see langword="null" /&gt;</ph> reference, all animations will be removed from the property and the property value will revert back to its base value.</source>
          <target state="translated">Если параметр <bpt id="p1">&lt;c&gt;</bpt>handoffBehavior<ept id="p1">&lt;/c&gt;</ept> имеет значение<ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace" /&gt;</ph>, а <bpt id="p2">&lt;c&gt;</bpt>animation<ept id="p2">&lt;/c&gt;</ept> является ссылкой <ph id="ph2">&lt;see langword="null" /&gt;</ph>, все анимации будут удалены из свойства, а значение свойства будет возвращено к исходному.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>handoffBehavior<ept id="p1">&lt;/c&gt;</ept> is <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.Compose" /&gt;</ph>, this method will have no effect if the animation or its <ph id="ph2">&lt;see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Если параметр <bpt id="p1">&lt;c&gt;</bpt>handoffBehavior<ept id="p1">&lt;/c&gt;</ept> имеет значение <ph id="ph1">&lt;see cref="F:System.Windows.Media.Animation.HandoffBehavior.Compose" /&gt;</ph>, этот метод не будет действовать при условии, что анимация или ее свойство <ph id="ph2">&lt;see cref="P:System.Windows.Media.Animation.Timeline.BeginTime" /&gt;</ph> имеют значение <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>A value that specifies how the new animation should interact with any current animations already affecting the property value.</source>
          <target state="translated">Значение, которое указывает, как новая анимация должна взаимодействовать с любыми текущими анимациями, уже влияющими на значение свойства.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Applies an animation to the specified <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">Применяет анимацию к указанному <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>The animation is started when the next frame is rendered.</source>
          <target state="translated">Анимация начинается при отрисовке следующего кадра.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>If the specified property is already animated, the specified <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.HandoffBehavior" /&gt;</ph> is used.</source>
          <target state="translated">Если указанное свойство уже является анимированным, используется указанное поведение <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.HandoffBehavior" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>If the animation has a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;</ph> that is greater than zero, the animation begins after that amount of time has elapsed from the time the next frame is rendered.</source>
          <target state="translated">Если есть анимации <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Timeline.BeginTime%2A&gt;</ph> больше нуля, анимация начинается по истечении этого времени от времени отрисовке следующего кадра.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Using the Compose HandoffBehavior</source>
          <target state="translated">Использование составлять руководство.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>When you apply a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph>, or <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to a property using the <ph id="ph4">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id="ph5">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph>, any <ph id="ph6">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> objects previously associated with that property continue to consume system resources; the timing system will not remove these clocks automatically.</source>
          <target state="translated">При применении <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Storyboard&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.Media.Animation.AnimationTimeline&gt;</ph>, или <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> к свойству с помощью <ph id="ph4">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph> <ph id="ph5">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph>, любые <ph id="ph6">&lt;xref:System.Windows.Media.Animation.Clock&gt;</ph> ранее связанную с ним объекты по-прежнему потребление системных ресурсов; система времени не будет Удаляет эти часы автоматически.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>To avoid performance issues when you apply a large number of clocks using <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph>, you should remove composing clocks from the animated property after they complete.</source>
          <target state="translated">Чтобы избежать проблем с производительностью при применении большое число часов с помощью <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior.Compose&gt;</ph>, необходимо удалить составляющую часами анимированное свойство после их завершения.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>There are several ways to remove a clock.</source>
          <target state="translated">Есть несколько способов удаления часов.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>To remove all clocks from a property, use the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</ph> or <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;</ph> method of the animated object.</source>
          <target state="translated">Чтобы удалить все часы из свойства, используйте <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29&gt;</ph> или <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29&gt;</ph> метод анимированного объекта.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Specify the property being animated as the first parameter, and <ph id="ph1">`null`</ph> as the second.</source>
          <target state="translated">Укажите в качестве первого параметра, анимируемого свойства и <ph id="ph1">`null`</ph> вторым.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>This will remove all animation clocks from the property.</source>
          <target state="translated">Это удалит из свойства все часы анимации.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>To remove a specific <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> from a list of clocks, use the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> to retrieve a <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>, then call the <ph id="ph5">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph> method of the <ph id="ph6">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>.</source>
          <target state="translated">Для удаления определенных <ph id="ph1">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> из списка часов используйте <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> свойство <ph id="ph3">&lt;xref:System.Windows.Media.Animation.AnimationClock&gt;</ph> для получения <ph id="ph4">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>, затем вызовите <ph id="ph5">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph> метод <ph id="ph6">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>This is typically done in the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event handler for a clock.</source>
          <target state="translated">Обычно это делается <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> обработчика событий для часов.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Note that only root clocks can be controlled by a <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>; the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> property of a child clock will return <ph id="ph3">`null`</ph>.</source>
          <target state="translated">Обратите внимание, что только корневые часы могут управляться <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController&gt;</ph>; <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Clock.Controller%2A&gt;</ph> свойство дочерних часов вернет <ph id="ph3">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>Note also that the <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> event will not be called if the effective duration of the clock is forever.</source>
          <target state="translated">Обратите внимание, что <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Clock.Completed&gt;</ph> событие не будет вызвано, если эффективная продолжительность часов является бесконечностью.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>In that case, the user will need to determine when to call <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>.</source>
          <target state="translated">В этом случае пользователю будет необходимо определить, когда вызывать <ph id="ph1">&lt;xref:System.Windows.Media.Animation.ClockController.Remove%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>This is primarily an issue for animations on objects that have a long lifetime.</source>
          <target state="translated">В основном это проблема для анимации объектов, имеющих длинное время жизни.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>When an object is garbage collected, its clocks will also be disconnected and garbage collected.</source>
          <target state="translated">Когда объект собирается как мусор, его часы отсоединяются и также собираются как мусор.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>For more information about clock objects, see the <bpt id="p1">[</bpt>Animation and Timing System Overview<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)</ept>.</source>
          <target state="translated">Дополнительные сведения об объектах часов см. в разделе <bpt id="p1">[</bpt>анимации и общие сведения о синхронизации системы<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)">
          <source>The following example shows how to apply animations using different <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph> settings.</source>
          <target state="translated">Следующий пример показывает применение анимации с помощью различных <ph id="ph1">&lt;xref:System.Windows.Media.Animation.HandoffBehavior&gt;</ph> параметры.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.Clone">
          <source>Creates a modifiable clone of this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph>, making deep copies of this object's values.</source>
          <target state="translated">Создает изменяемый клон данного объекта <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph>, делая глубокие копии значений этого объекта.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.Clone">
          <source>When copying this object's dependency properties, this method copies resource references and data bindings (but they might no longer resolve) but not animations or their current values.</source>
          <target state="translated">При копировании свойств зависимостей объекта этот метод копирует указатели на ресурсы и связи с данными (которые могут уже не быть разрешимыми), но не копирует анимации и их текущие значения.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.Clone">
          <source>A modifiable clone of this instance.</source>
          <target state="translated">Модифицируемая копия этого экземпляра.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.Clone">
          <source>The returned clone is effectively a deep copy of the current object.</source>
          <target state="translated">Возвращаемая копия является глубокой копией текущего объекта.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.Clone">
          <source>The clone's <ph id="ph1">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> property is <bpt id="p1">**</bpt>false<ept id="p1">**</ept>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;see cref="P:System.Windows.Freezable.IsFrozen" /&gt;</ph> копии имеет значение <bpt id="p1">**</bpt>false<ept id="p1">**</ept>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.Clone">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.Clone%2A&gt;</ph> method can be used to produce modifiable copies of frozen <ph id="ph2">&lt;xref:System.Windows.Freezable&gt;</ph> objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.Clone%2A&gt;</ph> Метод может использоваться для создания изменяемой копии замороженный <ph id="ph2">&lt;xref:System.Windows.Freezable&gt;</ph> объектов.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.Clone">
          <source>For convenience, this method shadows the inherited <ph id="ph1">&lt;xref:System.Windows.Freezable.Clone%2A&gt;</ph> method to provide a strongly typed implementation.</source>
          <target state="translated">Для удобства, этот метод переопределяет унаследованный <ph id="ph1">&lt;xref:System.Windows.Freezable.Clone%2A&gt;</ph> метод для строго типизированной реализации.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this method should simply determine whether this instance can be frozen.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если этот метод должен просто определять, может ли быть заморожен данный экземпляр.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)">
          <source><ph id="ph1">&lt;see langword="false" /&gt;</ph> if this instance should actually freeze itself when this method is called.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="false" /&gt;</ph>, если этот экземпляр действительно должен заморозить себя при вызове этого метода.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)">
          <source>Makes this <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph> object unmodifiable or determines whether it can be made unmodifiable.</source>
          <target state="translated">Делает данный объект <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph> неизменяемым или определяет, может ли он быть сделан неизменяемым.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)">
          <source>If <ph id="ph1">&lt;paramref name="isChecking" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph>, this method returns <ph id="ph3">&lt;see langword="true" /&gt;</ph> if this <ph id="ph4">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph> can be made unmodifiable, or <ph id="ph5">&lt;see langword="false" /&gt;</ph> if it cannot be made unmodifiable.</source>
          <target state="translated">Если параметр <ph id="ph1">&lt;paramref name="isChecking" /&gt;</ph> равен <ph id="ph2">&lt;see langword="true" /&gt;</ph>, этот метод возвращает значение <ph id="ph3">&lt;see langword="true" /&gt;</ph> при возможности сделать данный объект <ph id="ph4">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph> неизменяемым или значение <ph id="ph5">&lt;see langword="false" /&gt;</ph>, если такая возможность отсутствует.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)">
          <source>If <ph id="ph1">&lt;paramref name="isChecking" /&gt;</ph> is <ph id="ph2">&lt;see langword="false" /&gt;</ph>, this method returns <ph id="ph3">&lt;see langword="true" /&gt;</ph> if the if this <ph id="ph4">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph> is now unmodifiable, or <ph id="ph5">&lt;see langword="false" /&gt;</ph> if it cannot be made unmodifiable, with the side effect of having begun to change the frozen status of this object.</source>
          <target state="translated">Если свойство <ph id="ph1">&lt;paramref name="isChecking" /&gt;</ph> равно <ph id="ph2">&lt;see langword="false" /&gt;</ph>, этот метод возвращает значение <ph id="ph3">&lt;see langword="true" /&gt;</ph>, если данный объект <ph id="ph4">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph> уже является неизменяемым, либо значение <ph id="ph5">&lt;see langword="false" /&gt;</ph>, если его невозможно сделать неизменяемым, при этом начнется изменение замороженного статуса этого объекта.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)">
          <source>This method will return <bpt id="p1">**</bpt>false<ept id="p1">**</ept> when <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.HasAnimatedProperties%2A&gt;</ph> is <bpt id="p2">**</bpt>true<ept id="p2">**</ept>.</source>
          <target state="translated">Этот метод будет возвращать <bpt id="p1">**</bpt>false<ept id="p1">**</ept> при <ph id="ph1">&lt;xref:System.Windows.Media.Animation.Animatable.HasAnimatedProperties%2A&gt;</ph> — <bpt id="p2">**</bpt>true<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)">
          <source>Do not call this method directly (except when calling base in an implementation).</source>
          <target state="translated">Не вызывайте этот метод напрямую (за исключением случаев вызова базового метода в реализации).</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)">
          <source>This method is called internally by <ph id="ph1">&lt;xref:System.Windows.Freezable.CanFreeze%2A&gt;</ph> (with <ph id="ph2">`isChecking`</ph> equal to <ph id="ph3">`true`</ph>) and  <ph id="ph4">&lt;xref:System.Windows.Freezable.Freeze%2A&gt;</ph> (with <ph id="ph5">`isChecking`</ph> equal to <ph id="ph6">`false`</ph>).</source>
          <target state="translated">Этот метод вызывается внутренним образом <ph id="ph1">&lt;xref:System.Windows.Freezable.CanFreeze%2A&gt;</ph> (с <ph id="ph2">`isChecking`</ph> равно <ph id="ph3">`true`</ph>) и <ph id="ph4">&lt;xref:System.Windows.Freezable.Freeze%2A&gt;</ph> (с <ph id="ph5">`isChecking`</ph> равно <ph id="ph6">`false`</ph>).</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)">
          <source>Classes that derive from <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph> must override this method when the class contains data that is not stored using dependency properties.</source>
          <target state="translated">Классы, производные от <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.Animatable" /&gt;</ph> должен переопределять этот метод, если класс содержит данные, которые не хранятся с использованием свойств зависимостей.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.FreezeCore(System.Boolean)">
          <source>A typical implementation would call the base implementation, then call the static <ph id="ph1">&lt;see cref="M:System.Windows.Freezable.Freeze" /&gt;</ph> method on all <ph id="ph2">&lt;see cref="T:System.Windows.Freezable" /&gt;</ph> typed properties that the class contains, returning <ph id="ph3">&lt;see langword="true" /&gt;</ph> only if all properties were frozen (or could have been frozen, in the case of passing through a <ph id="ph4">&lt;see langword="false" /&gt;</ph> value for <ph id="ph5">&lt;paramref name="isChecking" /&gt;</ph>).</source>
          <target state="translated">Типичная реализация будет вызывать базовую реализацию, а затем вызовите статический <ph id="ph1">&lt;see cref="M:System.Windows.Freezable.Freeze" /&gt;</ph> метод на всех <ph id="ph2">&lt;see cref="T:System.Windows.Freezable" /&gt;</ph> типизированные свойства, которые содержит класс, возвращая <ph id="ph3">&lt;see langword="true" /&gt;</ph> только в том случае, если все свойства были заморожены (или может заморожен в вариант обрабатываемым <ph id="ph4">&lt;see langword="false" /&gt;</ph> значение для <ph id="ph5">&lt;paramref name="isChecking" /&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)">
          <source>Identifies the property whose base (non-animated) value should be retrieved.</source>
          <target state="translated">Указывает свойство, чье базовое (не анимированное) значение должно быть извлечено.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)">
          <source>Returns the non-animated value of the specified <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>.</source>
          <target state="translated">Возвращает не анимированное значение указанного объекта <ph id="ph1">&lt;see cref="T:System.Windows.DependencyProperty" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)">
          <source>The value that would be returned if the specified property were not animated.</source>
          <target state="translated">Значение, которое будет возвращено, если указанное свойство не было анимировано.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)">
          <source>If the specified property is not animated, this method returns the same result as <ph id="ph1">&lt;xref:System.Windows.DependencyObject.GetValue%2A&gt;</ph>.</source>
          <target state="translated">Если указанное свойство не анимировано, этот метод возвращает тот же результат, как <ph id="ph1">&lt;xref:System.Windows.DependencyObject.GetValue%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)">
          <source>In the following example, the non-animated values of animated properties are retrieved and displayed.</source>
          <target state="translated">В следующем примере извлечения и отображения значений без анимации анимированных свойств.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties">
          <source>Gets a value that indicates whether one or more <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.AnimationClock" /&gt;</ph> objects is associated with any of this object's dependency properties.</source>
          <target state="translated">Возвращает значение, которое указывает, сопоставлены ли один или несколько объектов <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.AnimationClock" /&gt;</ph> любому из свойств зависимостей этого объекта.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties">
          <source><bpt id="p1">**</bpt>true<ept id="p1">**</ept> if one or more <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.AnimationClock" /&gt;</ph> objects is associated with any of this object's dependency properties; otherwise, <bpt id="p2">**</bpt>false<ept id="p2">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>значение true,<ept id="p1">**</ept> Если один или несколько <ph id="ph1">&lt;see cref="T:System.Windows.Media.Animation.AnimationClock" /&gt;</ph> объекты, связанные с любого из свойств зависимостей этот объект, в противном случае — <bpt id="p2">**</bpt>false<ept id="p2">**</ept>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Media.Animation.Animatable.HasAnimatedProperties">
          <source>This property does not indicate whether this object contains animated sub-objects.</source>
          <target state="translated">Это свойство не указывает ли этот объект содержит анимированных подчиненных объектах.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)">
          <source>Represents an object that participates in the dependency property system.</source>
          <target state="translated">Представляет объект, участвующий в системе свойств зависимостей.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)">
          <source>Specifies whether a dependency object should be serialized.</source>
          <target state="translated">Указывает, нужно ли сериализовать объект зависимости.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to serialize <ph id="ph2">&lt;paramref name="target" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph> для сериализации объекта <ph id="ph2">&lt;paramref name="target" /&gt;</ph>; в противном случае — значение <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение по умолчанию: <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)">
          <source>The <ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> class uses the <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference%2A&gt;</ph> method to determine if a property should be serialized.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ComponentModel.TypeDescriptor&gt;</ph> Класс использует <ph id="ph2">&lt;xref:System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference%2A&gt;</ph> метод, чтобы определить, если свойство должно быть сериализовано.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>