<Type Name="ClockController" FullName="System.Windows.Media.Animation.ClockController">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9f3e3a0d4297d65c72643c8d8d5fd64c4d366c45" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36500798" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ClockController : System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClockController extends System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.ClockController" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClockController&#xA;Inherits DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClockController sealed : System::Windows::Threading::DispatcherObject" />
  <TypeSignature Language="F#" Value="type ClockController = class&#xA;    inherit DispatcherObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Управляет <see cref="T:System.Windows.Media.Animation.Clock" /> в интерактивном режиме.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Windows.Media.Animation.ClockController> для интерактивного начать, приостановка, возобновление, поиска, пропустить, остановить и удалить <xref:System.Windows.Media.Animation.Clock>. Можно управлять только в интерактивном режиме часами корневого уровня.  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Media.Animation.Clock" />
    <altmember cref="P:System.Windows.Media.Animation.Clock.Controller" />
  </Docs>
  <Members>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Begin" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin();" />
      <MemberSignature Language="F#" Value="member this.Begin : unit -&gt; unit" Usage="clockController.Begin " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Задает начало целевого объекта <see cref="P:System.Windows.Media.Animation.ClockController.Clock" /> в следующем делении.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывает выполнение цели <xref:System.Windows.Media.Animation.Clock> вести себя так, будто его <xref:System.Windows.Media.Animation.Timeline> объекта <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> были заданы относительно времени в следующем делении. Временная шкала фактическое <xref:System.Windows.Media.Animation.Timeline.BeginTime%2A> параметр учитывается (но не изменяется).  
  
 Этот метод изменяет целевой объект часов <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> для <xref:System.Windows.Media.Animation.ClockState.Active>. <xref:System.Windows.Media.Animation.ClockController.Begin%2A> Метод не возобновляет приостановленное часов.  
  
 Этот метод не оказывает влияния на дерева времени до следующего обработки такт. Как побочный эффект соответствующие события также не возникает до этого момента. Вызов этого метода вызывает <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> и <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> события.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.BeginTime" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.SkipToFill" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Stop" />
      </Docs>
    </Member>
    <Member MemberName="Clock">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Clock Clock { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Animation.Clock Clock" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ClockController.Clock" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Clock As Clock" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Animation::Clock ^ Clock { System::Windows::Media::Animation::Clock ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Clock : System.Windows.Media.Animation.Clock" Usage="System.Windows.Media.Animation.ClockController.Clock" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Clock</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Windows.Media.Animation.Clock" />, управляемый данным методом <see cref="T:System.Windows.Media.Animation.ClockController" />.</summary>
        <value>Объект <see cref="T:System.Windows.Media.Animation.Clock" />, управляемый данным методом <see cref="T:System.Windows.Media.Animation.ClockController" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberSignature Language="F#" Value="member this.Pause : unit -&gt; unit" Usage="clockController.Pause " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Останавливает выполнение целевого объекта <see cref="T:System.Windows.Media.Animation.Clock" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вы можете приостановить <xref:System.Windows.Media.Animation.Clock> независимо от его текущего состояния и приостановка часов не меняет их текущее состояние. Часы могут быть приостановлены во время <xref:System.Windows.Media.Animation.ClockState.Active>, <xref:System.Windows.Media.Animation.ClockState.Stopped>, или <xref:System.Windows.Media.Animation.ClockState.Filling>. Продолжение работы часов единственным способом — с помощью <xref:System.Windows.Media.Animation.ClockController.Resume%2A> метод. Приостановка часов неявно приостанавливает его дочерних элементов.  
  
 Вызов этого метода в том случае, если целевой объект часов уже приостановлена не оказывает влияния.  
  
 Приостановка триггеры часы <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> событий.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Resume" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove();" />
      <MemberSignature Language="F#" Value="member this.Remove : unit -&gt; unit" Usage="clockController.Remove " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Удаляет объект <see cref="T:System.Windows.Media.Animation.Clock" />, связанный с объектом <see cref="T:System.Windows.Media.Animation.ClockController" />, из анимируемых им свойств. Объект часов и дочерние объекты часов больше не будут влиять на эти свойства.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод запускает <xref:System.Windows.Media.Animation.Clock.RemoveRequested> событий.  
  
   
  
## Examples  
 Приведенный ниже показано, как удалить и другие способы интерактивного управления часов.  
  
 [!code-csharp[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/csharp/VS_Snippets_Wpf/ClockController_procedural_snip/CSharp/SeekAlignedToLastTickExample.cs#clockcontrollerseekexample)]
 [!code-vb[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClockController_procedural_snip/visualbasic/seekalignedtolasttickexample.vb#clockcontrollerseekexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberSignature Language="F#" Value="member this.Resume : unit -&gt; unit" Usage="clockController.Resume " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Позволяет возобновить выполнение ранее приостановленного объекта <see cref="T:System.Windows.Media.Animation.Clock" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Можно приостановить или возобновить <xref:System.Windows.Media.Animation.Clock> независимо от его текущего состояния и приостановки или возобновления часов не меняет их текущее состояние. Часы могут быть приостановлены во время <xref:System.Windows.Media.Animation.ClockState.Active>, <xref:System.Windows.Media.Animation.ClockState.Stopped>, или <xref:System.Windows.Media.Animation.ClockState.Filling>. Является единственным способом для возобновления приостановленного часов с помощью <xref:System.Windows.Media.Animation.ClockController.Resume%2A> метод. Возобновление часов неявно возобновляется его дочерних элементов. Вызов этого метода в формате, в котором не приостановлена не оказывает влияния.  
  
 Возобновление триггеры приостановленной часы <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> событий.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.ClockController.Pause" />
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.Seek : TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="clockController.Seek (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">Смещение поиска, измеряемое по часам целевого объекта. Это смещение указывается относительно значения <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> или <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /> часов в зависимости от значения <c>origin</c>.</param>
        <param name="origin">Значение, которое указывает, является ли заданное смещение относительным по отношению к свойствам <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> или <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /> целевого объекта часов.</param>
        <summary>Ищет целевой объект <see cref="P:System.Windows.Media.Animation.ClockController.Clock" /> по указанной величине, когда произойдет следующий тик часов. Если часы целевого объекта остановлены, поиск делает их активными.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поиск не выполняют операции <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> или <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> параметры шкалы часов в учетной записи: часы так же, как его временная шкала имеет <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 и нет <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  
  
 Этот метод изменяет часов <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> для <xref:System.Windows.Media.Animation.ClockState.Active>. Этот метод не оказывает влияния на дерева времени до следующего обработки такт. Как побочный эффект соответствующие события также не возникает до этого момента.  
  
 Поиск триггеры раскадровки <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated> и <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> события.  
  
 Если целевой объект часов имеет дочерние элементы, их текущее время обновляется соответствующим образом.  
  
   
  
## Examples  
 В следующем примере показано, как осуществлять поиск с помощью <xref:System.Windows.Media.Animation.ClockController>.  
  
 [!code-csharp[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/csharp/VS_Snippets_Wpf/ClockController_procedural_snip/CSharp/SeekAlignedToLastTickExample.cs#clockcontrollerseekexample)]
 [!code-vb[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClockController_procedural_snip/visualbasic/seekalignedtolasttickexample.vb#clockcontrollerseekexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Media.Animation.TimeSeekOrigin" />
        <altmember cref="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberSignature Language="F#" Value="member this.SeekAlignedToLastTick : TimeSpan * System.Windows.Media.Animation.TimeSeekOrigin -&gt; unit" Usage="clockController.SeekAlignedToLastTick (offset, origin)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">Смещение поиска, измеряемое по часам целевого объекта. Это смещение указывается относительно значения <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> или <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /> часов в зависимости от значения <c>origin</c>.</param>
        <param name="origin">Значение, которое указывает, является ли заданное смещение относительным по отношению к свойствам <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.BeginTime" /> или <see cref="F:System.Windows.Media.Animation.TimeSeekOrigin.Duration" /> целевого объекта часов.</param>
        <summary>Незамедлительно выполняет поиск целевого объекта <see cref="T:System.Windows.Media.Animation.Clock" /> по указанной величине. Если часы целевого объекта остановлены, поиск делает их активными.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поиск не выполняют операции <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> или <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> параметры шкалы часов в учетной записи: часы так же, как его временная шкала имеет <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 и нет <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  
  
 <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A> выравнивание, когда выполняется поиск время с последнего такт таймера. Значения немедленно обновляются для отражения изменений из-за <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A>, даже если экран не отразит эти изменения до обновления экрана.  
  
 Если целевой объект часов имеет дочерние элементы, их текущее время обновляется соответствующим образом.  
  
 Этот метод изменяет часов <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> для <xref:System.Windows.Media.Animation.ClockState.Active>.  
  
 Поиск триггеры раскадровки <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated> и <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> события.  
  
   
  
## Examples  
 В следующем примере показано, как <xref:System.Windows.Media.Animation.ClockController.Seek%2A> и <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A> методы <xref:System.Windows.Media.Animation.ClockController>.  
  
 [!code-csharp[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/csharp/VS_Snippets_Wpf/ClockController_procedural_snip/CSharp/SeekAlignedToLastTickExample.cs#clockcontrollerseekexample)]
 [!code-vb[ClockController_procedural_snip#ClockControllerSeekExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/ClockController_procedural_snip/visualbasic/seekalignedtolasttickexample.vb#clockcontrollerseekexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.SkipToFill" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToFill ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToFill();" />
      <MemberSignature Language="F#" Value="member this.SkipToFill : unit -&gt; unit" Usage="clockController.SkipToFill " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Переносит текущее время целевого объекта <see cref="T:System.Windows.Media.Animation.Clock" /> в конец его активного периода.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод перемещает часов целевого объекта текущее время в конец его активного периода; поведение часов на этом этапе определяется <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> настройку его <xref:System.Windows.Media.Animation.Timeline>. Если временной шкалы <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> свойству <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, заполняет часы; Если задано значение <xref:System.Windows.Media.Animation.FillBehavior.Stop>, останавливается часов.  
  
 Этот метод имеет силу только в том случае, если целевой объект часов <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> — <xref:System.Windows.Media.Animation.ClockState.Active>.  
  
 Этот метод не оказывает влияния на дерева времени до следующего обработки такт. Как побочный эффект соответствующие события также не возникает до этого момента.  
  
 Триггеры периода выполнения инструкций раскадровки для ее заполнения <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> и <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> события.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SpeedRatio">
      <MemberSignature Language="C#" Value="public double SpeedRatio { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 SpeedRatio" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.ClockController.SpeedRatio" />
      <MemberSignature Language="VB.NET" Value="Public Property SpeedRatio As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double SpeedRatio { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.SpeedRatio : double with get, set" Usage="System.Windows.Media.Animation.ClockController.SpeedRatio" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает интерактивную скорость целевого объекта <see cref="T:System.Windows.Media.Animation.Clock" />.</summary>
        <value>Конечное значение больше нуля, которое описывает интерактивную скорость целевого таймера. Это значение умножается на значение свойства <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> объекта часов <see cref="T:System.Windows.Media.Animation.Timeline" />. Например, если значение свойства <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> временной шкалы равно 0,5, а значение свойства <see cref="T:System.Windows.Media.Animation.ClockController" /> объекта <see cref="P:System.Windows.Media.Animation.ClockController.SpeedRatio" /> равно 3,0, шкала времени будет продвигаться в 1,5 раз быстрее обычной скорости (0,5 * 3,0). Значение по умолчанию — 1,0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Задание этого свойства не имеет эффекта до следующий такт. Если задать это свойство, а затем получить его значение перед происходит следующий такт, вы сможете получить старое значение. Это свойство будет возвращать новое значение после следующий такт.  
  
 Задание этого свойства не изменяет значение базового временной шкалы <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A>.  
  
 Задание этого свойства вызывает целевой объект часов <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeedInvalidated> событий.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.ClockController.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberSignature Language="F#" Value="member this.Stop : unit -&gt; unit" Usage="clockController.Stop " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Останавливает целевой объект <see cref="T:System.Windows.Media.Animation.Clock" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод изменяет целевой объект часов <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> для <xref:System.Windows.Media.Animation.Clock.Stopped%2A>.  
  
 Объект <xref:System.Windows.Media.Animation.Clock.Stopped%2A> часов можно перезапустить с помощью <xref:System.Windows.Media.Animation.ClockController.Begin%2A>, <xref:System.Windows.Media.Animation.ClockController.Seek%2A>, или <xref:System.Windows.Media.Animation.ClockController.SeekAlignedToLastTick%2A> метод.  
  
 Этот метод не оказывает влияния на дерева времени до следующего обработки такт. Как побочный эффект соответствующие события также не возникает до этого момента.  
  
 Остановка триггеры часы <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> и <xref:System.Windows.Media.Animation.Clock.CurrentStateInvalidated> события, но не <xref:System.Windows.Media.Animation.Clock.Completed> события.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>