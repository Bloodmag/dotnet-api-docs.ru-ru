<Type Name="Storyboard" FullName="System.Windows.Media.Animation.Storyboard">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="40aaa35f3a1b40896d02850b6d8ad6be43644bf5" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30661068" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Storyboard : System.Windows.Media.Animation.ParallelTimeline" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi Storyboard extends System.Windows.Media.Animation.ParallelTimeline" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.Animation.Storyboard" />
  <TypeSignature Language="VB.NET" Value="Public Class Storyboard&#xA;Inherits ParallelTimeline" />
  <TypeSignature Language="C++ CLI" Value="public ref class Storyboard : System::Windows::Media::Animation::ParallelTimeline" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Media.Animation.ParallelTimeline</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Временная шкала контейнера, которая предоставляет объект и свойство, содержащие сведения о дочерних анимациях.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
## <a name="interactively-controlling-storyboards"></a>Интерактивное управление раскадровкой  
 Управляемой раскадровки можно приостановить, возобновить, поиск, остановить и удалить. Чтобы сделать раскадровку управляемой в разметке, необходимо указать <xref:System.Windows.Media.Animation.BeginStoryboard.Name%2A> свойство <xref:System.Windows.Media.Animation.BeginStoryboard> объекта, он создает; например, см. раздел [как: использование триггеров событий для управления раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-use-event-triggers-to-control-a-storyboard-after-it-starts.md). Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
## <a name="data-binding-and-animating-timelines"></a>Привязка данных и анимация временных шкал  
 Большинство свойств на временной шкале могут быть связаны с данными либо анимированы. Тем не менее из-за способа работы системы времени, данные привязанного и анимированных шкал времени не ведут себя так, как другие данные привязаны или анимированных объектов. Чтобы понять их поведение, важно знать, что означает активирование временной шкалы.  
  
 При активации временной шкалы создаются копии временной шкалы и его дочерние временные шкалы. Эти копии фиксируются (доступным только для чтения) и <xref:System.Windows.Media.Animation.Clock> на их основе создаются объекты. Эти объекты используются для выполнения фактических действий по анимации целевых свойств. Если временная шкала с привязкой к данным или анимировано, моментальный снимок ее текущих значений выполняется при создании его часов. Несмотря на то, что исходная временная шкала может продолжить изменение, ее часы не поддерживается.  
  
 Для отражения в шкале времени привязки данных или анимации изменений ее часы должны быть созданы заново. Часы не повторно создаются автоматически. Ниже показано несколько способов применения изменений временной шкалы.  
  
-   Если временная шкала или принадлежит <xref:System.Windows.Media.Animation.Storyboard>, чтобы облегчить отражать изменения посредством применения ее раскадровки при помощи <xref:System.Windows.Media.Animation.BeginStoryboard> или <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод. Это имеет побочный эффект в виде перезапуска анимации. В коде, можно использовать <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> метода для возврата раскадровки обратно в предыдущее положение.  
  
-   Если анимация применяется непосредственно к свойству с помощью <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> метод, вызовите <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%2A> метод еще раз и передать его анимации, которая была изменена.  
  
-   При работе непосредственно на уровне часов, создайте и примените новый набор часов и используйте их для замены предыдущего набора созданных часов.  
  
 Пример данных привязаны анимации, см. в разделе [Пример анимации сплайн ключ](http://go.microsoft.com/fwlink/?LinkID=160011) .  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Storyboard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Storyboard();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Begin">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициирует набор анимаций, сопоставленных данному объекту <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Управляемой раскадровки можно приостановить, возобновить, поиск, остановить и удалить. Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Применяет анимации, сопоставленные объекту <see cref="T:System.Windows.Media.Animation.Storyboard" /> с их целевыми значениями, а также инициирует их.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Объект, содержащийся в той же области имен, что и целевые объекты анимаций этой раскадровки. Анимации без <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> применяются к объекту <c>containingObject</c>.</param>
        <summary>Применяет анимации, сопоставленные объекту <see cref="T:System.Windows.Media.Animation.Storyboard" /> с их целевыми значениями, а также инициирует их.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если целевые свойства уже анимированы, они заменяются с использованием <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> поведение перемещения.  
  
 Раскадровки, запущенные с помощью этого метода нельзя приостановить, возобновить или в противном случае управление в интерактивном режиме после их запуска. Чтобы сделать раскадровку управляемой, используйте <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> или <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод.  
  
 Начиная триггеры раскадровки <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> и <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> события.  
  
   
  
## Examples  
 В следующем примере используется раскадровки для анимации <xref:System.Windows.Media.TextEffect>. <xref:System.Windows.Media.TextEffect> Внутри <xref:System.Windows.FrameworkContentElement>его имя области.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementStoryboardExample.cs#frameworkcontentelementstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementstoryboardexample.vb#frameworkcontentelementstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Объект, содержащийся в той же области имен, что и целевые объекты анимаций этой раскадровки. Анимации без <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> применяются к объекту <c>containingObject</c>.</param>
        <summary>Применяет анимации, сопоставленные объекту <see cref="T:System.Windows.Media.Animation.Storyboard" /> с их целевыми значениями, а также инициирует их.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если целевые свойства уже анимированы, они заменяются с использованием <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> поведение перемещения.  
  
 Раскадровки, запущенные с помощью этого метода нельзя приостановить, возобновить или в противном случае управление в интерактивном режиме после их запуска. Чтобы сделать раскадровку управляемой, используйте <xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Boolean%29> или <xref:System.Windows.Media.Animation.Storyboard.Begin%28System.Windows.FrameworkElement%2CSystem.Windows.Media.Animation.HandoffBehavior%2CSystem.Boolean%29> метод.  
  
 Начиная триггеры раскадровки <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> и <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> события.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkContentElement, isControllable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject, bool isControllable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">Объект, содержащийся в той же области имен, что и целевые объекты анимаций этой раскадровки. Анимации без <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> применяются к объекту <c>containingObject</c>.</param>
        <param name="isControllable">
          Значение <see langword="true" /> если раскадровка должна интерактивное управление; в обратном случае — значение <see langword="false" />.</param>
        <summary>Применяет анимации, сопоставленные объекту <see cref="T:System.Windows.Media.Animation.Storyboard" /> с их целевыми значениями, а также инициирует их.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если целевые свойства уже анимированы, они заменяются с использованием <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> поведение перемещения.  
  
 Для интерактивного управления этой раскадровки, необходимо задать те же `containingObject` при вызове интерактивных методов, с помощью раскадровки.  
  
 При вызове этого метода <xref:System.Windows.Media.Animation.Clock> объекты создаются раскадровки и любые временные шкалы, он содержит. Эти часы хранятся с `containingObject`.  
  
 Начиная триггеры раскадровки <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> и <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> события.  
  
   
  
## Examples  
 В следующем примере используется управляемой раскадровки для анимации <xref:System.Windows.Media.TextEffect>. <xref:System.Windows.Media.TextEffect> Внутри <xref:System.Windows.FrameworkContentElement>его имя области.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="containingObject">Объект, содержащийся в той же области имен, что и целевые объекты анимаций этой раскадровки. Анимации без <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> применяются к объекту <c>containingObject</c>.</param>
        <param name="handoffBehavior">Поведение, которое должно использоваться в новой анимации для взаимодействия с любыми текущими анимациями.</param>
        <summary>Применяет анимации, сопоставленные объекту <see cref="T:System.Windows.Media.Animation.Storyboard" /> с их целевыми значениями, а также инициирует их с использованием заданного свойства <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При применении <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, или <xref:System.Windows.Media.Animation.AnimationClock> к свойству с помощью <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, любые <xref:System.Windows.Media.Animation.Clock> ранее связанную с ним объекты по-прежнему потребление системных ресурсов, система времени — нет Удаляет эти часы автоматически.  
  
 Чтобы избежать проблем с производительностью при применении большое число часов с помощью <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, необходимо удалить составляющую часами анимированное свойство после их завершения. Есть несколько способов удаления часов.  
  
-   Чтобы удалить все часы из свойства, используйте <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> или <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> метод анимированного объекта. Укажите в качестве первого параметра, анимируемого свойства и `null` вторым. При этом удаляются все часы анимации из свойства.  
  
-   Для удаления определенных <xref:System.Windows.Media.Animation.AnimationClock> из списка часов используйте <xref:System.Windows.Media.Animation.Clock.Controller%2A> свойство <xref:System.Windows.Media.Animation.AnimationClock> для получения <xref:System.Windows.Media.Animation.ClockController>, затем вызовите <xref:System.Windows.Media.Animation.ClockController.Remove%2A> метод <xref:System.Windows.Media.Animation.ClockController>. Обычно это делается <xref:System.Windows.Media.Animation.Clock.Completed> обработчика событий для часов. Обратите внимание, что только корневые часы могут управляться <xref:System.Windows.Media.Animation.ClockController>; <xref:System.Windows.Media.Animation.Clock.Controller%2A> свойство дочерних часов возвращает `null`. Обратите внимание, что <xref:System.Windows.Media.Animation.Clock.Completed> событий не вызывается, если эффективная продолжительность часов является бесконечностью.  В этом случае пользователь должен определить, когда вызывать <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.  
  
 В основном это проблема для анимации объектов, имеющих длинное время жизни.  При обнаружении объектов сбора мусора, его часы также будут отключены и собраны как мусор.  
  
 Дополнительные сведения об объектах часов см. в разделе [анимации и общие сведения о синхронизации системы](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).  
  
   
  
## Examples  
 В следующем примере используется <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> для анимации при щелчке и <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> при щелчке.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementStoryboardWithHandoffBehaviorExample.cs#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementstoryboardwithhandoffbehaviorexample.vb#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Begin (containingObject As FrameworkElement, isControllable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, bool isControllable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">Объект, содержащийся в той же области имен, что и целевые объекты анимаций этой раскадровки. Анимации без <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> применяются к объекту <c>containingObject</c>.</param>
        <param name="isControllable">
          Значение <see langword="true" /> если раскадровка должна интерактивное управление; в обратном случае — значение <see langword="false" />.</param>
        <summary>Применяет анимации, сопоставленные объекту <see cref="T:System.Windows.Media.Animation.Storyboard" /> с их целевыми значениями, а также инициирует их.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если целевые свойства уже анимированы, они заменяются с использованием <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> поведение перемещения.  
  
 Для интерактивного управления этой раскадровки, должны использовать одинаковые `containingObject` параметра при вызове интерактивных методов, используемых для раскадровки.  
  
 При вызове этого метода <xref:System.Windows.Media.Animation.Clock> объекты создаются раскадровки и любые временные шкалы, он содержит. Эти часы хранятся с `containingObject`.  
  
 Начиная триггеры раскадровки <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> и <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> события.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
      </Parameters>
      <Docs>
        <param name="containingObject">Объект, к которому был применен указанный шаблон <c>frameworkTemplate</c>. Анимации без <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> применяются к объекту <c>containingObject</c>.</param>
        <param name="frameworkTemplate">Анимируемый шаблон.</param>
        <summary>Применяет анимации, сопоставленные объекту <see cref="T:System.Windows.Media.Animation.Storyboard" /> с их целевыми значениями в указанном шаблоне, а также инициирует их.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если целевые свойства уже анимированы, они заменяются с использованием <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> поведение перемещения.  
  
 При вызове этого метода <xref:System.Windows.Media.Animation.Clock> объекты создаются раскадровки и любые временные шкалы, он содержит. Эти часы хранятся с `containingObject`.  
  
 Начиная триггеры раскадровки <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> и <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> события.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="containingObject">Объект, содержащийся в той же области имен, что и целевые объекты анимаций этой раскадровки. Анимации без указанного <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> применяются к объекту <c>containingObject</c>.</param>
        <param name="handoffBehavior">Поведение, которое должно использоваться в новой анимации для взаимодействия с любыми текущими анимациями.</param>
        <summary>Применяет анимации, сопоставленные объекту <see cref="T:System.Windows.Media.Animation.Storyboard" /> с их целевыми значениями, а также инициирует их с использованием заданного свойства <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере используется <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> для анимации при щелчке и <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> при щелчке.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkElementStoryboardHandoffBehaviorExample.cs#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkelementstoryboardhandoffbehaviorexample.vb#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkContentElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkContentElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkContentElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">Объект, содержащийся в той же области имен, что и целевые объекты анимаций этой раскадровки. Анимации без указанного <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> применяются к объекту <c>containingObject</c>.</param>
        <param name="handoffBehavior">Поведение, которое должно использоваться в новой анимации для взаимодействия с любыми текущими анимациями.</param>
        <param name="isControllable">Указывает, является ли анимация управляемой после запуска (можно ли ее приостановить).</param>
        <summary>Применяет анимации, сопоставленные объекту <see cref="T:System.Windows.Media.Animation.Storyboard" /> с их целевыми значениями, а также инициирует их с использованием заданного свойства <see cref="T:System.Windows.Media.Animation.HandoffBehavior" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если целевые свойства уже анимированы, они заменяются с использованием указанного поведения переадресации.  
  
 Для интерактивного управления этой раскадровки, необходимо задать те же `containingObject` при вызове интерактивных методов, с помощью раскадровки.  
  
 При вызове этого метода <xref:System.Windows.Media.Animation.Clock> объекты создаются раскадровки и любые временные шкалы, он содержит. Эти часы хранятся с `containingObject`.  
  
 Начиная триггеры раскадровки <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> и <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> события.  
  
## <a name="using-the-compose-handoffbehavior"></a>Использование составлять руководство.  
 При применении <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, или <xref:System.Windows.Media.Animation.AnimationClock> к свойству с помощью <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, любые <xref:System.Windows.Media.Animation.Clock> ранее связанную с ним объекты по-прежнему потребление системных ресурсов, система времени — нет Удаляет эти часы автоматически.  
  
 Чтобы избежать проблем с производительностью при применении большое число часов с помощью <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, необходимо удалить составляющую часами анимированное свойство после их завершения. Есть несколько способов удаления часов.  
  
-   Чтобы удалить все часы из свойства, используйте <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> или <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> метод анимированного объекта. Укажите в качестве первого параметра, анимируемого свойства и `null` вторым. При этом удаляются все часы анимации из свойства.  
  
-   Для удаления определенных <xref:System.Windows.Media.Animation.AnimationClock> из списка часов используйте <xref:System.Windows.Media.Animation.Clock.Controller%2A> свойство <xref:System.Windows.Media.Animation.AnimationClock> для получения <xref:System.Windows.Media.Animation.ClockController>, затем вызовите <xref:System.Windows.Media.Animation.ClockController.Remove%2A> метод <xref:System.Windows.Media.Animation.ClockController>. Обычно это делается <xref:System.Windows.Media.Animation.Clock.Completed> обработчика событий для часов. Обратите внимание, что только корневые часы могут управляться <xref:System.Windows.Media.Animation.ClockController>; <xref:System.Windows.Media.Animation.Clock.Controller%2A> свойство дочерних часов возвращает `null`. Обратите внимание, что <xref:System.Windows.Media.Animation.Clock.Completed> событий не вызывается, если эффективная продолжительность часов является бесконечностью.  В этом случае пользователь должен определить, когда вызывать <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.  
  
 В основном это проблема для анимации объектов, имеющих длинное время жизни.  При обнаружении объектов сбора мусора, его часы также будут отключены и собраны как мусор.  
  
 Дополнительные сведения об объектах часов см. в разделе [анимации и общие сведения о синхронизации системы](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).  
  
   
  
## Examples  
 В следующем примере используется управляемой раскадровки для анимации <xref:System.Windows.Media.TextEffect>. <xref:System.Windows.Media.TextEffect> Внутри <xref:System.Windows.FrameworkContentElement>его имя области.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 В следующем примере используется <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> для анимации при щелчке и <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> при щелчке.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementStoryboardWithHandoffBehaviorExample.cs#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementStoryboardWithHandoffBehaviorExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementstoryboardwithhandoffbehaviorexample.vb#frameworkcontentelementstoryboardwithhandoffbehaviorexamplewholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate, bool isControllable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">Объект, к которому был применен указанный шаблон <c>frameworkTemplate</c>.  Анимации без <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> применяются к объекту <c>containingObject</c>.</param>
        <param name="frameworkTemplate">Анимируемый шаблон.</param>
        <param name="isControllable">
          Значение <see langword="true" /> если раскадровка должна интерактивное управление; в обратном случае — значение <see langword="false" />.</param>
        <summary>Применяет анимации, сопоставленные объекту <see cref="T:System.Windows.Media.Animation.Storyboard" /> с их целевыми значениями в указанном шаблоне, а также инициирует их.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если целевые свойства уже анимированы, они заменяются с использованием <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> поведение перемещения.  
  
 Для интерактивного управления этой раскадровки, необходимо задать те же `containingObject` при вызове интерактивных методов, с помощью раскадровки.  
  
 При вызове этого метода <xref:System.Windows.Media.Animation.Clock> объекты создаются раскадровки и любые временные шкалы, он содержит. Эти часы хранятся с `containingObject`.  
  
 Начиная триггеры раскадровки <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> и <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> события.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="containingObject">Объект, к которому был применен указанный шаблон <c>frameworkTemplate</c>. Анимации без <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> применяются к объекту <c>containingObject</c>.</param>
        <param name="frameworkTemplate">Анимируемый шаблон.</param>
        <param name="handoffBehavior">Поведение, которое должно использоваться в новой анимации для взаимодействия с любыми текущими анимациями.</param>
        <summary>Применяет анимации, сопоставленные объекту <see cref="T:System.Windows.Media.Animation.Storyboard" /> с их целевыми значениями в указанном шаблоне, а также инициирует их.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 При вызове этого метода <xref:System.Windows.Media.Animation.Clock> объекты создаются раскадровки и любые временные шкалы, он содержит. Эти часы хранятся с `containingObject`.  
  
 Начиная триггеры раскадровки <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> и <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> события.  
  
## <a name="using-the-compose-handoffbehavior"></a>Использование составлять руководство.  
 При применении <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, или <xref:System.Windows.Media.Animation.AnimationClock> к свойству с помощью <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, любые <xref:System.Windows.Media.Animation.Clock> ранее связанную с ним объекты по-прежнему потребление системных ресурсов, система времени — нет Удаляет эти часы автоматически.  
  
 Чтобы избежать проблем с производительностью при применении большое число часов с помощью <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, необходимо удалить составляющую часами анимированное свойство после их завершения. Есть несколько способов удаления часов.  
  
-   Чтобы удалить все часы из свойства, используйте <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> или <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> метод анимированного объекта. Укажите в качестве первого параметра, анимируемого свойства и `null` вторым. При этом удаляются все часы анимации из свойства.  
  
-   Для удаления определенных <xref:System.Windows.Media.Animation.AnimationClock> из списка часов используйте <xref:System.Windows.Media.Animation.Clock.Controller%2A> свойство <xref:System.Windows.Media.Animation.AnimationClock> для получения <xref:System.Windows.Media.Animation.ClockController>, затем вызовите <xref:System.Windows.Media.Animation.ClockController.Remove%2A> метод <xref:System.Windows.Media.Animation.ClockController>. Обычно это делается <xref:System.Windows.Media.Animation.Clock.Completed> обработчика событий для часов. Обратите внимание, что только корневые часы могут управляться <xref:System.Windows.Media.Animation.ClockController>; <xref:System.Windows.Media.Animation.Clock.Controller%2A> свойство дочерних часов возвращает `null`. Обратите внимание, что <xref:System.Windows.Media.Animation.Clock.Completed> событий не вызывается, если эффективная продолжительность часов является бесконечностью.  В этом случае пользователь должен определить, когда вызывать <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.  
  
 В основном это проблема для анимации объектов, имеющих длинное время жизни.  При обнаружении объектов сбора мусора, его часы также будут отключены и собраны как мусор.  
  
 Дополнительные сведения об объектах часов см. в разделе [анимации и общие сведения о синхронизации системы](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::Media::Animation::HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">Объект, содержащийся в той же области имен, что и целевые объекты анимаций этой раскадровки. Анимации без указанного <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> применяются к объекту <c>containingObject</c>.</param>
        <param name="handoffBehavior">Поведение, которое должно использоваться в новой анимации для взаимодействия с любыми текущими анимациями.</param>
        <param name="isControllable">Указывает, является ли анимация управляемой после запуска (можно ли ее приостановить).</param>
        <summary>Применяет анимации, сопоставленные объекту <see cref="T:System.Windows.Media.Animation.Storyboard" /> с их целевыми значениями, а также инициирует их.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для интерактивного управления этой раскадровки, должны использовать одинаковые `containingObject` параметра при вызове интерактивных методов, используемых для раскадровки.  
  
 При вызове этого метода <xref:System.Windows.Media.Animation.Clock> объекты создаются раскадровки и любые временные шкалы, он содержит. Эти часы хранятся с `containingObject`.  
  
 Начиная триггеры раскадровки <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> и <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> события.  
  
## <a name="using-the-compose-handoffbehavior"></a>Использование составлять руководство.  
 При применении <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, или <xref:System.Windows.Media.Animation.AnimationClock> к свойству с помощью <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, любые <xref:System.Windows.Media.Animation.Clock> ранее связанную с ним объекты по-прежнему потребление системных ресурсов, система времени — нет Удаляет эти часы автоматически.  
  
 Чтобы избежать проблем с производительностью при применении большое число часов с помощью <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, необходимо удалить составляющую часами анимированное свойство после их завершения. Есть несколько способов удаления часов.  
  
-   Чтобы удалить все часы из свойства, используйте <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> или <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> метод анимированного объекта. Укажите в качестве первого параметра, анимируемого свойства и `null` вторым. При этом удаляются все часы анимации из свойства.  
  
-   Для удаления определенных <xref:System.Windows.Media.Animation.AnimationClock> из списка часов используйте <xref:System.Windows.Media.Animation.Clock.Controller%2A> свойство <xref:System.Windows.Media.Animation.AnimationClock> для получения <xref:System.Windows.Media.Animation.ClockController>, затем вызовите <xref:System.Windows.Media.Animation.ClockController.Remove%2A> метод <xref:System.Windows.Media.Animation.ClockController>. Обычно это делается <xref:System.Windows.Media.Animation.Clock.Completed> обработчика событий для часов. Обратите внимание, что только корневые часы могут управляться <xref:System.Windows.Media.Animation.ClockController>; <xref:System.Windows.Media.Animation.Clock.Controller%2A> свойство дочерних часов возвращает `null`. Обратите внимание, что <xref:System.Windows.Media.Animation.Clock.Completed> событий не вызывается, если эффективная продолжительность часов является бесконечностью.  В этом случае пользователь должен определить, когда вызывать <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.  
  
 В основном это проблема для анимации объектов, имеющих длинное время жизни.  При обнаружении объектов сбора мусора, его часы также будут отключены и собраны как мусор.  
  
 Дополнительные сведения об объектах часов см. в разделе [анимации и общие сведения о синхронизации системы](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).  
  
   
  
## Examples  
 В следующем примере демонстрируется создание управляемой раскадровки.  
  
 [!code-csharp[animation_ovws_procedural_snip#ControllableStoryboardExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/animation_ovws_procedural_snip/CSharp/ControllableStoryboardExample.cs#controllablestoryboardexamplewholepage)]
 [!code-vb[animation_ovws_procedural_snip#ControllableStoryboardExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/animation_ovws_procedural_snip/visualbasic/controllablestoryboardexample.vb#controllablestoryboardexamplewholepage)]  
  
 В следующем примере используется <xref:System.Windows.Media.Animation.HandoffBehavior.SnapshotAndReplace> <xref:System.Windows.Media.Animation.HandoffBehavior> для анимации при щелчке и <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior> при щелчке.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkElementStoryboardHandoffBehaviorExample.cs#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#GraphicsMMFrameworkElementStoryboardHandoffBehaviorExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkelementstoryboardhandoffbehaviorexample.vb#graphicsmmframeworkelementstoryboardhandoffbehaviorexample)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Begin">
      <MemberSignature Language="C#" Value="public void Begin (System.Windows.FrameworkElement containingObject, System.Windows.FrameworkTemplate frameworkTemplate, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Begin(class System.Windows.FrameworkElement containingObject, class System.Windows.FrameworkTemplate frameworkTemplate, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Windows.FrameworkTemplate,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Begin(System::Windows::FrameworkElement ^ containingObject, System::Windows::FrameworkTemplate ^ frameworkTemplate, System::Windows::Media::Animation::HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="frameworkTemplate" Type="System.Windows.FrameworkTemplate" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="containingObject">Объект, к которому был применен указанный шаблон <c>frameworkTemplate</c>. Анимации без <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> применяются к объекту <c>containingObject</c>.</param>
        <param name="frameworkTemplate">Анимируемый шаблон.</param>
        <param name="handoffBehavior">Поведение, которое должно использоваться в новой анимации для взаимодействия с любыми текущими анимациями.</param>
        <param name="isControllable">
          Значение <see langword="true" /> если раскадровка должна интерактивное управление; в обратном случае — значение <see langword="false" />.</param>
        <summary>Применяет анимации, сопоставленные объекту <see cref="T:System.Windows.Media.Animation.Storyboard" /> с их целевыми значениями в указанном шаблоне, а также инициирует их.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для интерактивного управления этой раскадровки, необходимо задать те же `containingObject` при вызове интерактивных методов, с помощью раскадровки.  
  
 При вызове этого метода <xref:System.Windows.Media.Animation.Clock> объекты создаются раскадровки и любые временные шкалы, он содержит. Эти часы хранятся с `containingObject`.  
  
 Начиная триггеры раскадровки <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> и <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> события.  
  
## <a name="using-the-compose-handoffbehavior"></a>Использование составлять руководство.  
 При применении <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, или <xref:System.Windows.Media.Animation.AnimationClock> к свойству с помощью <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, любые <xref:System.Windows.Media.Animation.Clock> ранее связанную с ним объекты по-прежнему потребление системных ресурсов, система времени — нет Удаляет эти часы автоматически.  
  
 Чтобы избежать проблем с производительностью при применении большое число часов с помощью <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, необходимо удалить составляющую часами анимированное свойство после их завершения. Есть несколько способов удаления часов.  
  
-   Чтобы удалить все часы из свойства, используйте <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> или <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> метод анимированного объекта. Укажите в качестве первого параметра, анимируемого свойства и `null` вторым. При этом удаляются все часы анимации из свойства.  
  
-   Для удаления определенных <xref:System.Windows.Media.Animation.AnimationClock> из списка часов используйте <xref:System.Windows.Media.Animation.Clock.Controller%2A> свойство <xref:System.Windows.Media.Animation.AnimationClock> для получения <xref:System.Windows.Media.Animation.ClockController>, затем вызовите <xref:System.Windows.Media.Animation.ClockController.Remove%2A> метод <xref:System.Windows.Media.Animation.ClockController>. Обычно это делается <xref:System.Windows.Media.Animation.Clock.Completed> обработчика событий для часов. Обратите внимание, что только корневые часы могут управляться <xref:System.Windows.Media.Animation.ClockController>; <xref:System.Windows.Media.Animation.Clock.Controller%2A> свойство дочерних часов возвращает `null`. Обратите внимание, что <xref:System.Windows.Media.Animation.Clock.Completed> событий не вызывается, если эффективная продолжительность часов является бесконечностью.  В этом случае пользователь должен определить, когда вызывать <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.  
  
 В основном это проблема для анимации объектов, имеющих длинное время жизни.  При обнаружении объектов сбора мусора, его часы также будут отключены и собраны как мусор.  
  
 Дополнительные сведения об объектах часов см. в разделе [анимации и общие сведения о синхронизации системы](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.Storyboard Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Media.Animation.Storyboard Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Storyboard" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::Storyboard ^ Clone();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.Storyboard</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает изменяемый клон данного объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />, делая глубокие копии значений этого объекта. При копировании свойств зависимостей этот метод копирует ссылки на ресурсы и привязки данных (которые могут уже не быть разрешимыми), но не копирует анимации и их текущие значения.</summary>
        <returns>Изменяемая копия текущего объекта. Свойство <see cref="P:System.Windows.Freezable.IsFrozen" /> клонированного объекта имеет значение <see langword="false" />, даже если свойство <see cref="P:System.Windows.Freezable.IsFrozen" /> исходного объекта имеет значение <see langword="true." />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод используется для создания изменяемой копии замороженный <xref:System.Windows.Freezable> объектов (или любой <xref:System.Windows.Freezable> объекта). Для удобства этот метод переопределяет наследуемую версию с помощью строго типизированной реализации.  
  
 Дополнительные сведения см. в разделе <xref:System.Windows.Freezable.Clone%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected override System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Создает новый экземпляр класса <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <returns>Новый экземпляр <see cref="T:System.Windows.Media.Animation.Storyboard" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается внутренним образом <xref:System.Windows.Freezable.CreateInstance%2A> при создании новых экземпляров <xref:System.Windows.Media.Animation.Storyboard> класс для различных методов клонирования (такие как <xref:System.Windows.Freezable.Clone%2A> и <xref:System.Windows.Freezable.CloneCurrentValue%2A>).  
  
   
  
## Examples  
 Пример типичной реализации <xref:System.Windows.Freezable.CreateInstanceCore%2A>.  
  
 [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]
 [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>Каждый <see cref="T:System.Windows.Media.Animation.Storyboard" /> подкласс необходимо реализовать этот метод. Типичная реализация является просто вызвать конструктор класса по умолчанию и возвращается результат.</para>
        </block>
        <altmember cref="M:System.Windows.Freezable.CreateInstanceCore" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentGlobalSpeed">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Извлекает свойство <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> объекта <see cref="T:System.Windows.Media.Animation.Clock" />, который был создан для данного объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Часы <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> скорость-это скорость, с которой в настоящее время идет его время, по сравнению с реальным временем.  
  
 Чтобы использовать этот метод для извлечения сведений о часах раскадровки, раскадровка должна быть управляемой. Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentGlobalSpeed">
      <MemberSignature Language="C#" Value="public double GetCurrentGlobalSpeed ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetCurrentGlobalSpeed() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentGlobalSpeed () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetCurrentGlobalSpeed();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает свойство <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> объекта <see cref="T:System.Windows.Media.Animation.Clock" />, который был создан для данного объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <returns>Текущая глобальная скорость или 0, если часы остановлены.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentGlobalSpeed">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; GetCurrentGlobalSpeed (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentGlobalSpeed(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentGlobalSpeed (containingObject As FrameworkContentElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentGlobalSpeed(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Объект, заданный в вызове метода <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" />. Этот объект содержит объекты <see cref="T:System.Windows.Media.Animation.Clock" />, созданные для данной раскадровки и ее дочерних объектов.</param>
        <summary>Извлекает свойство <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> объекта <see cref="T:System.Windows.Media.Animation.Clock" />, который был создан для данного объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <returns>Текущая глобальная скорость или <see langword="null" />, если часы остановлены.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Часы <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> скорость-это скорость, с которой в настоящее время идет его время, по сравнению с реальным временем.  
  
 Чтобы использовать этот метод для извлечения сведений о часах раскадровки, раскадровка должна быть управляемой. Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentGlobalSpeed">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; GetCurrentGlobalSpeed (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentGlobalSpeed(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentGlobalSpeed(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentGlobalSpeed (containingObject As FrameworkElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentGlobalSpeed(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Объект, заданный в вызове метода <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" />. Этот объект содержит объекты <see cref="T:System.Windows.Media.Animation.Clock" />, созданные для данной раскадровки и ее дочерних объектов.</param>
        <summary>Извлекает свойство <see cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" /> объекта <see cref="T:System.Windows.Media.Animation.Clock" />, который был создан для данного объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <returns>Текущая глобальная скорость или <see langword="null" />, если часы остановлены.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Часы <xref:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed%2A> скорость-это скорость, с которой в настоящее время идет его время, по сравнению с реальным временем.  
  
 Чтобы использовать этот метод для извлечения сведений о часах раскадровки, раскадровка должна быть управляемой. Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentGlobalSpeed" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentIteration">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Извлекает свойство <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> объекта <see cref="T:System.Windows.Media.Animation.Clock" />, который был создан для данного объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentIteration">
      <MemberSignature Language="C#" Value="public int GetCurrentIteration ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetCurrentIteration() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentIteration () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetCurrentIteration();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает свойство <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> объекта <see cref="T:System.Windows.Media.Animation.Clock" />, который был создан для данного объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <returns>Текущая итерация часов в текущем активном периоде либо значение <see langword="null" />, если часы остановлены.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Первой итерации часов имеет значение 1.  
  
 Если этой раскадровке <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> параметра `true`, полный итерации состоит из пары обратном направлении вперед, не только один из этих сегментов.  
  
 Чтобы использовать этот метод для извлечения сведений о часах раскадровки, раскадровка должна быть управляемой. Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentIteration">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; GetCurrentIteration (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;int32&gt; GetCurrentIteration(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentIteration (containingObject As FrameworkContentElement) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;int&gt; GetCurrentIteration(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Объект, заданный в вызове метода <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" />. Этот объект содержит объекты <see cref="T:System.Windows.Media.Animation.Clock" />, созданные для данной раскадровки и ее дочерних объектов.</param>
        <summary>Извлекает свойство <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> объекта <see cref="T:System.Windows.Media.Animation.Clock" />, который был создан для данного объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <returns>Текущая итерация часов в текущем активном периоде либо значение <see langword="null" />, если часы остановлены.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Первой итерации часов имеет значение 1.  
  
 Если этой раскадровке <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> параметра `true`, полный итерации состоит из пары обратном направлении вперед, не только один из этих сегментов.  
  
 Чтобы использовать этот метод для извлечения сведений о часах раскадровки, раскадровка должна быть управляемой. Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentIteration">
      <MemberSignature Language="C#" Value="public Nullable&lt;int&gt; GetCurrentIteration (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;int32&gt; GetCurrentIteration(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentIteration(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentIteration (containingObject As FrameworkElement) As Nullable(Of Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;int&gt; GetCurrentIteration(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Int32&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Объект, заданный в вызове метода <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" />. Этот объект содержит объекты <see cref="T:System.Windows.Media.Animation.Clock" />, созданные для данной раскадровки и ее дочерних объектов.</param>
        <summary>Извлекает свойство <see cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" /> объекта <see cref="T:System.Windows.Media.Animation.Clock" />, который был создан для данного объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <returns>Текущая итерация часов в текущем активном периоде либо значение <see langword="null" />, если часы остановлены.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Первой итерации часов имеет значение 1.  
  
 Если временная шкала часов имеет <xref:System.Windows.Media.Animation.Timeline.AutoReverse%2A> параметра `true`, полный итерации состоит из пары обратном направлении вперед, не только один из этих сегментов.  
  
 Независимо от текущей итерации поиск часов возвращает текущую итерацию в 1. Перезапуск часов также возвращает текущую итерацию в 1.  
  
 Чтобы использовать этот метод для извлечения сведений о часах раскадровки, раскадровка должна быть управляемой. Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentIteration" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentProgress">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Извлекает свойство <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> объекта <see cref="T:System.Windows.Media.Animation.Clock" />, который был создан для данного объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentProgress">
      <MemberSignature Language="C#" Value="public double GetCurrentProgress ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance float64 GetCurrentProgress() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentProgress () As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; double GetCurrentProgress();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает свойство <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> объекта <see cref="T:System.Windows.Media.Animation.Clock" />, который был создан для данного объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <returns>
          Значение <see langword="null" />, если часы имеют состояние <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, либо значение 0,0, если часы активны и объект <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> имеет параметр <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />, равный <see cref="P:System.Windows.Duration.Forever" />; в обратном случае значение от 0,0 до 1,0, которое указывает текущее положение часов в текущей итерации. Значение 0,0 указывает, что часы находятся в начале, а значение 1,0 – в конце текущей итерации.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы использовать этот метод для извлечения сведений о часах раскадровки, раскадровка должна быть управляемой. Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentProgress">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; GetCurrentProgress (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentProgress(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentProgress (containingObject As FrameworkContentElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentProgress(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Объект, заданный в вызове метода <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" />. Этот объект содержит объекты <see cref="T:System.Windows.Media.Animation.Clock" />, созданные для данной раскадровки и ее дочерних объектов.</param>
        <summary>Извлекает свойство <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> объекта <see cref="T:System.Windows.Media.Animation.Clock" />, который был создан для данного объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <returns>
          Значение <see langword="null" />, если часы имеют состояние <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, либо значение 0,0, если часы активны и объект <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> имеет параметр <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />, равный <see cref="P:System.Windows.Duration.Forever" />; в обратном случае значение от 0,0 до 1,0, которое указывает текущее положение часов в текущей итерации. Значение 0,0 указывает, что часы находятся в начале, а значение 1,0 – в конце текущей итерации.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы использовать этот метод для извлечения сведений о часах раскадровки, раскадровка должна быть управляемой. Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentProgress">
      <MemberSignature Language="C#" Value="public Nullable&lt;double&gt; GetCurrentProgress (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;float64&gt; GetCurrentProgress(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentProgress(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentProgress (containingObject As FrameworkElement) As Nullable(Of Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;double&gt; GetCurrentProgress(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.Double&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Объект, заданный в вызове метода <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" />. Этот объект содержит объекты <see cref="T:System.Windows.Media.Animation.Clock" />, созданные для данной раскадровки и ее дочерних объектов.</param>
        <summary>Извлекает свойство <see cref="P:System.Windows.Media.Animation.Clock.CurrentProgress" /> объекта <see cref="T:System.Windows.Media.Animation.Clock" />, который был создан для данного объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <returns>
          Значение <see langword="null" />, если часы имеют состояние <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />, либо значение 0,0, если часы активны и объект <see cref="P:System.Windows.Media.Animation.Clock.Timeline" /> имеет параметр <see cref="P:System.Windows.Media.Animation.Timeline.Duration" />, равный <see cref="P:System.Windows.Duration.Forever" />; в обратном случае значение от 0,0 до 1,0, которое указывает текущее положение часов в текущей итерации. Значение 0,0 указывает, что часы находятся в начале, а значение 1,0 – в конце текущей итерации.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы использовать этот метод для извлечения сведений о часах раскадровки, раскадровка должна быть управляемой. Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentState">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Извлекает свойство <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> объекта <see cref="T:System.Windows.Media.Animation.Clock" />, который был создан для данного объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockState GetCurrentState ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.Animation.ClockState GetCurrentState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentState" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentState () As ClockState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::ClockState GetCurrentState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockState</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает свойство <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> объекта <see cref="T:System.Windows.Media.Animation.Clock" />, который был создан для данного объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <returns>Текущее состояние часов, созданных для данной раскадровки: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" /> или <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод не показывает, приостановлено ли раскадровки. Чтобы определить, приостановлен ли раскадровки, используйте <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> метод.  
  
 Чтобы использовать этот метод для извлечения сведений о часах раскадровки, раскадровка должна быть управляемой. Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockState GetCurrentState (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.Animation.ClockState GetCurrentState(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentState (containingObject As FrameworkContentElement) As ClockState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::ClockState GetCurrentState(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Объект, заданный в вызове метода <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" />. Этот объект содержит объекты <see cref="T:System.Windows.Media.Animation.Clock" />, созданные для данной раскадровки и ее дочерних объектов.</param>
        <summary>Извлекает свойство <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> объекта <see cref="T:System.Windows.Media.Animation.Clock" />, который был создан для данного объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <returns>Текущее состояние часов, созданных для данной раскадровки: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" /> или <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод не показывает, приостановлено ли раскадровки. Чтобы определить, приостановлен ли раскадровки, используйте <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> метод.  
  
 Чтобы использовать этот метод для извлечения сведений о часах раскадровки, раскадровка должна быть управляемой. Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCurrentState">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Animation.ClockState GetCurrentState (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Windows.Media.Animation.ClockState GetCurrentState(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentState(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentState (containingObject As FrameworkElement) As ClockState" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Media::Animation::ClockState GetCurrentState(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Animation.ClockState</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Объект, заданный в вызове метода <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" />. Этот объект содержит объекты <see cref="T:System.Windows.Media.Animation.Clock" />, созданные для данной раскадровки и ее дочерних объектов.</param>
        <summary>Извлекает свойство <see cref="P:System.Windows.Media.Animation.Clock.CurrentState" /> объекта <see cref="T:System.Windows.Media.Animation.Clock" />, который был создан для данного объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <returns>Текущее состояние часов, созданных для данной раскадровки: <see cref="F:System.Windows.Media.Animation.ClockState.Active" />, <see cref="F:System.Windows.Media.Animation.ClockState.Filling" /> или <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод не показывает, приостановлено ли раскадровки. Чтобы определить, приостановлен ли раскадровки, используйте <xref:System.Windows.Media.Animation.Storyboard.GetIsPaused%2A> метод.  
  
 Чтобы использовать этот метод для извлечения сведений о часах раскадровки, раскадровка должна быть управляемой. Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetCurrentTime">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Извлекает свойство <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> объекта <see cref="T:System.Windows.Media.Animation.Clock" />, который был создан для данного объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetCurrentTime">
      <MemberSignature Language="C#" Value="public TimeSpan GetCurrentTime ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.TimeSpan GetCurrentTime() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentTime () As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TimeSpan GetCurrentTime();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Извлекает свойство <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> объекта <see cref="T:System.Windows.Media.Animation.Clock" />, который был создан для данного объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <returns>
          Значение <see langword="null" />, если часы раскадровки имеют значение <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; в обратном случае – текущее время часов раскадровки.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы использовать этот метод для извлечения сведений о часах раскадровки, раскадровка должна быть управляемой. Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentTime">
      <MemberSignature Language="C#" Value="public Nullable&lt;TimeSpan&gt; GetCurrentTime (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; GetCurrentTime(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentTime (containingObject As FrameworkContentElement) As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;TimeSpan&gt; GetCurrentTime(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Объект, заданный в вызове метода <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" />. Этот объект содержит объекты <see cref="T:System.Windows.Media.Animation.Clock" />, созданные для данной раскадровки и ее дочерних объектов.</param>
        <summary>Извлекает свойство <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> объекта <see cref="T:System.Windows.Media.Animation.Clock" />, который был создан для данного объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <returns>
          Значение <see langword="null" />, если часы раскадровки имеют значение <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; в обратном случае – текущее время часов раскадровки.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы использовать этот метод для извлечения сведений о часах раскадровки, раскадровка должна быть управляемой. Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentTime">
      <MemberSignature Language="C#" Value="public Nullable&lt;TimeSpan&gt; GetCurrentTime (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Nullable`1&lt;valuetype System.TimeSpan&gt; GetCurrentTime(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetCurrentTime(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentTime (containingObject As FrameworkElement) As Nullable(Of TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Nullable&lt;TimeSpan&gt; GetCurrentTime(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Nullable&lt;System.TimeSpan&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Объект, заданный в вызове метода <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" />. Этот объект содержит объекты <see cref="T:System.Windows.Media.Animation.Clock" />, созданные для данной раскадровки и ее дочерних объектов.</param>
        <summary>Извлекает свойство <see cref="P:System.Windows.Media.Animation.Clock.CurrentTime" /> объекта <see cref="T:System.Windows.Media.Animation.Clock" />, который был создан для данного объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <returns>
          Значение <see langword="null" />, если часы раскадровки имеют значение <see cref="F:System.Windows.Media.Animation.ClockState.Stopped" />; в обратном случае – текущее время часов раскадровки.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы использовать этот метод для извлечения сведений о часах раскадровки, раскадровка должна быть управляемой. Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.CurrentTime" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetIsPaused">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возвращает значение, указывающее, приостановлен ли объект <see cref="T:System.Windows.Media.Animation.Clock" />, который был создан для данного объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetIsPaused">
      <MemberSignature Language="C#" Value="public bool GetIsPaused ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetIsPaused() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetIsPaused" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsPaused () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsPaused();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает значение, указывающее, приостановлен ли объект <see cref="T:System.Windows.Media.Animation.Clock" />, который был создан для данного объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <returns>
          Значение <see langword="true" />, если объект <see cref="T:System.Windows.Media.Animation.Clock" />, созданный для данного объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />; в противном случае – значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы использовать этот метод для извлечения сведений о часах раскадровки, раскадровка должна быть управляемой. Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.IsPaused" />
      </Docs>
    </Member>
    <Member MemberName="GetIsPaused">
      <MemberSignature Language="C#" Value="public bool GetIsPaused (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetIsPaused(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsPaused (containingObject As FrameworkContentElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsPaused(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Объект, заданный в вызове метода <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" />. Этот объект содержит объекты <see cref="T:System.Windows.Media.Animation.Clock" />, созданные для данной раскадровки и ее дочерних объектов.</param>
        <summary>Возвращает значение, указывающее, приостановлен ли объект <see cref="T:System.Windows.Media.Animation.Clock" />, который был создан для данного объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <returns>
          Значение <see langword="true" />, если объект <see cref="T:System.Windows.Media.Animation.Clock" />, созданный для данного объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />; в противном случае – значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы использовать этот метод для извлечения сведений о часах раскадровки, раскадровка должна быть управляемой. Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.IsPaused" />
      </Docs>
    </Member>
    <Member MemberName="GetIsPaused">
      <MemberSignature Language="C#" Value="public bool GetIsPaused (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool GetIsPaused(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetIsPaused(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetIsPaused (containingObject As FrameworkElement) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool GetIsPaused(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Объект, заданный в вызове метода <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" />. Этот объект содержит объекты <see cref="T:System.Windows.Media.Animation.Clock" />, созданные для данной раскадровки и ее дочерних объектов.</param>
        <summary>Возвращает значение, указывающее, приостановлен ли объект <see cref="T:System.Windows.Media.Animation.Clock" />, который был создан для данного объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <returns>
          Значение <see langword="true" />, если объект <see cref="T:System.Windows.Media.Animation.Clock" />, созданный для данного объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />; в противном случае – значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Чтобы использовать этот метод для извлечения сведений о часах раскадровки, раскадровка должна быть управляемой. Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Clock.IsPaused" />
      </Docs>
    </Member>
    <Member MemberName="GetTarget">
      <MemberSignature Language="C#" Value="public static System.Windows.DependencyObject GetTarget (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.DependencyObject GetTarget(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetTarget(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTarget (element As DependencyObject) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::DependencyObject ^ GetTarget(System::Windows::DependencyObject ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">Шкала данных, из которой должны быть извлечено значение <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />.</param>
        <summary>Извлекает значение свойства <see cref="P:System.Windows.Media.Animation.Storyboard.Target" /> указанного объекта <see cref="T:System.Windows.Media.Animation.Timeline" />.</summary>
        <returns>Объект зависимостей, являющийся целевым значением параметра <paramref name="element" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Используйте <xref:System.Windows.Media.Animation.Storyboard.Target%2A> присоединенное свойство с временные шкалы анимации, чтобы указать объект, который они предназначены. Дополнительные сведения о том, как целевых см. в разделе <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>. Дополнительные сведения о том, как вложенные свойства в разделе [зависимостей](~/docs/framework/wpf/advanced/attached-properties-overview.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="GetTargetName">
      <MemberSignature Language="C#" Value="public static string GetTargetName (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig string GetTargetName(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetTargetName(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTargetName (element As DependencyObject) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::String ^ GetTargetName(System::Windows::DependencyObject ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">Шкала данных, из которой должны быть извлечено значение <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />.</param>
        <summary>Извлекает значение свойства <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" /> указанного объекта <see cref="T:System.Windows.Media.Animation.Timeline" />.</summary>
        <returns>Имя объекта зависимостей, являющегося целевым значением параметра <paramref name="element" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод возвращает <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> присоединенного свойства для указанного объекта. Дополнительные сведения о том, как целевых см. в разделе <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>. Дополнительные сведения о том, как вложенные свойства в разделе [зависимостей](~/docs/framework/wpf/advanced/attached-properties-overview.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="GetTargetProperty">
      <MemberSignature Language="C#" Value="public static System.Windows.PropertyPath GetTargetProperty (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.PropertyPath GetTargetProperty(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.GetTargetProperty(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetTargetProperty (element As DependencyObject) As PropertyPath" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::PropertyPath ^ GetTargetProperty(System::Windows::DependencyObject ^ element);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.PropertyPath</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">Объект зависимостей, из которого необходимо получить значение <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />.</param>
        <summary>Извлекает значение свойства <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" /> указанного объекта <see cref="T:System.Windows.Media.Animation.Timeline" />.</summary>
        <returns>Свойство, являющееся целевым для свойства <paramref name="element" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод возвращает <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> присоединенного свойства для указанного объекта. Дополнительные сведения о том, как целевых см. в разделе <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> вложенное свойство. Дополнительные сведения о том, как вложенные свойства в разделе [зависимостей](~/docs/framework/wpf/advanced/attached-properties-overview.md).  
  
 Обратите внимание, что если <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> было задано в разметке, этот метод возвращает пустую коллекцию <xref:System.Windows.PropertyPath> так, как завершается и для внутреннего хранения при синтаксическом анализе ссылки на свойство.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Pause">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Приостанавливает объект <see cref="T:System.Windows.Media.Animation.Clock" />, созданный для этого объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Pause" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Приостанавливает объект <see cref="T:System.Windows.Media.Animation.Clock" />, созданный для этого объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод приостанавливает раскадровку, но не дает ощутимого эффекта, если она не активна или в данный момент приостановлена. Все связанные дочерние объекты также будут приостановлены.  
  
 Управляемой раскадровки можно приостановить, возобновить, поиск, остановить и удалить. Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
## <a name="beginning-a-paused-storyboard"></a>Запуск приостановленной раскадровки.  
 Когда вы <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> раскадровки, которой был приостановлен, он отображается возобновление и перезапуск. Однако это не что фактически происходит. <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Метод фактически заменяет приостановленной <xref:System.Windows.Media.Animation.Storyboard> с новой версией начался. Каждый раз <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> вызывается метод, создаются объекты clock для данной раскадровки. Эти часы распределяются для свойств, которые они которого должна начаться анимация. Поэтому, если <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод вызывается снова, не перезапускает его часы; он заменяет их новых часами.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Объект, заданный в вызове метода <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" />. Этот объект содержит объекты <see cref="T:System.Windows.Media.Animation.Clock" />, созданные для данной раскадровки и ее дочерних объектов.</param>
        <summary>Приостанавливает <see cref="T:System.Windows.Media.Animation.Clock" /> указанного объекта <see cref="T:System.Windows.FrameworkContentElement" />, связанного с данным объектом <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод приостанавливает раскадровку, но не дает ощутимого эффекта, если она не активна или в данный момент приостановлена. Все связанные дочерние объекты также будут приостановлены.  
  
 Поиск приостановленной раскадровки не возобновляет ее. Возобновление приостановленной раскадровки единственным способом является использование <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> метода. Вызов <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод заменяет приостановленной раскадровки на новый, который имеет вид возобновляет ее работу.  
  
 Для интерактивного управления этой раскадровки, должны использовать одинаковые `containingObject` параметра при вызове интерактивных методов, используемых для раскадровки. Управляемой раскадровки можно приостановить, возобновить, поиск, остановить и удалить. Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Из примера в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 Приостановка триггеры часов раскадровки <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> событий.  
  
## <a name="beginning-a-paused-storyboard"></a>Запуск приостановленной раскадровки.  
 Когда вы <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> раскадровки, которой был приостановлен, он отображается возобновление и перезапуск. Однако это не что фактически происходит. <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Метод фактически заменяет сам начался версией. Каждый раз <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> вызывается метод, создаются объекты clock для данной раскадровки. Эти часы распределяются для свойств, которые они которого должна начаться анимация. Поэтому, если <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод вызывается снова, не перезапускает его часы; он заменяет их новых часами.  
  
   
  
## Examples  
 В следующем примере используется управляемой раскадровки для анимации <xref:System.Windows.Media.TextEffect>. <xref:System.Windows.Media.TextEffect> Внутри <xref:System.Windows.FrameworkContentElement>его имя области.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)" />
      </Docs>
    </Member>
    <Member MemberName="Pause">
      <MemberSignature Language="C#" Value="public void Pause (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Pause(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Pause (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Pause(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Объект, заданный в вызове метода <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" />. Этот объект содержит объекты <see cref="T:System.Windows.Media.Animation.Clock" />, созданные для данной раскадровки и ее дочерних объектов.</param>
        <summary>Приостанавливает <see cref="T:System.Windows.Media.Animation.Clock" /> указанного объекта <see cref="T:System.Windows.FrameworkElement" />, связанного с данным объектом <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод приостанавливает раскадровку, но не дает ощутимого эффекта, если она не активна или в данный момент приостановлена. Все связанные дочерние объекты также будут приостановлены.  
  
 Поиск приостановленной раскадровки не возобновляет ее. Возобновление приостановленной раскадровки единственным способом является использование <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> метода. Вызов <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод заменяет приостановленной раскадровки на новый, который имеет вид возобновляет ее работу.  
  
 Для интерактивного управления этой раскадровки, должны использовать одинаковые `containingObject` параметра при вызове интерактивных методов, используемых для раскадровки. Управляемой раскадровки можно приостановить, возобновить, поиск, остановить и удалить. Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 Приостановка триггеры часов раскадровки <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> событий.  
  
## <a name="beginning-a-paused-storyboard"></a>Запуск приостановленной раскадровки.  
 Когда вы <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> раскадровки, которой был приостановлен, он отображается возобновление и перезапуск. Однако это не что фактически происходит. <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> Метод фактически заменяет сам начался версией. Каждый раз <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> вызывается метод, создаются объекты clock для данной раскадровки. Эти часы распределяются для свойств, которые они которого должна начаться анимация. Поэтому, если <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод вызывается снова, не перезапускает его часы; он заменяет их новых часами.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Удаляет объекты <see cref="T:System.Windows.Media.Animation.Clock" />, созданные для данного объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />. Анимации, принадлежащие этому объекту <see cref="T:System.Windows.Media.Animation.Storyboard" />, больше не влияют на анимированные ими ранее свойства независимо от значения свойства <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Remove" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Удаляет объекты <see cref="T:System.Windows.Media.Animation.Clock" />, созданные для данного объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />. Анимации, принадлежащие этому объекту <see cref="T:System.Windows.Media.Animation.Storyboard" />, больше не влияют на анимированные ими ранее свойства независимо от значения свойства <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Управляемой раскадровки можно приостановить, возобновить, поиск, остановить и удалить. Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 Все интерактивные действия, выполняемые <xref:System.Windows.Media.Animation.Clock>и поэтому на <xref:System.Windows.Media.Animation.Storyboard>, происходят в следующем делении ядра времени, что происходит незадолго до следующей визуализацией. Это означает, что <xref:System.Windows.Media.Animation.Storyboard.Remove%2A> метод по-прежнему влияет на анимированные свойства до этого времени. Другими словами при очередном отображается рамка, раскадровку удаляется. Если необходимо разорвать связь из свойства анимацию до указанного времени, используйте <xref:System.Windows.UIElement.BeginAnimation%2A> метод с `animation` значение параметра `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Объект, заданный в вызове метода <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" />. Этот объект содержит объекты <see cref="T:System.Windows.Media.Animation.Clock" />, созданные для данной раскадровки и ее дочерних объектов.</param>
        <summary>Удаляет объекты <see cref="T:System.Windows.Media.Animation.Clock" />, созданные для данного объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />. Анимации, принадлежащие этому объекту <see cref="T:System.Windows.Media.Animation.Storyboard" />, больше не влияют на анимированные ими ранее свойства независимо от значения свойства <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для интерактивного управления этой раскадровки, должны использовать одинаковые `containingObject` параметра при вызове интерактивных методов, используемых для раскадровки. Управляемой раскадровки можно приостановить, возобновить, поиск, остановить и удалить. Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 Удаление триггеров часов раскадровки <xref:System.Windows.Media.Animation.Timeline.RemoveRequested> событий.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Remove(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Объект, заданный в вызове метода <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" />. Этот объект содержит объекты <see cref="T:System.Windows.Media.Animation.Clock" />, созданные для данной раскадровки и ее дочерних объектов.</param>
        <summary>Удаляет объекты <see cref="T:System.Windows.Media.Animation.Clock" />, созданные для данного объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />. Анимации, принадлежащие этому объекту <see cref="T:System.Windows.Media.Animation.Storyboard" />, больше не влияют на анимированные ими ранее свойства независимо от значения свойства <see cref="P:System.Windows.Media.Animation.Timeline.FillBehavior" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для интерактивного управления этой раскадровки, должны использовать одинаковые `containingObject` параметра при вызове интерактивных методов, используемых для раскадровки. Управляемой раскадровки можно приостановить, возобновить, поиск, остановить и удалить. Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 Удаление триггеров часов раскадровки <xref:System.Windows.Media.Animation.Timeline.RemoveRequested> событий.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Resume">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Возобновляет объект <see cref="T:System.Windows.Media.Animation.Clock" />, созданный для этого объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Resume" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возобновляет объект <see cref="T:System.Windows.Media.Animation.Clock" />, созданный для этого объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Управляемой раскадровки можно приостановить, возобновить, поиск, остановить и удалить. Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Объект, заданный в вызове метода <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" />. Этот объект содержит объекты <see cref="T:System.Windows.Media.Animation.Clock" />, созданные для данной раскадровки и ее дочерних объектов.</param>
        <summary>Возобновляет объект <see cref="T:System.Windows.Media.Animation.Clock" />, созданный для этого объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Возобновление раскадровки, которая не приостановлена не оказывает влияния.  
  
 Для интерактивного управления этой раскадровки, должны использовать одинаковые `containingObject` параметра при вызове интерактивных методов, используемых для раскадровки. Управляемой раскадровки можно приостановить, возобновить, поиск, остановить и удалить. Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 Поиск приостановленной раскадровки не возобновляет ее. Возобновление приостановленной раскадровки единственным способом является использование <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> метода. Вызов <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод после запуска раскадровки заменяет старый раскадровки имеет вид возобновляет ее работу.  
  
 Возобновление работы приостановленного часах раскадровки запускает <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> событий.  
  
   
  
## Examples  
 В следующем примере используется управляемой раскадровки для анимации <xref:System.Windows.Media.TextEffect>. <xref:System.Windows.Media.TextEffect> Внутри <xref:System.Windows.FrameworkContentElement>его имя области.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkContentElement)" />
      </Docs>
    </Member>
    <Member MemberName="Resume">
      <MemberSignature Language="C#" Value="public void Resume (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Resume(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Resume(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Resume (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Resume(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Объект, заданный в вызове метода <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" />. Этот объект содержит объекты <see cref="T:System.Windows.Media.Animation.Clock" />, созданные для данной раскадровки и ее дочерних объектов.</param>
        <summary>Возобновляет объект <see cref="T:System.Windows.Media.Animation.Clock" />, созданный для этого объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Возобновление раскадровки, которая не приостановлена не оказывает влияния.  
  
 Для интерактивного управления этой раскадровки, должны использовать одинаковые `containingObject` параметра при вызове интерактивных методов, используемых для раскадровки. Управляемой раскадровки можно приостановить, возобновить, поиск, остановить и удалить. Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 Поиск приостановленной раскадровки не возобновляет ее. Возобновление приостановленной раскадровки единственным способом является использование <xref:System.Windows.Media.Animation.Storyboard.Resume%2A> метода. Вызов <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод после запуска раскадровки заменяет старый раскадровки имеет вид возобновляет ее работу.  
  
 Возобновление работы приостановленного часах раскадровки запускает <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> событий.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.Pause(System.Windows.FrameworkElement)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Seek">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Установка объекта <see cref="T:System.Windows.Media.Animation.Storyboard" /> в новую позицию в следующем тике часов.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (offset As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(TimeSpan offset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="offset">Положительное или отрицательное значение, определяющее величину, на которую должна продвигаться вперед или назад шкала времени.</param>
        <summary>Устанавливает этот объект <see cref="T:System.Windows.Media.Animation.Storyboard" /> в указанную позицию. Объект <see cref="T:System.Windows.Media.Animation.Storyboard" /> выполнит требуемый поиск в следующем тике часов.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обратите внимание, что операции поиска не выполняют раскадровки <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> или <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> параметры в учетной записи. Раскадровка рассматривается, как будто он имеет <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 и нет <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  
  
 Для интерактивного управления этой раскадровки, должны использовать одинаковые `containingObject` параметра при вызове интерактивных методов, используемых для раскадровки. Управляемой раскадровки можно приостановить, возобновить, поиск, остановить и удалить. Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">Положительное или отрицательное значение, определяющее величину, на которую временная шкала должна переместиться вперед или назад от заданного значения <c>origin</c>.</param>
        <param name="origin">Положение, с которого применяется <c>offset</c>.</param>
        <summary>Устанавливает этот объект <see cref="T:System.Windows.Media.Animation.Storyboard" /> в указанную позицию. Объект <see cref="T:System.Windows.Media.Animation.Storyboard" /> выполнит требуемый поиск в следующем тике часов.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обратите внимание, что операции поиска не выполняют раскадровки <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> или <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> параметры в учетной записи. Раскадровка рассматривается, как будто он имеет <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 и нет <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  
  
 Для интерактивного управления этой раскадровки, должны использовать одинаковые `containingObject` параметра при вызове интерактивных методов, используемых для раскадровки. Управляемой раскадровки можно приостановить, возобновить, поиск, остановить и удалить. Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (System.Windows.FrameworkContentElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(class System.Windows.FrameworkContentElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (containingObject As FrameworkContentElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(System::Windows::FrameworkContentElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject">Объект, заданный в вызове метода <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" />. Этот объект содержит объекты <see cref="T:System.Windows.Media.Animation.Clock" />, созданные для данной раскадровки и ее дочерних объектов.</param>
        <param name="offset">Положительное или отрицательное значение, определяющее величину, на которую временная шкала должна переместиться вперед или назад от заданного значения <c>origin</c>.</param>
        <param name="origin">Положение, с которого применяется <c>offset</c>.</param>
        <summary>Устанавливает этот объект <see cref="T:System.Windows.Media.Animation.Storyboard" /> в указанную позицию. Объект <see cref="T:System.Windows.Media.Animation.Storyboard" /> выполнит требуемый поиск в следующем тике часов.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обратите внимание, что операции поиска не выполняют раскадровки <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> или <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> параметры в учетной записи. Раскадровка рассматривается, как будто он имеет <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 и нет <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  
  
 Этот метод изменяет часов раскадровки <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> для <xref:System.Windows.Media.Animation.ClockState.Active>. Этот метод не оказывает влияния на дерева времени до следующего обработки такт. Как побочный эффект соответствующие события также не вызываются до этого момента.  
  
 Для интерактивного управления этой раскадровки, должны использовать одинаковые `containingObject` параметра при вызове интерактивных методов, используемых для раскадровки. Управляемой раскадровки можно приостановить, возобновить, поиск, остановить и удалить. Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 Поиск триггеры раскадровки <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> и <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> события.  
  
   
  
## Examples  
 В следующем примере показано, как <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> и <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> методы.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementSeekExample.cs#frameworkcontentelementseekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementseekexample.vb#frameworkcontentelementseekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Seek">
      <MemberSignature Language="C#" Value="public void Seek (System.Windows.FrameworkElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Seek(class System.Windows.FrameworkElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Seek(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Seek (containingObject As FrameworkElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Seek(System::Windows::FrameworkElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject">Объект, заданный в вызове метода <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" />. Этот объект содержит объекты <see cref="T:System.Windows.Media.Animation.Clock" />, созданные для данной раскадровки и ее дочерних объектов.</param>
        <param name="offset">Положительное или отрицательное значение, определяющее величину, на которую временная шкала должна переместиться вперед или назад от заданного значения <c>origin</c>.</param>
        <param name="origin">Положение, с которого применяется <c>offset</c>.</param>
        <summary>Устанавливает этот объект <see cref="T:System.Windows.Media.Animation.Storyboard" /> в указанную позицию. Объект <see cref="T:System.Windows.Media.Animation.Storyboard" /> выполнит требуемый поиск в следующем тике часов.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обратите внимание, что операции поиска не выполняют раскадровки <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> или <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> параметры в учетной записи. Раскадровка рассматривается, как будто он имеет <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 и нет <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  
  
 Этот метод изменяет часов раскадровки <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> для <xref:System.Windows.Media.Animation.ClockState.Active>. Этот метод не оказывает влияния на дерева времени до следующего обработки такт. Как побочный эффект соответствующие события также не вызываются до этого момента.  
  
 Для интерактивного управления этой раскадровки, должны использовать одинаковые `containingObject` параметра при вызове интерактивных методов, используемых для раскадровки. Управляемой раскадровки можно приостановить, возобновить, поиск, остановить и удаляться, если она сделана управляемой. Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 Поиск триггеры раскадровки <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> и <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> события.  
  
   
  
## Examples  
 В следующем примере показано, как переход на одну секунду после запуска раскадровки.  
  
 [!code-csharp[timingbehaviors_procedural_snip#SeekStoryboardExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/timingbehaviors_procedural_snip/CSharp/SeekStoryboardExample.cs#seekstoryboardexamplewholepage)]
 [!code-vb[timingbehaviors_procedural_snip#SeekStoryboardExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/timingbehaviors_procedural_snip/visualbasic/seekstoryboardexample.vb#seekstoryboardexamplewholepage)]  
  
 В следующем примере показано, как <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> и <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> методы.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/SeekExample.cs#seekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/seekexample.vb#seekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SeekAlignedToLastTick">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Незамедлительно (синхронно) устанавливает данный объект <see cref="T:System.Windows.Media.Animation.Storyboard" /> в новую позицию.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (TimeSpan offset);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(valuetype System.TimeSpan offset) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (offset As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(TimeSpan offset);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="offset">Положительное или отрицательное значение, определяющее величину, на которую должна продвигаться вперед или назад шкала времени.</param>
        <summary>Незамедлительно (синхронно) устанавливает данный объект <see cref="T:System.Windows.Media.Animation.Storyboard" /> в новую позицию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> Когда выполняется поиск время выравнивает <xref:System.Windows.Media.Animation.Storyboard> с последнего такт таймера. Значения немедленно обновляются для отражения изменений из-за <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, несмотря на то, что эти изменения не отражаются экрана до обновления экрана.  
  
 Обратите внимание, что операции поиска не выполняют раскадровки <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> или <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> параметры в учетной записи. Раскадровка рассматривается, как будто он имеет <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 и нет <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  
  
 Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="offset">Положительное или отрицательное значение, определяющее величину, на которую временная шкала должна переместиться вперед или назад от заданного значения <c>origin</c>.</param>
        <param name="origin">Положение, с которого применяется <c>offset</c>.</param>
        <summary>Незамедлительно (синхронно) устанавливает данный объект <see cref="T:System.Windows.Media.Animation.Storyboard" /> в новую позицию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> Когда выполняется поиск время выравнивает <xref:System.Windows.Media.Animation.Storyboard> с последнего такт таймера. Значения немедленно обновляются для отражения изменений из-за <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, несмотря на то, что эти изменения не отражаются экрана до обновления экрана.  
  
 Обратите внимание, что операции поиска не выполняют раскадровки <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> или <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> параметры в учетной записи. Раскадровка рассматривается, как будто он имеет <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 и нет <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  
  
 Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (System.Windows.FrameworkContentElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(class System.Windows.FrameworkContentElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkContentElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (containingObject As FrameworkContentElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(System::Windows::FrameworkContentElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject">Объект, заданный в вызове метода <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" />. Этот объект содержит объекты <see cref="T:System.Windows.Media.Animation.Clock" />, созданные для данной раскадровки и ее дочерних объектов.</param>
        <param name="offset">Положительное или отрицательное значение, определяющее величину, на которую временная шкала должна переместиться вперед или назад от заданного значения <c>origin</c>.</param>
        <param name="origin">Положение, с которого применяется <c>offset</c>.</param>
        <summary>Незамедлительно (синхронно) устанавливает данный объект <see cref="T:System.Windows.Media.Animation.Storyboard" /> в новую позицию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> Когда выполняется поиск время выравнивает <xref:System.Windows.Media.Animation.Storyboard> с последнего такт таймера. Значения немедленно обновляются для отражения изменений из-за <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, несмотря на то, что эти изменения не отражаются экрана до обновления экрана.  
  
 Обратите внимание, что операции поиска не выполняют раскадровки <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> или <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> параметры в учетной записи. Раскадровка рассматривается, как будто он имеет <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 и нет <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  
  
 Этот метод изменяет часов раскадровки <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> для  
  
 <xref:System.Windows.Media.Animation.ClockState.Active>.  
  
 Поиск триггеры раскадровки <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> и <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> события.  
  
 Для интерактивного управления этой раскадровки, должны использовать одинаковые `containingObject` параметра при вызове интерактивных методов, используемых для раскадровки. Управляемой раскадровки можно приостановить, возобновить, поиск, остановить и удалить. Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
   
  
## Examples  
 В следующем примере показано, как <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> и <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> методы.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementSeekExample.cs#frameworkcontentelementseekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementSeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementseekexample.vb#frameworkcontentelementseekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeekAlignedToLastTick">
      <MemberSignature Language="C#" Value="public void SeekAlignedToLastTick (System.Windows.FrameworkElement containingObject, TimeSpan offset, System.Windows.Media.Animation.TimeSeekOrigin origin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SeekAlignedToLastTick(class System.Windows.FrameworkElement containingObject, valuetype System.TimeSpan offset, valuetype System.Windows.Media.Animation.TimeSeekOrigin origin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick(System.Windows.FrameworkElement,System.TimeSpan,System.Windows.Media.Animation.TimeSeekOrigin)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SeekAlignedToLastTick (containingObject As FrameworkElement, offset As TimeSpan, origin As TimeSeekOrigin)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SeekAlignedToLastTick(System::Windows::FrameworkElement ^ containingObject, TimeSpan offset, System::Windows::Media::Animation::TimeSeekOrigin origin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="offset" Type="System.TimeSpan" />
        <Parameter Name="origin" Type="System.Windows.Media.Animation.TimeSeekOrigin" />
      </Parameters>
      <Docs>
        <param name="containingObject">Объект, заданный в вызове метода <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" />. Этот объект содержит объекты <see cref="T:System.Windows.Media.Animation.Clock" />, созданные для данной раскадровки и ее дочерних объектов.</param>
        <param name="offset">Положительное или отрицательное значение, определяющее величину, на которую временная шкала должна переместиться вперед или назад от заданного значения <c>origin</c>.</param>
        <param name="origin">Положение, с которого применяется <c>offset</c>.</param>
        <summary>Незамедлительно (синхронно) устанавливает данный объект <see cref="T:System.Windows.Media.Animation.Storyboard" /> в новую позицию.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> Когда выполняется поиск время выравнивает <xref:System.Windows.Media.Animation.Storyboard> с последнего такт таймера. Значения немедленно обновляются для отражения изменений из-за <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A>, несмотря на то, что эти изменения не отражаются экрана до обновления экрана.  
  
 Обратите внимание, что операции поиска не выполняют раскадровки <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> или <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A> параметры в учетной записи. Раскадровка рассматривается, как будто он имеет <xref:System.Windows.Media.Animation.Timeline.SpeedRatio%2A> 1 и нет <xref:System.Windows.Media.Animation.ParallelTimeline.SlipBehavior%2A>.  
  
 Этот метод изменяет часов раскадровки <xref:System.Windows.Media.Animation.Clock.CurrentState%2A> для  
  
 <xref:System.Windows.Media.Animation.ClockState.Active>.  
  
 Поиск триггеры раскадровки <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> и <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> события.  
  
 Для интерактивного управления этой раскадровки, должны использовать одинаковые `containingObject` параметра при вызове интерактивных методов, используемых для раскадровки. Управляемой раскадровки можно приостановить, возобновить, поиск, остановить и удалить. Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
   
  
## Examples  
 В следующем примере показано, как <xref:System.Windows.Media.Animation.Storyboard.Seek%2A> и <xref:System.Windows.Media.Animation.Storyboard.SeekAlignedToLastTick%2A> методы.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/SeekExample.cs#seekexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#SeekExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/seekexample.vb#seekexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetSpeedRatio">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Устанавливает коэффициент скорости интерактивного взаимодействия для объекта <see cref="T:System.Windows.Media.Animation.Clock" />, который был создан для этого объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetSpeedRatio">
      <MemberSignature Language="C#" Value="public void SetSpeedRatio (double speedRatio);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSpeedRatio(float64 speedRatio) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSpeedRatio (speedRatio As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSpeedRatio(double speedRatio);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="speedRatio" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="speedRatio">Конечное значение больше нуля, которое представляет новый коэффициент скорости интерактивного взаимодействия раскадровки. Это значение умножается на значение свойства <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> для определения итоговой скорости раскадровки. Это значение не перезаписывает значение свойства раскадровки <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />. Например, при вызове этого метода с указанием скорости интерактивного взаимодействия 3 для раскадровки, свойство <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> которой имеет значение 0,5, итоговая скорость раскадровки составит 1.5.</param>
        <summary>Устанавливает коэффициент скорости интерактивного взаимодействия для объекта <see cref="T:System.Windows.Media.Animation.Clock" />, который был создан для этого объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Управляемой раскадровки можно приостановить, возобновить, поиск, остановить и удалить. Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSpeedRatio">
      <MemberSignature Language="C#" Value="public void SetSpeedRatio (System.Windows.FrameworkContentElement containingObject, double speedRatio);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSpeedRatio(class System.Windows.FrameworkContentElement containingObject, float64 speedRatio) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkContentElement,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSpeedRatio (containingObject As FrameworkContentElement, speedRatio As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSpeedRatio(System::Windows::FrameworkContentElement ^ containingObject, double speedRatio);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
        <Parameter Name="speedRatio" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="containingObject">Объект, заданный в вызове метода <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" />. Этот объект содержит объекты <see cref="T:System.Windows.Media.Animation.Clock" />, созданные для данной раскадровки и ее дочерних объектов.</param>
        <param name="speedRatio">Конечное значение больше нуля, которое представляет новый коэффициент скорости интерактивного взаимодействия раскадровки. Это значение умножается на значение свойства <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> для определения итоговой скорости раскадровки. Это значение не перезаписывает значение свойства раскадровки <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />. Например, при вызове этого метода с указанием скорости интерактивного взаимодействия 3 для раскадровки, свойство <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> которой имеет значение 0,5, итоговая скорость раскадровки составит 1.5.</param>
        <summary>Устанавливает коэффициент скорости интерактивного взаимодействия для объекта <see cref="T:System.Windows.Media.Animation.Clock" />, который был создан для этого объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для интерактивного управления этой раскадровки, должны использовать одинаковые `containingObject` параметра при вызове интерактивных методов, используемых для раскадровки. Управляемой раскадровки можно приостановить, возобновить, поиск, остановить и удалить. Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 Вызов этого метода вызывает <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> событий.  
  
   
  
## Examples  
 В следующем примере используется управляемой раскадровки для анимации <xref:System.Windows.Media.TextEffect>. <xref:System.Windows.Media.TextEffect> Внутри <xref:System.Windows.FrameworkContentElement>его имя области.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetSpeedRatio">
      <MemberSignature Language="C#" Value="public void SetSpeedRatio (System.Windows.FrameworkElement containingObject, double speedRatio);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetSpeedRatio(class System.Windows.FrameworkElement containingObject, float64 speedRatio) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetSpeedRatio(System.Windows.FrameworkElement,System.Double)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetSpeedRatio (containingObject As FrameworkElement, speedRatio As Double)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetSpeedRatio(System::Windows::FrameworkElement ^ containingObject, double speedRatio);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
        <Parameter Name="speedRatio" Type="System.Double" />
      </Parameters>
      <Docs>
        <param name="containingObject">Объект, заданный в вызове метода <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" />. Этот объект содержит объекты <see cref="T:System.Windows.Media.Animation.Clock" />, созданные для данной раскадровки и ее дочерних объектов.</param>
        <param name="speedRatio">Конечное значение больше нуля, которое представляет новый коэффициент скорости интерактивного взаимодействия раскадровки. Это значение умножается на значение свойства <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> для определения итоговой скорости раскадровки. Это значение не перезаписывает значение свойства раскадровки <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" />. Например, при вызове этого метода с указанием скорости интерактивного взаимодействия 3 для раскадровки, свойство <see cref="P:System.Windows.Media.Animation.Timeline.SpeedRatio" /> которой имеет значение 0,5, итоговая скорость раскадровки составит 1.5.</param>
        <summary>Устанавливает коэффициент скорости интерактивного взаимодействия для объекта <see cref="T:System.Windows.Media.Animation.Clock" />, который был создан для этого объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для интерактивного управления этой раскадровки, должны использовать одинаковые `containingObject` параметра при вызове интерактивных методов, используемых для раскадровки. Управляемой раскадровки можно приостановить, возобновить, поиск, остановить и удалить. Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 Вызов этого метода вызывает <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> событий.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetTarget">
      <MemberSignature Language="C#" Value="public static void SetTarget (System.Windows.DependencyObject element, System.Windows.DependencyObject value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTarget(class System.Windows.DependencyObject element, class System.Windows.DependencyObject value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetTarget(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTarget (element As DependencyObject, value As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTarget(System::Windows::DependencyObject ^ element, System::Windows::DependencyObject ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">Объект <see cref="T:System.Windows.Media.Animation.Timeline" />, для которого в качестве целевого объекта используется объект зависимостей.</param>
        <param name="value">Объект зависимостей для целевого объекта.</param>
        <summary>Делает целевой объект <see cref="T:System.Windows.Media.Animation.Timeline" /> объектом зависимостей.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод устанавливает <xref:System.Windows.Media.Animation.Storyboard.Target%2A> присоединенного свойства для указанного объекта. Дополнительные сведения о том, как целевых см. в разделе <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>. Дополнительные сведения о том, как вложенные свойства в разделе [зависимостей](~/docs/framework/wpf/advanced/attached-properties-overview.md).  
  
> [!NOTE]
>  <xref:System.Windows.Media.Animation.Storyboard.Target%2A> Свойство не является сериализуемым, так как ему можно присвоить любой <xref:System.Windows.DependencyObject>. Не гарантируется, что этот объект можно правильно ссылаться из XAML.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="SetTargetName">
      <MemberSignature Language="C#" Value="public static void SetTargetName (System.Windows.DependencyObject element, string name);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTargetName(class System.Windows.DependencyObject element, string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetTargetName(System.Windows.DependencyObject,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTargetName (element As DependencyObject, name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTargetName(System::Windows::DependencyObject ^ element, System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="element">Объект <see cref="T:System.Windows.Media.Animation.Timeline" />, для которого в качестве целевого объекта используется объект зависимостей.</param>
        <param name="name">Имя объекта зависимостей, который будет целевым.</param>
        <summary>Делает целевым объектом <see cref="T:System.Windows.Media.Animation.Timeline" /> объект зависимостей с указанным именем.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод устанавливает <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A> присоединенного свойства для указанного объекта. Дополнительные сведения о том, как целевых см. в разделе <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>. Дополнительные сведения о том, как вложенные свойства в разделе [зависимостей](~/docs/framework/wpf/advanced/attached-properties-overview.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="SetTargetProperty">
      <MemberSignature Language="C#" Value="public static void SetTargetProperty (System.Windows.DependencyObject element, System.Windows.PropertyPath path);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetTargetProperty(class System.Windows.DependencyObject element, class System.Windows.PropertyPath path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SetTargetProperty(System.Windows.DependencyObject,System.Windows.PropertyPath)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetTargetProperty (element As DependencyObject, path As PropertyPath)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetTargetProperty(System::Windows::DependencyObject ^ element, System::Windows::PropertyPath ^ path);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="path" Type="System.Windows.PropertyPath" />
      </Parameters>
      <Docs>
        <param name="element">Объект <see cref="T:System.Windows.Media.Animation.Timeline" />, с которым должен быть связано указанное свойство зависимостей.</param>
        <param name="path">Путь, который указывает на анимируемое свойство зависимостей.</param>
        <summary>Делает целевым объектом <see cref="T:System.Windows.Media.Animation.Timeline" /> свойство зависимостей.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод устанавливает <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A> присоединенного свойства для указанного объекта. Дополнительные сведения о том, как целевых см. в разделе <xref:System.Windows.Media.Animation.Storyboard.TargetProperty%2A>. Дополнительные сведения о том, как вложенные свойства в разделе [зависимостей](~/docs/framework/wpf/advanced/attached-properties-overview.md).  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SkipToFill">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Продвигает текущее время объекта <see cref="T:System.Windows.Media.Animation.Clock" /> раскадровки в конец активного периода.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SkipToFill" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToFill ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToFill();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Продвигает текущее время объекта <see cref="T:System.Windows.Media.Animation.Clock" /> раскадровки в конец активного периода.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Управляемой раскадровки можно приостановить, возобновить, поиск, остановить и удалить. Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToFill (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToFill(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Объект, заданный в вызове метода <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" />. Этот объект содержит объекты <see cref="T:System.Windows.Media.Animation.Clock" />, созданные для данной раскадровки и ее дочерних объектов.</param>
        <summary>Продвигает текущее время объекта <see cref="T:System.Windows.Media.Animation.Clock" /> раскадровки в конец активного периода.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод перемещает раскадровки текущее время в конец его активного периода; поведение раскадровки в этот момент определяется его <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> параметр. Если <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> равно <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, заполняет раскадровку; Если задано значение <xref:System.Windows.Media.Animation.FillBehavior.Stop>, остановки раскадровки.  
  
 Вызов этого метода раскадровки с длиться бесконечно, бесконечное число повторений не оказывает влияния. Вызов этого метода для неактивной раскадровки не оказывает влияния.  
  
 Переход часов периода триггеры его заполнения <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> и <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> события.  
  
 Для интерактивного управления этой раскадровки, должны использовать одинаковые `containingObject` параметра при вызове интерактивных методов, используемых для раскадровки. Управляемой раскадровки можно приостановить, возобновить, поиск, остановить и удалить. Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
   
  
## Examples  
 В следующем примере используется управляемой раскадровки для анимации <xref:System.Windows.Media.TextEffect>. <xref:System.Windows.Media.TextEffect> Внутри <xref:System.Windows.FrameworkContentElement>его имя области.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SkipToFill">
      <MemberSignature Language="C#" Value="public void SkipToFill (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SkipToFill(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.SkipToFill(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SkipToFill (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SkipToFill(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Объект, заданный в вызове метода <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" />. Этот объект содержит объекты <see cref="T:System.Windows.Media.Animation.Clock" />, созданные для данной раскадровки и ее дочерних объектов.</param>
        <summary>Продвигает текущее время объекта <see cref="T:System.Windows.Media.Animation.Clock" /> раскадровки в конец активного периода.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод перемещает раскадровки текущее время в конец его активного периода; поведение раскадровки в этот момент определяется его <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> параметр. Если <xref:System.Windows.Media.Animation.Timeline.FillBehavior%2A> равно <xref:System.Windows.Media.Animation.FillBehavior.HoldEnd>, заполняет раскадровку; Если задано значение <xref:System.Windows.Media.Animation.FillBehavior.Stop>, остановки раскадровки.  
  
 Вызов этого метода раскадровки с длиться бесконечно, бесконечное число повторений не оказывает влияния. Вызов этого метода для неактивной раскадровки не оказывает влияния.  
  
 Переход часов периода триггеры его заполнения <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> и <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> события.  
  
 Для интерактивного управления этой раскадровки, должны использовать одинаковые `containingObject` параметра при вызове интерактивных методов, используемых для раскадровки. Управляемой раскадровки можно приостановить, возобновить, поиск, остановить и удалить. Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Stop">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Останавливает объект <see cref="T:System.Windows.Media.Animation.Clock" />, созданный для этого объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Stop" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Останавливает объект <see cref="T:System.Windows.Media.Animation.Clock" />, созданный для этого объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обратите внимание, что остановка раскадровки не срабатывает <xref:System.Windows.Media.Animation.Timeline.Completed> событий.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop (System.Windows.FrameworkContentElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop(class System.Windows.FrameworkContentElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkContentElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop (containingObject As FrameworkContentElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop(System::Windows::FrameworkContentElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkContentElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Объект, заданный в вызове метода <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkContentElement,System.Boolean)" />. Этот объект содержит объекты <see cref="T:System.Windows.Media.Animation.Clock" />, созданные для данной раскадровки и ее дочерних объектов.</param>
        <summary>Останавливает объект <see cref="T:System.Windows.Media.Animation.Clock" />, созданный для этого объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Windows.Media.Animation.ClockState.Stopped> раскадровки больше не влияет на его свойства целевого объекта: свойства, которые были анимированы восстановить первоначальные значения.  
  
 Остановка триггеры часы <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> и <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> события, но не <xref:System.Windows.Media.Animation.Timeline.Completed> события.  
  
 Для интерактивного управления этой раскадровки, должны использовать одинаковые `containingObject` параметра при вызове интерактивных методов, используемых для раскадровки. Управляемой раскадровки можно приостановить, возобновить, поиск, остановить и удалить. Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
   
  
## Examples  
 В следующем примере используется управляемой раскадровки для анимации <xref:System.Windows.Media.TextEffect>. <xref:System.Windows.Media.TextEffect> Внутри <xref:System.Windows.FrameworkContentElement>его имя области.  
  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/FrameworkContentElementControlStoryboardExample.cs#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#FrameworkContentElementControlStoryboardExampleUsingWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/frameworkcontentelementcontrolstoryboardexample.vb#frameworkcontentelementcontrolstoryboardexampleusingwholepage)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Stop">
      <MemberSignature Language="C#" Value="public void Stop (System.Windows.FrameworkElement containingObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Stop(class System.Windows.FrameworkElement containingObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.Animation.Storyboard.Stop(System.Windows.FrameworkElement)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Stop (containingObject As FrameworkElement)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Stop(System::Windows::FrameworkElement ^ containingObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="containingObject" Type="System.Windows.FrameworkElement" />
      </Parameters>
      <Docs>
        <param name="containingObject">Объект, заданный в вызове метода <see cref="M:System.Windows.Media.Animation.Storyboard.Begin(System.Windows.FrameworkElement,System.Boolean)" />. Этот объект содержит объекты <see cref="T:System.Windows.Media.Animation.Clock" />, созданные для данной раскадровки и ее дочерних объектов.</param>
        <summary>Останавливает объект <see cref="T:System.Windows.Media.Animation.Clock" />, созданный для этого объекта <see cref="T:System.Windows.Media.Animation.Storyboard" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Windows.Media.Animation.ClockState.Stopped> раскадровки больше не влияет на его свойства целевого объекта: свойства, которые были анимированы восстановить первоначальные значения.  
  
 Остановка триггеры часы <xref:System.Windows.Media.Animation.Timeline.CurrentGlobalSpeedInvalidated> и <xref:System.Windows.Media.Animation.Timeline.CurrentStateInvalidated> события, но не <xref:System.Windows.Media.Animation.Timeline.Completed> события.  
  
 Для интерактивного управления этой раскадровки, должны использовать одинаковые `containingObject` параметра при вызове интерактивных методов, используемых для раскадровки. Управляемой раскадровки можно приостановить, возобновить, поиск, остановить и удалить. Чтобы сделать раскадровку управляемой в коде, необходимо использовать соответствующую перегрузку раскадровки <xref:System.Windows.Media.Animation.Storyboard.Begin%2A> метод и укажите `true` чтобы сделать его управляемым. Пример см. в разделе [как: управлять раскадровкой после ее запуска](~/docs/framework/wpf/graphics-multimedia/how-to-control-a-storyboard-after-it-starts.md).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="see GetTarget, and SetTarget" />
      <MemberSignature Language="ILAsm" Value="see GetTarget, and SetTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Storyboard.Target" />
      <MemberSignature Language="VB.NET" Value="see GetTarget, and SetTarget" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetName">
      <MemberSignature Language="C#" Value="see GetTargetName, and SetTargetName" />
      <MemberSignature Language="ILAsm" Value="see GetTargetName, and SetTargetName" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      <MemberSignature Language="VB.NET" Value="see GetTargetName, and SetTargetName" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetNameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TargetNameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TargetNameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Storyboard.TargetNameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetNameProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TargetNameProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Идентифицирует присоединенное свойство <see cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="TargetProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TargetProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TargetProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TargetProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Идентифицирует присоединенное свойство <see cref="P:System.Windows.Media.Animation.Storyboard.Target" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetName" />
      </Docs>
    </Member>
    <Member MemberName="TargetPropertyProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TargetPropertyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TargetPropertyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.Media.Animation.Storyboard.TargetPropertyProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TargetPropertyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TargetPropertyProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Идентифицирует присоединенное свойство <see cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />.</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Windows.Media.Animation.Storyboard.TargetProperty" />
      </Docs>
    </Member>
  </Members>
</Type>