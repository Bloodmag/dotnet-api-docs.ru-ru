<Type Name="StreamGeometryContext" FullName="System.Windows.Media.StreamGeometryContext">
  <TypeSignature Language="C#" Value="public abstract class StreamGeometryContext : System.Windows.Threading.DispatcherObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit StreamGeometryContext extends System.Windows.Threading.DispatcherObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Media.StreamGeometryContext" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class StreamGeometryContext&#xA;Inherits DispatcherObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class StreamGeometryContext abstract : System::Windows::Threading::DispatcherObject, IDisposable" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="4469f-101">Описывает геометрию с использованием команд рисования.</span><span class="sxs-lookup"><span data-stu-id="4469f-101">Describes a geometry using drawing commands.</span></span> <span data-ttu-id="4469f-102">Данный класс используется с классом <see cref="T:System.Windows.Media.StreamGeometry" /> для создания легковесной геометрии, не поддерживающей привязку данных, анимацию или модификацию.</span><span class="sxs-lookup"><span data-stu-id="4469f-102">This class is used with the <see cref="T:System.Windows.Media.StreamGeometry" /> class to create a lightweight geometry that does not support data binding, animation, or modification.</span></span></summary>
    <remarks>To be added.</remarks>
    <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4469f-103">Предпринята попытка добавления сегмента, не начав фигуру путем вызова метода <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" />.</span><span class="sxs-lookup"><span data-stu-id="4469f-103">An attempt was made to add a segment without starting a figure by calling the <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> method.</span></span></exception>
    <altmember cref="T:System.Windows.Media.StreamGeometry" />
    <altmember cref="T:System.Windows.Media.PathGeometry" />
  </Docs>
  <Members>
    <Member MemberName="ArcTo">
      <MemberSignature Language="C#" Value="public abstract void ArcTo (System.Windows.Point point, System.Windows.Size size, double rotationAngle, bool isLargeArc, System.Windows.Media.SweepDirection sweepDirection, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ArcTo(valuetype System.Windows.Point point, valuetype System.Windows.Size size, float64 rotationAngle, bool isLargeArc, valuetype System.Windows.Media.SweepDirection sweepDirection, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void ArcTo(System::Windows::Point point, System::Windows::Size size, double rotationAngle, bool isLargeArc, System::Windows::Media::SweepDirection sweepDirection, bool isStroked, bool isSmoothJoin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="size" Type="System.Windows.Size" />
        <Parameter Name="rotationAngle" Type="System.Double" />
        <Parameter Name="isLargeArc" Type="System.Boolean" />
        <Parameter Name="sweepDirection" Type="System.Windows.Media.SweepDirection" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="4469f-104">Конечная точка дуги.</span><span class="sxs-lookup"><span data-stu-id="4469f-104">The destination point for the end of the arc.</span></span></param>
        <param name="size"><span data-ttu-id="4469f-105">Радиусы овала (половина ширины и половина высоты), периметр которого используется для рисования угла.</span><span class="sxs-lookup"><span data-stu-id="4469f-105">The radii (half the width and half the height) of an oval whose perimeter is used to draw the angle.</span></span> <span data-ttu-id="4469f-106">Если этот овал очень закруглен во всех направлениях, дуга будет закруглена, если она почти плоская, так же как дуга. Например, очень большая ширина и высота будут представлять очень большой овал, в результате чего угол получится слегка скривленным.</span><span class="sxs-lookup"><span data-stu-id="4469f-106">If the oval is very rounded in all directions, the arc will be rounded, if it is nearly flat, so will the arc. For example, a very large width and height would represent a very large oval, which would give a slight curvature for the angle.</span></span></param>
        <param name="rotationAngle"><span data-ttu-id="4469f-107">Угол поворота овала, определяющий кривую.</span><span class="sxs-lookup"><span data-stu-id="4469f-107">The rotation angle of the oval that specifies the curve.</span></span> <span data-ttu-id="4469f-108">Кривизна дуги может быть повернута с помощью этого параметра.</span><span class="sxs-lookup"><span data-stu-id="4469f-108">The curvature of the arc can be rotated with this parameter.</span></span></param>
        <param name="isLargeArc">
          <span data-ttu-id="4469f-109"><see langword="true" /> для рисования дуги больше чем на 180 градусов; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4469f-109"><see langword="true" /> to draw the arc greater than 180 degrees; otherwise, <see langword="false" />.</span></span></param>
        <param name="sweepDirection"><span data-ttu-id="4469f-110">Значение, указывающее, в каком направлении рисуется дуга: <see cref="F:System.Windows.Media.SweepDirection.Clockwise" /> или <see cref="F:System.Windows.Media.SweepDirection.Counterclockwise" />.</span><span class="sxs-lookup"><span data-stu-id="4469f-110">A value that indicates whether the arc is drawn in the <see cref="F:System.Windows.Media.SweepDirection.Clockwise" /> or <see cref="F:System.Windows.Media.SweepDirection.Counterclockwise" /> direction.</span></span></param>
        <param name="isStroked">
          <span data-ttu-id="4469f-111"><see langword="true" />, чтобы сегмент был обведенным, когда для его визуализации используется <see cref="T:System.Windows.Media.Pen" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4469f-111"><see langword="true" /> to make the segment stroked when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span></span></param>
        <param name="isSmoothJoin">
          <span data-ttu-id="4469f-112"><see langword="true" /> для интерпретации соединения между этим и предыдущим сегментами как угла при обводке с помощью <see cref="T:System.Windows.Media.Pen" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4469f-112"><see langword="true" /> to treat the join between this segment and the previous segment as a corner when stroked with a <see cref="T:System.Windows.Media.Pen" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="4469f-113">Рисует дугу к заданной точке.</span><span class="sxs-lookup"><span data-stu-id="4469f-113">Draws an arc to the specified point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4469f-114">Этот метод использует конечную точку предыдущего сегмента начальной точкой.</span><span class="sxs-lookup"><span data-stu-id="4469f-114">This method uses the end point of the previous segment as its starting point.</span></span> <span data-ttu-id="4469f-115">Если это первый сегмент в фигуре, она использует точку, указанную <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> метод в качестве начальной точки.</span><span class="sxs-lookup"><span data-stu-id="4469f-115">If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.</span></span>  
  
 <span data-ttu-id="4469f-116">Объект <xref:System.Windows.Media.StreamGeometry> не может быть сериализован, если он содержит <xref:System.Windows.Media.Transform> или любой-вычерчивании или Незаполненный сегментов.</span><span class="sxs-lookup"><span data-stu-id="4469f-116">A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4469f-117">В следующем примере показано, как Рисование окружности с помощью <xref:System.Windows.Media.StreamGeometryContext.ArcTo%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="4469f-117">The following example shows how to draw an arc using the <xref:System.Windows.Media.StreamGeometryContext.ArcTo%2A> method.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryArcToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryArcToExample.cs#streamgeometryarctoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryArcToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometryarctoexample.vb#streamgeometryarctoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="BeginFigure">
      <MemberSignature Language="C#" Value="public abstract void BeginFigure (System.Windows.Point startPoint, bool isFilled, bool isClosed);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginFigure(valuetype System.Windows.Point startPoint, bool isFilled, bool isClosed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub BeginFigure (startPoint As Point, isFilled As Boolean, isClosed As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void BeginFigure(System::Windows::Point startPoint, bool isFilled, bool isClosed);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="startPoint" Type="System.Windows.Point" />
        <Parameter Name="isFilled" Type="System.Boolean" />
        <Parameter Name="isClosed" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="startPoint"><span data-ttu-id="4469f-118">Точка <see cref="T:System.Windows.Point" />, с которой начинается фигура.</span><span class="sxs-lookup"><span data-stu-id="4469f-118">The <see cref="T:System.Windows.Point" /> where the figure begins.</span></span></param>
        <param name="isFilled">
          <span data-ttu-id="4469f-119">Значение <see langword="true" /> для использования области, содержащейся в этой фигуре, для проверки нажатия, отрисовки и отсечения; в противном случае значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4469f-119"><see langword="true" /> to use the area contained by this figure for hit-testing, rendering, and clipping; otherwise, <see langword="false" />.</span></span></param>
        <param name="isClosed">
          <span data-ttu-id="4469f-120">Значение <see langword="true" /> для создания замкнутой фигуры; в противном случае значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4469f-120"><see langword="true" /> to close the figure; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="4469f-121">Например, если рисуются две соединительные линии и <c>isClosed</c> имеет значение <see langword="false" />, рисунок будет состоять из двух линий, но если <c>isClosed</c> имеет значение <see langword="true" />, две линии будут замкнуты для образования треугольника.</span><span class="sxs-lookup"><span data-stu-id="4469f-121">For example, if two connecting lines are drawn, and <c>isClosed</c> is set to <see langword="false" />, the drawing will just be of two lines but if <c>isClosed</c> is set to <see langword="true" />, the two lines will be closed to create a triangle.</span></span></param>
        <summary><span data-ttu-id="4469f-122">Задает начальную точку новой фигуры.</span><span class="sxs-lookup"><span data-stu-id="4469f-122">Specifies the starting point for a new figure.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4469f-123">Путем вызова данного метода несколько раз, можно создать несколько фигур (автономная геометрические фигуры) в рамках этого <xref:System.Windows.Media.StreamGeometryContext>.</span><span class="sxs-lookup"><span data-stu-id="4469f-123">By calling this method multiple times, you can create multiple figures (self-contained geometric shapes) within this <xref:System.Windows.Media.StreamGeometryContext>.</span></span>  
  
 <span data-ttu-id="4469f-124">Объект <xref:System.Windows.Media.StreamGeometry> не может быть сериализован, если он содержит <xref:System.Windows.Media.Transform> или любой-вычерчивании или Незаполненный сегментов.</span><span class="sxs-lookup"><span data-stu-id="4469f-124">A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BezierTo">
      <MemberSignature Language="C#" Value="public abstract void BezierTo (System.Windows.Point point1, System.Windows.Point point2, System.Windows.Point point3, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BezierTo(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2, valuetype System.Windows.Point point3, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub BezierTo (point1 As Point, point2 As Point, point3 As Point, isStroked As Boolean, isSmoothJoin As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void BezierTo(System::Windows::Point point1, System::Windows::Point point2, System::Windows::Point point3, bool isStroked, bool isSmoothJoin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
        <Parameter Name="point3" Type="System.Windows.Point" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point1"><span data-ttu-id="4469f-125">Первая контрольная точка, используемая для задания формы кривой.</span><span class="sxs-lookup"><span data-stu-id="4469f-125">The first control point used to specify the shape of the curve.</span></span></param>
        <param name="point2"><span data-ttu-id="4469f-126">Вторая контрольная точка, используемая для задания формы кривой.</span><span class="sxs-lookup"><span data-stu-id="4469f-126">The second control point used to specify the shape of the curve.</span></span></param>
        <param name="point3"><span data-ttu-id="4469f-127">Конечная точка кривой.</span><span class="sxs-lookup"><span data-stu-id="4469f-127">The destination point for the end of the curve.</span></span></param>
        <param name="isStroked">
          <span data-ttu-id="4469f-128"><see langword="true" />, чтобы сегмент был обведенным, когда для его визуализации используется <see cref="T:System.Windows.Media.Pen" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4469f-128"><see langword="true" /> to make the segment stroked when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span></span></param>
        <param name="isSmoothJoin">
          <span data-ttu-id="4469f-129"><see langword="true" /> для интерпретации соединения между этим и предыдущим сегментами как угла при обводке с помощью <see cref="T:System.Windows.Media.Pen" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4469f-129"><see langword="true" /> to treat the join between this segment and the previous segment as a corner when stroked with a <see cref="T:System.Windows.Media.Pen" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="4469f-130">Рисует кривую Безье к заданной точке.</span><span class="sxs-lookup"><span data-stu-id="4469f-130">Draws a Bezier curve to the specified point.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4469f-131">Кривая Безье третьего порядка определяется начальной точкой, конечной точкой и двумя контрольными точками.</span><span class="sxs-lookup"><span data-stu-id="4469f-131">A cubic Bezier curve is defined by a start point, end point, and two control points.</span></span> <span data-ttu-id="4469f-132">Первая контрольная точка определяет кривизну первой половины сегмента, а второй контрольной точки кривизны второй половины сегмента.</span><span class="sxs-lookup"><span data-stu-id="4469f-132">The first control point determines the curvature of the first half of the segment, and the second control point determines the curvature of the second half of the segment.</span></span>  
  
 <span data-ttu-id="4469f-133">Этот метод использует конечную точку предыдущего сегмента начальной точкой.</span><span class="sxs-lookup"><span data-stu-id="4469f-133">This method uses the end point of the previous segment as its starting point.</span></span> <span data-ttu-id="4469f-134">Если это первый сегмент в фигуре, она использует точку, указанную <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> метод в качестве начальной точки.</span><span class="sxs-lookup"><span data-stu-id="4469f-134">If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.</span></span>  
  
 <span data-ttu-id="4469f-135">Объект <xref:System.Windows.Media.StreamGeometry> не может быть сериализован, если он содержит <xref:System.Windows.Media.Transform> или любой-вычерчивании или Незаполненный сегментов.</span><span class="sxs-lookup"><span data-stu-id="4469f-135">A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4469f-136">В следующем примере показано, как для рисования кривой Безье с помощью <xref:System.Windows.Media.StreamGeometryContext.BezierTo%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="4469f-136">The following example shows how to draw a Bezier curve using the <xref:System.Windows.Media.StreamGeometryContext.BezierTo%2A> method.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryBezierToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryBezierToExample.cs#streamgeometrybeziertoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryBezierToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometrybeziertoexample.vb#streamgeometrybeziertoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4469f-137">Предпринята попытка добавления сегмента, не начав фигуру путем вызова метода <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" />.</span><span class="sxs-lookup"><span data-stu-id="4469f-137">An attempt was made to add a segment without starting a figure by calling the <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> method.</span></span></exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Close">
      <MemberSignature Language="C#" Value="public virtual void Close ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Close() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.Close" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Close ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Close();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4469f-138">Закрывает данный контекст и сбрасывает его содержимое, чтобы его можно было отобразить.</span><span class="sxs-lookup"><span data-stu-id="4469f-138">Closes this context and flushes its content so that it can be rendered.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4469f-139">После закрытия контекст не может изменяться.</span><span class="sxs-lookup"><span data-stu-id="4469f-139">Once closed, the context cannot be modified.</span></span> <span data-ttu-id="4469f-140">Контекст должен быть закрыт перед отрисовкой его содержимого.</span><span class="sxs-lookup"><span data-stu-id="4469f-140">The context must be closed before its content can be rendered.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="4469f-141">Данный контекст уже зарыт или удален.</span><span class="sxs-lookup"><span data-stu-id="4469f-141">This context has already been closed or disposed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="LineTo">
      <MemberSignature Language="C#" Value="public abstract void LineTo (System.Windows.Point point, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void LineTo(valuetype System.Windows.Point point, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.LineTo(System.Windows.Point,System.Boolean,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void LineTo(System::Windows::Point point, bool isStroked, bool isSmoothJoin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point" Type="System.Windows.Point" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point"><span data-ttu-id="4469f-142">Конечная точка линии.</span><span class="sxs-lookup"><span data-stu-id="4469f-142">The destination point for the end of the line.</span></span></param>
        <param name="isStroked">
          <span data-ttu-id="4469f-143"><see langword="true" />, чтобы сегмент был обведенным, когда для его визуализации используется <see cref="T:System.Windows.Media.Pen" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4469f-143"><see langword="true" /> to make the segment stroked when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span></span></param>
        <param name="isSmoothJoin">
          <span data-ttu-id="4469f-144"><see langword="true" /> для интерпретации соединения между этим и предыдущим сегментами как угла при обводке с помощью <see cref="T:System.Windows.Media.Pen" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4469f-144"><see langword="true" /> to treat the join between this segment and the previous segment as a corner when stroked with a <see cref="T:System.Windows.Media.Pen" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="4469f-145">Рисует прямую к заданной объектом <see cref="T:System.Windows.Point" /> точке.</span><span class="sxs-lookup"><span data-stu-id="4469f-145">Draws a straight line to the specified <see cref="T:System.Windows.Point" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4469f-146">Этот метод использует конечную точку предыдущего сегмента начальной точкой.</span><span class="sxs-lookup"><span data-stu-id="4469f-146">This method uses the end point of the previous segment as its starting point.</span></span> <span data-ttu-id="4469f-147">Если это первый сегмент в фигуре, она использует точку, указанную <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> метод в качестве начальной точки.</span><span class="sxs-lookup"><span data-stu-id="4469f-147">If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.</span></span>  
  
 <span data-ttu-id="4469f-148">Объект <xref:System.Windows.Media.StreamGeometry> не может быть сериализован, если он содержит <xref:System.Windows.Media.Transform> или любой-вычерчивании или Незаполненный сегментов.</span><span class="sxs-lookup"><span data-stu-id="4469f-148">A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4469f-149">Приведенный ниже показано, как Рисование треугольника с помощью <xref:System.Windows.Media.StreamGeometryContext.LineTo%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="4469f-149">The following example shows how to draw a triangle using the <xref:System.Windows.Media.StreamGeometryContext.LineTo%2A> method.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryTriangleExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryTriangleExample.cs#streamgeometrytriangleexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryTriangleExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometrytriangleexample.vb#streamgeometrytriangleexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4469f-150">Предпринята попытка добавления сегмента, не начав фигуру путем вызова метода <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" />.</span><span class="sxs-lookup"><span data-stu-id="4469f-150">An attempt was made to add a segment without starting a figure by calling the <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> method.</span></span></exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyLineTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PolyBezierTo">
      <MemberSignature Language="C#" Value="public abstract void PolyBezierTo (System.Collections.Generic.IList&lt;System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PolyBezierTo(class System.Collections.Generic.IList`1&lt;valuetype System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub PolyBezierTo (points As IList(Of Point), isStroked As Boolean, isSmoothJoin As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void PolyBezierTo(System::Collections::Generic::IList&lt;System::Windows::Point&gt; ^ points, bool isStroked, bool isSmoothJoin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Collections.Generic.IList&lt;System.Windows.Point&gt;" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="4469f-151">Список точек, определяющих контрольные и конечные точки одной или более кривых Безье.</span><span class="sxs-lookup"><span data-stu-id="4469f-151">The list of points that specify control points and destination points for one or more Bezier curves.</span></span> <span data-ttu-id="4469f-152">Количество точек в данном списке должно быть кратно трем.</span><span class="sxs-lookup"><span data-stu-id="4469f-152">The number of points in this list should be a multiple of three.</span></span></param>
        <param name="isStroked">
          <span data-ttu-id="4469f-153"><see langword="true" />, чтобы сегмент был обведенным, когда для его визуализации используется <see cref="T:System.Windows.Media.Pen" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4469f-153"><see langword="true" /> to make the segment stroked when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span></span></param>
        <param name="isSmoothJoin">
          <span data-ttu-id="4469f-154"><see langword="true" /> для интерпретации соединения между этим и предыдущим сегментами как угла при обводке с помощью <see cref="T:System.Windows.Media.Pen" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4469f-154"><see langword="true" /> to treat the join between this segment and the previous segment as a corner when stroked with a <see cref="T:System.Windows.Media.Pen" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="4469f-155">Рисует одну или более соединенных кривых Безье.</span><span class="sxs-lookup"><span data-stu-id="4469f-155">Draws one or more connected Bezier curves.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4469f-156">Первая точка `points` задает первую контрольную точку следующей задает вторую контрольную точку, третья — конечную точку, следующая точка определяет первой контрольной точки кривой Далее и т. д.</span><span class="sxs-lookup"><span data-stu-id="4469f-156">The first point in `points` specifies the first control point, the next specifies the second control point, the third point specifies the end point, the next point specifies the first control point of the next curve, and so on.</span></span>  
  
 <span data-ttu-id="4469f-157">Этот метод использует конечную точку предыдущего сегмента начальной точкой.</span><span class="sxs-lookup"><span data-stu-id="4469f-157">This method uses the end point of the previous segment as its starting point.</span></span> <span data-ttu-id="4469f-158">Если это первый сегмент в фигуре, она использует точку, указанную <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> метод в качестве начальной точки.</span><span class="sxs-lookup"><span data-stu-id="4469f-158">If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.</span></span>  
  
 <span data-ttu-id="4469f-159">Объект <xref:System.Windows.Media.StreamGeometry> не может быть сериализован, если он содержит <xref:System.Windows.Media.Transform> или любой-вычерчивании или Незаполненный сегментов.</span><span class="sxs-lookup"><span data-stu-id="4469f-159">A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4469f-160">Приведенный ниже показано, как рисовать нескольких соединенных кривых Безье с помощью <xref:System.Windows.Media.StreamGeometryContext.PolyBezierTo%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="4469f-160">The following example shows how to draw multiple connected Bezier curves using the <xref:System.Windows.Media.StreamGeometryContext.PolyBezierTo%2A> method.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyBezierToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryPolyBezierToExample.cs#streamgeometrypolybeziertoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyBezierToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometrypolybeziertoexample.vb#streamgeometrypolybeziertoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4469f-161">Предпринята попытка добавления сегмента, не начав фигуру путем вызова метода <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" />.</span><span class="sxs-lookup"><span data-stu-id="4469f-161">An attempt was made to add a segment without starting a figure by calling the <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> method.</span></span></exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PolyLineTo">
      <MemberSignature Language="C#" Value="public abstract void PolyLineTo (System.Collections.Generic.IList&lt;System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PolyLineTo(class System.Collections.Generic.IList`1&lt;valuetype System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.PolyLineTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub PolyLineTo (points As IList(Of Point), isStroked As Boolean, isSmoothJoin As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void PolyLineTo(System::Collections::Generic::IList&lt;System::Windows::Point&gt; ^ points, bool isStroked, bool isSmoothJoin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Collections.Generic.IList&lt;System.Windows.Point&gt;" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="4469f-162">Коллекция точек, определяющих конечные точки одной или более соединенных прямых линий.</span><span class="sxs-lookup"><span data-stu-id="4469f-162">The collection of points that specify destination points for one or more connected straight lines.</span></span></param>
        <param name="isStroked">
          <span data-ttu-id="4469f-163"><see langword="true" />, чтобы сегмент был обведенным, когда для его визуализации используется <see cref="T:System.Windows.Media.Pen" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4469f-163"><see langword="true" /> to make the segment stroked when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span></span></param>
        <param name="isSmoothJoin">
          <span data-ttu-id="4469f-164"><see langword="true" /> для интерпретации соединения между этим и предыдущим сегментами как угла при обводке с помощью <see cref="T:System.Windows.Media.Pen" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4469f-164"><see langword="true" /> to treat the join between this segment and the previous segment as a corner when stroked with a <see cref="T:System.Windows.Media.Pen" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="4469f-165">Рисует одну или более соединенных прямых линий.</span><span class="sxs-lookup"><span data-stu-id="4469f-165">Draws one or more connected straight lines.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4469f-166">Этот метод использует конечную точку предыдущего сегмента начальной точкой.</span><span class="sxs-lookup"><span data-stu-id="4469f-166">This method uses the end point of the previous segment as its starting point.</span></span> <span data-ttu-id="4469f-167">Если это первый сегмент в фигуре, она использует точку, указанную <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> метод в качестве начальной точки.</span><span class="sxs-lookup"><span data-stu-id="4469f-167">If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.</span></span>  
  
 <span data-ttu-id="4469f-168">Объект <xref:System.Windows.Media.StreamGeometry> не может быть сериализован, если он содержит <xref:System.Windows.Media.Transform> или любой-вычерчивании или Незаполненный сегментов.</span><span class="sxs-lookup"><span data-stu-id="4469f-168">A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4469f-169">Приведенный ниже показано, как Рисование треугольника с помощью <xref:System.Windows.Media.StreamGeometryContext.PolyLineTo%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="4469f-169">The following example shows how to draw a triangle using the <xref:System.Windows.Media.StreamGeometryContext.PolyLineTo%2A> method.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyLineToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryPolyLineToExample.cs#streamgeometrypolylinetoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyLineToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometrypolylinetoexample.vb#streamgeometrypolylinetoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4469f-170">Предпринята попытка добавления сегмента, не начав фигуру путем вызова метода <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" />.</span><span class="sxs-lookup"><span data-stu-id="4469f-170">An attempt was made to add a segment without starting a figure by calling the <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> method.</span></span></exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.LineTo(System.Windows.Point,System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="PolyQuadraticBezierTo">
      <MemberSignature Language="C#" Value="public abstract void PolyQuadraticBezierTo (System.Collections.Generic.IList&lt;System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PolyQuadraticBezierTo(class System.Collections.Generic.IList`1&lt;valuetype System.Windows.Point&gt; points, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub PolyQuadraticBezierTo (points As IList(Of Point), isStroked As Boolean, isSmoothJoin As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void PolyQuadraticBezierTo(System::Collections::Generic::IList&lt;System::Windows::Point&gt; ^ points, bool isStroked, bool isSmoothJoin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="points" Type="System.Collections.Generic.IList&lt;System.Windows.Point&gt;" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="points"><span data-ttu-id="4469f-171">Коллекция точек, определяющих контрольные и конечные точки одной или более кривых Безье второго порядка.</span><span class="sxs-lookup"><span data-stu-id="4469f-171">The collection of points that specify control points and destination points for one or more quadratic Bezier curves.</span></span> <span data-ttu-id="4469f-172">Первая точка в этом списке определяет контрольную точку кривой, вторая — конечную точку, следующая точка определяет контрольную точку следующей кривой и т. д.</span><span class="sxs-lookup"><span data-stu-id="4469f-172">The first point in the list specifies the curve's control point, the next point specifies the destination point, the next point specifies the control point of the next curve, and so on.</span></span> <span data-ttu-id="4469f-173">Данный список должен содержать четное количество точек.</span><span class="sxs-lookup"><span data-stu-id="4469f-173">The list must contain an even number of points.</span></span></param>
        <param name="isStroked">
          <span data-ttu-id="4469f-174"><see langword="true" />, чтобы сегмент был обведенным, когда для его визуализации используется <see cref="T:System.Windows.Media.Pen" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4469f-174"><see langword="true" /> to make the segment stroked when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span></span></param>
        <param name="isSmoothJoin">
          <span data-ttu-id="4469f-175"><see langword="true" /> для интерпретации соединения между этим и предыдущим сегментами как угла при обводке с помощью <see cref="T:System.Windows.Media.Pen" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4469f-175"><see langword="true" /> to treat the join between this segment and the previous segment as a corner when stroked with a <see cref="T:System.Windows.Media.Pen" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="4469f-176">Рисует одну или более соединенных кривых Безье второго порядка.</span><span class="sxs-lookup"><span data-stu-id="4469f-176">Draws one or more connected quadratic Bezier curves.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4469f-177">Этот метод использует конечную точку предыдущего сегмента начальной точкой.</span><span class="sxs-lookup"><span data-stu-id="4469f-177">This method uses the end point of the previous segment as its starting point.</span></span> <span data-ttu-id="4469f-178">Если это первый сегмент в фигуре, она использует точку, указанную <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> метод в качестве начальной точки.</span><span class="sxs-lookup"><span data-stu-id="4469f-178">If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.</span></span>  
  
 <span data-ttu-id="4469f-179">Объект <xref:System.Windows.Media.StreamGeometry> не может быть сериализован, если он содержит <xref:System.Windows.Media.Transform> или любой-вычерчивании или Незаполненный сегментов.</span><span class="sxs-lookup"><span data-stu-id="4469f-179">A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4469f-180">Приведенный ниже показано, как рисовать нескольких подключенных кривых Безье второго порядка с помощью <xref:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="4469f-180">The following example shows how to draw multiple connected quadratic Bezier curves using the <xref:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo%2A> method.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyQuadraticBezierToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryPolyQuadraticBezierToExample.cs#streamgeometrypolyquadraticbeziertoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryPolyQuadraticBezierToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometrypolyquadraticbeziertoexample.vb#streamgeometrypolyquadraticbeziertoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4469f-181">Предпринята попытка добавления сегмента, не начав фигуру путем вызова метода <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" />.</span><span class="sxs-lookup"><span data-stu-id="4469f-181">An attempt was made to add a segment without starting a figure by calling the <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> method.</span></span></exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="QuadraticBezierTo">
      <MemberSignature Language="C#" Value="public abstract void QuadraticBezierTo (System.Windows.Point point1, System.Windows.Point point2, bool isStroked, bool isSmoothJoin);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void QuadraticBezierTo(valuetype System.Windows.Point point1, valuetype System.Windows.Point point2, bool isStroked, bool isSmoothJoin) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo(System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub QuadraticBezierTo (point1 As Point, point2 As Point, isStroked As Boolean, isSmoothJoin As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void QuadraticBezierTo(System::Windows::Point point1, System::Windows::Point point2, bool isStroked, bool isSmoothJoin);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="point1" Type="System.Windows.Point" />
        <Parameter Name="point2" Type="System.Windows.Point" />
        <Parameter Name="isStroked" Type="System.Boolean" />
        <Parameter Name="isSmoothJoin" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="point1"><span data-ttu-id="4469f-182">Контрольная точка, используемая для задания формы кривой.</span><span class="sxs-lookup"><span data-stu-id="4469f-182">The control point used to specify the shape of the curve.</span></span></param>
        <param name="point2"><span data-ttu-id="4469f-183">Конечная точка кривой.</span><span class="sxs-lookup"><span data-stu-id="4469f-183">The destination point for the end of the curve.</span></span></param>
        <param name="isStroked">
          <span data-ttu-id="4469f-184"><see langword="true" />, чтобы сегмент был обведенным, когда для его визуализации используется <see cref="T:System.Windows.Media.Pen" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4469f-184"><see langword="true" /> to make the segment stroked when a <see cref="T:System.Windows.Media.Pen" /> is used to render the segment; otherwise, <see langword="false" />.</span></span></param>
        <param name="isSmoothJoin">
          <span data-ttu-id="4469f-185"><see langword="true" /> для интерпретации соединения между этим и предыдущим сегментами как угла при обводке с помощью <see cref="T:System.Windows.Media.Pen" />; в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="4469f-185"><see langword="true" /> to treat the join between this segment and the previous segment as a corner when stroked with a <see cref="T:System.Windows.Media.Pen" />; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="4469f-186">Рисует кривую Безье второго порядка.</span><span class="sxs-lookup"><span data-stu-id="4469f-186">Draws a quadratic Bezier curve.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4469f-187">В отличие от кривой Безье третьего порядка, который использует две контрольные точки, кривая Безье второго порядка использует одну контрольную точку.</span><span class="sxs-lookup"><span data-stu-id="4469f-187">Unlike a cubic Bezier curve, which uses two control points, a quadratic cubic Bezier curve uses a single control point.</span></span>  
  
 <span data-ttu-id="4469f-188">Этот метод использует конечную точку предыдущего сегмента начальной точкой.</span><span class="sxs-lookup"><span data-stu-id="4469f-188">This method uses the end point of the previous segment as its starting point.</span></span> <span data-ttu-id="4469f-189">Если это первый сегмент в фигуре, она использует точку, указанную <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> метод в качестве начальной точки.</span><span class="sxs-lookup"><span data-stu-id="4469f-189">If this is the first segment in a figure, it uses the point specified by the <xref:System.Windows.Media.StreamGeometryContext.BeginFigure%2A> method as its start point.</span></span>  
  
 <span data-ttu-id="4469f-190">Объект <xref:System.Windows.Media.StreamGeometry> не может быть сериализован, если он содержит <xref:System.Windows.Media.Transform> или любой-вычерчивании или Незаполненный сегментов.</span><span class="sxs-lookup"><span data-stu-id="4469f-190">A <xref:System.Windows.Media.StreamGeometry> cannot be serialized if it contains a <xref:System.Windows.Media.Transform> or any non-stroked or unfilled segments.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4469f-191">В следующем примере показано, как рисование квадратичной кривой Безье с помощью <xref:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="4469f-191">The following example shows how to draw a quadratic Bezier curve using the <xref:System.Windows.Media.StreamGeometryContext.QuadraticBezierTo%2A> method.</span></span>  
  
 [!code-csharp[GeometriesMiscSnippets_procedural_snip#StreamGeometryQuadraticBezierToExampleWholePage](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/CSharp/StreamGeometryQuadraticBezierToExample.cs#streamgeometryquadraticbeziertoexamplewholepage)]
 [!code-vb[GeometriesMiscSnippets_procedural_snip#StreamGeometryQuadraticBezierToExampleWholePage](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometriesMiscSnippets_procedural_snip/visualbasic/streamgeometryquadraticbeziertoexample.vb#streamgeometryquadraticbeziertoexamplewholepage)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="4469f-192">Предпринята попытка добавления сегмента, не начав фигуру путем вызова метода <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" />.</span><span class="sxs-lookup"><span data-stu-id="4469f-192">An attempt was made to add a segment without starting a figure by calling the <see cref="M:System.Windows.Media.StreamGeometryContext.BeginFigure(System.Windows.Point,System.Boolean,System.Boolean)" /> method.</span></span></exception>
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.ArcTo(System.Windows.Point,System.Windows.Size,System.Double,System.Boolean,System.Windows.Media.SweepDirection,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.BezierTo(System.Windows.Point,System.Windows.Point,System.Windows.Point,System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
        <altmember cref="M:System.Windows.Media.StreamGeometryContext.PolyQuadraticBezierTo(System.Collections.Generic.IList{System.Windows.Point},System.Boolean,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Media.StreamGeometryContext.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4469f-193">Этот член поддерживает инфраструктуру [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] и не предназначен для непосредственного использования из кода.</span><span class="sxs-lookup"><span data-stu-id="4469f-193">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>