<Type Name="NavigationService" FullName="System.Windows.Navigation.NavigationService">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="3d082dd7c9628002f1da7a6e1f97b52c5dbf6533" />
    <Meta Name="ms.sourcegitcommit" Value="cc0c87a2e12b0fb9ba9ecdd3d4950f0572524db8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="05/03/2018" />
    <Meta Name="ms.locfileid" Value="32694151" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class NavigationService" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NavigationService extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Navigation.NavigationService" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NavigationService" />
  <TypeSignature Language="C++ CLI" Value="public ref class NavigationService sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Содержит методы, свойства и события для поддержки переходов.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService> Инкапсулирует возможность загрузки содержимого в контексте переходов в стиле браузера.  
  
 Содержимое может быть любым типом объекта .NET Framework и HTML-файлы. Как правило, однако страницы, являются предпочтительным способом упаковки содержимого для навигации (см. <xref:System.Windows.Controls.Page>).  
  
 Содержимое можно перейти, предоставляя экземпляр объекта и вызова перегрузки <xref:System.Windows.Navigation.NavigationService.Navigate%2A> метод, который принимает объект:  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%29?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Object%2CSystem.Object%29?displayProperty=nameWithType>  
  
 Кроме того, содержимое может быть проведена к передав относительный или абсолютный URI на один из <xref:System.Windows.Navigation.NavigationService.Navigate%2A> перегрузки метода, которые принимает URI:  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%29?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%2CSystem.Object%29?displayProperty=nameWithType>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigate%28System.Uri%2CSystem.Object%2CSystem.Boolean%29?displayProperty=nameWithType>  
  
 Если содержимое выполняется переход с URI, <xref:System.Windows.Navigation.NavigationService> вернет объект, содержащий содержимое.  
  
 Время существования перехода можно отследить с помощью следующих событий:  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigating>  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigated>  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationProgress>  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationFailed>  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationStopped>  
  
-   <xref:System.Windows.Navigation.NavigationService.LoadCompleted>  
  
-   <xref:System.Windows.Navigation.NavigationService.FragmentNavigation>.  
  
 Не все события вызываются при каждом переходе; набор событий, возникающих определяется тип перехода (содержимое или его фрагмент) и результатом перехода (отменен, остановлен или сбой).  
  
 На следующем рисунке показано последовательности, в котором эти события вызываются:  
  
 ![Таблица потока навигации страницы](~/add/media/navigationoverviewfigure11.png "таблица потока навигации страницы")  
  
 Во время или после переходов <xref:System.Windows.Navigation.NavigationService> предоставляет сведения о содержимом, которое выполняется переход, включая URI содержимого, куда выполняется переход (<xref:System.Windows.Navigation.NavigationService.Source%2A>), URI текущего содержимого (<xref:System.Windows.Navigation.NavigationService.CurrentSource%2A>) и объект, содержащий содержимое, переданное (<xref:System.Windows.Navigation.NavigationService.Content%2A>).  
  
 При переходе к содержимому <xref:System.Windows.Navigation.NavigationService> записывает навигации как запись в журнале навигации. Запись добавляется в журнал переходов назад, когда новый переход происходит путем вызова <xref:System.Windows.Navigation.NavigationService.Navigate%2A> метод, перейти на запись в журнал прямой навигации, путем вызова <xref:System.Windows.Navigation.NavigationService.GoForward%2A>. Запись добавляется в журнал прямой навигации, перейдя к запись обратно в журнале навигации путем вызова <xref:System.Windows.Navigation.NavigationService.GoBack%2A>. <xref:System.Windows.Navigation.NavigationService.CanGoBack%2A> и <xref:System.Windows.Navigation.NavigationService.CanGoForward%2A> отчетов, есть ли записям и журнал прямой навигации, соответственно. Кроме того, самую последнюю запись обратно в журнале навигации можно удалить путем вызова <xref:System.Windows.Navigation.NavigationService.RemoveBackEntry%2A>.  
  
 По умолчанию <xref:System.Windows.Navigation.NavigationService> не хранит экземпляр объекта содержимого в журнале навигации. Вместо этого <xref:System.Windows.Navigation.NavigationService> создает новый экземпляр объекта содержимого каждый раз при переходе на с помощью истории навигации. Это поведение предусмотрено во избежание чрезмерного потребления памяти при больших чисел и частям содержимого куда выполняется переход. Следовательно состояние содержимого не запоминается от одного перехода к следующему. Тем не менее платформа WPF предоставляет несколько способов, которые можно сохранить часть состояния для части содержимого в журнале навигации.  
  
 С помощью <xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A>, также следует помнить несколько наборов состояний для одного экземпляра страницы.  
  
 <xref:System.Windows.Navigation.NavigationService> — `sealed` класса и поэтому не может быть создан; вместо этого <xref:System.Windows.Navigation.NavigationService> используется навигатора, чтобы включить навигации. В WPF, существует два навигаторы: <xref:System.Windows.Navigation.NavigationWindow> и <xref:System.Windows.Controls.Frame>.  
  
 Визуально [!INCLUDE[TLA2#tla_xbap#plural](~/includes/tla2sharptla-xbapsharpplural-md.md)] использовать [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] как навигатор, для обеспечения интеграции пользователя. Физически, но при этом [!INCLUDE[TLA2#tla_xbap#plural](~/includes/tla2sharptla-xbapsharpplural-md.md)] фактически использовать <xref:System.Windows.Navigation.NavigationWindow> как навигатор; <xref:System.Windows.Application.MainWindow%2A> свойство [!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)] в [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] возвращает ссылку на <xref:System.Windows.Navigation.NavigationWindow>и в журнале навигации, который управляется <xref:System.Windows.Navigation.NavigationWindow> интегрирован с журналом навигации, который управляется [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] одним из следующих способов:  
  
-   Если содержимое осуществляется переход, вызвав <xref:System.Windows.Navigation.NavigationService.Navigate%2A>, <xref:System.Windows.Navigation.NavigationService.GoBack%2A>, и <xref:System.Windows.Navigation.NavigationService.GoForward%2A> изнутри [!INCLUDE[TLA2#tla_xbap](~/includes/tla2sharptla-xbap-md.md)] навигации соответствующие записи журнала, также добавляются в [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] журналом навигации.  
  
-   При записи в [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] навигации [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] выбраны, [!INCLUDE[TLA2#tla_ie7](~/includes/tla2sharptla-ie7-md.md)] вызывает <xref:System.Windows.Navigation.NavigationService> для перехода назад или вперед на контент, связанный с этих записей.  
  
> [!NOTE]
>  Объект <xref:System.Windows.Controls.Frame> можно предоставить своим собственным журналом навигации или использовать навигатор, на котором находится журнал навигации. Если <xref:System.Windows.Controls.Frame> предоставляет собственный журнал переходов, он может отображать свой собственный навигации [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] для перемещения по записям в журнале навигации; эти элементы не добавляются в журнал переходов навигатора узла (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>, [!INCLUDE[TLA2#tla_iegeneric](~/includes/tla2sharptla-iegeneric-md.md)]) и, следовательно, не может осуществить переход на панели навигации [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] каждого (см. <xref:System.Windows.Controls.Frame.JournalOwnership%2A>).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AddBackEntry">
      <MemberSignature Language="C#" Value="public void AddBackEntry (System.Windows.Navigation.CustomContentState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddBackEntry(class System.Windows.Navigation.CustomContentState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddBackEntry (state As CustomContentState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddBackEntry(System::Windows::Navigation::CustomContentState ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Windows.Navigation.CustomContentState" />
      </Parameters>
      <Docs>
        <param name="state">Объект <see cref="T:System.Windows.Navigation.CustomContentState" />, представляющий определенное приложением состояние, связанное с конкретным фрагментом содержимого.</param>
        <summary>Добавляет запись в журнал переходов назад, содержащий объект <see cref="T:System.Windows.Navigation.CustomContentState" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.AddBackEntry%2A>, <xref:System.Windows.Navigation.CustomContentState>, и <xref:System.Windows.Navigation.IProvideCustomContentState> помогают запомнить несколько наборов состояний для текущего содержимого.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="state" /> содержит значение <see langword="null" />, и объект <see cref="T:System.Windows.Navigation.CustomContentState" /> не возвращается из <see cref="M:System.Windows.Navigation.IProvideCustomContentState.GetContentState" />.</exception>
        <altmember cref="M:System.Windows.Navigation.NavigationService.RemoveBackEntry" />
      </Docs>
    </Member>
    <Member MemberName="CanGoBack">
      <MemberSignature Language="C#" Value="public bool CanGoBack { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoBack" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.CanGoBack" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanGoBack As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanGoBack { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, имеются ли записи в журнале переходов назад.</summary>
        <value>
          <see langword="true" />, если в журнале переходов назад имеется хотя бы одна запись; в противном случае — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.CanGoBack%2A> Чтобы определить, существует ли хотя бы одну запись в журнале переходов назад. Это свойство необходимо проверить перед вызовом метода <xref:System.Windows.Navigation.NavigationService.GoBack%2A>; Если <xref:System.Windows.Navigation.NavigationService.GoBack%2A> вызывается и нет ни одной записи в журнале переходов назад <xref:System.InvalidOperationException> возникает исключение.  
  
> [!NOTE]
>  Если журнал навигации является общим для нескольких навигаторов (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>), наиболее последнюю запись обратно в журнале навигации может не были добавлены с <xref:System.Windows.Navigation.NavigationService> для текущего навигатора.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoForward" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="CanGoForward">
      <MemberSignature Language="C#" Value="public bool CanGoForward { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanGoForward" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.CanGoForward" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanGoForward As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanGoForward { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает значение, указывающее, имеются ли записи в журнале переходов вперед.</summary>
        <value>
          <see langword="true" />, если в журнале переходов вперед имеется хотя бы одна запись; в противном случае — <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.CanGoForward%2A> Чтобы определить, существует ли хотя бы одну запись в журнале прямой навигации. Это свойство необходимо проверить перед вызовом метода <xref:System.Windows.Navigation.NavigationService.GoForward%2A>; Если <xref:System.Windows.Navigation.NavigationService.GoForward%2A> вызывается и нет ни одной записи в журнале прямой навигации <xref:System.InvalidOperationException> возникает исключение.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoBack" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoBack" />
      </Docs>
    </Member>
    <Member MemberName="Content">
      <MemberSignature Language="C#" Value="public object Content { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Content" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.Content" />
      <MemberSignature Language="VB.NET" Value="Public Property Content As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Content { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает указатель на объект с текущим содержимым.</summary>
        <value>Указатель на объект с текущим содержимым.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Содержимое можно задать одним из двух способов:  
  
-   Напрямую присвоив ему значение ссылку на объект.  
  
-   Косвенно путем вызова <xref:System.Windows.Navigation.NavigationService.Navigate%2A>, <xref:System.Windows.Navigation.NavigationService.GoBack%2A>, или <xref:System.Windows.Navigation.NavigationService.GoForward%2A>.  
  
 Установка <xref:System.Windows.Navigation.NavigationService> инициирует новый переход; поскольку навигации является асинхронным, <xref:System.Windows.Navigation.NavigationService.Content%2A> не возвращает значение, если оно проверяется сразу после установки.  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Navigation.NavigationService.Navigate" />
      </Docs>
    </Member>
    <Member MemberName="CurrentSource">
      <MemberSignature Language="C#" Value="public Uri CurrentSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri CurrentSource" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.CurrentSource" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentSource As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ CurrentSource { Uri ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает универсальный код ресурса (URI) содержимого, к которому был осуществлен последний переход.</summary>
        <value>Объект <see cref="T:System.Uri" /> для содержимого, которое был осуществлен последний переход, если для перехода с помощью URI, в противном случае — <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение <xref:System.Windows.Navigation.NavigationService.CurrentSource%2A> свойства не изменяется до перехода на другой URI успешно завершена.  
  
 <xref:System.Windows.Navigation.NavigationService.CurrentSource%2A> можно задать только для фрагмент URI.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FragmentNavigation">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.FragmentNavigationEventHandler FragmentNavigation;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.FragmentNavigationEventHandler FragmentNavigation" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FragmentNavigation As FragmentNavigationEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::FragmentNavigationEventHandler ^ FragmentNavigation;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.FragmentNavigationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит, когда начинается переход к фрагменту содержимого, что происходит немедленно, если нужный фрагмент находится в текущем содержимом, или после загрузки исходного содержимого [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)], если нужный фрагмент находится в другом содержимом.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 По умолчанию фрагмент содержимого содержимого, принадлежащих именованным <xref:System.Windows.UIElement>, который является <xref:System.Windows.UIElement> которого <xref:System.Windows.FrameworkElement.Name%2A> атрибут задан, например:  
  
```  
<TextBlock Name="FragmentName">...</TextBlock>  
```  
  
 Перейдите к [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] фрагмент, предоставляя URI с суффиксом в следующем формате:  
  
 \#*FragmentName*  
  
 Ниже показан пример URI, который относится к фрагменту содержимого:  
  
 `http://www.microsoft.com/targetpage.xaml#FragmentName`  
  
 После загрузки исходной страницы (после <xref:System.Windows.Navigation.NavigationService.LoadCompleted> события), начинается переход к фрагменту и <xref:System.Windows.Navigation.NavigationService> пытается обнаружить [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] фрагмента. Если [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] найден фрагмент <xref:System.Windows.Navigation.NavigationService> предписывает содержимого Навигатор (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>) для отображения в фрагменте. Если требуется изменить это поведение, можно обработать <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> для обеспечения поведения навигации собственных фрагментов. <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> передается <xref:System.Windows.Navigation.FragmentNavigationEventArgs> параметр, который предоставляет свойства, которые полезны для этой цели, включая:  
  
-   Навигатор, владеющего этой службой навигации (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>).  
  
-   Имя фрагмента.  
  
 Можно обработать <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> переопределить реализацию по умолчанию WPF фрагмент с собственную реализацию. Если сделать это, необходимо задать <xref:System.Windows.Navigation.FragmentNavigationEventArgs.Handled%2A> для `true`; в противном случае применяется фрагмент WPF по умолчанию, режим обработки.  
  
 Не следует напрямую инициации переходов внутри <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> обработчика событий. Поскольку <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> возникает в процессе существующих навигации, запуск нового перехода из <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> обработчик событий создает вложенные навигации, которая может вызвать <xref:System.ExecutionEngineException> исключение. Вместо этого можно косвенно инициации перехода, создав асинхронный рабочий элемент с помощью <xref:System.Windows.Threading.Dispatcher>.  
  
> [!NOTE]
>  Когда <xref:System.Windows.Navigation.NavigationService> вызывает <xref:System.Windows.Navigation.NavigationService.FragmentNavigation>, он также выдает <xref:System.Windows.Application.FragmentNavigation?displayProperty=nameWithType> событий на <xref:System.Windows.Application> объекта.  
  
> [!IMPORTANT]
>  Переход к фрагменту не поддерживается для свободных [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] страниц (только для разметки [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] файлы с `Page` как корневой элемент) в следующих случаях:  
>   
>  • При переходе к фрагменту свободный [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] страницы.  
>   
>  • При переходе от свободный [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] страницы к фрагменту другой свободной [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] страницы.  
>   
>  Тем не менее свободный [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] страницу можно перейти на свои собственные фрагменты.  
  
   
  
## Examples  
 В следующем примере показано, как обрабатывать <xref:System.Windows.Navigation.NavigationService.FragmentNavigation> для обеспечения поведения навигации пользовательского фрагмента. В этом случае в примере открывается ошибка [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] Если фрагмент источника [!INCLUDE[TLA2#tla_titlexaml](~/includes/tla2sharptla-titlexaml-md.md)] страница не найдена.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowFragmentNavigationCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowfragmentnavigationcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowFragmentNavigationCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowfragmentnavigationcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="GetNavigationService">
      <MemberSignature Language="C#" Value="public static System.Windows.Navigation.NavigationService GetNavigationService (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Navigation.NavigationService GetNavigationService(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.GetNavigationService(System.Windows.DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Navigation::NavigationService ^ GetNavigationService(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationService</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">
          <see cref="T:System.Windows.DependencyObject" /> в содержимом, размещенном в навигаторе.</param>
        <summary>Возвращает указатель на <see cref="T:System.Windows.Navigation.NavigationService" /> для навигатора, содержимое которого находится в заданном <see cref="T:System.Windows.DependencyObject" />.</summary>
        <returns>Указатель на <see cref="T:System.Windows.Navigation.NavigationService" /> для навигатора, в содержимом которого есть указанный объект <see cref="T:System.Windows.DependencyObject" />; в некоторых случаях может быть <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Навигатор имеет <xref:System.Windows.Navigation.NavigationService> , обрабатывающий навигацию по содержимому. WPF располагает двух навигаторов: <xref:System.Windows.Navigation.NavigationWindow> и <xref:System.Windows.Controls.Frame>. Для обработки запросов навигации и управлять временем жизни навигации, навигатор использует службу переходов WPF, который реализован как <xref:System.Windows.Navigation.NavigationService> класса. Содержимое, расположенное в навигаторе можно получить ссылку на навигатор <xref:System.Windows.Navigation.NavigationService> путем вызова <xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A> метод.  
  
 <xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A> Возвращает `null` при `dependencyObject`:  
  
-   — <xref:System.Windows.Navigation.NavigationWindow>.  
  
-   — <xref:System.Windows.Controls.Frame> :  
  
    1.  Размещается в другом навигаторе.  
  
    2.  Имеет его <xref:System.Windows.Controls.Frame.JournalOwnership%2A> свойство <xref:System.Windows.Navigation.JournalOwnership.UsesParentJournal>.  
  
-   Не является частью содержимого, размещенного в навигаторе.  
  
 Платформа WPF предоставляет два ярлыка для получения ссылку на <xref:System.Windows.Navigation.NavigationService>:  
  
-   <xref:System.Windows.Navigation.NavigationService> , Обработан переход к <xref:System.Windows.Controls.Page> может осуществляться из <xref:System.Windows.Controls.Page> сам путем получения значения его <xref:System.Windows.Controls.Page.NavigationService%2A?displayProperty=nameWithType> свойство.  
  
-   <xref:System.Windows.Navigation.NavigationService> , Используемый <xref:System.Windows.Controls.Frame> для обработки навигации можно получить, обратившись значение <xref:System.Windows.Controls.Frame.NavigationService%2A> свойства.  
  
   
  
## Examples  
 В следующем примере показан способ <xref:System.Windows.Controls.UserControl> службу переходов можно получить, вызвав <xref:System.Windows.Navigation.NavigationService.GetNavigationService%2A>.  
  
 [!code-csharp[NSGetNavigationServiceSnippets#GetNavigationServiceCODE1](~/samples/snippets/csharp/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/CSharp/ContentUserControl.xaml.cs#getnavigationservicecode1)]
 [!code-vb[NSGetNavigationServiceSnippets#GetNavigationServiceCODE1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/visualbasic/contentusercontrol.xaml.vb#getnavigationservicecode1)]  
[!code-csharp[NSGetNavigationServiceSnippets#GetNavigationServiceCODE2](~/samples/snippets/csharp/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/CSharp/ContentUserControl.xaml.cs#getnavigationservicecode2)]
[!code-vb[NSGetNavigationServiceSnippets#GetNavigationServiceCODE2](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NSGetNavigationServiceSnippets/visualbasic/contentusercontrol.xaml.vb#getnavigationservicecode2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Параметр <paramref name="dependencyObject" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GoBack">
      <MemberSignature Language="C#" Value="public void GoBack ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GoBack() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.GoBack" />
      <MemberSignature Language="VB.NET" Value="Public Sub GoBack ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GoBack();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Выполняет переход к последней записи журнала переходов назад, если он содержит записи.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Перед вызовом метода <xref:System.Windows.Navigation.NavigationService.GoBack%2A>, <xref:System.Windows.Navigation.NavigationService.CanGoBack%2A> свойство может быть проверен, чтобы определить, имеются ли записи в журнале переходов назад.  
  
   
  
## Examples  
 Приведенный ниже выполняется переход к самой последней записи обратно в журнале навигации при наличии.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowBackCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowbackcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowBackCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowbackcode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          Метод <see cref="M:System.Windows.Navigation.NavigationService.GoBack" /> вызывается, если в журнале переходов назад нет записей.</exception>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoForward" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoForward" />
      </Docs>
    </Member>
    <Member MemberName="GoForward">
      <MemberSignature Language="C#" Value="public void GoForward ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GoForward() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.GoForward" />
      <MemberSignature Language="VB.NET" Value="Public Sub GoForward ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GoForward();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Выполняет переход к последней записи журнала переходов назад, если он содержит записи.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Перед вызовом метода <xref:System.Windows.Navigation.NavigationService.GoForward%2A>, <xref:System.Windows.Navigation.NavigationService.CanGoForward%2A> свойства можно проверить, чтобы определить, имеются ли записи в журнал прямой навигации.  
  
   
  
## Examples  
 Следующий пример переходит к самую последнюю запись в журнал прямой навигации, если он существует.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowForwardCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowforwardcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowForwardCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowforwardcode)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="M:System.Windows.Navigation.NavigationService.GoForward" /> вызван, когда в журнале переходов вперед нет ни одного элемента.</exception>
        <altmember cref="P:System.Windows.Navigation.NavigationService.CanGoBack" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.GoBack" />
      </Docs>
    </Member>
    <Member MemberName="LoadCompleted">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.LoadCompletedEventHandler LoadCompleted" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event LoadCompleted As LoadCompletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::LoadCompletedEventHandler ^ LoadCompleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.LoadCompletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Генерируется, когда содержимое, к которому осуществлен переход, загружено, проанализировано и начинается его отрисовка.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вы обрабатываете <xref:System.Windows.Navigation.NavigationService.LoadCompleted> для обнаружения нужных сведений о запросе на переход по завершении загрузки. Эта информация доступна из <xref:System.Windows.Navigation.NavigationEventArgs> объект, передаваемый <xref:System.Windows.Navigation.NavigationService.LoadCompleted> обработчика событий и включает в себя:  
  
-   Содержимое и URI-адрес.  
  
-   Навигатор (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>).  
  
-   Дополнительные данные, если переход был инициирован с помощью вызова <xref:System.Windows.Navigation.NavigationService.Navigate%2A> или <xref:System.Windows.Navigation.NavigationService.Navigate%2A>.  
  
-   Сведения об ответе (с помощью <xref:System.Net.WebResponse> объекта).  
  
 <xref:System.Windows.Navigation.NavigationService.LoadCompleted> не возникает, если исходная страница не обнаружены или не загружены, в этом случае <xref:System.Windows.Navigation.NavigationService.NavigationFailed> возникает.  
  
> [!NOTE]
>  Когда <xref:System.Windows.Navigation.NavigationService> вызывает <xref:System.Windows.Navigation.NavigationService.LoadCompleted>, он также выдает <xref:System.Windows.Application.LoadCompleted?displayProperty=nameWithType> событий на <xref:System.Windows.Application> объекта.  
  
   
  
## Examples  
 В следующем примере показано, как обрабатывать <xref:System.Windows.Navigation.NavigationService.LoadCompleted>.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowLoadCompletedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowloadcompletedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowLoadCompletedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowloadcompletedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Navigate">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Выполняет асинхронный переход к содержимому заданного источника.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (object root);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(object root) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (root As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(System::Object ^ root);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="root">Объект с содержимым, к которому осуществляется переход.</param>
        <summary>Выполняет асинхронный переход к содержимому, которое находится в объекте.</summary>
        <returns>
          <see langword="true" />, если переход не отменен; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.Navigate%2A> Чтобы перейти <xref:System.Object> заданные `root` если выполняются следующие условия:  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigating> Событие не отменяется.  
  
-   Веб-запроса (см. <xref:System.Windows.Navigation.NavigationService.Navigating>) могут быть созданы.  
  
 Если `root` — `null`, существующее содержимое (<xref:System.Windows.Navigation.NavigationService.Content%2A>) снят.  
  
> [!NOTE]
>  При загрузке веб-содержимого, появляется исключение веб-сайта (например, 404: файл не найден). Позволяет обрабатывать такие исключения из <xref:System.Windows.Navigation.NavigationService.NavigationFailed>.  
  
   
  
## Examples  
 В следующем примере показано, как для перехода к <xref:System.Windows.Controls.Page> объект, содержащий дерево исходного содержимого.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigateObjectCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigateobjectcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigateObjectCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigateobjectcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(class System.Uri source) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (source As Uri) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(Uri ^ source);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
      </Parameters>
      <Docs>
        <param name="source">Объект <see cref="T:System.Uri" />, инициализированный с помощью URI для нужного содержимого.</param>
        <summary>Выполняет асинхронный переход к содержимому, идентифицируемому URI.</summary>
        <returns>
          <see langword="true" />, если переход не отменен; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение `source` может быть веб-узел [!INCLUDE[TLA#tla_url](~/includes/tlasharptla-url-md.md)] или допустимый пакет URI (см. [пакет URI в WPF](~/docs/framework/wpf/app-development/pack-uris-in-wpf.md)).  
  
 <xref:System.Windows.Navigation.NavigationService.Navigate%2A> Перейти к URI, указанный параметром `source` если выполняются следующие условия:  
  
-   <xref:System.Windows.Navigation.NavigationService.Navigating> Событие не отменяется.  
  
-   Веб-запроса (см. <xref:System.Windows.Navigation.NavigationService.Navigating>) могут быть созданы.  
  
 Если `source` — `null`, существующее содержимое (<xref:System.Windows.Navigation.NavigationService.Content%2A>) снят.  
  
> [!NOTE]
>  При загрузке веб-содержимого, появляется исключение веб-сайта (например, 404: файл не найден). Позволяет обрабатывать такие исключения из <xref:System.Windows.Navigation.NavigationService.NavigationFailed>.  
  
 Можно использовать <xref:System.Windows.Navigation.NavigationService.Navigate%2A> для перехода к фрагменту содержимого. Если содержимое, установленное URI текущего содержимого, он не загружаются повторно.  
  
   
  
## Examples  
 Приведенный ниже показано, как перейти к URI.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigateCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigatecode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigateCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigatecode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (object root, object navigationState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(object root, object navigationState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (root As Object, navigationState As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(System::Object ^ root, System::Object ^ navigationState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="root" Type="System.Object" />
        <Parameter Name="navigationState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="root">Объект с содержимым, к которому осуществляется переход.</param>
        <param name="navigationState">Объект, содержащий данные для использования в процессе перехода.</param>
        <summary>Выполняет асинхронный переход к содержимому, которое находится в объекте, и передает объект с данными, предназначенными для использования в процессе перехода.</summary>
        <returns>
          <see langword="true" />, если переход не отменен; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод имеет то же поведение, что <xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType>, несмотря на то, что объект, передаваемый вместо URI.  
  
   
  
## Examples  
 В следующем примере показано, как для перехода к <xref:System.Windows.Controls.Page> объектов с содержимым источника и передать состояние перехода.  
  
 [!code-csharp[NavigationServiceNavigateObjectStateSnippets#MainWindowCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceNavigateObjectStateSnippets/CSharp/MainWindow.xaml.cs#mainwindowcode)]
 [!code-vb[NavigationServiceNavigateObjectStateSnippets#MainWindowCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceNavigateObjectStateSnippets/visualbasic/mainwindow.xaml.vb#mainwindowcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source, object navigationState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(class System.Uri source, object navigationState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (source As Uri, navigationState As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(Uri ^ source, System::Object ^ navigationState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
        <Parameter Name="navigationState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="source">Объект <see cref="T:System.Uri" />, инициализированный с помощью URI для нужного содержимого.</param>
        <param name="navigationState">Объект, содержащий данные для использования в процессе перехода.</param>
        <summary>Выполняет асинхронный переход к содержимому источника с указанным URI и передает объект с данными, предназначенными для использования в процессе перехода.</summary>
        <returns>
          <see langword="true" />, если переход не отменен; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поскольку переходы являются асинхронными, возможно, несколько переходов к обработке в то же время. Например если имеются два дочерних фреймов на одной странице, удалось переход оба фрейма. В этом случае различные события перехода, которые вызываются <xref:System.Windows.Navigation.NavigationService> может генерироваться несколько раз, по одному для каждого фрагмента содержимого, к которому выполняется переход, и не обязательно, запрошенные переходов. Следовательно Если определенный запрос перехода должен обрабатывать данные, относящиеся к отдельному запросу, нельзя использовать данные, доступные всем запросам перехода. Вместо этого можно использовать `navigationState` для передачи данных для навигации, обработки, который относится к навигации один запрос.  
  
 Следующие аргументы события предоставляют доступ к состоянию навигации:  
  
-   <xref:System.Windows.Navigation.NavigatingCancelEventArgs.ExtraData%2A> (передаваемый <xref:System.Windows.Navigation.NavigationService.Navigating> событий).  
  
-   <xref:System.Windows.Navigation.NavigationEventArgs.ExtraData%2A> (передаваемый <xref:System.Windows.Navigation.NavigationService.Navigated>, <xref:System.Windows.Navigation.NavigationService.NavigationStopped>, <xref:System.Windows.Navigation.NavigationService.LoadCompleted> обработчиков событий).  
  
   
  
## Examples  
 В следующем примере показано переход к URI и передать состояние перехода.  
  
 [!code-csharp[NavigationServiceNavigateUriStateSnippets#MainWindowCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceNavigateUriStateSnippets/CSharp/MainWindow.xaml.cs#mainwindowcode)]
 [!code-vb[NavigationServiceNavigateUriStateSnippets#MainWindowCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceNavigateUriStateSnippets/visualbasic/mainwindow.xaml.vb#mainwindowcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigate">
      <MemberSignature Language="C#" Value="public bool Navigate (Uri source, object navigationState, bool sandboxExternalContent);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Navigate(class System.Uri source, object navigationState, bool sandboxExternalContent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function Navigate (source As Uri, navigationState As Object, sandboxExternalContent As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Navigate(Uri ^ source, System::Object ^ navigationState, bool sandboxExternalContent);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Uri" />
        <Parameter Name="navigationState" Type="System.Object" />
        <Parameter Name="sandboxExternalContent" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="source">Объект <see cref="T:System.Uri" />, инициализированный с помощью URI для нужного содержимого.</param>
        <param name="navigationState">Объект, содержащий данные для использования в процессе перехода.</param>
        <param name="sandboxExternalContent">Если содержит значение <see langword="true" />, содержимое загружается в песочницу с частичным доверием (с разрешениями зоны Интернета по умолчанию). Значение по умолчанию: <see langword="false" />.</param>
        <summary>Выполняет асинхронный переход к содержимому источника с указанным URI, передает объект, содержащий состояние перехода для использования в процессе перехода, и выводит содержимое в песочнице.</summary>
        <returns>
          <see langword="true" />, если переход не отменен; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод предназначен только для автономных приложений и [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] содержимое.  
  
 Этот метод демонстрирует поведение аналогично <xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType>, и расширяет его, гарантируя, что содержимое, которое загружается помещается в песочнице с частичным доверием (с набором зоны Интернета по умолчанию разрешений - статье [частичного доверия WPF Безопасность](~/docs/framework/wpf/wpf-partial-trust-security.md)).  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Uri,System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object)" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Navigate(System.Object,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Navigated">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigatedEventHandler Navigated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigatedEventHandler Navigated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.Navigated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Navigated As NavigatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigatedEventHandler ^ Navigated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возникает, когда содержимое, к которому осуществляется переход, найдено и доступно через свойство <see cref="P:System.Windows.Navigation.NavigationService.Content" />, хотя его загрузка, возможно, еще не завершена.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вы обрабатываете <xref:System.Windows.Navigation.NavigationService.Navigated> для обнаружения нужные сведения о запросе на переход, когда начнется загрузка. Эта информация доступна из <xref:System.Windows.Navigation.NavigationEventArgs> объект, передаваемый <xref:System.Windows.Navigation.NavigationService.Navigated> обработчика событий и включает в себя:  
  
-   Исходная страница. Когда <xref:System.Windows.Navigation.NavigationService.Navigated> происходит событие, по меньшей мере часть исходной страницы [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] дерева был проанализирован и присоединяется к целевой элемент управления содержимым.  
  
-   Запрошенный универсальный код.  
  
-   Навигатор (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>).  
  
-   Дополнительные данные, если переход был инициирован с помощью вызова <xref:System.Windows.Navigation.NavigationService.Navigate%2A> или <xref:System.Windows.Navigation.NavigationService.Navigate%2A>.  
  
-   Сведения об ответе (с помощью <xref:System.Net.WebResponse> объекта).  
  
 <xref:System.Windows.Navigation.NavigationService.Navigated> не возникает, если исходная страница не обнаружены или не загружены, в этом случае <xref:System.Windows.Navigation.NavigationService.NavigationFailed> возникает.  
  
> [!NOTE]
>  Когда <xref:System.Windows.Navigation.NavigationService> вызывает <xref:System.Windows.Navigation.NavigationService.NavigationFailed>, он также выдает <xref:System.Windows.Application.NavigationFailed?displayProperty=nameWithType> событий на <xref:System.Windows.Application> объекта.  
  
   
  
## Examples  
 В следующем примере показано, как обрабатывать <xref:System.Windows.Navigation.NavigationService.Navigated>.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigatedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigatedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigatedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigatedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="Navigating">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigatingCancelEventHandler Navigating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigatingCancelEventHandler Navigating" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.Navigating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Navigating As NavigatingCancelEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigatingCancelEventHandler ^ Navigating;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigatingCancelEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Появляется, когда запрошен новый переход.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.Navigating> возникает, когда запрошен новый переход, но перед источник запросом содержимого, а также условия:  
  
-   вызывается метод <xref:System.Windows.Navigation.NavigationService.Navigate%2A>;  
  
-   <xref:System.Windows.Navigation.NavigationService.GoBack%2A> или <xref:System.Windows.Navigation.NavigationService.GoForward%2A> вызывается (или при переходе выбрана запись [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)]).  
  
-   Выполняется переход к фрагменту содержимого.  
  
 Вы обрабатываете <xref:System.Windows.Navigation.NavigationService.Navigating> для обнаружения нужных сведений о запросе на переход перед началом перехода. Эта информация доступна из <xref:System.Windows.Navigation.NavigatingCancelEventArgs> объект, передаваемый <xref:System.Windows.Navigation.NavigationService.Navigating> обработчика событий.  
  
 Объект <xref:System.Net.WebRequest> объекта для переход не был создан и доступен из <xref:System.Windows.Navigation.NavigatingCancelEventArgs> параметр; поскольку сейчас он не был сделан самого запроса, можно перенастроить <xref:System.Net.WebRequest> объекта, при необходимости.  
  
 Также обрабатывать <xref:System.Windows.Navigation.NavigatingCancelEventArgs> отменить навигации, при необходимости задавая <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> значение true. Если переход отменяется, никакие другие события перехода вызываются.  
  
> [!NOTE]
>  Если приложение размещено в браузере, можно запретить пользователю покидая приложения путем отмены <xref:System.Windows.Navigation.NavigationService.Navigating> событий.  
  
 После первой части содержимого осуществляется переход в навигаторе (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>), каждая часть содержимого, будет выполнен переход от добавляется в журнал переходов. Если необходимо сохранить сведения о перемещении из содержимого состоянии, можно добавить состояние записи журнала для этого содержимого, задав <xref:System.Windows.Navigation.NavigatingCancelEventArgs.ContentStateToSave%2A> с <xref:System.Windows.Navigation.CustomContentState> объекта.  
  
> [!NOTE]
>  Когда <xref:System.Windows.Navigation.NavigationService> вызывает <xref:System.Windows.Navigation.NavigationService.Navigating>, он также выдает <xref:System.Windows.Application.Navigating?displayProperty=nameWithType> событий на <xref:System.Windows.Application> объекта.  
  
   
  
## Examples  
 В следующем примере показано, как обрабатывать <xref:System.Windows.Navigation.NavigationService.Navigating> обнаружение был сделан запрос, чтобы обновить статическое содержимое и, если это так, чтобы отменить запрос.  
  
 <xref:System.Windows.Navigation.NavigationService.Navigating>.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigatingCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigatingcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigatingCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigatingcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="NavigationFailed">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationFailedEventHandler NavigationFailed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationFailedEventHandler NavigationFailed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      <MemberSignature Language="VB.NET" Value="Public Event NavigationFailed As NavigationFailedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigationFailedEventHandler ^ NavigationFailed;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationFailedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Генерируется, когда происходит ошибка при переходе к запрошенному содержимому.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Когда либо <xref:System.Net.WebException> или <xref:System.IO.IOException> исключение во время перехода, <xref:System.Windows.Navigation.NavigationService.NavigationFailed> событие. <xref:System.Windows.Navigation.NavigationService.NavigationFailed> передается <xref:System.Windows.Navigation.NavigationFailedEventArgs> , инкапсулирующий сведения об исключении и сведения о навигации, которое вызвало исключение.  
  
 Если исключение, полученный в результате сбоя навигации и не обрабатывается, происходят следующие события в указанном порядке:  
  
-   <xref:System.Windows.Navigation.NavigationService.NavigationFailed?displayProperty=nameWithType>.  
  
-   <xref:System.Windows.Controls.Frame.NavigationFailed?displayProperty=nameWithType> или <xref:System.Windows.Navigation.NavigationWindow.NavigationFailed?displayProperty=nameWithType>.  
  
-   <xref:System.Windows.Application.NavigationFailed?displayProperty=nameWithType>.  
  
-   <xref:System.Windows.Application.DispatcherUnhandledException>.  
  
 Если навигатор (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>) размещается в один или несколько навигаторов, `NavigationFailed` не возникает на любом из них.  
  
   
  
## Examples  
 В следующем примере показано, как обрабатывать <xref:System.Windows.Navigation.NavigationService.NavigationFailed>.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigationFailedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigationfailedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigationFailedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigationfailedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="M:System.Windows.Navigation.NavigationService.Refresh" />
      </Docs>
    </Member>
    <Member MemberName="NavigationProgress">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationProgressEventHandler NavigationProgress;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationProgressEventHandler NavigationProgress" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NavigationProgress As NavigationProgressEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigationProgressEventHandler ^ NavigationProgress;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationProgressEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Происходит периодически во время загрузки, тем самым предоставляя информацию о ходе процесса навигации.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.NavigationProgress> передается <xref:System.Windows.Navigation.NavigationProgressEventArgs> а предоставляет следующие сведения о ходе выполнения:  
  
-   Число загруженных байтов к текущему моменту (<xref:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead%2A>).  
  
-   Общее число байт для загрузки (<xref:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes%2A>).  
  
 <xref:System.Windows.Navigation.NavigationService.NavigationProgress> возникает после каждого 1024 байта содержимого загрузки, и еще раз количество оставшихся байтов является никогда не превышает 1024 байт. По этой причине обработки <xref:System.Windows.Navigation.NavigationService.NavigationProgress> предоставляет удобный способ отслеживания и отображения хода выполнения текущей загрузки.  
  
 <xref:System.Windows.Navigation.NavigationService.NavigationProgress> в некоторых случаях, например при переходе на той же части содержимого, или при переходе фрагмент содержимого на содержимое, которое в данный момент загружен не будет вызываться (то есть значение <xref:System.Windows.Navigation.NavigationService.Content%2A> свойства).  
  
 При переходе к скомпилированных ресурс XAML конечное <xref:System.Windows.Navigation.NavigationService.NavigationProgress> события не вызываются. Это означает, что в конце загрузки последнее зарегистрированное <xref:System.Windows.Navigation.NavigationProgressEventArgs.BytesRead%2A> значение не может быть равно <xref:System.Windows.Navigation.NavigationProgressEventArgs.MaxBytes%2A> значение. Обрабатывать <xref:System.Windows.Navigation.NavigationService.LoadCompleted> событий, чтобы получить уведомление о завершении навигации.  
  
> [!NOTE]
>  Когда <xref:System.Windows.Navigation.NavigationService> вызывает <xref:System.Windows.Navigation.NavigationService.NavigationProgress>, он также выдает <xref:System.Windows.Application.NavigationProgress?displayProperty=nameWithType> событий на <xref:System.Windows.Application> объекта.  
  
   
  
## Examples  
 В следующем примере показано, как обрабатывать <xref:System.Windows.Navigation.NavigationService.NavigationProgress>.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigationProgressCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigationprogresscode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigationProgressCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigationprogresscode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="NavigationStopped">
      <MemberSignature Language="C#" Value="public event System.Windows.Navigation.NavigationStoppedEventHandler NavigationStopped;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Navigation.NavigationStoppedEventHandler NavigationStopped" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Navigation.NavigationService.NavigationStopped" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NavigationStopped As NavigationStoppedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Navigation::NavigationStoppedEventHandler ^ NavigationStopped;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.NavigationStoppedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Генерируется, когда вызван метод <see cref="M:System.Windows.Navigation.NavigationService.StopLoading" /> или во время выполнения текущего перехода запрошен новый переход.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вы обрабатываете <xref:System.Windows.Navigation.NavigationService.NavigationStopped> требуется для обнаружения нужных сведений о запросе на переход, при загрузке остановлена. Эта информация доступна из <xref:System.Windows.Navigation.NavigationEventArgs> объект, передаваемый <xref:System.Windows.Navigation.NavigationService.NavigationStopped> обработчика событий и включает в себя:  
  
-   Запрошенный универсальный код.  
  
-   Навигатор (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>).  
  
-   Дополнительные данные, если переход был инициирован с помощью вызова <xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType> или <xref:System.Windows.Navigation.NavigationService.Navigate%2A?displayProperty=nameWithType>.  
  
> [!NOTE]
>  Когда <xref:System.Windows.Navigation.NavigationService> вызывает <xref:System.Windows.Navigation.NavigationService.NavigationStopped>, он также выдает <xref:System.Windows.Application.NavigationStopped?displayProperty=nameWithType> событий на <xref:System.Windows.Application> объекта.  
  
   
  
## Examples  
 В следующем примере показано, как обрабатывать <xref:System.Windows.Navigation.NavigationService.NavigationStopped>.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowNavigationStoppedCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindownavigationstoppedcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowNavigationStoppedCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindownavigationstoppedcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.FragmentNavigation" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigated" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.LoadCompleted" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationProgress" />
        <altmember cref="E:System.Windows.Navigation.NavigationService.NavigationFailed" />
      </Docs>
    </Member>
    <Member MemberName="Refresh">
      <MemberSignature Language="C#" Value="public void Refresh ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Refresh() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.Refresh" />
      <MemberSignature Language="VB.NET" Value="Public Sub Refresh ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Refresh();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Заново загружает текущее содержимое.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если текущее содержимое (указанное значение из <xref:System.Windows.Navigation.NavigationService.Source%2A> свойство) осуществляется переход, <xref:System.Windows.Navigation.NavigationService> снова не загружать содержимое. Чтобы принудительно <xref:System.Windows.Navigation.NavigationService> Чтобы снова перейти к содержимому, вызовите <xref:System.Windows.Navigation.NavigationService.Refresh%2A>.  
  
 Обратите внимание, что если текущего содержимого осуществляется переход, ли путем вызова <xref:System.Windows.Navigation.NavigationService.Navigate%2A> или <xref:System.Windows.Navigation.NavigationService.Refresh%2A>, новая запись не добавляется в журнал переходов.  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Navigation.NavigationService.Navigating" />
      </Docs>
    </Member>
    <Member MemberName="RemoveBackEntry">
      <MemberSignature Language="C#" Value="public System.Windows.Navigation.JournalEntry RemoveBackEntry ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Navigation.JournalEntry RemoveBackEntry() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.RemoveBackEntry" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveBackEntry () As JournalEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Navigation::JournalEntry ^ RemoveBackEntry();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Navigation.JournalEntry</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Удаляет последнюю запись из журнала переходов назад.</summary>
        <returns>Последняя запись <see cref="T:System.Windows.Navigation.JournalEntry" /> журнала переходов назад, если в нем имеются записи.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если два или более навигаторы (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>) совместно используют же истории просмотра, можно использовать один Навигатор <xref:System.Windows.Navigation.NavigationService.RemoveBackEntry%2A> для извлечения записи журнала переходов назад для навигации, которые были внесены в другой Навигатор.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Navigation.NavigationService.AddBackEntry(System.Windows.Navigation.CustomContentState)" />
      </Docs>
    </Member>
    <Member MemberName="Source">
      <MemberSignature Language="C#" Value="public Uri Source { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Uri Source" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Navigation.NavigationService.Source" />
      <MemberSignature Language="VB.NET" Value="Public Property Source As Uri" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Uri ^ Source { Uri ^ get(); void set(Uri ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Uri</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает URI текущего содержимого или URI нового содержимого, к которому осуществляется переход.</summary>
        <value>Объект <see cref="T:System.Uri" /> , содержащий URI для текущего содержимого или содержимое, которое в настоящее время выполняется переход.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если этому свойству присвоено другой универсальный код Ресурса от того, в настоящее время при отображении Навигатор (<xref:System.Windows.Navigation.NavigationWindow>, <xref:System.Windows.Controls.Frame>) переходит к указанному URI.  
  
 <xref:System.Windows.Navigation.NavigationService.Source%2A> устанавливается на ресурсы, которые загружаются из URI, к которому осуществляется переход, если переход отменяется.  
  
 <xref:System.Windows.Navigation.NavigationService.Source%2A> можно задать только для фрагмента URI и может быть присвоено `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StopLoading">
      <MemberSignature Language="C#" Value="public void StopLoading ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void StopLoading() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Navigation.NavigationService.StopLoading" />
      <MemberSignature Language="VB.NET" Value="Public Sub StopLoading ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void StopLoading();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Останавливает дальнейшую загрузку содержимого для текущего запроса перехода.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Windows.Navigation.NavigationService.StopLoading%2A> можно вызвать сразу <xref:System.Windows.Navigation.NavigationService.Navigate%2A> возвращает и завершается навигации, который выполняется в дочерних фреймов.  
  
 (<xref:System.Windows.Controls.Frame>).  
  
 Вызов <xref:System.Windows.Navigation.NavigationService.StopLoading%2A> вызывает метод <xref:System.Windows.Navigation.NavigationService.NavigationStopped> событий.  
  
> [!NOTE]
>  <xref:System.Windows.Navigation.NavigationService.StopLoading%2A> должен вызываться в том же потоке, инициировавшего навигации.  
  
   
  
## Examples  
 Ниже приведен пример, как остановить загрузку.  
  
 [!code-csharp[NavigationServiceSnippets#MainWindowStopLoadingCODE](~/samples/snippets/csharp/VS_Snippets_Wpf/NavigationServiceSnippets/CSharp/MainWindow.xaml.cs#mainwindowstoploadingcode)]
 [!code-vb[NavigationServiceSnippets#MainWindowStopLoadingCODE](~/samples/snippets/visualbasic/VS_Snippets_Wpf/NavigationServiceSnippets/visualbasic/mainwindow.xaml.vb#mainwindowstoploadingcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Windows.Navigation.NavigationService.Navigate" />
      </Docs>
    </Member>
  </Members>
</Type>