<Type Name="JumpTask" FullName="System.Windows.Shell.JumpTask">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="72ea038bfacc9fec6529a315bec4aedb2ba7c98b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36464467" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class JumpTask : System.Windows.Shell.JumpItem" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit JumpTask extends System.Windows.Shell.JumpItem" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Shell.JumpTask" />
  <TypeSignature Language="VB.NET" Value="Public Class JumpTask&#xA;Inherits JumpItem" />
  <TypeSignature Language="C++ CLI" Value="public ref class JumpTask : System::Windows::Shell::JumpItem" />
  <TypeSignature Language="F#" Value="type JumpTask = class&#xA;    inherit JumpItem" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Shell.JumpItem</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Представляет ярлык приложения в списке переходов на панели задач Windows 7.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Объект <xref:System.Windows.Shell.JumpTask> можно рассматривать как ярлык для приложения. Укажите путь к исполняемому файлу, задав <xref:System.Windows.Shell.JumpTask.ApplicationPath%2A> свойство. Если <xref:System.Windows.Shell.JumpTask.ApplicationPath%2A> не задан, подразумевается путь текущего выполняемого процесса. Дополнительно можно указать <xref:System.Windows.Shell.JumpTask.Arguments%2A> для передачи при запуске приложения.  
  
 Например, можно задать свойства основного экрана <xref:System.Windows.Shell.JumpTask.Title%2A>, <xref:System.Windows.Shell.JumpTask.Description%2A>, и <xref:System.Windows.Shell.JumpTask.IconResourcePath%2A> для определения внешнего вида задачи в списке переходов. Значок, который используется с <xref:System.Windows.Shell.JumpTask> должны быть доступны как машинный ресурс. Несколько значок ресурсов доступны в библиотеках DLL или исполняемого файла, указываемой из них, указав смещение в <xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A> свойство.  
  
 По умолчанию <xref:System.Windows.Shell.JumpTask> будут помещены в **задачи** категории списка переходов. Можно задать пользовательское группирование задач, задав <xref:System.Windows.Shell.JumpItem.CustomCategory%2A> свойство.  
  
 Можно визуально отделить элементы в список переходов, создав <xref:System.Windows.Shell.JumpTask> , не имеющим <xref:System.Windows.Shell.JumpTask.Title%2A> и <xref:System.Windows.Shell.JumpItem.CustomCategory%2A> указанного. Это пустой <xref:System.Windows.Shell.JumpTask> отображается как горизонтальная линия в списке переходов. В этом случае можно задать другие свойства, но они не оказывают никакого влияния.  
  
   
  
## Examples  
 В следующем примере показан способ объявления <xref:System.Windows.Shell.JumpTask> в разметке. <xref:System.Windows.Shell.JumpTask> Открывает текстовый файл с именем `readme.txt` в приложение «Блокнот».  
  
 [!code-xaml[Shell_JumpListSample#002](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#002)]  
  
 В следующем примере показано, как настроить <xref:System.Windows.Shell.JumpTask> в коде. <xref:System.Windows.Shell.JumpTask> Открывает приложение калькулятора.  
  
 [!code-csharp[Shell_JumpListSample#241](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#241)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Shell.JumpPath" />
    <altmember cref="T:System.Windows.Shell.JumpList" />
    <altmember cref="E:System.Windows.Shell.JumpList.JumpItemsRejected" />
    <altmember cref="E:System.Windows.Application.Startup" />
    <altmember cref="P:System.Windows.StartupEventArgs.Args" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public JumpTask ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Shell.JumpTask.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; JumpTask();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.Shell.JumpTask" />.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ApplicationPath">
      <MemberSignature Language="C#" Value="public string ApplicationPath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ApplicationPath" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpTask.ApplicationPath" />
      <MemberSignature Language="VB.NET" Value="Public Property ApplicationPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ApplicationPath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationPath : string with get, set" Usage="System.Windows.Shell.JumpTask.ApplicationPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает путь к приложению.</summary>
        <value>Путь к приложению. Значение по умолчанию: <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если <xref:System.Windows.Shell.JumpTask.ApplicationPath%2A> свойство не задано, то подразумевается путь текущего выполняемого процесса. Приложение может содержать задачи для исполняемых файлов, кроме самого себя.  
  
   
  
## Examples  
 В следующем примере показан способ объявления <xref:System.Windows.Shell.JumpTask> в разметке. <xref:System.Windows.Shell.JumpTask> Открывает текстовый файл с именем `readme.txt` в приложение «Блокнот».  
  
 [!code-xaml[Shell_JumpListSample#002](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#002)]  
  
 В следующем примере показано, как настроить <xref:System.Windows.Shell.JumpTask> в коде. <xref:System.Windows.Shell.JumpTask> Открывает приложение калькулятора.  
  
 [!code-csharp[Shell_JumpListSample#241](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#241)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Arguments">
      <MemberSignature Language="C#" Value="public string Arguments { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Arguments" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpTask.Arguments" />
      <MemberSignature Language="VB.NET" Value="Public Property Arguments As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Arguments { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Arguments : string with get, set" Usage="System.Windows.Shell.JumpTask.Arguments" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает аргументы, передаваемые в приложение при запуске.</summary>
        <value>Аргументы, передаваемые в приложение при запуске. Значение по умолчанию: <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере показан способ объявления <xref:System.Windows.Shell.JumpTask> в разметке. <xref:System.Windows.Shell.JumpTask> Открывает текстовый файл с именем `readme.txt` в приложение «Блокнот».  
  
 [!code-xaml[Shell_JumpListSample#002](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#002)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Application.Startup" />
        <altmember cref="P:System.Windows.StartupEventArgs.Args" />
      </Docs>
    </Member>
    <Member MemberName="Description">
      <MemberSignature Language="C#" Value="public string Description { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Description" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpTask.Description" />
      <MemberSignature Language="VB.NET" Value="Public Property Description As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Description { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Description : string with get, set" Usage="System.Windows.Shell.JumpTask.Description" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает текст подсказки для задачи в списке переходов.</summary>
        <value>Текст подсказки для задачи. Значение по умолчанию: <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере показан способ объявления <xref:System.Windows.Shell.JumpTask> в разметке. <xref:System.Windows.Shell.JumpTask> Открывает текстовый файл с именем `readme.txt` в приложение «Блокнот».  
  
 [!code-xaml[Shell_JumpListSample#002](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#002)]  
  
 В следующем примере показано, как настроить <xref:System.Windows.Shell.JumpTask> в коде. <xref:System.Windows.Shell.JumpTask> Открывает приложение калькулятора.  
  
 [!code-csharp[Shell_JumpListSample#241](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#241)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IconResourceIndex">
      <MemberSignature Language="C#" Value="public int IconResourceIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 IconResourceIndex" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpTask.IconResourceIndex" />
      <MemberSignature Language="VB.NET" Value="Public Property IconResourceIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int IconResourceIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.IconResourceIndex : int with get, set" Usage="System.Windows.Shell.JumpTask.IconResourceIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает отсчитываемый от нуля индекс вставленного в ресурс значка.</summary>
        <value>Отсчитываемый от нуля индекс значка или значение -1, если значок не используется. Значение по умолчанию — 0.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значок, который используется с <xref:System.Windows.Shell.JumpTask> должны быть доступны как машинный ресурс. Если несколько значков доступны в библиотеках DLL или исполняемого файла, указываются из них, указав смещение в <xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A> свойство.  
  
 Если ресурс значков не указан или не найден указанный значок, отображается стандартный системный значок. Чтобы указать, что значок не отображается, установите <xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A> свойство в значение -1.  
  
   
  
## Examples  
 В следующем примере показан способ объявления <xref:System.Windows.Shell.JumpTask> в разметке. <xref:System.Windows.Shell.JumpTask> Открывает текстовый файл с именем `readme.txt` в приложение «Блокнот».  
  
 [!code-xaml[Shell_JumpListSample#002](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#002)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Shell.JumpTask.IconResourcePath" />
      </Docs>
    </Member>
    <Member MemberName="IconResourcePath">
      <MemberSignature Language="C#" Value="public string IconResourcePath { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string IconResourcePath" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpTask.IconResourcePath" />
      <MemberSignature Language="VB.NET" Value="Public Property IconResourcePath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ IconResourcePath { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.IconResourcePath : string with get, set" Usage="System.Windows.Shell.JumpTask.IconResourcePath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает путь к ресурсу, содержащему значок, отображаемый в списке переходов.</summary>
        <value>Путь к ресурсу, содержащему значок. Значение по умолчанию: <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значок, который используется с <xref:System.Windows.Shell.JumpTask> должны быть доступны как машинный ресурс. Если несколько значков доступны в библиотеках DLL или исполняемого файла, указываются из них, указав смещение в <xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A> свойство.  
  
 Если ресурс значков не указан или не найден указанный значок, отображается стандартный системный значок. Чтобы указать, что значок не отображается, установите <xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A> свойство в значение -1.  
  
   
  
## Examples  
 В следующем примере показан способ объявления <xref:System.Windows.Shell.JumpTask> в разметке. <xref:System.Windows.Shell.JumpTask> Открывает текстовый файл с именем `readme.txt` в приложение «Блокнот».  
  
 [!code-xaml[Shell_JumpListSample#002](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#002)]  
  
 В следующем примере показано, как настроить <xref:System.Windows.Shell.JumpTask> в коде. <xref:System.Windows.Shell.JumpTask> Открывает приложение калькулятора.  
  
 [!code-csharp[Shell_JumpListSample#241](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#241)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Shell.JumpTask.IconResourceIndex" />
      </Docs>
    </Member>
    <Member MemberName="Title">
      <MemberSignature Language="C#" Value="public string Title { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Title" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpTask.Title" />
      <MemberSignature Language="VB.NET" Value="Public Property Title As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Title { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Title : string with get, set" Usage="System.Windows.Shell.JumpTask.Title" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает текст для задачи в списке переходов.</summary>
        <value>Текст для задачи в списке переходов. Значение по умолчанию: <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Как правило <xref:System.Windows.Shell.JumpTask.Title%2A> свойство должно быть задано для <xref:System.Windows.Shell.JumpTask> появятся в списке переходов как активную задачу.  
  
 Кроме того, можно визуально отделить элементы в список переходов, создав <xref:System.Windows.Shell.JumpTask> , не имеющим <xref:System.Windows.Shell.JumpTask.Title%2A> и <xref:System.Windows.Shell.JumpItem.CustomCategory%2A> указанного. Это пустой <xref:System.Windows.Shell.JumpTask> отображается как горизонтальная линия в списке переходов. В этом случае можно задать другие свойства, но они не оказывают никакого влияния.  
  
   
  
## Examples  
 В следующем примере показан способ объявления <xref:System.Windows.Shell.JumpTask> в разметке. <xref:System.Windows.Shell.JumpTask> Открывает имя текстового файла `readme.txt` в приложение «Блокнот».  
  
 [!code-xaml[Shell_JumpListSample#002](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#002)]  
  
 В следующем примере показано, как настроить <xref:System.Windows.Shell.JumpTask> в коде. <xref:System.Windows.Shell.JumpTask> Открывает приложение калькулятора.  
  
 [!code-csharp[Shell_JumpListSample#241](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/mainwindow.xaml.cs#241)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WorkingDirectory">
      <MemberSignature Language="C#" Value="public string WorkingDirectory { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string WorkingDirectory" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Shell.JumpTask.WorkingDirectory" />
      <MemberSignature Language="VB.NET" Value="Public Property WorkingDirectory As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ WorkingDirectory { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.WorkingDirectory : string with get, set" Usage="System.Windows.Shell.JumpTask.WorkingDirectory" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает рабочую папку приложения при запуске.</summary>
        <value>Рабочая папка приложения при запуске. Значение по умолчанию: <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 В следующем примере показан способ объявления <xref:System.Windows.Shell.JumpTask> в разметке. <xref:System.Windows.Shell.JumpTask> Открывает текстовый файл с именем `readme.txt` в приложение «Блокнот».  
  
 [!code-xaml[Shell_JumpListSample#002](~/samples/snippets/csharp/VS_Snippets_Wpf/shell_jumplistsample/cs/app.xaml#002)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>