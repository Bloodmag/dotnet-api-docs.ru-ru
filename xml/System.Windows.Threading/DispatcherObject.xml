<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DispatcherObject.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a940ab9e8bca976429db39edb2ab477f770dde6b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a940ab9e8bca976429db39edb2ab477f770dde6b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.Threading.DispatcherObject">
          <source>Represents an object that is associated with a <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherObject">
          <source>Only the thread that the <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt;</ph> was created on may access the <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> directly.</source>
          <target state="translated">Только поток, <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt;</ph> был создан на может получать доступ к <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> напрямую.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherObject">
          <source>To access a <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> from a thread other than the thread the <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> was created on, call <ph id="ph3">&lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A&gt;</ph> on the <ph id="ph5">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> the <ph id="ph6">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> is associated with.</source>
          <target state="translated">Чтобы получить доступ к <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> из потока, в котором <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> был создан, вызовите <ph id="ph3">&lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A&gt;</ph> или <ph id="ph4">&lt;xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A&gt;</ph> на <ph id="ph5">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> <ph id="ph6">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> связан с.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherObject">
          <source>Subclasses of <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> that need to enforce thread safety can do so by calling <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;</ph> on all public methods.</source>
          <target state="translated">Подклассы <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> , необходимые для обеспечения потока безопасности можно сделать, вызвав <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;</ph> на все открытые методы.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherObject">
          <source>This guarantees the calling thread is the thread that the <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> was created on.</source>
          <target state="translated">Это гарантирует, что вызывающий поток является потоком, <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> был создан.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherObject">
          <source>A <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> cannot be independently instantiated; that is, all constructors are protected.</source>
          <target state="translated">Объект <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> не может быть создан независимо друг от друга; то есть все конструкторы являются защищенными.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherObject">
          <source>Objects that derive from <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> have thread affinity.</source>
          <target state="translated">Объекты, которые являются производными от <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> поддерживают сходство потоков.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherObject">
          <source>Objects that derive from <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> are free-threaded when they are frozen.</source>
          <target state="translated">Объекты, которые являются производными от <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> являются свободнопоточный зафиксированный их.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherObject">
          <source>For more information, see the <bpt id="p1">[</bpt>Freezable Objects Overview<ept id="p1">](~/docs/framework/wpf/advanced/freezable-objects-overview.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>Общие сведения об объектах класса Freezable<ept id="p1">](~/docs/framework/wpf/advanced/freezable-objects-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherObject">
          <source>Any public <ph id="ph1">&lt;see langword="static" /&gt;</ph> members of this type are thread safe.</source>
          <target state="translated">Любые открытые <ph id="ph1">&lt;see langword="static" /&gt;</ph> члены этого типа являются потокобезопасными.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherObject">
          <source>Any instance members are not guaranteed to be thread safe.</source>
          <target state="translated">Потокобезопасность членов экземпляров не гарантируется.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherObject">
          <source>This object can be accessed only from the thread on which it was created.</source>
          <target state="translated">Этот объект может осуществляться только из потока, в котором он был создан.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherObject">
          <source>Attempts to access it from other threads will throw an <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>.</source>
          <target state="translated">Пытается получить доступ к его из других потоков создаст исключение <ph id="ph1">&lt;see cref="T:System.InvalidOperationException" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.Threading.DispatcherObject">
          <source><ph id="ph1">&lt;see cref="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" /&gt;</ph> or <ph id="ph2">&lt;see cref="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" /&gt;</ph> provide support for marshalling work to the correct thread.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" /&gt;</ph> или <ph id="ph2">&lt;see cref="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" /&gt;</ph> обеспечивают поддержку маршалинга рабочих в нужный поток.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherObject.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherObject" /&gt;</ph> class.</source>
          
        </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherObject.CheckAccess">
          <source>Determines whether the calling thread has access to this <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherObject" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherObject.CheckAccess">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the calling thread has access to this object; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherObject.CheckAccess">
          <source>Only the thread the <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt;</ph> was created on may access the <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>.</source>
          <target state="translated">Только поток <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt;</ph> был создан на может получать доступ к <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherObject.CheckAccess">
          <source>Any thread can check to see whether it has access to this <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>.</source>
          <target state="translated">Любой поток можно проверить наличие доступа к этому <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherObject.CheckAccess">
          <source>The difference between <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;</ph> is that <ph id="ph3">&lt;xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt;</ph> returns a Boolean that specifies whether the calling thread has access to this <ph id="ph4">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;</ph> throws an exception if the calling thread does not have access to the this <ph id="ph6">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>.</source>
          <target state="translated">Разница между <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;</ph> является то, что <ph id="ph3">&lt;xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt;</ph> возвращает логическое значение, указывающее, имеет ли вызывающий поток доступ к этому <ph id="ph4">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> и <ph id="ph5">&lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;</ph> вызывает исключение, если вызывающий поток не имеет доступа к Это <ph id="ph6">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherObject.CheckAccess">
          <source>Calling this method is identical to calling <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher.CheckAccess%2A&gt;</ph> on the associated <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> object.</source>
          <target state="translated">Вызов этого метода совпадает с вызовом метода <ph id="ph1">&lt;xref:System.Windows.Threading.Dispatcher.CheckAccess%2A&gt;</ph> в связанном <ph id="ph2">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> объект.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherObject.CheckAccess">
          <source>The following example uses <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt;</ph> to determine whether a thread has access to the thread that a <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph> was created on.</source>
          <target state="translated">В следующем примере используется <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt;</ph> для определения, имеет ли поток доступ к потоку, <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph> был создан.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherObject.CheckAccess">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt;</ph> method on the <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph> is called to verify access to the thread.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt;</ph> Метод <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph> вызывается, чтобы проверить доступ к потоку.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherObject.CheckAccess">
          <source>If the calling thread has access, the <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> is updated by just accessing the members of the <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph>; otherwise, a delegate, which accepts a <ph id="ph3">&lt;xref:System.Windows.Controls.Button&gt;</ph> as an argument, is posted onto the <ph id="ph4">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> of the <ph id="ph5">&lt;xref:System.Windows.Controls.Button&gt;</ph>.</source>
          <target state="translated">Если вызывающий поток имеет доступ, <ph id="ph1">&lt;xref:System.Windows.Controls.Button&gt;</ph> обновляется только доступ к членам <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph>; в противном случае делегата, который принимает <ph id="ph3">&lt;xref:System.Windows.Controls.Button&gt;</ph> как аргумент, отправляется на <ph id="ph4">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> из <ph id="ph5">&lt;xref:System.Windows.Controls.Button&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="P:System.Windows.Threading.DispatcherObject.Dispatcher">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Windows.Threading.Dispatcher" /&gt;</ph> this <ph id="ph2">&lt;see cref="T:System.Windows.Threading.DispatcherObject" /&gt;</ph> is associated with.</source>
          
        </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherObject.Dispatcher">
          <source>The dispatcher.</source>
          <target state="translated">Диспетчер.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherObject.Dispatcher">
          <source>Only the thread that the <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt;</ph> was created on may access the <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> directly.</source>
          <target state="translated">Только поток, <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt;</ph> был создан на может получать доступ к <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> напрямую.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.Threading.DispatcherObject.Dispatcher">
          <source>To access a <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> from a thread other than the thread the <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> was created on, call <ph id="ph3">&lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A&gt;</ph> and <ph id="ph4">&lt;xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A&gt;</ph> on the <ph id="ph5">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> the <ph id="ph6">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> is associated with.</source>
          <target state="translated">Чтобы получить доступ к <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> из потока, в котором <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> был создан, вызовите <ph id="ph3">&lt;xref:System.Windows.Threading.Dispatcher.Invoke%2A&gt;</ph> и <ph id="ph4">&lt;xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A&gt;</ph> на <ph id="ph5">&lt;xref:System.Windows.Threading.Dispatcher&gt;</ph> <ph id="ph6">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> связан с.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherObject.VerifyAccess">
          <source>Enforces that the calling thread has access to this <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherObject" /&gt;</ph>.</source>
          
        </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherObject.VerifyAccess">
          <source>Only the thread the <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt;</ph> was created on may access the <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>.</source>
          <target state="translated">Только поток <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A&gt;</ph> был создан на может получать доступ к <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherObject.VerifyAccess">
          <source>Any thread can check to see whether it has access to this <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>.</source>
          <target state="translated">Любой поток можно проверить наличие доступа к этому <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherObject.VerifyAccess">
          <source>The difference between <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;</ph> is that <ph id="ph3">&lt;xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt;</ph> returns a Boolean that specifies whether the calling thread has access to this <ph id="ph4">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;</ph> throws an exception if the calling thread does not have access to the this <ph id="ph6">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>.</source>
          <target state="translated">Разница между <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;</ph> является то, что <ph id="ph3">&lt;xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A&gt;</ph> возвращает логическое значение, указывающее, имеет ли вызывающий поток доступ к этому <ph id="ph4">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph> и <ph id="ph5">&lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;</ph> вызывает исключение, если вызывающий поток не имеет доступа к Это <ph id="ph6">&lt;xref:System.Windows.Threading.DispatcherObject&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherObject.VerifyAccess">
          <source>The following example uses <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;</ph> to determine whether a thread has access to the thread that a <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph> was created on.</source>
          <target state="translated">В следующем примере используется <ph id="ph1">&lt;xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A&gt;</ph> для определения, имеет ли поток доступ к потоку, <ph id="ph2">&lt;xref:System.Windows.Controls.Button&gt;</ph> был создан.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.Threading.DispatcherObject.VerifyAccess">
          <source>If the calling thread does not have access, an <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> is thrown.</source>
          <target state="translated">Если вызывающий поток не имеет доступа, <ph id="ph1">&lt;xref:System.InvalidOperationException&gt;</ph> возникает исключение.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.Threading.DispatcherObject.VerifyAccess">
          <source>the calling thread does not have access to this <ph id="ph1">&lt;see cref="T:System.Windows.Threading.DispatcherObject" /&gt;</ph>.</source>
          
        </trans-unit>
      </group>
    </body>
  </file>
</xliff>