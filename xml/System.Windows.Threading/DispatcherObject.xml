<Type Name="DispatcherObject" FullName="System.Windows.Threading.DispatcherObject">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a940ab9e8bca976429db39edb2ab477f770dde6b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit DispatcherObject extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class DispatcherObject abstract" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="93470-101">Представляет объект, связанный с объектом <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="93470-101">Represents an object that is associated with a <see cref="T:System.Windows.Threading.Dispatcher" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93470-102">Только поток, <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> был создан на может получать доступ к <xref:System.Windows.Threading.DispatcherObject> напрямую.</span><span class="sxs-lookup"><span data-stu-id="93470-102">Only the thread that the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject> directly.</span></span>  <span data-ttu-id="93470-103">Чтобы получить доступ к <xref:System.Windows.Threading.DispatcherObject> из потока, в котором <xref:System.Windows.Threading.DispatcherObject> был создан, вызовите <xref:System.Windows.Threading.Dispatcher.Invoke%2A> или <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> на <xref:System.Windows.Threading.Dispatcher> <xref:System.Windows.Threading.DispatcherObject> связан с.</span><span class="sxs-lookup"><span data-stu-id="93470-103">To access a <xref:System.Windows.Threading.DispatcherObject> from a thread other than the thread the <xref:System.Windows.Threading.DispatcherObject> was created on, call <xref:System.Windows.Threading.Dispatcher.Invoke%2A> or <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> on the <xref:System.Windows.Threading.Dispatcher> the <xref:System.Windows.Threading.DispatcherObject> is associated with.</span></span>  
  
 <span data-ttu-id="93470-104">Подклассы <xref:System.Windows.Threading.DispatcherObject> , необходимые для обеспечения потока безопасности можно сделать, вызвав <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> на все открытые методы.</span><span class="sxs-lookup"><span data-stu-id="93470-104">Subclasses of <xref:System.Windows.Threading.DispatcherObject> that need to enforce thread safety can do so by calling <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> on all public methods.</span></span>  <span data-ttu-id="93470-105">Это гарантирует, что вызывающий поток является потоком, <xref:System.Windows.Threading.DispatcherObject> был создан.</span><span class="sxs-lookup"><span data-stu-id="93470-105">This guarantees the calling thread is the thread that the <xref:System.Windows.Threading.DispatcherObject> was created on.</span></span>  
  
 <span data-ttu-id="93470-106">Объект <xref:System.Windows.Threading.DispatcherObject> не может быть создан независимо друг от друга; то есть все конструкторы являются защищенными.</span><span class="sxs-lookup"><span data-stu-id="93470-106">A <xref:System.Windows.Threading.DispatcherObject> cannot be independently instantiated; that is, all constructors are protected.</span></span>  
  
 <span data-ttu-id="93470-107">Объекты, которые являются производными от <xref:System.Windows.Threading.DispatcherObject> поддерживают сходство потоков.</span><span class="sxs-lookup"><span data-stu-id="93470-107">Objects that derive from <xref:System.Windows.Threading.DispatcherObject> have thread affinity.</span></span>  
  
 <span data-ttu-id="93470-108">Объекты, которые являются производными от <xref:System.Windows.Freezable> являются свободнопоточный зафиксированный их.</span><span class="sxs-lookup"><span data-stu-id="93470-108">Objects that derive from <xref:System.Windows.Freezable> are free-threaded when they are frozen.</span></span>  <span data-ttu-id="93470-109">Дополнительные сведения см. в разделе [Общие сведения об объектах класса Freezable](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span><span class="sxs-lookup"><span data-stu-id="93470-109">For more information, see the [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="93470-110">Любые открытые <see langword="static" /> члены этого типа являются потокобезопасными.</span>
      <span class="sxs-lookup">
        <span data-stu-id="93470-110">Any public <see langword="static" /> members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="93470-111">Потокобезопасность членов экземпляров не гарантируется.</span>
      <span class="sxs-lookup">
        <span data-stu-id="93470-111">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="93470-112">Этот объект может осуществляться только из потока, в котором он был создан.</span>
      <span class="sxs-lookup">
        <span data-stu-id="93470-112">This object can be accessed only from the thread on which it was created.</span>
      </span>
      <span data-ttu-id="93470-113">Пытается получить доступ к его из других потоков создаст исключение <see cref="T:System.InvalidOperationException" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="93470-113">Attempts to access it from other threads will throw an <see cref="T:System.InvalidOperationException" />.</span>
      </span>
      <span data-ttu-id="93470-114">
        <see cref="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" /> или <see cref="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" /> обеспечивают поддержку маршалинга рабочих в нужный поток.</span>
      <span class="sxs-lookup">
        <span data-stu-id="93470-114">
          <see cref="M:System.Windows.Threading.Dispatcher.Invoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" /> or <see cref="M:System.Windows.Threading.Dispatcher.BeginInvoke(System.Windows.Threading.DispatcherPriority,System.Delegate)" /> provide support for marshalling work to the correct thread.</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected DispatcherObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; DispatcherObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="93470-115">Инициализирует новый экземпляр класса <see cref="T:System.Windows.Threading.DispatcherObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93470-115">Initializes a new instance of the <see cref="T:System.Windows.Threading.DispatcherObject" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckAccess">
      <MemberSignature Language="C#" Value="public bool CheckAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool CheckAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherObject.CheckAccess" />
      <MemberSignature Language="VB.NET" Value="Public Function CheckAccess () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool CheckAccess();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="93470-116">Определяет, имеет ли вызывающий поток доступ к этому <see cref="T:System.Windows.Threading.DispatcherObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93470-116">Determines whether the calling thread has access to this <see cref="T:System.Windows.Threading.DispatcherObject" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="93470-117">
            <see langword="true" />, если вызывающий поток имеет доступ к этому объекту; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93470-117">
              <see langword="true" /> if the calling thread has access to this object; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93470-118">Только поток <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> был создан на может получать доступ к <xref:System.Windows.Threading.DispatcherObject>.</span><span class="sxs-lookup"><span data-stu-id="93470-118">Only the thread the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject>.</span></span>  
  
 <span data-ttu-id="93470-119">Любой поток можно проверить наличие доступа к этому <xref:System.Windows.Threading.DispatcherObject>.</span><span class="sxs-lookup"><span data-stu-id="93470-119">Any thread can check to see whether it has access to this <xref:System.Windows.Threading.DispatcherObject>.</span></span>  
  
 <span data-ttu-id="93470-120">Разница между <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> и <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> является то, что <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> возвращает логическое значение, указывающее, имеет ли вызывающий поток доступ к этому <xref:System.Windows.Threading.DispatcherObject> и <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> вызывает исключение, если вызывающий поток не имеет доступа к Это <xref:System.Windows.Threading.DispatcherObject>.</span><span class="sxs-lookup"><span data-stu-id="93470-120">The difference between <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> is that <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> returns a Boolean that specifies whether the calling thread has access to this <xref:System.Windows.Threading.DispatcherObject> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> throws an exception if the calling thread does not have access to the this <xref:System.Windows.Threading.DispatcherObject>.</span></span>  
  
 <span data-ttu-id="93470-121">Вызов этого метода совпадает с вызовом метода <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> в связанном <xref:System.Windows.Threading.Dispatcher> объект.</span><span class="sxs-lookup"><span data-stu-id="93470-121">Calling this method is identical to calling <xref:System.Windows.Threading.Dispatcher.CheckAccess%2A> on the associated <xref:System.Windows.Threading.Dispatcher> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93470-122">В следующем примере используется <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> для определения, имеет ли поток доступ к потоку, <xref:System.Windows.Controls.Button> был создан.</span><span class="sxs-lookup"><span data-stu-id="93470-122">The following example uses <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> to determine whether a thread has access to the thread that a <xref:System.Windows.Controls.Button> was created on.</span></span>  <span data-ttu-id="93470-123"><xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> Метод <xref:System.Windows.Controls.Button> вызывается, чтобы проверить доступ к потоку.</span><span class="sxs-lookup"><span data-stu-id="93470-123">The <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> method on the <xref:System.Windows.Controls.Button> is called to verify access to the thread.</span></span>  <span data-ttu-id="93470-124">Если вызывающий поток имеет доступ, <xref:System.Windows.Controls.Button> обновляется только доступ к членам <xref:System.Windows.Controls.Button>; в противном случае делегата, который принимает <xref:System.Windows.Controls.Button> как аргумент, отправляется на <xref:System.Windows.Threading.Dispatcher> из <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="93470-124">If the calling thread has access, the <xref:System.Windows.Controls.Button> is updated by just accessing the members of the <xref:System.Windows.Controls.Button>; otherwise, a delegate, which accepts a <xref:System.Windows.Controls.Button> as an argument, is posted onto the <xref:System.Windows.Threading.Dispatcher> of the <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-csharp[DispatcherObjectAccessSample#DispatcherObjectAccessCheckAccess](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherObjectAccessSample/CSharp/Window1.xaml.cs#dispatcherobjectaccesscheckaccess)]
 [!code-vb[DispatcherObjectAccessSample#DispatcherObjectAccessCheckAccess](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherObjectAccessSample/visualbasic/window1.xaml.vb#dispatcherobjectaccesscheckaccess)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispatcher">
      <MemberSignature Language="C#" Value="public System.Windows.Threading.Dispatcher Dispatcher { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Threading.Dispatcher Dispatcher" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Threading.DispatcherObject.Dispatcher" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Dispatcher As Dispatcher" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Threading::Dispatcher ^ Dispatcher { System::Windows::Threading::Dispatcher ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Threading.Dispatcher</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="93470-125">Возвращает объект <see cref="T:System.Windows.Threading.Dispatcher" />, с которым связан этот объект <see cref="T:System.Windows.Threading.DispatcherObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93470-125">Gets the <see cref="T:System.Windows.Threading.Dispatcher" /> this <see cref="T:System.Windows.Threading.DispatcherObject" /> is associated with.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="93470-126">Диспетчер.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93470-126">The dispatcher.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93470-127">Только поток, <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> был создан на может получать доступ к <xref:System.Windows.Threading.DispatcherObject> напрямую.</span><span class="sxs-lookup"><span data-stu-id="93470-127">Only the thread that the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject> directly.</span></span>  <span data-ttu-id="93470-128">Чтобы получить доступ к <xref:System.Windows.Threading.DispatcherObject> из потока, в котором <xref:System.Windows.Threading.DispatcherObject> был создан, вызовите <xref:System.Windows.Threading.Dispatcher.Invoke%2A> и <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> на <xref:System.Windows.Threading.Dispatcher> <xref:System.Windows.Threading.DispatcherObject> связан с.</span><span class="sxs-lookup"><span data-stu-id="93470-128">To access a <xref:System.Windows.Threading.DispatcherObject> from a thread other than the thread the <xref:System.Windows.Threading.DispatcherObject> was created on, call <xref:System.Windows.Threading.Dispatcher.Invoke%2A> and <xref:System.Windows.Threading.Dispatcher.BeginInvoke%2A> on the <xref:System.Windows.Threading.Dispatcher> the <xref:System.Windows.Threading.DispatcherObject> is associated with.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerifyAccess">
      <MemberSignature Language="C#" Value="public void VerifyAccess ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void VerifyAccess() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Threading.DispatcherObject.VerifyAccess" />
      <MemberSignature Language="VB.NET" Value="Public Sub VerifyAccess ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void VerifyAccess();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="93470-129">Обеспечивает наличие у вызывающего потока доступ к этому <see cref="T:System.Windows.Threading.DispatcherObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93470-129">Enforces that the calling thread has access to this <see cref="T:System.Windows.Threading.DispatcherObject" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="93470-130">Только поток <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> был создан на может получать доступ к <xref:System.Windows.Threading.DispatcherObject>.</span><span class="sxs-lookup"><span data-stu-id="93470-130">Only the thread the <xref:System.Windows.Threading.DispatcherObject.Dispatcher%2A> was created on may access the <xref:System.Windows.Threading.DispatcherObject>.</span></span>  
  
 <span data-ttu-id="93470-131">Любой поток можно проверить наличие доступа к этому <xref:System.Windows.Threading.DispatcherObject>.</span><span class="sxs-lookup"><span data-stu-id="93470-131">Any thread can check to see whether it has access to this <xref:System.Windows.Threading.DispatcherObject>.</span></span>  
  
 <span data-ttu-id="93470-132">Разница между <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> и <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> является то, что <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> возвращает логическое значение, указывающее, имеет ли вызывающий поток доступ к этому <xref:System.Windows.Threading.DispatcherObject> и <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> вызывает исключение, если вызывающий поток не имеет доступа к Это <xref:System.Windows.Threading.DispatcherObject>.</span><span class="sxs-lookup"><span data-stu-id="93470-132">The difference between <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> is that <xref:System.Windows.Threading.DispatcherObject.CheckAccess%2A> returns a Boolean that specifies whether the calling thread has access to this <xref:System.Windows.Threading.DispatcherObject> and <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> throws an exception if the calling thread does not have access to the this <xref:System.Windows.Threading.DispatcherObject>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="93470-133">В следующем примере используется <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> для определения, имеет ли поток доступ к потоку, <xref:System.Windows.Controls.Button> был создан.</span><span class="sxs-lookup"><span data-stu-id="93470-133">The following example uses <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> to determine whether a thread has access to the thread that a <xref:System.Windows.Controls.Button> was created on.</span></span>  <span data-ttu-id="93470-134">Если вызывающий поток не имеет доступа, <xref:System.InvalidOperationException> возникает исключение.</span><span class="sxs-lookup"><span data-stu-id="93470-134">If the calling thread does not have access, an <xref:System.InvalidOperationException> is thrown.</span></span>  
  
 [!code-csharp[DispatcherObjectAccessSample#DispatcherObjectAccessVerifyAccess](~/samples/snippets/csharp/VS_Snippets_Wpf/DispatcherObjectAccessSample/CSharp/Window1.xaml.cs#dispatcherobjectaccessverifyaccess)]
 [!code-vb[DispatcherObjectAccessSample#DispatcherObjectAccessVerifyAccess](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DispatcherObjectAccessSample/visualbasic/window1.xaml.vb#dispatcherobjectaccessverifyaccess)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="93470-135">вызывающий поток не имеет доступа к этому <see cref="T:System.Windows.Threading.DispatcherObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="93470-135">the calling thread does not have access to this <see cref="T:System.Windows.Threading.DispatcherObject" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>