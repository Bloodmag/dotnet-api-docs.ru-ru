<Type Name="CoerceValueCallback" FullName="System.Windows.CoerceValueCallback">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="edddfb39d197bb5c7d9ebb6e4c366a99eae21935" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30674548" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate object CoerceValueCallback(DependencyObject d, object baseValue);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed CoerceValueCallback extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Windows.CoerceValueCallback" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function CoerceValueCallback(d As DependencyObject, baseValue As Object) As Object " />
  <TypeSignature Language="C++ CLI" Value="public delegate System::Object ^ CoerceValueCallback(DependencyObject ^ d, System::Object ^ baseValue);" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="d" Type="System.Windows.DependencyObject" />
    <Parameter Name="baseValue" Type="System.Object" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Object</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="d">Объект, содержащий свойство. При вызове ответа, система свойств передает это значение.</param>
    <param name="baseValue">Новое значение свойства до применения операции запрета изменения значения.</param>
    <summary>Предоставляет шаблон для метода, вызываемого при оценке значения свойства зависимостей и запросе запрета изменения значения.</summary>
    <returns>Запрещенное значение (с соответствующим типом).</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 На основе обратных вызовов <xref:System.Windows.CoerceValueCallback> можно назначить свойству зависимостей через несколькими способами. Каждый из этих способов необходимо сначала создать объект метаданных свойств (<xref:System.Windows.PropertyMetadata>, или производного класса, такие как <xref:System.Windows.FrameworkPropertyMetadata>). Создать объект метаданных, с помощью подписи конструктор, принимающий `coerceValueCallback` параметра и присвоить этому параметру обработчика ответа. Или создать метаданные любого подписями и набор <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A> свойство до помещения метаданных используется.  
  
 Если у вас есть эти метаданные, можно:  
  
-   Определить новые свойства зависимостей для нового класса с помощью либо подпись <xref:System.Windows.DependencyProperty.Register%2A>, предоставляя метаданные как `typeMetadata` значение.  
  
-   Переопределить метаданные (вызов <xref:System.Windows.DependencyProperty.OverrideMetadata%28System.Type%2CSystem.Windows.PropertyMetadata%29>) для существующего свойства зависимости, при наследовании от класса, которому принадлежит свойство зависимостей.  
  
-   Добавление существующего свойства зависимостей в новую <xref:System.Windows.DependencyObject> класс с помощью новых метаданных путем вызова <xref:System.Windows.DependencyProperty.AddOwner%28System.Type%2CSystem.Windows.PropertyMetadata%29>.  
  
 Реализации данного ответа следует проверить значение `baseValue` и определить на основе значения или тип ли это значение, которое необходимо дополнительно привести.  
  
 <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A> Зависимость свойство вызывается каждый раз, когда в системе свойств или любой вызывающий объект вызывает <xref:System.Windows.DependencyObject.CoerceValue%2A> на <xref:System.Windows.DependencyObject> экземпляра с указанием идентификатора этого свойства как `dp`.  
  
 Изменения значения свойства может поступать любого из членов в системе свойств. Это включает стили, изначальную, триггеры, наследование значения свойства и локальное значение параметра.  
  
 Обычно следует избегать, указание более одного <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A> для любого заданного свойства зависимостей (переопределения или добавления с новыми метаданными для свойства зависимостей, уже <xref:System.Windows.PropertyMetadata.CoerceValueCallback%2A>). Только одна из обратных вызовов будет действовать. Действующим ответом будет тем, которое было применено к наиболее производного класса в наследовании по сравнению с <xref:System.Windows.DependencyObject> вызывающего объекта. При переопределении метаданных, заменяются других обратных вызовах, связанные с метаданными для свойства зависимостей, существовавшего выше в иерархии владельцев.  
  
   
  
## Examples  
 Следующий пример содержит реализацию данного ответа для запрета хранимого значения свойства зависимостей, в зависимости от других входных данных, таких как значение другого свойства. В этом случае проверяет обратный вызов ли `ShirtType` свойства соответствует типу элемента, содержащего кнопки; в этом случае он устанавливает начальный цвет по умолчанию для `ButtonColor`, если тип рубашка нет кнопок, приводит `ButtonColor` значение обратно в начальное значение, которое вызывает [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] (не показано) для удаления из эффективных выборов выпадающего меню.  
  
 [!code-csharp[DPCustom#CoerceValueCallback](~/samples/snippets/csharp/VS_Snippets_Wpf/DPCustom/CSharp/default.xaml.cs#coercevaluecallback)]
 [!code-vb[DPCustom#CoerceValueCallback](~/samples/snippets/visualbasic/VS_Snippets_Wpf/DPCustom/visualbasic/default.xaml.vb#coercevaluecallback)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyProperty" />
  </Docs>
</Type>