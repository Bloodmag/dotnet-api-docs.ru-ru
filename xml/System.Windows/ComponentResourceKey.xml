<Type Name="ComponentResourceKey" FullName="System.Windows.ComponentResourceKey">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="4ab025443f3717a6f64e96df27f296ecc9101058" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30668758" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ComponentResourceKey : System.Windows.ResourceKey" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ComponentResourceKey extends System.Windows.ResourceKey" />
  <TypeSignature Language="DocId" Value="T:System.Windows.ComponentResourceKey" />
  <TypeSignature Language="VB.NET" Value="Public Class ComponentResourceKey&#xA;Inherits ResourceKey" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComponentResourceKey : System::Windows::ResourceKey" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.ResourceKey</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.ComponentResourceKeyConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Определяет или создает ссылки на ресурсные ключи, опираясь на имена класса во внешних ассемблированиях, а также дополнительный идентификатор.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] сведения см. в разделе [расширение разметки ComponentResourceKey](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md).  
  
 Этот класс реализует тип объекта, который используется для создания ключей, которые основаны на типах в сборках, а также идентификатор. Так, как определить, или ссылка на тип, необходимо запросить определенный <xref:System.Windows.ResourceDictionary>, и могут иметь более одного набора ресурсов в сборке, каждый дифференцированных по типу их <xref:System.Windows.ComponentResourceKey>.  
  
 Существует два способа определения <xref:System.Windows.ComponentResourceKey>.  
  
 Если требуется ключ становятся доступны, можно определить статическое свойство кода класса элемента управления, возвращающий <xref:System.Windows.ComponentResourceKey>, созданный с <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> , существует в сборке внешний ресурс и <xref:System.Windows.ComponentResourceKey.ResourceId%2A>. Ключ может использоваться для определения альтернативных стилей по умолчанию для элементов управления в сборке, путем переключения настраиваемым исходной внешнего ресурса сборки. Можно также определить часть ресурса с именем внутри большего стиля элемента управления или шаблона для предоставления точку входа настройки. Это особенно полезно при определении словаря ресурсов темы для элемента управления.  
  
 Можно также использовать [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] [расширение разметки ComponentResourceKey](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md) в подробном синтаксисе непосредственно для создания свободные экземпляра ключа. Это полезно, если требуется объявить закрытый ресурсы из сборки, которые могут быть менее обнаружены для настройки.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.ComponentResourceKey" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentResourceKey ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComponentResourceKey();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.ComponentResourceKey" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Конструктор по умолчанию обычно не используется, так как <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> значение и <xref:System.Windows.ComponentResourceKey.ResourceId%2A> значение необходимы для правильной инициализации. Существует конструктор по умолчанию, главным образом для поддержки [расширение разметки ComponentResourceKey](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md) использование XAML в виде именованного параметра.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ComponentResourceKey (Type typeInTargetAssembly, object resourceId);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type typeInTargetAssembly, object resourceId) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.#ctor(System.Type,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeInTargetAssembly As Type, resourceId As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ComponentResourceKey(Type ^ typeInTargetAssembly, System::Object ^ resourceId);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeInTargetAssembly" Type="System.Type" />
        <Parameter Name="resourceId" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="typeInTargetAssembly">Тип, определяющий ключ ресурса.</param>
        <param name="resourceId">Уникальный идентификатор, используемый для отличия данного ключа <see cref="T:System.Windows.ComponentResourceKey" /> от других ключей, связанных с типом <c>typeInTargetAssembly</c>.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Windows.ComponentResourceKey" /> типом <see cref="T:System.Type" />, определяющим ключ, и объектом, используемым в качестве дополнительного идентификатора ресурса.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор существует для двух сценариев, где первый сценарий является наиболее важным:  
  
-   Поддерживает создание <xref:System.Windows.ComponentResourceKey> , затем предоставляется как открытое статическое поле для класса пользовательского элемента управления. Это упрощает управление доступом к собственным определенным ресурсам в шаблоне с помощью `{x:Static}` варианты использования для значений свойств шаблона.  
  
-   Поддерживает [расширение разметки ComponentResourceKey](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md) использование XAML в виде позиционного параметра, который является одним из способов для третьими сторонами, которые ссылаются на ресурсов компонента.  
  
   
  
## Examples  
 В следующем примере создается <xref:System.Windows.ComponentResourceKey> , доступного как статический ключ класса элемента управления, предоставляющего точку входа настройки стиля.  
  
 [!code-csharp[CorePseudocode#CRKCode](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#crkcode)]
 [!code-vb[CorePseudocode#CRKCode](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#crkcode)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Assembly">
      <MemberSignature Language="C#" Value="public override System.Reflection.Assembly Assembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly Assembly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ComponentResourceKey.Assembly" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Assembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Assembly ^ Assembly { System::Reflection::Assembly ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает объект ассемблирования, указывающий на словарь ассемблирования, в котором следует значение, связанное с этим ключом.</summary>
        <value>Возвращает ассемблирование как отражаемый класс.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object o);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object o) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (o As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ o);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="o" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="o">Объект для сравнения с текущим <see cref="T:System.Windows.ComponentResourceKey" />.</param>
        <summary>Определяет, равен ли указанный объект текущему <see cref="T:System.Windows.ComponentResourceKey" />.</summary>
        <returns>
          Значение <see langword="true" />, если объекты равны, в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Два ключа равны, если они имеют одинаковые значения для их немедленного можно задать свойства (<xref:System.Windows.ComponentResourceKey.ResourceId%2A>, <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A>).  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает хэш-код для объекта <see cref="T:System.Windows.ComponentResourceKey" />.</summary>
        <returns>32-разрядное целое значение со знаком.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ResourceId">
      <MemberSignature Language="C#" Value="public object ResourceId { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ResourceId" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ComponentResourceKey.ResourceId" />
      <MemberSignature Language="VB.NET" Value="Public Property ResourceId As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ResourceId { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает уникальный идентификатор, используемый для отличия данного ключа от других ключей, связанных с этим типом.</summary>
        <value>Уникальный идентификатор. Обычно это строка.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] сведения см. в разделе [расширение разметки ComponentResourceKey](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md).  
  
 Как правило, строка, используемая для <xref:System.Windows.ComponentResourceKey.ResourceId%2A> соответствует значение [Грамматика XamlName](~/docs/framework/xaml-services/xamlname-grammar.md).  
  
## Examples  
 В следующем примере показано, как использовать <xref:System.Windows.ComponentResourceKey.ResourceId%2A> для различения этот ключ от других связанных с этим типом.  
  
 [!code-xaml[ColorPicker_snip#SliderStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/ColorPicker_snip/CSharp/ColorPickerLib/Themes/generic.xaml#sliderstyle)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.ComponentResourceKey.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает строковое представление <see cref="T:System.Windows.ComponentResourceKey" />.</summary>
        <returns>Строковое представление.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeInTargetAssembly">
      <MemberSignature Language="C#" Value="public Type TypeInTargetAssembly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type TypeInTargetAssembly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.ComponentResourceKey.TypeInTargetAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeInTargetAssembly As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ TypeInTargetAssembly { Type ^ get(); void set(Type ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает объект <see cref="T:System.Type" />, который определяет ключ ресурса.</summary>
        <value>Тип, определяющий ключ ресурса.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Для [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] сведения см. в разделе [расширение разметки ComponentResourceKey](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md).  
  
 <xref:System.Windows.ComponentResourceKey> Используется пользовательские компоненты для определения ключи для ресурсов, которые доступны из внешней сборки, основываясь на целевые сборки, содержащей тип. Настраиваемые компоненты часто определяют новые типы, которые должны содержаться в сборку, где находится ресурс. Обычно эти типы не имеют другие реализации, типы существуют только для удовлетворения требований подстановки <xref:System.Windows.ComponentResourceKey>.  
  
## Examples  
 В следующем примере показан способ определения <xref:System.Windows.ComponentResourceKey> включая <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> и <xref:System.Windows.ComponentResourceKey.ResourceId%2A> с помощью [расширение разметки ComponentResourceKey](~/docs/framework/wpf/advanced/componentresourcekey-markup-extension.md). Этот ресурс можно разместить во внешней сборке и обращаются использования ключа, который запрашивает ресурс с помощью аналогичных <xref:System.Windows.ComponentResourceKey> в запросе.  
  
 [!code-xaml[ColorPicker_snip#SliderStyle](~/samples/snippets/csharp/VS_Snippets_Wpf/ColorPicker_snip/CSharp/ColorPickerLib/Themes/generic.xaml#sliderstyle)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>