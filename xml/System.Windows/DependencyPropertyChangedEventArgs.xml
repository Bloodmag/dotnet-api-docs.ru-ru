<Type Name="DependencyPropertyChangedEventArgs" FullName="System.Windows.DependencyPropertyChangedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="840f1b77f0e3528c43e12653ee199d6199ef1109" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30678488" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct DependencyPropertyChangedEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi sealed beforefieldinit DependencyPropertyChangedEventArgs extends System.ValueType" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DependencyPropertyChangedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Structure DependencyPropertyChangedEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public value class DependencyPropertyChangedEventArgs" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="27493-101">Предоставляет данные для различных событий изменения свойств.</span>
      <span class="sxs-lookup">
        <span data-stu-id="27493-101">Provides data for various property changed events.</span>
      </span>
      <span data-ttu-id="27493-102">Обычно такие события сообщают об изменениях действительных значений в свойстве зависимостей только для чтения.</span>
      <span class="sxs-lookup">
        <span data-stu-id="27493-102">Typically these events report effective value changes in the value of a read-only dependency property.</span>
      </span>
      <span data-ttu-id="27493-103">Другой вариант использования — в реализации <see cref="T:System.Windows.PropertyChangedCallback" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="27493-103">Another usage is as part of a <see cref="T:System.Windows.PropertyChangedCallback" /> implementation.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27493-104">События, использующие <xref:System.Windows.DependencyPropertyChangedEventArgs> класс данных события и <xref:System.Windows.DependencyPropertyChangedEventHandler> реализации методов для обработчиков, в целом следовать шаблону именования `Is*Changed`и обычно реализуется как [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] события без <xref:System.Windows.RoutedEvent> резервное копирование (они не являются перенаправленных событий).</span><span class="sxs-lookup"><span data-stu-id="27493-104">The events that use the <xref:System.Windows.DependencyPropertyChangedEventArgs> class for event data, and the <xref:System.Windows.DependencyPropertyChangedEventHandler> method implementations for handlers, generally follow the naming pattern `Is*Changed`, and are generally implemented as [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] events without <xref:System.Windows.RoutedEvent> backing (they are not routed events).</span></span> <span data-ttu-id="27493-105">Один из классов умение работать с методами, которые «обработки». в противном случае причинам событий, сообщающих изменения состояния посредством изменения свойства, такие как <xref:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged%2A?displayProperty=nameWithType>, также использовать <xref:System.Windows.DependencyPropertyChangedEventArgs> класс данных события.</span><span class="sxs-lookup"><span data-stu-id="27493-105">Some class handling methods that "handle" otherwise unexposed events that report a state change through a property change, such as <xref:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged%2A?displayProperty=nameWithType>, also use the <xref:System.Windows.DependencyPropertyChangedEventArgs> class for event data.</span></span>  
  
 <span data-ttu-id="27493-106">Сценарий для <xref:System.Windows.PropertyChangedCallback> заключается в использовании аргументы для отчета старое и новое значения, полученные из вычисление системы свойств свойства.</span><span class="sxs-lookup"><span data-stu-id="27493-106">The scenario for <xref:System.Windows.PropertyChangedCallback> is to use the arguments to report old and new values that come from the property system evaluation of the property.</span></span> <span data-ttu-id="27493-107">Обратный вызов, который обрабатывает старых и новых значений может выбрать специальную обработку в зависимости от этих значений, например, отказ от реакции на изменения значений, признанные несущественными.</span><span class="sxs-lookup"><span data-stu-id="27493-107">A callback that processes old and new values might choose special handling depending on these values, such as choosing to not respond to value changes that are deemed insignificant.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27493-108">В следующем примере используется <xref:System.Windows.DependencyPropertyChangedEventArgs> класса в контексте <xref:System.Windows.PropertyChangedCallback> для определенного свойства пользовательского класса, который также определяет события.</span><span class="sxs-lookup"><span data-stu-id="27493-108">The following example uses the <xref:System.Windows.DependencyPropertyChangedEventArgs> class in the context of a <xref:System.Windows.PropertyChangedCallback> for a particular property of a custom class that also defines events.</span></span> <span data-ttu-id="27493-109">Функция обратного вызова принимает результаты старых и новых значений из системы свойств, как взаимодействуют с <xref:System.Windows.DependencyPropertyChangedEventArgs>и их в класс аргументов события различных переупаковывает <xref:System.Windows.RoutedPropertyChangedEventArgs%601>.</span><span class="sxs-lookup"><span data-stu-id="27493-109">The callback takes the results of old and new values from the property system as communicated by <xref:System.Windows.DependencyPropertyChangedEventArgs>, and repackages these into a different events arguments class <xref:System.Windows.RoutedPropertyChangedEventArgs%601>.</span></span> <span data-ttu-id="27493-110">Новые аргументы затем используются как данные для события «ValueChanged» определяются и вызываться пользовательского класса.</span><span class="sxs-lookup"><span data-stu-id="27493-110">The new arguments are then used as the data for a "ValueChanged" event defined by and raised by the custom class.</span></span>  
  
 [!code-csharp[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/samples/snippets/csharp/VS_Snippets_Wpf/CustomControlNumericUpDownOneProject/CSharp/NumericUpDown.cs#dependencypropertychangedeventargs)]
 [!code-vb[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CustomControlNumericUpDownOneProject/visualbasic/numericupdown.vb#dependencypropertychangedeventargs)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyPropertyChangedEventHandler" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public DependencyPropertyChangedEventArgs (System.Windows.DependencyProperty property, object oldValue, object newValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Windows.DependencyProperty property, object oldValue, object newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyChangedEventArgs.#ctor(System.Windows.DependencyProperty,System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (property As DependencyProperty, oldValue As Object, newValue As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; DependencyPropertyChangedEventArgs(System::Windows::DependencyProperty ^ property, System::Object ^ oldValue, System::Object ^ newValue);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="property" Type="System.Windows.DependencyProperty" />
        <Parameter Name="oldValue" Type="System.Object" />
        <Parameter Name="newValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="property">
          <span data-ttu-id="27493-111">Идентификатор для измененного свойства зависимостей.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27493-111">The identifier for the dependency property that changed.</span>
          </span>
        </param>
        <param name="oldValue">
          <span data-ttu-id="27493-112">Значение свойства до сообщения об изменении соответствующим событием или изменением состояния.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27493-112">The value of the property before the change reported by the relevant event or state change.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="27493-113">Значение свойства после сообщения об изменении соответствующим событием или изменением состояния.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27493-113">The value of the property after the change reported by the relevant event or state change.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27493-114">Инициализирует новый экземпляр класса <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27493-114">Initializes a new instance of the <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27493-115">Средства реализации пользовательских событий, сообщающих об изменениях свойств зависимостей следует использовать этот конструктор для заполнения данных события со сведениями об изменении при возникновении события.</span><span class="sxs-lookup"><span data-stu-id="27493-115">Implementers of custom events that report dependency property changes should use this constructor for populating the event data with the specifics of the change when the event is raised.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="27493-116">Сообщает, эквивалентен ли указанный объект текущему <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27493-116">Returns whether the provided object is equivalent to the current <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="27493-117">Объект для сравнения с текущим объектом <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27493-117">The object to compare to the current <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27493-118">Определяет, эквивалентен ли указанный объект текущему <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27493-118">Determines whether the provided object is equivalent to the current <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27493-119">
            <see langword="true" />, если указанный объект эквивалентен текущему <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27493-119">
              <see langword="true" /> if the provided object is equivalent to the current <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27493-120">Данная реализация полагается на эквивалентность значений всех свойств, включая внутренние свойства.</span><span class="sxs-lookup"><span data-stu-id="27493-120">This implementation relies on value equivalence of all properties, including internal properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Windows.DependencyPropertyChangedEventArgs args);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Equals(valuetype System.Windows.DependencyPropertyChangedEventArgs args) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (args As DependencyPropertyChangedEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Equals(System::Windows::DependencyPropertyChangedEventArgs args);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="args" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="args">
          <span data-ttu-id="27493-121">
            <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> для сравнения с текущим <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27493-121">The <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> to compare to the current <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /></span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27493-122">Определяет, эквивалентен ли указанный <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> текущему <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27493-122">Determines whether the provided <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> is equivalent to the current <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27493-123">
            <see langword="true" />, если указанный <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> эквивалентен текущему <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27493-123">
              <see langword="true" /> if the provided <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> is equivalent to the current <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27493-124">Данная реализация полагается на эквивалентность значений всех свойств, включая внутренние свойства.</span><span class="sxs-lookup"><span data-stu-id="27493-124">This implementation relies on value equivalence of all properties, including internal properties.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyChangedEventArgs.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="27493-125">Возвращает хэш-код для данного объекта <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27493-125">Gets a hash code  for this <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27493-126">Подписанный хэш-код в виде 32-разрядного целого числа.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27493-126">A signed 32-bit integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NewValue">
      <MemberSignature Language="C#" Value="public object NewValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object NewValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyPropertyChangedEventArgs.NewValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NewValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ NewValue { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27493-127">Возвращает значение свойства после изменения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27493-127">Gets the value of the property after the change.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27493-128">Значение свойства после изменения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27493-128">The property value after the change.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27493-129">Тип указанного значения всегда должен быть приводимым к типу сообщаемого свойства зависимостей.</span><span class="sxs-lookup"><span data-stu-id="27493-129">The type of the value provided should always be castable to the type of the dependency property being reported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27493-130">В следующем примере используется <xref:System.Windows.DependencyPropertyChangedEventArgs> класса в контексте <xref:System.Windows.PropertyChangedCallback> для определенного свойства пользовательского класса, который также определяет события.</span><span class="sxs-lookup"><span data-stu-id="27493-130">The following example uses the <xref:System.Windows.DependencyPropertyChangedEventArgs> class in the context of a <xref:System.Windows.PropertyChangedCallback> for a particular property of a custom class that also defines events.</span></span> <span data-ttu-id="27493-131">Функция обратного вызова принимает результаты старых и новых значений из системы свойств, как взаимодействуют с <xref:System.Windows.DependencyPropertyChangedEventArgs>и их в класс аргументов события различных переупаковывает <xref:System.Windows.RoutedPropertyChangedEventArgs%601>.</span><span class="sxs-lookup"><span data-stu-id="27493-131">The callback takes the results of old and new values from the property system as communicated by <xref:System.Windows.DependencyPropertyChangedEventArgs>, and repackages these into a different events arguments class <xref:System.Windows.RoutedPropertyChangedEventArgs%601>.</span></span> <span data-ttu-id="27493-132">Новые аргументы затем используются как данные для события «ValueChanged» определяются и вызываться пользовательского класса.</span><span class="sxs-lookup"><span data-stu-id="27493-132">The new arguments are then used as the data for a "ValueChanged" event defined by and raised by the custom class.</span></span>  
  
 [!code-csharp[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/samples/snippets/csharp/VS_Snippets_Wpf/CustomControlNumericUpDownOneProject/CSharp/NumericUpDown.cs#dependencypropertychangedeventargs)]
 [!code-vb[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CustomControlNumericUpDownOneProject/visualbasic/numericupdown.vb#dependencypropertychangedeventargs)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OldValue">
      <MemberSignature Language="C#" Value="public object OldValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object OldValue" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyPropertyChangedEventArgs.OldValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OldValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ OldValue { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27493-133">Возвращает значение свойства перед изменением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27493-133">Gets the value of the property before the change.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27493-134">Значение свойства перед изменением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27493-134">The property value before the change.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27493-135">Тип указанного значения всегда должен быть приводимым к типу сообщаемого свойства зависимостей.</span><span class="sxs-lookup"><span data-stu-id="27493-135">The type of the value provided should always be castable to the type of the dependency property being reported.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="27493-136">В следующем примере используется <xref:System.Windows.DependencyPropertyChangedEventArgs> класса в контексте <xref:System.Windows.PropertyChangedCallback> для определенного свойства пользовательского класса, который также определяет события.</span><span class="sxs-lookup"><span data-stu-id="27493-136">The following example uses the <xref:System.Windows.DependencyPropertyChangedEventArgs> class in the context of a <xref:System.Windows.PropertyChangedCallback> for a particular property of a custom class that also defines events.</span></span> <span data-ttu-id="27493-137">Функция обратного вызова принимает результаты старых и новых значений из системы свойств, как взаимодействуют с <xref:System.Windows.DependencyPropertyChangedEventArgs>и их в класс аргументов события различных переупаковывает <xref:System.Windows.RoutedPropertyChangedEventArgs%601>.</span><span class="sxs-lookup"><span data-stu-id="27493-137">The callback takes the results of old and new values from the property system as communicated by <xref:System.Windows.DependencyPropertyChangedEventArgs>, and repackages these into a different events arguments class <xref:System.Windows.RoutedPropertyChangedEventArgs%601>.</span></span> <span data-ttu-id="27493-138">Новые аргументы затем используются как данные для события «ValueChanged» определяются и вызываться пользовательского класса.</span><span class="sxs-lookup"><span data-stu-id="27493-138">The new arguments are then used as the data for a "ValueChanged" event defined by and raised by the custom class.</span></span>  
  
 [!code-csharp[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/samples/snippets/csharp/VS_Snippets_Wpf/CustomControlNumericUpDownOneProject/CSharp/NumericUpDown.cs#dependencypropertychangedeventargs)]
 [!code-vb[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CustomControlNumericUpDownOneProject/visualbasic/numericupdown.vb#dependencypropertychangedeventargs)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Windows.DependencyPropertyChangedEventArgs left, System.Windows.DependencyPropertyChangedEventArgs right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(valuetype System.Windows.DependencyPropertyChangedEventArgs left, valuetype System.Windows.DependencyPropertyChangedEventArgs right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyChangedEventArgs.op_Equality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (left As DependencyPropertyChangedEventArgs, right As DependencyPropertyChangedEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Windows::DependencyPropertyChangedEventArgs left, System::Windows::DependencyPropertyChangedEventArgs right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.DependencyPropertyChangedEventArgs" />
        <Parameter Name="right" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="27493-139">Первый экземпляр <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> для сравнения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27493-139">The first <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="27493-140">Второй экземпляр <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> для сравнения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27493-140">The second <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27493-141">Определяет, совпадают ли значения двух указанных объектов <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27493-141">Determines whether two specified <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> objects have the same value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27493-142">
            <see langword="true" />, если два экземпляра <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> эквивалентны; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27493-142">
              <see langword="true" /> if the two <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> instances are equivalent; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27493-143">Реализация использует ту же логику, <xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="27493-143">The implementation uses the same logic as <xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Windows.DependencyPropertyChangedEventArgs left, System.Windows.DependencyPropertyChangedEventArgs right);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(valuetype System.Windows.DependencyPropertyChangedEventArgs left, valuetype System.Windows.DependencyPropertyChangedEventArgs right) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyChangedEventArgs.op_Inequality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (left As DependencyPropertyChangedEventArgs, right As DependencyPropertyChangedEventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Windows::DependencyPropertyChangedEventArgs left, System::Windows::DependencyPropertyChangedEventArgs right);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="left" Type="System.Windows.DependencyPropertyChangedEventArgs" />
        <Parameter Name="right" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="left">
          <span data-ttu-id="27493-144">Первый экземпляр <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> для сравнения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27493-144">The first <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> to compare.</span>
          </span>
        </param>
        <param name="right">
          <span data-ttu-id="27493-145">Второй экземпляр <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> для сравнения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27493-145">The second <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="27493-146">Определяет, различаются ли два заданных объекта <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27493-146">Determines whether two specified <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> objects are different.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="27493-147">
            <see langword="true" />, если два экземпляра <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> различаются; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27493-147">
              <see langword="true" /> if the two <see cref="T:System.Windows.DependencyPropertyChangedEventArgs" /> instances are different; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27493-148">Реализация возвращает инверсию ту же логику, <xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>.</span><span class="sxs-lookup"><span data-stu-id="27493-148">The implementation returns the negation of the same logic as <xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Property">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyProperty Property { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyProperty Property" />
      <MemberSignature Language="DocId" Value="P:System.Windows.DependencyPropertyChangedEventArgs.Property" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Property As DependencyProperty" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyProperty ^ Property { System::Windows::DependencyProperty ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="27493-149">Возвращает идентификатор свойства зависимостей, в котором произошло изменение значения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27493-149">Gets the identifier for the dependency property where the value change occurred.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="27493-150">Поле идентификатора свойства зависимостей, в котором произошло изменение значения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="27493-150">The identifier field of the dependency property where the value change occurred.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="27493-151">Это свойство имеет значение, если в общий <xref:System.Windows.PropertyChangedCallback> , зарегистрированный для нескольких свойств, и это необходимо для однозначного определения, какие изменения свойства обратный вызов.</span><span class="sxs-lookup"><span data-stu-id="27493-151">This property is relevant if used within a common <xref:System.Windows.PropertyChangedCallback> that is registered for several properties, and it is necessary to disambiguate which property change invoked the callback.</span></span> <span data-ttu-id="27493-152"><xref:System.Windows.DependencyPropertyChangedEventArgs.Property%2A> Неприменимо обычно для вызова событий, так как обычно в соответствие 1:1 свойства и события изменения свойства отчета.</span><span class="sxs-lookup"><span data-stu-id="27493-152"><xref:System.Windows.DependencyPropertyChangedEventArgs.Property%2A> is not typically relevant for raising events, because there is usually a 1:1 correspondence between properties and events that report the property change.</span></span> <span data-ttu-id="27493-153">Событие, которое было вызвано является указанием, из которых изменены свойства.</span><span class="sxs-lookup"><span data-stu-id="27493-153">The event that was raised is itself the indication of which property changed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>