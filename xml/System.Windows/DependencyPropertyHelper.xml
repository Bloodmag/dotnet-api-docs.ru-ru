<Type Name="DependencyPropertyHelper" FullName="System.Windows.DependencyPropertyHelper">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c73b6283444b4ebfb43805764cd805e9ed62516a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30675318" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class DependencyPropertyHelper" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed beforefieldinit DependencyPropertyHelper extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.DependencyPropertyHelper" />
  <TypeSignature Language="VB.NET" Value="Public Class DependencyPropertyHelper" />
  <TypeSignature Language="C++ CLI" Value="public ref class DependencyPropertyHelper abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет один вспомогательный метод (<see cref="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />), который сообщает источник свойства системы для действительного значения свойства зависимостей.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] Системы свойств является довольно сложной задачей и зависит от рационализации значений, потенциально поступают из различных источников в соответствии с установленным приоритетом определения значений. Так как эти источники потенциально поступают из кода во время выполнения, компилированной разметки или даже из параметров пользователя во время выполнения, может быть полезно знать точно, какой участник в системе значений свойств зависимостей установлено значение при вызове <xref:System.Windows.DependencyObject.GetValue%2A>во время выполнения для этого свойства. Если значение получено из другого источника, чем доступ, может потребоваться настройка некоторых аспектов приложения. Источник значения могут быть стиля, темы, локальное значение, анимацию, привязку или значение на основе времени выполнения, например системные настройки посредством тем или системных ресурсов. Дополнительные сведения см. в разделе [Приоритет значений свойств зависимостей](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md).  
  
 Метаданные свойства являются другого механизма, в общем случае отчеты на свойство вместо свойства объекта, определенного экземпляра. Метаданные свойства поиска, вызвав <xref:System.Windows.DependencyProperty.GetMetadata%2A> и проверив возвращаемый <xref:System.Windows.PropertyMetadata> (или один из нескольких возможных производных классов, возвращенные метаданные приводимым к).  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="GetValueSource">
      <MemberSignature Language="C#" Value="public static System.Windows.ValueSource GetValueSource (System.Windows.DependencyObject dependencyObject, System.Windows.DependencyProperty dependencyProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.ValueSource GetValueSource(class System.Windows.DependencyObject dependencyObject, class System.Windows.DependencyProperty dependencyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyHelper.GetValueSource(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::ValueSource GetValueSource(System::Windows::DependencyObject ^ dependencyObject, System::Windows::DependencyProperty ^ dependencyProperty);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.ValueSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
        <Parameter Name="dependencyProperty" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">Элемент, содержащий <c>dependencyProperty</c>, сведения для которого требуется сообщить.</param>
        <param name="dependencyProperty">Идентификатор свойства зависимостей, сведения для которого требуется сообщить.</param>
        <summary>Возвращает структуру, сообщающую различные метаданные и характеристики системы свойств указанного свойства зависимостей в конкретном <see cref="T:System.Windows.DependencyObject" />.</summary>
        <returns>Структура <see cref="T:System.Windows.ValueSource" />, сообщающая определенную информацию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод следует вызывать в контексте, таким образом, что последние участники определения значения свойств способны воздействовать на свойство. Для экземпляра привязки может отсутствовать в свойство, пока загружаются все элементы участника в дереве элементов и асинхронная привязка распространяется и подключен объект источника привязки. Аналогичным образом должны быть доступны ресурсы, включая все необходимые тематических словарей.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.ValueSource" />
      </Docs>
    </Member>
    <Member MemberName="IsTemplatedValueDynamic">
      <MemberSignature Language="C#" Value="public static bool IsTemplatedValueDynamic (System.Windows.DependencyObject elementInTemplate, System.Windows.DependencyProperty dependencyProperty);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsTemplatedValueDynamic(class System.Windows.DependencyObject elementInTemplate, class System.Windows.DependencyProperty dependencyProperty) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.DependencyPropertyHelper.IsTemplatedValueDynamic(System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsTemplatedValueDynamic(System::Windows::DependencyObject ^ elementInTemplate, System::Windows::DependencyProperty ^ dependencyProperty);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementInTemplate" Type="System.Windows.DependencyObject" />
        <Parameter Name="dependencyProperty" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="elementInTemplate">Элемент, который относится к экземпляру шаблона.</param>
        <param name="dependencyProperty">Свойство зависимостей. </param>
        <summary>Указывает, относится ли указанный элемент к экземпляру шаблона, определяющего значение для указанного свойства, которое может изменяться во время выполнения на основе изменений в другом месте.</summary>
        <returns>
          <see langword="true" />, если <paramref name="elementInTemplate" /> относится к экземпляру шаблона, определяющего значение для указанного свойства, которое может изменяться во время выполнения на основе изменений в другом месте; в противном случае — <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
Примеры значений, которые могут измениться во время выполнения на основе изменений в другом месте являются значениями, заданными <xref:System.Windows.Data.Binding>, <xref:System.Windows.TemplateBindingExtension> и <xref:System.Windows.DynamicResourceExtension> объектов.

Этот метод предоставляет более подробные сведения в случаях, где значение <xref:System.Windows.ValueSource.BaseValueSource?displayProperty=nameWithType> свойство <xref:System.Windows.BaseValueSource.ParentTemplate?displayProperty=nameWithType>.
Сведения, в первую очередь использования средств диагностики.

 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>