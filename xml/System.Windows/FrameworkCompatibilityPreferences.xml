<Type Name="FrameworkCompatibilityPreferences" FullName="System.Windows.FrameworkCompatibilityPreferences">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="96b5f6d223d27a9319e881d0801ffc1c99a5100a" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30675728" />
  </Metadata>
  <TypeSignature Language="C#" Value="public static class FrameworkCompatibilityPreferences" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract sealed FrameworkCompatibilityPreferences extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.FrameworkCompatibilityPreferences" />
  <TypeSignature Language="VB.NET" Value="Public Class FrameworkCompatibilityPreferences" />
  <TypeSignature Language="C++ CLI" Value="public ref class FrameworkCompatibilityPreferences abstract sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Содержит свойства, которые определяют поведение приложения относительно возможностей WPF, которые находятся в сборке PresentationFramework.</summary>
    <remarks>To be added.</remarks>
  </Docs>
  <Members>
    <Member MemberName="AreInactiveSelectionHighlightBrushKeysSupported">
      <MemberSignature Language="C#" Value="public static bool AreInactiveSelectionHighlightBrushKeysSupported { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool AreInactiveSelectionHighlightBrushKeysSupported" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkCompatibilityPreferences.AreInactiveSelectionHighlightBrushKeysSupported" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property AreInactiveSelectionHighlightBrushKeysSupported As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool AreInactiveSelectionHighlightBrushKeysSupported { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, должно ли приложение использовать свойства <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightBrush" /> и <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightTextBrush" /> для цветов неактивных выделенных элементов.</summary>
        <value>
          <see langword="true" />, если приложение должно использовать свойства <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightBrush" /> и <see cref="P:System.Windows.SystemColors.InactiveSelectionHighlightTextBrush" /> для цветов неактивных выбранных элементов; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение по умолчанию этого свойства зависит от того, какая версия WPF, используемой для приложения.  Если приложение предназначено для WPF 4.0 или более ранних версиях значение по умолчанию — `false`.  Если приложение предназначено для WPF 4.5, значение по умолчанию — `true`.  Если это свойство используется для изменения поведения WPF, необходимо изменить значение свойства в начале времени существования приложения, например в конструкторе класса, который наследует от приложения.  После считывания значение невозможно изменить еще раз.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeepTextBoxDisplaySynchronizedWithTextProperty">
      <MemberSignature Language="C#" Value="public static bool KeepTextBoxDisplaySynchronizedWithTextProperty { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool KeepTextBoxDisplaySynchronizedWithTextProperty" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkCompatibilityPreferences.KeepTextBoxDisplaySynchronizedWithTextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property KeepTextBoxDisplaySynchronizedWithTextProperty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool KeepTextBoxDisplaySynchronizedWithTextProperty { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает или задает значение, указывающее, должен ли привязанный к данным <see cref="T:System.Windows.Controls.TextBox" /> отображать строку, идентичную значению источника его свойства <see cref="P:System.Windows.Controls.TextBox.Text" /></summary>
        <value>
          <see langword="true" />, если привязанный к данным <see cref="T:System.Windows.Controls.TextBox" /> должно отображать строку, идентичную значению источника его свойства <see cref="P:System.Windows.Controls.TextBox.Text" />; в противном случае — <see langword="false" /></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение по умолчанию этого свойства зависит от того, какая версия WPF, используемой для приложения.  Если приложение предназначено для WPF 4.0 или более ранних версиях значение по умолчанию — `false`.  Если приложение предназначено для WPF 4.5, значение по умолчанию — `true`.  Если это свойство используется для изменения поведения WPF, необходимо изменить значение свойства в начале времени существования приложения, например в конструкторе класса, который наследует от приложения.  После считывания значение невозможно изменить еще раз.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldThrowOnCopyOrCutFailure">
      <MemberSignature Language="C#" Value="public static bool ShouldThrowOnCopyOrCutFailure { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property bool ShouldThrowOnCopyOrCutFailure" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property ShouldThrowOnCopyOrCutFailure As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property bool ShouldThrowOnCopyOrCutFailure { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Возвращает или задает значение, указывающее, возникает ли в результате сбоя операции копирования или вырезания в экземпляре класса <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" /> исключение <see cref="T:System.Runtime.InteropServices.ExternalException" />.</summary>
        <value>
          Значение <see cref="T:System.Windows.Controls.Primitives.TextBoxBase" />, если в результате сбоя операции копирования или вырезания в экземпляре класса <see cref="T:System.Runtime.InteropServices.ExternalException" /> возникает исключение <see langword="true" />. В противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если происходит сбой операции с буфером обмена, такие как с **HRESULT 0x800401D0 (CLIPBRD_E_CANT_OPEN)** ошибки, соответствующий <xref:System.Runtime.InteropServices.ExternalException> (— это тип ExternalException) создается исключение.  
  
 Поскольку Win32 `OpenClipboard` API действует глобально, грамотно сконструированные приложения должны вызывать соответствующий `CloseClipboard` API сразу после завершения операции с буфером обмена. В противном случае другим приложениям, выполняемым в одном сеансе, будут недоступны для доступа к функции буфера обмена.  
  
 В WPF отказ доступа в буфер обмена обычно игнорируется без вмешательства пользователя. Тем не менее, можно выбрать приложения для получения `ExternalException` после сбоя, задав <xref:System.Windows.FrameworkCompatibilityPreferences.ShouldThrowOnCopyOrCutFailure%2A> флаг `true`. Тем не менее, предусмотренной получать исключения также требуется, чтобы приложение обработки <xref:System.Windows.Input.ApplicationCommands.Cut%2A> и <xref:System.Windows.Input.ApplicationCommands.Copy%2A> RoutedUICommands через <xref:System.Windows.Input.CommandBinding>, а затем применить эту привязку ко всем элементам управления TextBoxBase (<xref:System.Windows.Controls.TextBox> и <xref:System.Windows.Controls.RichTextBox>) в приложение. Приложение должно гарантировать, что оно работает с ExternalExceptions, возникающие в результате операции копирования и вырезания в обработчике Executed CommandBinding.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>