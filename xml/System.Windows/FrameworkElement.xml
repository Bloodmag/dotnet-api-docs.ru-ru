<Type Name="FrameworkElement" FullName="System.Windows.FrameworkElement">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="745b0ce290de608ffc78df21632cb138bfcb0c27" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39853773" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FrameworkElement : System.Windows.UIElement, System.ComponentModel.ISupportInitialize, System.Windows.IFrameworkInputElement, System.Windows.Markup.IQueryAmbient" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi FrameworkElement extends System.Windows.UIElement implements class System.ComponentModel.ISupportInitialize, class System.Windows.IFrameworkInputElement, class System.Windows.IInputElement, class System.Windows.Markup.IQueryAmbient" />
  <TypeSignature Language="DocId" Value="T:System.Windows.FrameworkElement" />
  <TypeSignature Language="VB.NET" Value="Public Class FrameworkElement&#xA;Inherits UIElement&#xA;Implements IFrameworkInputElement, IQueryAmbient, ISupportInitialize" />
  <TypeSignature Language="C++ CLI" Value="public ref class FrameworkElement : System::Windows::UIElement, System::ComponentModel::ISupportInitialize, System::Windows::IFrameworkInputElement, System::Windows::Markup::IQueryAmbient" />
  <TypeSignature Language="F#" Value="type FrameworkElement = class&#xA;    inherit UIElement&#xA;    interface IFrameworkInputElement&#xA;    interface IInputElement&#xA;    interface ISupportInitialize&#xA;    interface IQueryAmbient" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.UIElement</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ComponentModel.ISupportInitialize</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.IFrameworkInputElement</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.IQueryAmbient</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Windows.Markup.RuntimeNameProperty("Name")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Windows.Markup.UsableDuringInitialization(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Windows.Markup.XmlLangProperty("Language")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
      <AttributeName>System.Windows.StyleTypedProperty(Property="FocusVisualStyle", StyleTargetType=typeof(System.Windows.Controls.Control))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="26d05-101">Предоставляет набор свойств, событий и методов уровня платформы WPF для элементов Windows Presentation Foundation (WPF).</span>
      <span class="sxs-lookup">
        <span data-stu-id="26d05-101">Provides a WPF framework-level set of properties, events, and methods for Windows Presentation Foundation (WPF) elements.</span>
      </span>
      <span data-ttu-id="26d05-102">Этот класс представляет предоставленную реализацию уровня платформы WPF, созданную на базе API уровня ядра WPF, которые определяются <see cref="T:System.Windows.UIElement" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="26d05-102">This class represents the provided WPF framework-level implementation that is built on the WPF core-level APIs that are defined by <see cref="T:System.Windows.UIElement" />.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-103"><xref:System.Windows.FrameworkElement> Представляет точку соединения между классами элемента уровня платформы WPF и набора уровня ядра WPF <xref:System.Windows.UIElement> службами представления.</span><span class="sxs-lookup"><span data-stu-id="26d05-103"><xref:System.Windows.FrameworkElement> is the connecting point between WPF framework-level element classes and the WPF core-level set of <xref:System.Windows.UIElement> presentation services.</span></span> <span data-ttu-id="26d05-104">Дополнительные сведения об этих понятиях см. в разделе [архитектура WPF](~/docs/framework/wpf/advanced/wpf-architecture.md).</span><span class="sxs-lookup"><span data-stu-id="26d05-104">For more information about these concepts, see [WPF Architecture](~/docs/framework/wpf/advanced/wpf-architecture.md).</span></span>  
  
 <span data-ttu-id="26d05-105"><xref:System.Windows.FrameworkElement> расширяет <xref:System.Windows.UIElement> и добавляет следующие возможности:</span><span class="sxs-lookup"><span data-stu-id="26d05-105"><xref:System.Windows.FrameworkElement> extends <xref:System.Windows.UIElement> and adds the following capabilities:</span></span>  
  
-   <span data-ttu-id="26d05-106">**Определения системы макета**: <xref:System.Windows.FrameworkElement> предоставляет конкретные реализации уровня платформы WPF для некоторых методов, которые были определены как виртуальные элементы в <xref:System.Windows.UIElement>.</span><span class="sxs-lookup"><span data-stu-id="26d05-106">**Layout system definition**: <xref:System.Windows.FrameworkElement> provides specific WPF framework-level implementations for certain methods that were defined as virtual members in  <xref:System.Windows.UIElement>.</span></span> <span data-ttu-id="26d05-107">Прежде всего <xref:System.Windows.FrameworkElement> запечатывает определенных переопределения макета уровня ядра WPF, а вместо этого предоставляет эквивалента уровня инфраструктуры WPF, которые производные классы должны переопределить вместо этого.</span><span class="sxs-lookup"><span data-stu-id="26d05-107">Most notably, <xref:System.Windows.FrameworkElement> seals certain WPF core-level layout overrides, and instead provides a WPF framework-level equivalent that derived classes should override instead.</span></span> <span data-ttu-id="26d05-108">Например <xref:System.Windows.FrameworkElement> пломбы <xref:System.Windows.UIElement.ArrangeCore%2A> , но предоставляет <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-108">For example, <xref:System.Windows.FrameworkElement> seals <xref:System.Windows.UIElement.ArrangeCore%2A> but provides <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>.</span></span> <span data-ttu-id="26d05-109">Эти изменения отражают тот факт, на уровне среды WPF это полная система структуры на месте, который может преобразовать любой <xref:System.Windows.FrameworkElement> производного класса.</span><span class="sxs-lookup"><span data-stu-id="26d05-109">These changes reflect the fact that at the WPF framework-level there is a full layout system in place that can render any <xref:System.Windows.FrameworkElement> derived class.</span></span> <span data-ttu-id="26d05-110">В WPF основы уровня, некоторые элементы, которые будут структуру общего [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] решения на основе макета в месте, но фактические ядра системы макета не определен.</span><span class="sxs-lookup"><span data-stu-id="26d05-110">At the WPF core level, certain members that will structure a general [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] based layout solution are in place, but the actual engine of the layout system is not defined.</span></span> <span data-ttu-id="26d05-111">Дополнительные сведения см. в разделе [Макет](~/docs/framework/wpf/advanced/layout.md).</span><span class="sxs-lookup"><span data-stu-id="26d05-111">For more information, see [Layout](~/docs/framework/wpf/advanced/layout.md).</span></span>  
  
-   <span data-ttu-id="26d05-112">**Логическое дерево:** Общие [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] модель программирования часто выражается в терминах выполняется дерева элементов.</span><span class="sxs-lookup"><span data-stu-id="26d05-112">**The logical tree:** The general [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] programming model is often expressed in terms of being a tree of elements.</span></span> <span data-ttu-id="26d05-113">Поддержка выражения дерева элементов в виде логического дерева и сопутствующие поддержки для определения этого дерева в разметке реализована в <xref:System.Windows.FrameworkElement> уровень.</span><span class="sxs-lookup"><span data-stu-id="26d05-113">Support for expressing the tree of elements as a logical tree, and accompanying support for defining that tree in markup is implemented at the <xref:System.Windows.FrameworkElement> level.</span></span> <span data-ttu-id="26d05-114">Обратите внимание что <xref:System.Windows.FrameworkElement> намеренно не определяет модель содержимого и оставляя эту ответственность производных классов.</span><span class="sxs-lookup"><span data-stu-id="26d05-114">Note however that <xref:System.Windows.FrameworkElement> deliberately does not define a content model, and leaves that responsibility to derived classes.</span></span> <span data-ttu-id="26d05-115">Дополнительные сведения см. в разделе [Деревья в WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="26d05-115">For more information, see [Trees in WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md).</span></span>  
  
-   <span data-ttu-id="26d05-116">**События времени жизни объекта:** часто бывает полезно знать, когда инициализируется элемент (конструктор вызывается) или при первой загрузке элемента в логическом дереве.</span><span class="sxs-lookup"><span data-stu-id="26d05-116">**Object lifetime events:** It is often useful to know when an element is initialized (the constructor is called) or when the element is first loaded into a logical tree.</span></span> <span data-ttu-id="26d05-117"><xref:System.Windows.FrameworkElement> определяет несколько событий, связанных с временем жизни объекта, которые предоставляют полезные обработчики для кода операции, включающие элементы, такие как добавление нескольких дочерних элементов.</span><span class="sxs-lookup"><span data-stu-id="26d05-117"><xref:System.Windows.FrameworkElement> defines several events related to object lifetime that provide useful hooks for code-behind operations that involve elements, such as adding more child elements.</span></span> <span data-ttu-id="26d05-118">Дополнительные сведения см. в разделе [события времени жизни объекта](~/docs/framework/wpf/advanced/object-lifetime-events.md).</span><span class="sxs-lookup"><span data-stu-id="26d05-118">For more information, see [Object Lifetime Events](~/docs/framework/wpf/advanced/object-lifetime-events.md).</span></span>  
  
-   <span data-ttu-id="26d05-119">**Поддержка привязки данных и ссылки на динамические ресурсы:** реализуется поддержка уровня свойств для привязки данных и ресурсов <xref:System.Windows.DependencyProperty> класса и принята в системе свойств, но возможность разрешения значение элемента, хранятся в виде <xref:System.Windows.Expression> (конструкции программирования, лежащий в основе привязка данных и динамические ресурсы) реализуется <xref:System.Windows.FrameworkElement>.</span><span class="sxs-lookup"><span data-stu-id="26d05-119">**Support for data binding and dynamic resource references:** The property-level support for data binding and resources is implemented by the <xref:System.Windows.DependencyProperty> class and embodied in the property system, but the ability to resolve a member value that is stored as an <xref:System.Windows.Expression> (the programming construct that underlies both data binding and dynamic resources) is implemented by <xref:System.Windows.FrameworkElement>.</span></span> <span data-ttu-id="26d05-120">Дополнительные сведения см. в разделе [Общие сведения о привязке данных](~/docs/framework/wpf/data/data-binding-overview.md) и [ресурсы XAML](~/docs/framework/wpf/advanced/xaml-resources.md).</span><span class="sxs-lookup"><span data-stu-id="26d05-120">For more information, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md) and [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md).</span></span>  
  
-   <span data-ttu-id="26d05-121">**Стили:** <xref:System.Windows.FrameworkElement> определяет <xref:System.Windows.FrameworkElement.Style%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="26d05-121">**Styles:** <xref:System.Windows.FrameworkElement> defines the <xref:System.Windows.FrameworkElement.Style%2A> property.</span></span> <span data-ttu-id="26d05-122">Тем не менее <xref:System.Windows.FrameworkElement> еще не определить поддержку для шаблонов или поддержки декораторов.</span><span class="sxs-lookup"><span data-stu-id="26d05-122">However, <xref:System.Windows.FrameworkElement> does not yet define support for templates, or support decorators.</span></span> <span data-ttu-id="26d05-123">Эти функции появились классы элементов управления, например <xref:System.Windows.Controls.Control> и <xref:System.Windows.Controls.ContentControl>.</span><span class="sxs-lookup"><span data-stu-id="26d05-123">These features are introduced by control classes such as <xref:System.Windows.Controls.Control> and <xref:System.Windows.Controls.ContentControl>.</span></span>  
  
-   <span data-ttu-id="26d05-124">**Дополнительная поддержка анимации:** некоторую поддержку анимации уже было определено на уровне ядра WPF, но <xref:System.Windows.FrameworkElement> расширяет это путем реализации <xref:System.Windows.FrameworkElement.BeginStoryboard%2A> и связанные элементы.</span><span class="sxs-lookup"><span data-stu-id="26d05-124">**More animation support:** Some animation support was already defined at the WPF core level, but <xref:System.Windows.FrameworkElement> extends this by implementing <xref:System.Windows.FrameworkElement.BeginStoryboard%2A> and related members.</span></span>  
  
 <span data-ttu-id="26d05-125">Как видно из иерархии классов много [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] классы являются производными от <xref:System.Windows.FrameworkElement>, напрямую или через промежуточный базовыми классами такие как <xref:System.Windows.Controls.Panel> или <xref:System.Windows.Controls.Control>.</span><span class="sxs-lookup"><span data-stu-id="26d05-125">As can be seen from the class hierarchy, many [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] classes derive from <xref:System.Windows.FrameworkElement>, either directly or through intermediate base classes such as <xref:System.Windows.Controls.Panel> or <xref:System.Windows.Controls.Control>.</span></span>  
  
 <span data-ttu-id="26d05-126">Если вы планируете использовать <xref:System.Windows.FrameworkElement> как базовый класс, может потребоваться сначала проверить существующие производные классы.</span><span class="sxs-lookup"><span data-stu-id="26d05-126">If you intend to use <xref:System.Windows.FrameworkElement> as a base class, you might want to first examine the existing derived classes.</span></span> <span data-ttu-id="26d05-127"><xref:System.Windows.FrameworkElement> обеспечивает поддержку нескольких основных сценариев, но такой способ не обеспечивает ряд возможностей, которые предпочтительны для «element» в том смысле, используемом для создания стандартного блока [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] в [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="26d05-127"><xref:System.Windows.FrameworkElement> provides support for a number of basic scenarios, but also lacks a number of features that are desirable for an "element" in the sense of a building block that you use to create [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)].</span></span> <span data-ttu-id="26d05-128">Например <xref:System.Windows.FrameworkElement> не определяет любое значение true, модель содержимого; <xref:System.Windows.FrameworkElement> как базовый класс не определяет свойство, которое можно создать [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] дочерних элементов.</span><span class="sxs-lookup"><span data-stu-id="26d05-128">For instance, a <xref:System.Windows.FrameworkElement> does not define any true content model; <xref:System.Windows.FrameworkElement> as a base class does not define a property that can create [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] child elements.</span></span> <span data-ttu-id="26d05-129">В частности, может потребоваться рассмотреть <xref:System.Windows.Controls.Control> и <xref:System.Windows.Controls.ContentControl>.</span><span class="sxs-lookup"><span data-stu-id="26d05-129">In particular, you might want to look at <xref:System.Windows.Controls.Control> and <xref:System.Windows.Controls.ContentControl>.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.DependencyObject" />
    <altmember cref="T:System.Windows.FrameworkContentElement" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FrameworkElement ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FrameworkElement();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="26d05-130">Инициализирует новый экземпляр класса <see cref="T:System.Windows.FrameworkElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-130">Initializes a new instance of the <see cref="T:System.Windows.FrameworkElement" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActualHeight">
      <MemberSignature Language="C#" Value="public double ActualHeight { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ActualHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.ActualHeight" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActualHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ActualHeight { double get(); };" />
      <MemberSignature Language="F#" Value="member this.ActualHeight : double" Usage="System.Windows.FrameworkElement.ActualHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-131">Возвращает визуализированную высоту данного элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-131">Gets the rendered height of this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26d05-132">Высота элемента, представленная в [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-132">The element's height, as a value in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          </span>
          <span data-ttu-id="26d05-133">Значение по умолчанию — 0 (нуль).</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-133">The default value is 0 (zero).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-134">Это свойство имеет значение, вычисленное на основе других вводимых высот и системы макета.</span><span class="sxs-lookup"><span data-stu-id="26d05-134">This property is a calculated value based on other height inputs, and the layout system.</span></span> <span data-ttu-id="26d05-135">Значение задается самой системой макета в зависимости от фактического прохода отрисовки и может таким образом немного отставать от установки значений свойств таких как <xref:System.Windows.FrameworkElement.Height%2A> , являются основой для изменения ввода.</span><span class="sxs-lookup"><span data-stu-id="26d05-135">The value is set by the layout system itself, based on an actual rendering pass, and may therefore lag slightly behind the set value of properties such as <xref:System.Windows.FrameworkElement.Height%2A> that are the basis of the input change.</span></span>  
  
 <span data-ttu-id="26d05-136">Поскольку <xref:System.Windows.FrameworkElement.ActualHeight%2A> является вычисляемым значением, следует иметь в виду, могут производиться многократные или добавочные сообщаемые изменения к нему в результате различных операций системой макета.</span><span class="sxs-lookup"><span data-stu-id="26d05-136">Because <xref:System.Windows.FrameworkElement.ActualHeight%2A> is a calculated value, you should be aware that there could be multiple or incremental reported changes to it as a result of various operations by the layout system.</span></span> <span data-ttu-id="26d05-137">Система макета может вычислять требуемое место измерения для дочерних элементов, ограничения родительского элемента и т. д.</span><span class="sxs-lookup"><span data-stu-id="26d05-137">The layout system may be calculating required measure space for child elements, constraints by the parent element, and so on.</span></span>  
  
 <span data-ttu-id="26d05-138">Несмотря на то, что невозможно задать это свойство из [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], может быть основан <xref:System.Windows.Trigger> после его значение в стиле.</span><span class="sxs-lookup"><span data-stu-id="26d05-138">Although you cannot set this property from [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], you can base a <xref:System.Windows.Trigger> upon its value in a style.</span></span>  
  
<a name="dependencyPropertyInfo_ActualHeight"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="26d05-139">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="26d05-139">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="26d05-140">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="26d05-140">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.ActualHeightProperty>|  
|<span data-ttu-id="26d05-141">Значение свойства метаданных `true`</span><span class="sxs-lookup"><span data-stu-id="26d05-141">Metadata properties set to `true`</span></span>|<span data-ttu-id="26d05-142">Нет</span><span class="sxs-lookup"><span data-stu-id="26d05-142">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="26d05-143">Следующий пример показывает различные свойства высоты.</span><span class="sxs-lookup"><span data-stu-id="26d05-143">The following example displays various height properties.</span></span>  
  
 [!code-csharp[HeightMinHeightMaxHeight#3](~/samples/snippets/csharp/VS_Snippets_Wpf/HeightMinHeightMaxHeight/CSharp/Window1.xaml.cs#3)]
 [!code-vb[HeightMinHeightMaxHeight#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/HeightMinHeightMaxHeight/VisualBasic/Window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActualHeightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ActualHeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ActualHeightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.ActualHeightProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ActualHeightProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ActualHeightProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ActualHeightProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.ActualHeightProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-144">Идентифицирует свойство зависимостей <see cref="P:System.Windows.FrameworkElement.ActualHeight" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-144">Identifies the <see cref="P:System.Windows.FrameworkElement.ActualHeight" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ActualWidth">
      <MemberSignature Language="C#" Value="public double ActualWidth { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 ActualWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.ActualWidth" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActualWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double ActualWidth { double get(); };" />
      <MemberSignature Language="F#" Value="member this.ActualWidth : double" Usage="System.Windows.FrameworkElement.ActualWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-145">Возвращает визуализированную ширину данного элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-145">Gets the rendered width of this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26d05-146">Ширина элемента, представленная в [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-146">The element's width, as a value in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          </span>
          <span data-ttu-id="26d05-147">Значение по умолчанию — 0 (нуль).</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-147">The default value is 0 (zero).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-148">Это свойство имеет значение, вычисленное на основе других входных значений ширины и системы макета.</span><span class="sxs-lookup"><span data-stu-id="26d05-148">This property is a calculated value based on other width inputs, and the layout system.</span></span> <span data-ttu-id="26d05-149">Значение задается самой системой макета в зависимости от фактического прохода отрисовки и может таким образом немного отставать от установки значений свойств таких как <xref:System.Windows.FrameworkElement.Width%2A> , являются основой для изменения ввода.</span><span class="sxs-lookup"><span data-stu-id="26d05-149">The value is set by the layout system itself, based on an actual rendering pass, and may therefore lag slightly behind the set value of properties such as <xref:System.Windows.FrameworkElement.Width%2A> that are the basis of the input change.</span></span>  
  
 <span data-ttu-id="26d05-150">Поскольку <xref:System.Windows.FrameworkElement.ActualWidth%2A> является вычисляемым значением, следует иметь в виду, могут производиться многократные или добавочные сообщаемые изменения к нему в результате различных операций системой макета.</span><span class="sxs-lookup"><span data-stu-id="26d05-150">Because <xref:System.Windows.FrameworkElement.ActualWidth%2A> is a calculated value, you should be aware that there could be multiple or incremental reported changes to it as a result of various operations by the layout system.</span></span> <span data-ttu-id="26d05-151">Система макета может вычислять требуемое место измерения для дочерних элементов, ограничения родительского элемента и т. д.</span><span class="sxs-lookup"><span data-stu-id="26d05-151">The layout system may be calculating required measure space for child elements, constraints by the parent element, and so on.</span></span>  
  
 <span data-ttu-id="26d05-152">Несмотря на то, что невозможно задать это свойство из [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], может быть основан <xref:System.Windows.Trigger> после его значение в стиле.</span><span class="sxs-lookup"><span data-stu-id="26d05-152">Although you cannot set this property from [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], you can base a <xref:System.Windows.Trigger> upon its value in a style.</span></span>  
  
<a name="dependencyPropertyInfo_ActualWidth"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="26d05-153">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="26d05-153">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="26d05-154">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="26d05-154">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.ActualWidthProperty>|  
|<span data-ttu-id="26d05-155">Значение свойства метаданных `true`</span><span class="sxs-lookup"><span data-stu-id="26d05-155">Metadata properties set to `true`</span></span>|<span data-ttu-id="26d05-156">Нет</span><span class="sxs-lookup"><span data-stu-id="26d05-156">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="26d05-157">Следующий пример показывает различные свойства ширины.</span><span class="sxs-lookup"><span data-stu-id="26d05-157">The following example displays various width properties.</span></span>  
  
 [!code-csharp[WidthMinWidthMaxWidth#3](~/samples/snippets/csharp/VS_Snippets_Wpf/WidthMinWidthMaxWidth/CSharp/Window1.xaml.cs#3)]
 [!code-vb[WidthMinWidthMaxWidth#3](~/samples/snippets/visualbasic/VS_Snippets_Wpf/WidthMinWidthMaxWidth/VisualBasic/Window1.xaml.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActualWidthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ActualWidthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ActualWidthProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.ActualWidthProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ActualWidthProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ActualWidthProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ActualWidthProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.ActualWidthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-158">Идентифицирует свойство зависимостей <see cref="P:System.Windows.FrameworkElement.ActualWidth" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-158">Identifies the <see cref="P:System.Windows.FrameworkElement.ActualWidth" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddLogicalChild">
      <MemberSignature Language="C#" Value="protected internal void AddLogicalChild (object child);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void AddLogicalChild(object child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.AddLogicalChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub AddLogicalChild (child As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void AddLogicalChild(System::Object ^ child);" />
      <MemberSignature Language="F#" Value="member this.AddLogicalChild : obj -&gt; unit" Usage="frameworkElement.AddLogicalChild child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="child">
          <span data-ttu-id="26d05-159">Добавляемый дочерний элемент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-159">Child element to be added.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26d05-160">Добавляет указанный объект в логическое дерево данного элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-160">Adds the provided object to the logical tree of this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-161">Используйте этот метод для реализации коллекции объектов, представляющих логических дочерних элементов элемента.</span><span class="sxs-lookup"><span data-stu-id="26d05-161">Use this method for the implementation of collections on objects that represent logical child elements of an element.</span></span> <span data-ttu-id="26d05-162">Обслуживание коллекции для коллекции дочерних элементов может выполняться в методы получения свойств или методов задания, обработчик события Changed, конструкторов, или внутри самих коллекции типов класса.</span><span class="sxs-lookup"><span data-stu-id="26d05-162">Collection maintenance for child element collections might be done in property getters or setters, class handling of Changed events, constructors, or within the collection types themselves.</span></span>  
  
 <span data-ttu-id="26d05-163">Для разработчиков элементов управления обработка логического дерева на этом уровне не рекомендуется, если ни одна из моделей содержимого для доступных базовых классов элементов управления не подходит для вашего сценария управления.</span><span class="sxs-lookup"><span data-stu-id="26d05-163">For control authors, manipulating the logical tree at this level is not the recommended practice, unless none of the content models for available base control classes are appropriate for your control scenario.</span></span> <span data-ttu-id="26d05-164">Рассмотрите возможность создания подклассов на уровне <xref:System.Windows.Controls.ContentControl>, <xref:System.Windows.Controls.ItemsControl>, и <xref:System.Windows.Controls.HeaderedItemsControl>.</span><span class="sxs-lookup"><span data-stu-id="26d05-164">Consider subclassing at the level of <xref:System.Windows.Controls.ContentControl>, <xref:System.Windows.Controls.ItemsControl>, and <xref:System.Windows.Controls.HeaderedItemsControl>.</span></span> <span data-ttu-id="26d05-165">Эти классы предоставляют модель содержимого с определенной органами логическое дерево дочерних элементов с помощью выделенного [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)], а также поддерживает другие функции, обычно желательно, [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] элемента управления, такие как стили через шаблоны.</span><span class="sxs-lookup"><span data-stu-id="26d05-165">These classes provide a content model with particular enforcement of logical tree child elements through dedicated [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)], as well as support for other features typically desirable in a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] control such as styling through templates.</span></span> <span data-ttu-id="26d05-166">Дополнительные сведения об использовании <xref:System.Windows.FrameworkElement.LogicalChildren%2A> и <xref:System.Windows.FrameworkElement.AddLogicalChild%2A>, см. в разделе [деревья в WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="26d05-166">For more information on how to use <xref:System.Windows.FrameworkElement.LogicalChildren%2A> and <xref:System.Windows.FrameworkElement.AddLogicalChild%2A>, see [Trees in WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md).</span></span>  
  
 <span data-ttu-id="26d05-167"><xref:System.Windows.FrameworkElement.AddLogicalChild%2A> может вызывать исключение, если вызывается в момент, когда выполняется итерация логического дерева с помощью другого процесса.</span><span class="sxs-lookup"><span data-stu-id="26d05-167"><xref:System.Windows.FrameworkElement.AddLogicalChild%2A> may throw an exception if called at a time when the logical tree is being iterated by another process.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26d05-168">В следующем примере реализуется `Child` свойство в пользовательском <xref:System.Windows.FrameworkElement> который выполняет собственную реализацию на визуальном уровне.</span><span class="sxs-lookup"><span data-stu-id="26d05-168">The following example implements a `Child` property on a custom <xref:System.Windows.FrameworkElement> that does its own visual layer implementation.</span></span> <span data-ttu-id="26d05-169">Метод задания свойства разработан таким образом, если значение изменяется, старое значение удаляется из логического дерева, а также коллекцию визуальных элементов данного класса.</span><span class="sxs-lookup"><span data-stu-id="26d05-169">The property setter is designed so that if the value changes, the old value is removed from the logical tree, as well as a class-specific visual collection.</span></span> <span data-ttu-id="26d05-170">Значение свойства кэшируется, и затем добавляется новое значение для логического дерева и коллекция пользовательских визуальных элементов.</span><span class="sxs-lookup"><span data-stu-id="26d05-170">The property value is cached, and then the new value is added to both the logical tree and the custom visual collection.</span></span>  
  
 [!code-csharp[CompositionTargetRenderingAnimations#AddRemoveLogicalChild](~/samples/snippets/csharp/VS_Snippets_Wpf/CompositionTargetRenderingAnimations/CSharp/ParticleEffectExamples/OverlayRenderDecorator.cs#addremovelogicalchild)]
 [!code-vb[CompositionTargetRenderingAnimations#AddRemoveLogicalChild](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CompositionTargetRenderingAnimations/visualbasic/particleeffectexamples/overlayrenderdecorator.vb#addremovelogicalchild)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ApplyTemplate">
      <MemberSignature Language="C#" Value="public bool ApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.ApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Function ApplyTemplate () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ApplyTemplate();" />
      <MemberSignature Language="F#" Value="member this.ApplyTemplate : unit -&gt; bool" Usage="frameworkElement.ApplyTemplate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="26d05-171">При необходимости строит визуальное дерево текущего шаблона и возвращает значение, указывающее, было ли это визуальное дерево перестроено в результате этого вызова.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-171">Builds the current template's visual tree if necessary, and returns a value that indicates whether the visual tree was rebuilt by this call.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="26d05-172">
            <see langword="true" />, если в дерево были добавлены визуальные элементы; в противном случае возвращает <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-172">
              <see langword="true" /> if visuals were added to the tree; returns <see langword="false" /> otherwise.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-173">Приложения могут вызывать этот метод, чтобы гарантировать, что визуальное дерево элемента завершена.</span><span class="sxs-lookup"><span data-stu-id="26d05-173">Applications can call this method to guarantee that the visual tree of an element is complete.</span></span> <span data-ttu-id="26d05-174">Такая гарантия может возникнуть необходимость в том случае, если код будет проверять дочерние элементы в дереве.</span><span class="sxs-lookup"><span data-stu-id="26d05-174">This guarantee step might be necessary if code will be checking the child elements in the tree.</span></span> <span data-ttu-id="26d05-175">Обычный элемент логике приложений, вызвав <xref:System.Windows.FrameworkElement.ApplyTemplate%2A> не нужен, так как шаблоны будут применяться к элементам в соответствующий момент их времени существования автоматически.</span><span class="sxs-lookup"><span data-stu-id="26d05-175">For typical element logic within applications, calling <xref:System.Windows.FrameworkElement.ApplyTemplate%2A> is not necessary, because templates will be applied to elements at an appropriate point in their lifetimes automatically.</span></span>  
  
 <span data-ttu-id="26d05-176"><xref:System.Windows.FrameworkElement.ApplyTemplate%2A> вызывается для всех мер передать системой макетов уровня среды WPF.</span><span class="sxs-lookup"><span data-stu-id="26d05-176"><xref:System.Windows.FrameworkElement.ApplyTemplate%2A> is called on every Measure pass by the WPF framework-level layout system.</span></span>  
  
 <span data-ttu-id="26d05-177"><xref:System.Windows.FrameworkElement> производные классы могут использовать <xref:System.Windows.FrameworkElement.OnApplyTemplate%2A> обработчик класса для получения уведомлений из случаев, когда этот метод был вызван явным образом или системой макета.</span><span class="sxs-lookup"><span data-stu-id="26d05-177"><xref:System.Windows.FrameworkElement> derived classes can use the <xref:System.Windows.FrameworkElement.OnApplyTemplate%2A> class handler to be notified of cases where this method was called explicitly, or by the layout system.</span></span> <span data-ttu-id="26d05-178"><xref:System.Windows.FrameworkElement.OnApplyTemplate%2A> вызывается после шаблон полностью создается и прикрепляется к логическому дереву.</span><span class="sxs-lookup"><span data-stu-id="26d05-178"><xref:System.Windows.FrameworkElement.OnApplyTemplate%2A> is called after the template is completely generated and attached to the logical tree.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ControlTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ArrangeCore">
      <MemberSignature Language="C#" Value="protected override sealed void ArrangeCore (System.Windows.Rect finalRect);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ArrangeCore(valuetype System.Windows.Rect finalRect) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.ArrangeCore(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub ArrangeCore (finalRect As Rect)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ArrangeCore(System::Windows::Rect finalRect);" />
      <MemberSignature Language="F#" Value="override this.ArrangeCore : System.Windows.Rect -&gt; unit" Usage="frameworkElement.ArrangeCore finalRect" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="finalRect" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="finalRect">
          <span data-ttu-id="26d05-179">Итоговая область в родительском элементе, которую этот элемент должен использовать для размещения себя и своих дочерних элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-179">The final area within the parent that this element should use to arrange itself and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26d05-180">Реализует метод <see cref="M:System.Windows.UIElement.ArrangeCore(System.Windows.Rect)" /> (определенный как виртуальный в классе <see cref="T:System.Windows.UIElement" />) и запечатывает реализацию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-180">Implements <see cref="M:System.Windows.UIElement.ArrangeCore(System.Windows.Rect)" /> (defined as virtual in <see cref="T:System.Windows.UIElement" />) and seals the implementation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-181">Этот метод является запечатанным.</span><span class="sxs-lookup"><span data-stu-id="26d05-181">This method is sealed.</span></span> <span data-ttu-id="26d05-182">Чтобы переопределить логику в пользовательских элементе специально для проход макета элемента вашей <xref:System.Windows.FrameworkElement> производный класс должен переопределять <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-182">In order to override the logic in your custom element specifically for the arrange pass of element layout, your <xref:System.Windows.FrameworkElement> derived class must override <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="ArrangeOverride">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Size ArrangeOverride (System.Windows.Size finalSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Windows.Size ArrangeOverride(valuetype System.Windows.Size finalSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function ArrangeOverride (finalSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Size ArrangeOverride(System::Windows::Size finalSize);" />
      <MemberSignature Language="F#" Value="abstract member ArrangeOverride : System.Windows.Size -&gt; System.Windows.Size&#xA;override this.ArrangeOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="frameworkElement.ArrangeOverride finalSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="finalSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="finalSize">
          <span data-ttu-id="26d05-183">Итоговая область в родительском элементе, которую этот элемент должен использовать для размещения себя и своих дочерних элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-183">The final area within the parent that this element should use to arrange itself and its children.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26d05-184">При переопределении в производном классе размещает дочерние элементы и определяет размер для класса, производного от <see cref="T:System.Windows.FrameworkElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-184">When overridden in a derived class, positions child elements and determines a size for a <see cref="T:System.Windows.FrameworkElement" /> derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="26d05-185">Фактический используемый размер.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-185">The actual size used.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="26d05-186">
            <para>Которым необходимо настроить на проход упорядочивания обработки макета необходимо переопределить этот метод. Шаблон реализации должен вызывать <see cref="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" /> на каждый элемент видимого дочернего элемента и передайте конечный требуемого размера для каждого дочернего элемента, как <paramref name="finalRect" /> параметр. Родительские элементы должны вызывать <see cref="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" /> на каждый дочерний элемент, в противном случае дочерние элементы не отображается.  Во многих производных классах реализации этого метода. Известных методов входят следующие: <see cref="M:System.Windows.Window.ArrangeOverride(System.Windows.Size)" />, <see cref="M:System.Windows.Controls.Page.ArrangeOverride(System.Windows.Size)" /> и <see cref="M:System.Windows.Controls.Control.ArrangeOverride(System.Windows.Size)" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-186">
              <para>Control authors who want to customize the arrange pass of layout processing should override this method. The implementation pattern should call <see cref="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" /> on each visible child element, and pass the final desired size for each child element as the <paramref name="finalRect" /> parameter. Parent elements should call <see cref="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" /> on each child, otherwise the child elements will not be rendered.  Many derived classes offer implementations of this method. Prominent ones include: <see cref="M:System.Windows.Window.ArrangeOverride(System.Windows.Size)" />, <see cref="M:System.Windows.Controls.Page.ArrangeOverride(System.Windows.Size)" /> and <see cref="M:System.Windows.Controls.Control.ArrangeOverride(System.Windows.Size)" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" />
      </Docs>
    </Member>
    <Member MemberName="BeginInit">
      <MemberSignature Language="C#" Value="public virtual void BeginInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void BeginInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.BeginInit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub BeginInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void BeginInit();" />
      <MemberSignature Language="F#" Value="abstract member BeginInit : unit -&gt; unit&#xA;override this.BeginInit : unit -&gt; unit" Usage="frameworkElement.BeginInit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="26d05-187">Запускает процесс инициализации данного элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-187">Starts the initialization process for this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-188">Этот метод можно вызвать для отдельных элементов, если они выравниваются способами, которые еще не предоставляют или подключения элемента для любого элемента дерева.</span><span class="sxs-lookup"><span data-stu-id="26d05-188">You can call this method on individual elements if you are adjusting them in ways that do not yet expose or connect the element to any element tree.</span></span> <span data-ttu-id="26d05-189">Например, вы могли создать новый <xref:System.Windows.FrameworkElement>, но не еще подключено его логическому дереву.</span><span class="sxs-lookup"><span data-stu-id="26d05-189">For instance, you might have created a new <xref:System.Windows.FrameworkElement>, but have not yet attached it to any logical tree.</span></span> <span data-ttu-id="26d05-190">Или, логическое дерево, где элемент является дочерним элементом в нем не может быть подключен к окно или страницу приложения.</span><span class="sxs-lookup"><span data-stu-id="26d05-190">Or, the logical tree where your element is a child element within it might not be connected to a window or page of the application.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="26d05-191">
            <para>Этот метод реализуется для обеспечения специальной обработки, которая будет выполняться перед инициализацией элемента в процессе его загрузки.  Реализация должна вызывать базовую реализацию, так как реализация base (по умолчанию) устанавливает внутренние флаги для отслеживания инициализации. Для использования этого метода в качестве ловушки в собственных процедур инициализации закрытого класса, которые еще не включены конструкторами является одной из возможных реализаций.  Базовая реализация вызовет исключение, если <see cref="M:System.Windows.FrameworkElement.BeginInit" /> вызывается несколько раз для одного элемента до <see cref="M:System.Windows.FrameworkElement.EndInit" /> вызова.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-191">
              <para>Implement this method to provide special handling that should happen before your element is initialized during the element loading process.  Your implementation should call the base implementation, because the base (default) implementation sets some internal flags to keep track of initialization. One possible implementation is to use this method as a hook into your own private class initialization routines that are not already enabled by constructors.  The base implementation will throw an exception if <see cref="M:System.Windows.FrameworkElement.BeginInit" /> is called more than one time on the same element prior to <see cref="M:System.Windows.FrameworkElement.EndInit" /> being called.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.FrameworkElement.EndInit" />
      </Docs>
    </Member>
    <MemberGroup MemberName="BeginStoryboard">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-192">Начинает последовательность действий, содержащихся в предоставленной раскадровке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-192">Begins the sequence of actions contained in the provided storyboard.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BeginStoryboard">
      <MemberSignature Language="C#" Value="public void BeginStoryboard (System.Windows.Media.Animation.Storyboard storyboard);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginStoryboard(class System.Windows.Media.Animation.Storyboard storyboard) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginStoryboard(System::Windows::Media::Animation::Storyboard ^ storyboard);" />
      <MemberSignature Language="F#" Value="member this.BeginStoryboard : System.Windows.Media.Animation.Storyboard -&gt; unit" Usage="frameworkElement.BeginStoryboard storyboard" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storyboard" Type="System.Windows.Media.Animation.Storyboard" />
      </Parameters>
      <Docs>
        <param name="storyboard">
          <span data-ttu-id="26d05-193">Раскадровка, которая будет начата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-193">The storyboard to begin.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26d05-194">Начинает последовательность действий, содержащихся в предоставленной раскадровке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-194">Begins the sequence of actions that are contained in the provided storyboard.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-195">Этот метод не следует использовать для наиболее типичных сценариях анимации.</span><span class="sxs-lookup"><span data-stu-id="26d05-195">Most typical animation scenarios do not use this method.</span></span> <span data-ttu-id="26d05-196">Обычно создается <xref:System.Windows.Media.Animation.Storyboard> или <xref:System.Windows.Media.Animation.BeginStoryboard> элемент в разметке, а затем поместите их в качестве <xref:System.Windows.EventTrigger> содержимого в элементе.</span><span class="sxs-lookup"><span data-stu-id="26d05-196">Typically, you create the <xref:System.Windows.Media.Animation.Storyboard> or <xref:System.Windows.Media.Animation.BeginStoryboard> element in markup, and then you place these as the <xref:System.Windows.EventTrigger> content on an element.</span></span> <span data-ttu-id="26d05-197">При срабатывании триггера события, выполняется анимация.</span><span class="sxs-lookup"><span data-stu-id="26d05-197">When triggered by the event, the animation then runs.</span></span> <span data-ttu-id="26d05-198">Большинство аспектов управления <xref:System.Windows.Media.Animation.Storyboard> можно обратиться по свойствами, доступными в разметке.</span><span class="sxs-lookup"><span data-stu-id="26d05-198">Most of the control aspects of a <xref:System.Windows.Media.Animation.Storyboard> can be addressed by properties that are exposed in markup.</span></span>  
  
 <span data-ttu-id="26d05-199">Для подписей, которые не используют `isControllable`, параметр, или если указан этот параметр `false`, часы шкалы времени, которые связаны с анимацией удаляются сразу же анимации наступит время «Fill».</span><span class="sxs-lookup"><span data-stu-id="26d05-199">For the signatures that do not use the `isControllable`, parameter, or when that parameter is specified `false`, the timeline clocks that are associated with the animation are removed as soon as the animation reaches the "Fill" period.</span></span> <span data-ttu-id="26d05-200">Не анимации может быть перезапущено после однократного запуска.</span><span class="sxs-lookup"><span data-stu-id="26d05-200">Therefore the animation cannot be restarted after running once.</span></span> <span data-ttu-id="26d05-201">Управление анимацией также требует, чтобы раскадровка [директива x: Name](~/docs/framework/xaml-services/x-name-directive.md) или быть доступны по ссылке в коде.</span><span class="sxs-lookup"><span data-stu-id="26d05-201">Controlling an animation also requires that the storyboard have an [x:Name Directive](~/docs/framework/xaml-services/x-name-directive.md) or be accessible by reference in code.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26d05-202">В следующем примере извлекается <xref:System.Windows.Media.Animation.Storyboard> из ресурсов, а затем запускается, <xref:System.Windows.Media.Animation.Storyboard> при внутреннее событие обрабатывается классом.</span><span class="sxs-lookup"><span data-stu-id="26d05-202">The following example retrieves a <xref:System.Windows.Media.Animation.Storyboard> from resources, and then runs that <xref:System.Windows.Media.Animation.Storyboard> when an internal event is class handled.</span></span>  
  
 [!code-csharp[CubeAnimation#FEBeginStoryboard](~/samples/snippets/csharp/VS_Snippets_Wpf/CubeAnimation/CSharp/Page1.xaml.cs#febeginstoryboard)]
 [!code-vb[CubeAnimation#FEBeginStoryboard](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CubeAnimation/visualbasic/page1.xaml.vb#febeginstoryboard)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginStoryboard">
      <MemberSignature Language="C#" Value="public void BeginStoryboard (System.Windows.Media.Animation.Storyboard storyboard, System.Windows.Media.Animation.HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginStoryboard(class System.Windows.Media.Animation.Storyboard storyboard, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginStoryboard(System::Windows::Media::Animation::Storyboard ^ storyboard, System::Windows::Media::Animation::HandoffBehavior handoffBehavior);" />
      <MemberSignature Language="F#" Value="member this.BeginStoryboard : System.Windows.Media.Animation.Storyboard * System.Windows.Media.Animation.HandoffBehavior -&gt; unit" Usage="frameworkElement.BeginStoryboard (storyboard, handoffBehavior)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storyboard" Type="System.Windows.Media.Animation.Storyboard" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
      </Parameters>
      <Docs>
        <param name="storyboard">
          <span data-ttu-id="26d05-203">Раскадровка, которая будет начата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-203">The storyboard to begin.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="26d05-204">Значение перечисления, описывающего поведение в случае, если описанное в раскадровке свойство уже анимировано.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-204">A value of the enumeration that describes behavior to use if a property described in the storyboard is already animated.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26d05-205">Начинает последовательность действий, содержащихся в предоставленной раскадровке, с параметрами, указывающими на реакцию в случае уже анимированного свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-205">Begins the sequence of actions contained in the provided storyboard, with options specified for what should happen if the property is already animated.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-206">Этот метод не следует использовать для наиболее типичных сценариях анимации.</span><span class="sxs-lookup"><span data-stu-id="26d05-206">Most typical animation scenarios do not use this method.</span></span> <span data-ttu-id="26d05-207">Обычно создается <xref:System.Windows.Media.Animation.Storyboard> или <xref:System.Windows.Media.Animation.BeginStoryboard> элемент в разметке, а затем поместите их в качестве <xref:System.Windows.EventTrigger> содержимого в элементе.</span><span class="sxs-lookup"><span data-stu-id="26d05-207">Typically, you create the <xref:System.Windows.Media.Animation.Storyboard> or <xref:System.Windows.Media.Animation.BeginStoryboard> element in markup, and then you place these as the <xref:System.Windows.EventTrigger> content on an element.</span></span> <span data-ttu-id="26d05-208">При срабатывании триггера события, выполняется анимация.</span><span class="sxs-lookup"><span data-stu-id="26d05-208">When triggered by the event, the animation then runs.</span></span> <span data-ttu-id="26d05-209">Большинство аспектов управления <xref:System.Windows.Media.Animation.Storyboard> можно обратиться по свойствами, доступными в разметке.</span><span class="sxs-lookup"><span data-stu-id="26d05-209">Most of the control aspects of a <xref:System.Windows.Media.Animation.Storyboard> can be addressed by properties that are exposed in markup.</span></span>  
  
 <span data-ttu-id="26d05-210">Для подписей, которые не используют `isControllable`, параметр, или если указан этот параметр `false`, часы шкалы времени, которые связаны с анимацией удаляются сразу же анимации наступит время «Fill».</span><span class="sxs-lookup"><span data-stu-id="26d05-210">For the signatures that do not use the `isControllable`, parameter, or when that parameter is specified `false`, the timeline clocks that are associated with the animation are removed as soon as the animation reaches the "Fill" period.</span></span> <span data-ttu-id="26d05-211">Не анимации может быть перезапущено после однократного запуска.</span><span class="sxs-lookup"><span data-stu-id="26d05-211">Therefore the animation cannot be restarted after running once.</span></span> <span data-ttu-id="26d05-212">Управление анимацией также требует, чтобы раскадровка [директива x: Name](~/docs/framework/xaml-services/x-name-directive.md) или быть доступны по ссылке в коде.</span><span class="sxs-lookup"><span data-stu-id="26d05-212">Controlling an animation also requires that the storyboard have an [x:Name Directive](~/docs/framework/xaml-services/x-name-directive.md) or be accessible by reference in code.</span></span>  
  
 <span data-ttu-id="26d05-213">Переадресуемое поведение может быть указан как атрибут <xref:System.Windows.Media.Animation.BeginStoryboard>.</span><span class="sxs-lookup"><span data-stu-id="26d05-213">Handoff behavior can be specified as an attribute of <xref:System.Windows.Media.Animation.BeginStoryboard>.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="26d05-214">С помощью Compose HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="26d05-214">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="26d05-215">При применении <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, или <xref:System.Windows.Media.Animation.AnimationClock> к свойству с помощью <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>любые <xref:System.Windows.Media.Animation.Clock> ранее связанную с ним объекты по-прежнему потребляют ресурсы системы; система управления временем не не удаляет эти часы автоматически.</span><span class="sxs-lookup"><span data-stu-id="26d05-215">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property by using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove the clocks automatically.</span></span>  
  
 <span data-ttu-id="26d05-216">Чтобы избежать проблем с производительностью при применении большого количества часов с помощью <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, следует удалять составные часы из анимируемого свойства после их завершения.</span><span class="sxs-lookup"><span data-stu-id="26d05-216">To avoid performance issues when you apply a large number of clocks by using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="26d05-217">Существует несколько способов удаления часов:</span><span class="sxs-lookup"><span data-stu-id="26d05-217">There are several ways to remove a clock:</span></span>  
  
-   <span data-ttu-id="26d05-218">Чтобы удалить все часы из свойства, используйте <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> или <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> метод анимируемого объекта.</span><span class="sxs-lookup"><span data-stu-id="26d05-218">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="26d05-219">Укажите в качестве первого параметра анимируемое свойство и `null` как второй.</span><span class="sxs-lookup"><span data-stu-id="26d05-219">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="26d05-220">При этом удаляются все часы анимации из свойства.</span><span class="sxs-lookup"><span data-stu-id="26d05-220">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="26d05-221">Чтобы удалить определенные <xref:System.Windows.Media.Animation.AnimationClock> из списка часов, используйте <xref:System.Windows.Media.Animation.Clock.Controller%2A> свойство <xref:System.Windows.Media.Animation.AnimationClock> извлекаемого <xref:System.Windows.Media.Animation.ClockController>, затем вызвать <xref:System.Windows.Media.Animation.ClockController.Remove%2A> метод <xref:System.Windows.Media.Animation.ClockController>.</span><span class="sxs-lookup"><span data-stu-id="26d05-221">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="26d05-222">Обычно это делается <xref:System.Windows.Media.Animation.Clock.Completed> обработчик событий для часов.</span><span class="sxs-lookup"><span data-stu-id="26d05-222">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="26d05-223">Обратите внимание, что только корневые часы могут управляться <xref:System.Windows.Media.Animation.ClockController>; <xref:System.Windows.Media.Animation.Clock.Controller%2A> дочерних часов вернет `null`.</span><span class="sxs-lookup"><span data-stu-id="26d05-223">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="26d05-224">Обратите внимание, что <xref:System.Windows.Media.Animation.Clock.Completed> событие не происходит, если эффективная продолжительность часов — forever.</span><span class="sxs-lookup"><span data-stu-id="26d05-224">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not raised if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="26d05-225">В этом случае пользователь должен определить, когда нужно вызывать <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-225">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="26d05-226">В основном это проблема для анимации объектов, имеющих длинное время жизни.</span><span class="sxs-lookup"><span data-stu-id="26d05-226">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="26d05-227">Если объект удаляется сборщиком мусора, его часы также будут отключены, и сборщиком мусора.</span><span class="sxs-lookup"><span data-stu-id="26d05-227">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="26d05-228">Дополнительные сведения об объектах часов см. в разделе [анимации и общие сведения о характере системы](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span><span class="sxs-lookup"><span data-stu-id="26d05-228">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26d05-229">В следующем примере извлекается <xref:System.Windows.Media.Animation.Storyboard> из ресурсов, а затем запускается, <xref:System.Windows.Media.Animation.Storyboard> при внутреннее событие обрабатывается классом.</span><span class="sxs-lookup"><span data-stu-id="26d05-229">The following example retrieves a <xref:System.Windows.Media.Animation.Storyboard> from resources, and then runs that <xref:System.Windows.Media.Animation.Storyboard> when an internal event is class handled.</span></span>  
  
 [!code-csharp[CubeAnimation#FEBeginStoryboard](~/samples/snippets/csharp/VS_Snippets_Wpf/CubeAnimation/CSharp/Page1.xaml.cs#febeginstoryboard)]
 [!code-vb[CubeAnimation#FEBeginStoryboard](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CubeAnimation/visualbasic/page1.xaml.vb#febeginstoryboard)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BeginStoryboard">
      <MemberSignature Language="C#" Value="public void BeginStoryboard (System.Windows.Media.Animation.Storyboard storyboard, System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BeginStoryboard(class System.Windows.Media.Animation.Storyboard storyboard, valuetype System.Windows.Media.Animation.HandoffBehavior handoffBehavior, bool isControllable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.BeginStoryboard(System.Windows.Media.Animation.Storyboard,System.Windows.Media.Animation.HandoffBehavior,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BeginStoryboard(System::Windows::Media::Animation::Storyboard ^ storyboard, System::Windows::Media::Animation::HandoffBehavior handoffBehavior, bool isControllable);" />
      <MemberSignature Language="F#" Value="member this.BeginStoryboard : System.Windows.Media.Animation.Storyboard * System.Windows.Media.Animation.HandoffBehavior * bool -&gt; unit" Usage="frameworkElement.BeginStoryboard (storyboard, handoffBehavior, isControllable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="storyboard" Type="System.Windows.Media.Animation.Storyboard" />
        <Parameter Name="handoffBehavior" Type="System.Windows.Media.Animation.HandoffBehavior" />
        <Parameter Name="isControllable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="storyboard">
          <span data-ttu-id="26d05-230">Раскадровка, которая будет начата.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-230">The storyboard to begin.</span>
          </span>
        </param>
        <param name="handoffBehavior">
          <span data-ttu-id="26d05-231">Значение перечисления, описывающего поведение в случае, если описанное в раскадровке свойство уже анимировано.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-231">A value of the enumeration that describes behavior to use if a property described in the storyboard is already animated.</span>
          </span>
        </param>
        <param name="isControllable">
          <span data-ttu-id="26d05-232">Объявляет, является ли анимация управляемой после запуска (можно ли ее приостановить).</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-232">Declares whether the animation is controllable (can be paused) after it is started.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26d05-233">Начинает последовательность действий, содержащихся в предоставленной раскадровке, с указанным состоянием элемента управления анимацией после ее запуска.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-233">Begins the sequence of actions contained in the provided storyboard, with specified state for control of the animation after it is started.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-234">Этот метод не следует использовать для наиболее типичных сценариях анимации.</span><span class="sxs-lookup"><span data-stu-id="26d05-234">Most typical animation scenarios do not use this method.</span></span> <span data-ttu-id="26d05-235">Обычно создается <xref:System.Windows.Media.Animation.Storyboard> или <xref:System.Windows.Media.Animation.BeginStoryboard> элемент в разметке, а затем поместите их в качестве <xref:System.Windows.EventTrigger> содержимого в элементе.</span><span class="sxs-lookup"><span data-stu-id="26d05-235">Typically, you create the <xref:System.Windows.Media.Animation.Storyboard> or <xref:System.Windows.Media.Animation.BeginStoryboard> element in markup, and then you place these as the <xref:System.Windows.EventTrigger> content on an element.</span></span> <span data-ttu-id="26d05-236">При срабатывании триггера события, выполняется анимация.</span><span class="sxs-lookup"><span data-stu-id="26d05-236">When triggered by the event, the animation then runs.</span></span> <span data-ttu-id="26d05-237">Большинство аспектов управления <xref:System.Windows.Media.Animation.Storyboard> можно обратиться по свойствами, доступными в разметке.</span><span class="sxs-lookup"><span data-stu-id="26d05-237">Most of the control aspects of a <xref:System.Windows.Media.Animation.Storyboard> can be addressed by properties that are exposed in markup.</span></span>  
  
 <span data-ttu-id="26d05-238">Для подписей, которые не используют `isControllable`, параметр, или если указан этот параметр `false`, часы шкалы времени, которые связаны с анимацией удаляются сразу же анимации наступит время «Fill».</span><span class="sxs-lookup"><span data-stu-id="26d05-238">For the signatures that do not use the `isControllable`, parameter, or when that parameter is specified `false`, the timeline clocks that are associated with the animation are removed as soon as the animation reaches the "Fill" period.</span></span> <span data-ttu-id="26d05-239">Не анимации может быть перезапущено после однократного запуска.</span><span class="sxs-lookup"><span data-stu-id="26d05-239">Therefore the animation cannot be restarted after running once.</span></span> <span data-ttu-id="26d05-240">Управление анимацией также требует, чтобы раскадровка [директива x: Name](~/docs/framework/xaml-services/x-name-directive.md) или быть доступны по ссылке в коде.</span><span class="sxs-lookup"><span data-stu-id="26d05-240">Controlling an animation also requires that the storyboard have an [x:Name Directive](~/docs/framework/xaml-services/x-name-directive.md) or be accessible by reference in code.</span></span>  
  
 <span data-ttu-id="26d05-241">Переадресуемое поведение может быть указан как атрибут <xref:System.Windows.Media.Animation.BeginStoryboard>.</span><span class="sxs-lookup"><span data-stu-id="26d05-241">Handoff behavior can be specified as an attribute of <xref:System.Windows.Media.Animation.BeginStoryboard>.</span></span>  
  
## <a name="using-the-compose-handoffbehavior"></a><span data-ttu-id="26d05-242">С помощью Compose HandoffBehavior</span><span class="sxs-lookup"><span data-stu-id="26d05-242">Using the Compose HandoffBehavior</span></span>  
 <span data-ttu-id="26d05-243">При применении <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, или <xref:System.Windows.Media.Animation.AnimationClock> к свойству с помощью <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>любые <xref:System.Windows.Media.Animation.Clock> ранее связанную с ним объекты по-прежнему потребляют ресурсы системы; система управления временем не не удаляет эти часы автоматически.</span><span class="sxs-lookup"><span data-stu-id="26d05-243">When you apply a <xref:System.Windows.Media.Animation.Storyboard>, <xref:System.Windows.Media.Animation.AnimationTimeline>, or <xref:System.Windows.Media.Animation.AnimationClock> to a property by using the <xref:System.Windows.Media.Animation.HandoffBehavior.Compose> <xref:System.Windows.Media.Animation.HandoffBehavior>, any <xref:System.Windows.Media.Animation.Clock> objects previously associated with that property continue to consume system resources; the timing system does not remove the clocks automatically.</span></span>  
  
 <span data-ttu-id="26d05-244">Чтобы избежать проблем с производительностью при применении большого количества часов с помощью <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, следует удалять составные часы из анимируемого свойства после их завершения.</span><span class="sxs-lookup"><span data-stu-id="26d05-244">To avoid performance issues when you apply a large number of clocks by using <xref:System.Windows.Media.Animation.HandoffBehavior.Compose>, you should remove composing clocks from the animated property after they complete.</span></span> <span data-ttu-id="26d05-245">Существует несколько способов удаления часов:</span><span class="sxs-lookup"><span data-stu-id="26d05-245">There are several ways to remove a clock:</span></span>  
  
-   <span data-ttu-id="26d05-246">Чтобы удалить все часы из свойства, используйте <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> или <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> метод анимируемого объекта.</span><span class="sxs-lookup"><span data-stu-id="26d05-246">To remove all clocks from a property, use the <xref:System.Windows.Media.Animation.Animatable.ApplyAnimationClock%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationClock%29> or <xref:System.Windows.Media.Animation.Animatable.BeginAnimation%28System.Windows.DependencyProperty%2CSystem.Windows.Media.Animation.AnimationTimeline%29> method of the animated object.</span></span> <span data-ttu-id="26d05-247">Укажите в качестве первого параметра анимируемое свойство и `null` как второй.</span><span class="sxs-lookup"><span data-stu-id="26d05-247">Specify the property being animated as the first parameter, and `null` as the second.</span></span> <span data-ttu-id="26d05-248">При этом удаляются все часы анимации из свойства.</span><span class="sxs-lookup"><span data-stu-id="26d05-248">This removes all animation clocks from the property.</span></span>  
  
-   <span data-ttu-id="26d05-249">Чтобы удалить определенные <xref:System.Windows.Media.Animation.AnimationClock> из списка часов, используйте <xref:System.Windows.Media.Animation.Clock.Controller%2A> свойство <xref:System.Windows.Media.Animation.AnimationClock> извлекаемого <xref:System.Windows.Media.Animation.ClockController>, затем вызвать <xref:System.Windows.Media.Animation.ClockController.Remove%2A> метод <xref:System.Windows.Media.Animation.ClockController>.</span><span class="sxs-lookup"><span data-stu-id="26d05-249">To remove a specific <xref:System.Windows.Media.Animation.AnimationClock> from a list of clocks, use the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of the <xref:System.Windows.Media.Animation.AnimationClock> to retrieve a <xref:System.Windows.Media.Animation.ClockController>, then call the <xref:System.Windows.Media.Animation.ClockController.Remove%2A> method of the <xref:System.Windows.Media.Animation.ClockController>.</span></span> <span data-ttu-id="26d05-250">Обычно это делается <xref:System.Windows.Media.Animation.Clock.Completed> обработчик событий для часов.</span><span class="sxs-lookup"><span data-stu-id="26d05-250">This is typically done in the <xref:System.Windows.Media.Animation.Clock.Completed> event handler for a clock.</span></span> <span data-ttu-id="26d05-251">Обратите внимание, что только корневые часы могут управляться <xref:System.Windows.Media.Animation.ClockController>; <xref:System.Windows.Media.Animation.Clock.Controller%2A> дочерних часов вернет `null`.</span><span class="sxs-lookup"><span data-stu-id="26d05-251">Note that only root clocks can be controlled by a <xref:System.Windows.Media.Animation.ClockController>; the <xref:System.Windows.Media.Animation.Clock.Controller%2A> property of a child clock returns `null`.</span></span> <span data-ttu-id="26d05-252">Обратите внимание, что <xref:System.Windows.Media.Animation.Clock.Completed> событие не происходит, если эффективная продолжительность часов — forever.</span><span class="sxs-lookup"><span data-stu-id="26d05-252">Note also that the <xref:System.Windows.Media.Animation.Clock.Completed> event is not raised if the effective duration of the clock is forever.</span></span>  <span data-ttu-id="26d05-253">В этом случае пользователь должен определить, когда нужно вызывать <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-253">In that case, the user must determine when to call <xref:System.Windows.Media.Animation.ClockController.Remove%2A>.</span></span>  
  
 <span data-ttu-id="26d05-254">В основном это проблема для анимации объектов, имеющих длинное время жизни.</span><span class="sxs-lookup"><span data-stu-id="26d05-254">This is primarily an issue for animations on objects that have a long lifetime.</span></span>  <span data-ttu-id="26d05-255">Если объект удаляется сборщиком мусора, его часы также будут отключены, и сборщиком мусора.</span><span class="sxs-lookup"><span data-stu-id="26d05-255">When an object is garbage collected, its clocks are also disconnected and garbage collected.</span></span>  
  
 <span data-ttu-id="26d05-256">Дополнительные сведения об объектах часов см. в разделе [анимации и общие сведения о характере системы](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span><span class="sxs-lookup"><span data-stu-id="26d05-256">For more information about clock objects, see [Animation and Timing System Overview](~/docs/framework/wpf/graphics-multimedia/animation-and-timing-system-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingGroup">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingGroup BindingGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Data.BindingGroup BindingGroup" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.BindingGroup" />
      <MemberSignature Language="VB.NET" Value="Public Property BindingGroup As BindingGroup" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Data::BindingGroup ^ BindingGroup { System::Windows::Data::BindingGroup ^ get(); void set(System::Windows::Data::BindingGroup ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BindingGroup : System.Windows.Data.BindingGroup with get, set" Usage="System.Windows.FrameworkElement.BindingGroup" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingGroup</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-257">Возвращает или задает группу <see cref="T:System.Windows.Data.BindingGroup" />,  которая используется для элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-257">Gets or sets the <see cref="T:System.Windows.Data.BindingGroup" /> that is used for the element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26d05-258">Группа <see cref="T:System.Windows.Data.BindingGroup" />, используемая для элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-258">The <see cref="T:System.Windows.Data.BindingGroup" /> that is used for the element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-259">Объект <xref:System.Windows.Data.BindingGroup> может использоваться для проверки значений нескольких свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="26d05-259">A <xref:System.Windows.Data.BindingGroup> can be used to validate the values of multiple properties of an object.</span></span> <span data-ttu-id="26d05-260">Например, предположим, что приложение предлагает пользователю ввести адрес, а затем заполняет объект типа `Address`, который имеет свойства `Street`, `City`, `ZipCode`, и `Country`, со значениями, пользователь предоставляются.</span><span class="sxs-lookup"><span data-stu-id="26d05-260">For example, suppose that an application prompts the user to enter an address and then populates an object of type `Address`, which has the properties `Street`, `City`, `ZipCode`, and `Country`, with the values that the user provided.</span></span> <span data-ttu-id="26d05-261">Приложение имеет панель, которая содержит четыре <xref:System.Windows.Controls.TextBox> элементов управления, привязанных к одному из свойств объекта.</span><span class="sxs-lookup"><span data-stu-id="26d05-261">The application has a panel that contains four <xref:System.Windows.Controls.TextBox> controls, each of which is bound to one of the object’s properties.</span></span> <span data-ttu-id="26d05-262">Можно использовать <xref:System.Windows.Controls.ValidationRule> в <xref:System.Windows.Data.BindingGroup> проверяемый `Address` объекта.</span><span class="sxs-lookup"><span data-stu-id="26d05-262">You can use a <xref:System.Windows.Controls.ValidationRule> in a <xref:System.Windows.Data.BindingGroup> to validate the `Address` object.</span></span> <span data-ttu-id="26d05-263">Например <xref:System.Windows.Controls.ValidationRule> гарантирует, что ZIP-код является допустимым в стране адреса.</span><span class="sxs-lookup"><span data-stu-id="26d05-263">For example, the <xref:System.Windows.Controls.ValidationRule> can ensure that the zip code is valid for the country of the address.</span></span>  
  
 <span data-ttu-id="26d05-264">Дочерние элементы наследуют <xref:System.Windows.Data.BindingGroup> от своих родительских элементов, как и в других наследуемое свойство.</span><span class="sxs-lookup"><span data-stu-id="26d05-264">Child elements inherit the <xref:System.Windows.Data.BindingGroup> from their parent elements, just as with any other inheritable property.</span></span>  
  
<a name="dependencyPropertyInfo_BindingGroup"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="26d05-265">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="26d05-265">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="26d05-266">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="26d05-266">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.BindingGroupProperty>|  
|<span data-ttu-id="26d05-267">Значение свойства метаданных **true**</span><span class="sxs-lookup"><span data-stu-id="26d05-267">Metadata properties set to **true**</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="26d05-268">Следующие примеры являются частью приложения, которое проверяет, ли пользователь задать свойства двух объектов одинаковые значения.</span><span class="sxs-lookup"><span data-stu-id="26d05-268">The following examples are part of an application that checks whether the user has set the properties of two objects to equal values.</span></span> <span data-ttu-id="26d05-269">В первом примере создается два <xref:System.Windows.Controls.TextBox> элементов управления, каждый из которых привязан к другому источнику данных.</span><span class="sxs-lookup"><span data-stu-id="26d05-269">The first example creates two <xref:System.Windows.Controls.TextBox> controls, each of which is bound to a different data source.</span></span> <span data-ttu-id="26d05-270"><xref:System.Windows.Controls.StackPanel> Имеет <xref:System.Windows.Data.BindingGroup> , содержащий <xref:System.Windows.Controls.ValidationRule> , проверяет, что две строки равны.</span><span class="sxs-lookup"><span data-stu-id="26d05-270">The <xref:System.Windows.Controls.StackPanel> has a <xref:System.Windows.Data.BindingGroup> that contains a <xref:System.Windows.Controls.ValidationRule> that checks that the two strings are equal.</span></span>  
  
 [!code-xaml[BindingGroupSnippets#BindingGroupComplete](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml#bindinggroupcomplete)]  
  
 <span data-ttu-id="26d05-271">В следующем примере показан <xref:System.Windows.Controls.ValidationRule> , используемый в предыдущем примере.</span><span class="sxs-lookup"><span data-stu-id="26d05-271">The following example shows the <xref:System.Windows.Controls.ValidationRule> that the previous example uses.</span></span>  <span data-ttu-id="26d05-272">В <xref:System.Windows.Controls.ValidationRule.Validate%2A> переопределения метода, в примере показано получение каждого исходного объекта из <xref:System.Windows.Data.BindingGroup> и проверяет, равны ли свойства объектов.</span><span class="sxs-lookup"><span data-stu-id="26d05-272">In the <xref:System.Windows.Controls.ValidationRule.Validate%2A> method override, the example gets each source object from the <xref:System.Windows.Data.BindingGroup> and checks whether the properties of the objects are equal.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#bindinggroupnamevalidationrule)]
 [!code-vb[BindingGroupSnippets#BindingGroupNameValidationRule](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#bindinggroupnamevalidationrule)]  
  
 <span data-ttu-id="26d05-273">Для вызова <xref:System.Windows.Controls.ValidationRule>, вызовите <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="26d05-273">To invoke the <xref:System.Windows.Controls.ValidationRule>, call the <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> method.</span></span>  <span data-ttu-id="26d05-274">В следующем примере вызывается <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> при возникновении события щелчка кнопки.</span><span class="sxs-lookup"><span data-stu-id="26d05-274">The following example calls <xref:System.Windows.Data.BindingGroup.UpdateSources%2A> when the click event of the button occurs.</span></span>  
  
 [!code-csharp[BindingGroupSnippets#UpdateSourcesClick](~/samples/snippets/csharp/VS_Snippets_Wpf/BindingGroupSnippets/CSharp/Window3.xaml.cs#updatesourcesclick)]
 [!code-vb[BindingGroupSnippets#UpdateSourcesClick](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BindingGroupSnippets/visualbasic/window3.xaml.vb#updatesourcesclick)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BindingGroupProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty BindingGroupProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty BindingGroupProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.BindingGroupProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly BindingGroupProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ BindingGroupProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable BindingGroupProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.BindingGroupProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-275">Идентифицирует свойство зависимостей <see cref="P:System.Windows.FrameworkElement.BindingGroup" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-275">Identifies the <see cref="P:System.Windows.FrameworkElement.BindingGroup" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="BringIntoView">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-276">Пытается отобразить данный элемент вместе с содержащимися в нем прокручиваемыми областями.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-276">Attempts to bring this element into view, within any scrollable regions it is contained within.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BringIntoView">
      <MemberSignature Language="C#" Value="public void BringIntoView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BringIntoView() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.BringIntoView" />
      <MemberSignature Language="VB.NET" Value="Public Sub BringIntoView ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BringIntoView();" />
      <MemberSignature Language="F#" Value="member this.BringIntoView : unit -&gt; unit" Usage="frameworkElement.BringIntoView " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="26d05-277">Пытается отобразить данный элемент вместе с содержащимися в нем прокручиваемыми областями.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-277">Attempts to bring this element into view, within any scrollable regions it is contained within.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-278">Вызов этого метода, повышении <xref:System.Windows.FrameworkElement.RequestBringIntoView> события, происходящие из текущего элемента.</span><span class="sxs-lookup"><span data-stu-id="26d05-278">By calling this method, you raise a <xref:System.Windows.FrameworkElement.RequestBringIntoView> event that originates from the current element.</span></span> <span data-ttu-id="26d05-279">Это событие возникает в том случае, таким образом, чтобы оно могло быть обработано <xref:System.Windows.Controls.ScrollViewer>, или класс производного или аналогичные.</span><span class="sxs-lookup"><span data-stu-id="26d05-279">This event is raised so that it can be handled by a <xref:System.Windows.Controls.ScrollViewer>, or a derived or similar class.</span></span> <span data-ttu-id="26d05-280">Ожидаемым поведением является событие обрабатывается родительским элементом, помечено как обработанное в данных события, и источник события переводится в режим в представление через логику, внедренных в <xref:System.Windows.Controls.ScrollViewer> элемента управления.</span><span class="sxs-lookup"><span data-stu-id="26d05-280">The expected behavior is that the event is handled by the parent element, marked handled in the event data, and the source of the event is brought into view through the logic embedded in the <xref:System.Windows.Controls.ScrollViewer> control.</span></span> <span data-ttu-id="26d05-281">Ни <xref:System.Windows.FrameworkElement.RequestBringIntoView> событий ни <xref:System.Windows.FrameworkElement.BringIntoView%2A> метод передавать никакую информацию, об успехе или неудаче, отличные от, обычно событие является помечены обработано на успех.</span><span class="sxs-lookup"><span data-stu-id="26d05-281">Neither the <xref:System.Windows.FrameworkElement.RequestBringIntoView> event nor the <xref:System.Windows.FrameworkElement.BringIntoView%2A> method transmit any information about success or failure, other than that the event is typically marked handled on success.</span></span> <span data-ttu-id="26d05-282">Вызвано следующими причинами сбоя могут включать параметры элемента, например <xref:System.Windows.UIElement.Visibility%2A> выполняется некоторое значение, отличное от <xref:System.Windows.Visibility.Visible>.</span><span class="sxs-lookup"><span data-stu-id="26d05-282">Reasons for failure can include the element settings, such as <xref:System.Windows.UIElement.Visibility%2A> being some value other than <xref:System.Windows.Visibility.Visible>.</span></span>  
  
 <span data-ttu-id="26d05-283">Если вы используете подпись, которая не содержит `targetRectangle`, затем размер всего элемента (его <xref:System.Windows.UIElement.RenderSize%2A>) будет сделан видимым.</span><span class="sxs-lookup"><span data-stu-id="26d05-283">If you use the signature that does not specify a `targetRectangle`, then the entire element size (its <xref:System.Windows.UIElement.RenderSize%2A>) will be made visible.</span></span>  
  
 <span data-ttu-id="26d05-284">Вызов этого метода, вы потенциально вызовет <xref:System.Windows.Controls.ScrollContentPresenter.MakeVisible%2A> на любой родительский прокручиваемую область, которая содержит элемент.</span><span class="sxs-lookup"><span data-stu-id="26d05-284">By calling this method, you potentially will call <xref:System.Windows.Controls.ScrollContentPresenter.MakeVisible%2A> on any parent scrollable area that contains the element.</span></span> <span data-ttu-id="26d05-285">Если этот элемент не содержится в прокручиваемой области, <xref:System.Windows.FrameworkElement.RequestBringIntoView> событие по-прежнему, но будет не влияет, так как отсутствуют прослушиватели событий.</span><span class="sxs-lookup"><span data-stu-id="26d05-285">If this element is not contained in a scrollable area, the <xref:System.Windows.FrameworkElement.RequestBringIntoView> event is still raised, but there will be no effect because there are no event listeners.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26d05-286">В следующем примере реализуется обработчик для события навигации в приложении, отвечающее каждый раз, когда [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] которой осуществляется переход к фрагменту, включает в себя.</span><span class="sxs-lookup"><span data-stu-id="26d05-286">The following example implements a handler for an application navigation event that responds whenever the [!INCLUDE[TLA#tla_uri](~/includes/tlasharptla-uri-md.md)] being navigated to includes a fragment.</span></span> <span data-ttu-id="26d05-287">Фрагмент именуется в [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] следуя решетки (#), и реализованное поведение вызывает элемент, который прокручивается в представлении в фрейме.</span><span class="sxs-lookup"><span data-stu-id="26d05-287">The fragment is named in the [!INCLUDE[TLA2#tla_uri](~/includes/tla2sharptla-uri-md.md)] following the hash sign (#), and the implemented behavior causes the element to scroll into view within the frame.</span></span> <span data-ttu-id="26d05-288"><xref:System.Windows.FrameworkElement.BringIntoView%2A> и <xref:System.Windows.FrameworkElement.RequestBringIntoView> запроса, поведением прокрутки в примере.</span><span class="sxs-lookup"><span data-stu-id="26d05-288"><xref:System.Windows.FrameworkElement.BringIntoView%2A> and <xref:System.Windows.FrameworkElement.RequestBringIntoView> request that scrolling behavior in the example.</span></span>  
  
 [!code-csharp[FragmentNavigationSample#FEBringIntoView](~/samples/snippets/csharp/VS_Snippets_Wpf/FragmentNavigationSample/CSharp/MainWindow.xaml.cs#febringintoview)]
 [!code-vb[FragmentNavigationSample#FEBringIntoView](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FragmentNavigationSample/VisualBasic/MainWindow.xaml.vb#febringintoview)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ScrollViewer" />
      </Docs>
    </Member>
    <Member MemberName="BringIntoView">
      <MemberSignature Language="C#" Value="public void BringIntoView (System.Windows.Rect targetRectangle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void BringIntoView(valuetype System.Windows.Rect targetRectangle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)" />
      <MemberSignature Language="VB.NET" Value="Public Sub BringIntoView (targetRectangle As Rect)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void BringIntoView(System::Windows::Rect targetRectangle);" />
      <MemberSignature Language="F#" Value="member this.BringIntoView : System.Windows.Rect -&gt; unit" Usage="frameworkElement.BringIntoView targetRectangle" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetRectangle" Type="System.Windows.Rect" />
      </Parameters>
      <Docs>
        <param name="targetRectangle">
          <span data-ttu-id="26d05-289">Указанный размер элемента, который также следует отобразить.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-289">Specified size of the element that should also be brought into view.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26d05-290">Пытается отобразить указанный размер области данного элемента вместе с содержащимися в нем прокручиваемыми областями.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-290">Attempts to bring the provided region size of this element into view, within any scrollable regions it is contained within.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-291">Вызов этого метода, повышении <xref:System.Windows.FrameworkElement.RequestBringIntoView> события, происходящие из текущего элемента.</span><span class="sxs-lookup"><span data-stu-id="26d05-291">By calling this method, you raise a <xref:System.Windows.FrameworkElement.RequestBringIntoView> event that originates from the current element.</span></span> <span data-ttu-id="26d05-292">Это событие возникает в том случае, таким образом, чтобы оно могло быть обработано <xref:System.Windows.Controls.ScrollViewer>, или класс производного или аналогичные.</span><span class="sxs-lookup"><span data-stu-id="26d05-292">This event is raised so that it can be handled by a <xref:System.Windows.Controls.ScrollViewer>, or a derived or similar class.</span></span> <span data-ttu-id="26d05-293">Ожидаемым поведением является событие обрабатывается родительским элементом, помечено как обработанное в данных события, и источник события переводится в режим в представление через логику, внедренных в <xref:System.Windows.Controls.ScrollViewer> элемента управления.</span><span class="sxs-lookup"><span data-stu-id="26d05-293">The expected behavior is that the event is handled by the parent element, marked handled in the event data, and the source of the event is brought into view through the logic embedded in the <xref:System.Windows.Controls.ScrollViewer> control.</span></span> <span data-ttu-id="26d05-294">Ни <xref:System.Windows.FrameworkElement.RequestBringIntoView> событий ни <xref:System.Windows.FrameworkElement.BringIntoView%2A> метод передавать никакую информацию, об успехе или неудаче, отличные от, обычно событие является помечены обработано на успех.</span><span class="sxs-lookup"><span data-stu-id="26d05-294">Neither the <xref:System.Windows.FrameworkElement.RequestBringIntoView> event nor the <xref:System.Windows.FrameworkElement.BringIntoView%2A> method transmit any information about success or failure, other than that the event is typically marked handled on success.</span></span> <span data-ttu-id="26d05-295">Вызвано следующими причинами сбоя могут включать параметры элемента, например <xref:System.Windows.UIElement.Visibility%2A> выполняется некоторое значение, отличное от <xref:System.Windows.Visibility.Visible>.</span><span class="sxs-lookup"><span data-stu-id="26d05-295">Reasons for failure can include the element settings, such as <xref:System.Windows.UIElement.Visibility%2A> being some value other than <xref:System.Windows.Visibility.Visible>.</span></span>  
  
 <span data-ttu-id="26d05-296">Если вы используете подпись, которая не содержит `targetRectangle`, затем размер всего элемента (его <xref:System.Windows.UIElement.RenderSize%2A>) будет сделан видимым.</span><span class="sxs-lookup"><span data-stu-id="26d05-296">If you use the signature that does not specify a `targetRectangle`, then the entire element size (its <xref:System.Windows.UIElement.RenderSize%2A>) will be made visible.</span></span>  
  
 <span data-ttu-id="26d05-297">Вызов этого метода, вы потенциально вызовет <xref:System.Windows.Controls.ScrollContentPresenter.MakeVisible%2A> на любой родительский прокручиваемую область, которая содержит элемент.</span><span class="sxs-lookup"><span data-stu-id="26d05-297">By calling this method, you potentially will call <xref:System.Windows.Controls.ScrollContentPresenter.MakeVisible%2A> on any parent scrollable area that contains the element.</span></span> <span data-ttu-id="26d05-298">Если этот элемент не содержится в прокручиваемой области, <xref:System.Windows.FrameworkElement.RequestBringIntoView> событие по-прежнему, но будет не влияет, так как отсутствуют прослушиватели событий.</span><span class="sxs-lookup"><span data-stu-id="26d05-298">If this element is not contained in a scrollable area, the <xref:System.Windows.FrameworkElement.RequestBringIntoView> event is still raised, but there will be no effect because there are no event listeners.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26d05-299">Следующий пример имеет большой рисунок в ограниченной области прокрутки.</span><span class="sxs-lookup"><span data-stu-id="26d05-299">The following example has a large graphic in a constrained scrolling region.</span></span> <span data-ttu-id="26d05-300">На кнопке на странице есть обработчик, который Прокручивает представление определенной областью большого изображения.</span><span class="sxs-lookup"><span data-stu-id="26d05-300">A button on the page has a handler that scrolls the view to a particular region of the large graphic.</span></span>  
  
 [!code-xaml[BaseElementsSmorgasbord#BringIntoViewRectMarkup](~/samples/snippets/csharp/VS_Snippets_Wpf/BaseElementsSmorgasbord/CSharp/Page1.xaml#bringintoviewrectmarkup)]  
  
 [!code-csharp[BaseElementsSmorgasbord#BringIntoViewRectCode](~/samples/snippets/csharp/VS_Snippets_Wpf/BaseElementsSmorgasbord/CSharp/Page1.xaml.cs#bringintoviewrectcode)]
 [!code-vb[BaseElementsSmorgasbord#BringIntoViewRectCode](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BaseElementsSmorgasbord/visualbasic/page1.xaml.vb#bringintoviewrectcode)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.FlowDocumentScrollViewer" />
      </Docs>
    </Member>
    <Member MemberName="ContextMenu">
      <MemberSignature Language="C#" Value="public System.Windows.Controls.ContextMenu ContextMenu { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Controls.ContextMenu ContextMenu" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.ContextMenu" />
      <MemberSignature Language="VB.NET" Value="Public Property ContextMenu As ContextMenu" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Controls::ContextMenu ^ ContextMenu { System::Windows::Controls::ContextMenu ^ get(); void set(System::Windows::Controls::ContextMenu ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextMenu : System.Windows.Controls.ContextMenu with get, set" Usage="System.Windows.FrameworkElement.ContextMenu" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ContextMenu</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-301">Возвращает или задает элемент контекстного меню, который должен отображаться каждый раз при вызове контекстного меню через [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] из этого элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-301">Gets or sets the context menu element that should appear whenever the context menu is requested through [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] from within this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26d05-302">Контекстное меню, назначенное этому элементу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-302">The context menu assigned to this element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-303"><xref:System.Windows.Controls.ContextMenu> сам по себе является <xref:System.Windows.FrameworkElement> производного класса, и технически возможно для <xref:System.Windows.Controls.ContextMenu> сам иметь <xref:System.Windows.FrameworkElement.ContextMenu%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="26d05-303"><xref:System.Windows.Controls.ContextMenu> itself is a <xref:System.Windows.FrameworkElement> derived class, and it is technically possible for <xref:System.Windows.Controls.ContextMenu> itself to have a <xref:System.Windows.FrameworkElement.ContextMenu%2A> property.</span></span> <span data-ttu-id="26d05-304">Тем не менее это создает путаницу контекстное меню удобство работы пользователей, и это не рекомендуется.</span><span class="sxs-lookup"><span data-stu-id="26d05-304">However, this creates a confusing context menu experience for the user and this practice is not recommended.</span></span>  
  
<a name="dependencyPropertyInfo_ContextMenu"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="26d05-305">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="26d05-305">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="26d05-306">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="26d05-306">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.ContextMenuProperty>|  
|<span data-ttu-id="26d05-307">Значение свойства метаданных `true`</span><span class="sxs-lookup"><span data-stu-id="26d05-307">Metadata properties set to `true`</span></span>|<span data-ttu-id="26d05-308">Нет</span><span class="sxs-lookup"><span data-stu-id="26d05-308">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenu" />
      </Docs>
    </Member>
    <Member MemberName="ContextMenuClosing">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.ContextMenuEventHandler ContextMenuClosing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.ContextMenuEventHandler ContextMenuClosing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkElement.ContextMenuClosing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextMenuClosing As ContextMenuEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::ContextMenuEventHandler ^ ContextMenuClosing;" />
      <MemberSignature Language="F#" Value="member this.ContextMenuClosing : System.Windows.Controls.ContextMenuEventHandler " Usage="member this.ContextMenuClosing : System.Windows.Controls.ContextMenuEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ContextMenuEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-309">Происходит непосредственно перед закрытием какого-либо контекстного меню в элементе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-309">Occurs just before any context menu on the element is closed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-310">Для подавления закрытия контекстных меню обработчики события следует пометить как обработанное.</span><span class="sxs-lookup"><span data-stu-id="26d05-310">To suppress closing context menus, handlers of the event should mark it as handled.</span></span>  
  
 <span data-ttu-id="26d05-311">Чтобы использовать это событие как <xref:System.Windows.EventTrigger> в стиле, необходимо сослаться на определение базовой службой события:</span><span class="sxs-lookup"><span data-stu-id="26d05-311">To use this event as an <xref:System.Windows.EventTrigger> in a style, you must reference the underlying service's definition of the event:</span></span>  
  
 [!code-xaml[CorePseudocode#FEContextMenuClosing](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/pseudocode.xaml#fecontextmenuclosing)]  
  
 <span data-ttu-id="26d05-312">(Такое использование не требуются, поскольку реализация событий на <xref:System.Windows.FrameworkElement> , предоставляет базовые события службы не были сопоставлены <xref:System.Windows.FrameworkElement.ContextMenuClosing> идентификатор таким образом, что его можно использовать как триггер).</span><span class="sxs-lookup"><span data-stu-id="26d05-312">(This usage is required because the event implementation on <xref:System.Windows.FrameworkElement> that exposes the underlying service event does not map the <xref:System.Windows.FrameworkElement.ContextMenuClosing> identifier such that you can use it as a trigger).</span></span>  
  
 <span data-ttu-id="26d05-313"><xref:System.Windows.Controls.ContextMenu> сам по себе является <xref:System.Windows.FrameworkElement> производного класса, но <xref:System.Windows.FrameworkElement.ContextMenuClosing> событие не возникнет, контекстное меню напрямую.</span><span class="sxs-lookup"><span data-stu-id="26d05-313"><xref:System.Windows.Controls.ContextMenu> itself is a <xref:System.Windows.FrameworkElement> derived class, but the <xref:System.Windows.FrameworkElement.ContextMenuClosing> event will not be raised by a context menu directly.</span></span> <span data-ttu-id="26d05-314">Вместо этого событие инициируется элементом, который «владеет» в контекстном меню, как свойство и только тогда, когда пользователь пытается закрыть контекстное меню в пользовательском Интерфейсе.</span><span class="sxs-lookup"><span data-stu-id="26d05-314">Instead, the event is raised from the element that "owns" the context menu as a property and is only raised when a user attempts to close a context menu in the UI.</span></span> <span data-ttu-id="26d05-315">Тем не менее существует возможность <xref:System.Windows.Controls.ContextMenu> сам иметь <xref:System.Windows.FrameworkElement.ContextMenu%2A> свойство (вложенные контекстное меню).</span><span class="sxs-lookup"><span data-stu-id="26d05-315">However it is possible for <xref:System.Windows.Controls.ContextMenu> itself to have a <xref:System.Windows.FrameworkElement.ContextMenu%2A> property (a nested context menu).</span></span> <span data-ttu-id="26d05-316">В этом случае <xref:System.Windows.Controls.ContextMenu> действительно является владельцем вложенного <xref:System.Windows.Controls.ContextMenu> и может вызывать события, с источником события, что вложенное содержимое для меню.</span><span class="sxs-lookup"><span data-stu-id="26d05-316">In this case the <xref:System.Windows.Controls.ContextMenu> really does own the nested <xref:System.Windows.Controls.ContextMenu> and might raise the event, with the source of the event being the nested context menu.</span></span>  
  
 <span data-ttu-id="26d05-317"><xref:System.Windows.Controls.ContextMenu> Сам класс также имеет аналогичное событие (<xref:System.Windows.Controls.ContextMenu.Closed>), но <xref:System.Windows.Controls.ContextMenu.Closed> событий не предоставляет вам возможность отмены действия пользователя.</span><span class="sxs-lookup"><span data-stu-id="26d05-317">The <xref:System.Windows.Controls.ContextMenu> class itself also has a similar event (<xref:System.Windows.Controls.ContextMenu.Closed>) but the <xref:System.Windows.Controls.ContextMenu.Closed> event does not provide you the opportunity to cancel the user action.</span></span>  
  
<a name="routedEventInfo_ContextMenuClosing"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="26d05-318">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="26d05-318">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="26d05-319">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="26d05-319">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.ContextMenuClosingEvent>|  
|<span data-ttu-id="26d05-320">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="26d05-320">Routing strategy</span></span>|<span data-ttu-id="26d05-321">Восходящая маршрутизация</span><span class="sxs-lookup"><span data-stu-id="26d05-321">Bubbling</span></span>|  
|<span data-ttu-id="26d05-322">делегат</span><span class="sxs-lookup"><span data-stu-id="26d05-322">Delegate</span></span>|<xref:System.Windows.Controls.ContextMenuEventHandler>|  
  
-   <span data-ttu-id="26d05-323">Переопределить <xref:System.Windows.FrameworkElement.OnContextMenuClosing%2A> реализовать обработчик класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="26d05-323">Override <xref:System.Windows.FrameworkElement.OnContextMenuClosing%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenu" />
      </Docs>
    </Member>
    <Member MemberName="ContextMenuClosingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ContextMenuClosingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ContextMenuClosingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.ContextMenuClosingEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContextMenuClosingEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ContextMenuClosingEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ContextMenuClosingEvent : System.Windows.RoutedEvent" Usage="System.Windows.FrameworkElement.ContextMenuClosingEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-324">Идентифицирует направленное событие <see cref="E:System.Windows.FrameworkElement.ContextMenuClosing" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-324">Identifies the <see cref="E:System.Windows.FrameworkElement.ContextMenuClosing" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-325">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="26d05-325">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="26d05-326">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="26d05-326">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="26d05-327">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="26d05-327">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="26d05-328">Дополнительные сведения о регистрации маршрутизированных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-328">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="26d05-329">Дополнительные сведения об использовании идентификаторов маршрутизируемых событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-329">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextMenuOpening">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.ContextMenuEventHandler ContextMenuOpening;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.ContextMenuEventHandler ContextMenuOpening" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkElement.ContextMenuOpening" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextMenuOpening As ContextMenuEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::ContextMenuEventHandler ^ ContextMenuOpening;" />
      <MemberSignature Language="F#" Value="member this.ContextMenuOpening : System.Windows.Controls.ContextMenuEventHandler " Usage="member this.ContextMenuOpening : System.Windows.Controls.ContextMenuEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ContextMenuEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-330">Происходит при открытии какого-либо контекстного меню в элементе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-330">Occurs when any context menu on the element is opened.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-331">Вручную открыть контекстные меню, обработчики событий следует помечать соответствующее событие как обработанное.</span><span class="sxs-lookup"><span data-stu-id="26d05-331">To manually open context menus, handlers of the events should mark the relevant event as handled.</span></span> <span data-ttu-id="26d05-332">В противном случае существующее значение <xref:System.Windows.FrameworkElement.ContextMenu%2A> свойство будет использоваться для автоматического открытия контекстного меню.</span><span class="sxs-lookup"><span data-stu-id="26d05-332">Otherwise, the existing value of the <xref:System.Windows.FrameworkElement.ContextMenu%2A> property will be used to automatically open a context menu.</span></span> <span data-ttu-id="26d05-333">Маркировка события как обработанного эффективно отменит действие по умолчанию и может быть возможность сбросить значение <xref:System.Windows.FrameworkElement.ContextMenu%2A> свойство и откройте новый <xref:System.Windows.Controls.ContextMenu>.</span><span class="sxs-lookup"><span data-stu-id="26d05-333">Marking the event handled will effectively cancel the default action, and could be an opportunity to reset the value of the <xref:System.Windows.FrameworkElement.ContextMenu%2A> property and then open the new <xref:System.Windows.Controls.ContextMenu>.</span></span> <span data-ttu-id="26d05-334">Тем не менее есть ошибки синхронизации, которые следует учитывать.</span><span class="sxs-lookup"><span data-stu-id="26d05-334">However, there is a timing issue you should be aware of.</span></span> <span data-ttu-id="26d05-335">Чтобы полностью заменить контекстное меню способом <xref:System.Windows.FrameworkElement.ContextMenuOpening> обработчик, начальной контекстное меню не должно быть null или пустым.</span><span class="sxs-lookup"><span data-stu-id="26d05-335">In order to completely replace the context menu through a <xref:System.Windows.FrameworkElement.ContextMenuOpening> handler, the initial context menu must not be null / empty.</span></span> <span data-ttu-id="26d05-336">Кроме того может потребоваться обработать событие и затем вручную открыть новое контекстное меню.</span><span class="sxs-lookup"><span data-stu-id="26d05-336">Alternatively, you might need to handle the event and then manually open a new context menu.</span></span> <span data-ttu-id="26d05-337">Дополнительные сведения см. в разделе [как: обработка события ContextMenuOpening](~/docs/framework/wpf/advanced/how-to-handle-the-contextmenuopening-event.md).</span><span class="sxs-lookup"><span data-stu-id="26d05-337">For details, see [How to: Handle the ContextMenuOpening Event](~/docs/framework/wpf/advanced/how-to-handle-the-contextmenuopening-event.md).</span></span>  
  
 <span data-ttu-id="26d05-338">Чтобы использовать это событие как <xref:System.Windows.EventTrigger> в стиле, необходимо сослаться на основное присоединенное событие:</span><span class="sxs-lookup"><span data-stu-id="26d05-338">To use this event as an <xref:System.Windows.EventTrigger> in a style, you must reference the underlying attached event:</span></span>  
  
 [!code-xaml[CorePseudocode#FEContextMenuOpening](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/pseudocode.xaml#fecontextmenuopening)]  
  
 <span data-ttu-id="26d05-339">(Такое использование не требуются, поскольку реализация событий на <xref:System.Windows.FrameworkElement> , предоставляет базовые события службы не были сопоставлены <xref:System.Windows.FrameworkElement.ContextMenuOpening> идентификатор таким образом, что его можно использовать в триггерах).</span><span class="sxs-lookup"><span data-stu-id="26d05-339">(This usage is required because the event implementation on <xref:System.Windows.FrameworkElement> that exposes the underlying service event does not map the <xref:System.Windows.FrameworkElement.ContextMenuOpening> identifier such that you can use it in triggers).</span></span>  
  
 <span data-ttu-id="26d05-340"><xref:System.Windows.Controls.ContextMenu> сам по себе является <xref:System.Windows.FrameworkElement> производного класса, но это событие не будет вызываться в контекстном меню, открываемом в качестве источника.</span><span class="sxs-lookup"><span data-stu-id="26d05-340"><xref:System.Windows.Controls.ContextMenu> itself is a <xref:System.Windows.FrameworkElement> derived class, but this event will not be raised from the context menu being opened as a source.</span></span> <span data-ttu-id="26d05-341">События из элемента, «владеет» в контекстном меню, как свойство и только тогда, когда пользователь пытается открыть контекстное меню в пользовательском Интерфейсе.</span><span class="sxs-lookup"><span data-stu-id="26d05-341">The event is raised from the element that "owns" the context menu as a property and is only raised when a user attempts to open a context menu in the UI.</span></span> <span data-ttu-id="26d05-342">Существует возможность <xref:System.Windows.Controls.ContextMenu> сам иметь <xref:System.Windows.FrameworkElement.ContextMenu%2A> свойство, но следует избегать в этом сценарии (Дополнительные сведения см. в разделе <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="26d05-342">It is possible for <xref:System.Windows.Controls.ContextMenu> itself to have a <xref:System.Windows.FrameworkElement.ContextMenu%2A> property, but you should avoid this scenario (for details, see <xref:System.Windows.FrameworkElement.ContextMenu%2A?displayProperty=nameWithType>).</span></span>  
  
 <span data-ttu-id="26d05-343"><xref:System.Windows.Controls.ContextMenu> Сам класс также имеет аналогичное событие (<xref:System.Windows.Controls.ContextMenu.Opened>), но <xref:System.Windows.Controls.ContextMenu.Opened> не предоставляет вам возможность отмены действия пользователя.</span><span class="sxs-lookup"><span data-stu-id="26d05-343">The <xref:System.Windows.Controls.ContextMenu> class itself also has a similar event (<xref:System.Windows.Controls.ContextMenu.Opened>) but <xref:System.Windows.Controls.ContextMenu.Opened> does not provide you the opportunity to cancel the user action.</span></span>  
  
<a name="routedEventInfo_ContextMenuOpening"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="26d05-344">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="26d05-344">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="26d05-345">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="26d05-345">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.ContextMenuOpeningEvent>|  
|<span data-ttu-id="26d05-346">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="26d05-346">Routing strategy</span></span>|<span data-ttu-id="26d05-347">Восходящая маршрутизация</span><span class="sxs-lookup"><span data-stu-id="26d05-347">Bubbling</span></span>|  
|<span data-ttu-id="26d05-348">делегат</span><span class="sxs-lookup"><span data-stu-id="26d05-348">Delegate</span></span>|<xref:System.Windows.Controls.ContextMenuEventHandler>|  
  
-   <span data-ttu-id="26d05-349">Переопределить <xref:System.Windows.FrameworkElement.OnContextMenuOpening%2A> реализовать обработчик класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="26d05-349">Override <xref:System.Windows.FrameworkElement.OnContextMenuOpening%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ContextMenu" />
      </Docs>
    </Member>
    <Member MemberName="ContextMenuOpeningEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ContextMenuOpeningEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ContextMenuOpeningEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.ContextMenuOpeningEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContextMenuOpeningEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ContextMenuOpeningEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ContextMenuOpeningEvent : System.Windows.RoutedEvent" Usage="System.Windows.FrameworkElement.ContextMenuOpeningEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-350">Идентифицирует направленное событие <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-350">Identifies the <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-351">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="26d05-351">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="26d05-352">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="26d05-352">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="26d05-353">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="26d05-353">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="26d05-354">Дополнительные сведения о регистрации маршрутизированных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-354">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="26d05-355">Дополнительные сведения об использовании идентификаторов маршрутизируемых событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-355">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextMenuProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ContextMenuProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ContextMenuProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.ContextMenuProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ContextMenuProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ContextMenuProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ContextMenuProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.ContextMenuProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-356">Идентифицирует свойство зависимостей <see cref="P:System.Windows.FrameworkElement.ContextMenu" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-356">Identifies the <see cref="P:System.Windows.FrameworkElement.ContextMenu" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Cursor">
      <MemberSignature Language="C#" Value="public System.Windows.Input.Cursor Cursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.Cursor Cursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.Cursor" />
      <MemberSignature Language="VB.NET" Value="Public Property Cursor As Cursor" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::Cursor ^ Cursor { System::Windows::Input::Cursor ^ get(); void set(System::Windows::Input::Cursor ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Cursor : System.Windows.Input.Cursor with get, set" Usage="System.Windows.FrameworkElement.Cursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.Cursor</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-357">Получение или установка курсора, который отображается при наведении указателя мыши на этот элемент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-357">Gets or sets the cursor that displays when the mouse pointer is over this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26d05-358">Отображаемый курсор.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-358">The cursor to display.</span>
          </span>
          <span data-ttu-id="26d05-359">Значение по умолчанию определяется как <see langword="null" /> для данного свойства зависимостей.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-359">The default value is defined as <see langword="null" /> per this dependency property.</span>
          </span>
          <span data-ttu-id="26d05-360">Однако на практике значение по умолчанию во время выполнения зависит от множества факторов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-360">However, the practical default at run time will come from a variety of factors.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-361">Если это свойство задается в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] процессора полагается на преобразования типов для <xref:System.Windows.Input.Cursor> класса для вычисления строки.</span><span class="sxs-lookup"><span data-stu-id="26d05-361">When you set this property in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] processor relies on type conversion for the <xref:System.Windows.Input.Cursor> class to evaluate the string.</span></span> <span data-ttu-id="26d05-362">Должно быть введенная строка <xref:System.Windows.Input.CursorType> значение.</span><span class="sxs-lookup"><span data-stu-id="26d05-362">The provided string should evaluate to a <xref:System.Windows.Input.CursorType> value.</span></span> <span data-ttu-id="26d05-363">Подробные сведения см. в разделе <xref:System.Windows.Input.Cursor>.</span><span class="sxs-lookup"><span data-stu-id="26d05-363">See <xref:System.Windows.Input.Cursor> for details.</span></span>  
  
 <span data-ttu-id="26d05-364">Ли курсор, как установить это свойство будет или не выводится, когда указатель мыши находится над данным элементом зависит также от значения <xref:System.Windows.FrameworkElement.ForceCursor%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="26d05-364">Whether the cursor as established by this property will or will not display when the mouse pointer is over this element is also dependent on the value of the <xref:System.Windows.FrameworkElement.ForceCursor%2A> property.</span></span> <span data-ttu-id="26d05-365">Кроме того вопросы, связанные с событиями, как активное перетаскивание, захват мыши, режимы редактирования текста в элементы управления и т. д., также влияет на курсор с высоким приоритетом, чем значение, указанное в этом свойстве.</span><span class="sxs-lookup"><span data-stu-id="26d05-365">Also, event-related considerations such as an active drag, mouse capture, text editing modes within controls, and so on, will also affect the cursor with higher priority than the value you specify in this property.</span></span>  
  
 <span data-ttu-id="26d05-366">Чтобы отменить поведение этого свойства к стандартному, установите его в `null` еще раз.</span><span class="sxs-lookup"><span data-stu-id="26d05-366">To revert the behavior of setting this property to the eventual default, set it to `null` again.</span></span>  
  
 <span data-ttu-id="26d05-367">`null` По умолчанию действительно означает, что определение практического значения курсора здесь отложено и должны быть получены из другого источника.</span><span class="sxs-lookup"><span data-stu-id="26d05-367">The `null` default really means that determination of the practical cursor value is deferred here and should be obtained from elsewhere.</span></span> <span data-ttu-id="26d05-368">Если представления без программных значений, из любого источника, курсор по умолчанию это визуально более [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] приложения будет стрелкой.</span><span class="sxs-lookup"><span data-stu-id="26d05-368">If presented without programmatic values from any source, the default cursor that is visually over a [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] application will be an arrow.</span></span> <span data-ttu-id="26d05-369">Тем не менее, временных курсор изменяется не настроены для <xref:System.Windows.FrameworkElement.Cursor%2A> значения элементов, если они передаются.</span><span class="sxs-lookup"><span data-stu-id="26d05-369">However, the transient cursor changes are not set to the <xref:System.Windows.FrameworkElement.Cursor%2A> values of the elements when they are passed over.</span></span> <span data-ttu-id="26d05-370"><xref:System.Windows.FrameworkElement.Cursor%2A> Свойство будет только отчет не значения null в случаях, где он фактически было задано, например посредством кода или стиль.</span><span class="sxs-lookup"><span data-stu-id="26d05-370">The <xref:System.Windows.FrameworkElement.Cursor%2A> property will only report non null values in cases where it was actually set, for instance through code or a style.</span></span> <span data-ttu-id="26d05-371">Каждое движение указателя мыши над [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] приложение создает событие <xref:System.Windows.UIElement.QueryCursor> событий.</span><span class="sxs-lookup"><span data-stu-id="26d05-371">Each movement of the mouse over a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] application raises a <xref:System.Windows.UIElement.QueryCursor> event.</span></span> <span data-ttu-id="26d05-372">Событие и любой элемент в маршруте имеет возможность обработать событие и установите для параметра курсора с помощью аргументов этого события.</span><span class="sxs-lookup"><span data-stu-id="26d05-372">The event bubbles, and any element along the route has the opportunity to handle the event and to set the value of the cursor through the arguments of this event.</span></span> <span data-ttu-id="26d05-373">Это механизм обеспечивает визуальное отображение курсора в большинстве случаев.</span><span class="sxs-lookup"><span data-stu-id="26d05-373">This is the mechanism that produces the visually apparent cursor in most cases.</span></span> <span data-ttu-id="26d05-374">Если <xref:System.Windows.UIElement.QueryCursor> обработчик возвращает результат курсора, а затем тот факт, что событие обрабатывается и имеет измененное значение в аргументах имеет приоритет над значением <xref:System.Windows.FrameworkElement.Cursor%2A> свойство на любом уровне, если только не <xref:System.Windows.FrameworkElement.ForceCursor%2A> имеет значение.</span><span class="sxs-lookup"><span data-stu-id="26d05-374">If a <xref:System.Windows.UIElement.QueryCursor> handler returns a cursor result, then the fact that the event is handled and has a changed value in the arguments takes precedence over the value of the <xref:System.Windows.FrameworkElement.Cursor%2A> property at any level, unless <xref:System.Windows.FrameworkElement.ForceCursor%2A> is set.</span></span>  
  
 <span data-ttu-id="26d05-375">Если не создается пользовательский курсор, вы обычно значение этого свойства значение статического свойства <xref:System.Windows.Input.Cursors> класса.</span><span class="sxs-lookup"><span data-stu-id="26d05-375">If not are not creating a custom cursor, you typically set this property to a static property value of the <xref:System.Windows.Input.Cursors> class.</span></span> <span data-ttu-id="26d05-376">Параметр <xref:System.Windows.FrameworkElement.Cursor%2A> в коде требуется одно из следующих:</span><span class="sxs-lookup"><span data-stu-id="26d05-376">Setting <xref:System.Windows.FrameworkElement.Cursor%2A> in code requires one of the following:</span></span>  
  
-   <span data-ttu-id="26d05-377">Вызовите <xref:System.Windows.Input.Cursor> конструктор, чтобы получить <xref:System.Windows.Input.Cursor> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="26d05-377">Call the <xref:System.Windows.Input.Cursor> constructor to get a <xref:System.Windows.Input.Cursor> instance.</span></span> <span data-ttu-id="26d05-378">Оба подписи <xref:System.Windows.Input.Cursor> использовать конструктор потоков или файлов, в ближайшем будущем, для которого создается <xref:System.Windows.Input.Cursor> объект для пользовательский курсор.</span><span class="sxs-lookup"><span data-stu-id="26d05-378">Both signatures of the <xref:System.Windows.Input.Cursor> constructor use streams or files, in anticipation that you are creating the <xref:System.Windows.Input.Cursor> object for a custom cursor.</span></span>  
  
-   <span data-ttu-id="26d05-379">Используйте <xref:System.Windows.Input.CursorConverter> класса и его <xref:System.Windows.Input.CursorConverter.ConvertFrom%2A> метод для указания курсора по <xref:System.Windows.Input.CursorType>, или строку, которая может быть <xref:System.Windows.Input.CursorType>и приведите вернуться к <xref:System.Windows.Input.Cursor>.</span><span class="sxs-lookup"><span data-stu-id="26d05-379">Use the <xref:System.Windows.Input.CursorConverter> class and its <xref:System.Windows.Input.CursorConverter.ConvertFrom%2A> method to specify a cursor by <xref:System.Windows.Input.CursorType>, or a string that can evaluate to a <xref:System.Windows.Input.CursorType>, and cast the return to <xref:System.Windows.Input.Cursor>.</span></span>  
  
 <span data-ttu-id="26d05-380">Параметр <xref:System.Windows.Input.Cursor> пользовательское значение не включен в режиме частичного доверия.</span><span class="sxs-lookup"><span data-stu-id="26d05-380">Setting the <xref:System.Windows.Input.Cursor> to a custom value is not enabled in partial trust.</span></span> <span data-ttu-id="26d05-381">Дополнительные сведения о пользовательских курсоров, см. в разделе [Общие сведения о входных данных](~/docs/framework/wpf/advanced/input-overview.md).</span><span class="sxs-lookup"><span data-stu-id="26d05-381">For more information on custom cursors, see [Input Overview](~/docs/framework/wpf/advanced/input-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_Cursor"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="26d05-382">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="26d05-382">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="26d05-383">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="26d05-383">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.CursorProperty>|  
|<span data-ttu-id="26d05-384">Значение свойства метаданных `true`</span><span class="sxs-lookup"><span data-stu-id="26d05-384">Metadata properties set to `true`</span></span>|<span data-ttu-id="26d05-385">Нет</span><span class="sxs-lookup"><span data-stu-id="26d05-385">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="26d05-386">Приведенный ниже показано, как намеренную установку графического изображения курсора.</span><span class="sxs-lookup"><span data-stu-id="26d05-386">The following example shows how to deliberately set the cursor graphic.</span></span>  
  
 [!code-csharp[cursors#ChangeCursorsSample](~/samples/snippets/csharp/VS_Snippets_Wpf/cursors/CSharp/Window1.xaml.cs#changecursorssample)]
 [!code-vb[cursors#ChangeCursorsSample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/cursors/VisualBasic/Window1.xaml.vb#changecursorssample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.UIElement.QueryCursor" />
        <altmember cref="P:System.Windows.FrameworkElement.ForceCursor" />
        <altmember cref="P:System.Windows.Input.Mouse.OverrideCursor" />
      </Docs>
    </Member>
    <Member MemberName="CursorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty CursorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty CursorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.CursorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CursorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ CursorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable CursorProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.CursorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-387">Идентифицирует свойство зависимостей <see cref="P:System.Windows.FrameworkElement.Cursor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-387">Identifies the <see cref="P:System.Windows.FrameworkElement.Cursor" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataContext">
      <MemberSignature Language="C#" Value="public object DataContext { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataContext" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.DataContext" />
      <MemberSignature Language="VB.NET" Value="Public Property DataContext As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ DataContext { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataContext : obj with get, set" Usage="System.Windows.FrameworkElement.DataContext" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-388">Получает или задает контекст данных для элемента, участвующего в привязке данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-388">Gets or sets the data context for an element when it participates in data binding.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26d05-389">Объект, используемый в качестве контекста данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-389">The object to use as data context.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-390">*Контекст данных* — это понятие, позволяет элементам наследовать сведения от своих родительских элементов об источнике данных, который используется для привязки, а также другие характеристики привязки, например путь.</span><span class="sxs-lookup"><span data-stu-id="26d05-390">*Data context* is a concept that allows elements to inherit information from their parent elements about the data source that is used for binding, as well as other characteristics of the binding, such as the path.</span></span>  
  
 <span data-ttu-id="26d05-391">Контекст данных можно задать непосредственно в объект .NET с привязками, оценки свойств этого объекта.</span><span class="sxs-lookup"><span data-stu-id="26d05-391">Data context can be set directly to a .NET object, with the bindings evaluating to properties of that object.</span></span> <span data-ttu-id="26d05-392">Кроме того, можно задать контекст данных <xref:System.Windows.Data.DataSourceProvider> объекта.</span><span class="sxs-lookup"><span data-stu-id="26d05-392">Alternatively, you can set the data context to a <xref:System.Windows.Data.DataSourceProvider> object.</span></span>  
  
 <span data-ttu-id="26d05-393">Это свойство зависимостей наследует значения свойств.</span><span class="sxs-lookup"><span data-stu-id="26d05-393">This dependency property inherits property values.</span></span> <span data-ttu-id="26d05-394">Если существуют дочерние элементы без других значений для <xref:System.Windows.FrameworkElement.DataContext%2A> установленное при помощи локальных значений или стили, то система свойств будет задать значение должно быть <xref:System.Windows.FrameworkElement.DataContext%2A> значение ближайшего родительского элемента с назначенным данным значением.</span><span class="sxs-lookup"><span data-stu-id="26d05-394">If there are child elements without other values for <xref:System.Windows.FrameworkElement.DataContext%2A> established through local values or styles, then the property system will set the value to be the <xref:System.Windows.FrameworkElement.DataContext%2A> value of the nearest parent element with this value assigned.</span></span>  
  
 <span data-ttu-id="26d05-395">Кроме того, можно использовать один из следующих свойств объекта <xref:System.Windows.Data.Binding> класс, чтобы явно указать источник привязки:</span><span class="sxs-lookup"><span data-stu-id="26d05-395">Alternatively, you can use one of the following properties of the <xref:System.Windows.Data.Binding> class to specify the binding source explicitly:</span></span>
  
    - <span data-ttu-id="26d05-396"><xref:System.Windows.Data.Binding.ElementName%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-396"><xref:System.Windows.Data.Binding.ElementName%2A>.</span></span>
    - <span data-ttu-id="26d05-397"><xref:System.Windows.Data.Binding.Source%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-397"><xref:System.Windows.Data.Binding.Source%2A>.</span></span>
    - <span data-ttu-id="26d05-398"><xref:System.Windows.Data.Binding.RelativeSource%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-398"><xref:System.Windows.Data.Binding.RelativeSource%2A>.</span></span> 
  
  <span data-ttu-id="26d05-399">Дополнительные сведения см. в разделе [как: Указание источника привязки](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md).</span><span class="sxs-lookup"><span data-stu-id="26d05-399">For more information, see [How to: Specify the Binding Source](~/docs/framework/wpf/data/how-to-specify-the-binding-source.md).</span></span>  
  
 <span data-ttu-id="26d05-400">В XAML <xref:System.Windows.FrameworkElement.DataContext%2A> наиболее обычно устанавливается в виде <xref:System.Windows.Data.Binding> объявления.</span><span class="sxs-lookup"><span data-stu-id="26d05-400">In XAML, <xref:System.Windows.FrameworkElement.DataContext%2A> is most typically set as a <xref:System.Windows.Data.Binding> declaration.</span></span> <span data-ttu-id="26d05-401">Можно использовать синтаксис элементов свойств или синтаксиса атрибутов.</span><span class="sxs-lookup"><span data-stu-id="26d05-401">You can use either property element syntax or attribute syntax.</span></span> <span data-ttu-id="26d05-402">Синтаксис атрибутов показан в примере на этой странице.</span><span class="sxs-lookup"><span data-stu-id="26d05-402">Attribute syntax is shown in the example on this page.</span></span> <span data-ttu-id="26d05-403">Код также можно использовать для задания <xref:System.Windows.FrameworkElement.DataContext%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-403">You can also use code to set <xref:System.Windows.FrameworkElement.DataContext%2A>.</span></span>  
  
 <span data-ttu-id="26d05-404"><xref:System.Windows.FrameworkElement.DataContext%2A> является свойством привязки, чтобы облегчить ситуацию, где один контекст может быть привязана к другому.</span><span class="sxs-lookup"><span data-stu-id="26d05-404"><xref:System.Windows.FrameworkElement.DataContext%2A> is a bindable property to facilitate scenarios where one context might be bound to another.</span></span> <span data-ttu-id="26d05-405">Тем не менее если выполняется привязка к <xref:System.Windows.FrameworkElement.DataContext%2A>, будьте внимательны, чтобы не создавать ссылки циклическая привязка (без привязки <xref:System.Windows.FrameworkElement.DataContext%2A> на себя, это можно сделать из-за характера наследования значения свойства <xref:System.Windows.FrameworkElement.DataContext%2A> свойство).</span><span class="sxs-lookup"><span data-stu-id="26d05-405">However, if you bind to <xref:System.Windows.FrameworkElement.DataContext%2A>, be careful to not create circular binding references (do not bind a <xref:System.Windows.FrameworkElement.DataContext%2A> to itself, which it is possible to do because of the property value inheritance nature of the <xref:System.Windows.FrameworkElement.DataContext%2A> property).</span></span>  
  
<a name="xamlPropertyElementUsage_DataContext"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="26d05-406">Использование элемента свойства XAML</span><span class="sxs-lookup"><span data-stu-id="26d05-406">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.DataContext>  
    <dataContextObject />  
  </object.DataContext>  
</object>  
```  
  
<a name="xamlAttributeUsage_DataContext"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="26d05-407">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="26d05-407">XAML Attribute Usage</span></span>  
  
```  
<object DataContext="bindingUsage"/>  
- or -  
<object DataContext="{resourceExtension contextResourceKey}"/>  
```  
  
<a name="xamlValues_DataContext"></a>   
## <a name="xaml-values"></a><span data-ttu-id="26d05-408">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="26d05-408">XAML Values</span></span>  
 <span data-ttu-id="26d05-409">*dataContextObject*</span><span class="sxs-lookup"><span data-stu-id="26d05-409">*dataContextObject*</span></span>  
 <span data-ttu-id="26d05-410">Непосредственно внедренный объект, который служит в качестве контекста данных для любых привязок внутри родительского элемента.</span><span class="sxs-lookup"><span data-stu-id="26d05-410">A directly embedded object that serves as data context for any bindings within the parent element.</span></span> <span data-ttu-id="26d05-411">Как правило, этот объект является <xref:System.Windows.Data.Binding> или другой <xref:System.Windows.Data.BindingBase> производного класса.</span><span class="sxs-lookup"><span data-stu-id="26d05-411">Typically, this object is a <xref:System.Windows.Data.Binding> or another <xref:System.Windows.Data.BindingBase> derived class.</span></span> <span data-ttu-id="26d05-412">Кроме того необработанные данные любого типа объекта, предназначенного для привязки здесь можно разместить, а фактические привязки, определенные позднее.</span><span class="sxs-lookup"><span data-stu-id="26d05-412">Alternatively, raw data of any object type intended for binding may be placed here, with the actual bindings defined later.</span></span>  
  
 <span data-ttu-id="26d05-413">*bindingUsage*</span><span class="sxs-lookup"><span data-stu-id="26d05-413">*bindingUsage*</span></span>  
 <span data-ttu-id="26d05-414">Использование привязки, результатом вычисления которого в соответствующий контекст данных.</span><span class="sxs-lookup"><span data-stu-id="26d05-414">A binding usage that evaluates to an appropriate data context.</span></span> <span data-ttu-id="26d05-415">Дополнительные сведения см. в разделе [Привязка расширения разметки](~/docs/framework/wpf/advanced/binding-markup-extension.md).</span><span class="sxs-lookup"><span data-stu-id="26d05-415">For details, see [Binding Markup Extension](~/docs/framework/wpf/advanced/binding-markup-extension.md).</span></span>  
  
 <span data-ttu-id="26d05-416">*ResourceExtension*</span><span class="sxs-lookup"><span data-stu-id="26d05-416">*resourceExtension*</span></span>  
 <span data-ttu-id="26d05-417">Одно из следующих: [ `StaticResource` ](~/docs/framework/wpf/advanced/staticresource-markup-extension.md) или [ `DynamicResource` ](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md).</span><span class="sxs-lookup"><span data-stu-id="26d05-417">One of the following: [`StaticResource`](~/docs/framework/wpf/advanced/staticresource-markup-extension.md) or [`DynamicResource`](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md).</span></span> <span data-ttu-id="26d05-418">Такое использование используется при обращении к необработанным данным объектом, в ресурсах.</span><span class="sxs-lookup"><span data-stu-id="26d05-418">This usage is used when referring to raw data defined as an object in resources.</span></span> <span data-ttu-id="26d05-419">См. в разделе [ресурсы XAML](~/docs/framework/wpf/advanced/xaml-resources.md).</span><span class="sxs-lookup"><span data-stu-id="26d05-419">See [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md).</span></span>  
  
 <span data-ttu-id="26d05-420">*contextResourceKey*</span><span class="sxs-lookup"><span data-stu-id="26d05-420">*contextResourceKey*</span></span>  
 <span data-ttu-id="26d05-421">Идентификатор ключа для запрашиваемого изнутри объекта <xref:System.Windows.ResourceDictionary>.</span><span class="sxs-lookup"><span data-stu-id="26d05-421">The key identifier for the object being requested from within a <xref:System.Windows.ResourceDictionary>.</span></span>  
  
<a name="dependencyPropertyInfo_DataContext"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="26d05-422">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="26d05-422">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="26d05-423">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="26d05-423">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.DataContextProperty>|  
|<span data-ttu-id="26d05-424">Значение свойства метаданных `true`</span><span class="sxs-lookup"><span data-stu-id="26d05-424">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="26d05-425">В следующем примере показано, как действует контекст данных для привязки и предоставляет сведения, которые определяет конкретные значения связанных свойств.</span><span class="sxs-lookup"><span data-stu-id="26d05-425">The following example illustrates how a data context acts on a binding and provides the information that defines the specific values of bound properties.</span></span>  
  
 [!code-xaml[MasterDetail#DataContextProperty](~/samples/snippets/csharp/VS_Snippets_Wpf/MasterDetail/CSharp/Page1.xaml#datacontextproperty)]  
[!code-xaml[MasterDetail#DataContextProperty2](~/samples/snippets/csharp/VS_Snippets_Wpf/MasterDetail/CSharp/Page1.xaml#datacontextproperty2)]  
[!code-xaml[MasterDetail#DataContextProperty3](~/samples/snippets/csharp/VS_Snippets_Wpf/MasterDetail/CSharp/Page1.xaml#datacontextproperty3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataContextChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.DependencyPropertyChangedEventHandler DataContextChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.DependencyPropertyChangedEventHandler DataContextChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkElement.DataContextChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event DataContextChanged As DependencyPropertyChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::DependencyPropertyChangedEventHandler ^ DataContextChanged;" />
      <MemberSignature Language="F#" Value="member this.DataContextChanged : System.Windows.DependencyPropertyChangedEventHandler " Usage="member this.DataContextChanged : System.Windows.DependencyPropertyChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyPropertyChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-426">Происходит при изменении контекста данных для элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-426">Occurs when the data context for this element changes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-427">Описание контекстов данных и привязки данных, см. в разделе [Общие сведения о привязке данных](~/docs/framework/wpf/data/data-binding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="26d05-427">For an explanation of data contexts and data binding, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="26d05-428">Когда <xref:System.Windows.FrameworkElement.DataContext%2A> для изменения элемента, потенциально подвержены все свойства с привязкой к данным в этом элементе.</span><span class="sxs-lookup"><span data-stu-id="26d05-428">When the <xref:System.Windows.FrameworkElement.DataContext%2A> for an element changes, all data-bound properties on this element are potentially affected.</span></span> <span data-ttu-id="26d05-429">Это относится к дочерние элементы текущего элемента в логическом дереве, наследующим контекст данных, все элементы, а также сам элемент.</span><span class="sxs-lookup"><span data-stu-id="26d05-429">This applies to any elements that are child elements of the current element in the logical tree, which inherit the data context, and also the current element itself.</span></span> <span data-ttu-id="26d05-430">Все существующие привязки необходимо интерпретировать повторно новый <xref:System.Windows.FrameworkElement.DataContext%2A> и будут пересчитаны результаты привязки.</span><span class="sxs-lookup"><span data-stu-id="26d05-430">All such existing bindings must re-interpret the new <xref:System.Windows.FrameworkElement.DataContext%2A> and will reevaluate the binding results.</span></span> <span data-ttu-id="26d05-431">Механизм привязки данных не является детерминированным о порядке эти повторные вычисления, относительно формирование <xref:System.Windows.FrameworkElement.DataContextChanged> событий.</span><span class="sxs-lookup"><span data-stu-id="26d05-431">The data binding engine is not deterministic about the order of these reevaluations, relative to the raising of the <xref:System.Windows.FrameworkElement.DataContextChanged> event.</span></span> <span data-ttu-id="26d05-432">Повторные вычисления могут произойти до события, после события или в любом сочетании.</span><span class="sxs-lookup"><span data-stu-id="26d05-432">The reevaluations can occur before the event, after the event, or in any mixture.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkElement.DataContext" />
      </Docs>
    </Member>
    <Member MemberName="DataContextProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty DataContextProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty DataContextProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.DataContextProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly DataContextProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ DataContextProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DataContextProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.DataContextProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-433">Идентифицирует свойство зависимостей <see cref="P:System.Windows.FrameworkElement.DataContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-433">Identifies the <see cref="P:System.Windows.FrameworkElement.DataContext" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultStyleKey">
      <MemberSignature Language="C#" Value="protected internal object DefaultStyleKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DefaultStyleKey" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.DefaultStyleKey" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property DefaultStyleKey As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Object ^ DefaultStyleKey { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultStyleKey : obj with get, set" Usage="System.Windows.FrameworkElement.DefaultStyleKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-434">Возвращает или задает ключ, используемый для ссылки на стиль этого элемента управления, при использовании или определении тематических стилей.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-434">Gets or sets the key to use to reference the style for this control, when theme styles are used or defined.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26d05-435">Ключ стиля.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-435">The style key.</span>
          </span>
          <span data-ttu-id="26d05-436">Для правильной работы этого значения в ходе поиска стиля темы ожидается, что оно принадлежит к типу <see cref="T:System.Type" /> элемента управления, к которому применяется стиль.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-436">To work correctly as part of theme style lookup, this value is expected to be the <see cref="T:System.Type" /> of the control being styled.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-437">Это свойство обычно не задается через любой из его прямых методов доступа.</span><span class="sxs-lookup"><span data-stu-id="26d05-437">This property is typically not set through any of its direct property accessors.</span></span> <span data-ttu-id="26d05-438">Вместо этого каждый раз при создании нового переопределить метаданные определенного типа данного свойства зависимостей <xref:System.Windows.FrameworkElement> производного класса.</span><span class="sxs-lookup"><span data-stu-id="26d05-438">Instead, you override the type-specific metadata of this dependency property every time you create a new <xref:System.Windows.FrameworkElement> derived class.</span></span> <span data-ttu-id="26d05-439">При наследовании элемент управления, вызовите <xref:System.Windows.DependencyProperty.OverrideMetadata%2A> метода <xref:System.Windows.FrameworkElement.DefaultStyleKeyProperty> идентификатор в статическом конструкторе элемента управления производный класс (или эквивалентный класс инициализации).</span><span class="sxs-lookup"><span data-stu-id="26d05-439">When you derive a control, call the <xref:System.Windows.DependencyProperty.OverrideMetadata%2A> method against the <xref:System.Windows.FrameworkElement.DefaultStyleKeyProperty> identifier, within the static constructor of the control derived class (or equivalent class initialization).</span></span>  
  
 <span data-ttu-id="26d05-440">Элемент управления обычно переопределяет значение по умолчанию этого свойства как свой собственный тип, но в некоторых случаях также может использовать базовый тип, для которого существует стиль в тематических словарей.</span><span class="sxs-lookup"><span data-stu-id="26d05-440">A control typically overrides the default value of this property to be its own type, but in some cases could also use a base type for which a style in the theme dictionaries exists.</span></span> <span data-ttu-id="26d05-441">Это целесообразно только шаблоны элементов управления базового элемента управления полностью определяют визуальное представление производного элемента управления, если любые дополнительные элементы, которые предоставляют производные типы не требуют дополнительных элементов как часть шаблона элемента управления.</span><span class="sxs-lookup"><span data-stu-id="26d05-441">This is only practical if the control templates of the base control entirely define the visual representation of that derived control, and if whatever additional members the derived types expose do not require additional elements as part of the control template.</span></span>  
  
 <span data-ttu-id="26d05-442">Элемент или элемент управления, намеренно не использовать тематические стили, задайте <xref:System.Windows.FrameworkElement.OverridesDefaultStyle%2A> свойства `true`.</span><span class="sxs-lookup"><span data-stu-id="26d05-442">If you want your element or control to deliberately not use theme styles, set the <xref:System.Windows.FrameworkElement.OverridesDefaultStyle%2A> property to `true`.</span></span>  
  
<a name="dependencyPropertyInfo_DefaultStyleKey"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="26d05-443">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="26d05-443">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="26d05-444">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="26d05-444">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.DefaultStyleKeyProperty>|  
|<span data-ttu-id="26d05-445">Значение свойства метаданных `true`</span><span class="sxs-lookup"><span data-stu-id="26d05-445">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="26d05-446">В следующем примере показано использование переопределения метаданных свойства зависимостей, рассматриваемые в "Примечания".</span><span class="sxs-lookup"><span data-stu-id="26d05-446">The following example illustrates the dependency property metadata override usage discussed in Remarks.</span></span> <span data-ttu-id="26d05-447">Этот код определяет класс пользовательского элемента управления `NumericUpDown` предназначен для использования из сборки библиотеку выделенного элемента управления.</span><span class="sxs-lookup"><span data-stu-id="26d05-447">This code defines a custom control class `NumericUpDown` intended to be used from a dedicated control library assembly.</span></span> <span data-ttu-id="26d05-448">Иллюстрированные статический конструктор ссылается на некоторые закрытые функции инициализации, регистрирует обработчик класса (еще один распространенный сценарий создания подклассов элемента управления; см. описание [маркировка перенаправленных событий как обработанных и обработка классов](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md)) и, наконец переопределяет <xref:System.Windows.FrameworkElement.DefaultStyleKey%2A> метаданные свойства зависимостей на `NumericUpDown` класса.</span><span class="sxs-lookup"><span data-stu-id="26d05-448">The illustrated static constructor references some private initialization function, registers a class handler (another common control subclassing scenario; see [Marking Routed Events as Handled, and Class Handling](~/docs/framework/wpf/advanced/marking-routed-events-as-handled-and-class-handling.md)) and finally overrides the <xref:System.Windows.FrameworkElement.DefaultStyleKey%2A> dependency property metadata on the `NumericUpDown` class.</span></span> <span data-ttu-id="26d05-449"><xref:System.Windows.FrameworkElement.DefaultStyleKey%2A> всегда возвращает собственный тип как предполагаемый ключ, который является соглашением, системой стиля темы для поиска стиля для некоторых произвольного элемента управления без стиля.</span><span class="sxs-lookup"><span data-stu-id="26d05-449"><xref:System.Windows.FrameworkElement.DefaultStyleKey%2A> always returns its own type as the intended key, which is the convention that the theme style system uses to look up the style for some arbitrary otherwise non-styled control.</span></span> <span data-ttu-id="26d05-450">Полный пример также определяет стиль темы элемента управления, на который ссылается этот ключ; см. в разделе [пользовательского элемента управления NumericUpDown с темой и пример Поддержка автоматизации пользовательского интерфейса](http://go.microsoft.com/fwlink/?LinkID=160025).</span><span class="sxs-lookup"><span data-stu-id="26d05-450">The complete sample also defines the actual control's theme style that is referenced by that key; see [NumericUpDown Custom Control with Theme and UI Automation Support Sample](http://go.microsoft.com/fwlink/?LinkID=160025).</span></span>  
  
 [!code-csharp[CustomControlNumericUpDown#StaticCtorOfCustomClassCommonTasks](~/samples/snippets/csharp/VS_Snippets_Wpf/CustomControlNumericUpDown/CSharp/CustomControlLibrary/NumericUpDown.cs#staticctorofcustomclasscommontasks)]
 [!code-vb[CustomControlNumericUpDown#StaticCtorOfCustomClassCommonTasks](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CustomControlNumericUpDown/visualbasic/customcontrollibrary/numericupdown.vb#staticctorofcustomclasscommontasks)]  
[!code-csharp[CustomControlNumericUpDown#Close](~/samples/snippets/csharp/VS_Snippets_Wpf/CustomControlNumericUpDown/CSharp/CustomControlLibrary/NumericUpDown.cs#close)]
[!code-vb[CustomControlNumericUpDown#Close](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CustomControlNumericUpDown/visualbasic/customcontrollibrary/numericupdown.vb#close)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkElement.OverridesDefaultStyle" />
      </Docs>
    </Member>
    <Member MemberName="DefaultStyleKeyProperty">
      <MemberSignature Language="C#" Value="protected internal static readonly System.Windows.DependencyProperty DefaultStyleKeyProperty;" />
      <MemberSignature Language="ILAsm" Value=".field familyorassembly static initonly class System.Windows.DependencyProperty DefaultStyleKeyProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.DefaultStyleKeyProperty" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Shared ReadOnly DefaultStyleKeyProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="protected public: static initonly System::Windows::DependencyProperty ^ DefaultStyleKeyProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable DefaultStyleKeyProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.DefaultStyleKeyProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-451">Идентифицирует свойство зависимостей <see cref="P:System.Windows.FrameworkElement.DefaultStyleKey" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-451">Identifies the <see cref="P:System.Windows.FrameworkElement.DefaultStyleKey" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EndInit">
      <MemberSignature Language="C#" Value="public virtual void EndInit ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void EndInit() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.EndInit" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub EndInit ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void EndInit();" />
      <MemberSignature Language="F#" Value="abstract member EndInit : unit -&gt; unit&#xA;override this.EndInit : unit -&gt; unit" Usage="frameworkElement.EndInit " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="26d05-452">Указывает на завершение процесса инициализации элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-452">Indicates that the initialization process for the element is complete.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-453">Если <xref:System.Windows.FrameworkElement.BeginInit%2A> ранее был вызван, базовый реализация будет создавать <xref:System.Windows.FrameworkElement.Initialized> событий.</span><span class="sxs-lookup"><span data-stu-id="26d05-453">If <xref:System.Windows.FrameworkElement.BeginInit%2A> was previously called, the base implementation will raise the <xref:System.Windows.FrameworkElement.Initialized> event.</span></span> <span data-ttu-id="26d05-454">В противном случае, если <xref:System.Windows.FrameworkElement.BeginInit%2A> не был вызван или не удалось определить ли <xref:System.Windows.FrameworkElement.BeginInit%2A> был вызван, <xref:System.Windows.FrameworkElement.Initialized> не возникает и вместо этого создается исключение.</span><span class="sxs-lookup"><span data-stu-id="26d05-454">Otherwise, if <xref:System.Windows.FrameworkElement.BeginInit%2A> was not called or it could not be determined whether <xref:System.Windows.FrameworkElement.BeginInit%2A> was called, <xref:System.Windows.FrameworkElement.Initialized> is not raised and an exception is thrown instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="26d05-455">Метод <see cref="M:System.Windows.FrameworkElement.EndInit" /> был вызван без предварительного вызова метода <see cref="M:System.Windows.FrameworkElement.BeginInit" /> для элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-455">
              <see cref="M:System.Windows.FrameworkElement.EndInit" /> was called without <see cref="M:System.Windows.FrameworkElement.BeginInit" /> having previously been called on the element.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="26d05-456">
            <para>Этот метод реализуется для обеспечения специальной обработки, которая может возникать при инициализации элемента в процессе его загрузки.  Реализация должна вызывать базовую реализацию, так как реализация base (по умолчанию) устанавливает внутренние флаги для отслеживания инициализации.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-456">
              <para>Implement this method to provide special handling that should happen when your element is initialized during the element loading process.  Your implementation should call the base implementation, because the base (default) implementation sets some internal flags to keep track of initialization.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="FindName">
      <MemberSignature Language="C#" Value="public object FindName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object FindName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.FindName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindName (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FindName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.FindName : string -&gt; obj" Usage="frameworkElement.FindName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="26d05-457">Имя запрошенного элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-457">The name of the requested element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26d05-458">Находит элемент по указанному имени идентификатора.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-458">Finds an element that has the provided identifier name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="26d05-459">Запрошенный элемент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-459">The requested element.</span>
          </span>
          <span data-ttu-id="26d05-460">Может иметь значение <see langword="null" />, если соответствующий элемент не найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-460">This can be <see langword="null" /> if no matching element was found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-461">Если элемент имеет дочерние элементы, эти дочерние элементы являются все выполняется рекурсивный поиск запрошенного именованного элемента.</span><span class="sxs-lookup"><span data-stu-id="26d05-461">If the element has child elements, these child elements are all searched recursively for the requested named element.</span></span>  
  
 <span data-ttu-id="26d05-462"><xref:System.Windows.FrameworkElement.FindName%2A> действует в пределах области видимости имен текущего элемента.</span><span class="sxs-lookup"><span data-stu-id="26d05-462"><xref:System.Windows.FrameworkElement.FindName%2A> operates within the current element's namescope.</span></span> <span data-ttu-id="26d05-463">Дополнительные сведения см. в разделе [области видимости имен XAML WPF](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span><span class="sxs-lookup"><span data-stu-id="26d05-463">For details, see [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.FindResource(System.Object)" />
        <altmember cref="P:System.Windows.FrameworkElement.Name" />
      </Docs>
    </Member>
    <Member MemberName="FindResource">
      <MemberSignature Language="C#" Value="public object FindResource (object resourceKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object FindResource(object resourceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.FindResource(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindResource (resourceKey As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ FindResource(System::Object ^ resourceKey);" />
      <MemberSignature Language="F#" Value="member this.FindResource : obj -&gt; obj" Usage="frameworkElement.FindResource resourceKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceKey" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="resourceKey">
          <span data-ttu-id="26d05-464">Ключевой идентификатор запрашиваемого ресурса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-464">The key identifier for the requested resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26d05-465">Осуществляет поиск ресурса с указанным ключом и вызывает исключение, если запрошенный ресурс не найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-465">Searches for a resource with the specified key, and throws an exception if the requested resource is not found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="26d05-466">Запрошенный ресурс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-466">The requested resource.</span>
          </span>
          <span data-ttu-id="26d05-467">Если ресурс с указанным ключом не найден, выдается исключение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-467">If no resource with the provided key was found, an exception is thrown.</span>
          </span>
          <span data-ttu-id="26d05-468">В случае исключение может быть также возвращено значение <see cref="F:System.Windows.DependencyProperty.UnsetValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-468">An <see cref="F:System.Windows.DependencyProperty.UnsetValue" /> value might also be returned in the exception case.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  <span data-ttu-id="26d05-469">Если этот метод вызывается для ключа, который не удается найти, создается исключение.</span><span class="sxs-lookup"><span data-stu-id="26d05-469">If you call this method for a key that cannot be found, an exception is thrown.</span></span> <span data-ttu-id="26d05-470">Если вы не хотите обрабатывать исключения, возникающие в результате вызова метода <xref:System.Windows.FrameworkElement.FindResource%2A>, вызовите <xref:System.Windows.FrameworkElement.TryFindResource%2A> вместо этого.</span><span class="sxs-lookup"><span data-stu-id="26d05-470">If you do not want to handle exceptions that result from calling <xref:System.Windows.FrameworkElement.FindResource%2A>, call <xref:System.Windows.FrameworkElement.TryFindResource%2A> instead.</span></span> <span data-ttu-id="26d05-471"><xref:System.Windows.FrameworkElement.TryFindResource%2A> Возвращает `null` когда не удается найти запрошенный ресурс и выдает исключение.</span><span class="sxs-lookup"><span data-stu-id="26d05-471"><xref:System.Windows.FrameworkElement.TryFindResource%2A> returns `null` when a requested resource cannot be found, and does not throw an exception.</span></span>  
  
 <span data-ttu-id="26d05-472">Если ресурс не найден в вызывающем элементе, родительским элементом в логическом дереве является выполняется дальнейший поиск, а затем приложение, а затем темы и наконец системных ресурсов.</span><span class="sxs-lookup"><span data-stu-id="26d05-472">If the resource is not found on the calling element, the parent element in the logical tree is searched next, then the application, then themes, and finally system resources.</span></span> <span data-ttu-id="26d05-473">Этот метод поиска идентична как поиск в дереве, если по ссылке на динамический ресурс в разметке запрошенного ресурса.</span><span class="sxs-lookup"><span data-stu-id="26d05-473">This lookup methodology is identical to how the tree is searched if a resource were requested by a dynamic resource reference in markup.</span></span> <span data-ttu-id="26d05-474">Дополнительные сведения о поиске ресурсов, см. в разделе [ресурсы XAML](~/docs/framework/wpf/advanced/xaml-resources.md).</span><span class="sxs-lookup"><span data-stu-id="26d05-474">For more information about resource lookup, see [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md).</span></span>  
  
 <span data-ttu-id="26d05-475">Как правило, вы сразу же привести <xref:System.Windows.FrameworkElement.FindResource%2A> возвращаемое значение к типу свойства, вы параметр со значением возвращаемым ресурсом.</span><span class="sxs-lookup"><span data-stu-id="26d05-475">Typically, you immediately cast a <xref:System.Windows.FrameworkElement.FindResource%2A> return value to the type of the property that you setting with the returned resource value.</span></span>  
  
 <span data-ttu-id="26d05-476">Ключи ресурсов не обязательно являются строками.</span><span class="sxs-lookup"><span data-stu-id="26d05-476">Resource keys are not necessarily strings.</span></span> <span data-ttu-id="26d05-477">Например, стили для элементов управления на уровне темы намеренно соответствующие <xref:System.Type> элемента управления, а приложения или страницы стили для элементов управления этот параметр обычно используется ключ соглашение.</span><span class="sxs-lookup"><span data-stu-id="26d05-477">For instance, styles for controls at the theme level are deliberately keyed to the <xref:System.Type> of the control, and application or page styles for controls typically use this same key convention.</span></span> <span data-ttu-id="26d05-478">Дополнительные сведения см. в разделе [Стилизация и использование шаблонов](~/docs/framework/wpf/controls/styling-and-templating.md) или [ресурсы XAML](~/docs/framework/wpf/advanced/xaml-resources.md).</span><span class="sxs-lookup"><span data-stu-id="26d05-478">For details, see [Styling and Templating](~/docs/framework/wpf/controls/styling-and-templating.md) or [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26d05-479">Следующий пример получает именованный ресурс и приводит его к соответствующему типу для заполнения свойства.</span><span class="sxs-lookup"><span data-stu-id="26d05-479">The following example obtains a named resource and casts it to an appropriate type to fill a property.</span></span>  
  
 [!code-csharp[PropertiesOvwSupport#ResourceProceduralGet](~/samples/snippets/csharp/VS_Snippets_Wpf/PropertiesOvwSupport/CSharp/page3.xaml.cs#resourceproceduralget)]
 [!code-vb[PropertiesOvwSupport#ResourceProceduralGet](~/samples/snippets/visualbasic/VS_Snippets_Wpf/PropertiesOvwSupport/visualbasic/page3.xaml.vb#resourceproceduralget)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Windows.ResourceReferenceKeyNotFoundException">
          <span data-ttu-id="26d05-480">
            <paramref name="resourceKey" /> не найден, и обработчик событий для события <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-480">
              <paramref name="resourceKey" /> was not found and an event handler does not exist for the <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> event.</span>
          </span>
          <span data-ttu-id="26d05-481">- или -</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-481">-or-</span>
          </span>
          <span data-ttu-id="26d05-482">
            <paramref name="resourceKey" /> не найден, и свойство <see cref="P:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled" /> имеет значение <see langword="false" /> в событии <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-482">
              <paramref name="resourceKey" /> was not found and the <see cref="P:System.Windows.Threading.DispatcherUnhandledExceptionEventArgs.Handled" /> property is <see langword="false" /> in the <see cref="E:System.Windows.Threading.Dispatcher.UnhandledException" /> event.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="26d05-483">Свойство <paramref name="resourceKey" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-483">
              <paramref name="resourceKey" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.FrameworkElement.TryFindResource(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="FlowDirection">
      <MemberSignature Language="C#" Value="public System.Windows.FlowDirection FlowDirection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.FlowDirection FlowDirection" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.FlowDirection" />
      <MemberSignature Language="VB.NET" Value="Public Property FlowDirection As FlowDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::FlowDirection FlowDirection { System::Windows::FlowDirection get(); void set(System::Windows::FlowDirection value); };" />
      <MemberSignature Language="F#" Value="member this.FlowDirection : System.Windows.FlowDirection with get, set" Usage="System.Windows.FrameworkElement.FlowDirection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.FlowDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-484">Возвращает или задает направление потока текста и других элементов [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] внутри любого родительского элемента, управляющего их структурой.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-484">Gets or sets the direction that text and other [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] elements flow within any parent element that controls their layout.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26d05-485">Направление потока текста и других элементов [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] внутри их родительского элемента, в виде значения перечисления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-485">The direction that text and other [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] elements flow within their parent element, as a value of the enumeration.</span>
          </span>
          <span data-ttu-id="26d05-486">Значение по умолчанию — <see cref="F:System.Windows.FlowDirection.LeftToRight" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-486">The default value is <see cref="F:System.Windows.FlowDirection.LeftToRight" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-487">Наборы использования свойств зависимостей <xref:System.Windows.FrameworkElement.FlowDirection%2A> данного элемента.</span><span class="sxs-lookup"><span data-stu-id="26d05-487">The dependency property usage sets the <xref:System.Windows.FrameworkElement.FlowDirection%2A> on this element.</span></span> <span data-ttu-id="26d05-488">Благодаря наследованию значения свойства, задание <xref:System.Windows.FrameworkElement.FlowDirection%2A> на элементе потенциально можно задать <xref:System.Windows.FrameworkElement.FlowDirection%2A> на все дочерние элементы, которые не задали <xref:System.Windows.FrameworkElement.FlowDirection%2A> локально или менее другим способом, таким как стили.</span><span class="sxs-lookup"><span data-stu-id="26d05-488">Because of property value inheritance, setting <xref:System.Windows.FrameworkElement.FlowDirection%2A> on an element can potentially set <xref:System.Windows.FrameworkElement.FlowDirection%2A> on all child elements that did not set <xref:System.Windows.FrameworkElement.FlowDirection%2A> locally or though other means such as styles.</span></span>  
  
 <span data-ttu-id="26d05-489">Это свойство не задано автоматически как часть любого языка и региональных параметров сведений о приложении, так как элемент может содержать содержимое, которое не обязательно соблюдать направление Общая последовательность действий, содержится в разрешении региональными параметрами.</span><span class="sxs-lookup"><span data-stu-id="26d05-489">This property is not automatically set as part of any application culture information, because an element might contain content that is not necessarily intended to obey the general flow direction implied by the culture information.</span></span> <span data-ttu-id="26d05-490">Дополнительные сведения о глобализации см. в разделе [Глобализация для WPF](~/docs/framework/wpf/advanced/globalization-for-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="26d05-490">For more information on globalization considerations, see [Globalization for WPF](~/docs/framework/wpf/advanced/globalization-for-wpf.md).</span></span>  
  
 <span data-ttu-id="26d05-491">Это свойство не определил [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] метод доступа к свойству, поэтому он функционирует как свойство зависимостей.</span><span class="sxs-lookup"><span data-stu-id="26d05-491">This property has a defined [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] property accessor, so it functions as a dependency property.</span></span> <span data-ttu-id="26d05-492">Тем не менее он также регистрируется как подключенные, поэтому он также может работать как присоединенное свойство.</span><span class="sxs-lookup"><span data-stu-id="26d05-492">However, it is also registered as attached, so it can also function as an attached property.</span></span> <span data-ttu-id="26d05-493">Вложенная регистрация является главным образом, что поддерживается наследование значения свойства, но свойство также может использоваться как истинное вложенное свойство.</span><span class="sxs-lookup"><span data-stu-id="26d05-493">The attached registration is mainly so that property value inheritance is supported, but the property can also be used as a true attached property.</span></span> <span data-ttu-id="26d05-494">Использование вложенного свойства применяется, только если вы хотите задать направление потока на объект имеет <xref:System.Windows.FrameworkElement> сам не является родительский элемент, который выполняет макета на нем <xref:System.Windows.FrameworkElement>и еще не содержит более явно определенным `FlowDirection` свойство.</span><span class="sxs-lookup"><span data-stu-id="26d05-494">The attached property usage is only relevant if the object you intend to set the flow direction on has a <xref:System.Windows.FrameworkElement> parent element that performs layout upon it, is itself not a <xref:System.Windows.FrameworkElement>, and does not already have a more directly defined `FlowDirection` property.</span></span> <span data-ttu-id="26d05-495">(Некоторые потока документов классы, такие как <xref:System.Windows.Documents.Block> и <xref:System.Windows.Documents.Inline> определять свои собственные `FlowDirection`, и это свойство можно также задать направление потока.</span><span class="sxs-lookup"><span data-stu-id="26d05-495">(Some of the flow document classes such as <xref:System.Windows.Documents.Block> and <xref:System.Windows.Documents.Inline> define their own `FlowDirection`, and this property can also set the flow direction.</span></span> <span data-ttu-id="26d05-496">Значение свойства затем считывается службой итоговой узла содержимого без необходимости использования присоединенных свойств.)</span><span class="sxs-lookup"><span data-stu-id="26d05-496">The property value is then read by the eventual content host without requiring attached property usage.)</span></span>  
  
<a name="xamlAttributeUsage_FlowDirection"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="26d05-497">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="26d05-497">XAML Attribute Usage</span></span>  
 <span data-ttu-id="26d05-498">\<*Объект* **FlowDirection**=»<xref:System.Windows.FlowDirection>«/ ></span><span class="sxs-lookup"><span data-stu-id="26d05-498">\<*object* **FlowDirection**="<xref:System.Windows.FlowDirection>"/></span></span>  
  
<a name="xamlTextUsage_FlowDirection"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="26d05-499">Использование текста XAML</span><span class="sxs-lookup"><span data-stu-id="26d05-499">XAML Text Usage</span></span>  
 <span data-ttu-id="26d05-500">Это свойство также может устанавливаться на классы, не являющиеся <xref:System.Windows.FrameworkElement> производные классы, ниже [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] прикрепленное свойство:</span><span class="sxs-lookup"><span data-stu-id="26d05-500">This property can also be set on classes that are not <xref:System.Windows.FrameworkElement> derived classes, by the following [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attached property usage:</span></span>  
  
 <span data-ttu-id="26d05-501">`<` *Объект* `FrameworkElement.` **FlowDirection**=»<xref:System.Windows.FlowDirection>`"/>`</span><span class="sxs-lookup"><span data-stu-id="26d05-501">`<` *object* `FrameworkElement.`**FlowDirection**="<xref:System.Windows.FlowDirection>`"/>`</span></span>  
  
<a name="dependencyPropertyInfo_FlowDirection"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="26d05-502">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="26d05-502">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="26d05-503">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="26d05-503">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.FlowDirectionProperty>|  
|<span data-ttu-id="26d05-504">Значение свойства метаданных `true`</span><span class="sxs-lookup"><span data-stu-id="26d05-504">Metadata properties set to `true`</span></span>|<span data-ttu-id="26d05-505"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span><span class="sxs-lookup"><span data-stu-id="26d05-505"><xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>, <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A>, <xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A></span></span>|  
  
 <span data-ttu-id="26d05-506">Это свойство является свойством зависимостей и присоединенным свойством; см. в разделе "Примечания".</span><span class="sxs-lookup"><span data-stu-id="26d05-506">This property is both a dependency property and an attached property; see Remarks.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FlowDirectionProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FlowDirectionProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FlowDirectionProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.FlowDirectionProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FlowDirectionProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FlowDirectionProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FlowDirectionProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.FlowDirectionProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-507">Идентифицирует свойство зависимостей <see cref="P:System.Windows.FrameworkElement.FlowDirection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-507">Identifies the <see cref="P:System.Windows.FrameworkElement.FlowDirection" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FocusVisualStyle">
      <MemberSignature Language="C#" Value="public System.Windows.Style FocusVisualStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style FocusVisualStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.FocusVisualStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property FocusVisualStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ FocusVisualStyle { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FocusVisualStyle : System.Windows.Style with get, set" Usage="System.Windows.FrameworkElement.FocusVisualStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-508">Получает или задает свойство, позволяющее настройку внешнего вида, эффектов или других характеристик стиля, применяемых к данному элементу, когда он получает фокус клавиатуры.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-508">Gets or sets a property that enables customization of appearance, effects, or other style characteristics that will apply to this element when it captures keyboard focus.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26d05-509">Требуемый стиль для применения при получении фокуса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-509">The desired style to apply on focus.</span>
          </span>
          <span data-ttu-id="26d05-510">Значение по умолчанию, объявленное в свойстве зависимостей, представляет собой пустой статический <see cref="T:System.Windows.Style" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-510">The default value as declared in the dependency property is an empty static <see cref="T:System.Windows.Style" />.</span>
          </span>
          <span data-ttu-id="26d05-511">Тем не менее, действительным значением во время выполнения часто (но не всегда) является стиль, представленный поддержкой тем для элементов управления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-511">However, the effective value at run time is often (but not always) a style as supplied by theme support for controls.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-512">Это свойство влияет на внешний вид, но не сообщает о <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A> в метаданных.</span><span class="sxs-lookup"><span data-stu-id="26d05-512">This property affects visual appearance but does not report <xref:System.Windows.FrameworkPropertyMetadata.AffectsRender%2A> in metadata.</span></span> <span data-ttu-id="26d05-513">Это, поскольку изменение внешнего вида основано на событиях и могут применяться не все время и поэтому не следует сообщать обычно любые сведения о visual или макета в метаданных.</span><span class="sxs-lookup"><span data-stu-id="26d05-513">This is because the visual appearance change is event-driven and may not apply at all times, and therefore should not generally report any visual or layout information in metadata.</span></span>  
  
 <span data-ttu-id="26d05-514">По сути visual поведение фокуса, примененное к элементу управления, должно быть согласовано от элемента управления.</span><span class="sxs-lookup"><span data-stu-id="26d05-514">Conceptually, the visual behavior of focus applied to a control should be coherent from control to control.</span></span> <span data-ttu-id="26d05-515">Наиболее понятным способом применения согласованности является изменение визуального стиля фокуса только при составлении целой темы.</span><span class="sxs-lookup"><span data-stu-id="26d05-515">The most sensible way to enforce coherence is to only change the focus visual style if you are composing an entire theme.</span></span> <span data-ttu-id="26d05-516">Задание этого свойства для отдельных стилей управления, а не как частью темы не предполагаемое использование этого свойства, так как это может привести к путанице при использовании фокуса клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="26d05-516">Setting this property on individual control styles and not as part of a theme is not the intended usage of this property, because it may lead to a confusing user experience regarding keyboard focus.</span></span> <span data-ttu-id="26d05-517">Если планируется поведения элемента управления, которое намеренно не согласовано в рамках темы, гораздо лучшим подходом является использование триггеры в стилях для отдельных свойств состояния ввода, таких как <xref:System.Windows.UIElement.IsFocused%2A> или <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A>и таким образом способом, который не поддерживает визуально повлиять на работу любого существующего визуального стиля фокуса.</span><span class="sxs-lookup"><span data-stu-id="26d05-517">If you are intending control-specific behavior that is deliberately not coherent across a theme, a much better approach is to use triggers in styles for individual input state properties, such as <xref:System.Windows.UIElement.IsFocused%2A> or <xref:System.Windows.UIElement.IsKeyboardFocusWithin%2A>, and to do so in a way that does not visually interfere with any existing focus visual style.</span></span> <span data-ttu-id="26d05-518">Дополнительные сведения о необходимым <xref:System.Windows.FrameworkElement.FocusVisualStyle%2A> и альтернативное сосредоточиться свойств, см. в разделе [Стилизация фокуса в элементах управления и FocusVisualStyle](~/docs/framework/wpf/advanced/styling-for-focus-in-controls-and-focusvisualstyle.md).</span><span class="sxs-lookup"><span data-stu-id="26d05-518">For more information on the design intention of <xref:System.Windows.FrameworkElement.FocusVisualStyle%2A> and alternative focus properties, see [Styling for Focus in Controls, and FocusVisualStyle](~/docs/framework/wpf/advanced/styling-for-focus-in-controls-and-focusvisualstyle.md).</span></span>  
  
<a name="xamlAttributeUsage_FocusVisualStyle"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="26d05-519">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="26d05-519">XAML Attribute Usage</span></span>  
  
```  
<object FocusVisualStyle="{resourceExtension styleResourceKey}"/>  
```  
  
<a name="xamlPropertyElementUsage_FocusVisualStyle"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="26d05-520">Использование элемента свойства XAML</span><span class="sxs-lookup"><span data-stu-id="26d05-520">XAML Property Element Usage</span></span>  
  
<a name="xamlValues_FocusVisualStyle"></a>   
## <a name="xaml-values"></a><span data-ttu-id="26d05-521">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="26d05-521">XAML Values</span></span>  
 <span data-ttu-id="26d05-522">*ResourceExtension*</span><span class="sxs-lookup"><span data-stu-id="26d05-522">*resourceExtension*</span></span>  
 <span data-ttu-id="26d05-523">Одно из следующих:, или.</span><span class="sxs-lookup"><span data-stu-id="26d05-523">One of the following: , or .</span></span> <span data-ttu-id="26d05-524">См. в разделе [ресурсы XAML](~/docs/framework/wpf/advanced/xaml-resources.md).</span><span class="sxs-lookup"><span data-stu-id="26d05-524">See [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md).</span></span>  
  
 <span data-ttu-id="26d05-525">*styleResourceKey*</span><span class="sxs-lookup"><span data-stu-id="26d05-525">*styleResourceKey*</span></span>  
 <span data-ttu-id="26d05-526">Ключ, который идентифицирует запрашиваемый стиль.</span><span class="sxs-lookup"><span data-stu-id="26d05-526">The key that identifies the style being requested.</span></span> <span data-ttu-id="26d05-527">Ключ ссылается на существующий ресурс в <xref:System.Windows.ResourceDictionary>.</span><span class="sxs-lookup"><span data-stu-id="26d05-527">The key refers to an existing resource in a <xref:System.Windows.ResourceDictionary>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="26d05-528">Синтаксис элемента свойства технически возможно, но не рекомендуется.</span><span class="sxs-lookup"><span data-stu-id="26d05-528">Property element syntax is technically possible, but not recommended.</span></span> <span data-ttu-id="26d05-529">См. в разделе [встроенные стили и шаблоны](~/docs/framework/wpf/advanced/inline-styles-and-templates.md).</span><span class="sxs-lookup"><span data-stu-id="26d05-529">See [Inline Styles and Templates](~/docs/framework/wpf/advanced/inline-styles-and-templates.md).</span></span> <span data-ttu-id="26d05-530">Ссылка на привязку с помощью или <xref:System.Windows.Data.Binding> — также, возможно, но встречается редко.</span><span class="sxs-lookup"><span data-stu-id="26d05-530">A binding reference using  or <xref:System.Windows.Data.Binding> is also possible, but uncommon.</span></span>  
  
<a name="dependencyPropertyInfo_FocusVisualStyle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="26d05-531">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="26d05-531">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="26d05-532">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="26d05-532">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.FocusVisualStyleProperty>|  
|<span data-ttu-id="26d05-533">Значение свойства метаданных `true`</span><span class="sxs-lookup"><span data-stu-id="26d05-533">Metadata properties set to `true`</span></span>|<span data-ttu-id="26d05-534">Нет</span><span class="sxs-lookup"><span data-stu-id="26d05-534">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
      </Docs>
    </Member>
    <Member MemberName="FocusVisualStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty FocusVisualStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty FocusVisualStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.FocusVisualStyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly FocusVisualStyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ FocusVisualStyleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable FocusVisualStyleProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.FocusVisualStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-535">Идентифицирует свойство зависимостей <see cref="P:System.Windows.FrameworkElement.FocusVisualStyle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-535">Identifies the <see cref="P:System.Windows.FrameworkElement.FocusVisualStyle" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ForceCursor">
      <MemberSignature Language="C#" Value="public bool ForceCursor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ForceCursor" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.ForceCursor" />
      <MemberSignature Language="VB.NET" Value="Public Property ForceCursor As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ForceCursor { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ForceCursor : bool with get, set" Usage="System.Windows.FrameworkElement.ForceCursor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-536">Возвращает или задает значение, указывающее, следует ли данному <see cref="T:System.Windows.FrameworkElement" /> заставлять [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] визуализировать курсор, как объявлено свойством <see cref="P:System.Windows.FrameworkElement.Cursor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-536">Gets or sets a value that indicates whether this <see cref="T:System.Windows.FrameworkElement" /> should force the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)] to render the cursor as declared by the <see cref="P:System.Windows.FrameworkElement.Cursor" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26d05-537">
            <see langword="true" />, если для презентации курсора, расположенного над данным элементом, принудительно используются текущие настройки <see cref="P:System.Windows.FrameworkElement.Cursor" /> для курсора (а также для всех дочерних элементов); в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-537">
              <see langword="true" /> if cursor presentation while over this element is forced to use current <see cref="P:System.Windows.FrameworkElement.Cursor" /> settings for the cursor (including on all child elements); otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="26d05-538">Значение по умолчанию — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-538">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-539">Если задано это свойство `true` переопределяют настройки курсора, установленные дочерними элементами.</span><span class="sxs-lookup"><span data-stu-id="26d05-539">If you set this property to `true` you will override the cursor preferences established by child elements.</span></span> <span data-ttu-id="26d05-540">Поэтому в общем приложении это [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] может ввести в заблуждение пользователя, особенно в том случае, если дочерние элементы пытаются задавать курсоры.</span><span class="sxs-lookup"><span data-stu-id="26d05-540">Doing so in general application [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] might be confusing for the user, particularly if child elements are attempting to specify cursors.</span></span> <span data-ttu-id="26d05-541">Параметр <xref:System.Windows.FrameworkElement.ForceCursor%2A> больше подходит в сценариях создания подклассов или композиции элемента управления.</span><span class="sxs-lookup"><span data-stu-id="26d05-541">Setting <xref:System.Windows.FrameworkElement.ForceCursor%2A> is more appropriate in control subclassing or compositing scenarios.</span></span>  
  
<a name="dependencyPropertyInfo_ForceCursor"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="26d05-542">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="26d05-542">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="26d05-543">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="26d05-543">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.ForceCursorProperty>|  
|<span data-ttu-id="26d05-544">Значение свойства метаданных `true`</span><span class="sxs-lookup"><span data-stu-id="26d05-544">Metadata properties set to `true`</span></span>|<span data-ttu-id="26d05-545">Нет</span><span class="sxs-lookup"><span data-stu-id="26d05-545">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="26d05-546">В следующем примере принудительно значение курсора.</span><span class="sxs-lookup"><span data-stu-id="26d05-546">The following example forces the cursor value.</span></span>  
  
 [!code-xaml[ForceCursor#ForceCursor](~/samples/snippets/csharp/VS_Snippets_Wpf/ForceCursor/CS/default.xaml#forcecursor)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.Cursor" />
      </Docs>
    </Member>
    <Member MemberName="ForceCursorProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ForceCursorProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ForceCursorProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.ForceCursorProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ForceCursorProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ForceCursorProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ForceCursorProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.ForceCursorProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-547">Идентифицирует свойство зависимостей <see cref="P:System.Windows.FrameworkElement.ForceCursor" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-547">Identifies the <see cref="P:System.Windows.FrameworkElement.ForceCursor" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBindingExpression">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingExpression GetBindingExpression (System.Windows.DependencyProperty dp);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Data.BindingExpression GetBindingExpression(class System.Windows.DependencyProperty dp) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.GetBindingExpression(System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBindingExpression (dp As DependencyProperty) As BindingExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Data::BindingExpression ^ GetBindingExpression(System::Windows::DependencyProperty ^ dp);" />
      <MemberSignature Language="F#" Value="member this.GetBindingExpression : System.Windows.DependencyProperty -&gt; System.Windows.Data.BindingExpression" Usage="frameworkElement.GetBindingExpression dp" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="26d05-548">Целевое <see cref="T:System.Windows.DependencyProperty" />, из которого получается привязка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-548">The target <see cref="T:System.Windows.DependencyProperty" /> to get the binding from.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26d05-549">Возвращает выражение <see cref="T:System.Windows.Data.BindingExpression" />, представляющее привязку для указанного свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-549">Returns the <see cref="T:System.Windows.Data.BindingExpression" /> that represents the binding on the specified property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="26d05-550">Выражение <see cref="T:System.Windows.Data.BindingExpression" />, если целевое свойство содержит активную привязку; в противном случае возвращает <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-550">A <see cref="T:System.Windows.Data.BindingExpression" /> if the target property has an active binding; otherwise, returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-551">Проверка возвращаемого значения для `null` — это метод, который можно использовать для определения, имеет ли свойство активную привязку.</span><span class="sxs-lookup"><span data-stu-id="26d05-551">Checking the return value for `null` is a technique you can use to determine whether a property has an active binding.</span></span>  
  
 <span data-ttu-id="26d05-552">Этот метод является лишь удобную оболочку вокруг <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A?displayProperty=nameWithType> метод.</span><span class="sxs-lookup"><span data-stu-id="26d05-552">This method is really just a convenience wrapper around the <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="26d05-553"><xref:System.Windows.FrameworkElement.GetBindingExpression%2A> передает текущий экземпляр и `dp` параметр <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="26d05-553"><xref:System.Windows.FrameworkElement.GetBindingExpression%2A> passes the current instance and the `dp` parameter to <xref:System.Windows.Data.BindingOperations.GetBindingExpression%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.BindingOperations" />
      </Docs>
    </Member>
    <Member MemberName="GetFlowDirection">
      <MemberSignature Language="C#" Value="public static System.Windows.FlowDirection GetFlowDirection (System.Windows.DependencyObject element);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Windows.FlowDirection GetFlowDirection(class System.Windows.DependencyObject element) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.GetFlowDirection(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetFlowDirection (element As DependencyObject) As FlowDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::FlowDirection GetFlowDirection(System::Windows::DependencyObject ^ element);" />
      <MemberSignature Language="F#" Value="static member GetFlowDirection : System.Windows.DependencyObject -&gt; System.Windows.FlowDirection" Usage="System.Windows.FrameworkElement.GetFlowDirection element" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.FlowDirection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="26d05-554">Элемент, для которого возвращается свойство <see cref="P:System.Windows.FrameworkElement.FlowDirection" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-554">The element to return a <see cref="P:System.Windows.FrameworkElement.FlowDirection" /> for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26d05-555">Получает значение присоединенного свойства <see cref="P:System.Windows.FrameworkElement.FlowDirection" /> указанного элемента <see cref="T:System.Windows.DependencyObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-555">Gets the value of the <see cref="P:System.Windows.FrameworkElement.FlowDirection" /> attached property for the specified <see cref="T:System.Windows.DependencyObject" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="26d05-556">Запрошенное направление потока, как значение перечисления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-556">The requested flow direction, as a value of the enumeration.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-557">Основная цель этого метода является поддержка синтаксиса присоединенного свойства для <xref:System.Windows.FrameworkElement.FlowDirection%2A> свойство, таким образом позволяя дочерних элементов заданного <xref:System.Windows.FrameworkElement> для указания направления потока для размещения в родительском элементе.</span><span class="sxs-lookup"><span data-stu-id="26d05-557">The main purpose of this method is to support attached property syntax for the <xref:System.Windows.FrameworkElement.FlowDirection%2A> property, therefore allowing child elements of a provided <xref:System.Windows.FrameworkElement> to specify flow direction for the arrangement within their parent element.</span></span> <span data-ttu-id="26d05-558">Чтобы получить это значение в текущем <xref:System.Windows.FrameworkElement>, использовать прямые [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] доступа <xref:System.Windows.FrameworkElement.FlowDirection%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-558">To get the value on the current <xref:System.Windows.FrameworkElement>, use the direct [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] accessor <xref:System.Windows.FrameworkElement.FlowDirection%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkElement.FlowDirection" />
      </Docs>
    </Member>
    <Member MemberName="GetLayoutClip">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.Geometry GetLayoutClip (System.Windows.Size layoutSlotSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.Geometry GetLayoutClip(valuetype System.Windows.Size layoutSlotSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.GetLayoutClip(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetLayoutClip (layoutSlotSize As Size) As Geometry" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::Geometry ^ GetLayoutClip(System::Windows::Size layoutSlotSize);" />
      <MemberSignature Language="F#" Value="override this.GetLayoutClip : System.Windows.Size -&gt; System.Windows.Media.Geometry" Usage="frameworkElement.GetLayoutClip layoutSlotSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Geometry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="layoutSlotSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="layoutSlotSize">
          <span data-ttu-id="26d05-559">Размер части элемента, выполняющей визуальную презентацию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-559">The size of the part of the element that does visual presentation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26d05-560">Возвращает геометрию маски отсечения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-560">Returns a geometry for a clipping mask.</span>
          </span>
          <span data-ttu-id="26d05-561">Маска применяется при попытке системы структуры скомпоновать элемент, размер которого превышает доступное экранное пространство.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-561">The mask applies if the layout system attempts to arrange an element that is larger than the available display space.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="26d05-562">Геометрия отсечения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-562">The clipping geometry.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-563">Поля вычитаются из `layoutSlotSize` как часть поведение системы макета.</span><span class="sxs-lookup"><span data-stu-id="26d05-563">Margins will be subtracted from the `layoutSlotSize` as part of layout system behavior.</span></span>  
  
 <span data-ttu-id="26d05-564">Возвращаемая ссылка null указывает, что отсечение выполнено не будет.</span><span class="sxs-lookup"><span data-stu-id="26d05-564">A returned null reference indicates that no clipping will occur.</span></span> <span data-ttu-id="26d05-565">Реализация по умолчанию всегда возвращает `null` при <xref:System.Windows.UIElement.ClipToBounds%2A> является `false`.</span><span class="sxs-lookup"><span data-stu-id="26d05-565">The default implementation always returns `null` when <xref:System.Windows.UIElement.ClipToBounds%2A> is `false`.</span></span> <span data-ttu-id="26d05-566">Этот метод переопределяет метод <xref:System.Windows.UIElement.GetLayoutClip%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="26d05-566">This method overrides <xref:System.Windows.UIElement.GetLayoutClip%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="26d05-567"><xref:System.Windows.FrameworkElement> Реализация использует <xref:System.Windows.FrameworkElement.MaxHeight%2A> и <xref:System.Windows.FrameworkElement.MaxWidth%2A> в вычислениях.</span><span class="sxs-lookup"><span data-stu-id="26d05-567">The <xref:System.Windows.FrameworkElement> implementation uses <xref:System.Windows.FrameworkElement.MaxHeight%2A> and <xref:System.Windows.FrameworkElement.MaxWidth%2A> in its calculations.</span></span> <span data-ttu-id="26d05-568">Несколько подклассы <xref:System.Windows.FrameworkElement> Переопределите этот метод еще раз.</span><span class="sxs-lookup"><span data-stu-id="26d05-568">Several subclasses of <xref:System.Windows.FrameworkElement> override this method again.</span></span> <span data-ttu-id="26d05-569"><xref:System.Windows.Documents.Adorner.GetLayoutClip%2A?displayProperty=nameWithType>, переопределяет всегда возвращают `null` поскольку декоративных элементов часто намеренно за пределы обычных границ.</span><span class="sxs-lookup"><span data-stu-id="26d05-569"><xref:System.Windows.Documents.Adorner.GetLayoutClip%2A?displayProperty=nameWithType>, overrides to always return `null` because adorners are often deliberately outside the ordinary bounds.</span></span> <span data-ttu-id="26d05-570"><xref:System.Windows.Controls.Canvas.GetLayoutClip%2A?displayProperty=nameWithType> и <xref:System.Windows.Controls.InkPresenter.GetLayoutClip%2A?displayProperty=nameWithType> возвращают `null` Если <xref:System.Windows.UIElement.ClipToBounds%2A> является `false`.</span><span class="sxs-lookup"><span data-stu-id="26d05-570"><xref:System.Windows.Controls.Canvas.GetLayoutClip%2A?displayProperty=nameWithType> and <xref:System.Windows.Controls.InkPresenter.GetLayoutClip%2A?displayProperty=nameWithType> return `null` if <xref:System.Windows.UIElement.ClipToBounds%2A> is `false`.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="26d05-571">
            <para>Реализация по умолчанию всегда возвращает <see langword="null" /> при <see cref="P:System.Windows.UIElement.ClipToBounds" /> является <see langword="false" />. Переопределений обычно ожидается для сохранения этого поведения, хотя существуют исключения, в зависимости от связи и назначения производного класса и его логику макета, в отличие от базового класса.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-571">
              <para>The default implementation always returns <see langword="null" /> when <see cref="P:System.Windows.UIElement.ClipToBounds" /> is <see langword="false" />. Overrides are generally expected to preserve this behavior, although there are exceptions, depending on the relationship and purpose of the derived class and its layout logic as opposed to the base class.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.UIElement.Clip" />
        <altmember cref="P:System.Windows.UIElement.ClipToBounds" />
      </Docs>
    </Member>
    <Member MemberName="GetTemplateChild">
      <MemberSignature Language="C#" Value="protected internal System.Windows.DependencyObject GetTemplateChild (string childName);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance class System.Windows.DependencyObject GetTemplateChild(string childName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.GetTemplateChild(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Function GetTemplateChild (childName As String) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; System::Windows::DependencyObject ^ GetTemplateChild(System::String ^ childName);" />
      <MemberSignature Language="F#" Value="member this.GetTemplateChild : string -&gt; System.Windows.DependencyObject" Usage="frameworkElement.GetTemplateChild childName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="childName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="childName">
          <span data-ttu-id="26d05-572">Имя искомого дочернего элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-572">Name of the child to find.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26d05-573">Возвращает именованный элемент в визуальном дереве объекта <see cref="T:System.Windows.Controls.ControlTemplate" />, для которого создан экземпляр.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-573">Returns the named element in the visual tree of an instantiated <see cref="T:System.Windows.Controls.ControlTemplate" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="26d05-574">Запрошенный элемент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-574">The requested element.</span>
          </span>
          <span data-ttu-id="26d05-575">Может иметь значение <see langword="null" />, если элемента с запрошенным именем не существует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-575">May be <see langword="null" /> if no element of the requested name exists.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-576">Шаблоны в [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] имеют автономное области видимости имен.</span><span class="sxs-lookup"><span data-stu-id="26d05-576">Templates in [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] have a self-contained namescope.</span></span> <span data-ttu-id="26d05-577">Это обусловлено шаблоны повторно используются, и любое имя, определенное в шаблоне не может оставаться уникальными, когда несколько экземпляров элемента управления, создать экземпляр его шаблона.</span><span class="sxs-lookup"><span data-stu-id="26d05-577">This is because templates are re-used, and any name defined in a template cannot remain unique when multiple instances of a control each instantiate its template.</span></span> <span data-ttu-id="26d05-578">Вызовите <xref:System.Windows.FrameworkElement.GetTemplateChild%2A> метод для возврата ссылки на объекты, полученные из шаблона, после ее создания.</span><span class="sxs-lookup"><span data-stu-id="26d05-578">Call the <xref:System.Windows.FrameworkElement.GetTemplateChild%2A> method to return references to objects that come from the template after it is instantiated.</span></span> <span data-ttu-id="26d05-579">Нельзя использовать <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType> способ поиска элементов на основе шаблонов, так как <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType> действует в более общей области, и нет подключения между <xref:System.Windows.Controls.ControlTemplate> классов самого и экземпляра шаблона, после его применения.</span><span class="sxs-lookup"><span data-stu-id="26d05-579">You cannot use the <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType> method to find items from templates because <xref:System.Windows.FrameworkElement.FindName%2A?displayProperty=nameWithType> acts in a more general scope, and there is no connection between the <xref:System.Windows.Controls.ControlTemplate> class itself and the instantiated template once it is applied.</span></span>  
  
 <span data-ttu-id="26d05-580"><xref:System.Windows.FrameworkTemplate.FindName%2A?displayProperty=nameWithType> предоставляет ту же функцию, что этот метод.</span><span class="sxs-lookup"><span data-stu-id="26d05-580"><xref:System.Windows.FrameworkTemplate.FindName%2A?displayProperty=nameWithType> supplies the same function as this method.</span></span> <span data-ttu-id="26d05-581"><xref:System.Windows.FrameworkTemplate.FindName%2A?displayProperty=nameWithType> public, а не защищен, и использует правильный имен рекомендации, позволяющие получить доступ к шаблону в пределах элемента и поиска с именем элементов внутри него.</span><span class="sxs-lookup"><span data-stu-id="26d05-581"><xref:System.Windows.FrameworkTemplate.FindName%2A?displayProperty=nameWithType> is public instead of protected, and it uses correct name-scoping considerations that allow it to access the template within an element and find named items within it.</span></span> <span data-ttu-id="26d05-582">Используйте <xref:System.Windows.FrameworkTemplate.FindName%2A?displayProperty=nameWithType> при необходимости получения элемента за пределами его родительского элемента.</span><span class="sxs-lookup"><span data-stu-id="26d05-582">Use <xref:System.Windows.FrameworkTemplate.FindName%2A?displayProperty=nameWithType> when you need to get an element outside of its parent control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkTemplate.FindName(System.String,System.Windows.FrameworkElement)" />
      </Docs>
    </Member>
    <Member MemberName="GetUIParentCore">
      <MemberSignature Language="C#" Value="protected internal override System.Windows.DependencyObject GetUIParentCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Windows.DependencyObject GetUIParentCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.GetUIParentCore" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function GetUIParentCore () As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Windows::DependencyObject ^ GetUIParentCore();" />
      <MemberSignature Language="F#" Value="override this.GetUIParentCore : unit -&gt; System.Windows.DependencyObject" Usage="frameworkElement.GetUIParentCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="26d05-583">Возвращает альтернативный логический родительский объект для этого элемента при отсутствии визуального родительского объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-583">Returns an alternative logical parent for this element if there is no visual parent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="26d05-584">Возвращает нечто, отличное от <see langword="null" />, каждый раз, когда реализация уровня инфраструктуры WPF этого метода имеет подключение без визуального родительского объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-584">Returns something other than <see langword="null" /> whenever a WPF framework-level implementation of this method has a non-visual parent connection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-585">Этот метод переопределяет метод <xref:System.Windows.UIElement.GetUIParentCore%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="26d05-585">This method overrides <xref:System.Windows.UIElement.GetUIParentCore%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="26d05-586">Значение по умолчанию <xref:System.Windows.FrameworkElement> реализация возвращает ожидаемый одного визуального родительского объекта, это тот же результат, как получение <xref:System.Windows.FrameworkElement.Parent%2A> значение.</span><span class="sxs-lookup"><span data-stu-id="26d05-586">The default <xref:System.Windows.FrameworkElement> implementation returns the expected single visual parent, which is the same result as getting the <xref:System.Windows.FrameworkElement.Parent%2A> value.</span></span> <span data-ttu-id="26d05-587">Реализация производного класса может возвращать альтернативные родительские связи.</span><span class="sxs-lookup"><span data-stu-id="26d05-587">Derived class implementations might return alternate parent relationships.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkElement.Parent" />
      </Docs>
    </Member>
    <Member MemberName="GetVisualChild">
      <MemberSignature Language="C#" Value="protected override System.Windows.Media.Visual GetVisualChild (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Windows.Media.Visual GetVisualChild(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetVisualChild (index As Integer) As Visual" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Media::Visual ^ GetVisualChild(int index);" />
      <MemberSignature Language="F#" Value="override this.GetVisualChild : int -&gt; System.Windows.Media.Visual" Usage="frameworkElement.GetVisualChild index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="26d05-588">Отсчитываемый от нуля индекс запрошенного дочернего элемента коллекции.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-588">The zero-based index of the requested child element in the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26d05-589">Переопределяет метод <see cref="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)" /> и возвращает дочерний элемент по указанному индексу из коллекции дочерних элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-589">Overrides <see cref="M:System.Windows.Media.Visual.GetVisualChild(System.Int32)" />, and returns a child at the specified index from a collection of child elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="26d05-590">Запрошенный дочерний элемент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-590">The requested child element.</span>
          </span>
          <span data-ttu-id="26d05-591">Не должен возвращать значение <see langword="null" />; если указанный индекс находится за пределами диапазона, происходит исключение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-591">This should not return <see langword="null" />; if the provided index is out of range, an exception is thrown.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-592">В <xref:System.Windows.FrameworkElement> реализации только допустимый индекс равен нулю.</span><span class="sxs-lookup"><span data-stu-id="26d05-592">In the <xref:System.Windows.FrameworkElement> implementation, the only valid index is zero.</span></span> <span data-ttu-id="26d05-593">Модель содержимого для <xref:System.Windows.FrameworkElement.GetVisualChild%2A> поддерживает ноль или один дочерний элемент, не коллекцию.</span><span class="sxs-lookup"><span data-stu-id="26d05-593">The content model for <xref:System.Windows.FrameworkElement.GetVisualChild%2A> supports either zero or one child elements, not a collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26d05-594">В следующем примере показано, как пользовательский декоративный элемент использует значения, объявленные с <xref:System.Windows.Media.VisualCollection> , он поддерживает для нескольких визуальных дочерних элементов.</span><span class="sxs-lookup"><span data-stu-id="26d05-594">The following example shows how a custom adorner uses the values declared by a <xref:System.Windows.Media.VisualCollection> that it maintains for its multiple visual children.</span></span> <span data-ttu-id="26d05-595">Эти значения передаются через переопределения <xref:System.Windows.FrameworkElement.VisualChildrenCount%2A> и <xref:System.Windows.FrameworkElement.GetVisualChild%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-595">These values are reported through overrides of <xref:System.Windows.FrameworkElement.VisualChildrenCount%2A> and <xref:System.Windows.FrameworkElement.GetVisualChild%2A>.</span></span>  
  
 [!code-csharp[Adorners_ResizingAdorner#FEVisualOverridesPre](~/samples/snippets/csharp/VS_Snippets_Wpf/Adorners_ResizingAdorner/CSharp/ResizingAdorner.cs#fevisualoverridespre)]
 [!code-vb[Adorners_ResizingAdorner#FEVisualOverridesPre](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Adorners_ResizingAdorner/visualbasic/resizingadorner.vb#fevisualoverridespre)]  
[!code-csharp[Adorners_ResizingAdorner#FEVisualOverrides](~/samples/snippets/csharp/VS_Snippets_Wpf/Adorners_ResizingAdorner/CSharp/ResizingAdorner.cs#fevisualoverrides)]
[!code-vb[Adorners_ResizingAdorner#FEVisualOverrides](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Adorners_ResizingAdorner/visualbasic/resizingadorner.vb#fevisualoverrides)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="26d05-596">
            <para>Эта реализация допустимо только для элементов, которые не поддерживают более описательную коллекцию визуальных дочерних элементов. Любой элемент, который имеет такой коллекции необходимо переопределить этот метод и сопоставьте индекс с эквивалентным индексом в коллекции дочерних элементов, поддерживаемой данным элементом. Индекс в диапазоне от нуля до <see cref="P:System.Windows.FrameworkElement.VisualChildrenCount" /> (минус) должен возвращать допустимый элемент; любого другого индекса должен создать исключение out of range. Пример типа элемента, который поддерживает коллекцию дочерних и переопределяет <see cref="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)" /> для возврата нескольких возможных дочерних является <see cref="T:System.Windows.Controls.Panel" />.  Реализация по умолчанию в <see cref="T:System.Windows.FrameworkElement" /> предполагает только один визуальный дочерний элемент. Любое значение, переданное <paramref name="index" /> Кроме нуль вызывает исключение, исключение. Некоторые стандартные элементы, например декораторы, графические элементы или элементы со специальными средствами визуализации, переопределяют <see cref="T:System.Windows.FrameworkElement" /> реализацию (реализация из промежуточных базовых классов). В некоторых реализациях по-прежнему принудительно один визуальный дочерний элемент, тогда как другие разрешают коллекцию.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-596">
              <para>This implementation is only valid for elements that do not maintain any more descriptive collection of visual child elements. Any element that does have such a collection must override this method and map the index to an equivalent index in the child element collection that is supported by that element. An index in the range from zero to <see cref="P:System.Windows.FrameworkElement.VisualChildrenCount" /> (minus one) should return a valid element; any other index should throw an out-of-range exception. An example of an element type that does support a child collection and overrides <see cref="M:System.Windows.FrameworkElement.GetVisualChild(System.Int32)" /> to return more than one possible child is <see cref="T:System.Windows.Controls.Panel" />.  The default implementation in <see cref="T:System.Windows.FrameworkElement" /> presumes only one visual child. Any value passed for <paramref name="index" /> other than zero causes an exception to be thrown. Several common elements, such as decorators, adorners, or elements with specialized rendering, override the <see cref="T:System.Windows.FrameworkElement" /> implementation (of the implementation from intermediate base classes). Some implementations still enforce one visual child whereas others allow a collection.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public double Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Height" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Height { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Height : double with get, set" Usage="System.Windows.FrameworkElement.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-597">Получает или задает предлагаемую высоту элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-597">Gets or sets the suggested height of the element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26d05-598">Высота элемента в [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-598">The height of the element, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          </span>
          <span data-ttu-id="26d05-599">Значение по умолчанию — <see cref="F:System.Double.NaN" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-599">The default value is <see cref="F:System.Double.NaN" />.</span>
          </span>
          <span data-ttu-id="26d05-600">Это значение должно быть не меньше 0,0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-600">This value must be equal to or greater than 0.0.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-601"><xref:System.Windows.FrameworkElement.Height%2A> является одним из трех свойств для записи на <xref:System.Windows.FrameworkElement> , укажите информацию о высоте.</span><span class="sxs-lookup"><span data-stu-id="26d05-601"><xref:System.Windows.FrameworkElement.Height%2A> is one of three writable properties on <xref:System.Windows.FrameworkElement> that specify height information.</span></span> <span data-ttu-id="26d05-602">Два других <xref:System.Windows.FrameworkElement.MinHeight%2A> и <xref:System.Windows.FrameworkElement.MaxHeight%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-602">The other two are <xref:System.Windows.FrameworkElement.MinHeight%2A> and <xref:System.Windows.FrameworkElement.MaxHeight%2A>.</span></span> <span data-ttu-id="26d05-603">Если возникает конфликт между эти значения, порядок приложения для определения фактического высота является то, что первый <xref:System.Windows.FrameworkElement.MinHeight%2A> необходимо обработать, затем <xref:System.Windows.FrameworkElement.MaxHeight%2A>и, наконец, если он присутствует в рамках заданных границ, <xref:System.Windows.FrameworkElement.Height%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-603">If there is a conflict between these values, the order of application for actual height determination is that first <xref:System.Windows.FrameworkElement.MinHeight%2A> must be honored, then <xref:System.Windows.FrameworkElement.MaxHeight%2A>, and finally, if it is within bounds, <xref:System.Windows.FrameworkElement.Height%2A>.</span></span>  
  
 <span data-ttu-id="26d05-604">Если этот элемент является дочерним элементом в другой элемент, затем этому свойству присвоить значение подходит ли предлагаемое значение.</span><span class="sxs-lookup"><span data-stu-id="26d05-604">If this element is a child element within some other element, then setting this property to a value is really only a suggested value.</span></span> <span data-ttu-id="26d05-605">Система макета, а также логику конкретного макета родительского элемента будет использовать значение качестве несвязанного ввода во время прохода разметки.</span><span class="sxs-lookup"><span data-stu-id="26d05-605">The layout system as well as the particular layout logic of the parent element will use the value as a nonbinding input during the layout process.</span></span> <span data-ttu-id="26d05-606">На практике <xref:System.Windows.FrameworkElement> почти всегда является дочерним элементом еще; даже в том случае, при установке <xref:System.Windows.FrameworkElement.Height%2A> на <xref:System.Windows.Window>.</span><span class="sxs-lookup"><span data-stu-id="26d05-606">In practical terms, a <xref:System.Windows.FrameworkElement> is almost always the child element of something else; even when you set the <xref:System.Windows.FrameworkElement.Height%2A> on <xref:System.Windows.Window>.</span></span> <span data-ttu-id="26d05-607">(Для <xref:System.Windows.Window>, что значение используется при базовой моделью приложения устанавливает базовый отрисовки предположения, которые создают Hwnd, где размещено приложение.)</span><span class="sxs-lookup"><span data-stu-id="26d05-607">(For <xref:System.Windows.Window>, that value is used when the underlying application model establishes the basic rendering assumptions that create the Hwnd that hosts the application.)</span></span>  
  
 <span data-ttu-id="26d05-608">В дополнение к приемлемым <xref:System.Double> значения, это свойство также может быть <xref:System.Double.NaN?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="26d05-608">In addition to acceptable <xref:System.Double> values, this property can also be <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="26d05-609">Это, как указать поведение автоматического изменения размеров в коде.</span><span class="sxs-lookup"><span data-stu-id="26d05-609">This is how you specify auto sizing behavior in code.</span></span> <span data-ttu-id="26d05-610">В [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] значение в строку «Auto» (без учета регистра) чтобы включить автоматическое изменение размеров.</span><span class="sxs-lookup"><span data-stu-id="26d05-610">In [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] you set the value to the string "Auto" (case insensitive) to enable the auto sizing behavior.</span></span> <span data-ttu-id="26d05-611">Автоматическое изменение размеров предполагает, что элемент заполнит доступную ему высоту.</span><span class="sxs-lookup"><span data-stu-id="26d05-611">Auto sizing behavior implies that the element will fill the height available to it.</span></span> <span data-ttu-id="26d05-612">Тем не менее, обратите внимание, что определенные элементы управления передают значения по умолчанию через свои тематические стили по умолчанию, которые отключают автоматическое изменение размеров, если не нужно специально включить ее.</span><span class="sxs-lookup"><span data-stu-id="26d05-612">Note however that specific controls frequently supply default values through their default theme styles that will disable the auto sizing behavior unless it is specifically re-enabled.</span></span>  
  
 <span data-ttu-id="26d05-613">Возвращаемое значение этого свойства всегда является таким же, как любое значение, которое было задано.</span><span class="sxs-lookup"><span data-stu-id="26d05-613">The return value of this property is always the same as any value that was set to it.</span></span> <span data-ttu-id="26d05-614">В свою очередь, значение <xref:System.Windows.FrameworkElement.ActualHeight%2A> могут отличаться.</span><span class="sxs-lookup"><span data-stu-id="26d05-614">In contrast, the value of the <xref:System.Windows.FrameworkElement.ActualHeight%2A> may vary.</span></span> <span data-ttu-id="26d05-615">Это может произойти либо статически макет отклонить предполагаемый размер по какой-либо причине, или моментально.</span><span class="sxs-lookup"><span data-stu-id="26d05-615">This can happen either statically because the layout rejected the suggested size for some reason, or momentarily.</span></span> <span data-ttu-id="26d05-616">Сама система структуры работает асинхронно относительно набора в системе свойств <xref:System.Windows.FrameworkElement.Height%2A> и может не обработать конкретное изменение свойства размера еще.</span><span class="sxs-lookup"><span data-stu-id="26d05-616">The layout system itself works asynchronously relative to the property system's set of <xref:System.Windows.FrameworkElement.Height%2A> and may not have processed that particular sizing property change yet.</span></span>  
  
 <span data-ttu-id="26d05-617">Ограничения для значений на <xref:System.Double> с установленным значением <xref:System.Windows.ValidateValueCallback> механизм.</span><span class="sxs-lookup"><span data-stu-id="26d05-617">The value restrictions on the <xref:System.Double> value are enforced by a <xref:System.Windows.ValidateValueCallback> mechanism.</span></span> <span data-ttu-id="26d05-618">Если вы попытаетесь указать недопустимое значение, создается исключение времени выполнения.</span><span class="sxs-lookup"><span data-stu-id="26d05-618">If you attempt to set an invalid value, a run-time exception is thrown.</span></span>  
  
 <span data-ttu-id="26d05-619">В дополнение к проверке подлинности, имеется значение недетерминированные верхней границы для <xref:System.Windows.FrameworkElement.Height%2A> , обеспечивается системой макета (это очень много, размер которых превышает <xref:System.Single.MaxValue?displayProperty=nameWithType> но меньше, чем <xref:System.Double.MaxValue?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="26d05-619">In addition to the validation check, there is a nondeterministic upper value bound for <xref:System.Windows.FrameworkElement.Height%2A> that is enforced by the layout system (this is a very large number, larger than <xref:System.Single.MaxValue?displayProperty=nameWithType> but smaller than <xref:System.Double.MaxValue?displayProperty=nameWithType>).</span></span> <span data-ttu-id="26d05-620">Если вы превысите это ограничение, элемент не будет отображаться, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="26d05-620">If you exceed this bound, the element will not render, and no exception is thrown.</span></span> <span data-ttu-id="26d05-621">Не устанавливайте <xref:System.Windows.FrameworkElement.Height%2A> значение значительно больше, чем максимальный размер любого возможного визуального дисплея, или может превысить эту недетерминированную верхнюю границу.</span><span class="sxs-lookup"><span data-stu-id="26d05-621">Do not set <xref:System.Windows.FrameworkElement.Height%2A> to a value that is significantly larger than the maximum size of any possible visual display, or you may exceed this nondeterministic upper bound.</span></span>  
  
<a name="xamlAttributeUsage_Height"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="26d05-622">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="26d05-622">XAML Attribute Usage</span></span>  
  
```  
<object Height="double"/>  
- or -  
<object Height="qualifiedDouble"/>  
- or -  
<object Height="Auto"/>  
```  
  
<a name="xamlValues_Height"></a>   
## <a name="xaml-values"></a><span data-ttu-id="26d05-623">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="26d05-623">XAML Values</span></span>  
 <span data-ttu-id="26d05-624">*double*</span><span class="sxs-lookup"><span data-stu-id="26d05-624">*double*</span></span>  
 <xref:System.Double>  
  
 <span data-ttu-id="26d05-625">Строковое представление <xref:System.Double> значение, равное или больше 0,0.</span><span class="sxs-lookup"><span data-stu-id="26d05-625">String representation of a <xref:System.Double> value equal to or greater than 0.0.</span></span> <span data-ttu-id="26d05-626">Сведения о верхней границе см. в разделе "Примечания".</span><span class="sxs-lookup"><span data-stu-id="26d05-626">See Remarks for upper bound information.</span></span> <span data-ttu-id="26d05-627">Это значение интерпретируется как [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] измерения.</span><span class="sxs-lookup"><span data-stu-id="26d05-627">This value is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="26d05-628">Строки не нужно явно указывать десятичных запятых.</span><span class="sxs-lookup"><span data-stu-id="26d05-628">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="26d05-629">Для экземпляра значение `1` приемлемо.</span><span class="sxs-lookup"><span data-stu-id="26d05-629">For instance a value of `1` is acceptable.</span></span>  
  
 <span data-ttu-id="26d05-630">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="26d05-630">*qualifiedDouble*</span></span>  
 <span data-ttu-id="26d05-631">Объект *двойные* значение как описано выше, за которым следует один из следующих строк объявления единицы измерения: `px`, `in`, `cm`, `pt`.</span><span class="sxs-lookup"><span data-stu-id="26d05-631">A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="26d05-632">`px` (по умолчанию) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="26d05-632">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="26d05-633">`in` дюймах; 1 in == 96 точек</span><span class="sxs-lookup"><span data-stu-id="26d05-633">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="26d05-634">`cm` сантиметрах; 1см==(96/2,54) px</span><span class="sxs-lookup"><span data-stu-id="26d05-634">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="26d05-635">`pt` точках; 1точка==(96/72) px</span><span class="sxs-lookup"><span data-stu-id="26d05-635">`pt` is points; 1pt==(96/72) px</span></span>  
  
 <span data-ttu-id="26d05-636">**Auto**</span><span class="sxs-lookup"><span data-stu-id="26d05-636">**Auto**</span></span>  
 <span data-ttu-id="26d05-637">Включает автоматическое определение размера.</span><span class="sxs-lookup"><span data-stu-id="26d05-637">Enables autosizing behavior.</span></span> <span data-ttu-id="26d05-638">См. заметки.</span><span class="sxs-lookup"><span data-stu-id="26d05-638">See Remarks.</span></span>  
  
<a name="dependencyPropertyInfo_Height"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="26d05-639">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="26d05-639">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="26d05-640">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="26d05-640">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.HeightProperty>|  
|<span data-ttu-id="26d05-641">Значение свойства метаданных `true`</span><span class="sxs-lookup"><span data-stu-id="26d05-641">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkElement.ActualHeight" />
      </Docs>
    </Member>
    <Member MemberName="HeightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HeightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.HeightProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HeightProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HeightProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HeightProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.HeightProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-642">Идентифицирует свойство зависимостей <see cref="P:System.Windows.FrameworkElement.Height" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-642">Identifies the <see cref="P:System.Windows.FrameworkElement.Height" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.HorizontalAlignment HorizontalAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.HorizontalAlignment HorizontalAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.HorizontalAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property HorizontalAlignment As HorizontalAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::HorizontalAlignment HorizontalAlignment { System::Windows::HorizontalAlignment get(); void set(System::Windows::HorizontalAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalAlignment : System.Windows.HorizontalAlignment with get, set" Usage="System.Windows.FrameworkElement.HorizontalAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.HorizontalAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-643">Получение или установка характеристик выравнивания по горизонтали, применяемых к этому элементу при его размещении в родительском элементе управления, например в панели или элементе управления элементами.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-643">Gets or sets the horizontal alignment characteristics applied to this element when it is composed within a parent element, such as a panel or items control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26d05-644">Параметр горизонтального выравнивания как значение перечисления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-644">A horizontal alignment setting, as a value of the enumeration.</span>
          </span>
          <span data-ttu-id="26d05-645">Значение по умолчанию: <see cref="F:System.Windows.HorizontalAlignment.Stretch" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-645">The default is <see cref="F:System.Windows.HorizontalAlignment.Stretch" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-646">Когда <xref:System.Windows.FrameworkElement.Height%2A> и <xref:System.Windows.FrameworkElement.Width%2A> явно задано для элемента, эти измерения, более приоритетны во время структурирования и отменит типичный последствия параметр <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> для <xref:System.Windows.HorizontalAlignment.Stretch>.</span><span class="sxs-lookup"><span data-stu-id="26d05-646">When <xref:System.Windows.FrameworkElement.Height%2A> and <xref:System.Windows.FrameworkElement.Width%2A> properties are explicitly set on an element, these measurements take higher precedent during layout and will cancel the typical effects of setting <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> to <xref:System.Windows.HorizontalAlignment.Stretch>.</span></span>  
  
 <span data-ttu-id="26d05-647"><xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> является [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] метод доступа свойства для Какова на самом деле свойство зависимостей.</span><span class="sxs-lookup"><span data-stu-id="26d05-647"><xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> is the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] property accessor for what is in reality a dependency property.</span></span> <span data-ttu-id="26d05-648">Это свойство определенная зависимость довольно часто имеет значение «по умолчанию» по-разному в подклассах элементов, в частности в элементах управления.</span><span class="sxs-lookup"><span data-stu-id="26d05-648">This particular dependency property quite frequently has its apparent "default" value set differently in subclassed elements, particularly controls.</span></span> <span data-ttu-id="26d05-649">Обычно это происходит в одном из двух способов: свойство зависимости регистрируется повторно для конкретного подкласса, но с разными метаданными для задания значения по умолчанию; или стиль по умолчанию применяется, который задает значение свойства зависимостей по-разному.</span><span class="sxs-lookup"><span data-stu-id="26d05-649">This generally occurs in one of two ways: the dependency property is re-registered to a particular subclass, but with different metadata for setting its defaults; or there is a default style being applied that sets that dependency property value differently.</span></span> <span data-ttu-id="26d05-650">Например, «по умолчанию» из <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> для <xref:System.Windows.Controls.Label> элемент управления будет <xref:System.Windows.HorizontalAlignment.Left>, даже если <xref:System.Windows.Controls.Label> наследует <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> непосредственно от <xref:System.Windows.FrameworkElement>.</span><span class="sxs-lookup"><span data-stu-id="26d05-650">For example, the apparent "default" of <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> for a <xref:System.Windows.Controls.Label> control will be <xref:System.Windows.HorizontalAlignment.Left>, even though <xref:System.Windows.Controls.Label> inherits <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> direct from <xref:System.Windows.FrameworkElement>.</span></span> <span data-ttu-id="26d05-651">Это обусловлено тем, это значение было сброшено в качестве стиля по умолчанию <xref:System.Windows.Controls.Label>, в шаблоне стиля элемента управления.</span><span class="sxs-lookup"><span data-stu-id="26d05-651">This is because that value was reset within the default style of <xref:System.Windows.Controls.Label>, within the style's control template.</span></span>  
  
 <span data-ttu-id="26d05-652"><xref:System.Windows.Controls.Canvas> не используйте <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> при создании макета, так как <xref:System.Windows.Controls.Canvas> основывающаяся на абсолютном позиционировании.</span><span class="sxs-lookup"><span data-stu-id="26d05-652"><xref:System.Windows.Controls.Canvas> does not use <xref:System.Windows.FrameworkElement.HorizontalAlignment%2A> when composing layout, because <xref:System.Windows.Controls.Canvas> is based on absolute positioning.</span></span>  
  
 <span data-ttu-id="26d05-653">Если наследуемые <xref:System.Windows.Controls.Label> или производных классов, <xref:System.Windows.Controls.Label> переопределяет значение по умолчанию этого свойства зависимостей, чтобы быть <xref:System.Windows.HorizontalAlignment.Left>.</span><span class="sxs-lookup"><span data-stu-id="26d05-653">When inherited by <xref:System.Windows.Controls.Label> or derived classes, <xref:System.Windows.Controls.Label> redefines the default value of this dependency property to be <xref:System.Windows.HorizontalAlignment.Left>.</span></span>  
  
<a name="dependencyPropertyInfo_HorizontalAlignment"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="26d05-654">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="26d05-654">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="26d05-655">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="26d05-655">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.HorizontalAlignmentProperty>|  
|<span data-ttu-id="26d05-656">Значение свойства метаданных `true`</span><span class="sxs-lookup"><span data-stu-id="26d05-656">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsArrange%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlignmentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty HorizontalAlignmentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty HorizontalAlignmentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.HorizontalAlignmentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HorizontalAlignmentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ HorizontalAlignmentProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable HorizontalAlignmentProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.HorizontalAlignmentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-657">Идентифицирует свойство зависимостей <see cref="P:System.Windows.FrameworkElement.HorizontalAlignment" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-657">Identifies the <see cref="P:System.Windows.FrameworkElement.HorizontalAlignment" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InheritanceBehavior">
      <MemberSignature Language="C#" Value="protected internal System.Windows.InheritanceBehavior InheritanceBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.InheritanceBehavior InheritanceBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.InheritanceBehavior" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Property InheritanceBehavior As InheritanceBehavior" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Windows::InheritanceBehavior InheritanceBehavior { System::Windows::InheritanceBehavior get(); void set(System::Windows::InheritanceBehavior value); };" />
      <MemberSignature Language="F#" Value="member this.InheritanceBehavior : System.Windows.InheritanceBehavior with get, set" Usage="System.Windows.FrameworkElement.InheritanceBehavior" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.InheritanceBehavior</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-658">Получает или задает пределы области видимости для наследования значений свойств, поиска ключей ресурсов и поиска RelativeSource FindAncestor.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-658">Gets or sets the scope limits for property value inheritance, resource key lookup, and RelativeSource FindAncestor lookup.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26d05-659">Значение перечисления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-659">A value of the enumeration.</span>
          </span>
          <span data-ttu-id="26d05-660">Значение по умолчанию: <see cref="F:System.Windows.InheritanceBehavior.Default" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-660">The default is <see cref="F:System.Windows.InheritanceBehavior.Default" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-661">Определенные границы в элементе дерева набора <xref:System.Windows.FrameworkElement.InheritanceBehavior%2A> чтобы намеренно ограничить область поведение наследования, то поиск ресурсов force для проверки ресурсов приложения, или чтобы не дать поиска RelativeSource FindAncestor запрашивать текущий элемент или какого-либо другого.</span><span class="sxs-lookup"><span data-stu-id="26d05-661">Certain boundaries in the element tree set <xref:System.Windows.FrameworkElement.InheritanceBehavior%2A> to deliberately limit the scope of inheritance behavior, to a force resource lookup to check the application resources, or to prevent a RelativeSource FindAncestor lookup from querying the current element or any further.</span></span> <span data-ttu-id="26d05-662">Также поиска RelativeSource FindAncestor происходит, когда привязка использует <xref:System.Windows.Data.RelativeSource> с его <xref:System.Windows.Data.RelativeSource.Mode%2A> свойству присвоено <xref:System.Windows.Data.RelativeSourceMode.FindAncestor?displayProperty=nameWithType> значение.</span><span class="sxs-lookup"><span data-stu-id="26d05-662">RelativeSource FindAncestor lookup occurs when a binding uses a <xref:System.Windows.Data.RelativeSource> that has its <xref:System.Windows.Data.RelativeSource.Mode%2A> property set to the <xref:System.Windows.Data.RelativeSourceMode.FindAncestor?displayProperty=nameWithType> value.</span></span>  
  
 <span data-ttu-id="26d05-663">Производный класс и присвойте этому свойству следует это необходимо делать в статическом конструкторе или в других процедур инициализации.</span><span class="sxs-lookup"><span data-stu-id="26d05-663">If you want your derived class to set this property, you should do so within the static constructor or in other initialization routines.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.Frame" />
      </Docs>
    </Member>
    <Member MemberName="Initialized">
      <MemberSignature Language="C#" Value="public event EventHandler Initialized;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Initialized" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkElement.Initialized" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Initialized As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Initialized;" />
      <MemberSignature Language="F#" Value="member this.Initialized : EventHandler " Usage="member this.Initialized : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-664">Происходит во время инициализации данного <see cref="T:System.Windows.FrameworkElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-664">Occurs when this <see cref="T:System.Windows.FrameworkElement" /> is initialized.</span>
          </span>
          <span data-ttu-id="26d05-665">Данное событие совпадает со случаями, когда значение свойства <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> изменяется с <see langword="false" /> (или неопределенного) на <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-665">This event coincides with cases where the value of the <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> property changes from <see langword="false" /> (or undefined) to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-666">Это событие будет вызывается при изменении <xref:System.Windows.FrameworkElement.EndInit%2A> или <xref:System.Windows.FrameworkElement.OnVisualParentChanged%2A> методы вызываются.</span><span class="sxs-lookup"><span data-stu-id="26d05-666">This event will be raised whenever the <xref:System.Windows.FrameworkElement.EndInit%2A> or <xref:System.Windows.FrameworkElement.OnVisualParentChanged%2A> methods are called.</span></span> <span data-ttu-id="26d05-667">Вызовы для любого из этих методов производятся из кода приложения или с помощью [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] поведение процессора при [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] обработки страницы.</span><span class="sxs-lookup"><span data-stu-id="26d05-667">Calls to either method could have come from application code, or through the [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] processor behavior when a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] page is processed.</span></span>  
  
 <span data-ttu-id="26d05-668">Выбор режима обработки <xref:System.Windows.FrameworkElement.Loaded> или <xref:System.Windows.FrameworkElement.Initialized> зависит от требований.</span><span class="sxs-lookup"><span data-stu-id="26d05-668">Whether you choose to handle <xref:System.Windows.FrameworkElement.Loaded> or <xref:System.Windows.FrameworkElement.Initialized> depends on your requirements.</span></span> <span data-ttu-id="26d05-669">Если вам не нужно считывать свойства элементов, необходимо сбросить свойства и не обязательно все сведения о макете <xref:System.Windows.FrameworkElement.Initialized> лучше событие, с которым выполняется действие.</span><span class="sxs-lookup"><span data-stu-id="26d05-669">If you do not need to read element properties, intend to reset properties, and do not need any layout information, <xref:System.Windows.FrameworkElement.Initialized> might be the better event to act upon.</span></span> <span data-ttu-id="26d05-670">Если вам нужен все свойства элемента доступны, и установка свойств, которые, скорее всего сбросить макет, <xref:System.Windows.FrameworkElement.Loaded> может быть лучше событий, с которым выполняется действие.</span><span class="sxs-lookup"><span data-stu-id="26d05-670">If you need all properties of the element to be available, and you will be setting properties that are likely to reset the layout, <xref:System.Windows.FrameworkElement.Loaded> might be the better event to act upon.</span></span> <span data-ttu-id="26d05-671">Будьте внимательны повторного входа, если обработчик сбрасывает все свойства, которые интерпретируются системой макета, что имеется в виду, что новый проход макета является обязательным.</span><span class="sxs-lookup"><span data-stu-id="26d05-671">Be careful of reentrancy if your handler resets any properties that are interpreted by the layout system to mean that a new layout pass is required.</span></span> <span data-ttu-id="26d05-672">(Может потребоваться проверить <xref:System.Windows.FrameworkPropertyMetadata> передавать значения для свойства, если вы не знаете свойства, которые может потребоваться новый макет, если они изменились.)</span><span class="sxs-lookup"><span data-stu-id="26d05-672">(You might need to check the <xref:System.Windows.FrameworkPropertyMetadata> values on the property if you are unsure of which properties can require a new layout pass if they are changed.)</span></span>  
  
 <span data-ttu-id="26d05-673">Дополнительные сведения о последовательности событий объекта для <xref:System.Windows.FrameworkElement>, а также нескольких связанных классах приложений и элементов, см. в разделе [события времени жизни объекта](~/docs/framework/wpf/advanced/object-lifetime-events.md).</span><span class="sxs-lookup"><span data-stu-id="26d05-673">For more information about the sequence of object events for a <xref:System.Windows.FrameworkElement>, and also for several related application and element classes, see [Object Lifetime Events](~/docs/framework/wpf/advanced/object-lifetime-events.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.OnInitialized(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="InputScope">
      <MemberSignature Language="C#" Value="public System.Windows.Input.InputScope InputScope { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Input.InputScope InputScope" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.InputScope" />
      <MemberSignature Language="VB.NET" Value="Public Property InputScope As InputScope" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Input::InputScope ^ InputScope { System::Windows::Input::InputScope ^ get(); void set(System::Windows::Input::InputScope ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InputScope : System.Windows.Input.InputScope with get, set" Usage="System.Windows.FrameworkElement.InputScope" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Input.InputScope</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-674">Получает или задает контекст для ввода, используемый данным <see cref="T:System.Windows.FrameworkElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-674">Gets or sets the context for input used by this <see cref="T:System.Windows.FrameworkElement" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26d05-675">Область ввода, которая изменяет интерпретацию ввода с помощью альтернативных методов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-675">The input scope, which modifies how input from alternative input methods is interpreted.</span>
          </span>
          <span data-ttu-id="26d05-676">Значение по умолчанию равно <see langword="null" /> (что приводит к обработке команд по умолчанию).</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-676">The default value is <see langword="null" /> (which results in a default handling of commands).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-677">Это свойство зависимостей наследует значения свойств.</span><span class="sxs-lookup"><span data-stu-id="26d05-677">This dependency property inherits property values.</span></span> <span data-ttu-id="26d05-678">Если существуют дочерние элементы без других значений для <xref:System.Windows.FrameworkElement.InputScope%2A> установленное при помощи локальных значений или стили, то система свойств будет задать значение должно быть <xref:System.Windows.FrameworkElement.InputScope%2A> значение ближайшего предка элемента с назначенным данным значением.</span><span class="sxs-lookup"><span data-stu-id="26d05-678">If there are child elements without other values for <xref:System.Windows.FrameworkElement.InputScope%2A> established through local values or styles, then the property system will set the value to be the <xref:System.Windows.FrameworkElement.InputScope%2A> value of the nearest ancestor element with this value assigned.</span></span>  
  
 <span data-ttu-id="26d05-679">Несмотря на то что [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] синтаксис использования указано и синтаксически разрешено, задание этого свойства [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] не часто.</span><span class="sxs-lookup"><span data-stu-id="26d05-679">Although a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax usage is listed and is syntactically allowed, setting this property in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is not common.</span></span>  
  
<a name="dependencyPropertyInfo_InputScope"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="26d05-680">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="26d05-680">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="26d05-681">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="26d05-681">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.InputScopeProperty>|  
|<span data-ttu-id="26d05-682">Значение свойства метаданных `true`</span><span class="sxs-lookup"><span data-stu-id="26d05-682">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Input.InputScope" />
        <altmember cref="T:System.Windows.IInputElement" />
      </Docs>
    </Member>
    <Member MemberName="InputScopeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty InputScopeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty InputScopeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.InputScopeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InputScopeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ InputScopeProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable InputScopeProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.InputScopeProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-683">Идентифицирует свойство зависимостей <see cref="P:System.Windows.FrameworkElement.InputScope" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-683">Identifies the <see cref="P:System.Windows.FrameworkElement.InputScope" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsInitialized">
      <MemberSignature Language="C#" Value="public bool IsInitialized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsInitialized" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.IsInitialized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsInitialized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsInitialized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsInitialized : bool" Usage="System.Windows.FrameworkElement.IsInitialized" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-684">Возвращает значение, показывающее, был ли инициализирован данный элемент — либо в ходе обработки процессором [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], либо путем явного вызова его метода <see cref="M:System.Windows.FrameworkElement.EndInit" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-684">Gets a value that indicates whether this element has been initialized, either during processing by a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] processor, or by explicitly having its <see cref="M:System.Windows.FrameworkElement.EndInit" /> method called.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26d05-685">
            <see langword="true" />, если элемент инициализирован путем вышеупомянутой обработки [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] или вызова методов; в противном случае — <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-685">
              <see langword="true" /> if the element is initialized per the aforementioned [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] processing or method calls; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-686">Это свойство также может быть `true` Если этот элемент был перемещен в логическом дереве таким образом, он имеет новый родительский элемент и снова станет перегруженным.</span><span class="sxs-lookup"><span data-stu-id="26d05-686">This property may also be `true` if this element has been moved within the logical tree such that it has a new parent element, and therefore becomes reloaded again.</span></span>  
  
 <span data-ttu-id="26d05-687">Это свойство полезно, если вы также используете <xref:System.Windows.FrameworkElement.BeginInit%2A> и <xref:System.Windows.FrameworkElement.EndInit%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-687">This property is useful if you also are using <xref:System.Windows.FrameworkElement.BeginInit%2A> and <xref:System.Windows.FrameworkElement.EndInit%2A>.</span></span> <span data-ttu-id="26d05-688">Элементы в логическом дереве, загружаемой в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] процессора подтверждаются выдавшей их инициализации.</span><span class="sxs-lookup"><span data-stu-id="26d05-688">Elements in the logical tree that is loaded by a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] processor are assured to be initialized.</span></span> <span data-ttu-id="26d05-689">Элементы не в логическом дереве инициализируются при <xref:System.Windows.FrameworkElement.EndInit%2A> вызывается.</span><span class="sxs-lookup"><span data-stu-id="26d05-689">Elements not in the logical tree are initialized when <xref:System.Windows.FrameworkElement.EndInit%2A> is called.</span></span> <span data-ttu-id="26d05-690">При отсутствии какой-либо определенной обработки из <xref:System.Windows.FrameworkElement.BeginInit%2A> и <xref:System.Windows.FrameworkElement.EndInit%2A>, это происходит сразу после завершения работы конструктор возвращает инициализированный результат.</span><span class="sxs-lookup"><span data-stu-id="26d05-690">In absence of any specific handling of <xref:System.Windows.FrameworkElement.BeginInit%2A> and <xref:System.Windows.FrameworkElement.EndInit%2A>, this will happen as soon as the constructor returns the initialized result.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsLoaded">
      <MemberSignature Language="C#" Value="public bool IsLoaded { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsLoaded" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.IsLoaded" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsLoaded As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsLoaded { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsLoaded : bool" Usage="System.Windows.FrameworkElement.IsLoaded" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-691">Возвращает значение, указывающее, загружен ли данный элемент для презентации.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-691">Gets a value that indicates whether this element has been loaded for presentation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26d05-692">
            <see langword="true" />, если текущий элемент присоединен к дереву элементов; <see langword="false" />, если элемент никогда не был присоединен к загруженному дереву элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-692">
              <see langword="true" /> if the current element is attached to an element tree; <see langword="false" /> if the element has never been attached to a loaded element tree.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-693">Из только что созданной <xref:System.Windows.FrameworkElement>, это свойство начинается `false`и остается `true` после он становится равным `true`, даже если элемент исключен из подключенного логического дерева по коду.</span><span class="sxs-lookup"><span data-stu-id="26d05-693">From a newly constructed <xref:System.Windows.FrameworkElement>, this property starts off `false`, and remains `true` after it is set to `true`, even if the element is subsequently removed from a connected logical tree by code.</span></span> <span data-ttu-id="26d05-694">`true` состояние задается общей логикой презентации при загрузке элементов в механизм презентации.</span><span class="sxs-lookup"><span data-stu-id="26d05-694">`true` state is set by the general presentation logic when elements are loaded into the presentation engine.</span></span>  
  
 <span data-ttu-id="26d05-695">Как правило, являются загруженных элементов, готовый для просмотра, но не все <xref:System.Windows.FrameworkElement> производные классы имеют презентации и другие свойства, такие как <xref:System.Windows.UIElement.Visibility%2A> могут повлиять на презентации.</span><span class="sxs-lookup"><span data-stu-id="26d05-695">Typically, loaded elements are rendered, but not all <xref:System.Windows.FrameworkElement> derived classes have a presentation, and other properties such as <xref:System.Windows.UIElement.Visibility%2A> can influence presentation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26d05-696">В следующем примере реализуется два обработчика: один обрабатывает <xref:System.Windows.FrameworkElement.Loaded> событий корневого элемента, чтобы убедиться, что корневого элемента страницы загружается, потому что это значение события.</span><span class="sxs-lookup"><span data-stu-id="26d05-696">The following example implements two handlers: one is handling the <xref:System.Windows.FrameworkElement.Loaded> event of the root element, so it is certain that the page root element is loaded because that is the significance of the event.</span></span> <span data-ttu-id="26d05-697">Другой обработчик привязан к пользовательского элемента управления и вызовы <xref:System.Windows.FrameworkElement.IsLoaded%2A> чтобы убедиться, что корневой элемент загружается полностью.</span><span class="sxs-lookup"><span data-stu-id="26d05-697">The other handler is hooked to a user control, and calls <xref:System.Windows.FrameworkElement.IsLoaded%2A> to assure that the root element is loaded completely.</span></span> <span data-ttu-id="26d05-698">Оба обработчика вызова ту же функцию (не показан), будет заполнять дочерних элементов с помощью новых данных.</span><span class="sxs-lookup"><span data-stu-id="26d05-698">Both handlers call the same function (not shown) that will populate child elements with fresh data.</span></span>  
  
 [!code-csharp[GroupBoxExample#FEIsLoaded](~/samples/snippets/csharp/VS_Snippets_Wpf/GroupBoxExample/CSharp/Page1.xaml.cs#feisloaded)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.FrameworkElement.Loaded" />
      </Docs>
    </Member>
    <Member MemberName="Language">
      <MemberSignature Language="C#" Value="public System.Windows.Markup.XmlLanguage Language { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Markup.XmlLanguage Language" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.Language" />
      <MemberSignature Language="VB.NET" Value="Public Property Language As XmlLanguage" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Markup::XmlLanguage ^ Language { System::Windows::Markup::XmlLanguage ^ get(); void set(System::Windows::Markup::XmlLanguage ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Language : System.Windows.Markup.XmlLanguage with get, set" Usage="System.Windows.FrameworkElement.Language" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.XmlLanguage</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-699">Возвращает или задает сведения о языке локализации и глобализации, который применяется к элементу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-699">Gets or sets localization/globalization language information that applies to an element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26d05-700">Сведения о языке для этого элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-700">The language information for this element.</span>
          </span>
          <span data-ttu-id="26d05-701">Значение по умолчанию — <see cref="T:System.Windows.Markup.XmlLanguage" />, для свойства <see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" /> которого установлено строковое значение "en-US".</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-701">The default value is an <see cref="T:System.Windows.Markup.XmlLanguage" /> with its <see cref="P:System.Windows.Markup.XmlLanguage.IetfLanguageTag" /> value set to the string "en-US".</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-702">Строковые форматы соответствуют стандарту RFC 3066.</span><span class="sxs-lookup"><span data-stu-id="26d05-702">The string formats follow the RFC 3066 standard.</span></span> <span data-ttu-id="26d05-703">Например США Английский — «en US».</span><span class="sxs-lookup"><span data-stu-id="26d05-703">For example, U.S. English is "en-US".</span></span> <span data-ttu-id="26d05-704">Дополнительные сведения о значениях и формате см. в разделе <xref:System.Windows.Markup.XmlLanguage>.</span><span class="sxs-lookup"><span data-stu-id="26d05-704">For more information on the values and format, see <xref:System.Windows.Markup.XmlLanguage>.</span></span>  
  
 <span data-ttu-id="26d05-705">Это свойство зависимостей наследует значения свойств.</span><span class="sxs-lookup"><span data-stu-id="26d05-705">This dependency property inherits property values.</span></span> <span data-ttu-id="26d05-706">Если существуют дочерние элементы без других значений для <xref:System.Windows.FrameworkElement.Language%2A> установленное при помощи локальных значений или стили, система свойств задаст значение должно быть <xref:System.Windows.FrameworkElement.Language%2A> значение ближайшего предка элемента с назначенным данным значением.</span><span class="sxs-lookup"><span data-stu-id="26d05-706">If there are child elements without other values for <xref:System.Windows.FrameworkElement.Language%2A> established through local values or styles, the property system will set the value to be the <xref:System.Windows.FrameworkElement.Language%2A> value of the nearest ancestor element with this value assigned.</span></span>  
  
 [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)]<span data-ttu-id="26d05-707"> Определяет общие значения `xml:lang` атрибута.</span><span class="sxs-lookup"><span data-stu-id="26d05-707"> defines the general meaning of the `xml:lang` attribute.</span></span> <span data-ttu-id="26d05-708"><xref:System.Windows.FrameworkElement.Language%2A> по сути, открывает значение этого атрибута как свойство зависимостей.</span><span class="sxs-lookup"><span data-stu-id="26d05-708"><xref:System.Windows.FrameworkElement.Language%2A> essentially exposes the meaning of this attribute as a dependency property.</span></span> <span data-ttu-id="26d05-709"><xref:System.Windows.FrameworkElement.Language%2A> можно изменить программно и могут участвовать в наследование значения свойства системы способом, который работает так же как `xml:lang` может наследовать атрибут к дочерней элемент [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="26d05-709"><xref:System.Windows.FrameworkElement.Language%2A> can be adjusted programmatically, and can participate in property system value inheritance in a way that parallels how the `xml:lang` attribute can inherit to child element scope in [!INCLUDE[TLA2#tla_xml](~/includes/tla2sharptla-xml-md.md)].</span></span> <span data-ttu-id="26d05-710">Если задать <xref:System.Windows.FrameworkElement.Language%2A>, это значение становится `xml:lang` и перезаписывает все предыдущие значения.</span><span class="sxs-lookup"><span data-stu-id="26d05-710">If you set <xref:System.Windows.FrameworkElement.Language%2A>, that value becomes the `xml:lang` and overwrites any previous value.</span></span> <span data-ttu-id="26d05-711">Дополнительные сведения см. в разделе [XML: lang в XAML обработки](~/docs/framework/xaml-services/xml-lang-handling-in-xaml.md).</span><span class="sxs-lookup"><span data-stu-id="26d05-711">For more information, see [xml:lang Handling in XAML](~/docs/framework/xaml-services/xml-lang-handling-in-xaml.md).</span></span>  
  
<a name="dependencyPropertyInfo_CultureInfo"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="26d05-712">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="26d05-712">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="26d05-713">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="26d05-713">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.LanguageProperty>|  
|<span data-ttu-id="26d05-714">Значение свойства метаданных `true`</span><span class="sxs-lookup"><span data-stu-id="26d05-714">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.Inherits%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LanguageProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LanguageProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LanguageProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.LanguageProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LanguageProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LanguageProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LanguageProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.LanguageProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-715">Идентифицирует свойство зависимостей <see cref="P:System.Windows.FrameworkElement.Language" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-715">Identifies the <see cref="P:System.Windows.FrameworkElement.Language" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutTransform">
      <MemberSignature Language="C#" Value="public System.Windows.Media.Transform LayoutTransform { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Transform LayoutTransform" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.LayoutTransform" />
      <MemberSignature Language="VB.NET" Value="Public Property LayoutTransform As Transform" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::Transform ^ LayoutTransform { System::Windows::Media::Transform ^ get(); void set(System::Windows::Media::Transform ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LayoutTransform : System.Windows.Media.Transform with get, set" Usage="System.Windows.FrameworkElement.LayoutTransform" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Transform</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-716">Получает или задает графическое преобразование, которое применяется к элементу при изменении параметров размещения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-716">Gets or sets a graphics transformation that should apply to this element when  layout is performed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26d05-717">Преобразование, которое должен использовать данный элемент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-717">The transform this element should use.</span>
          </span>
          <span data-ttu-id="26d05-718">Значение по умолчанию: <see cref="P:System.Windows.Media.Transform.Identity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-718">The default is <see cref="P:System.Windows.Media.Transform.Identity" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-719">В отличие от к <xref:System.Windows.UIElement.RenderTransform%2A>, <xref:System.Windows.FrameworkElement.LayoutTransform%2A> повлияет на результаты макета.</span><span class="sxs-lookup"><span data-stu-id="26d05-719">In contrast to <xref:System.Windows.UIElement.RenderTransform%2A>, <xref:System.Windows.FrameworkElement.LayoutTransform%2A> will affect results of layout.</span></span>  
  
 <span data-ttu-id="26d05-720">Задание преобразования предоставляет мощные возможности масштабирования и вращения.</span><span class="sxs-lookup"><span data-stu-id="26d05-720">Setting a transform provides powerful capabilities of scaling and rotating.</span></span> <span data-ttu-id="26d05-721">Тем не менее <xref:System.Windows.FrameworkElement.LayoutTransform%2A> игнорирует <xref:System.Windows.Media.TranslateTransform> операций.</span><span class="sxs-lookup"><span data-stu-id="26d05-721">However, <xref:System.Windows.FrameworkElement.LayoutTransform%2A> ignores <xref:System.Windows.Media.TranslateTransform> operations.</span></span> <span data-ttu-id="26d05-722">Это обусловлено тем, поведение системы макета для дочерних элементов <xref:System.Windows.FrameworkElement> автоматически исправляет любые смещения расположения элемента масштабированный и повернутый с макетом и системы координат родительского элемента.</span><span class="sxs-lookup"><span data-stu-id="26d05-722">This is because the layout system behavior for child elements of a <xref:System.Windows.FrameworkElement> auto-corrects any offsets to the position of a scaled or rotated element into the layout and coordinate system of the parent element.</span></span>  
  
 <span data-ttu-id="26d05-723"><xref:System.Windows.FrameworkElement.LayoutTransform%2A> может привести к ухудшению производительности приложения, если ее можно вызвать в сценарии, который не требуется полный проход системы макета.</span><span class="sxs-lookup"><span data-stu-id="26d05-723"><xref:System.Windows.FrameworkElement.LayoutTransform%2A> can lead to poor application performance if you invoke it in a scenario that does not require a full pass by the layout system.</span></span> <span data-ttu-id="26d05-724">При применении <xref:System.Windows.FrameworkElement.LayoutTransform%2A> для <xref:System.Windows.Controls.Panel.Children%2A> коллекцию <xref:System.Windows.Controls.Panel>, оно активирует новый проход системы макета и заставляет все объекты на экране необходимо повторно измерить и упорядочить.</span><span class="sxs-lookup"><span data-stu-id="26d05-724">When you apply a <xref:System.Windows.FrameworkElement.LayoutTransform%2A> to the <xref:System.Windows.Controls.Panel.Children%2A> collection of the <xref:System.Windows.Controls.Panel>, it triggers a new pass by the layout system and forces all on-screen objects to be remeasured and rearranged.</span></span> <span data-ttu-id="26d05-725">Если вы обновляете полное приложение [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)], эта функция может оказаться именно то, что вам нужно.</span><span class="sxs-lookup"><span data-stu-id="26d05-725">If you are updating the complete application [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)], this functionality might be exactly what you need.</span></span> <span data-ttu-id="26d05-726">Тем не менее, если не требуется полная передача макета, используйте <xref:System.Windows.UIElement.RenderTransform%2A> свойство, которое не вызывает систему макета и, как правило, лучшим выбором для этого сценария.</span><span class="sxs-lookup"><span data-stu-id="26d05-726">However, if you do not need a full layout pass, use the <xref:System.Windows.UIElement.RenderTransform%2A> property, which does not invoke the layout system, and therefore, is typically a better choice for this scenario.</span></span>  
  
 <span data-ttu-id="26d05-727">Примеры сценариев где <xref:System.Windows.FrameworkElement.LayoutTransform%2A> может быть полезно, включают: поворот элементов, таких как компоненты меню с горизонтального на вертикальное или наоборот, масштабирование элементы (увеличивать) при получении фокуса, предоставляя возможность редактирования и т. д.</span><span class="sxs-lookup"><span data-stu-id="26d05-727">Example scenarios where <xref:System.Windows.FrameworkElement.LayoutTransform%2A> would be useful include: rotating elements such as menu components from horizontal to vertical or vice versa, scaling elements (zooming in) on focus, providing editing behavior, etc.</span></span>  
  
<a name="dependencyPropertyInfo_LayoutTransform"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="26d05-728">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="26d05-728">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="26d05-729">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="26d05-729">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.LayoutTransformProperty>|  
|<span data-ttu-id="26d05-730">Значение свойства метаданных `true`</span><span class="sxs-lookup"><span data-stu-id="26d05-730">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="26d05-731">В следующем примере показано, как применить <xref:System.Windows.FrameworkElement.LayoutTransform%2A> на элемент.</span><span class="sxs-lookup"><span data-stu-id="26d05-731">The following example shows how to apply a <xref:System.Windows.FrameworkElement.LayoutTransform%2A> to an element.</span></span> <span data-ttu-id="26d05-732">В примере создается экземпляр <xref:System.Windows.Controls.Button> и размещает его в родительском элементе <xref:System.Windows.Controls.Grid>.</span><span class="sxs-lookup"><span data-stu-id="26d05-732">The example creates an instance of <xref:System.Windows.Controls.Button> and hosts it within a parent <xref:System.Windows.Controls.Grid>.</span></span> <span data-ttu-id="26d05-733">Он также использует <xref:System.Windows.FrameworkElement.LayoutTransform%2A> свойство для применения <xref:System.Windows.Media.RotateTransform> для <xref:System.Windows.Controls.Button>.</span><span class="sxs-lookup"><span data-stu-id="26d05-733">It also uses the <xref:System.Windows.FrameworkElement.LayoutTransform%2A> property to apply a <xref:System.Windows.Media.RotateTransform> to the <xref:System.Windows.Controls.Button>.</span></span>  
  
 [!code-cpp[LayoutTransform#1](~/samples/snippets/cpp/VS_Snippets_Wpf/LayoutTransform/CPP/LayoutTransform.cpp#1)]
 [!code-csharp[LayoutTransform#1](~/samples/snippets/csharp/VS_Snippets_Wpf/LayoutTransform/CSharp/LayoutTransform.cs#1)]
 [!code-vb[LayoutTransform#1](~/samples/snippets/visualbasic/VS_Snippets_Wpf/LayoutTransform/VisualBasic/LayoutTransform.vb#1)]
 [!code-xaml[LayoutTransform#1](~/samples/snippets/xaml/VS_Snippets_Wpf/LayoutTransform/XAML/default.xaml#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LayoutTransformProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty LayoutTransformProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty LayoutTransformProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.LayoutTransformProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LayoutTransformProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ LayoutTransformProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable LayoutTransformProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.LayoutTransformProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-734">Идентифицирует свойство зависимостей <see cref="P:System.Windows.FrameworkElement.LayoutTransform" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-734">Identifies the <see cref="P:System.Windows.FrameworkElement.LayoutTransform" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Loaded">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Loaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Loaded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkElement.Loaded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Loaded As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Loaded;" />
      <MemberSignature Language="F#" Value="member this.Loaded : System.Windows.RoutedEventHandler " Usage="member this.Loaded : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-735">Происходит, если элемент размещен, отрисован и готов к взаимодействию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-735">Occurs when the element is laid out, rendered, and ready for interaction.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-736"><xref:System.Windows.FrameworkElement.Loaded> Обычно последнее событие возникает в последовательности инициализации элемента.</span><span class="sxs-lookup"><span data-stu-id="26d05-736"><xref:System.Windows.FrameworkElement.Loaded> is usually the last event raised in an element initialization sequence.</span></span> <span data-ttu-id="26d05-737">Всегда будет вызываться после <xref:System.Windows.FrameworkElement.Initialized>.</span><span class="sxs-lookup"><span data-stu-id="26d05-737">It will always be raised after <xref:System.Windows.FrameworkElement.Initialized>.</span></span> <span data-ttu-id="26d05-738">Выбор режима обработки <xref:System.Windows.FrameworkElement.Loaded> или <xref:System.Windows.FrameworkElement.Initialized> зависит от требований.</span><span class="sxs-lookup"><span data-stu-id="26d05-738">Whether you choose to handle <xref:System.Windows.FrameworkElement.Loaded> or <xref:System.Windows.FrameworkElement.Initialized> depends on your requirements.</span></span> <span data-ttu-id="26d05-739">Если вам не нужно считывать свойства элементов, необходимо сбросить свойства и не обязательно все сведения о макете <xref:System.Windows.FrameworkElement.Initialized> лучше событие, с которым выполняется действие.</span><span class="sxs-lookup"><span data-stu-id="26d05-739">If you do not need to read element properties, intend to reset properties, and do not need any layout information, <xref:System.Windows.FrameworkElement.Initialized> might be the better event to act upon.</span></span> <span data-ttu-id="26d05-740">Если вам нужен все свойства элемента доступны, и установка свойств, которые, скорее всего сбросить макет, <xref:System.Windows.FrameworkElement.Loaded> может быть лучше событий, с которым выполняется действие.</span><span class="sxs-lookup"><span data-stu-id="26d05-740">If you need all properties of the element to be available, and you will be setting properties that are likely to reset the layout, <xref:System.Windows.FrameworkElement.Loaded> might be the better event to act upon.</span></span> <span data-ttu-id="26d05-741">Будьте внимательны повторного входа, если обработчик сбрасывает все свойства, которые интерпретируются системой макета, что имеется в виду, что новый проход макета является обязательным.</span><span class="sxs-lookup"><span data-stu-id="26d05-741">Be careful of reentrancy if your handler resets any properties that are interpreted by the layout system to mean that a new layout pass is required.</span></span> <span data-ttu-id="26d05-742">(Может потребоваться проверить <xref:System.Windows.FrameworkPropertyMetadata> передавать значения для свойства, если вы не знаете свойства, которые может потребоваться новый макет, если они изменились.)</span><span class="sxs-lookup"><span data-stu-id="26d05-742">(You might need to check the <xref:System.Windows.FrameworkPropertyMetadata> values on the property if you are unsure of which properties can require a new layout pass if they are changed.)</span></span>  
  
 <span data-ttu-id="26d05-743">Дополнительные сведения о последовательности событий объекта для <xref:System.Windows.FrameworkElement>, а также нескольких связанных классах приложений и элементов, см. в разделе [события времени жизни объекта](~/docs/framework/wpf/advanced/object-lifetime-events.md).</span><span class="sxs-lookup"><span data-stu-id="26d05-743">For more information about the sequence of object events for a <xref:System.Windows.FrameworkElement>, and also for several related application and element classes, see [Object Lifetime Events](~/docs/framework/wpf/advanced/object-lifetime-events.md).</span></span>  
  
 <span data-ttu-id="26d05-744">События с прямой маршрутизацией не выполняйте маршрут, они обрабатываются только внутри элемента, на котором они вызываются.</span><span class="sxs-lookup"><span data-stu-id="26d05-744">Direct routed events do not follow a route, they are only handled within the same element on which they are raised.</span></span> <span data-ttu-id="26d05-745">Прямые перенаправленные события поддерживают другие поведения перенаправленного события: они поддерживают коллекцию доступных обработчиков и могут использоваться в качестве <xref:System.Windows.EventTrigger> в стиле.</span><span class="sxs-lookup"><span data-stu-id="26d05-745">Direct routed events do support other routed event behavior: they support an accessible handlers collection, and can be used as an <xref:System.Windows.EventTrigger> in a style.</span></span>  
  
 <span data-ttu-id="26d05-746"><xref:System.Windows.FrameworkElement.Loaded> и <xref:System.Windows.FrameworkElement.Unloaded> оба возникающие в элементах управления, в результате изменения темы системы, инициированного пользователем.</span><span class="sxs-lookup"><span data-stu-id="26d05-746"><xref:System.Windows.FrameworkElement.Loaded> and <xref:System.Windows.FrameworkElement.Unloaded> might both be raised on controls as a result of user-initiated system theme changes.</span></span> <span data-ttu-id="26d05-747">Изменение темы делает недействительность шаблон элемента управления и автономной визуальное дерево, которое в свою очередь вызывает весь элемент управления для выгрузки и повторной загрузки.</span><span class="sxs-lookup"><span data-stu-id="26d05-747">A theme change causes an invalidation of the control template and the contained visual tree, which in turn causes the entire control to unload and reload.</span></span> <span data-ttu-id="26d05-748">Таким образом <xref:System.Windows.FrameworkElement.Loaded> нельзя предполагать, происходят только при первой загрузке страницы посредством перемещения на страницу.</span><span class="sxs-lookup"><span data-stu-id="26d05-748">Therefore <xref:System.Windows.FrameworkElement.Loaded> cannot be assumed to occur only when a page is first loaded through navigation to the page.</span></span>  
  
<a name="routedEventInfo_Loaded"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="26d05-749">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="26d05-749">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="26d05-750">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="26d05-750">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.LoadedEvent>|  
|<span data-ttu-id="26d05-751">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="26d05-751">Routing strategy</span></span>|<span data-ttu-id="26d05-752">Direct</span><span class="sxs-lookup"><span data-stu-id="26d05-752">Direct</span></span>|  
|<span data-ttu-id="26d05-753">делегат</span><span class="sxs-lookup"><span data-stu-id="26d05-753">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" />
      </Docs>
    </Member>
    <Member MemberName="LoadedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent LoadedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent LoadedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.LoadedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly LoadedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ LoadedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable LoadedEvent : System.Windows.RoutedEvent" Usage="System.Windows.FrameworkElement.LoadedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-754">Идентифицирует направленное событие <see cref="E:System.Windows.FrameworkElement.Loaded" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-754">Identifies the <see cref="E:System.Windows.FrameworkElement.Loaded" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-755">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="26d05-755">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="26d05-756">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="26d05-756">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="26d05-757">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="26d05-757">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="26d05-758">Дополнительные сведения о регистрации маршрутизированных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-758">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="26d05-759">Дополнительные сведения об использовании идентификаторов маршрутизируемых событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-759">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LogicalChildren">
      <MemberSignature Language="C#" Value="protected internal virtual System.Collections.IEnumerator LogicalChildren { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.IEnumerator LogicalChildren" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.LogicalChildren" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable ReadOnly Property LogicalChildren As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual property System::Collections::IEnumerator ^ LogicalChildren { System::Collections::IEnumerator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LogicalChildren : System.Collections.IEnumerator" Usage="System.Windows.FrameworkElement.LogicalChildren" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-760">Возвращает перечислитель для логических дочерних элементов данного элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-760">Gets an enumerator for logical child elements of this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26d05-761">Перечислитель для логических дочерних элементов данного элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-761">An enumerator for logical child elements of this element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-762"><xref:System.Windows.FrameworkElement.LogicalChildren%2A> позволяет выполнять итерацию по дочерним элементам.</span><span class="sxs-lookup"><span data-stu-id="26d05-762"><xref:System.Windows.FrameworkElement.LogicalChildren%2A> allows you to iterate over child elements.</span></span> <span data-ttu-id="26d05-763">Это полезно для элементов, которые могут не определен, выделенную коллекцию, но по-прежнему содержать более одного дочернего элемента, особенно <xref:System.Windows.FrameworkContentElement> дочерних элементов.</span><span class="sxs-lookup"><span data-stu-id="26d05-763">This is useful for elements that may not have a defined, dedicated collection but still contain more than one child element, particularly <xref:System.Windows.FrameworkContentElement> child elements.</span></span>  
  
 <span data-ttu-id="26d05-764">Дополнительные сведения об использовании <xref:System.Windows.FrameworkElement.LogicalChildren%2A> и <xref:System.Windows.FrameworkElement.AddLogicalChild%2A>, см. в разделе [деревья в WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="26d05-764">For more information on how to use <xref:System.Windows.FrameworkElement.LogicalChildren%2A> and <xref:System.Windows.FrameworkElement.AddLogicalChild%2A>, see [Trees in WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Margin">
      <MemberSignature Language="C#" Value="public System.Windows.Thickness Margin { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.Thickness Margin" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.Margin" />
      <MemberSignature Language="VB.NET" Value="Public Property Margin As Thickness" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Thickness Margin { System::Windows::Thickness get(); void set(System::Windows::Thickness value); };" />
      <MemberSignature Language="F#" Value="member this.Margin : System.Windows.Thickness with get, set" Usage="System.Windows.FrameworkElement.Margin" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Thickness</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-765">Получает или задает значение внешнего поля элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-765">Gets or sets the outer margin of an element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26d05-766">Предоставляет значения полей для элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-766">Provides margin values for the element.</span>
          </span>
          <span data-ttu-id="26d05-767">Значение по умолчанию равно <see cref="T:System.Windows.Thickness" /> со всеми свойствами, равными 0 (нулю).</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-767">The default value is a <see cref="T:System.Windows.Thickness" /> with all properties equal to 0 (zero).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-768">Поле — это пространство между данным элементом и другим элементам, которые будет размещаться рядом, когда создает макет [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="26d05-768">The margin is the space between this element and other elements that will be adjacent when layout creates the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span></span> <span data-ttu-id="26d05-769">Общие элементы могут быть одноранговыми (например, другие элементы в коллекции общего родительского элемента управления) или может быть родительским для данного элемента.</span><span class="sxs-lookup"><span data-stu-id="26d05-769">Shared elements might be peer elements (such as other elements in the collection of a common parent control), or might also be this element's parent.</span></span>  
  
 <span data-ttu-id="26d05-770"><xref:System.Windows.FrameworkElement.Margin%2A> задается как <xref:System.Windows.Thickness> структуры, а не как число, чтобы поле можно задать асимметрично.</span><span class="sxs-lookup"><span data-stu-id="26d05-770"><xref:System.Windows.FrameworkElement.Margin%2A> is set as a <xref:System.Windows.Thickness> structure rather than as a number so that the margin can be set asymmetrically.</span></span> <span data-ttu-id="26d05-771"><xref:System.Windows.Thickness> Сама структура поддерживает преобразования типов строковых, можно указать асимметричный <xref:System.Windows.FrameworkElement.Margin%2A> в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] также синтаксис атрибута.</span><span class="sxs-lookup"><span data-stu-id="26d05-771">The <xref:System.Windows.Thickness> structure itself supports string type conversion so that you can specify an asymmetric <xref:System.Windows.FrameworkElement.Margin%2A> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attribute syntax also.</span></span>  
  
 <span data-ttu-id="26d05-772">Ненулевое значение поля применяет пространство за пределами макет элемента <xref:System.Windows.FrameworkElement.ActualWidth%2A> и <xref:System.Windows.FrameworkElement.ActualHeight%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-772">A non-zero margin applies space outside the element layout's <xref:System.Windows.FrameworkElement.ActualWidth%2A> and <xref:System.Windows.FrameworkElement.ActualHeight%2A>.</span></span>  
  
 <span data-ttu-id="26d05-773">Поля являются аддитивными для одноуровневых элементов в макете; Например два соседних элемента, установленные с границей 30 в соседней edge бы 60 единиц пробела между ними.</span><span class="sxs-lookup"><span data-stu-id="26d05-773">Margins are additive for sibling elements in a layout; for example, two adjacent elements both with a margin of 30 set on the adjoining edge would have 60 units of space between them.</span></span>  
  
 <span data-ttu-id="26d05-774">Элементы, которые заданы поля обычно не ограничивают размер указанного <xref:System.Windows.FrameworkElement.Margin%2A> если выделенное прямоугольное пространство недостаточно велик для поля, а также область содержимого элемента.</span><span class="sxs-lookup"><span data-stu-id="26d05-774">Elements that have margins set will not typically constrain the size of the specified <xref:System.Windows.FrameworkElement.Margin%2A> if the allotted rectangle space is not large enough for the margin plus the element content area.</span></span> <span data-ttu-id="26d05-775">Область содержимого элемента будет ограничен вместо этого при вычислении макета.</span><span class="sxs-lookup"><span data-stu-id="26d05-775">The element content area will be constrained instead when layout is calculated.</span></span> <span data-ttu-id="26d05-776">Единственный случай, где будет ограничиваться поля также — если содержимое уже ограничен вплоть до нуля.</span><span class="sxs-lookup"><span data-stu-id="26d05-776">The only case where margins would be constrained also is if the content is already constrained all the way to zero.</span></span>  
  
<a name="xamlAttributeUsage_Margin"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="26d05-777">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="26d05-777">XAML Attribute Usage</span></span>  
  
```  
<object Margin="left,top,right,bottom"/>  
- or -  
<object Margin="left,top"/>  
- or -  
<object Margin="thicknessReference"/>  
```  
  
<a name="xamlPropertyElementUsage_Margin"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="26d05-778">Использование элемента свойства XAML</span><span class="sxs-lookup"><span data-stu-id="26d05-778">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.Margin>  
    <Thickness Left="left" Top="top" Right="right" Bottom="bottom"/>  
  </object.Margin>  
</object>  
```  
  
<a name="xamlValues_Margin"></a>   
## <a name="xaml-values"></a><span data-ttu-id="26d05-779">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="26d05-779">XAML Values</span></span>  
 <span data-ttu-id="26d05-780">*слева, сверху, справа, снизу*</span><span class="sxs-lookup"><span data-stu-id="26d05-780">*left, top, right, bottom*</span></span>  
 <span data-ttu-id="26d05-781">Числовые значения между 0 и <xref:System.Double.PositiveInfinity> , указать четыре возможных измерений свойства <xref:System.Windows.Thickness> структуры.</span><span class="sxs-lookup"><span data-stu-id="26d05-781">Number values between 0 and <xref:System.Double.PositiveInfinity> that specify the four possible dimension properties of a <xref:System.Windows.Thickness> structure.</span></span>  
  
 <span data-ttu-id="26d05-782">Использование атрибута также примет сокращенные значения, которые применяются в указанном порядке, симметрично и логически.</span><span class="sxs-lookup"><span data-stu-id="26d05-782">The attribute usage will also accept abbreviated values that apply in the order provided, symmetrically and logically.</span></span> <span data-ttu-id="26d05-783">Например `Margin="20"` будет интерпретироваться <xref:System.Windows.Thickness> со всеми свойствами, значение 20.</span><span class="sxs-lookup"><span data-stu-id="26d05-783">For instance, `Margin="20"` will be interpreted to mean a <xref:System.Windows.Thickness> with all properties set to 20.</span></span> <span data-ttu-id="26d05-784">`Margin="20,50"` будет интерпретироваться <xref:System.Windows.Thickness> с <xref:System.Windows.Thickness.Left%2A> и <xref:System.Windows.Thickness.Right%2A> значение 20, и <xref:System.Windows.Thickness.Top%2A> и <xref:System.Windows.Thickness.Bottom%2A> значение 50.</span><span class="sxs-lookup"><span data-stu-id="26d05-784">`Margin="20,50"` will be interpreted to mean a <xref:System.Windows.Thickness> with <xref:System.Windows.Thickness.Left%2A> and <xref:System.Windows.Thickness.Right%2A> set to 20, and <xref:System.Windows.Thickness.Top%2A> and <xref:System.Windows.Thickness.Bottom%2A> set to 50.</span></span>  
  
 <span data-ttu-id="26d05-785">Единица измерения по умолчанию для <xref:System.Windows.Thickness> мера [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)].</span><span class="sxs-lookup"><span data-stu-id="26d05-785">The default unit for a <xref:System.Windows.Thickness> measure is [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)].</span></span> <span data-ttu-id="26d05-786">Также можно указать другие единицы измерения путем добавления строк Тип единицы измерения `cm`, `in`, или `pt` к любой величине.</span><span class="sxs-lookup"><span data-stu-id="26d05-786">You can also specify other units by appending the unit type strings `cm`, `in`, or `pt` to any measure.</span></span>  
  
 <span data-ttu-id="26d05-787">Число значений, указанных как [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] атрибуты не требуется указывать десятичные точки (0 приемлемо, не обязательно должен быть представлен в виде 0,0).</span><span class="sxs-lookup"><span data-stu-id="26d05-787">Number values provided as [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] attributes need not specify decimal points (0 is acceptable, does not have to be provided as 0.0).</span></span> <span data-ttu-id="26d05-788">Дополнительные сведения о [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] использования, см. в разделе <xref:System.Windows.Thickness>.</span><span class="sxs-lookup"><span data-stu-id="26d05-788">For more information on [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] usage, see <xref:System.Windows.Thickness>.</span></span>  
  
 <span data-ttu-id="26d05-789">*thicknessReference*</span><span class="sxs-lookup"><span data-stu-id="26d05-789">*thicknessReference*</span></span>  
 <span data-ttu-id="26d05-790">Ссылка на объект в существующий <xref:System.Windows.Thickness>.</span><span class="sxs-lookup"><span data-stu-id="26d05-790">An object reference to an existing <xref:System.Windows.Thickness>.</span></span> <span data-ttu-id="26d05-791">Это может быть `}`, или `}` ссылки.</span><span class="sxs-lookup"><span data-stu-id="26d05-791">This might be a `}`, a , or `}` reference.</span></span> <span data-ttu-id="26d05-792">Дополнительные сведения о [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] использования, см. в разделе <xref:System.Windows.Thickness>.</span><span class="sxs-lookup"><span data-stu-id="26d05-792">For more information on [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] usage, see <xref:System.Windows.Thickness>.</span></span>  
  
<a name="dependencyPropertyInfo_Margin"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="26d05-793">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="26d05-793">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="26d05-794">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="26d05-794">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.MarginProperty>|  
|<span data-ttu-id="26d05-795">Значение свойства метаданных `true`</span><span class="sxs-lookup"><span data-stu-id="26d05-795">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Thickness" />
      </Docs>
    </Member>
    <Member MemberName="MarginProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MarginProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MarginProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.MarginProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MarginProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MarginProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MarginProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.MarginProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-796">Идентифицирует свойство зависимостей <see cref="P:System.Windows.FrameworkElement.Margin" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-796">Identifies the <see cref="P:System.Windows.FrameworkElement.Margin" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxHeight">
      <MemberSignature Language="C#" Value="public double MaxHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaxHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.MaxHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MaxHeight { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.MaxHeight : double with get, set" Usage="System.Windows.FrameworkElement.MaxHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-797">Получение или установка максимально допустимой высоты элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-797">Gets or sets the maximum height constraint of the element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26d05-798">Максимальная высота элемента в [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-798">The maximum height of the element, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          </span>
          <span data-ttu-id="26d05-799">Значение по умолчанию — <see cref="F:System.Double.PositiveInfinity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-799">The default value is <see cref="F:System.Double.PositiveInfinity" />.</span>
          </span>
          <span data-ttu-id="26d05-800">Это значение может быть больше или равно 0,0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-800">This value can be any value equal to or greater than 0.0.</span>
          </span>
          <span data-ttu-id="26d05-801">Значение <see cref="F:System.Double.PositiveInfinity" /> также является допустимым.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-801">
              <see cref="F:System.Double.PositiveInfinity" /> is also valid.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-802">Это один из трех свойств на <xref:System.Windows.FrameworkElement> , укажите информацию о высоте.</span><span class="sxs-lookup"><span data-stu-id="26d05-802">This is one of three properties on <xref:System.Windows.FrameworkElement> that specify height information.</span></span> <span data-ttu-id="26d05-803">Два других <xref:System.Windows.FrameworkElement.MinHeight%2A> и <xref:System.Windows.FrameworkElement.Height%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-803">The other two are <xref:System.Windows.FrameworkElement.MinHeight%2A> and <xref:System.Windows.FrameworkElement.Height%2A>.</span></span>  <span data-ttu-id="26d05-804">Если возникает конфликт между этими значениями, порядок приложения для определения фактического Высота первого <xref:System.Windows.FrameworkElement.MinHeight%2A> необходимо обработать, затем <xref:System.Windows.FrameworkElement.MaxHeight%2A>и, наконец, если каждый из них выходят за границы, <xref:System.Windows.FrameworkElement.Height%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-804">If there is a conflict between these values, the order of application for actual height determination is first <xref:System.Windows.FrameworkElement.MinHeight%2A> must be honored, then <xref:System.Windows.FrameworkElement.MaxHeight%2A>, and finally if each of these are within bounds, <xref:System.Windows.FrameworkElement.Height%2A>.</span></span>  
  
 <span data-ttu-id="26d05-805">Ограничения для значений на <xref:System.Double> с установленным значением <xref:System.Windows.ValidateValueCallback> механизм.</span><span class="sxs-lookup"><span data-stu-id="26d05-805">The value restrictions on the <xref:System.Double> value are enforced by a <xref:System.Windows.ValidateValueCallback> mechanism.</span></span> <span data-ttu-id="26d05-806">Если вы попытаетесь указать недопустимое значение создается исключение времени выполнения.</span><span class="sxs-lookup"><span data-stu-id="26d05-806">If you attempt to set an invalid value a run-time exception is thrown.</span></span>  
  
<a name="xamlAttributeUsage_MaxHeight"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="26d05-807">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="26d05-807">XAML Attribute Usage</span></span>  
  
```  
<object MaxHeight="double"/>  
- or –  
<object MaxHeight ="qualifiedDouble"/>  
```  
  
<a name="xamlValues_MaxHeight"></a>   
## <a name="xaml-values"></a><span data-ttu-id="26d05-808">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="26d05-808">XAML Values</span></span>  
 <span data-ttu-id="26d05-809">*double*</span><span class="sxs-lookup"><span data-stu-id="26d05-809">*double*</span></span>  
 <xref:System.Double>  
  
 <span data-ttu-id="26d05-810">Строковое представление <xref:System.Double> значение, равное или больше 0,0.</span><span class="sxs-lookup"><span data-stu-id="26d05-810">String representation of a <xref:System.Double> value equal to or greater than 0.0.</span></span> <span data-ttu-id="26d05-811">Это значение интерпретируется как [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] измерения.</span><span class="sxs-lookup"><span data-stu-id="26d05-811">This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="26d05-812">Строки не нужно явно указывать десятичных запятых.</span><span class="sxs-lookup"><span data-stu-id="26d05-812">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="26d05-813">Для экземпляра значение `1` приемлемо.</span><span class="sxs-lookup"><span data-stu-id="26d05-813">For instance a value of `1` is acceptable.</span></span>  
  
 <span data-ttu-id="26d05-814">Же <xref:System.Double> применяются ограничения диапазона, как упоминалось в разделе значение свойства, за исключением того, что необходимо использовать [расширение разметки x: Static](~/docs/framework/xaml-services/x-static-markup-extension.md) необходимо явно задать значение должно быть <xref:System.Double.PositiveInfinity>.</span><span class="sxs-lookup"><span data-stu-id="26d05-814">The same <xref:System.Double> range restrictions as mentioned in the Property Value section apply, except that you must use [x:Static Markup Extension](~/docs/framework/xaml-services/x-static-markup-extension.md) if you need to explicitly set the value to be <xref:System.Double.PositiveInfinity>.</span></span>  
  
 <span data-ttu-id="26d05-815">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="26d05-815">*qualifiedDouble*</span></span>  
 <span data-ttu-id="26d05-816">Объект *двойные* значение как описано выше, за которым следует один из следующих строк объявления единицы измерения: `px`, `in`, `cm`, `pt`.</span><span class="sxs-lookup"><span data-stu-id="26d05-816">A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="26d05-817">`px` (по умолчанию) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="26d05-817">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="26d05-818">`in` дюймах; 1 in == 96 точек</span><span class="sxs-lookup"><span data-stu-id="26d05-818">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="26d05-819">`cm` сантиметрах; 1см==(96/2,54) px</span><span class="sxs-lookup"><span data-stu-id="26d05-819">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="26d05-820">`pt` точках; 1точка==(96/72) px</span><span class="sxs-lookup"><span data-stu-id="26d05-820">`pt` is points; 1pt==(96/72) px</span></span>  
  
<a name="dependencyPropertyInfo_MaxHeight"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="26d05-821">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="26d05-821">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="26d05-822">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="26d05-822">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.MaxHeightProperty>|  
|<span data-ttu-id="26d05-823">Значение свойства метаданных `true`</span><span class="sxs-lookup"><span data-stu-id="26d05-823">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxHeightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MaxHeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MaxHeightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.MaxHeightProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxHeightProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MaxHeightProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxHeightProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.MaxHeightProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-824">Идентифицирует свойство зависимостей <see cref="P:System.Windows.FrameworkElement.MaxHeight" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-824">Identifies the <see cref="P:System.Windows.FrameworkElement.MaxHeight" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxWidth">
      <MemberSignature Language="C#" Value="public double MaxWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MaxWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.MaxWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MaxWidth { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.MaxWidth : double with get, set" Usage="System.Windows.FrameworkElement.MaxWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-825">Получение или установка максимально допустимой ширины элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-825">Gets or sets the maximum width constraint of the element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26d05-826">Максимальная ширина элемента в [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-826">The maximum width of the element, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          </span>
          <span data-ttu-id="26d05-827">Значение по умолчанию — <see cref="F:System.Double.PositiveInfinity" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-827">The default value is <see cref="F:System.Double.PositiveInfinity" />.</span>
          </span>
          <span data-ttu-id="26d05-828">Это значение может быть больше или равно 0,0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-828">This value can be any value equal to or greater than 0.0.</span>
          </span>
          <span data-ttu-id="26d05-829">Значение <see cref="F:System.Double.PositiveInfinity" /> также является допустимым.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-829">
              <see cref="F:System.Double.PositiveInfinity" /> is also valid.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-830">Это один из трех свойств на <xref:System.Windows.FrameworkElement> , укажите сведения ширины.</span><span class="sxs-lookup"><span data-stu-id="26d05-830">This is one of three properties on <xref:System.Windows.FrameworkElement> that specify width information.</span></span> <span data-ttu-id="26d05-831">Два других <xref:System.Windows.FrameworkElement.MinWidth%2A> и <xref:System.Windows.FrameworkElement.Width%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-831">The other two are <xref:System.Windows.FrameworkElement.MinWidth%2A> and <xref:System.Windows.FrameworkElement.Width%2A>.</span></span> <span data-ttu-id="26d05-832">Если возникает конфликт между этими значениями, порядок приложения для определения фактическую ширину первого <xref:System.Windows.FrameworkElement.MinWidth%2A> необходимо обработать, затем <xref:System.Windows.FrameworkElement.MaxWidth%2A>и, наконец, если каждый из них выходят за границы, <xref:System.Windows.FrameworkElement.Width%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-832">If there is a conflict between these values, the order of application for actual width determination is first <xref:System.Windows.FrameworkElement.MinWidth%2A> must be honored, then <xref:System.Windows.FrameworkElement.MaxWidth%2A>, and finally if each of these are within bounds, <xref:System.Windows.FrameworkElement.Width%2A>.</span></span>  
  
 <span data-ttu-id="26d05-833">Ограничения для значений на <xref:System.Double> с установленным значением <xref:System.Windows.ValidateValueCallback> механизм.</span><span class="sxs-lookup"><span data-stu-id="26d05-833">The value restrictions on the <xref:System.Double> value are enforced by a <xref:System.Windows.ValidateValueCallback> mechanism.</span></span> <span data-ttu-id="26d05-834">Если вы попытаетесь указать недопустимое значение, создается исключение времени выполнения.</span><span class="sxs-lookup"><span data-stu-id="26d05-834">If you attempt to set an invalid value, a run-time exception is thrown.</span></span>  
  
<a name="xamlAttributeUsage_MaxWidth"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="26d05-835">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="26d05-835">XAML Attribute Usage</span></span>  
  
```  
<object MaxWidth="double"/>  
- or -  
<object MaxWidth="qualifiedDouble"/>  
```  
  
<a name="xamlValues_MaxWidth"></a>   
## <a name="xaml-values"></a><span data-ttu-id="26d05-836">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="26d05-836">XAML Values</span></span>  
 <span data-ttu-id="26d05-837">*double*</span><span class="sxs-lookup"><span data-stu-id="26d05-837">*double*</span></span>  
 <xref:System.Double>  
  
 <span data-ttu-id="26d05-838">Строковое представление <xref:System.Double> значение, равное или больше 0,0.</span><span class="sxs-lookup"><span data-stu-id="26d05-838">String representation of a <xref:System.Double> value equal to or greater than 0.0.</span></span> <span data-ttu-id="26d05-839">Это значение интерпретируется как [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] измерения.</span><span class="sxs-lookup"><span data-stu-id="26d05-839">This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="26d05-840">Строки не нужно явно указывать десятичных запятых.</span><span class="sxs-lookup"><span data-stu-id="26d05-840">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="26d05-841">Для экземпляра значение `1` приемлемо.</span><span class="sxs-lookup"><span data-stu-id="26d05-841">For instance a value of `1` is acceptable.</span></span>  
  
 <span data-ttu-id="26d05-842">Же <xref:System.Double> применяются ограничения диапазона, как упоминалось в разделе значение свойства, за исключением того, что необходимо использовать [расширение разметки x: Static](~/docs/framework/xaml-services/x-static-markup-extension.md) задаваемое значение должно быть <xref:System.Double.PositiveInfinity>.</span><span class="sxs-lookup"><span data-stu-id="26d05-842">The same <xref:System.Double> range restrictions as mentioned in the Property Value section apply, except that you must use [x:Static Markup Extension](~/docs/framework/xaml-services/x-static-markup-extension.md) to set the value to be <xref:System.Double.PositiveInfinity>.</span></span>  
  
 <span data-ttu-id="26d05-843">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="26d05-843">*qualifiedDouble*</span></span>  
 <span data-ttu-id="26d05-844">Объект *двойные* значение как описано выше, за которым следует один из следующих строк объявления единицы измерения: `px`, `in`, `cm`, `pt`.</span><span class="sxs-lookup"><span data-stu-id="26d05-844">A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="26d05-845">`px` (по умолчанию) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="26d05-845">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="26d05-846">`in` дюймах; 1 in == 96 точек</span><span class="sxs-lookup"><span data-stu-id="26d05-846">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="26d05-847">`cm` сантиметрах; 1см==(96/2,54) px</span><span class="sxs-lookup"><span data-stu-id="26d05-847">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="26d05-848">`pt` точках; 1точка==(96/72) px</span><span class="sxs-lookup"><span data-stu-id="26d05-848">`pt` is points; 1pt==(96/72) px</span></span>  
  
<a name="dependencyPropertyInfo_MaxWidth"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="26d05-849">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="26d05-849">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="26d05-850">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="26d05-850">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.MaxWidthProperty>|  
|<span data-ttu-id="26d05-851">Значение свойства метаданных `true`</span><span class="sxs-lookup"><span data-stu-id="26d05-851">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxWidthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MaxWidthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MaxWidthProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.MaxWidthProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MaxWidthProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MaxWidthProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MaxWidthProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.MaxWidthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-852">Идентифицирует свойство зависимостей <see cref="P:System.Windows.FrameworkElement.MaxWidth" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-852">Identifies the <see cref="P:System.Windows.FrameworkElement.MaxWidth" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureCore">
      <MemberSignature Language="C#" Value="protected override sealed System.Windows.Size MeasureCore (System.Windows.Size availableSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance valuetype System.Windows.Size MeasureCore(valuetype System.Windows.Size availableSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.MeasureCore(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Function MeasureCore (availableSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Windows::Size MeasureCore(System::Windows::Size availableSize);" />
      <MemberSignature Language="F#" Value="override this.MeasureCore : System.Windows.Size -&gt; System.Windows.Size" Usage="frameworkElement.MeasureCore availableSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="availableSize">
          <span data-ttu-id="26d05-853">Доступный размер, который родительский элемент может предоставить дочерним элементам.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-853">The available size that the parent element can give to the child elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26d05-854">Реализует основное поведение системы структуры при проходе измерения для <see cref="T:System.Windows.FrameworkElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-854">Implements basic measure-pass layout system behavior for <see cref="T:System.Windows.FrameworkElement" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="26d05-855">Желательный размер этого элемента в макете.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-855">The desired size of this element in layout.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-856">Этот метод переопределяет <xref:System.Windows.UIElement.MeasureCore%2A?displayProperty=nameWithType> подключения уровня ядра WPF и реализации мер макетов уровня среды WPF.</span><span class="sxs-lookup"><span data-stu-id="26d05-856">This method overrides <xref:System.Windows.UIElement.MeasureCore%2A?displayProperty=nameWithType> to connect the  WPF core-level and WPF framework-level layout measure implementations.</span></span> <span data-ttu-id="26d05-857"><xref:System.Windows.FrameworkElement> Метод запечатывает реализацию.</span><span class="sxs-lookup"><span data-stu-id="26d05-857">The <xref:System.Windows.FrameworkElement> implementation seals the method.</span></span> <span data-ttu-id="26d05-858">Для настройки измерения проход макета любого элемента, который основан на уровне среды WPF, переопределить <xref:System.Windows.FrameworkElement.MeasureOverride%2A> вместо этого.</span><span class="sxs-lookup"><span data-stu-id="26d05-858">To adjust the measure pass layout behavior of any element that builds on the WPF framework-level, override <xref:System.Windows.FrameworkElement.MeasureOverride%2A> instead.</span></span> <span data-ttu-id="26d05-859">Для настройки на меру передачи поведение макета элемента, который намеренно не зависят от уровня среды WPF или используйте <xref:System.Windows.FrameworkElement>, переопределить <xref:System.Windows.UIElement.MeasureCore%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="26d05-859">To adjust the measure pass layout behavior of an element that deliberately does not build on the WPF framework-level or use <xref:System.Windows.FrameworkElement>, override <xref:System.Windows.UIElement.MeasureCore%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MeasureOverride">
      <MemberSignature Language="C#" Value="protected virtual System.Windows.Size MeasureOverride (System.Windows.Size availableSize);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Windows.Size MeasureOverride(valuetype System.Windows.Size availableSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function MeasureOverride (availableSize As Size) As Size" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Windows::Size MeasureOverride(System::Windows::Size availableSize);" />
      <MemberSignature Language="F#" Value="abstract member MeasureOverride : System.Windows.Size -&gt; System.Windows.Size&#xA;override this.MeasureOverride : System.Windows.Size -&gt; System.Windows.Size" Usage="frameworkElement.MeasureOverride availableSize" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Size</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="availableSize" Type="System.Windows.Size" />
      </Parameters>
      <Docs>
        <param name="availableSize">
          <span data-ttu-id="26d05-860">Доступный размер, который этот элемент может предоставить дочерним элементам.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-860">The available size that this element can give to child elements.</span>
          </span>
          <span data-ttu-id="26d05-861">Можно задать бесконечное значение, указав таким образом, что элемент будет масштабироваться в соответствии с любым содержимым.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-861">Infinity can be specified as a value to indicate that the element will size to whatever content is available.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26d05-862">При переопределении в производном классе измеряет размер в структуре, требуемый для дочерних элементов, и определяет размер для класса, производного от <see cref="T:System.Windows.FrameworkElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-862">When overridden in a derived class, measures the size in layout required for child elements and determines a size for the <see cref="T:System.Windows.FrameworkElement" />-derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="26d05-863">Размер, определяемый данным элементом для своих потребностей во время структурирования на основе вычисления размеров дочерних элементов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-863">The size that this element determines it needs during layout, based on its calculations of child element sizes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-864">Переопределить <xref:System.Windows.FrameworkElement.MeasureOverride%2A> для реализации пользовательского макета размеров для элемента, которое участвует в [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] системы макета.</span><span class="sxs-lookup"><span data-stu-id="26d05-864">Override <xref:System.Windows.FrameworkElement.MeasureOverride%2A> to implement custom layout sizing behavior for your element as it participates in the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] layout system.</span></span> <span data-ttu-id="26d05-865">Реализация должна делать следующее:</span><span class="sxs-lookup"><span data-stu-id="26d05-865">Your implementation should do the following:</span></span>  
  
1.  <span data-ttu-id="26d05-866">Итерации этого элемента определенной коллекции дочерних элементов, которые являются частью макета, вызов <xref:System.Windows.UIElement.Measure%2A> для каждого дочернего элемента.</span><span class="sxs-lookup"><span data-stu-id="26d05-866">Iterate your element's particular collection of children that are part of layout, call <xref:System.Windows.UIElement.Measure%2A> on each child element.</span></span>  
  
2.  <span data-ttu-id="26d05-867">Сразу же получите <xref:System.Windows.UIElement.DesiredSize%2A> дочерних элементов (он задается как свойство после <xref:System.Windows.UIElement.Measure%2A> вызывается).</span><span class="sxs-lookup"><span data-stu-id="26d05-867">Immediately get <xref:System.Windows.UIElement.DesiredSize%2A> on the child (this is set as a property after <xref:System.Windows.UIElement.Measure%2A> is called).</span></span>  
  
3.  <span data-ttu-id="26d05-868">Вычислений net требуемый размер родительского элемента на основе измерения из дочерних элементов.</span><span class="sxs-lookup"><span data-stu-id="26d05-868">Compute the net desired size of the parent based upon the measurement of the child elements.</span></span>  
  
 <span data-ttu-id="26d05-869">Возвращаемое значение <xref:System.Windows.FrameworkElement.MeasureOverride%2A> должен быть собственный требуемого размер элемента, который затем становится входных данных для родительского элемента текущего элемента меры.</span><span class="sxs-lookup"><span data-stu-id="26d05-869">The return value of <xref:System.Windows.FrameworkElement.MeasureOverride%2A> should be the element's own desired size, which then becomes the measure input for the parent element of the current element.</span></span> <span data-ttu-id="26d05-870">Этот процесс продолжается по система макета, пока не будет достигнут корневой элемент страницы.</span><span class="sxs-lookup"><span data-stu-id="26d05-870">This same process continues through the layout system until the root element of the page is reached.</span></span>  
  
 <span data-ttu-id="26d05-871">В ходе этого процесса дочерних элементов может возвращать более крупный <xref:System.Windows.UIElement.DesiredSize%2A> размер, чем начального `availableSize` указать, что дочерний элемент больше места.</span><span class="sxs-lookup"><span data-stu-id="26d05-871">During this process, child elements might return a larger <xref:System.Windows.UIElement.DesiredSize%2A> size than the initial `availableSize` to indicate that the child element wants more space.</span></span> <span data-ttu-id="26d05-872">Это может быть обработано в собственную реализацию путем введения прокручиваемой области, путем изменения размеров родительского элемента управления путем создания каким-либо образом заказа с накоплением или любое количество решений для измерения или компоновки содержимого.</span><span class="sxs-lookup"><span data-stu-id="26d05-872">This might be handled in your own implementation by introducing a scrollable region, by resizing the parent control, by establishing some manner of stacked order, or any number of solutions for measuring or arranging content.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="26d05-873">Элементы должны вызывать <xref:System.Windows.UIElement.Measure%2A> на каждом дочернем во время этого процесса, в противном случае дочерние элементы не будет правильно размера или упорядочены.</span><span class="sxs-lookup"><span data-stu-id="26d05-873">Elements should call <xref:System.Windows.UIElement.Measure%2A> on each child during this process, otherwise the child elements will not be correctly sized or arranged.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="26d05-874">
            <para>В следующем коде некомпилируемый показано эта схема реализации.  <c>VisualChildren</c> представляет свойство перечисляемую коллекцию дочерних элементов, которые необходимо определить собственного элемента. Свойство может быть присвоено любое имя. <c>VisualChildren</c> является именем-заполнителем для целей этого примера <c>VisualChildren</c> не [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] предоставленный [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] или его части шаблон именования...  [! code-csharp[CorePseudocode #FEMeasureOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#femeasureoverride)] [! код vb[CorePseudocode #FEMeasureOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#femeasureoverride)]</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-874">
              <para>The following non-compiling code shows this implementation pattern.  <c>VisualChildren</c> represents an enumerable collection property of children that your own element should define. The property can be named anything. <c>VisualChildren</c> is a placeholder name for purposes of this example, <c>VisualChildren</c> is not an [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] as provided by [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] or a part of a naming pattern..  [!code-csharp[CorePseudocode#FEMeasureOverride](~/samples/snippets/csharp/VS_Snippets_Wpf/CorePseudocode/CSharp/corepseudocode.cs#femeasureoverride)] [!code-vb[CorePseudocode#FEMeasureOverride](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CorePseudocode/visualbasic/corepseudocode.vb#femeasureoverride)]</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="MinHeight">
      <MemberSignature Language="C#" Value="public double MinHeight { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MinHeight" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.MinHeight" />
      <MemberSignature Language="VB.NET" Value="Public Property MinHeight As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MinHeight { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.MinHeight : double with get, set" Usage="System.Windows.FrameworkElement.MinHeight" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-875">Получение или установка минимально допустимой высоты элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-875">Gets or sets the minimum height constraint of the element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26d05-876">Минимальная высота элемента в [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-876">The minimum height of the element, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          </span>
          <span data-ttu-id="26d05-877">Значение по умолчанию — 0,0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-877">The default value is 0.0.</span>
          </span>
          <span data-ttu-id="26d05-878">Это значение может быть больше или равно 0,0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-878">This value can be any value equal to or greater than 0.0.</span>
          </span>
          <span data-ttu-id="26d05-879">Однако константа <see cref="F:System.Double.PositiveInfinity" /> допустимой не является, равно как и <see cref="F:System.Double.NaN" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-879">However, <see cref="F:System.Double.PositiveInfinity" /> is NOT valid, nor is <see cref="F:System.Double.NaN" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-880">Это один из трех свойств на <xref:System.Windows.FrameworkElement> , укажите информацию о высоте.</span><span class="sxs-lookup"><span data-stu-id="26d05-880">This is one of three properties on <xref:System.Windows.FrameworkElement> that specify height information.</span></span>  <span data-ttu-id="26d05-881">Два других <xref:System.Windows.FrameworkElement.Height%2A> и <xref:System.Windows.FrameworkElement.MaxHeight%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-881">The other two are <xref:System.Windows.FrameworkElement.Height%2A> and <xref:System.Windows.FrameworkElement.MaxHeight%2A>.</span></span> <span data-ttu-id="26d05-882">Если возникает конфликт между этими значениями, порядок приложения для определения фактического Высота первого <xref:System.Windows.FrameworkElement.MinHeight%2A> необходимо обработать, затем <xref:System.Windows.FrameworkElement.MaxHeight%2A>и, наконец, если каждый из них выходят за границы, <xref:System.Windows.FrameworkElement.Height%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-882">If there is a conflict between these values, the order of application for actual height determination is first <xref:System.Windows.FrameworkElement.MinHeight%2A> must be honored, then <xref:System.Windows.FrameworkElement.MaxHeight%2A>, and finally if each of these are within bounds, <xref:System.Windows.FrameworkElement.Height%2A>.</span></span>  
  
 <span data-ttu-id="26d05-883">Ограничения для значений на <xref:System.Double> с установленным значением <xref:System.Windows.ValidateValueCallback> механизм.</span><span class="sxs-lookup"><span data-stu-id="26d05-883">The value restrictions on the <xref:System.Double> value are enforced by a <xref:System.Windows.ValidateValueCallback> mechanism.</span></span> <span data-ttu-id="26d05-884">Если вы попытаетесь указать недопустимое значение, создается исключение времени выполнения.</span><span class="sxs-lookup"><span data-stu-id="26d05-884">If you attempt to set an invalid value, a run-time exception is thrown.</span></span>  
  
<a name="xamlAttributeUsage_MinHeight"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="26d05-885">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="26d05-885">XAML Attribute Usage</span></span>  
  
```  
<object MinHeight="double"/>  
- or -  
<object MinHeight="qualifiedDouble"/>  
```  
  
<a name="xamlValues_MinHeight"></a>   
## <a name="xaml-values"></a><span data-ttu-id="26d05-886">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="26d05-886">XAML Values</span></span>  
 <span data-ttu-id="26d05-887">*double*</span><span class="sxs-lookup"><span data-stu-id="26d05-887">*double*</span></span>  
 <xref:System.Double>  
  
 <span data-ttu-id="26d05-888">Строковое представление <xref:System.Double> значение, равное или больше 0,0.</span><span class="sxs-lookup"><span data-stu-id="26d05-888">String representation of a <xref:System.Double> value equal to or greater than 0.0.</span></span> <span data-ttu-id="26d05-889">Это значение интерпретируется как [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] измерения.</span><span class="sxs-lookup"><span data-stu-id="26d05-889">This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="26d05-890">Строки не нужно явно указывать десятичных запятых.</span><span class="sxs-lookup"><span data-stu-id="26d05-890">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="26d05-891">Для экземпляра значение `1` приемлемо.</span><span class="sxs-lookup"><span data-stu-id="26d05-891">For instance a value of `1` is acceptable.</span></span>  
  
 <span data-ttu-id="26d05-892">Же <xref:System.Double> ограничения диапазона, как упоминалось в разделе значение свойства.</span><span class="sxs-lookup"><span data-stu-id="26d05-892">The same <xref:System.Double> range restrictions as mentioned in the Property Value section apply.</span></span>  
  
 <span data-ttu-id="26d05-893">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="26d05-893">*qualifiedDouble*</span></span>  
 <span data-ttu-id="26d05-894">Объект *двойные* значение как описано выше, за которым следует один из следующих строк объявления единицы измерения: `px`, `in`, `cm`, `pt`.</span><span class="sxs-lookup"><span data-stu-id="26d05-894">A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="26d05-895">`px` (по умолчанию) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="26d05-895">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="26d05-896">`in` дюймах; 1 in == 96 точек</span><span class="sxs-lookup"><span data-stu-id="26d05-896">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="26d05-897">`cm` сантиметрах; 1см==(96/2,54) px</span><span class="sxs-lookup"><span data-stu-id="26d05-897">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="26d05-898">`pt` точках; 1точка==(96/72) px</span><span class="sxs-lookup"><span data-stu-id="26d05-898">`pt` is points; 1pt==(96/72) px</span></span>  
  
<a name="dependencyPropertyInfo_MinHeight"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="26d05-899">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="26d05-899">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="26d05-900">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="26d05-900">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.MinHeightProperty>|  
|<span data-ttu-id="26d05-901">Значение свойства метаданных `true`</span><span class="sxs-lookup"><span data-stu-id="26d05-901">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinHeightProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MinHeightProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MinHeightProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.MinHeightProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinHeightProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MinHeightProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MinHeightProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.MinHeightProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-902">Идентифицирует свойство зависимостей <see cref="P:System.Windows.FrameworkElement.MinHeight" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-902">Identifies the <see cref="P:System.Windows.FrameworkElement.MinHeight" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MinWidth">
      <MemberSignature Language="C#" Value="public double MinWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 MinWidth" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.MinWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property MinWidth As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double MinWidth { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.MinWidth : double with get, set" Usage="System.Windows.FrameworkElement.MinWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-903">Получение или установка минимально допустимой ширины элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-903">Gets or sets the minimum width constraint of the element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26d05-904">Минимальная ширина элемента в [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-904">The minimum width of the element, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          </span>
          <span data-ttu-id="26d05-905">Значение по умолчанию — 0,0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-905">The default value is 0.0.</span>
          </span>
          <span data-ttu-id="26d05-906">Это значение может быть больше или равно 0,0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-906">This value can be any value equal to or greater than 0.0.</span>
          </span>
          <span data-ttu-id="26d05-907">Однако константа <see cref="F:System.Double.PositiveInfinity" /> допустимой не является, равно как и <see cref="F:System.Double.NaN" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-907">However, <see cref="F:System.Double.PositiveInfinity" /> is not valid, nor is <see cref="F:System.Double.NaN" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-908">Это один из трех свойств на <xref:System.Windows.FrameworkElement> , укажите сведения ширины.</span><span class="sxs-lookup"><span data-stu-id="26d05-908">This is one of three properties on <xref:System.Windows.FrameworkElement> that specify width information.</span></span>  <span data-ttu-id="26d05-909">Два других <xref:System.Windows.FrameworkElement.Width%2A> и <xref:System.Windows.FrameworkElement.MaxWidth%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-909">The other two are <xref:System.Windows.FrameworkElement.Width%2A> and <xref:System.Windows.FrameworkElement.MaxWidth%2A>.</span></span>  <span data-ttu-id="26d05-910">Если возникает конфликт между этими значениями, порядок приложения для определения фактическую ширину первого <xref:System.Windows.FrameworkElement.MinWidth%2A> необходимо обработать, затем <xref:System.Windows.FrameworkElement.MaxWidth%2A>и, наконец, если каждый из них выходят за границы, <xref:System.Windows.FrameworkElement.Width%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-910">If there is a conflict between these values, the order of application for actual width determination is first <xref:System.Windows.FrameworkElement.MinWidth%2A> must be honored, then <xref:System.Windows.FrameworkElement.MaxWidth%2A>, and finally if each of these are within bounds, <xref:System.Windows.FrameworkElement.Width%2A>.</span></span>  
  
 <span data-ttu-id="26d05-911">Ограничения для значений на <xref:System.Double> с установленным значением <xref:System.Windows.ValidateValueCallback> механизм.</span><span class="sxs-lookup"><span data-stu-id="26d05-911">The value restrictions on the <xref:System.Double> value are enforced by a <xref:System.Windows.ValidateValueCallback> mechanism.</span></span> <span data-ttu-id="26d05-912">Если вы попытаетесь указать недопустимое значение, создается исключение времени выполнения.</span><span class="sxs-lookup"><span data-stu-id="26d05-912">If you attempt to set an invalid value, a run-time exception is thrown.</span></span>  
  
<a name="xamlAttributeUsage_MinWidth"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="26d05-913">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="26d05-913">XAML Attribute Usage</span></span>  
  
```  
<object MinWidth="double"/>  
- or -  
<object MinWidth="qualifiedDouble"/>  
```  
  
<a name="xamlValues_MinWidth"></a>   
## <a name="xaml-values"></a><span data-ttu-id="26d05-914">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="26d05-914">XAML Values</span></span>  
 <span data-ttu-id="26d05-915">*double*</span><span class="sxs-lookup"><span data-stu-id="26d05-915">*double*</span></span>  
 <xref:System.Double>  
  
 <span data-ttu-id="26d05-916">Строковое представление <xref:System.Double> значение, равное или больше 0,0.</span><span class="sxs-lookup"><span data-stu-id="26d05-916">String representation of a <xref:System.Double> value equal to or greater than 0.0.</span></span> <span data-ttu-id="26d05-917">Это значение интерпретируется как [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] измерения.</span><span class="sxs-lookup"><span data-stu-id="26d05-917">This is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="26d05-918">Строки не нужно явно указывать десятичных запятых.</span><span class="sxs-lookup"><span data-stu-id="26d05-918">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="26d05-919">Для экземпляра значение `1` приемлемо.</span><span class="sxs-lookup"><span data-stu-id="26d05-919">For instance a value of `1` is acceptable.</span></span>  
  
 <span data-ttu-id="26d05-920">Же <xref:System.Double> ограничения диапазона, как упоминалось в разделе значение свойства.</span><span class="sxs-lookup"><span data-stu-id="26d05-920">The same <xref:System.Double> range restrictions as mentioned in the Property Value section apply.</span></span>  
  
 <span data-ttu-id="26d05-921">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="26d05-921">*qualifiedDouble*</span></span>  
 <span data-ttu-id="26d05-922">Объект *двойные* значение как описано выше, за которым следует один из следующих строк объявления единицы измерения: `px`, `in`, `cm`, `pt`.</span><span class="sxs-lookup"><span data-stu-id="26d05-922">A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="26d05-923">`px` (по умолчанию) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="26d05-923">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="26d05-924">`in` дюймах; 1 in == 96 точек</span><span class="sxs-lookup"><span data-stu-id="26d05-924">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="26d05-925">`cm` сантиметрах; 1см==(96/2,54) px</span><span class="sxs-lookup"><span data-stu-id="26d05-925">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="26d05-926">`pt` точках; 1точка==(96/72) px</span><span class="sxs-lookup"><span data-stu-id="26d05-926">`pt` is points; 1pt==(96/72) px</span></span>  
  
<a name="dependencyPropertyInfo_MinWidth"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="26d05-927">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="26d05-927">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="26d05-928">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="26d05-928">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.MinWidthProperty>|  
|<span data-ttu-id="26d05-929">Значение свойства метаданных `true`</span><span class="sxs-lookup"><span data-stu-id="26d05-929">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MinWidthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty MinWidthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty MinWidthProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.MinWidthProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MinWidthProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ MinWidthProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable MinWidthProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.MinWidthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-930">Идентифицирует свойство зависимостей <see cref="P:System.Windows.FrameworkElement.MinWidth" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-930">Identifies the <see cref="P:System.Windows.FrameworkElement.MinWidth" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MoveFocus">
      <MemberSignature Language="C#" Value="public override sealed bool MoveFocus (System.Windows.Input.TraversalRequest request);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool MoveFocus(class System.Windows.Input.TraversalRequest request) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function MoveFocus (request As TraversalRequest) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool MoveFocus(System::Windows::Input::TraversalRequest ^ request);" />
      <MemberSignature Language="F#" Value="override this.MoveFocus : System.Windows.Input.TraversalRequest -&gt; bool" Usage="frameworkElement.MoveFocus request" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="request" Type="System.Windows.Input.TraversalRequest" />
      </Parameters>
      <Docs>
        <param name="request">
          <span data-ttu-id="26d05-931">Направление, в котором перемещается фокус, в виде значения перечисления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-931">The direction that focus is to be moved, as a value of the enumeration.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26d05-932">Перемещает клавиатурный фокус от данного элемента на другой элемент в указанном направлении обхода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-932">Moves the keyboard focus away from this element and to another element in a provided traversal direction.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="26d05-933">Возвращает значение <see langword="true" />, если фокус успешно перемещен; <see langword="false" />, если целевого элемента в указанном направлении не существует или на него нельзя установить клавиатурный фокус.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-933">Returns <see langword="true" /> if focus is moved successfully; <see langword="false" /> if the target element in direction as specified does not exist or could not be keyboard focused.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-934">Эта реализация переопределяет <xref:System.Windows.UIElement.MoveFocus%2A?displayProperty=nameWithType> и запечатывает метод.</span><span class="sxs-lookup"><span data-stu-id="26d05-934">This implementation overrides <xref:System.Windows.UIElement.MoveFocus%2A?displayProperty=nameWithType> and seals the method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26d05-935">В следующем примере реализуется обработчик, который обрабатывает несколько возможных вводов кнопок.</span><span class="sxs-lookup"><span data-stu-id="26d05-935">The following example implements a handler that handles several possible button inputs.</span></span> <span data-ttu-id="26d05-936">Каждой кнопке соответствует возможного <xref:System.Windows.Input.FocusNavigationDirection>.</span><span class="sxs-lookup"><span data-stu-id="26d05-936">Each button represents a possible <xref:System.Windows.Input.FocusNavigationDirection>.</span></span> <span data-ttu-id="26d05-937">Обработчик отслеживает элемента с текущим фокусом клавиатуры и вызывает <xref:System.Windows.FrameworkElement.MoveFocus%2A> на этот элемент, указав соответствующие <xref:System.Windows.Input.FocusNavigationDirection> для инициализации <xref:System.Windows.Input.TraversalRequest> предоставленный параметр типа.</span><span class="sxs-lookup"><span data-stu-id="26d05-937">The handler tracks the element with current keyboard focus, and calls <xref:System.Windows.FrameworkElement.MoveFocus%2A> on that element, by specifying the appropriate <xref:System.Windows.Input.FocusNavigationDirection> as initialization for the <xref:System.Windows.Input.TraversalRequest> type parameter provided.</span></span>  
  
 [!code-csharp[FocusSample#FocusSampleMoveFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSample/CSharp/Window1.xaml.cs#focussamplemovefocus)]
 [!code-vb[FocusSample#FocusSampleMoveFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSample/visualbasic/window1.xaml.vb#focussamplemovefocus)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.UIElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
        <altmember cref="M:System.Windows.UIElement.Focus" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Windows.FrameworkElement.Name" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.IFrameworkInputElement.Name</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Windows.Markup.DesignerSerializationOptions</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.Windows.Markup.DesignerSerializationOptions(System.Windows.Markup.DesignerSerializationOptions.SerializeAsAttribute)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-938">Возвращает или задает имя, обозначающее элемент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-938">Gets or sets the identifying name of the element.</span>
          </span>
          <span data-ttu-id="26d05-939">Имя позволяет обращаться из с выделенным кодом, например из кода обработчика событий, к элементу разметки после его создания в ходе обработки процессором [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-939">The name provides a reference so that code-behind, such as event handler code, can refer to a markup element after it is constructed during processing by a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] processor.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26d05-940">Имя элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-940">The name of the element.</span>
          </span>
          <span data-ttu-id="26d05-941">Значение по умолчанию - пустая строка.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-941">The default is an empty string.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-942">Наиболее распространенный случай использования этого свойства является указание [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] имя элемента, как атрибут в разметке.</span><span class="sxs-lookup"><span data-stu-id="26d05-942">The most common usage of this property is to specify a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] element name as an attribute in markup.</span></span>  
  
 <span data-ttu-id="26d05-943">По существу, это свойство предоставляет свойство удобства уровня платформы WPF, чтобы установить [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] [директива x: Name](~/docs/framework/xaml-services/x-name-directive.md).</span><span class="sxs-lookup"><span data-stu-id="26d05-943">This property essentially provides a WPF framework-level convenience property to set the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] [x:Name Directive](~/docs/framework/xaml-services/x-name-directive.md).</span></span>  
  
 <span data-ttu-id="26d05-944">Имена должны быть уникальными в пределах области видимости имен.</span><span class="sxs-lookup"><span data-stu-id="26d05-944">Names must be unique within a namescope.</span></span> <span data-ttu-id="26d05-945">Дополнительные сведения см. в разделе [области видимости имен XAML WPF](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span><span class="sxs-lookup"><span data-stu-id="26d05-945">For more information, see [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span></span>  
  
 <span data-ttu-id="26d05-946">Начало <xref:System.Windows.FrameworkElement.Name%2A> при создании элементов в коде не часто.</span><span class="sxs-lookup"><span data-stu-id="26d05-946">Getting a <xref:System.Windows.FrameworkElement.Name%2A> if you are creating elements in code is not common.</span></span> <span data-ttu-id="26d05-947">Если вы уже соответствующую ссылку в коде, можно просто вызвать методы и свойства в элементе ссылки и не будет обычно необходимость <xref:System.Windows.FrameworkElement.Name%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-947">If you have the appropriate reference in code already, you can just call methods and properties on the element reference and will not generally need the <xref:System.Windows.FrameworkElement.Name%2A>.</span></span> <span data-ttu-id="26d05-948">Исключение — если <xref:System.Windows.FrameworkElement.Name%2A> строка имеет несколько перегруженных значение, например если необходимо отобразить это имя в [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="26d05-948">An exception to this is if the <xref:System.Windows.FrameworkElement.Name%2A> string has some overloaded meaning, for instance if it is useful to display that name in [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span> <span data-ttu-id="26d05-949">Установка <xref:System.Windows.FrameworkElement.Name%2A> из кода если исходный <xref:System.Windows.FrameworkElement.Name%2A> была настроена из разметки также не рекомендуется использовать и изменения свойства после загрузки [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] ссылка на исходный объект не изменится.</span><span class="sxs-lookup"><span data-stu-id="26d05-949">Setting a <xref:System.Windows.FrameworkElement.Name%2A> from code-behind if the original <xref:System.Windows.FrameworkElement.Name%2A> was set from markup is also not recommended, and changing the property after loading the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] will not change the original object reference.</span></span> <span data-ttu-id="26d05-950">Ссылки на объекты создаются только в том случае, когда основной области видимости имен явно создаются во время синтаксического анализа.</span><span class="sxs-lookup"><span data-stu-id="26d05-950">The object references are created only when the underlying namescopes are explicitly created during parsing.</span></span> <span data-ttu-id="26d05-951">Необходимо явно вызывать <xref:System.Windows.FrameworkElement.RegisterName%2A> вносить изменений для <xref:System.Windows.FrameworkElement.Name%2A> свойства элемента уже загружен.</span><span class="sxs-lookup"><span data-stu-id="26d05-951">You must specifically call <xref:System.Windows.FrameworkElement.RegisterName%2A> to make an effective change to the <xref:System.Windows.FrameworkElement.Name%2A> property of an already loaded element.</span></span>  
  
 <span data-ttu-id="26d05-952">Один заметных случае там, где параметр <xref:System.Windows.FrameworkElement.Name%2A> из кода важна при регистрации имен для элементов, которые раскадровки будет выполняться, чтобы на них можно ссылаться во время выполнения.</span><span class="sxs-lookup"><span data-stu-id="26d05-952">One notable case where setting <xref:System.Windows.FrameworkElement.Name%2A> from code is important is when registering names for elements that storyboards will run against, so that they can be referenced at run time.</span></span> <span data-ttu-id="26d05-953">Перед регистрацией имени, может также потребоваться создания экземпляров и присваивания <xref:System.Windows.NameScope> экземпляра.</span><span class="sxs-lookup"><span data-stu-id="26d05-953">Before you can register a name, might also need to instantiate and assign a <xref:System.Windows.NameScope> instance.</span></span> <span data-ttu-id="26d05-954">См. в разделе "Пример" или [Общие сведения о раскадровках](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).</span><span class="sxs-lookup"><span data-stu-id="26d05-954">See the Example section, or [Storyboards Overview](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).</span></span>  
  
 <span data-ttu-id="26d05-955">Установка <xref:System.Windows.FrameworkElement.Name%2A> из кода имеет ограниченную приложения, но Получение элемента с <xref:System.Windows.FrameworkElement.Name%2A> чаще.</span><span class="sxs-lookup"><span data-stu-id="26d05-955">Setting <xref:System.Windows.FrameworkElement.Name%2A> from code has limited applications, but getting an element by <xref:System.Windows.FrameworkElement.Name%2A> is more common.</span></span> <span data-ttu-id="26d05-956">Один из сценариев является, если приложение поддерживает модель навигации, где перезагрузкой страниц в приложение, и код времени выполнения не обязательно кода программной части, определенным для этой страницы.</span><span class="sxs-lookup"><span data-stu-id="26d05-956">One particular scenario is if your application supports a navigation model where pages reload into the application, and the run time code is not necessarily code-behind defined for that page.</span></span> <span data-ttu-id="26d05-957">Служебный метод <xref:System.Windows.FrameworkElement.FindName%2A>, который доступен из любого <xref:System.Windows.FrameworkElement>, можно найти любой элемент, <xref:System.Windows.FrameworkElement.Name%2A> в логическом дереве для этого элемента, поиск в дереве рекурсивно, при необходимости.</span><span class="sxs-lookup"><span data-stu-id="26d05-957">The utility method <xref:System.Windows.FrameworkElement.FindName%2A>, which is available from any <xref:System.Windows.FrameworkElement>, can find any element by <xref:System.Windows.FrameworkElement.Name%2A> in the logical tree for that element, searching the tree recursively as necessary.</span></span> <span data-ttu-id="26d05-958">Или можно использовать <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> статический метод <xref:System.Windows.LogicalTreeHelper>, который также принимает <xref:System.Windows.FrameworkElement.Name%2A> строку в качестве аргумента.</span><span class="sxs-lookup"><span data-stu-id="26d05-958">Or you can use the <xref:System.Windows.LogicalTreeHelper.FindLogicalNode%2A> static method of <xref:System.Windows.LogicalTreeHelper>, which also takes a <xref:System.Windows.FrameworkElement.Name%2A> string as an argument.</span></span>  
  
 <span data-ttu-id="26d05-959">Как правило, используется корневых элементов (<xref:System.Windows.Window>, <xref:System.Windows.Controls.Page> для примера) реализовать интерфейс <xref:System.Windows.Markup.INameScope>.</span><span class="sxs-lookup"><span data-stu-id="26d05-959">Typically used root elements (<xref:System.Windows.Window>, <xref:System.Windows.Controls.Page> for example) implement the interface <xref:System.Windows.Markup.INameScope>.</span></span> <span data-ttu-id="26d05-960">Реализации этого интерфейса ожидается обеспечение однозначности имен в их области.</span><span class="sxs-lookup"><span data-stu-id="26d05-960">Implementations of this interface are expected to enforce that names be unambiguous within their scope.</span></span> <span data-ttu-id="26d05-961">Корневые элементы, которые определяют этот интерфейс также определить поведение границы области видимости имен для всех связанных [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)].</span><span class="sxs-lookup"><span data-stu-id="26d05-961">The root elements that define this interface also define the namescope behavior boundaries for all the related [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)].</span></span>  
  
 <span data-ttu-id="26d05-962"><xref:System.Windows.FrameworkElement.Name%2A> Свойства также служит в качестве идентификатора для других процессов.</span><span class="sxs-lookup"><span data-stu-id="26d05-962">The <xref:System.Windows.FrameworkElement.Name%2A> property also serves as an identifier for other processes.</span></span> <span data-ttu-id="26d05-963">Например [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] будет использовать модель автоматизации <xref:System.Windows.FrameworkElement.Name%2A> как AutomationId для клиентов и поставщиков.</span><span class="sxs-lookup"><span data-stu-id="26d05-963">For instance, the [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] automation model will use <xref:System.Windows.FrameworkElement.Name%2A> as the AutomationId for clients and providers.</span></span>  
  
 <span data-ttu-id="26d05-964">Строковые значения, используемые для <xref:System.Windows.FrameworkElement.Name%2A> имеют некоторые ограничения, как налагаемые базовой [директива x: Name](~/docs/framework/xaml-services/x-name-directive.md) определяется [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] спецификации.</span><span class="sxs-lookup"><span data-stu-id="26d05-964">The string values used for <xref:System.Windows.FrameworkElement.Name%2A> have some restrictions, as imposed by the underlying [x:Name Directive](~/docs/framework/xaml-services/x-name-directive.md) defined by the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] specification.</span></span> <span data-ttu-id="26d05-965">Прежде всего <xref:System.Windows.FrameworkElement.Name%2A> должно начинаться с буквы или символа подчеркивания (_) и должно содержать только буквы, цифры или символы подчеркивания.</span><span class="sxs-lookup"><span data-stu-id="26d05-965">Most notably, a <xref:System.Windows.FrameworkElement.Name%2A> must start with a letter or the underscore character (_), and must contain only letters, digits, or underscores.</span></span> <span data-ttu-id="26d05-966">Дополнительные сведения см. в разделе [области видимости имен XAML WPF](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span><span class="sxs-lookup"><span data-stu-id="26d05-966">For more information, see [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span></span>  
  
 <span data-ttu-id="26d05-967"><xref:System.Windows.FrameworkElement.Name%2A> является одним из немногих свойства зависимости, которые не могут анимироваться (<xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A> является `true` в метаданных), так как само имя критически важен для нацеливания анимации.</span><span class="sxs-lookup"><span data-stu-id="26d05-967"><xref:System.Windows.FrameworkElement.Name%2A> is one of the very few dependency properties that cannot be animated (<xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A> is `true` in metadata), because the name itself is vital for targeting an animation.</span></span> <span data-ttu-id="26d05-968">Привязка данных <xref:System.Windows.FrameworkElement.Name%2A> технически возможно, но встречается крайне редко, так как привязкой к данным <xref:System.Windows.FrameworkElement.Name%2A> не может служить главной цель свойство: для предоставления идентификатор точки подключения для кода.</span><span class="sxs-lookup"><span data-stu-id="26d05-968">Data binding a <xref:System.Windows.FrameworkElement.Name%2A> is technically possible, but is an extremely uncommon scenario because a data-bound <xref:System.Windows.FrameworkElement.Name%2A> cannot serve the main intended purpose of the property: to provide an identifier connection point for code-behind.</span></span>  
  
<a name="dependencyPropertyInfo_Name"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="26d05-969">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="26d05-969">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="26d05-970">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="26d05-970">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.NameProperty>|  
|<span data-ttu-id="26d05-971">Значение свойства метаданных `true`</span><span class="sxs-lookup"><span data-stu-id="26d05-971">Metadata properties set to `true`</span></span>|<xref:System.Windows.UIPropertyMetadata.IsAnimationProhibited%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="26d05-972">В следующем примере задается <xref:System.Windows.FrameworkElement.Name%2A> свойства в коде, а затем регистрирует имя в только что созданный <xref:System.Windows.NameScope> путем вызова <xref:System.Windows.FrameworkElement.RegisterName%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-972">The following example sets the <xref:System.Windows.FrameworkElement.Name%2A> property in code, and then registers the name into the newly created <xref:System.Windows.NameScope> by calling <xref:System.Windows.FrameworkElement.RegisterName%2A>.</span></span> <span data-ttu-id="26d05-973">Показанный здесь прием является обязательным для анимации с помощью раскадровок, так как раскадровки требуют указания цели с <xref:System.Windows.FrameworkElement.Name%2A>, а не может быть нацелена на ссылку на объект.</span><span class="sxs-lookup"><span data-stu-id="26d05-973">The technique illustrated here is a requirement for animating with storyboards, because storyboards require targeting by the <xref:System.Windows.FrameworkElement.Name%2A>, and cannot be targeted by object reference.</span></span>  
  
 [!code-csharp[animateHeight_procedural#FEName](~/samples/snippets/csharp/VS_Snippets_Wpf/animateHeight_procedural/CSharp/AnimatedHeightExample.cs#fename)]
 [!code-vb[animateHeight_procedural#FEName](~/samples/snippets/visualbasic/VS_Snippets_Wpf/animateHeight_procedural/visualbasic/animatedheightexample.vb#fename)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NameProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty NameProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty NameProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.NameProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NameProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ NameProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable NameProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.NameProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-974">Идентифицирует свойство зависимостей <see cref="P:System.Windows.FrameworkElement.Name" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-974">Identifies the <see cref="P:System.Windows.FrameworkElement.Name" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnApplyTemplate">
      <MemberSignature Language="C#" Value="public virtual void OnApplyTemplate ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void OnApplyTemplate() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.OnApplyTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub OnApplyTemplate ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void OnApplyTemplate();" />
      <MemberSignature Language="F#" Value="abstract member OnApplyTemplate : unit -&gt; unit&#xA;override this.OnApplyTemplate : unit -&gt; unit" Usage="frameworkElement.OnApplyTemplate " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="26d05-975">При переопределении в производном классе вызывается каждый раз, когда код приложения или внутренние процессы вызывают <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-975">When overridden in a derived class, is invoked whenever application code or internal processes call <see cref="M:System.Windows.FrameworkElement.ApplyTemplate" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-976">Этот метод не имеет значение по умолчанию реализации.</span><span class="sxs-lookup"><span data-stu-id="26d05-976">This method has no default implementation.</span></span>  
  
 <span data-ttu-id="26d05-977">Шаблоны представляют собой часть элемента визуального дерева, поступающие от свойство Template <xref:System.Windows.Style> , применяемый для элемента.</span><span class="sxs-lookup"><span data-stu-id="26d05-977">Templates are the section of an element's completed visual tree that comes from the Template property of a <xref:System.Windows.Style> that is applied for the element.</span></span> <span data-ttu-id="26d05-978">Более подробную информацию см. в разделе [Стилизация и использование шаблонов](~/docs/framework/wpf/controls/styling-and-templating.md).</span><span class="sxs-lookup"><span data-stu-id="26d05-978">For more information, see [Styling and Templating](~/docs/framework/wpf/controls/styling-and-templating.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="26d05-979">
            <para>Классы, унаследованные от <see cref="T:System.Windows.FrameworkElement" /> можно использовать этот метод для уведомления о различных возможных сценариев:-можно вызвать собственную реализацию кода, который создает в оставшейся части визуального дерева элемента.  — Можно выполнять код, основанный на визуальное дерево из примененных шаблонов, таких как получение ссылок на именованные элементы, полученные из шаблона.  -Можно внедрить службы, которые имеют смысл только существовать после завершения визуального дерева на основе шаблонов.  — Можно задать состояния и свойств элементов в шаблоне, которые зависят от других факторов. К примеру значения свойств могут быть доступными только мы знаем, родительский элемент, или когда конкретного производного класса использует общий шаблон.  Разработчикам следует всегда вызывать базовую реализацию перед свою собственную реализацию. <see cref="T:System.Windows.FrameworkElement" /> обслуживает по умолчанию реализации, но промежуточные классы могут.  <see cref="T:System.Windows.Controls.Control" /> предлагает аналогичные override, <see cref="M:System.Windows.Controls.Control.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-979">
              <para>Derived classes of <see cref="T:System.Windows.FrameworkElement" /> can use this method as a notification for a variety of possible scenarios:  -   You can call your own implementation of code that builds the remainder of an element visual tree.  -   You can run code that relies on the visual tree from templates having been applied, such as obtaining references to named elements that came from a template.  -   You can introduce services that only make sense to exist after the visual tree from templates is complete.  -   You can set states and properties of elements within the template that are dependent on other factors. For instance, property values might only be discoverable by knowing the parent element, or when a specific derived class uses a common template.  Implementers should always call the base implementation before their own implementation. <see cref="T:System.Windows.FrameworkElement" /> itself has no default implementation, but intervening classes might.  <see cref="T:System.Windows.Controls.Control" /> offers a similar override, <see cref="M:System.Windows.Controls.Control.OnTemplateChanged(System.Windows.Controls.ControlTemplate,System.Windows.Controls.ControlTemplate)" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnContextMenuClosing">
      <MemberSignature Language="C#" Value="protected virtual void OnContextMenuClosing (System.Windows.Controls.ContextMenuEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContextMenuClosing(class System.Windows.Controls.ContextMenuEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.OnContextMenuClosing(System.Windows.Controls.ContextMenuEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContextMenuClosing (e As ContextMenuEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContextMenuClosing(System::Windows::Controls::ContextMenuEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnContextMenuClosing : System.Windows.Controls.ContextMenuEventArgs -&gt; unit&#xA;override this.OnContextMenuClosing : System.Windows.Controls.ContextMenuEventArgs -&gt; unit" Usage="frameworkElement.OnContextMenuClosing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.ContextMenuEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="26d05-980">Предоставляет данные о событии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-980">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26d05-981">Вызывается, когда необработанное перенаправленное событие <see cref="E:System.Windows.FrameworkElement.ContextMenuClosing" /> достигает этого класса на своем пути.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-981">Invoked whenever an unhandled <see cref="E:System.Windows.FrameworkElement.ContextMenuClosing" /> routed event reaches this class in its route.</span>
          </span>
          <span data-ttu-id="26d05-982">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-982">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-983">Этот метод не имеет значение по умолчанию реализации.</span><span class="sxs-lookup"><span data-stu-id="26d05-983">This method has no default implementation.</span></span> <span data-ttu-id="26d05-984">Если промежуточный класс в цепочке наследования реализует данный метод рекомендуется вызывать базовую реализацию.</span><span class="sxs-lookup"><span data-stu-id="26d05-984">You should still call the base implementation in case an intermediate class in the inheritance has implemented this method.</span></span>  
  
 <span data-ttu-id="26d05-985">Этот метод похож на [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблон событий на \* методы: она предоставляет средства для обработки соответствующего события из производных классов с помощью обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="26d05-985">The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler.</span></span> <span data-ttu-id="26d05-986">В этом случае соответствующее событие является перенаправленное событие.</span><span class="sxs-lookup"><span data-stu-id="26d05-986">In this case the matching event is a routed event.</span></span> <span data-ttu-id="26d05-987">Шаблон реализации методы On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерний элемент, не обязательно является элементом, который будет вызывать обработчики, поэтому вашей реализации потребуется использовать источник для аргументов событий свойства в учетной записи (и не следует пытаться повторно отправить событие в большинстве случаев).</span><span class="sxs-lookup"><span data-stu-id="26d05-987">The implementation pattern of the On\* methods is different for routed events because the routed event may have been raised by a child element, not necessarily the element that will invoke handlers, so your implementation will need to take the event arguments' source properties into account (and should not try to re-raise the event in most cases).</span></span> <span data-ttu-id="26d05-988">Подклассы <xref:System.Windows.FrameworkElement> может выбрать для вызова методов обработчика закрытый класс при получении события в маршруте.</span><span class="sxs-lookup"><span data-stu-id="26d05-988">Subclasses of <xref:System.Windows.FrameworkElement> could choose to call private class handler methods when the event is received along the route.</span></span> <span data-ttu-id="26d05-989">Одним из потенциальных сценариев является получение аргументов события и специально помечать событие как обработанное.</span><span class="sxs-lookup"><span data-stu-id="26d05-989">One potential scenario is to take the arguments of the event and deliberately mark the event as handled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnContextMenuOpening">
      <MemberSignature Language="C#" Value="protected virtual void OnContextMenuOpening (System.Windows.Controls.ContextMenuEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnContextMenuOpening(class System.Windows.Controls.ContextMenuEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.OnContextMenuOpening(System.Windows.Controls.ContextMenuEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnContextMenuOpening (e As ContextMenuEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnContextMenuOpening(System::Windows::Controls::ContextMenuEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnContextMenuOpening : System.Windows.Controls.ContextMenuEventArgs -&gt; unit&#xA;override this.OnContextMenuOpening : System.Windows.Controls.ContextMenuEventArgs -&gt; unit" Usage="frameworkElement.OnContextMenuOpening e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.ContextMenuEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="26d05-990">Объект класса <see cref="T:System.Windows.RoutedEventArgs" />, содержащий данные о событии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-990">The <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26d05-991">Вызывается, когда необработанное перенаправленное событие <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> достигает этого класса на своем пути.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-991">Invoked whenever an unhandled <see cref="E:System.Windows.FrameworkElement.ContextMenuOpening" /> routed event reaches this class in its route.</span>
          </span>
          <span data-ttu-id="26d05-992">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-992">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-993">Этот метод не имеет значение по умолчанию реализации.</span><span class="sxs-lookup"><span data-stu-id="26d05-993">This method has no default implementation.</span></span> <span data-ttu-id="26d05-994">Если промежуточный класс в цепочке наследования реализует данный метод рекомендуется вызывать базовую реализацию.</span><span class="sxs-lookup"><span data-stu-id="26d05-994">You should still call the base implementation in case an intermediate class in the inheritance has implemented this method.</span></span>  
  
 <span data-ttu-id="26d05-995">Этот метод похож на [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблон событий на \* методы: она предоставляет средства для обработки соответствующего события из производных классов с помощью обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="26d05-995">The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler.</span></span> <span data-ttu-id="26d05-996">В этом случае соответствующее событие является перенаправленное событие.</span><span class="sxs-lookup"><span data-stu-id="26d05-996">In this case the matching event is a routed event.</span></span> <span data-ttu-id="26d05-997">Шаблон реализации методы On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерний элемент, не обязательно является элементом, который будет вызывать обработчики, поэтому вашей реализации потребуется использовать источник для аргументов событий свойства в учетной записи (и не следует пытаться повторно отправить событие в большинстве случаев).</span><span class="sxs-lookup"><span data-stu-id="26d05-997">The implementation pattern of the On\* methods is different for routed events because the routed event may have been raised by a child element, not necessarily the element that will invoke handlers, so your implementation will need to take the event arguments' source properties into account (and should not try to re-raise the event in most cases).</span></span> <span data-ttu-id="26d05-998">Подклассы <xref:System.Windows.FrameworkElement> может выбрать для вызова методов обработчика закрытый класс при получении события в маршруте.</span><span class="sxs-lookup"><span data-stu-id="26d05-998">Subclasses of <xref:System.Windows.FrameworkElement> could choose to call private class handler methods when the event is received along the route.</span></span> <span data-ttu-id="26d05-999">Одним из потенциальных сценариев является получение аргументов события и специально помечать событие как обработанное.</span><span class="sxs-lookup"><span data-stu-id="26d05-999">One potential scenario is to take the arguments of the event and deliberately mark the event as handled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnGotFocus">
      <MemberSignature Language="C#" Value="protected override void OnGotFocus (System.Windows.RoutedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnGotFocus(class System.Windows.RoutedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.OnGotFocus(System.Windows.RoutedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnGotFocus (e As RoutedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnGotFocus(System::Windows::RoutedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnGotFocus : System.Windows.RoutedEventArgs -&gt; unit" Usage="frameworkElement.OnGotFocus e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.RoutedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="26d05-1000">Объект класса <see cref="T:System.Windows.RoutedEventArgs" />, содержащий данные о событии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1000">The <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26d05-1001">Вызывается, когда необработанное событие <see cref="E:System.Windows.UIElement.GotFocus" /> достигает этого элемента на своем пути.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1001">Invoked whenever an unhandled <see cref="E:System.Windows.UIElement.GotFocus" /> event reaches this element in its route.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1002">В отличие от некоторых других на \* методов, предоставляемых базовые элементы, <xref:System.Windows.FrameworkElement.OnGotFocus%2A> имеет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="26d05-1002">Unlike some other On\* methods exposed by the base elements, <xref:System.Windows.FrameworkElement.OnGotFocus%2A> does have a default implementation.</span></span> <span data-ttu-id="26d05-1003">В частности, он имеет реализацию, которая переопределяет null реализацию на следующем уровне базового элемента, <xref:System.Windows.UIElement.OnGotFocus%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-1003">Specifically, it has an implementation that overrides the null implementation in the next level of base element down, <xref:System.Windows.UIElement.OnGotFocus%2A>.</span></span> <span data-ttu-id="26d05-1004">При вызове <xref:System.Windows.FrameworkElement.OnGotFocus%2A> задает соответствующее поведение фокуса на этот элемент в случаях, в котором произошло событие из текущего элемента из-за фокус клавиатуры.</span><span class="sxs-lookup"><span data-stu-id="26d05-1004">When invoked, <xref:System.Windows.FrameworkElement.OnGotFocus%2A> sets appropriate focus behavior on this element in cases where the event originated from the current element due to keyboard focus.</span></span> <span data-ttu-id="26d05-1005"><xref:System.Windows.FrameworkElement.OnGotFocus%2A> Обработчик не помечают аргументы события как обработанные, даже если фокус перемещается к текущему элементу.</span><span class="sxs-lookup"><span data-stu-id="26d05-1005">The <xref:System.Windows.FrameworkElement.OnGotFocus%2A> handler does not mark the event arguments as handled, even when focus is set to the current element.</span></span> <span data-ttu-id="26d05-1006">Если источником события был другой элемент в дереве (а не текущего элемента), обработчик не выполняет никаких действий.</span><span class="sxs-lookup"><span data-stu-id="26d05-1006">If the event's source was another element in the tree (not the current element), the handler does nothing.</span></span>  
  
 <span data-ttu-id="26d05-1007">Можно переопределить этот метод, чтобы изменить поведение фокуса по умолчанию для вашего элемента, но имейте в виду, что изменение поведения фокуса таким образом можно реализовать лучше, не позволяя элемента, который требуется вообще (см. в разделе <xref:System.Windows.UIElement.Focusable%2A>).</span><span class="sxs-lookup"><span data-stu-id="26d05-1007">You can override this method in order to change the default focus behavior on your element, but be aware that changing focus behavior in this way might be better accomplished by not allowing the element to be focusable at all (see <xref:System.Windows.UIElement.Focusable%2A>).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="26d05-1008">
            <para>Если вы собираетесь пометить событие как обработанное в аргументах, следует учитывать последствия обработка событий в другие родительские элементы в дереве элементов. Так как данный обработчик действует на событие с восходящей маршрутизации, для установки фокуса на текущий <paramref name="sender" /> каждого события аргументов может не подойти. Фокус может быть выполнен либо составного дочернему элементу или родительскому элементу, в зависимости от композиции определенных элементов управления. Поэтому помечать событие фокуса как обработанное рекомендуется, только если весь визуальное дерево, событием является частью композиции элемента управления, созданные.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1008">
              <para>If you intend to mark the event handled in the arguments, you should be aware of consequences on event handling in other parent elements in the element tree. Because this handler acts on an event with a bubbling routing, setting the focus to the current <paramref name="sender" /> per the event arguments may not be appropriate. Focus might need to go to either a composite child element or to a parent element, depending on the compositing of certain controls. Therefore marking a focus event as handled is only recommended if the entirety of the visual tree that the event is routing through is part of compositing of a control that you authored.</para>
            </span>
          </span>
        </block>
        <altmember cref="P:System.Windows.UIElement.Focusable" />
      </Docs>
    </Member>
    <Member MemberName="OnInitialized">
      <MemberSignature Language="C#" Value="protected virtual void OnInitialized (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInitialized(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.OnInitialized(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInitialized (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInitialized(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInitialized : EventArgs -&gt; unit&#xA;override this.OnInitialized : EventArgs -&gt; unit" Usage="frameworkElement.OnInitialized e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="26d05-1009">Объект класса <see cref="T:System.Windows.RoutedEventArgs" />, содержащий данные о событии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1009">The <see cref="T:System.Windows.RoutedEventArgs" /> that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26d05-1010">Вызывает событие <see cref="E:System.Windows.FrameworkElement.Initialized" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1010">Raises the <see cref="E:System.Windows.FrameworkElement.Initialized" /> event.</span>
          </span>
          <span data-ttu-id="26d05-1011">Этот метод вызывается всякий раз, когда <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> имеет внутреннее значение <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1011">This method is invoked whenever <see cref="P:System.Windows.FrameworkElement.IsInitialized" /> is set to <see langword="true" /> internally.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1012">Данный конкретный на \* метод не является ловушкой обработчика класса.</span><span class="sxs-lookup"><span data-stu-id="26d05-1012">This particular On\* method is not a class handler hook.</span></span> <span data-ttu-id="26d05-1013">Ни он точно следовать установленному [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] на \* метод соглашение, что соответствующее ему событие может быть отменено с помощью переопределения этого метода и не вызывает базовую реализацию.</span><span class="sxs-lookup"><span data-stu-id="26d05-1013">Nor does it exactly follow the established [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] On\* method convention that the matching event could be suppressed by overriding this method and not calling the base implementation.</span></span>  
  
 <span data-ttu-id="26d05-1014">Обратите внимание, что <xref:System.Windows.FrameworkElement.IsInitialized%2A> свойство только для чтения, поэтому невозможно задать <xref:System.Windows.FrameworkElement.IsInitialized%2A> для принудительного использования поведения инициализации.</span><span class="sxs-lookup"><span data-stu-id="26d05-1014">Note that the <xref:System.Windows.FrameworkElement.IsInitialized%2A> property is read-only, so you cannot set <xref:System.Windows.FrameworkElement.IsInitialized%2A> to force initialization behavior.</span></span> <span data-ttu-id="26d05-1015">Задание состояния инициализации должен выполняться только [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] framework.</span><span class="sxs-lookup"><span data-stu-id="26d05-1015">Setting the initialization state is intended to be done only by the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] framework.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="26d05-1016">
            <para>Реализация по умолчанию данного виртуального метода вызывает событие, как описано выше. Для поддержания данного режима работы переопределение должно вызывать базовую реализацию. Если вам не удается вызвать базовую реализацию, не только вы не вызовут <see cref="E:System.Windows.FrameworkElement.Initialized" /> события как обычно, ожидаемых <see cref="T:System.Windows.FrameworkElement" /> производного класса, но также будет запрещена две важные стилю и цветовой схеме стиль инициализации операции, которые являются реализуется базовая реализация.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1016">
              <para>The default implementation of this virtual method raises the event as described above. Overrides should call the base implementation to preserve this behavior. If you fail to call the base implementation, not only will you not raise the <see cref="E:System.Windows.FrameworkElement.Initialized" /> event as is generally expected of a <see cref="T:System.Windows.FrameworkElement" /> derived class, but you will also suppress two important style and theme style initialization operations that are implemented by this base implementation.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.FrameworkElement.OnApplyTemplate" />
        <altmember cref="E:System.Windows.FrameworkElement.Initialized" />
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected override void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPropertyChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPropertyChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPropertyChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="abstract member OnPropertyChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit&#xA;override this.OnPropertyChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="frameworkElement.OnPropertyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="26d05-1017">Данные события, описывающие измененное свойство, а также старое и новое значения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1017">The event data that describes the property that changed, as well as old and new values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26d05-1018">Вызывается всякий раз при обновлении действующего значения какого-либо свойства зависимостей относительно данного элемента <see cref="T:System.Windows.FrameworkElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1018">Invoked whenever the effective value of any dependency property on this <see cref="T:System.Windows.FrameworkElement" /> has been updated.</span>
          </span>
          <span data-ttu-id="26d05-1019">Конкретное измененное свойство зависимостей сообщается в параметре аргументов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1019">The specific dependency property that changed is reported in the arguments parameter.</span>
          </span>
          <span data-ttu-id="26d05-1020">Переопределяет свойство <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1020">Overrides <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1021">Этот метод не предназначен для обычно обнаружения изменения свойств или недействительности.</span><span class="sxs-lookup"><span data-stu-id="26d05-1021">This method is not intended to generally detect property changes or invalidations.</span></span> <span data-ttu-id="26d05-1022">Он предназначен для изменения общего шаблона недействительности Если известны определенные сведения о классификациях расширенных свойств.</span><span class="sxs-lookup"><span data-stu-id="26d05-1022">It is instead intended for modifications of the general invalidation pattern if certain information is known about wide classifications of properties.</span></span>  
  
 <span data-ttu-id="26d05-1023">Этот метод потенциально вызывается много раз в течение жизненного цикла объекта.</span><span class="sxs-lookup"><span data-stu-id="26d05-1023">This method is potentially invoked many times during the life of an object.</span></span> <span data-ttu-id="26d05-1024">Таким образом, можно повысить производительность, если переопределить метаданные свойств, а затем подключить <xref:System.Windows.CoerceValueCallback> или <xref:System.Windows.PropertyChangedCallback> функции для отдельных свойств.</span><span class="sxs-lookup"><span data-stu-id="26d05-1024">Therefore, you can achieve better performance if you override the metadata of specific properties and then attach <xref:System.Windows.CoerceValueCallback> or <xref:System.Windows.PropertyChangedCallback> functions for individual properties.</span></span> <span data-ttu-id="26d05-1025">Тем не менее, можно использовать, этот метод Если <xref:System.Windows.FrameworkElement> включает значительное количество свойств зависимостей с взаимосвязанными значение, или если он содержит логику, такие как поведение отрисовки, необходимо повторно для нескольких связанных случаев недействительности свойств.</span><span class="sxs-lookup"><span data-stu-id="26d05-1025">However, you would use this method if a <xref:System.Windows.FrameworkElement> includes a significant number of value-interrelated dependency properties, or if it includes logic such as rendering behavior that must be rerun for several related cases of property invalidations.</span></span>  
  
 <span data-ttu-id="26d05-1026">Обратите внимание, что таким же именем `OnPropertyChanged` метод с другой сигнатурой (тип параметра является <xref:System.ComponentModel.PropertyChangedEventArgs>), которые могут возникнуть на несколько классов.</span><span class="sxs-lookup"><span data-stu-id="26d05-1026">Note that there is an identically named `OnPropertyChanged` method with a different signature (the parameter type is <xref:System.ComponentModel.PropertyChangedEventArgs>) that can appear on a number of classes.</span></span> <span data-ttu-id="26d05-1027">Что `OnPropertyChanged` используется для уведомления объекта данных, и является частью контракта для <xref:System.ComponentModel.INotifyPropertyChanged>.</span><span class="sxs-lookup"><span data-stu-id="26d05-1027">That `OnPropertyChanged` is used for data object notifications, and is part of the contract for <xref:System.ComponentModel.INotifyPropertyChanged>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="26d05-1028">
            <para>Всегда вызывайте базовую реализацию, как первую операцию в реализации. Если этого не сделать значительно отключит всего [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] системы свойств, в результате чего будут сообщены неверные значения. Конкретный <see cref="T:System.Windows.FrameworkElement" /> реализация также отвечает за обслуживание в правильном состоянии для различных свойств, влияющих на видимого пользовательского интерфейса. К ним относятся, стал недопустимым визуального дерева в зависимости от изменений стиля в нужное время.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1028">
              <para>Always call the base implementation, as the first operation in your implementation. Failure to do this will significantly disable the entire [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] property system, which causes incorrect values to be reported. The specific <see cref="T:System.Windows.FrameworkElement" /> implementation is also responsible for maintaining proper state for a variety of properties that affect the visible user interface. These include invalidating the visual tree based on changes to style at appropriate times.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
        <altmember cref="T:System.Windows.PropertyChangedCallback" />
      </Docs>
    </Member>
    <Member MemberName="OnRenderSizeChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnRenderSizeChanged (System.Windows.SizeChangedInfo sizeInfo);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnRenderSizeChanged(class System.Windows.SizeChangedInfo sizeInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnRenderSizeChanged (sizeInfo As SizeChangedInfo)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnRenderSizeChanged(System::Windows::SizeChangedInfo ^ sizeInfo);" />
      <MemberSignature Language="F#" Value="override this.OnRenderSizeChanged : System.Windows.SizeChangedInfo -&gt; unit" Usage="frameworkElement.OnRenderSizeChanged sizeInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sizeInfo" Type="System.Windows.SizeChangedInfo" />
      </Parameters>
      <Docs>
        <param name="sizeInfo">
          <span data-ttu-id="26d05-1029">Сведения о старом и новом размерах при изменении.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1029">Details of the old and new size involved in the change.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26d05-1030">Инициирует событие <see cref="E:System.Windows.FrameworkElement.SizeChanged" />, используя указанную информацию как часть окончательных данных события.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1030">Raises the <see cref="E:System.Windows.FrameworkElement.SizeChanged" /> event, using the specified information as part of the eventual event data.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1031">Этот метод переопределяет метод <xref:System.Windows.UIElement.OnRenderSizeChanged%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-1031">This method overrides <xref:System.Windows.UIElement.OnRenderSizeChanged%2A>.</span></span> <span data-ttu-id="26d05-1032">При вызове этого метода Вы сбрасываете <xref:System.Windows.FrameworkElement.ActualWidth%2A> свойства <xref:System.Windows.FrameworkElement.ActualHeight%2A> свойство (или оба) в зависимости от того, что указано как изменения в предоставленных аргументов и будут всегда создается событие.</span><span class="sxs-lookup"><span data-stu-id="26d05-1032">If you call this method you will reset the <xref:System.Windows.FrameworkElement.ActualWidth%2A> property, the <xref:System.Windows.FrameworkElement.ActualHeight%2A> property, or both, depending on what is specified as changed in the supplied arguments, and will you always raise the event.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="26d05-1033">
            <para>Не следует переопределять этот метод для сценариев типичное расположение. Система макета работает в намеренно асинхронный способ заверения в том что Упорядочить все возможные макета и случаев меры. Система макета переопределять методы <see cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" /> и <see cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" /> обычно достаточно для какой-либо настройки требуется макет. <see cref="M:System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)" /> указывается в виде виртуальной. Можно переопределить <see cref="M:System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)" /> для исправления в исключительных случаях, где изменения поведения времени выполнения, связанных с события, в сочетании с элементом управления ввода рекомпозиции в ответ может предоставить сведения о макете неточным.  Вы по-прежнему могут переопределить этот метод в производных классах (он защищен, но не запечатан). Всегда вызовите базовую реализацию, чтобы сохранить поведение, описанное выше, если у вас нет особых причин для отключения поведение отрисовки уровня среды WPF по умолчанию. Не удалось вызвать <see cref="E:System.Windows.FrameworkElement.SizeChanged" /> событий приведет к поведению нестандартного макета, при использовании стандартной реализации системы макета уровня среды WPF.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1033">
              <para>Do not override this method for typical layout scenarios. The layout system operates in a deliberately asynchronous way to assure that all possible layout arrange and measure cases are accounted for. The layout system override methods <see cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" /> and <see cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" /> are usually sufficient for any required layout customization. <see cref="M:System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)" /> is exposed as a virtual. You can override <see cref="M:System.Windows.FrameworkElement.OnRenderSizeChanged(System.Windows.SizeChangedInfo)" /> to correct for exceptional cases where a run-time behavioral change related to input events combined with control recomposition in response might give inaccurate layout information.  You may still override this method in derived classes (it is protected but not sealed). Always call the base implementation to preserve the behavior mentioned above, unless you have very specific reasons for disabling default WPF framework-level rendering behavior. Failing to raise the <see cref="E:System.Windows.FrameworkElement.SizeChanged" /> event will cause non-standard layout behavior if using the standard WPF framework-level layout system implementation.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" />
        <altmember cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" />
        <altmember cref="M:System.Windows.UIElement.OnRender(System.Windows.Media.DrawingContext)" />
      </Docs>
    </Member>
    <Member MemberName="OnStyleChanged">
      <MemberSignature Language="C#" Value="protected internal virtual void OnStyleChanged (System.Windows.Style oldStyle, System.Windows.Style newStyle);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void OnStyleChanged(class System.Windows.Style oldStyle, class System.Windows.Style newStyle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub OnStyleChanged (oldStyle As Style, newStyle As Style)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void OnStyleChanged(System::Windows::Style ^ oldStyle, System::Windows::Style ^ newStyle);" />
      <MemberSignature Language="F#" Value="abstract member OnStyleChanged : System.Windows.Style * System.Windows.Style -&gt; unit&#xA;override this.OnStyleChanged : System.Windows.Style * System.Windows.Style -&gt; unit" Usage="frameworkElement.OnStyleChanged (oldStyle, newStyle)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldStyle" Type="System.Windows.Style" />
        <Parameter Name="newStyle" Type="System.Windows.Style" />
      </Parameters>
      <Docs>
        <param name="oldStyle">
          <span data-ttu-id="26d05-1034">Старый стиль.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1034">The old style.</span>
          </span>
        </param>
        <param name="newStyle">
          <span data-ttu-id="26d05-1035">Новый стиль.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1035">The new style.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26d05-1036">Вызывается при изменении текущего стиля данного элемента, что ведет к недействительности структуры.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1036">Invoked when the style in use on this element changes, which will invalidate the layout.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1037">Этот метод имеет реализацию по умолчанию, который устанавливает внутренний флаг, заметки о состоянии изменения стиля.</span><span class="sxs-lookup"><span data-stu-id="26d05-1037">This method has a default implementation that sets an internal flag that notes the style changed condition.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="26d05-1038">
            <para>Не следует обычно переопределить этот метод. Любые изменения на стиль, который включает в себя меру или упорядочить изменение уже приведет к запуску другого цикла отрисовки, при условии, что типичная реализация <see cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" />  /  <see cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" />, или значения по умолчанию. Переопределяет из <see cref="M:System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)" /> может быть целесообразным Если ваш <see cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" />  /  <see cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" /> реализаций были намеренно оптимизации или частичных обновлений, которые поддерживают но по-прежнему хотите применить изменения в стили напрямую. (Частичное обновление будет попытка во избежание нескольких вызовов добавочные <see cref="M:System.Windows.UIElement.Measure(System.Windows.Size)" /> и <see cref="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" /> на любые дочерние элементы).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1038">
              <para>You should not typically have to override this method. Any change to a style that involves a measure or arrange change would already trigger another render cycle, assuming a typical implementation of <see cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" /> / <see cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" />, or the defaults. Overrides of <see cref="M:System.Windows.FrameworkElement.OnStyleChanged(System.Windows.Style,System.Windows.Style)" /> might be appropriate if your <see cref="M:System.Windows.FrameworkElement.ArrangeOverride(System.Windows.Size)" /> / <see cref="M:System.Windows.FrameworkElement.MeasureOverride(System.Windows.Size)" /> implementations were deliberately optimizing or supporting partial updates, but still wanted to apply changes to styles more directly. (The partial updates would be an attempt to avoid multiple incremental calls to <see cref="M:System.Windows.UIElement.Measure(System.Windows.Size)" /> and <see cref="M:System.Windows.UIElement.Arrange(System.Windows.Rect)" /> on any child elements).</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnToolTipClosing">
      <MemberSignature Language="C#" Value="protected virtual void OnToolTipClosing (System.Windows.Controls.ToolTipEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnToolTipClosing(class System.Windows.Controls.ToolTipEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.OnToolTipClosing(System.Windows.Controls.ToolTipEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnToolTipClosing (e As ToolTipEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnToolTipClosing(System::Windows::Controls::ToolTipEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnToolTipClosing : System.Windows.Controls.ToolTipEventArgs -&gt; unit&#xA;override this.OnToolTipClosing : System.Windows.Controls.ToolTipEventArgs -&gt; unit" Usage="frameworkElement.OnToolTipClosing e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.ToolTipEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="26d05-1039">Предоставляет данные о событии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1039">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26d05-1040">Вызывается, когда необработанное перенаправленное событие <see cref="E:System.Windows.FrameworkElement.ToolTipClosing" /> достигает этого класса на своем пути.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1040">Invoked whenever an unhandled <see cref="E:System.Windows.FrameworkElement.ToolTipClosing" /> routed event reaches this class in its route.</span>
          </span>
          <span data-ttu-id="26d05-1041">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1041">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1042">Этот метод не имеет значение по умолчанию реализации.</span><span class="sxs-lookup"><span data-stu-id="26d05-1042">This method has no default implementation.</span></span> <span data-ttu-id="26d05-1043">Если промежуточный класс в цепочке наследования реализует данный метод рекомендуется вызывать базовую реализацию.</span><span class="sxs-lookup"><span data-stu-id="26d05-1043">You should still call the base implementation in case an intermediate class in the inheritance has implemented this method.</span></span>  
  
 <span data-ttu-id="26d05-1044">Этот метод похож на [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблон событий на \* методы: она предоставляет средства для обработки соответствующего события из производных классов с помощью обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="26d05-1044">The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler.</span></span> <span data-ttu-id="26d05-1045">В этом случае соответствующее событие является перенаправленное событие.</span><span class="sxs-lookup"><span data-stu-id="26d05-1045">In this case the matching event is a routed event.</span></span> <span data-ttu-id="26d05-1046">Шаблон реализации методы On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерний элемент, не обязательно является элементом, который будет вызывать обработчики, поэтому вашей реализации потребуется использовать источник для аргументов событий свойства в учетной записи (и не следует пытаться повторно отправить событие в большинстве случаев).</span><span class="sxs-lookup"><span data-stu-id="26d05-1046">The implementation pattern of the On\* methods is different for routed events because the routed event may have been raised by a child element, not necessarily the element that will invoke handlers, so your implementation will need to take the event arguments' source properties into account (and should not try to re-raise the event in most cases).</span></span> <span data-ttu-id="26d05-1047">Подклассы <xref:System.Windows.FrameworkElement> может выбрать для вызова методов обработчика закрытый класс при получении события в маршруте.</span><span class="sxs-lookup"><span data-stu-id="26d05-1047">Subclasses of <xref:System.Windows.FrameworkElement> could choose to call private class handler methods when the event is received along the route.</span></span> <span data-ttu-id="26d05-1048">Одним из потенциальных сценариев является получение аргументов события и специально помечать событие как обработанное.</span><span class="sxs-lookup"><span data-stu-id="26d05-1048">One potential scenario is to take the arguments of the event and deliberately mark the event as handled.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnToolTipOpening">
      <MemberSignature Language="C#" Value="protected virtual void OnToolTipOpening (System.Windows.Controls.ToolTipEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnToolTipOpening(class System.Windows.Controls.ToolTipEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.OnToolTipOpening(System.Windows.Controls.ToolTipEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnToolTipOpening (e As ToolTipEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnToolTipOpening(System::Windows::Controls::ToolTipEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnToolTipOpening : System.Windows.Controls.ToolTipEventArgs -&gt; unit&#xA;override this.OnToolTipOpening : System.Windows.Controls.ToolTipEventArgs -&gt; unit" Usage="frameworkElement.OnToolTipOpening e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.Controls.ToolTipEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="26d05-1049">Предоставляет данные о событии.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1049">Provides data about the event.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26d05-1050">Вызывается, когда перенаправленное событие <see cref="E:System.Windows.FrameworkElement.ToolTipOpening" /> достигает этого класса на своем пути.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1050">Invoked whenever the <see cref="E:System.Windows.FrameworkElement.ToolTipOpening" /> routed event reaches this class in its route.</span>
          </span>
          <span data-ttu-id="26d05-1051">Реализуйте этот метод, чтобы добавить для класса обработчик данного события.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1051">Implement this method to add class handling for this event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1052">Этот метод не имеет значение по умолчанию реализации.</span><span class="sxs-lookup"><span data-stu-id="26d05-1052">This method has no default implementation.</span></span> <span data-ttu-id="26d05-1053">Если промежуточный класс в цепочке наследования реализует данный метод рекомендуется вызывать базовую реализацию.</span><span class="sxs-lookup"><span data-stu-id="26d05-1053">You should still call the base implementation in case an intermediate class in the inheritance has implemented this method.</span></span>  
  
 <span data-ttu-id="26d05-1054">Этот метод похож на [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] шаблон событий на \* методы: она предоставляет средства для обработки соответствующего события из производных классов с помощью обработчика класса вместо обработчика экземпляра.</span><span class="sxs-lookup"><span data-stu-id="26d05-1054">The purpose of this method is somewhat similar to [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] event pattern On\* methods: it provides the means to handle the matching event from derived classes with a class handler instead of an instance handler.</span></span> <span data-ttu-id="26d05-1055">В этом случае соответствующее событие является перенаправленное событие.</span><span class="sxs-lookup"><span data-stu-id="26d05-1055">In this case the matching event is a routed event.</span></span> <span data-ttu-id="26d05-1056">Шаблон реализации методы On \* отличается для перенаправленных событий, так как перенаправленное событие может быть вызвано дочерний элемент, не обязательно является элементом, который будет вызывать обработчики, поэтому вашей реализации потребуется использовать источник для аргументов событий свойства в учетной записи (и не следует пытаться повторно отправить событие в большинстве случаев).</span><span class="sxs-lookup"><span data-stu-id="26d05-1056">The implementation pattern of the On\* methods is different for routed events because the routed event may have been raised by a child element, not necessarily the element that will invoke handlers, so your implementation will need to take the event arguments' source properties into account (and should not try to re-raise the event in most cases).</span></span> <span data-ttu-id="26d05-1057">Подклассы <xref:System.Windows.FrameworkElement> может выбрать для вызова методов обработчика закрытый класс при получении события в маршруте.</span><span class="sxs-lookup"><span data-stu-id="26d05-1057">Subclasses of <xref:System.Windows.FrameworkElement> could choose to call private class handler methods when the event is received along the route.</span></span> <span data-ttu-id="26d05-1058">Одним из потенциальных сценариев является получение аргументов события и пометка события как обработанного для сокращения маршрута.</span><span class="sxs-lookup"><span data-stu-id="26d05-1058">One potential scenario is to take the arguments of the event and deliberately mark the event as handled to shorten the route.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnVisualParentChanged">
      <MemberSignature Language="C#" Value="protected internal override void OnVisualParentChanged (System.Windows.DependencyObject oldParent);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnVisualParentChanged(class System.Windows.DependencyObject oldParent) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.OnVisualParentChanged(System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnVisualParentChanged (oldParent As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnVisualParentChanged(System::Windows::DependencyObject ^ oldParent);" />
      <MemberSignature Language="F#" Value="override this.OnVisualParentChanged : System.Windows.DependencyObject -&gt; unit" Usage="frameworkElement.OnVisualParentChanged oldParent" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldParent" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldParent">
          <span data-ttu-id="26d05-1059">Прежний родительский элемент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1059">The old parent element.</span>
          </span>
          <span data-ttu-id="26d05-1060">Может иметь значение <see langword="null" />, указывающее, что до этого у элемента не было визуального родителя.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1060">May be <see langword="null" /> to indicate that the element did not have a visual parent previously.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26d05-1061">Вызывается при изменении родителя данного элемента в визуальном дереве.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1061">Invoked when the parent of this element in the visual tree is changed.</span>
          </span>
          <span data-ttu-id="26d05-1062">Переопределяет свойство <see cref="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1062">Overrides <see cref="M:System.Windows.UIElement.OnVisualParentChanged(System.Windows.DependencyObject)" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1063">Визуальное дерево потенциально отличается от логического дерева, так как он не содержит элементы, которые не отображаются визуально, такие как коллекции и раскрывает некоторые элементы на основании их тем и стилей композиции.</span><span class="sxs-lookup"><span data-stu-id="26d05-1063">The visual tree is potentially different from the logical tree because it omits elements that do not render visually, such as collections, and expands some elements on the basis of their theme and style compositing.</span></span> <span data-ttu-id="26d05-1064">Дополнительные сведения см. в разделе [Деревья в WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="26d05-1064">For more information, see [Trees in WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="26d05-1065">
            <para>Реализация по умолчанию данного виртуального метода запрашивает новый родительский элемент, создает различные события инициализации и задает внутренние флаги состояния инициализации для <see cref="T:System.Windows.FrameworkElement" /> соответствующим образом. Наконец, он вызывает последовательных базовых реализаций, объявленном с <see cref="T:System.Windows.UIElement" />, которое в свою очередь вызывает базовую в <see cref="T:System.Windows.Media.Visual" />. Всегда вызовите базовую реализацию для сохранения этого поведения, в противном случае поведение дерева элементов для этого элемента, объявленного как дочерний элемент другого элемента не может быть должным образом.  Несколько существующих [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] классы переопределяют этот метод, например: <see cref="M:System.Windows.Window.OnVisualParentChanged(System.Windows.DependencyObject)" />, <see cref="M:System.Windows.Controls.ListBoxItem.OnVisualParentChanged(System.Windows.DependencyObject)" />. Наиболее распространенный сценарий — обеспечить, что новый родительский элемент должен быть определенного типа. Это может вызвать исключение, если новый родитель не каким-либо образом тип теста. Специализированная версия этого сценария существует в реализации для элементов списка и пунктов меню, которые не имеют смысла любой за пределами родительского visual, которыми владеет соответствующую коллекцию для их хранения. Обратите внимание на то, что эти случаи не обязательно вызывают исключения, поскольку может существовать сценарии конструктора, которые зависят от того, Переподчинение элементы, которые являются сразу же без родительских «regular».  Этот метод переопределяется также в некоторые элементы, которые обычно являются корневыми, такие как <see cref="T:System.Windows.Window" />. Другим случаем являются элементы, которые являются очевидными корневой элемент в разметке, но который Автоформирование обширную инфраструктуру в скомпилированном логическом дереве (такие как <see cref="T:System.Windows.Controls.Page" />). <see cref="T:System.Windows.Window" /> И <see cref="T:System.Windows.Controls.Page" /> реализаций намеренно запечатать метод.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1065">
              <para>The default implementation of this virtual method queries for the new parent, raises various initialization events, and sets internal flags about initialization state of the <see cref="T:System.Windows.FrameworkElement" /> as appropriate. Finally, it calls the successive base implementations as declared by <see cref="T:System.Windows.UIElement" />, which in turn calls its base in <see cref="T:System.Windows.Media.Visual" />. Always call the base implementation to preserve this behavior, otherwise the element tree behavior for this element when declared as a child of another element may not be as expected.  A few existing [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] classes override this method, for example: <see cref="M:System.Windows.Window.OnVisualParentChanged(System.Windows.DependencyObject)" />, <see cref="M:System.Windows.Controls.ListBoxItem.OnVisualParentChanged(System.Windows.DependencyObject)" />. The most common scenario is to enforce that the new parent must be a particular type. This might involve throwing an exception if the new parent failed some manner of type test. A specialized version of this scenario exists in implementations for list items and menu items, which do not make any sense outside a parent visual that owns an appropriate collection to store them in. Note that these cases do not necessarily raise exceptions, because there might be designer scenarios that rely on reparenting elements that are momentarily without their "regular" parents.  This method is also overridden in certain elements that are typically the root element, such as  <see cref="T:System.Windows.Window" />. Another case is elements that are the apparent root element in markup but which autogenerate a greater infrastructure in a compiled logical tree (such as <see cref="T:System.Windows.Controls.Page" />). The <see cref="T:System.Windows.Window" /> and <see cref="T:System.Windows.Controls.Page" /> implementations deliberately seal the method.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Media.Visual.OnVisualParentChanged(System.Windows.DependencyObject)" />
        <altmember cref="M:System.Windows.Window.OnVisualParentChanged(System.Windows.DependencyObject)" />
      </Docs>
    </Member>
    <Member MemberName="OverridesDefaultStyle">
      <MemberSignature Language="C#" Value="public bool OverridesDefaultStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool OverridesDefaultStyle" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.OverridesDefaultStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property OverridesDefaultStyle As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool OverridesDefaultStyle { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.OverridesDefaultStyle : bool with get, set" Usage="System.Windows.FrameworkElement.OverridesDefaultStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-1066">Получение или установка значения, определяющего использование в элементе свойств стиля, заданных в стилях темы.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1066">Gets or sets a value that indicates whether this element incorporates style properties from theme styles.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26d05-1067">Значение <see langword="true" />, если этот элемент не использует свойства стиля темы; все свойства, определяющие стиль, получаются из локальных стилей приложения, а свойства стиля темы не применяются.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1067">
              <see langword="true" /> if this element does not use theme style properties; all style-originating properties come from local application styles, and theme style properties do not apply.</span>
          </span>
          <span data-ttu-id="26d05-1068">Значение <see langword="false" />, если сначала применяются стили приложения, а затем стили тем для свойств, которые не были явным образом заданы в стилях приложения.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1068">
              <see langword="false" /> if application styles apply first, and then theme styles apply for properties that were not specifically set in application styles.</span>
          </span>
          <span data-ttu-id="26d05-1069">Значение по умолчанию: <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1069">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1070">Наиболее распространенный случай использования этого свойства является непрямое использование в переключателе стиля, который передает тематический стиль.</span><span class="sxs-lookup"><span data-stu-id="26d05-1070">The most common usage of this property is an indirect usage within the setter of a style that is supplying a themed style.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="26d05-1071">Если задать <xref:System.Windows.FrameworkElement.OverridesDefaultStyle%2A> для `true` на элемент управления будет подавление шаблон элемента управления по умолчанию, предоставляемые тематические стили.</span><span class="sxs-lookup"><span data-stu-id="26d05-1071">If you set <xref:System.Windows.FrameworkElement.OverridesDefaultStyle%2A> to `true` on a control, you will be suppressing the default control template supplied by the theme styles.</span></span> <span data-ttu-id="26d05-1072">Этот шаблон обычно включает средство отображения содержимого и других сложных элементов, которые предоставляют основные [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] функциональные возможности и визуализации для элемента управления.</span><span class="sxs-lookup"><span data-stu-id="26d05-1072">That control template typically includes the content presenter and other composited elements that provide basic [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)] functionality and visualization for the control.</span></span> <span data-ttu-id="26d05-1073">Если вы хотите организовать дальнейшую поддержку те же функции, что тематические стили по умолчанию элемент управления, необходимо указать альтернативный стиль с шаблоном элемента управления, которая реплицирует ту же структуру.</span><span class="sxs-lookup"><span data-stu-id="26d05-1073">If you want the control to continue to support the same features as the default theme styles, you must supply an alternate style with a control template that replicates the same structure.</span></span> <span data-ttu-id="26d05-1074">Дополнительные сведения см. в разделе [Общие сведения о разработке элементов управления](~/docs/framework/wpf/controls/control-authoring-overview.md).</span><span class="sxs-lookup"><span data-stu-id="26d05-1074">For more information, see [Control Authoring Overview](~/docs/framework/wpf/controls/control-authoring-overview.md).</span></span>  
  
<a name="dependencyPropertyInfo_OverridesDefaultStyle"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="26d05-1075">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="26d05-1075">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="26d05-1076">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="26d05-1076">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.OverridesDefaultStyleProperty>|  
|<span data-ttu-id="26d05-1077">Значение свойства метаданных `true`</span><span class="sxs-lookup"><span data-stu-id="26d05-1077">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OverridesDefaultStyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty OverridesDefaultStyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty OverridesDefaultStyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.OverridesDefaultStyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly OverridesDefaultStyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ OverridesDefaultStyleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable OverridesDefaultStyleProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.OverridesDefaultStyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-1078">Идентифицирует свойство зависимостей <see cref="P:System.Windows.FrameworkElement.OverridesDefaultStyle" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1078">Identifies the <see cref="P:System.Windows.FrameworkElement.OverridesDefaultStyle" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parent">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject Parent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject Parent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.Parent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Parent As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObject ^ Parent { System::Windows::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Parent : System.Windows.DependencyObject" Usage="System.Windows.FrameworkElement.Parent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-1079">Получает логический родительский элемент этого элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1079">Gets the logical parent  element of this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26d05-1080">Логический родительский объект этого элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1080">This element's logical parent.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1081"><xref:System.Windows.FrameworkElement.Parent%2A> может быть `null` в случаях, когда элемент был создан, но не подключен к логическому дереву, в конечном итоге подключается на уровне корневого элемента страницы или объекту приложения.</span><span class="sxs-lookup"><span data-stu-id="26d05-1081"><xref:System.Windows.FrameworkElement.Parent%2A> may be `null` in cases where an element was instantiated, but is not attached to any logical tree that eventually connects to the page level root element, or the application object.</span></span>  
  
 <span data-ttu-id="26d05-1082">Обратите внимание, что логический родитель элемента потенциально может меняться в зависимости от функциональности приложения, и сохранение значения этого свойства не отразит это изменение.</span><span class="sxs-lookup"><span data-stu-id="26d05-1082">Note that the logical parent of an element can potentially change depending on your application's functionality, and keeping the value of this property will not reflect that change.</span></span> <span data-ttu-id="26d05-1083">Обычно нужно получить значение, непосредственно перед он вам нужен.</span><span class="sxs-lookup"><span data-stu-id="26d05-1083">You typically should get the value immediately before you need it.</span></span>  
  
 <span data-ttu-id="26d05-1084">См. в разделе [деревья в WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md) для сценариев и Дополнительные сведения о логическому дереву там, где с помощью <xref:System.Windows.FrameworkElement.Parent%2A> как методика родительского элемента подходит обнаружения.</span><span class="sxs-lookup"><span data-stu-id="26d05-1084">See [Trees in WPF](~/docs/framework/wpf/advanced/trees-in-wpf.md) for more information about logical tree  traversal, and the scenarios where using  <xref:System.Windows.FrameworkElement.Parent%2A> as a technique of parent element discovery is appropriate.</span></span>  
  
 <span data-ttu-id="26d05-1085">Механизм свойства потенциально пересчитывает все значения свойств элемента при изменении его родителя, так как некоторые свойства наследуют значения по логическому дереву.</span><span class="sxs-lookup"><span data-stu-id="26d05-1085">The property engine will potentially recalculate all property values of an element when it is reparented, because some properties inherit values through the logical tree.</span></span> <span data-ttu-id="26d05-1086"><xref:System.Windows.FrameworkElement.DataContext%2A> , Применяемый для привязки также можно изменить при изменении в родителя или элементов.</span><span class="sxs-lookup"><span data-stu-id="26d05-1086">The <xref:System.Windows.FrameworkElement.DataContext%2A> that applies for bindings can also change when elements are reparented.</span></span>  
  
 <span data-ttu-id="26d05-1087">Изменение родительского элемента обычно выполняется только через управление коллекциями, с использованием выделенных методов добавления и удаления, или путем задания свойств содержимого элементов.</span><span class="sxs-lookup"><span data-stu-id="26d05-1087">Changing an element's parent is typically only done through manipulation of collections, by using dedicated add or remove methods, or through setting content properties of elements.</span></span>  
  
 <span data-ttu-id="26d05-1088">Наиболее типичный сценарий использования <xref:System.Windows.FrameworkElement.Parent%2A> свойство является получить ссылку, а затем получить различные <xref:System.Windows.FrameworkElement> значения свойств из родительского элемента.</span><span class="sxs-lookup"><span data-stu-id="26d05-1088">The most typical scenario for using the <xref:System.Windows.FrameworkElement.Parent%2A> property is to obtain a reference and then get various <xref:System.Windows.FrameworkElement> property values from the parent.</span></span> <span data-ttu-id="26d05-1089">Для шаблонов <xref:System.Windows.FrameworkElement.Parent%2A> шаблона со временем будет `null`.</span><span class="sxs-lookup"><span data-stu-id="26d05-1089">For templates, the <xref:System.Windows.FrameworkElement.Parent%2A> of the template eventually will be `null`.</span></span> <span data-ttu-id="26d05-1090">Чтобы преодолеть эту точку и расширить в логическом дереве, где фактически применяется шаблон, используйте <xref:System.Windows.FrameworkElement.TemplatedParent%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-1090">To get past this point and extend into the logical tree where the template is actually applied, use <xref:System.Windows.FrameworkElement.TemplatedParent%2A>.</span></span>  
  
 <span data-ttu-id="26d05-1091">Обратите внимание на то, что это свойство не сообщает о родительских элементов визуального дерева в случаях, когда они отличаются от родителей логического дерева.</span><span class="sxs-lookup"><span data-stu-id="26d05-1091">Note that this property does not report visual tree parents in cases where these vary from the logical tree parents.</span></span> <span data-ttu-id="26d05-1092">Родительские элементы визуального дерева обычно не важны в общих случаях приложений, но может быть целевыми родительскими элементами для некоторых случаях визуального уровня.</span><span class="sxs-lookup"><span data-stu-id="26d05-1092">Visual tree parents are not typically important for general application cases but may be the desired parent elements for certain visual level cases.</span></span> <span data-ttu-id="26d05-1093">См. раздел <xref:System.Windows.Media.VisualTreeHelper>.</span><span class="sxs-lookup"><span data-stu-id="26d05-1093">See <xref:System.Windows.Media.VisualTreeHelper>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26d05-1094">В примере показан код, который проверяет родительский элемент, а затем использует значения свойств из родительского элемента для задания свойств для дочернего элемента для сопоставления.</span><span class="sxs-lookup"><span data-stu-id="26d05-1094">The following example shows code that checks for an element's parent, and then uses property values from the parent to set properties on the child element to match.</span></span> <span data-ttu-id="26d05-1095">В данном случае это свойства, которые влияют на размер отрисовки.</span><span class="sxs-lookup"><span data-stu-id="26d05-1095">In this case these are properties that affect the rendering size.</span></span>  
  
 [!code-csharp[GeometryDesigner#FEParentProperty](~/samples/snippets/csharp/VS_Snippets_Wpf/GeometryDesigner/CSharp/Window1.xaml.cs#feparentproperty)]
 [!code-vb[GeometryDesigner#FEParentProperty](~/samples/snippets/visualbasic/VS_Snippets_Wpf/GeometryDesigner/visualbasic/window1.xaml.vb#feparentproperty)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkElement.TemplatedParent" />
        <altmember cref="T:System.Windows.LogicalTreeHelper" />
      </Docs>
    </Member>
    <Member MemberName="ParentLayoutInvalidated">
      <MemberSignature Language="C#" Value="protected internal virtual void ParentLayoutInvalidated (System.Windows.UIElement child);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void ParentLayoutInvalidated(class System.Windows.UIElement child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub ParentLayoutInvalidated (child As UIElement)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void ParentLayoutInvalidated(System::Windows::UIElement ^ child);" />
      <MemberSignature Language="F#" Value="abstract member ParentLayoutInvalidated : System.Windows.UIElement -&gt; unit&#xA;override this.ParentLayoutInvalidated : System.Windows.UIElement -&gt; unit" Usage="frameworkElement.ParentLayoutInvalidated child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Windows.UIElement" />
      </Parameters>
      <Docs>
        <param name="child">
          <span data-ttu-id="26d05-1096">Дочерний элемент, сообщающий об изменении.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1096">The child element reporting the change.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26d05-1097">Поддерживает добавочные реализации структуры в специализированных подклассах <see cref="T:System.Windows.FrameworkElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1097">Supports incremental layout implementations in specialized subclasses of <see cref="T:System.Windows.FrameworkElement" />.</span>
          </span>
          <span data-ttu-id="26d05-1098">Метод <see cref="M:System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)" /> вызывается, когда дочерний элемент делает недействительным свойство, помеченное в метаданных как влияющее на проходы измерения или компоновки родительского элемента во время структурирования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1098">
              <see cref="M:System.Windows.FrameworkElement.ParentLayoutInvalidated(System.Windows.UIElement)" /> is invoked when a child element has invalidated a property that is marked in metadata as affecting the parent's measure or arrange passes during layout.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1099">Если этот элемент содержит дочерний элемент, на котором был объявлен недействительным, некоторые свойства и свойства был помечен как <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A> или <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A> свойства метаданных во время регистрации, этот метод вызывается.</span><span class="sxs-lookup"><span data-stu-id="26d05-1099">If this element has a child element on which some property was invalidated and the property was marked as <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentMeasure%2A> or <xref:System.Windows.FrameworkPropertyMetadata.AffectsParentArrange%2A> in property metadata during registration, this method is invoked.</span></span> <span data-ttu-id="26d05-1100">Вызов метода уведомляет конкретный дочерний элемент которого должен быть повторно измеренный, если этот элемент поддерживает частичное (добавочное) обновление макета родительского элемента.</span><span class="sxs-lookup"><span data-stu-id="26d05-1100">The method invocation notifies the parent element which particular child element must be re-measured if this element supports partial (incremental) update of layout.</span></span>  
  
 <span data-ttu-id="26d05-1101">По умолчанию <xref:System.Windows.FrameworkElement> не поддерживает последовательный макет и в <xref:System.Windows.FrameworkElement> класса это у метода нет реализации по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="26d05-1101">By default, <xref:System.Windows.FrameworkElement> does not support incremental layout, and in the <xref:System.Windows.FrameworkElement> class this method has no default implementation.</span></span> <span data-ttu-id="26d05-1102">Сценарий, в котором было бы необходимо переопределение этого метода не является типичным, так как он требует изменить систему макета по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="26d05-1102">The scenario where overriding this method would be necessary is not common, because it requires you to modify the default layout system behavior.</span></span>  
  
 <span data-ttu-id="26d05-1103">Пример сценария реализации может быть Если класс типа ограничения для возможные дочерние элементы, которые значительно более строгие, чем система макетов уровня среды WPF.</span><span class="sxs-lookup"><span data-stu-id="26d05-1103">An example implementation scenario might be if a class had type limitations for possible child elements that are significantly more restrictive than the WPF framework-level layout system.</span></span> <span data-ttu-id="26d05-1104">Из-за природы данных пользовательских элементов изменения свойств могут быть намеренно отложены при реализации особого поведения структуры.</span><span class="sxs-lookup"><span data-stu-id="26d05-1104">Because of the nature of these custom elements, property changes could be deliberately deferred when you implement some custom layout behavior.</span></span> <span data-ttu-id="26d05-1105">Например измерения или компоновки переопределения методов, которые пытаются оптимизировать дочерний элемент прохода отрисовки, могут быть отложены для некоторых типов изменений, которые обычно приводят к очередной проход разметки.</span><span class="sxs-lookup"><span data-stu-id="26d05-1105">For instance, measure/arrange method overrides, which try to optimize the child element render pass, could be deferred for certain types of changes that would ordinarily result in another layout pass.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PredictFocus">
      <MemberSignature Language="C#" Value="public override sealed System.Windows.DependencyObject PredictFocus (System.Windows.Input.FocusNavigationDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance class System.Windows.DependencyObject PredictFocus(valuetype System.Windows.Input.FocusNavigationDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Function PredictFocus (direction As FocusNavigationDirection) As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Windows::DependencyObject ^ PredictFocus(System::Windows::Input::FocusNavigationDirection direction);" />
      <MemberSignature Language="F#" Value="override this.PredictFocus : System.Windows.Input.FocusNavigationDirection -&gt; System.Windows.DependencyObject" Usage="frameworkElement.PredictFocus direction" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="direction" Type="System.Windows.Input.FocusNavigationDirection" />
      </Parameters>
      <Docs>
        <param name="direction">
          <span data-ttu-id="26d05-1106">Направление, в котором следует определить перспективное изменение фокуса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1106">The direction for which a prospective focus change should be determined.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26d05-1107">Определяет следующий элемент, который получит фокус, относительно данного элемента для указанного направления движения фокуса, но реально фокус не перемещает.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1107">Determines the next element that would receive focus relative to this element for a provided focus movement direction, but does not actually move the focus.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="26d05-1108">Следующий элемент, на который будет перемещен фокус в случае фактического обхода фокуса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1108">The next element that focus would move to if focus were actually traversed.</span>
          </span>
          <span data-ttu-id="26d05-1109">Может возвращать значение <see langword="null" />, если фокус нельзя переместить относительно данного элемента в указанном направлении.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1109">May return <see langword="null" /> if focus cannot be moved relative to this element for the provided direction.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1110"><xref:System.Windows.FrameworkElement.MoveFocus%2A> — Это связанный метод, который фактически перемещения фокуса.</span><span class="sxs-lookup"><span data-stu-id="26d05-1110"><xref:System.Windows.FrameworkElement.MoveFocus%2A> is the related method that actually does move focus.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26d05-1111">В следующем примере реализуется обработчик, который обрабатывает несколько возможных вводов кнопок, каждой кнопки, представляющий возможного <xref:System.Windows.Input.FocusNavigationDirection>.</span><span class="sxs-lookup"><span data-stu-id="26d05-1111">The following example implements a handler that handles several possible button inputs, each button representing a possible <xref:System.Windows.Input.FocusNavigationDirection>.</span></span> <span data-ttu-id="26d05-1112">Обработчик отслеживает элемента с текущим фокусом клавиатуры и вызывает <xref:System.Windows.FrameworkElement.PredictFocus%2A> на этот элемент и задает соответствующий <xref:System.Windows.Input.FocusNavigationDirection> для инициализации <xref:System.Windows.Input.TraversalRequest> предоставленный параметр типа.</span><span class="sxs-lookup"><span data-stu-id="26d05-1112">The handler tracks the element with current keyboard focus, and calls <xref:System.Windows.FrameworkElement.PredictFocus%2A> on that element, and specifies the appropriate <xref:System.Windows.Input.FocusNavigationDirection> as initialization for the <xref:System.Windows.Input.TraversalRequest> type parameter provided.</span></span> <span data-ttu-id="26d05-1113">Вместо перемещения этого элемента как <xref:System.Windows.FrameworkElement.MoveFocus%2A> бы сделать, обработчик изменяет размеры назначения прогнозируемое фокус в целях визуализации.</span><span class="sxs-lookup"><span data-stu-id="26d05-1113">Instead of moving to that element as <xref:System.Windows.FrameworkElement.MoveFocus%2A> would do, the handler changes the physical dimensions of the predicted focus destination for visualization purposes.</span></span>  
  
 [!code-csharp[FocusSample#FEPredictFocus](~/samples/snippets/csharp/VS_Snippets_Wpf/FocusSample/CSharp/Window1.xaml.cs#fepredictfocus)]
 [!code-vb[FocusSample#FEPredictFocus](~/samples/snippets/visualbasic/VS_Snippets_Wpf/FocusSample/visualbasic/window1.xaml.vb#fepredictfocus)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ComponentModel.InvalidEnumArgumentException">
          <span data-ttu-id="26d05-1114">Одно из следующих направлений, указанное в <see cref="T:System.Windows.Input.TraversalRequest" />: <see cref="F:System.Windows.Input.FocusNavigationDirection.Next" />, <see cref="F:System.Windows.Input.FocusNavigationDirection.Previous" />, <see cref="F:System.Windows.Input.FocusNavigationDirection.First" />, <see cref="F:System.Windows.Input.FocusNavigationDirection.Last" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1114">Specified one of the following directions in the <see cref="T:System.Windows.Input.TraversalRequest" />: <see cref="F:System.Windows.Input.FocusNavigationDirection.Next" />, <see cref="F:System.Windows.Input.FocusNavigationDirection.Previous" />, <see cref="F:System.Windows.Input.FocusNavigationDirection.First" />, <see cref="F:System.Windows.Input.FocusNavigationDirection.Last" />.</span>
          </span>
          <span data-ttu-id="26d05-1115">Эти направления недопустимы для метода <see cref="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" /> (однако допустимы для метода <see cref="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1115">These directions are not legal for <see cref="M:System.Windows.FrameworkElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" /> (but they are legal for <see cref="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" />).</span>
          </span>
        </exception>
        <altmember cref="M:System.Windows.FrameworkElement.MoveFocus(System.Windows.Input.TraversalRequest)" />
        <altmember cref="M:System.Windows.UIElement.PredictFocus(System.Windows.Input.FocusNavigationDirection)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterName">
      <MemberSignature Language="C#" Value="public void RegisterName (string name, object scopedElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RegisterName(string name, object scopedElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.RegisterName(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterName (name As String, scopedElement As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RegisterName(System::String ^ name, System::Object ^ scopedElement);" />
      <MemberSignature Language="F#" Value="member this.RegisterName : string * obj -&gt; unit" Usage="frameworkElement.RegisterName (name, scopedElement)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="scopedElement" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="26d05-1116">Имя, используемое для сопоставления указанного имени с объектом.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1116">Name to use for the specified name-object mapping.</span>
          </span>
        </param>
        <param name="scopedElement">
          <span data-ttu-id="26d05-1117">Объект для сопоставления.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1117">Object for the mapping.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26d05-1118">Предоставляет метод доступа, упрощающий доступ к методу регистрации <see cref="T:System.Windows.NameScope" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1118">Provides an accessor that simplifies access to the <see cref="T:System.Windows.NameScope" /> registration method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1119">Этот метод — это удобный метод для вызова <xref:System.Windows.NameScope.RegisterName%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-1119">This method is a convenience method for calling <xref:System.Windows.NameScope.RegisterName%2A>.</span></span> <span data-ttu-id="26d05-1120">Реализация будет проверять последовательных родительских элементах, пока не найдет применимой <xref:System.Windows.NameScope> реализации, в которой находится путем поиск элемента, который реализует <xref:System.Windows.Markup.INameScope>.</span><span class="sxs-lookup"><span data-stu-id="26d05-1120">The implementation will check successive parent elements until it finds the applicable <xref:System.Windows.NameScope> implementation, which is found by finding an element that implements <xref:System.Windows.Markup.INameScope>.</span></span> <span data-ttu-id="26d05-1121">Дополнительные сведения об области видимости имен см. в разделе [области видимости имен XAML WPF](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span><span class="sxs-lookup"><span data-stu-id="26d05-1121">For more information about namescopes, see [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span></span>  
  
 <span data-ttu-id="26d05-1122">Вызов <xref:System.Windows.FrameworkElement.RegisterName%2A> нужно, чтобы правильно подключить раскадровки анимации для приложений, при создании в коде.</span><span class="sxs-lookup"><span data-stu-id="26d05-1122">Calling <xref:System.Windows.FrameworkElement.RegisterName%2A> is necessary in order to correctly hook up animation storyboards for applications when created in code.</span></span> <span data-ttu-id="26d05-1123">Это обусловлено тем, одним из ключевых раскадровка свойства, <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>, выполняет поиск имен времени выполнения, вместо того использовать ссылку на целевой элемент.</span><span class="sxs-lookup"><span data-stu-id="26d05-1123">This is because one of the key storyboard properties, <xref:System.Windows.Media.Animation.Storyboard.TargetName%2A>, uses a run-time name lookup instead of being able to take a reference to a target element.</span></span> <span data-ttu-id="26d05-1124">Это справедливо, даже если этот элемент доступен по ссылке из кода.</span><span class="sxs-lookup"><span data-stu-id="26d05-1124">This is true even if that element is accessible by reference from the code.</span></span> <span data-ttu-id="26d05-1125">Дополнительные сведения о том, почему требуется регистрировать имена целей раскадровки, см. в разделе [Общие сведения о раскадровках](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).</span><span class="sxs-lookup"><span data-stu-id="26d05-1125">For more information on why you need to register names for storyboard targets, see [Storyboards Overview](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).</span></span>  
  
   
  
## Examples  
 [!code-csharp[StoryboardBeginAnimation_procedural_snip#NameScopeExample](~/samples/snippets/csharp/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/CSharp/ScopeExample.cs#namescopeexample)]
 [!code-vb[StoryboardBeginAnimation_procedural_snip#NameScopeExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StoryboardBeginAnimation_procedural_snip/visualbasic/scopeexample.vb#namescopeexample)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.NameScope.RegisterName(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RemoveLogicalChild">
      <MemberSignature Language="C#" Value="protected internal void RemoveLogicalChild (object child);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void RemoveLogicalChild(object child) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.RemoveLogicalChild(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub RemoveLogicalChild (child As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void RemoveLogicalChild(System::Object ^ child);" />
      <MemberSignature Language="F#" Value="member this.RemoveLogicalChild : obj -&gt; unit" Usage="frameworkElement.RemoveLogicalChild child" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="child" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="child">
          <span data-ttu-id="26d05-1126">Подлежащий удалению элемент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1126">The element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26d05-1127">Удаляет предоставленный объект из логического дерева этого элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1127">Removes the provided object from this element's logical tree.</span>
          </span>
          <span data-ttu-id="26d05-1128">Объект <see cref="T:System.Windows.FrameworkElement" /> обновляет затронутые указатели родительских элементов в логическом дереве для поддержания синхронизации с данным удалением.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1128">
              <see cref="T:System.Windows.FrameworkElement" /> updates the affected logical tree parent pointers to keep in sync with this deletion.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1129">Используйте этот метод для реализации коллекции объектов, представляющих логических дочерних элементов элемента.</span><span class="sxs-lookup"><span data-stu-id="26d05-1129">Use this method for the implementation of collections on objects that represent logical children of an element.</span></span> <span data-ttu-id="26d05-1130">Это можно сделать в методы получения свойств или методов задания, обработчиков класса `Changed` события, конструкторы, или в коллекции типов сами.</span><span class="sxs-lookup"><span data-stu-id="26d05-1130">This might be done in property getters or setters, class handlers of `Changed` events, constructors, or within the collection types themselves.</span></span>  
  
 <span data-ttu-id="26d05-1131">Для разработчиков элементов управления обработка логического дерева на этом уровне не рекомендуется, если только не подходит ни одна из моделей содержимого указанный базовый класс элемента управления.</span><span class="sxs-lookup"><span data-stu-id="26d05-1131">For control authors, manipulating the logical tree at this level is not the recommended practice, unless none of the provided base control class' content models are appropriate.</span></span> <span data-ttu-id="26d05-1132">Рассмотрите возможность создания подклассов на уровне <xref:System.Windows.Controls.ContentControl>, <xref:System.Windows.Controls.ItemsControl>, и <xref:System.Windows.Controls.HeaderedItemsControl>.</span><span class="sxs-lookup"><span data-stu-id="26d05-1132">Consider subclassing at the level of <xref:System.Windows.Controls.ContentControl>, <xref:System.Windows.Controls.ItemsControl>, and <xref:System.Windows.Controls.HeaderedItemsControl>.</span></span> <span data-ttu-id="26d05-1133">Эти классы предоставляют модель содержимого с определенной применение логических дочерних элементов через выделенный [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)], а также поддерживает другие функции, обычно желательно, [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] элемента управления, такие как стили через шаблоны.</span><span class="sxs-lookup"><span data-stu-id="26d05-1133">These classes provide a content model with particular enforcement of logical children through dedicated [!INCLUDE[TLA2#tla_api#plural](~/includes/tla2sharptla-apisharpplural-md.md)], as well as support for other features typically desirable in a [!INCLUDE[TLA2#tla_winclient](~/includes/tla2sharptla-winclient-md.md)] control such as styling through templates.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26d05-1134">В следующем примере реализуется `Child` свойство в пользовательском <xref:System.Windows.FrameworkElement> который выполняет собственную реализацию на визуальном уровне.</span><span class="sxs-lookup"><span data-stu-id="26d05-1134">The following example implements a `Child` property on a custom <xref:System.Windows.FrameworkElement> that does its own visual layer implementation.</span></span> <span data-ttu-id="26d05-1135">Метод задания свойства разработан таким образом, если значение изменяется, старое значение удаляется из логического дерева, а также коллекцию визуальных элементов данного класса.</span><span class="sxs-lookup"><span data-stu-id="26d05-1135">The property's setter is designed so that if the value changes, the old value is removed from the logical tree, as well as a class-specific visual collection.</span></span> <span data-ttu-id="26d05-1136">Значения кэшируются, и затем добавляется новое значение как стандартный framework уровня логическом дереве WPF, так и коллекция пользовательских визуальных элементов.</span><span class="sxs-lookup"><span data-stu-id="26d05-1136">The values are cached, and then the new value is added to both the standard WPF framework level logical tree and the custom visual collection.</span></span>  
  
 [!code-csharp[CompositionTargetRenderingAnimations#AddRemoveLogicalChild](~/samples/snippets/csharp/VS_Snippets_Wpf/CompositionTargetRenderingAnimations/CSharp/ParticleEffectExamples/OverlayRenderDecorator.cs#addremovelogicalchild)]
 [!code-vb[CompositionTargetRenderingAnimations#AddRemoveLogicalChild](~/samples/snippets/visualbasic/VS_Snippets_Wpf/CompositionTargetRenderingAnimations/visualbasic/particleeffectexamples/overlayrenderdecorator.vb#addremovelogicalchild)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.AddLogicalChild(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="RequestBringIntoView">
      <MemberSignature Language="C#" Value="public event System.Windows.RequestBringIntoViewEventHandler RequestBringIntoView;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RequestBringIntoViewEventHandler RequestBringIntoView" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkElement.RequestBringIntoView" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event RequestBringIntoView As RequestBringIntoViewEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RequestBringIntoViewEventHandler ^ RequestBringIntoView;" />
      <MemberSignature Language="F#" Value="member this.RequestBringIntoView : System.Windows.RequestBringIntoViewEventHandler " Usage="member this.RequestBringIntoView : System.Windows.RequestBringIntoViewEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RequestBringIntoViewEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-1137">Происходит при вызове метода <see cref="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)" /> в данном элементе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1137">Occurs when <see cref="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)" /> is called on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1138">Это событие указывает, к родительскому элементу <xref:System.Windows.Controls.ScrollViewer> (или производного класса), на элемент, который инициирует <xref:System.Windows.FrameworkElement.RequestBringIntoView> событий следует сделать видимой в прокручиваемой области.</span><span class="sxs-lookup"><span data-stu-id="26d05-1138">This event indicates to a parent <xref:System.Windows.Controls.ScrollViewer> (or derived class) that the element that raises the <xref:System.Windows.FrameworkElement.RequestBringIntoView> event should be made visible within the scrollable region.</span></span> <span data-ttu-id="26d05-1139"><xref:System.Windows.Controls.ScrollViewer> Затем пометит <xref:System.Windows.FrameworkElement.RequestBringIntoView> событие как обработанное, с помощью класса обработку события.</span><span class="sxs-lookup"><span data-stu-id="26d05-1139">The <xref:System.Windows.Controls.ScrollViewer> will then mark the <xref:System.Windows.FrameworkElement.RequestBringIntoView> event as handled, by using class handling of the event.</span></span> <span data-ttu-id="26d05-1140">В целом <xref:System.Windows.FrameworkElement.RequestBringIntoView> событий, данные не следует помечать обработанные с любого класса, который элемент управления области прокрутки или каким-либо экземпляр обработчика, так как это может повлиять на целью элемента, который вызывается <xref:System.Windows.FrameworkElement.BringIntoView%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-1140">In general <xref:System.Windows.FrameworkElement.RequestBringIntoView> event data should not be marked handled by any class that does control a scrolling region, or by any instance handler, because doing so would interfere with the intended goal of the element that called <xref:System.Windows.FrameworkElement.BringIntoView%2A>.</span></span>  
  
<a name="routedEventInfo_RequestBringIntoView"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="26d05-1141">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="26d05-1141">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="26d05-1142">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="26d05-1142">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.RequestBringIntoViewEvent>|  
|<span data-ttu-id="26d05-1143">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="26d05-1143">Routing strategy</span></span>|<span data-ttu-id="26d05-1144">Восходящая маршрутизация</span><span class="sxs-lookup"><span data-stu-id="26d05-1144">Bubbling</span></span>|  
|<span data-ttu-id="26d05-1145">делегат</span><span class="sxs-lookup"><span data-stu-id="26d05-1145">Delegate</span></span>|<xref:System.Windows.RequestBringIntoViewEventHandler>|  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.BringIntoView(System.Windows.Rect)" />
        <altmember cref="T:System.Windows.Controls.ScrollViewer" />
      </Docs>
    </Member>
    <Member MemberName="RequestBringIntoViewEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent RequestBringIntoViewEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent RequestBringIntoViewEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.RequestBringIntoViewEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly RequestBringIntoViewEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ RequestBringIntoViewEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable RequestBringIntoViewEvent : System.Windows.RoutedEvent" Usage="System.Windows.FrameworkElement.RequestBringIntoViewEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-1146">Идентифицирует направленное событие <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1146">Identifies the <see cref="E:System.Windows.FrameworkElement.RequestBringIntoView" /> routed event.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Resources">
      <MemberSignature Language="C#" Value="public System.Windows.ResourceDictionary Resources { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.ResourceDictionary Resources" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.Resources" />
      <MemberSignature Language="VB.NET" Value="Public Property Resources As ResourceDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::ResourceDictionary ^ Resources { System::Windows::ResourceDictionary ^ get(); void set(System::Windows::ResourceDictionary ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Resources : System.Windows.ResourceDictionary with get, set" Usage="System.Windows.FrameworkElement.Resources" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Windows.Markup.IHaveResources.Resources</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Windows.Markup.Ambient</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.ResourceDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-1147">Получает или задает локально определенный словарь ресурсов.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1147">Gets or sets the locally-defined resource dictionary.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26d05-1148">Текущий локально определенный словарь ресурсов, где доступ к каждому ресурсу может осуществляться по ключу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1148">The current locally-defined dictionary of resources, where each resource can be accessed by key.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1149">Словари ресурсов, которые могут быть определены полностью или частично в [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] обычно создаются в качестве элемента свойства и обычно находятся на корневой элемент для любой отдельной страницы или приложения.</span><span class="sxs-lookup"><span data-stu-id="26d05-1149">Resource dictionaries that can be defined completely or partially in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] are typically created as a property element, and are typically on the root element for any individual page or for the application.</span></span> <span data-ttu-id="26d05-1150">Размещение словаря ресурсов на этом уровне облегчает поиск из отдельных дочерних элементов на странице (или с любой страницы, в случае приложения).</span><span class="sxs-lookup"><span data-stu-id="26d05-1150">Placing the resource dictionary at this level makes it easier to find from individual child elements in the page (or from any page, in the application case).</span></span> <span data-ttu-id="26d05-1151">В большинстве сценариев приложений, рекомендуется определить эти стили как элементы объекта в словаре ресурсов, или как внешние ресурсы, чтобы весь ресурс стиля могут быть автономными (этот подход помогает отдельный конструктор Ответственность от ответственности разработчика путем разделения физических файлов, которые нужно редактировать).</span><span class="sxs-lookup"><span data-stu-id="26d05-1151">In most application scenarios, we recommend that styles be defined as object elements within a resource dictionary, or be defined as external resources so that the entire style resource can be self-contained (this approach helps separate designer responsibilities from developer responsibilities by separating the physical files that need to be edited).</span></span>  
  
 <span data-ttu-id="26d05-1152">Обратите внимание, что это свойство возвращает только словарь ресурсов, объявленные непосредственно в этот элемент.</span><span class="sxs-lookup"><span data-stu-id="26d05-1152">Note that this property returns only the resource dictionary declared directly within that element.</span></span> <span data-ttu-id="26d05-1153">Это отличается от фактического процесса поиска ресурсов, где дочерний элемент можно использовать все ресурсы, определенные в каждом родительском элементе, поиск вверх рекурсивно.</span><span class="sxs-lookup"><span data-stu-id="26d05-1153">This is different than the actual resource lookup process, where a child element can access any of the resources defined in each parent element, searching recursively upwards.</span></span>  
  
 <span data-ttu-id="26d05-1154">Ресурсы можно ссылаться с помощью кода из коллекции, но имейте в виду, что ресурсы созданы в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] , определенно не будут доступны до после <xref:System.Windows.FrameworkElement.Loaded> элементом, который объявляет словаря.</span><span class="sxs-lookup"><span data-stu-id="26d05-1154">Resources can also be referenced by code from within the collection, but be aware that resources created in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] will definitely not be accessible until after <xref:System.Windows.FrameworkElement.Loaded> is raised by the element that declares the dictionary.</span></span> <span data-ttu-id="26d05-1155">На самом деле, ресурсы, анализируются асинхронно и не даже <xref:System.Windows.FrameworkElement.Loaded> событий является гарантией того, вы можете ссылаться на [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] определенных ресурсов.</span><span class="sxs-lookup"><span data-stu-id="26d05-1155">In fact, resources are parsed asynchronously and not even the <xref:System.Windows.FrameworkElement.Loaded> event is an assurance that you can reference a [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] defined resource.</span></span> <span data-ttu-id="26d05-1156">По этой причине следует обычно только обращаться к [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] ресурсы, определяемые как часть кода среды выполнения, или через другие [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] методы, такие как стили или ссылки на расширения ресурсов для значений атрибутов.</span><span class="sxs-lookup"><span data-stu-id="26d05-1156">For this reason you should generally only access [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] defined resources as part of run-time code, or through other [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] techniques such as styles or resource extension references for attribute values.</span></span> <span data-ttu-id="26d05-1157">При доступе к ресурсам с помощью кода, это по существу эквивалентно ссылку из [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span><span class="sxs-lookup"><span data-stu-id="26d05-1157">When you access resources through code, it is essentially equivalent to a  reference made from [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)].</span></span>  
  
 <span data-ttu-id="26d05-1158">Базовый <xref:System.Windows.ResourceDictionary> поддерживает методы, необходимые для добавления, удаления или запроса ресурсов из коллекции с помощью кода.</span><span class="sxs-lookup"><span data-stu-id="26d05-1158">The underlying <xref:System.Windows.ResourceDictionary> supports the methods required to add, remove or query resources from within the collection by using code.</span></span> <span data-ttu-id="26d05-1159"><xref:System.Windows.FrameworkElement.Resources%2A> Свойство является настраиваемым для поддержки сценария полной замены ресурсам коллекцию новый или другой элемент <xref:System.Windows.ResourceDictionary>.</span><span class="sxs-lookup"><span data-stu-id="26d05-1159">The <xref:System.Windows.FrameworkElement.Resources%2A> property is settable to support the scenario of completely replacing the resources collection of an element to be a new or different <xref:System.Windows.ResourceDictionary>.</span></span>  
  
 <span data-ttu-id="26d05-1160">Обратите внимание, что [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] синтаксиса не включает элемент для <xref:System.Windows.ResourceDictionary>.</span><span class="sxs-lookup"><span data-stu-id="26d05-1160">Notice that the [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax shown does not include an element for the <xref:System.Windows.ResourceDictionary>.</span></span> <span data-ttu-id="26d05-1161">Ниже приведен пример неявного синтаксиса коллекции; можно опустить тег, представляющий элемент коллекции.</span><span class="sxs-lookup"><span data-stu-id="26d05-1161">This is an example of implicit collection syntax; a tag representing the collection element can be omitted.</span></span> <span data-ttu-id="26d05-1162">Вместо этого указываются элементы, которые будут добавлены как элементы в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="26d05-1162">The elements that are added as items to the collection are specified instead.</span></span> <span data-ttu-id="26d05-1163">Дополнительные сведения о неявных коллекциях и [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], см. в разделе [XAML подробное описание синтаксиса](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span><span class="sxs-lookup"><span data-stu-id="26d05-1163">For more information about implicit collections and [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], see [XAML Syntax In Detail](~/docs/framework/wpf/advanced/xaml-syntax-in-detail.md).</span></span> <span data-ttu-id="26d05-1164">Один случай где <xref:System.Windows.ResourceDictionary> по-прежнему указывается явно как элемент, Представляем объединенный словарь, в этом случае существует обычно нет дочерних элементов для этого <xref:System.Windows.ResourceDictionary>.</span><span class="sxs-lookup"><span data-stu-id="26d05-1164">One case where a <xref:System.Windows.ResourceDictionary> is still specified explicitly as an element is if you are introducing a merged dictionary, in which case there are typically no child elements for that <xref:System.Windows.ResourceDictionary>.</span></span> <span data-ttu-id="26d05-1165">Дополнительные сведения см. в разделе [объединенные словари ресурсов](~/docs/framework/wpf/advanced/merged-resource-dictionaries.md).</span><span class="sxs-lookup"><span data-stu-id="26d05-1165">For details, see [Merged Resource Dictionaries](~/docs/framework/wpf/advanced/merged-resource-dictionaries.md).</span></span>  
  
<a name="xamlPropertyElementUsage_Resources"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="26d05-1166">Использование элемента свойства XAML</span><span class="sxs-lookup"><span data-stu-id="26d05-1166">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.Resources>  
    oneOrMoreResourceElements  
  </object.Resources>  
</object>  
```  
  
<a name="xamlValues_Resources"></a>   
## <a name="xaml-values"></a><span data-ttu-id="26d05-1167">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="26d05-1167">XAML Values</span></span>  
 <span data-ttu-id="26d05-1168">*oneOrMoreResourceElements*</span><span class="sxs-lookup"><span data-stu-id="26d05-1168">*oneOrMoreResourceElements*</span></span>  
 <span data-ttu-id="26d05-1169">Один или несколько объектов элементов, каждый из которых определяет ресурс.</span><span class="sxs-lookup"><span data-stu-id="26d05-1169">One or more object elements, each of which defines a resource.</span></span> <span data-ttu-id="26d05-1170">В каждом элементе свойства ресурсов в каждом <xref:System.Windows.ResourceDictionary> должен иметь уникальное значение для [директивы x: Key](~/docs/framework/xaml-services/x-key-directive.md), который используется в качестве уникального ключа при получении значений из <xref:System.Windows.ResourceDictionary>.</span><span class="sxs-lookup"><span data-stu-id="26d05-1170">Each resource property element within each <xref:System.Windows.ResourceDictionary> must have a unique value for the [x:Key Directive](~/docs/framework/xaml-services/x-key-directive.md), which serves as the unique key when values are retrieved from the <xref:System.Windows.ResourceDictionary>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.Application.Resources" />
      </Docs>
    </Member>
    <MemberGroup MemberName="SetBinding">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-1171">Присоединяет привязку к этому элементу для указанного свойства зависимостей.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1171">Attaches a binding to this element for the specified dependency property.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetBinding">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingExpression SetBinding (System.Windows.DependencyProperty dp, string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Data.BindingExpression SetBinding(class System.Windows.DependencyProperty dp, string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetBinding (dp As DependencyProperty, path As String) As BindingExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Data::BindingExpression ^ SetBinding(System::Windows::DependencyProperty ^ dp, System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.SetBinding : System.Windows.DependencyProperty * string -&gt; System.Windows.Data.BindingExpression" Usage="frameworkElement.SetBinding (dp, path)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="26d05-1172">Идентифицирует свойство назначения, к которому следует установить привязку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1172">Identifies the destination property where the binding should be established.</span>
          </span>
        </param>
        <param name="path">
          <span data-ttu-id="26d05-1173">Имя исходного свойства или путь к свойству, используемому для привязки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1173">The source property name or the path to the property used for the binding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26d05-1174">Прикрепляет привязку к данному элементу на основе указанного имени исходного свойства в виде классификационного пути к источнику данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1174">Attaches a binding to this element, based on the provided source property name as a path qualification to the data source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="26d05-1175">Фиксирует состояния привязки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1175">Records the conditions of the binding.</span>
          </span>
          <span data-ttu-id="26d05-1176">Это возвращаемое значение можно использовать для проверки ошибок.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1176">This return value can be useful for error checking.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1177">Этот метод — это удобный метод для вызова <xref:System.Windows.Data.BindingOperations.SetBinding%2A?displayProperty=nameWithType>, который передает текущий экземпляр как <xref:System.Windows.DependencyObject>и создает новый <xref:System.Windows.Data.Binding> на основе предоставленной `path` параметра.</span><span class="sxs-lookup"><span data-stu-id="26d05-1177">This method is a convenience method for calling <xref:System.Windows.Data.BindingOperations.SetBinding%2A?displayProperty=nameWithType>, which passes the current instance as the <xref:System.Windows.DependencyObject>, and creates a new <xref:System.Windows.Data.Binding> based on the provided `path` parameter.</span></span> <span data-ttu-id="26d05-1178">Эта подпись является более удобным, если устанавливается простой привязки по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="26d05-1178">This signature is more convenient if you are establishing a simple default binding.</span></span> <span data-ttu-id="26d05-1179">Если вам нужно указать любые свойства привязки для условия не по умолчанию, или хотите использовать <xref:System.Windows.Data.MultiBinding> или <xref:System.Windows.Data.PriorityBinding>, следует использовать <xref:System.Windows.FrameworkElement.SetBinding%28System.Windows.DependencyProperty%2CSystem.Windows.Data.BindingBase%29> подписи.</span><span class="sxs-lookup"><span data-stu-id="26d05-1179">If you need to specify any binding properties to non-default conditions, or want to use a <xref:System.Windows.Data.MultiBinding> or <xref:System.Windows.Data.PriorityBinding>,you should use the <xref:System.Windows.FrameworkElement.SetBinding%28System.Windows.DependencyProperty%2CSystem.Windows.Data.BindingBase%29> signature.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26d05-1180">Следующий пример задает привязку, по определенному пути.</span><span class="sxs-lookup"><span data-stu-id="26d05-1180">The following example sets a binding using a specific path.</span></span>  
  
 [!code-csharp[BaseElementsSmorgasbord#SetBindingPath](~/samples/snippets/csharp/VS_Snippets_Wpf/BaseElementsSmorgasbord/CSharp/Page1.xaml.cs#setbindingpath)]
 [!code-vb[BaseElementsSmorgasbord#SetBindingPath](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BaseElementsSmorgasbord/visualbasic/page1.xaml.vb#setbindingpath)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBinding">
      <MemberSignature Language="C#" Value="public System.Windows.Data.BindingExpressionBase SetBinding (System.Windows.DependencyProperty dp, System.Windows.Data.BindingBase binding);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Data.BindingExpressionBase SetBinding(class System.Windows.DependencyProperty dp, class System.Windows.Data.BindingBase binding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)" />
      <MemberSignature Language="VB.NET" Value="Public Function SetBinding (dp As DependencyProperty, binding As BindingBase) As BindingExpressionBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Data::BindingExpressionBase ^ SetBinding(System::Windows::DependencyProperty ^ dp, System::Windows::Data::BindingBase ^ binding);" />
      <MemberSignature Language="F#" Value="member this.SetBinding : System.Windows.DependencyProperty * System.Windows.Data.BindingBase -&gt; System.Windows.Data.BindingExpressionBase" Usage="frameworkElement.SetBinding (dp, binding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Data.BindingExpressionBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="binding" Type="System.Windows.Data.BindingBase" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="26d05-1181">Определяет свойство, которому следует установить привязку.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1181">Identifies the property where the binding should be established.</span>
          </span>
        </param>
        <param name="binding">
          <span data-ttu-id="26d05-1182">Представляет подробные сведения о привязки данных.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1182">Represents the specifics of the data binding.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26d05-1183">Прикрепляет привязку к данному элементу на основе предоставленной привязки объекта.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1183">Attaches a binding to this element, based on the provided binding object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="26d05-1184">Фиксирует состояния привязки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1184">Records the conditions of the binding.</span>
          </span>
          <span data-ttu-id="26d05-1185">Это возвращаемое значение можно использовать для проверки ошибок.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1185">This return value can be useful for error checking.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1186">Этот метод — это удобный метод для вызова <xref:System.Windows.Data.BindingOperations.SetBinding%2A?displayProperty=nameWithType>, который передает текущий экземпляр как <xref:System.Windows.DependencyObject>.</span><span class="sxs-lookup"><span data-stu-id="26d05-1186">This method is a convenience method for calling <xref:System.Windows.Data.BindingOperations.SetBinding%2A?displayProperty=nameWithType>, which passes the current instance as the <xref:System.Windows.DependencyObject>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetFlowDirection">
      <MemberSignature Language="C#" Value="public static void SetFlowDirection (System.Windows.DependencyObject element, System.Windows.FlowDirection value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetFlowDirection(class System.Windows.DependencyObject element, valuetype System.Windows.FlowDirection value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.SetFlowDirection(System.Windows.DependencyObject,System.Windows.FlowDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub SetFlowDirection (element As DependencyObject, value As FlowDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetFlowDirection(System::Windows::DependencyObject ^ element, System::Windows::FlowDirection value);" />
      <MemberSignature Language="F#" Value="static member SetFlowDirection : System.Windows.DependencyObject * System.Windows.FlowDirection -&gt; unit" Usage="System.Windows.FrameworkElement.SetFlowDirection (element, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.FlowDirection" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="26d05-1187">Элемент, указывающий направление потока.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1187">The element that specifies a flow direction.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="26d05-1188">Значение перечисления, указывающее направление.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1188">A value of the enumeration, specifying the direction.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26d05-1189">Задает значение присоединенного свойства <see cref="P:System.Windows.FrameworkElement.FlowDirection" /> указанного элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1189">Sets the value of the <see cref="P:System.Windows.FrameworkElement.FlowDirection" /> attached property for the provided element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1190">Этот метод поддерживает синтаксис присоединенное свойство <xref:System.Windows.FrameworkElement.FlowDirection%2A> свойство, таким образом позволяя дочерних элементов заданного <xref:System.Windows.FrameworkElement> для указания направления потока для размещения в родительском элементе.</span><span class="sxs-lookup"><span data-stu-id="26d05-1190">This method supports attached property syntax for the <xref:System.Windows.FrameworkElement.FlowDirection%2A> property, therefore allowing child elements of a provided <xref:System.Windows.FrameworkElement> to specify flow direction for the arrangement within their parent element.</span></span> <span data-ttu-id="26d05-1191">Для задания значения в текущем <xref:System.Windows.FrameworkElement>, использовать прямые [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] доступа <xref:System.Windows.FrameworkElement.FlowDirection%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-1191">To set the value on the current <xref:System.Windows.FrameworkElement>, use the direct [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] accessor <xref:System.Windows.FrameworkElement.FlowDirection%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkElement.FlowDirection" />
      </Docs>
    </Member>
    <Member MemberName="SetResourceReference">
      <MemberSignature Language="C#" Value="public void SetResourceReference (System.Windows.DependencyProperty dp, object name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetResourceReference(class System.Windows.DependencyProperty dp, object name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.SetResourceReference(System.Windows.DependencyProperty,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetResourceReference (dp As DependencyProperty, name As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetResourceReference(System::Windows::DependencyProperty ^ dp, System::Object ^ name);" />
      <MemberSignature Language="F#" Value="member this.SetResourceReference : System.Windows.DependencyProperty * obj -&gt; unit" Usage="frameworkElement.SetResourceReference (dp, name)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dp" Type="System.Windows.DependencyProperty" />
        <Parameter Name="name" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dp">
          <span data-ttu-id="26d05-1192">Свойство, к которому привязан ресурс.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1192">The property to which the resource is bound.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="26d05-1193">Имя ресурса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1193">The name of the resource.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26d05-1194">Выполняет поиск ресурса по указанному имени и устанавливает ссылку на этот ресурс для указанного свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1194">Searches for a resource with the specified name and sets up a resource reference to it for the specified property.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1195">Ссылка на ресурс похоже на использование [расширение разметки DynamicResource](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md) в разметке.</span><span class="sxs-lookup"><span data-stu-id="26d05-1195">A resource reference is similar to the use of a [DynamicResource Markup Extension](~/docs/framework/wpf/advanced/dynamicresource-markup-extension.md) in markup.</span></span> <span data-ttu-id="26d05-1196">Ссылка на ресурс создает внутреннее выражение, содержащий значение заданного свойства на основе отложенного выполнения.</span><span class="sxs-lookup"><span data-stu-id="26d05-1196">The resource reference creates an internal expression that supplies the value of the specified property on a run-time deferred basis.</span></span> <span data-ttu-id="26d05-1197">Выражение будет повторно вычисляться каждый раз, когда словарь ресурсов указывает измененного значения через внутренние события, или при каждом изменении родителя текущего элемента (родителя изменяется путь для поиска словаря).</span><span class="sxs-lookup"><span data-stu-id="26d05-1197">The expression will be re-evaluated whenever the resource dictionary indicates a changed value through internal events, or whenever the current element is reparented (a parent change would change the dictionary lookup path).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.FindResource(System.Object)" />
        <altmember cref="P:System.Windows.Application.Resources" />
        <altmember cref="P:System.Windows.FrameworkElement.Resources" />
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeResources">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeResources ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeResources() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.ShouldSerializeResources" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeResources () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeResources();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeResources : unit -&gt; bool" Usage="frameworkElement.ShouldSerializeResources " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="26d05-1198">Возвращает логическое значение, указывающее, следует ли процессам сериализации сериализировать содержимое свойства <see cref="P:System.Windows.FrameworkElement.Resources" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1198">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.FrameworkElement.Resources" /> property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="26d05-1199">Значение <see langword="true" />, если значение свойства <see cref="P:System.Windows.FrameworkElement.Resources" /> подлежит сериализации, в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1199">
              <see langword="true" /> if the <see cref="P:System.Windows.FrameworkElement.Resources" /> property value should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1200">Эта команда возвращает `true` до тех пор, пока есть хотя бы один ресурс с ключом в локальной <xref:System.Windows.FrameworkElement.Resources%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-1200">This will return `true` as long as there is at least one keyed resource in the local <xref:System.Windows.FrameworkElement.Resources%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeStyle">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.ShouldSerializeStyle" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeStyle () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeStyle();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeStyle : unit -&gt; bool" Usage="frameworkElement.ShouldSerializeStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="26d05-1201">Возвращает логическое значение, указывающее, следует ли процессам сериализации сериализировать содержимое свойства <see cref="P:System.Windows.FrameworkElement.Style" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1201">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.FrameworkElement.Style" /> property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="26d05-1202">Значение <see langword="true" />, если значение свойства <see cref="P:System.Windows.FrameworkElement.Style" /> подлежит сериализации, в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1202">
              <see langword="true" /> if the <see cref="P:System.Windows.FrameworkElement.Style" /> property value should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1203">Эта команда возвращает `true` Если <xref:System.Windows.Style> устанавливается локально.</span><span class="sxs-lookup"><span data-stu-id="26d05-1203">This will return `true` if the <xref:System.Windows.Style> is locally set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeTriggers">
      <MemberSignature Language="C#" Value="public bool ShouldSerializeTriggers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool ShouldSerializeTriggers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.ShouldSerializeTriggers" />
      <MemberSignature Language="VB.NET" Value="Public Function ShouldSerializeTriggers () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool ShouldSerializeTriggers();" />
      <MemberSignature Language="F#" Value="member this.ShouldSerializeTriggers : unit -&gt; bool" Usage="frameworkElement.ShouldSerializeTriggers " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="26d05-1204">Возвращает логическое значение, указывающее, следует ли процессам сериализации сериализировать содержимое свойства <see cref="P:System.Windows.FrameworkElement.Triggers" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1204">Returns whether serialization processes should serialize the contents of the <see cref="P:System.Windows.FrameworkElement.Triggers" /> property.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="26d05-1205">Значение <see langword="true" />, если значение свойства <see cref="P:System.Windows.FrameworkElement.Triggers" /> подлежит сериализации, в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1205">
              <see langword="true" /> if the <see cref="P:System.Windows.FrameworkElement.Triggers" /> property value should be serialized; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1206">Этот метод возвращает `true` Если <xref:System.Windows.FrameworkElement.Triggers%2A> свойства устанавливается локально.</span><span class="sxs-lookup"><span data-stu-id="26d05-1206">This method returns `true` if the <xref:System.Windows.FrameworkElement.Triggers%2A> property is locally set.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SizeChanged">
      <MemberSignature Language="C#" Value="public event System.Windows.SizeChangedEventHandler SizeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.SizeChangedEventHandler SizeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkElement.SizeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SizeChanged As SizeChangedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::SizeChangedEventHandler ^ SizeChanged;" />
      <MemberSignature Language="F#" Value="member this.SizeChanged : System.Windows.SizeChangedEventHandler " Usage="member this.SizeChanged : System.Windows.SizeChangedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.SizeChangedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-1207">Происходит при изменении значения любого из свойств <see cref="P:System.Windows.FrameworkElement.ActualHeight" /> или <see cref="P:System.Windows.FrameworkElement.ActualWidth" /> данного элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1207">Occurs when either the <see cref="P:System.Windows.FrameworkElement.ActualHeight" /> or the <see cref="P:System.Windows.FrameworkElement.ActualWidth" /> properties change value on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1208">События с прямой маршрутизацией не выполняйте маршрут, они обрабатываются только внутри элемента, на котором они вызываются.</span><span class="sxs-lookup"><span data-stu-id="26d05-1208">Direct routed events do not follow a route, they are only handled within the same element on which they are raised.</span></span> <span data-ttu-id="26d05-1209">Прямые перенаправленные события поддерживают другие поведения перенаправленного события: они поддерживают коллекцию доступных обработчиков и могут использоваться в качестве <xref:System.Windows.EventTrigger> в стиле.</span><span class="sxs-lookup"><span data-stu-id="26d05-1209">Direct routed events do support other routed event behavior: they support an accessible handlers collection, and can be used as an <xref:System.Windows.EventTrigger> in a style.</span></span>  
  
 <span data-ttu-id="26d05-1210">Система макета считывает свойства <xref:System.Windows.SizeChangedEventArgs> класс аргументов этого события, чтобы определить ли сообщенные изменения размера должно считаться важным.</span><span class="sxs-lookup"><span data-stu-id="26d05-1210">The layout system reads properties within the <xref:System.Windows.SizeChangedEventArgs> argument class of this event, to  determine whether the reported size changes should be considered significant.</span></span> <span data-ttu-id="26d05-1211">Это позволяет системе макета или реализации макет элемента управления во избежание принудительного обновления структуры из-за визуально неощутимо различий между значениями старого и нового высоты или ширины.</span><span class="sxs-lookup"><span data-stu-id="26d05-1211">This allows the layout system or your control-specific layout implementations to avoid forcing a layout change due to visually imperceptible differences between old and new height or width values.</span></span> <span data-ttu-id="26d05-1212">Из-за округления или аналогичного результата вычисления типов данных с плавающей запятой может быть неощутимо различия.</span><span class="sxs-lookup"><span data-stu-id="26d05-1212">The imperceptible differences might be due to rounding or same-result calculations of a floating-point data types.</span></span>  
  
<a name="routedEventInfo_SizeChanged"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="26d05-1213">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="26d05-1213">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="26d05-1214">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="26d05-1214">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.SizeChangedEvent>|  
|<span data-ttu-id="26d05-1215">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="26d05-1215">Routing strategy</span></span>|<span data-ttu-id="26d05-1216">Direct</span><span class="sxs-lookup"><span data-stu-id="26d05-1216">Direct</span></span>|  
|<span data-ttu-id="26d05-1217">делегат</span><span class="sxs-lookup"><span data-stu-id="26d05-1217">Delegate</span></span>|<xref:System.Windows.SizeChangedEventHandler>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkElement.Height" />
        <altmember cref="P:System.Windows.FrameworkElement.Width" />
      </Docs>
    </Member>
    <Member MemberName="SizeChangedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent SizeChangedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent SizeChangedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.SizeChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SizeChangedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ SizeChangedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable SizeChangedEvent : System.Windows.RoutedEvent" Usage="System.Windows.FrameworkElement.SizeChangedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-1218">Идентифицирует направленное событие <see cref="E:System.Windows.FrameworkElement.SizeChanged" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1218">Identifies the <see cref="E:System.Windows.FrameworkElement.SizeChanged" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1219">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="26d05-1219">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="26d05-1220">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="26d05-1220">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="26d05-1221">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="26d05-1221">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="26d05-1222">Дополнительные сведения о регистрации маршрутизированных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-1222">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="26d05-1223">Дополнительные сведения об использовании идентификаторов маршрутизируемых событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-1223">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SourceUpdated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; SourceUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; SourceUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkElement.SourceUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SourceUpdated As EventHandler(Of DataTransferEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ SourceUpdated;" />
      <MemberSignature Language="F#" Value="member this.SourceUpdated : EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; " Usage="member this.SourceUpdated : System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-1224">Происходит при изменении исходного значения любого существующего свойства, привязанного к данному элементу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1224">Occurs when the source value changes for any existing property binding on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1225">Это событие создает псевдоним для <xref:System.Windows.Data.Binding.SourceUpdated> событие, вызванное каким-либо <xref:System.Windows.Data.Binding> связанных с этим элементом.</span><span class="sxs-lookup"><span data-stu-id="26d05-1225">This event creates an alias for the <xref:System.Windows.Data.Binding.SourceUpdated> event that is raised by any <xref:System.Windows.Data.Binding> associated with this element.</span></span>  
  
<a name="xamlAttributeUsage_SourceUpdated"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="26d05-1226">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="26d05-1226">XAML Attribute Usage</span></span>  
  
```  
<object SourceUpdated="eventHandler"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Data.Binding.SourceUpdated" />
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public System.Windows.Style Style { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Style Style" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.Style" />
      <MemberSignature Language="VB.NET" Value="Public Property Style As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Style ^ Style { System::Windows::Style ^ get(); void set(System::Windows::Style ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Style : System.Windows.Style with get, set" Usage="System.Windows.FrameworkElement.Style" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-1227">Получает или задает стиль, который должен использоваться этим элементом при его отрисовке.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1227">Gets or sets the style used by this element when it is rendered.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26d05-1228">Примененный стиль не по умолчанию для элемента, если присутствует.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1228">The applied, nondefault style for the element, if present.</span>
          </span>
          <span data-ttu-id="26d05-1229">В противном случае — значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1229">Otherwise, <see langword="null" />.</span>
          </span>
          <span data-ttu-id="26d05-1230">Значение по умолчанию для созданного по умолчанию объекта <see cref="T:System.Windows.FrameworkElement" /> — <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1230">The default for a default-constructed <see cref="T:System.Windows.FrameworkElement" /> is <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1231">Для элементов управления текущий стиль часто предоставляемые стиль по умолчанию из темы элементов управления или из стилей обычно применяется к элементам управления этого типа ресурсами на уровне страницы или приложения (неявный стиль).</span><span class="sxs-lookup"><span data-stu-id="26d05-1231">For controls, the current style is often provided by a default style from control theming, or from styles generally applied to controls of that type by resources at page or application level (an implicit style).</span></span> <span data-ttu-id="26d05-1232">Это свойство не по умолчанию устанавливает и не возвращает стили (темы), но возвращает неявный стиль или явный стиль, действующий на элемент.</span><span class="sxs-lookup"><span data-stu-id="26d05-1232">This property does not set or return default (theme) styles, but it does return either an implicit style or an explicit style that is acting on the element.</span></span> <span data-ttu-id="26d05-1233">В случае явного или неявного стили неважно ли стиль задается как ресурс или определенные локально.</span><span class="sxs-lookup"><span data-stu-id="26d05-1233">In the case of implicit or explicit styles, it does not matter whether the style is specified as a resource or defined locally.</span></span>  
  
 <span data-ttu-id="26d05-1234">Задание стилей имеет некоторые ограничения.</span><span class="sxs-lookup"><span data-stu-id="26d05-1234">Setting the styles has some restrictions.</span></span> <span data-ttu-id="26d05-1235">Вы можете сбросить всего <xref:System.Windows.FrameworkElement.Style%2A> свойство в новый <xref:System.Windows.Style> в любое время, что вынудит рекомпозиции макета.</span><span class="sxs-lookup"><span data-stu-id="26d05-1235">You can reset the entire <xref:System.Windows.FrameworkElement.Style%2A> property to a new <xref:System.Windows.Style> at any time, which will force a layout recomposition.</span></span> <span data-ttu-id="26d05-1236">Тем не менее, как можно быстрее, так как этот стиль размещается используется загруженным элементом <xref:System.Windows.Style> должно считаться запечатанный.</span><span class="sxs-lookup"><span data-stu-id="26d05-1236">However, as soon as that style is placed in use by a loaded element, the <xref:System.Windows.Style> should be considered sealed.</span></span> <span data-ttu-id="26d05-1237">Попытка внести изменение любого отдельного свойства используемого стиля (такие как любые действия в коллекцию <xref:System.Windows.Style.Setters%2A>) приводит к возникновению исключения, исключение.</span><span class="sxs-lookup"><span data-stu-id="26d05-1237">Attempting to make a change to any individual property of an in-use style (such as anything within the collection of <xref:System.Windows.Style.Setters%2A>) causes an exception to be thrown.</span></span> <span data-ttu-id="26d05-1238">Стиль, определенный в разметке считается используется как только он загружается из словаря ресурсов (для ресурсов) или загрузке страницы, в которой оно содержится в (для встроенных стилей).</span><span class="sxs-lookup"><span data-stu-id="26d05-1238">A style that is defined in markup is considered to be in use as soon as it is loaded from a resource dictionary (for resources), or the page it is contained within is loaded (for inline styles).</span></span>  
  
 <span data-ttu-id="26d05-1239"><xref:System.Windows.FrameworkElement.Style%2A> является свойством зависимостей с помощью специальных приоритет.</span><span class="sxs-lookup"><span data-stu-id="26d05-1239"><xref:System.Windows.FrameworkElement.Style%2A> is a dependency property with special precedence.</span></span> <span data-ttu-id="26d05-1240">Локально заданное стиль обычно действует с наивысшим приоритетом в системе свойств.</span><span class="sxs-lookup"><span data-stu-id="26d05-1240">The locally set style generally operates at the highest precedence in the property system.</span></span> <span data-ttu-id="26d05-1241">Если <xref:System.Windows.FrameworkElement.Style%2A> имеет значение null на этом этапе во время загрузки, система свойств ищет неявных стилей в локальном или приложение ресурсов этого типа.</span><span class="sxs-lookup"><span data-stu-id="26d05-1241">If the <xref:System.Windows.FrameworkElement.Style%2A> is null at this point, during loading the property system checks for implicit styles in local or application resources that specify that type.</span></span> <span data-ttu-id="26d05-1242">Если стиль равен null после выполнения этого шага, то действующий стиль для целей представления обычно поступает из стиля по умолчанию (тема), но стиль по умолчанию не возвращается в <xref:System.Windows.FrameworkElement.Style%2A> значение свойства.</span><span class="sxs-lookup"><span data-stu-id="26d05-1242">If the style is still null after this step, then the acting style for presentation purposes generally comes from the default (theme) style, but the default style is not returned in the <xref:System.Windows.FrameworkElement.Style%2A> property value.</span></span> <span data-ttu-id="26d05-1243">См. в разделе [приоритет значений свойств зависимостей](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md) или [Стилизация и использование шаблонов](~/docs/framework/wpf/controls/styling-and-templating.md).</span><span class="sxs-lookup"><span data-stu-id="26d05-1243">See [Dependency Property Value Precedence](~/docs/framework/wpf/advanced/dependency-property-value-precedence.md) or [Styling and Templating](~/docs/framework/wpf/controls/styling-and-templating.md).</span></span>  
  
<a name="xamlAttributeUsage_Style"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="26d05-1244">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="26d05-1244">XAML Attribute Usage</span></span>  
  
```  
<object Style="{resourceExtension styleResourceKey}"/>  
```  
  
<a name="xamlPropertyElementUsage_Style"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="26d05-1245">Использование элемента свойства XAML</span><span class="sxs-lookup"><span data-stu-id="26d05-1245">XAML Property Element Usage</span></span>  
  
<a name="xamlValues_Style"></a>   
## <a name="xaml-values"></a><span data-ttu-id="26d05-1246">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="26d05-1246">XAML Values</span></span>  
 <span data-ttu-id="26d05-1247">*ResourceExtension*</span><span class="sxs-lookup"><span data-stu-id="26d05-1247">*resourceExtension*</span></span>  
 <span data-ttu-id="26d05-1248">Одно из следующих:, или.</span><span class="sxs-lookup"><span data-stu-id="26d05-1248">One of the following: , or .</span></span> <span data-ttu-id="26d05-1249">См. в разделе [ресурсы XAML](~/docs/framework/wpf/advanced/xaml-resources.md).</span><span class="sxs-lookup"><span data-stu-id="26d05-1249">See [XAML Resources](~/docs/framework/wpf/advanced/xaml-resources.md).</span></span>  
  
 <span data-ttu-id="26d05-1250">*styleResourceKey*</span><span class="sxs-lookup"><span data-stu-id="26d05-1250">*styleResourceKey*</span></span>  
 <span data-ttu-id="26d05-1251">Ключ, который идентифицирует запрашиваемый стиль.</span><span class="sxs-lookup"><span data-stu-id="26d05-1251">The key that identifies the style being requested.</span></span> <span data-ttu-id="26d05-1252">Ключ ссылается на существующий ресурс в <xref:System.Windows.ResourceDictionary>.</span><span class="sxs-lookup"><span data-stu-id="26d05-1252">The key refers to an existing resource in a <xref:System.Windows.ResourceDictionary>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="26d05-1253">Синтаксис элемента свойства технически возможно, но не рекомендуется для большинства сценариев стилей.</span><span class="sxs-lookup"><span data-stu-id="26d05-1253">Property element syntax is technically possible, but not recommended for most style scenarios.</span></span> <span data-ttu-id="26d05-1254">См. в разделе [встроенные стили и шаблоны](~/docs/framework/wpf/advanced/inline-styles-and-templates.md).</span><span class="sxs-lookup"><span data-stu-id="26d05-1254">See [Inline Styles and Templates](~/docs/framework/wpf/advanced/inline-styles-and-templates.md).</span></span> <span data-ttu-id="26d05-1255">Ссылка на привязку с помощью или <xref:System.Windows.Data.Binding> — также, возможно, но встречается редко.</span><span class="sxs-lookup"><span data-stu-id="26d05-1255">A binding reference using  or <xref:System.Windows.Data.Binding> is also possible, but uncommon.</span></span>  
  
<a name="dependencyPropertyInfo_Style"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="26d05-1256">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="26d05-1256">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="26d05-1257">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="26d05-1257">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.StyleProperty>|  
|<span data-ttu-id="26d05-1258">Значение свойства метаданных `true`</span><span class="sxs-lookup"><span data-stu-id="26d05-1258">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
   
  
## Examples  
 <span data-ttu-id="26d05-1259">В следующем примере определяется стиль в словаре ресурсов.</span><span class="sxs-lookup"><span data-stu-id="26d05-1259">The following example defines a style in a resource dictionary.</span></span>  
  
 [!code-xaml[FEResource#StyleProperty](~/samples/snippets/csharp/VS_Snippets_Wpf/FEResource/CS/default.xaml#styleproperty)]  
[!code-xaml[FEResource#StyleProperty2](~/samples/snippets/csharp/VS_Snippets_Wpf/FEResource/CS/default.xaml#styleproperty2)]  
[!code-xaml[FEResource#StyleProperty3](~/samples/snippets/csharp/VS_Snippets_Wpf/FEResource/CS/default.xaml#styleproperty3)]  
[!code-xaml[FEResource#StyleProperty4](~/samples/snippets/csharp/VS_Snippets_Wpf/FEResource/CS/default.xaml#styleproperty4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StyleProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty StyleProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty StyleProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.StyleProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly StyleProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ StyleProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable StyleProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.StyleProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-1260">Идентифицирует свойство зависимостей <see cref="P:System.Windows.FrameworkElement.Style" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1260">Identifies the <see cref="P:System.Windows.FrameworkElement.Style" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable">
      <MemberSignature Language="C#" Value="bool IQueryAmbient.IsAmbientPropertyAvailable (string propertyName);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(string propertyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function IsAmbientPropertyAvailable (propertyName As String) As Boolean Implements IQueryAmbient.IsAmbientPropertyAvailable" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System::String ^ propertyName) = System::Windows::Markup::IQueryAmbient::IsAmbientPropertyAvailable;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="propertyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="propertyName">
          <span data-ttu-id="26d05-1261">Имя запрошенного внешнего свойства.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1261">The name of the requested ambient property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26d05-1262">Описание этого элемента содержится в методе <see cref="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1262">For a description of this member, see the <see cref="M:System.Windows.Markup.IQueryAmbient.IsAmbientPropertyAvailable(System.String)" /> method.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="26d05-1263">Значение <see langword="true" />, если свойство с именем в параметре <paramref name="propertyName" /> доступно; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1263">
              <see langword="true" /> if <paramref name="propertyName" /> is available; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1264">Этот член представляет собой явную реализацию члена интерфейса.</span><span class="sxs-lookup"><span data-stu-id="26d05-1264">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="26d05-1265">Он может использоваться, только если экземпляр <xref:System.Windows.FrameworkElement> приведен к типу интерфейса <xref:System.Windows.Markup.IQueryAmbient>.</span><span class="sxs-lookup"><span data-stu-id="26d05-1265">It can be used only when the <xref:System.Windows.FrameworkElement> instance is cast to an <xref:System.Windows.Markup.IQueryAmbient> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Tag">
      <MemberSignature Language="C#" Value="public object Tag { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Tag" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.Tag" />
      <MemberSignature Language="VB.NET" Value="Public Property Tag As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Tag { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Tag : obj with get, set" Usage="System.Windows.FrameworkElement.Tag" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-1266">Получение или установка произвольного значения объекта, которое может использоваться для хранения особых сведений об этом элементе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1266">Gets or sets an arbitrary object value that can be used to store custom information about this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26d05-1267">Целевое значение.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1267">The intended value.</span>
          </span>
          <span data-ttu-id="26d05-1268">Это свойство не имеет значения по умолчанию.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1268">This property has no default value.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1269">Это свойство является аналогом свойства тега в других моделях программирования для Microsoft, таких как Visual Basic для приложений или Windows Forms.</span><span class="sxs-lookup"><span data-stu-id="26d05-1269">This property is analogous to Tag properties in other Microsoft programming models, such as Visual Basic for Applications or Windows Forms.</span></span> <span data-ttu-id="26d05-1270"><xref:System.Windows.FrameworkElement.Tag%2A> предназначена для предоставления существующего свойства расположению, где можно хранить некоторые основные пользовательские сведения о любом <xref:System.Windows.FrameworkElement> без необходимости в подкласс элемента.</span><span class="sxs-lookup"><span data-stu-id="26d05-1270"><xref:System.Windows.FrameworkElement.Tag%2A> is intended to provide a pre-existing property location where you can store some basic custom information about any <xref:System.Windows.FrameworkElement> without requiring you to subclass an element.</span></span>  
  
 <span data-ttu-id="26d05-1271">Так как это свойство принимает объект, необходимо использовать использование элемента свойства, чтобы задать <xref:System.Windows.FrameworkElement.Tag%2A> свойства в XAML только на объект с известным и встроенный тип преобразователя, например строку.</span><span class="sxs-lookup"><span data-stu-id="26d05-1271">Because this property takes an object, you need to use the property element usage in order to set the <xref:System.Windows.FrameworkElement.Tag%2A> property in XAML to anything other than an object with a known and built-in type converter, such as a string.</span></span> <span data-ttu-id="26d05-1272">Объекты, используемые таким образом, обычно не входят в стандартные пространства имен WPF и поэтому может потребоваться сопоставление пространства имен с внешним пространством имен для новых элементов XAML.</span><span class="sxs-lookup"><span data-stu-id="26d05-1272">Objects used in this manner are typically not within the standard WPF namespaces and therefore may require namespace mapping to the external namespace in order to be introduced as XAML elements.</span></span> <span data-ttu-id="26d05-1273">Дополнительные сведения см. в разделе [пространства имен XAML и сопоставление пространств имен для WPF XAML](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md) и [XAML и пользовательские классы для WPF](~/docs/framework/wpf/advanced/xaml-and-custom-classes-for-wpf.md).</span><span class="sxs-lookup"><span data-stu-id="26d05-1273">For details, see [XAML Namespaces and Namespace Mapping for WPF XAML](~/docs/framework/wpf/advanced/xaml-namespaces-and-namespace-mapping-for-wpf-xaml.md) and [XAML and Custom Classes for WPF](~/docs/framework/wpf/advanced/xaml-and-custom-classes-for-wpf.md).</span></span>  
  
<a name="dependencyPropertyInfo_Tag"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="26d05-1274">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="26d05-1274">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="26d05-1275">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="26d05-1275">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.TagProperty>|  
|<span data-ttu-id="26d05-1276">Значение свойства метаданных `true`</span><span class="sxs-lookup"><span data-stu-id="26d05-1276">Metadata properties set to `true`</span></span>|<span data-ttu-id="26d05-1277">Нет</span><span class="sxs-lookup"><span data-stu-id="26d05-1277">None</span></span>|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Windows.FrameworkElement.Name" />
      </Docs>
    </Member>
    <Member MemberName="TagProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty TagProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty TagProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.TagProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly TagProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ TagProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable TagProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.TagProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-1278">Идентифицирует свойство зависимостей <see cref="P:System.Windows.FrameworkElement.Tag" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1278">Identifies the <see cref="P:System.Windows.FrameworkElement.Tag" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetUpdated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; TargetUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Windows.Data.DataTransferEventArgs&gt; TargetUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkElement.TargetUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TargetUpdated As EventHandler(Of DataTransferEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Windows::Data::DataTransferEventArgs ^&gt; ^ TargetUpdated;" />
      <MemberSignature Language="F#" Value="member this.TargetUpdated : EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; " Usage="member this.TargetUpdated : System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Data.DataTransferEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-1279">Происходит при изменении целевого значения для любого свойства, привязанного к этому элементу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1279">Occurs when the target value changes for any property binding on this element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1280">Это событие создает псевдоним для <xref:System.Windows.Data.Binding.TargetUpdated> событие, вызванное каким-либо <xref:System.Windows.Data.Binding> связанных с этим элементом.</span><span class="sxs-lookup"><span data-stu-id="26d05-1280">This event creates an alias for the <xref:System.Windows.Data.Binding.TargetUpdated> event that is raised by any <xref:System.Windows.Data.Binding> associated with this element.</span></span> <span data-ttu-id="26d05-1281">Обычно это означает, что рассматриваемая представляет собой двустороннюю привязку и что связанного свойства зависимостей подтверждает, что предыдущее значение свойства стало недопустимым с точки зрения проверку или схеме кеширования, который поддерживает свойство или источник данных.</span><span class="sxs-lookup"><span data-stu-id="26d05-1281">This usually means that the binding in question is a two-way binding, and that the bound  dependency property affirms that the previous property value is now invalid according to any validation or caching scheme that the property or the data source support.</span></span>  
  
 <span data-ttu-id="26d05-1282">Используйте данные <xref:System.Windows.FrameworkElement.TargetUpdated> событие, чтобы определить специального свойства, которое сообщает, обновления целевого значения.</span><span class="sxs-lookup"><span data-stu-id="26d05-1282">Use the event data of the <xref:System.Windows.FrameworkElement.TargetUpdated> event to determine the specific property that is reporting the target value update.</span></span>  
  
<a name="xamlAttributeUsage_TargetUpdated"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="26d05-1283">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="26d05-1283">XAML Attribute Usage</span></span>  
  
```  
<object TargetUpdated="eventHandler"/>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.Data.Binding.TargetUpdated" />
      </Docs>
    </Member>
    <Member MemberName="TemplatedParent">
      <MemberSignature Language="C#" Value="public System.Windows.DependencyObject TemplatedParent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.DependencyObject TemplatedParent" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.TemplatedParent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TemplatedParent As DependencyObject" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::DependencyObject ^ TemplatedParent { System::Windows::DependencyObject ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TemplatedParent : System.Windows.DependencyObject" Usage="System.Windows.FrameworkElement.TemplatedParent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyObject</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-1284">Получает ссылку на родительский объект шаблона данного элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1284">Gets a reference to the template parent of this element.</span>
          </span>
          <span data-ttu-id="26d05-1285">Это свойство не актуально, если элемент не был создан с помощью шаблона.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1285">This property is not relevant if the element was not created through a template.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26d05-1286">Элемент, свойство <see cref="T:System.Windows.FrameworkTemplate" /> шаблона <see cref="P:System.Windows.FrameworkTemplate.VisualTree" />  которого вызвало создание данного элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1286">The element whose <see cref="T:System.Windows.FrameworkTemplate" /><see cref="P:System.Windows.FrameworkTemplate.VisualTree" /> caused this element to be created.</span>
          </span>
          <span data-ttu-id="26d05-1287">Это значение часто равно <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1287">This value is frequently <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1288"><xref:System.Windows.FrameworkElement.TemplatedParent%2A> часто `null` для объектов, которые создаются в разметке приложения или код.</span><span class="sxs-lookup"><span data-stu-id="26d05-1288"><xref:System.Windows.FrameworkElement.TemplatedParent%2A> is frequently `null` for objects that are created in your application markup or code.</span></span> <span data-ttu-id="26d05-1289">Это так, как создать эти объекты напрямую, не с помощью шаблона.</span><span class="sxs-lookup"><span data-stu-id="26d05-1289">This is because you create those objects directly, not via a template.</span></span> <span data-ttu-id="26d05-1290">Ссылки на полученные путем прохода логического дерева от корня или по типичное имя ссылки на объекты, не исходят из шаблона.</span><span class="sxs-lookup"><span data-stu-id="26d05-1290">Object references obtained by walking the logical tree from the root, or by typical name references, do not come from a template.</span></span>  
  
 <span data-ttu-id="26d05-1291">Ситуации, когда <xref:System.Windows.FrameworkElement.TemplatedParent%2A> может оказаться `null` включают операции, такие как проверка нажатия, обработка событий для определенных низкоуровневых событий ввода, прохода визуального дерева с <xref:System.Windows.Media.VisualTreeHelper>, или работа с перечислителями, могут возвращать элементы, поступившие на основе шаблонов.</span><span class="sxs-lookup"><span data-stu-id="26d05-1291">Cases where <xref:System.Windows.FrameworkElement.TemplatedParent%2A> might not be `null` include operations such as hit-testing, event handling for certain low-level input events, walking the visual tree with <xref:System.Windows.Media.VisualTreeHelper>, or working with enumerators, which might return elements that came from templates.</span></span> <span data-ttu-id="26d05-1292">Другой вариант — если специально вызывать <xref:System.Windows.FrameworkTemplate.FindName%2A> от существующего <xref:System.Windows.FrameworkTemplate> . они работают с возвращаемый объект.</span><span class="sxs-lookup"><span data-stu-id="26d05-1292">Another case is if you specifically call <xref:System.Windows.FrameworkTemplate.FindName%2A> against an existing <xref:System.Windows.FrameworkTemplate> and are work with the returned object.</span></span>  
  
 <span data-ttu-id="26d05-1293">Шаблоны являются фактически общих объектов, в которой содержимое шаблона создаются только один раз.</span><span class="sxs-lookup"><span data-stu-id="26d05-1293">Templates are actually shared objects, where the contents of the template are created only once.</span></span> <span data-ttu-id="26d05-1294">Таким образом Если получить ссылку на элемент, который поступил из шаблона, вы обнаружите, что заметно логическое дерево не удалось связаться с корневой страницы.</span><span class="sxs-lookup"><span data-stu-id="26d05-1294">Therefore, if you obtain an object reference to an element that came from a template, you may find that the apparent logical tree does not reach to the page root.</span></span> <span data-ttu-id="26d05-1295">Чтобы подключить такую ссылку шаблона для логического дерева страницы, вы должны получить <xref:System.Windows.FrameworkElement.TemplatedParent%2A> значение и продолжать переместиться в этом дереве элемент, при необходимости.</span><span class="sxs-lookup"><span data-stu-id="26d05-1295">In order to connect such a template reference to the page's logical tree, you should get the <xref:System.Windows.FrameworkElement.TemplatedParent%2A> value and continue to navigate that element tree as desired.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolTip">
      <MemberSignature Language="C#" Value="public object ToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object ToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.ToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property ToolTip As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ ToolTip { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTip : obj with get, set" Usage="System.Windows.FrameworkElement.ToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.Category("Appearance")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.ToolTip)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-1296">Получает или задает объект подсказки, отображаемый для данного элемента в [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1296">Gets or sets the tool-tip object that is displayed for this element in the [!INCLUDE[TLA#tla_ui](~/includes/tlasharptla-ui-md.md)].</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26d05-1297">Объект подсказки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1297">The tooltip object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1298">Если значение этого свойства имеет тип <xref:System.Windows.Controls.ToolTip>, то это значение является всплывающей подсказки, которые используются для [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span><span class="sxs-lookup"><span data-stu-id="26d05-1298">If the value of this property is of type <xref:System.Windows.Controls.ToolTip>, then that value is the tool-tip that will be used in the [!INCLUDE[TLA2#tla_ui](~/includes/tla2sharptla-ui-md.md)].</span></span>  <span data-ttu-id="26d05-1299">Если значение любого другого типа, то это значение будет использоваться в качестве *содержимого* для <xref:System.Windows.Controls.ToolTip> предоставленные (создан) системой.</span><span class="sxs-lookup"><span data-stu-id="26d05-1299">If the value is of any other type, then that value will be used as the *content* for a <xref:System.Windows.Controls.ToolTip> provided (constructed) by the system.</span></span> <span data-ttu-id="26d05-1300">Дополнительные сведения см. в разделе <xref:System.Windows.Controls.ToolTipService>.</span><span class="sxs-lookup"><span data-stu-id="26d05-1300">For more information, see <xref:System.Windows.Controls.ToolTipService>.</span></span> <span data-ttu-id="26d05-1301">Служебный класс предоставляет вложенные свойства, которые могут использоваться для дальнейшей настройки <xref:System.Windows.Controls.ToolTip>.</span><span class="sxs-lookup"><span data-stu-id="26d05-1301">The service class provides attached properties that can be used to further customize a <xref:System.Windows.Controls.ToolTip>.</span></span>  
  
<a name="xamlAttributeUsage_ToolTip"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="26d05-1302">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="26d05-1302">XAML Attribute Usage</span></span>  
  
```  
<object ToolTip="toolTipContent"/>  
```  
  
<a name="xamlPropertyElementUsage_ToolTip"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="26d05-1303">Использование элемента свойства XAML</span><span class="sxs-lookup"><span data-stu-id="26d05-1303">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.ToolTip>  
    <ToolTip .../>  
  </object.ToolTip>  
</object>  
- or -  
<object>  
  <object.ToolTip>  
    toolTipObjectContent  
  </object.ToolTip>  
</object>  
```  
  
<a name="xamlValues_ToolTip"></a>   
## <a name="xaml-values"></a><span data-ttu-id="26d05-1304">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="26d05-1304">XAML Values</span></span>  
 <span data-ttu-id="26d05-1305">*toolTipContent*</span><span class="sxs-lookup"><span data-stu-id="26d05-1305">*toolTipContent*</span></span>  
 <span data-ttu-id="26d05-1306">Строка, которая становится отображаемый текст для <xref:System.Windows.FrameworkElement.ToolTip%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-1306">A string that becomes the display text for the <xref:System.Windows.FrameworkElement.ToolTip%2A>.</span></span>  
  
 <span data-ttu-id="26d05-1307">*toolTipObjectContent*</span><span class="sxs-lookup"><span data-stu-id="26d05-1307">*toolTipObjectContent*</span></span>  
 <span data-ttu-id="26d05-1308">Некоторые объектом, указанным в форме элемента объекта, который должен использоваться как содержимое <xref:System.Windows.FrameworkElement> .</span><span class="sxs-lookup"><span data-stu-id="26d05-1308">Some object, provided in object element form, that should be used as the content for the <xref:System.Windows.FrameworkElement> .</span></span> <span data-ttu-id="26d05-1309">Обычно это было бы <xref:System.Windows.FrameworkElement> или другой элемент, который создает композиции макета для <xref:System.Windows.FrameworkElement.ToolTip%2A>, со временем, содержащий текстовое содержимое в композиции.</span><span class="sxs-lookup"><span data-stu-id="26d05-1309">Typically this would be a <xref:System.Windows.FrameworkElement> or some other element that creates layout compositing for the <xref:System.Windows.FrameworkElement.ToolTip%2A>, eventually containing text content within the compositing.</span></span> <span data-ttu-id="26d05-1310">При таком использовании <xref:System.Windows.Controls.ToolTip> создается элемент неявно из проанализированный [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]и *toolTipObjectContent* содержимое устанавливается в качестве его <xref:System.Windows.Controls.ContentControl.Content%2A?displayProperty=nameWithType> свойство.</span><span class="sxs-lookup"><span data-stu-id="26d05-1310">In this usage, the <xref:System.Windows.Controls.ToolTip> element is created implicitly from the parsed [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], and the *toolTipObjectContent* content is set as its <xref:System.Windows.Controls.ContentControl.Content%2A?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="26d05-1311"><`ToolTip` .../></span><span class="sxs-lookup"><span data-stu-id="26d05-1311"><`ToolTip` .../></span></span>  
 <span data-ttu-id="26d05-1312">См. раздел <xref:System.Windows.Controls.ToolTip>.</span><span class="sxs-lookup"><span data-stu-id="26d05-1312">See <xref:System.Windows.Controls.ToolTip>.</span></span>  
  
<a name="dependencyPropertyInfo_ToolTip"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="26d05-1313">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="26d05-1313">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="26d05-1314">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="26d05-1314">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.ToolTipProperty>|  
|<span data-ttu-id="26d05-1315">Значение свойства метаданных `true`</span><span class="sxs-lookup"><span data-stu-id="26d05-1315">Metadata properties set to `true`</span></span>|<span data-ttu-id="26d05-1316">Нет</span><span class="sxs-lookup"><span data-stu-id="26d05-1316">None</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="26d05-1317">В следующем примере создается <xref:System.Windows.Controls.ToolTip> в код, а затем устанавливает <xref:System.Windows.FrameworkElement.ToolTip%2A> свойство <xref:System.Windows.Controls.Primitives.StatusBar> элемента управления.</span><span class="sxs-lookup"><span data-stu-id="26d05-1317">The following example creates a <xref:System.Windows.Controls.ToolTip> in code and then sets the <xref:System.Windows.FrameworkElement.ToolTip%2A> property on a <xref:System.Windows.Controls.Primitives.StatusBar> control.</span></span>  
  
 [!code-csharp[StatusBar#MakeProgressBar](~/samples/snippets/csharp/VS_Snippets_Wpf/StatusBar/CSharp/Window1.xaml.cs#makeprogressbar)]
 [!code-vb[StatusBar#MakeProgressBar](~/samples/snippets/visualbasic/VS_Snippets_Wpf/StatusBar/visualbasic/window1.xaml.vb#makeprogressbar)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolTipClosing">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.ToolTipEventHandler ToolTipClosing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.ToolTipEventHandler ToolTipClosing" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkElement.ToolTipClosing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ToolTipClosing As ToolTipEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::ToolTipEventHandler ^ ToolTipClosing;" />
      <MemberSignature Language="F#" Value="member this.ToolTipClosing : System.Windows.Controls.ToolTipEventHandler " Usage="member this.ToolTipClosing : System.Windows.Controls.ToolTipEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ToolTipEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-1318">Происходит непосредственно перед закрытием какой-либо подсказки в элементе.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1318">Occurs just before any tooltip on the element is closed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1319">Пометка <xref:System.Windows.FrameworkElement.ToolTipClosing> событие как обработанное не отменяет закрытие подсказки.</span><span class="sxs-lookup"><span data-stu-id="26d05-1319">Marking the <xref:System.Windows.FrameworkElement.ToolTipClosing> event as handled does not cancel closing the tooltip.</span></span> <span data-ttu-id="26d05-1320">Если подсказка отображается, закрытие подсказки выполняется только в ответ на взаимодействие пользователя с помощью пользовательского интерфейса.</span><span class="sxs-lookup"><span data-stu-id="26d05-1320">Once the tooltip is displayed, closing the tooltip is done only in response to user interaction with the UI.</span></span>  
  
 <span data-ttu-id="26d05-1321">Это событие не может быть <xref:System.Windows.EventTrigger> в стиле.</span><span class="sxs-lookup"><span data-stu-id="26d05-1321">This event cannot be an <xref:System.Windows.EventTrigger> in a style.</span></span> <span data-ttu-id="26d05-1322">Это потому, что поле идентификатора данного события повторно использует реализацию из службы, не предоставляет методы Добавление и удаление событий для события уровня службы.</span><span class="sxs-lookup"><span data-stu-id="26d05-1322">This is because the identifier field of this event re-uses an implementation from a service that does not expose add/remove event methods for the service-level event.</span></span>  
  
<a name="routedEventInfo_ToolTipClosing"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="26d05-1323">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="26d05-1323">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="26d05-1324">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="26d05-1324">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.ToolTipClosingEvent>|  
|<span data-ttu-id="26d05-1325">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="26d05-1325">Routing strategy</span></span>|<span data-ttu-id="26d05-1326">Direct</span><span class="sxs-lookup"><span data-stu-id="26d05-1326">Direct</span></span>|  
|<span data-ttu-id="26d05-1327">делегат</span><span class="sxs-lookup"><span data-stu-id="26d05-1327">Delegate</span></span>|<xref:System.Windows.Controls.ToolTipEventHandler>|  
  
-   <span data-ttu-id="26d05-1328">Переопределить <xref:System.Windows.FrameworkElement.OnToolTipClosing%2A> реализовать обработчик класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="26d05-1328">Override <xref:System.Windows.FrameworkElement.OnToolTipClosing%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ToolTip" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipClosingEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ToolTipClosingEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ToolTipClosingEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.ToolTipClosingEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ToolTipClosingEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ToolTipClosingEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ToolTipClosingEvent : System.Windows.RoutedEvent" Usage="System.Windows.FrameworkElement.ToolTipClosingEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-1329">Идентифицирует направленное событие <see cref="E:System.Windows.FrameworkElement.ToolTipClosing" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1329">Identifies the <see cref="E:System.Windows.FrameworkElement.ToolTipClosing" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1330">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="26d05-1330">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="26d05-1331">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="26d05-1331">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="26d05-1332">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="26d05-1332">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="26d05-1333">Дополнительные сведения о регистрации маршрутизированных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-1333">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="26d05-1334">Дополнительные сведения об использовании идентификаторов маршрутизируемых событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-1334">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolTipOpening">
      <MemberSignature Language="C#" Value="public event System.Windows.Controls.ToolTipEventHandler ToolTipOpening;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.Controls.ToolTipEventHandler ToolTipOpening" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkElement.ToolTipOpening" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ToolTipOpening As ToolTipEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::Controls::ToolTipEventHandler ^ ToolTipOpening;" />
      <MemberSignature Language="F#" Value="member this.ToolTipOpening : System.Windows.Controls.ToolTipEventHandler " Usage="member this.ToolTipOpening : System.Windows.Controls.ToolTipEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Controls.ToolTipEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-1335">Происходит при открытии любой всплывающей подсказки к элементу.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1335">Occurs when any tooltip on the element is opened.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1336">Чтобы предотвратить появление в пользовательском Интерфейсе, ваш обработчик для всплывающей подсказки <xref:System.Windows.FrameworkElement.ToolTipOpening> можно пометить <xref:System.Windows.Controls.ToolTipEventArgs> обрабатываются данные события.</span><span class="sxs-lookup"><span data-stu-id="26d05-1336">To prevent a tooltip from appearing in the UI, your handler for <xref:System.Windows.FrameworkElement.ToolTipOpening> can mark the <xref:System.Windows.Controls.ToolTipEventArgs> event data handled.</span></span> <span data-ttu-id="26d05-1337">В противном случае отображается подсказка, используя значение <xref:System.Windows.FrameworkElement.ToolTip%2A> свойство как содержимое подсказки.</span><span class="sxs-lookup"><span data-stu-id="26d05-1337">Otherwise, the tooltip is displayed, using the value of the <xref:System.Windows.FrameworkElement.ToolTip%2A> property as the tooltip content.</span></span> <span data-ttu-id="26d05-1338">Другой возможный сценарий — что можно написать обработчик, который сбрасывает значение <xref:System.Windows.FrameworkElement.ToolTip%2A> свойства для элемента, который является источником события, непосредственно перед отображением всплывающей подсказки.</span><span class="sxs-lookup"><span data-stu-id="26d05-1338">Another possible scenario is that you could write a handler that resets the value of the <xref:System.Windows.FrameworkElement.ToolTip%2A> property for the element that is the event source, just before the tooltip is displayed.</span></span>  
  
 <span data-ttu-id="26d05-1339"><xref:System.Windows.FrameworkElement.ToolTipOpening> не будет вызываться, если значение <xref:System.Windows.FrameworkElement.ToolTip%2A> является `null` или иным способом не задано.</span><span class="sxs-lookup"><span data-stu-id="26d05-1339"><xref:System.Windows.FrameworkElement.ToolTipOpening> will not be raised if the value of <xref:System.Windows.FrameworkElement.ToolTip%2A> is `null` or otherwise unset.</span></span> <span data-ttu-id="26d05-1340">Не устанавливайте намеренно <xref:System.Windows.FrameworkElement.ToolTip%2A> для `null` пока открыт всплывающей подсказки или открыв; это не будет действовать закрытия подсказки и создаст нежелательный визуальный артефакт в пользовательском Интерфейсе.</span><span class="sxs-lookup"><span data-stu-id="26d05-1340">Do not deliberately set <xref:System.Windows.FrameworkElement.ToolTip%2A> to `null` while a tooltip is open or opening; this will not have the effect of closing the tooltip, and will instead create an undesirable visual artifact in the UI.</span></span>  
  
 <span data-ttu-id="26d05-1341"><xref:System.Windows.FrameworkElement.ToolTipOpening> Событие не может быть <xref:System.Windows.EventTrigger> в стиле.</span><span class="sxs-lookup"><span data-stu-id="26d05-1341">The <xref:System.Windows.FrameworkElement.ToolTipOpening> event cannot be an <xref:System.Windows.EventTrigger> in a style.</span></span> <span data-ttu-id="26d05-1342">Это потому, что поле идентификатора данного события повторно использует реализацию из службы, не предоставляет методы Добавление и удаление событий для события уровня службы.</span><span class="sxs-lookup"><span data-stu-id="26d05-1342">This is because the identifier field of this event re-uses an implementation from a service that does not expose add/remove event methods for the service-level event.</span></span>  
  
<a name="routedEventInfo_ToolTipOpening"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="26d05-1343">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="26d05-1343">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="26d05-1344">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="26d05-1344">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.ToolTipOpeningEvent>|  
|<span data-ttu-id="26d05-1345">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="26d05-1345">Routing strategy</span></span>|<span data-ttu-id="26d05-1346">Direct</span><span class="sxs-lookup"><span data-stu-id="26d05-1346">Direct</span></span>|  
|<span data-ttu-id="26d05-1347">делегат</span><span class="sxs-lookup"><span data-stu-id="26d05-1347">Delegate</span></span>|<xref:System.Windows.Controls.ToolTipEventHandler>|  
  
-   <span data-ttu-id="26d05-1348">Переопределить <xref:System.Windows.FrameworkElement.OnToolTipClosing%2A> реализовать обработчик класса для этого события в производных классах.</span><span class="sxs-lookup"><span data-stu-id="26d05-1348">Override <xref:System.Windows.FrameworkElement.OnToolTipClosing%2A> to implement class handling for this event in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Controls.ToolTip" />
      </Docs>
    </Member>
    <Member MemberName="ToolTipOpeningEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent ToolTipOpeningEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent ToolTipOpeningEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.ToolTipOpeningEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ToolTipOpeningEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ ToolTipOpeningEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable ToolTipOpeningEvent : System.Windows.RoutedEvent" Usage="System.Windows.FrameworkElement.ToolTipOpeningEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-1349">Идентифицирует направленное событие <see cref="E:System.Windows.FrameworkElement.ToolTipOpening" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1349">Identifies the <see cref="E:System.Windows.FrameworkElement.ToolTipOpening" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1350">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="26d05-1350">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="26d05-1351">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="26d05-1351">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="26d05-1352">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="26d05-1352">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="26d05-1353">Дополнительные сведения о регистрации маршрутизированных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-1353">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="26d05-1354">Дополнительные сведения об использовании идентификаторов маршрутизируемых событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-1354">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToolTipProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty ToolTipProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty ToolTipProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.ToolTipProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ToolTipProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ ToolTipProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable ToolTipProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.ToolTipProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-1355">Идентифицирует свойство зависимостей <see cref="P:System.Windows.FrameworkElement.ToolTip" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1355">Identifies the <see cref="P:System.Windows.FrameworkElement.ToolTip" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Triggers">
      <MemberSignature Language="C#" Value="public System.Windows.TriggerCollection Triggers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.TriggerCollection Triggers" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.Triggers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Triggers As TriggerCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::TriggerCollection ^ Triggers { System::Windows::TriggerCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Triggers : System.Windows.TriggerCollection" Usage="System.Windows.FrameworkElement.Triggers" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.TriggerCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-1356">Получает коллекцию триггеров, установленных непосредственно в этом элементе или в его дочерних элементах.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1356">Gets the collection of triggers established directly on this element, or in child elements.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26d05-1357">Строго типизированная коллекция объектов <see cref="T:System.Windows.Trigger" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1357">A strongly typed collection of <see cref="T:System.Windows.Trigger" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  <span data-ttu-id="26d05-1358">Это свойство можно задать только в [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] через показанного синтаксиса коллекции или путем доступа к объекту коллекции и использования его различных методов, например Add.</span><span class="sxs-lookup"><span data-stu-id="26d05-1358">This property can only be set in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] through the collection syntax shown, or by accessing the collection object and using its various methods such as Add.</span></span> <span data-ttu-id="26d05-1359">Свойство для доступа к объекту коллекции только для чтения, сама эта коллекция является чтения и записи.</span><span class="sxs-lookup"><span data-stu-id="26d05-1359">The property to access the collection object itself is read-only, the collection itself is read-write.</span></span> <span data-ttu-id="26d05-1360">Это свойство существует только в корневых элементах; Попытка найти или задать другое расположение вызовет исключение.</span><span class="sxs-lookup"><span data-stu-id="26d05-1360">The property only exists on root elements; attempting to find it or set it elsewhere will cause an exception to be thrown.</span></span>  
  
 <span data-ttu-id="26d05-1361">Это свойство позволяет проверять триггеры, существующие как часть стилей, используемых в этом элементе.</span><span class="sxs-lookup"><span data-stu-id="26d05-1361">This property does not enable you to examine triggers that exist as part of styles in use on this element.</span></span> <span data-ttu-id="26d05-1362">Он только сообщает коллекцию триггеров, которые буквально добавляются в коллекцию, либо в разметку или код.</span><span class="sxs-lookup"><span data-stu-id="26d05-1362">It only reports the collection of triggers that are literally added to the collection, either in markup or code.</span></span> <span data-ttu-id="26d05-1363">Элементы обычно не имеют таких элементов по умолчанию (с помощью шаблона для экземпляра); очень часто триггеры, поступающие из композиции элементов управления, устанавливаются в стилях.</span><span class="sxs-lookup"><span data-stu-id="26d05-1363">Elements do not typically have such elements existing by default (through a template for instance); it is more common for triggers that come from control compositing to be established in styles instead.</span></span>  
  
 <span data-ttu-id="26d05-1364">С точки зрения поведение (и устанавливается, какой эффект поступил из объявленного элемента <xref:System.Windows.FrameworkElement.Triggers%2A> коллекции), условие триггера и его эффект может быть данного элемента, или на его дочерние элементы в логическом дереве.</span><span class="sxs-lookup"><span data-stu-id="26d05-1364">In terms of behavior (and trying to establish which effect came from which element's declared <xref:System.Windows.FrameworkElement.Triggers%2A> collection), both the triggering condition and the trigger effect might be on this element, or might be on its child elements in the logical tree.</span></span> <span data-ttu-id="26d05-1365">Обратите внимание, что при использовании события времени жизни <xref:System.Windows.FrameworkElement.Loaded> для получения этой коллекции триггеров дочернего элемента могут еще не быть полностью загружены, и коллекция будет меньше, чем было бы действительно во время выполнения.</span><span class="sxs-lookup"><span data-stu-id="26d05-1365">Note that if you use lifetime events such as <xref:System.Windows.FrameworkElement.Loaded> to get this collection, the child element's triggers might not yet be fully loaded, and the collection will be smaller than it would truly be at run time.</span></span>  
  
 <span data-ttu-id="26d05-1366">Обратите внимание, что поддерживает только коллекцию триггеров, установленных на элементе <xref:System.Windows.EventTrigger>, не триггеры свойств (<xref:System.Windows.Trigger>).</span><span class="sxs-lookup"><span data-stu-id="26d05-1366">Note that the collection of triggers established on an element only supports <xref:System.Windows.EventTrigger>, not property triggers (<xref:System.Windows.Trigger>).</span></span> <span data-ttu-id="26d05-1367">Если вам требуется триггеры свойств, необходимо разместить их в стиле или шаблоне и затем применить этот стиль или шаблон к элементу либо непосредственно через <xref:System.Windows.FrameworkElement.Style%2A> свойства, либо косвенно через неявную ссылку на стиль.</span><span class="sxs-lookup"><span data-stu-id="26d05-1367">If you require property triggers, you must place these within a style or template and then assign that style or template to the element either directly through the <xref:System.Windows.FrameworkElement.Style%2A> property, or indirectly through an implicit style reference.</span></span>  
  
<a name="xamlPropertyElementUsage_Triggers"></a>   
## <a name="xaml-property-element-usage"></a><span data-ttu-id="26d05-1368">Использование элемента свойства XAML</span><span class="sxs-lookup"><span data-stu-id="26d05-1368">XAML Property Element Usage</span></span>  
  
```  
<object>  
  <object.Triggers>  
    oneOrMoreTriggers  
  </object.Triggers>  
</object>  
```  
  
<a name="xamlValues_Triggers"></a>   
## <a name="xaml-values"></a><span data-ttu-id="26d05-1369">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="26d05-1369">XAML Values</span></span>  
 <span data-ttu-id="26d05-1370">*OneOrMoreTriggers*</span><span class="sxs-lookup"><span data-stu-id="26d05-1370">*oneOrMoreTriggers*</span></span>  
 <span data-ttu-id="26d05-1371">Один или несколько определенных <xref:System.Windows.EventTrigger> элементов.</span><span class="sxs-lookup"><span data-stu-id="26d05-1371">One or more defined <xref:System.Windows.EventTrigger> elements.</span></span> <span data-ttu-id="26d05-1372">Каждый такой триггер должен содержать допустимые действия раскадровки и ссылки.</span><span class="sxs-lookup"><span data-stu-id="26d05-1372">Each such trigger is expected to contain valid storyboard actions and references.</span></span> <span data-ttu-id="26d05-1373">Обратите внимание на то, что эта коллекция может быть установлено только для корневого элемента страницы.</span><span class="sxs-lookup"><span data-stu-id="26d05-1373">Note that this collection can only be established on the root element of a page.</span></span> <span data-ttu-id="26d05-1374">Дополнительные сведения см. в разделе [Общие сведения о Storyboard](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).</span><span class="sxs-lookup"><span data-stu-id="26d05-1374">For more information, see [Storyboards Overview](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.EventTrigger" />
      </Docs>
    </Member>
    <Member MemberName="TryFindResource">
      <MemberSignature Language="C#" Value="public object TryFindResource (object resourceKey);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object TryFindResource(object resourceKey) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.TryFindResource(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFindResource (resourceKey As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ TryFindResource(System::Object ^ resourceKey);" />
      <MemberSignature Language="F#" Value="member this.TryFindResource : obj -&gt; obj" Usage="frameworkElement.TryFindResource resourceKey" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="resourceKey" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="resourceKey">
          <span data-ttu-id="26d05-1375">Ключевой идентификатор искомого ресурса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1375">The key identifier of the resource to be found.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26d05-1376">Ищет ресурс с указанным ключом и возвращает его, если он найден.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1376">Searches for a resource with the specified key, and returns that resource if found.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="26d05-1377">Найденный ресурс или значение <see langword="null" />, если ресурс с указанным <paramref name="key" /> не обнаружен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1377">The found resource, or <see langword="null" /> if no resource with the provided <paramref name="key" /> is found.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1378">Если ресурс не найден в вызывающем элементе, выполняется поиск в дереве ресурсов родительского вверх по логическому дереву, таким же образом, который бы были запрошены искомая Если ресурс по ключу во время выполнения.</span><span class="sxs-lookup"><span data-stu-id="26d05-1378">If the resource is not found on the calling element, the parent resource tree is searched upward through the logical tree, in the same way that the tree would be searched if a resource were requested by key at run time.</span></span> <span data-ttu-id="26d05-1379">Этот метод возвращает `null` только в том случае, если ресурс этого ключа не существует в любом месте в дереве ресурсов в существующих условий дерева во время, <xref:System.Windows.FrameworkElement.TryFindResource%2A> вызывается.</span><span class="sxs-lookup"><span data-stu-id="26d05-1379">The method returns `null` only if no resource of that key existed anywhere in the resource tree, per the existing conditions of the tree at the time that <xref:System.Windows.FrameworkElement.TryFindResource%2A> is called.</span></span>  
  
 <span data-ttu-id="26d05-1380">Обычно вы сразу же привести возвращаемое значение к типу свойства, которое вы пытаетесь значения возвращаемым ресурсом.</span><span class="sxs-lookup"><span data-stu-id="26d05-1380">Typically you would immediately cast the return value to the type of the property that you were attempting to set with the returned resource value.</span></span>  
  
 <span data-ttu-id="26d05-1381"><xref:System.Windows.FrameworkElement.FindResource%2A> Метод имеет аналогичное поведение, за исключением того, что он создает исключение, если ресурс с указанным ключом не было возвращено.</span><span class="sxs-lookup"><span data-stu-id="26d05-1381">The <xref:System.Windows.FrameworkElement.FindResource%2A> method has similar behavior, except that it throws an exception if no resource with the provided key was returned.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26d05-1382">В следующем примере реализуется как обработчик кнопки, где кнопку наборов фоном кисти ресурс определен получен путем вызова <xref:System.Windows.FrameworkElement.TryFindResource%2A> на себя.</span><span class="sxs-lookup"><span data-stu-id="26d05-1382">The following example is implemented as a button handler, where the button being clicked sets its background to a resource-defined brush obtained by calling <xref:System.Windows.FrameworkElement.TryFindResource%2A> on itself.</span></span> <span data-ttu-id="26d05-1383">Это обходит дерево элементов и поиск ресурса (сам ресурс определен в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] и не отображается).</span><span class="sxs-lookup"><span data-stu-id="26d05-1383">This walks the element tree and finds the resource (the resource itself is defined in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] and is not shown).</span></span>  
  
 [!code-csharp[BaseElementsSmorgasbord#FETryFindResource](~/samples/snippets/csharp/VS_Snippets_Wpf/BaseElementsSmorgasbord/CSharp/Page1.xaml.cs#fetryfindresource)]
 [!code-vb[BaseElementsSmorgasbord#FETryFindResource](~/samples/snippets/visualbasic/VS_Snippets_Wpf/BaseElementsSmorgasbord/visualbasic/page1.xaml.vb#fetryfindresource)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.FindResource(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Unloaded">
      <MemberSignature Language="C#" Value="public event System.Windows.RoutedEventHandler Unloaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Windows.RoutedEventHandler Unloaded" />
      <MemberSignature Language="DocId" Value="E:System.Windows.FrameworkElement.Unloaded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Unloaded As RoutedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Windows::RoutedEventHandler ^ Unloaded;" />
      <MemberSignature Language="F#" Value="member this.Unloaded : System.Windows.RoutedEventHandler " Usage="member this.Unloaded : System.Windows.RoutedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-1384">Происходит при удалении элемента из дерева с загруженными элементами.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1384">Occurs when the element is removed from within an element tree of loaded elements.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1385">События с прямой маршрутизацией не выполняйте маршрут, они обрабатываются только внутри элемента, на котором они вызываются.</span><span class="sxs-lookup"><span data-stu-id="26d05-1385">Direct routed events do not follow a route, they are only handled within the same element on which they are raised.</span></span> <span data-ttu-id="26d05-1386">Прямые перенаправленные события поддерживают другие поведения перенаправленного события: они поддерживают коллекцию доступных обработчиков и могут использоваться в качестве <xref:System.Windows.EventTrigger> в стиле.</span><span class="sxs-lookup"><span data-stu-id="26d05-1386">Direct routed events do support other routed event behavior: they support an accessible handlers collection, and can be used as an <xref:System.Windows.EventTrigger> in a style.</span></span>  
  
 <span data-ttu-id="26d05-1387"><xref:System.Windows.FrameworkElement.Loaded> и <xref:System.Windows.FrameworkElement.Unloaded> оба возникающие в элементах управления, в результате изменения темы системы, инициированного пользователем.</span><span class="sxs-lookup"><span data-stu-id="26d05-1387"><xref:System.Windows.FrameworkElement.Loaded> and <xref:System.Windows.FrameworkElement.Unloaded> might both be raised on controls as a result of user-initiated system theme changes.</span></span> <span data-ttu-id="26d05-1388">Изменение темы делает недействительность шаблон элемента управления и автономной визуальное дерево, которое в свою очередь вызывает весь элемент управления для выгрузки и повторной загрузки.</span><span class="sxs-lookup"><span data-stu-id="26d05-1388">A theme change causes an invalidation of the control template and the contained visual tree, which in turn causes the entire control to unload and reload.</span></span> <span data-ttu-id="26d05-1389">Таким образом <xref:System.Windows.FrameworkElement.Unloaded> нельзя предполагать, происходят только при навигации за пределы страницы.</span><span class="sxs-lookup"><span data-stu-id="26d05-1389">Therefore <xref:System.Windows.FrameworkElement.Unloaded> cannot be assumed to occur only on navigation away from the page.</span></span>  
  
 <span data-ttu-id="26d05-1390">Обратите внимание, что <xref:System.Windows.FrameworkElement.Unloaded> событие не происходит после начала приложение завершает работу.</span><span class="sxs-lookup"><span data-stu-id="26d05-1390">Note that the <xref:System.Windows.FrameworkElement.Unloaded> event is not raised after an application begins shutting down.</span></span> <span data-ttu-id="26d05-1391">Завершение работы приложения происходит, когда определяются условия <xref:System.Windows.Application.ShutdownMode%2A> происходит свойство.</span><span class="sxs-lookup"><span data-stu-id="26d05-1391">Application shutdown occurs when the condition defined by the <xref:System.Windows.Application.ShutdownMode%2A> property occurs.</span></span> <span data-ttu-id="26d05-1392">Если вы поместите код очистки в обработчике для <xref:System.Windows.FrameworkElement.Unloaded> событий, таких как <xref:System.Windows.Window> или <xref:System.Windows.Controls.UserControl>, он может не вызываться должным образом.</span><span class="sxs-lookup"><span data-stu-id="26d05-1392">If you place cleanup code within a handler for the <xref:System.Windows.FrameworkElement.Unloaded> event, such as for a <xref:System.Windows.Window> or a <xref:System.Windows.Controls.UserControl>, it may not be called as expected.</span></span>  
  
<a name="routedEventInfo_Unloaded"></a>   
## <a name="routed-event-information"></a><span data-ttu-id="26d05-1393">Сведения о маршрутизируемом событии</span><span class="sxs-lookup"><span data-stu-id="26d05-1393">Routed Event Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="26d05-1394">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="26d05-1394">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.UnloadedEvent>|  
|<span data-ttu-id="26d05-1395">Стратегия маршрутизации</span><span class="sxs-lookup"><span data-stu-id="26d05-1395">Routing strategy</span></span>|<span data-ttu-id="26d05-1396">Direct</span><span class="sxs-lookup"><span data-stu-id="26d05-1396">Direct</span></span>|  
|<span data-ttu-id="26d05-1397">делегат</span><span class="sxs-lookup"><span data-stu-id="26d05-1397">Delegate</span></span>|<xref:System.Windows.RoutedEventHandler>|  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Windows.FrameworkElement.Loaded" />
      </Docs>
    </Member>
    <Member MemberName="UnloadedEvent">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.RoutedEvent UnloadedEvent;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.RoutedEvent UnloadedEvent" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.UnloadedEvent" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UnloadedEvent As RoutedEvent " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::RoutedEvent ^ UnloadedEvent;" />
      <MemberSignature Language="F#" Value=" staticval mutable UnloadedEvent : System.Windows.RoutedEvent" Usage="System.Windows.FrameworkElement.UnloadedEvent" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.RoutedEvent</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-1398">Идентифицирует направленное событие <see cref="E:System.Windows.FrameworkElement.Unloaded" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1398">Identifies the <see cref="E:System.Windows.FrameworkElement.Unloaded" /> routed event.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1399">Идентификаторы перенаправленных событий создаются при их регистрации.</span><span class="sxs-lookup"><span data-stu-id="26d05-1399">Routed event identifiers are created when routed events are registered.</span></span> <span data-ttu-id="26d05-1400">Эти идентификаторы содержат идентификационное имя, тип владельца, тип обработчика, стратегию маршрутизации и служебный метод добавления владельцев события.</span><span class="sxs-lookup"><span data-stu-id="26d05-1400">These identifiers contain an identifying name, owner type, handler type, routing strategy, and utility method for adding owners for the event.</span></span> <span data-ttu-id="26d05-1401">Эти идентификаторы можно использовать для добавления обработчиков классов.</span><span class="sxs-lookup"><span data-stu-id="26d05-1401">You can use these identifiers to add class handlers.</span></span>  
  
 <span data-ttu-id="26d05-1402">Дополнительные сведения о регистрации маршрутизированных событий см. в разделе <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-1402">For more information about registering routed events, see <xref:System.Windows.EventManager.RegisterRoutedEvent%2A>.</span></span> <span data-ttu-id="26d05-1403">Дополнительные сведения об использовании идентификаторов маршрутизируемых событий для добавления обработчиков класса см. в описании метода <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-1403">For more information about using routed event identifiers to add class handlers, see <xref:System.Windows.EventManager.RegisterClassHandler%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterName">
      <MemberSignature Language="C#" Value="public void UnregisterName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UnregisterName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.UnregisterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UnregisterName(System::String ^ name);" />
      <MemberSignature Language="F#" Value="member this.UnregisterName : string -&gt; unit" Usage="frameworkElement.UnregisterName name" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="26d05-1404">Имя пары имя-объект, которую необходимо удалить из текущей области видимости.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1404">Name of the name-object pair to remove from the current scope.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="26d05-1405">Упрощает доступ к методу отмены регистрации <see cref="T:System.Windows.NameScope" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1405">Simplifies access to the <see cref="T:System.Windows.NameScope" /> de-registration method.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1406">Требуется отменять регистрацию имен Если планируется повторно зарегистрировать другой элемент с таким же именем.</span><span class="sxs-lookup"><span data-stu-id="26d05-1406">You only need to un-register names if you intend to re-register another element with that same name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.RegisterName(System.String,System.Object)" />
        <altmember cref="T:System.Windows.NameScope" />
      </Docs>
    </Member>
    <Member MemberName="UpdateDefaultStyle">
      <MemberSignature Language="C#" Value="public void UpdateDefaultStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void UpdateDefaultStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.FrameworkElement.UpdateDefaultStyle" />
      <MemberSignature Language="VB.NET" Value="Public Sub UpdateDefaultStyle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void UpdateDefaultStyle();" />
      <MemberSignature Language="F#" Value="member this.UpdateDefaultStyle : unit -&gt; unit" Usage="frameworkElement.UpdateDefaultStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="26d05-1407">Повторно применяет стиль по умолчанию к текущему объекту <see cref="T:System.Windows.FrameworkElement" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1407">Reapplies the default style to the current <see cref="T:System.Windows.FrameworkElement" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UseLayoutRounding">
      <MemberSignature Language="C#" Value="public bool UseLayoutRounding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseLayoutRounding" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.UseLayoutRounding" />
      <MemberSignature Language="VB.NET" Value="Public Property UseLayoutRounding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool UseLayoutRounding { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.UseLayoutRounding : bool with get, set" Usage="System.Windows.FrameworkElement.UseLayoutRounding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-1408">Получает или задает значение, указывающее, должно ли применяться округление макета для размера и позиции данного элемента во время структурирования.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1408">Gets or sets a value that indicates whether layout rounding should be applied to this element's size and position during layout.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26d05-1409">Значение <see langword="true" />, если округление структуры применяется; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1409">
              <see langword="true" /> if layout rounding is applied; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="26d05-1410">Значение по умолчанию: <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1410">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1411">Когда <xref:System.Windows.FrameworkElement.UseLayoutRounding%2A> свойство для элемента является `true`, все пикселей не целочисленные значения, которые вычисляются во время <xref:System.Windows.UIElement.Measure%2A> и <xref:System.Windows.UIElement.Arrange%2A> передает округляются до целых значений пикселей.</span><span class="sxs-lookup"><span data-stu-id="26d05-1411">When the <xref:System.Windows.FrameworkElement.UseLayoutRounding%2A> property for an element is `true`, all non-integral pixel values that are calculated during the <xref:System.Windows.UIElement.Measure%2A> and <xref:System.Windows.UIElement.Arrange%2A> passes are rounded to whole pixel values.</span></span>  
  
 <span data-ttu-id="26d05-1412">Это свойство наследуется дочерними элементами.</span><span class="sxs-lookup"><span data-stu-id="26d05-1412">This property is inherited by child elements.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="26d05-1413">Необходимо задать <xref:System.Windows.FrameworkElement.UseLayoutRounding%2A> для `true` в корневом элементе.</span><span class="sxs-lookup"><span data-stu-id="26d05-1413">You should set <xref:System.Windows.FrameworkElement.UseLayoutRounding%2A> to `true` on the root element.</span></span> <span data-ttu-id="26d05-1414">Система макета добавляет координаты дочернего координат родительского; Таким образом Если координаты родительского элемента не на границе пикселов, координаты дочернего, также не на границе пикселей.</span><span class="sxs-lookup"><span data-stu-id="26d05-1414">The layout system adds child coordinates to the parent coordinates; therefore, if the parent coordinates are not on a pixel boundary, the child coordinates are also not on a pixel boundary.</span></span> <span data-ttu-id="26d05-1415">Если <xref:System.Windows.FrameworkElement.UseLayoutRounding%2A> не может быть в корне, задайте <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> дочерних элементов для получения необходимого эффекта.</span><span class="sxs-lookup"><span data-stu-id="26d05-1415">If <xref:System.Windows.FrameworkElement.UseLayoutRounding%2A> cannot be set at the root, set <xref:System.Windows.UIElement.SnapsToDevicePixels%2A> on the child to obtain the effect that you want.</span></span>  
  
 <span data-ttu-id="26d05-1416">Графические объекты на границах пикселей устраняет полупрозрачные края, производимые сглаживания, когда границы попадает в середину пикселя устройства.</span><span class="sxs-lookup"><span data-stu-id="26d05-1416">Drawing objects on pixel boundaries eliminates the semi-transparent edges that are produced by anti-aliasing, when an edge falls in the middle of a device pixel.</span></span> <span data-ttu-id="26d05-1417">Ниже показаны выходные данные из одного пикселя нулевой ширины строки, попадает в середину пикселя устройства.</span><span class="sxs-lookup"><span data-stu-id="26d05-1417">The following illustration shows the output of a single pixel-width line that falls in the middle of a device pixel.</span></span> <span data-ttu-id="26d05-1418">В строке в левой части не использует округление макета и является сглаженными.</span><span class="sxs-lookup"><span data-stu-id="26d05-1418">The line on the left does not use layout rounding and is anti-aliased.</span></span> <span data-ttu-id="26d05-1419">Строка справа использует округление макета.</span><span class="sxs-lookup"><span data-stu-id="26d05-1419">The line on the right uses layout rounding.</span></span>  
  
 <span data-ttu-id="26d05-1420">![Противодействия&#45;псевдоним линия в сравнении с одной точки строки. ] (~/add/media/pixelsnaplinecompare.PNG "Сглаженная линия, по сравнению с размером в один пиксель строки.")</span><span class="sxs-lookup"><span data-stu-id="26d05-1420">![Anti&#45;aliased line compared to single pixel line.](~/add/media/pixelsnaplinecompare.PNG "Anti-aliased line compared to single pixel line.")</span></span>  
  
 <span data-ttu-id="26d05-1421">При использовании округление макета и <xref:System.Windows.GridUnitType.Star> определения размера, система макета создает небольшие вариации в измерениях столбцов или строк, чтобы избежать субпиксельной визуализации.</span><span class="sxs-lookup"><span data-stu-id="26d05-1421">When you use layout rounding and <xref:System.Windows.GridUnitType.Star> sizing, the layout system creates small variations in the column or row measurements to avoid subpixel rendering.</span></span> <span data-ttu-id="26d05-1422">Например, если сетка содержит шириной 100 с 3 столбцами размера <xref:System.Windows.GridUnitType.Star>, вместо создания трех столбцов, имеющих ширину 33,3, система макета создает 2 столбцов, имеющих ширину 33 и один шириной 34.</span><span class="sxs-lookup"><span data-stu-id="26d05-1422">For example, if a grid has a total width of 100 with 3 columns each of size <xref:System.Windows.GridUnitType.Star>, instead of creating three columns that have an equal width of 33.3, the layout system creates 2 columns that have a width of 33 and one that has a width of 34.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="26d05-1423">В .NET 4.6 для снижения числа вхождений обрезки в элементах управления с границами в округление макетов внесены изменения.</span><span class="sxs-lookup"><span data-stu-id="26d05-1423">In .NET 4.6 changes were made to layout rounding to reduce instances of clipping in controls with borders.</span></span> <span data-ttu-id="26d05-1424">По умолчанию эта функция включена, если целевой платформой является .NET Framework 4.6 или более поздней.</span><span class="sxs-lookup"><span data-stu-id="26d05-1424">By default, this feature is enabled if your Target Framework is .NET Framework 4.6 or higher.</span></span> <span data-ttu-id="26d05-1425">Приложений, предназначенных для более ранних версий платформы, можно выбрать новое поведение, добавив следующий параметр в файл app.config: `<runtime><AppContextSwitchOverrides value="Switch.MS.Internal.DoNotApplyLayoutRoundingToMarginsAndBorderThickness=false"/></runtime>` Настройка начинает действовать, только когда приложение выполняется на платформе .NET Framework 4.6.</span><span class="sxs-lookup"><span data-stu-id="26d05-1425">Applications that target earlier versions of the framework can opt in into the new behavior by adding the following setting to an app.config file: `<runtime><AppContextSwitchOverrides value="Switch.MS.Internal.DoNotApplyLayoutRoundingToMarginsAndBorderThickness=false"/></runtime>` The setting only takes effect when the application is running on the .NET Framework 4.6.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26d05-1426">В следующем примере демонстрируется эффект, <xref:System.Windows.FrameworkElement.UseLayoutRounding%2A> свойство имеет один пиксель нулевой ширины строки.</span><span class="sxs-lookup"><span data-stu-id="26d05-1426">The following example demonstrates the effect that the <xref:System.Windows.FrameworkElement.UseLayoutRounding%2A> property has on a single pixel-width line.</span></span> <span data-ttu-id="26d05-1427">Строки в левой части использует округление макета, в строке, в правой части используется округление макета.</span><span class="sxs-lookup"><span data-stu-id="26d05-1427">The line on the left does not use layout rounding and the line on the right uses layout rounding.</span></span> <span data-ttu-id="26d05-1428">Если медленно изменения размера окна, можно увидеть разницу, округлением макета.</span><span class="sxs-lookup"><span data-stu-id="26d05-1428">If you slowly resize the window, you can see the difference that layout rounding makes.</span></span>  
  
```xaml  
  
<Page x:Class="LayoutRounding.Lines"  
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"  
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"  
    Title="Lines" Name="linesPage"  
    >  
  <StackPanel Width="150"  Margin="7" Orientation="Horizontal">  
    <!-- Single pixel line with layout rounding turned OFF.-->  
    <Rectangle UseLayoutRounding="False"  
       Width="45.5" Margin="10" Height="1" Fill="Red"/>  
    <!-- Single pixel line with layout rounding turned ON.-->  
    <Rectangle UseLayoutRounding="True"  
      Width="45.5" Margin="10" Height="1" Fill="Red"/>  
  </StackPanel>  
  <!-- Background Grid -->  
  <Page.Background>  
    <DrawingBrush  Viewport="0,0,10,10" ViewportUnits="Absolute" TileMode="Tile">  
      <DrawingBrush.Drawing>  
        <DrawingGroup>  
          <GeometryDrawing Brush="White">  
            <GeometryDrawing.Geometry>  
              <RectangleGeometry Rect="0,0,1,1" />  
            </GeometryDrawing.Geometry>  
          </GeometryDrawing>  
          <GeometryDrawing Geometry="M0,0 L1,0 1,0.1, 0,0.1Z " Brush="#CCCCFF" />  
          <GeometryDrawing Geometry="M0,0 L0,1 0.1,1, 0.1,0Z" Brush="#CCCCFF" />  
        </DrawingGroup>  
      </DrawingBrush.Drawing>  
    </DrawingBrush>  
  </Page.Background>  
</Page>  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UseLayoutRoundingProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty UseLayoutRoundingProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty UseLayoutRoundingProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.UseLayoutRoundingProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly UseLayoutRoundingProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ UseLayoutRoundingProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable UseLayoutRoundingProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.UseLayoutRoundingProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-1429">Идентифицирует свойство зависимостей <see cref="P:System.Windows.FrameworkElement.UseLayoutRounding" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1429">Identifies the <see cref="P:System.Windows.FrameworkElement.UseLayoutRounding" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalAlignment">
      <MemberSignature Language="C#" Value="public System.Windows.VerticalAlignment VerticalAlignment { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Windows.VerticalAlignment VerticalAlignment" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.VerticalAlignment" />
      <MemberSignature Language="VB.NET" Value="Public Property VerticalAlignment As VerticalAlignment" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::VerticalAlignment VerticalAlignment { System::Windows::VerticalAlignment get(); void set(System::Windows::VerticalAlignment value); };" />
      <MemberSignature Language="F#" Value="member this.VerticalAlignment : System.Windows.VerticalAlignment with get, set" Usage="System.Windows.FrameworkElement.VerticalAlignment" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.VerticalAlignment</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-1430">Получает или задает характеристики выравнивания по вертикали, применяемые к этому элементу при его размещении в родительском элементе, например в панели или элементе управления элементами.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1430">Gets or sets the vertical alignment characteristics applied to this element when it is composed within a parent element such as a panel or items control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26d05-1431">Настройка вертикального выравнивания.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1431">A vertical alignment setting.</span>
          </span>
          <span data-ttu-id="26d05-1432">Значение по умолчанию: <see cref="F:System.Windows.VerticalAlignment.Stretch" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1432">The default is <see cref="F:System.Windows.VerticalAlignment.Stretch" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1433">Когда <xref:System.Windows.FrameworkElement.Height%2A> и <xref:System.Windows.FrameworkElement.Width%2A> явно задано для элемента, эти измерения имеют приоритет и отменяют обычный эффект от этому свойству присвоить <xref:System.Windows.VerticalAlignment.Stretch>.</span><span class="sxs-lookup"><span data-stu-id="26d05-1433">When <xref:System.Windows.FrameworkElement.Height%2A> and <xref:System.Windows.FrameworkElement.Width%2A> properties are explicitly set on an element, these measurements take layout precedent and cancel the regular effects of setting this property to <xref:System.Windows.VerticalAlignment.Stretch>.</span></span>  
  
 <span data-ttu-id="26d05-1434"><xref:System.Windows.FrameworkElement.VerticalAlignment%2A> является [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] метод доступа свойства для Какова на самом деле свойство зависимостей.</span><span class="sxs-lookup"><span data-stu-id="26d05-1434"><xref:System.Windows.FrameworkElement.VerticalAlignment%2A> is the [!INCLUDE[TLA#tla_net](~/includes/tlasharptla-net-md.md)] property accessor for what is in reality a dependency property.</span></span> <span data-ttu-id="26d05-1435">Это свойство определенная зависимость довольно часто имеет значение «по умолчанию» по-разному в производных классах элементов, особенно элементы управления.</span><span class="sxs-lookup"><span data-stu-id="26d05-1435">This particular dependency property quite frequently has its apparent "default" value set differently in derived element classes, particularly controls.</span></span> <span data-ttu-id="26d05-1436">Обычно это происходит в одном из двух способов: свойство зависимости регистрируется повторно для определенного производного класса, но с разными метаданными для задания значения по умолчанию; или стиль по умолчанию применяется, который задает значение свойства зависимостей по-разному.</span><span class="sxs-lookup"><span data-stu-id="26d05-1436">This generally occurs in one of two ways: the dependency property is re-registered to a particular  derived class, but with different metadata for setting its defaults; or there is a default style being applied that sets that dependency property value differently.</span></span> <span data-ttu-id="26d05-1437">Например, «по умолчанию» из <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> для <xref:System.Windows.Controls.ComboBoxItem> элемент управления будет <xref:System.Windows.VerticalAlignment.Center>, даже если <xref:System.Windows.Controls.ComboBoxItem> наследует <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> непосредственно от <xref:System.Windows.FrameworkElement>.</span><span class="sxs-lookup"><span data-stu-id="26d05-1437">For example, the apparent "default" of <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> for a <xref:System.Windows.Controls.ComboBoxItem> control will be <xref:System.Windows.VerticalAlignment.Center>, even though <xref:System.Windows.Controls.ComboBoxItem> inherits <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> direct from <xref:System.Windows.FrameworkElement>.</span></span> <span data-ttu-id="26d05-1438">Это обусловлено тем, это значение было сброшено в качестве стиля по умолчанию <xref:System.Windows.Controls.ComboBoxItem>, в шаблоне стиля элемента управления.</span><span class="sxs-lookup"><span data-stu-id="26d05-1438">This is because that value was reset within the default style of <xref:System.Windows.Controls.ComboBoxItem>, within the style's control template.</span></span>  
  
 <span data-ttu-id="26d05-1439"><xref:System.Windows.Controls.Canvas> не используйте <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> при создании макета, так как <xref:System.Windows.Controls.Canvas> основывающаяся на абсолютном позиционировании.</span><span class="sxs-lookup"><span data-stu-id="26d05-1439"><xref:System.Windows.Controls.Canvas> does not use <xref:System.Windows.FrameworkElement.VerticalAlignment%2A> when composing layout, because <xref:System.Windows.Controls.Canvas> is based on absolute positioning.</span></span>  
  
 <span data-ttu-id="26d05-1440">Если наследуемые <xref:System.Windows.Controls.ComboBoxItem> или любые производные классы, <xref:System.Windows.Controls.ComboBoxItem> переопределяет значение по умолчанию это свойство имело <xref:System.Windows.VerticalAlignment.Center>.</span><span class="sxs-lookup"><span data-stu-id="26d05-1440">When inherited by <xref:System.Windows.Controls.ComboBoxItem> or any derived classes, <xref:System.Windows.Controls.ComboBoxItem> redefines the default value of this property to be <xref:System.Windows.VerticalAlignment.Center>.</span></span>  
  
<a name="dependencyPropertyInfo_VerticalAlignment"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="26d05-1441">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="26d05-1441">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="26d05-1442">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="26d05-1442">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.VerticalAlignmentProperty>|  
|<span data-ttu-id="26d05-1443">Значение свойства метаданных `true`</span><span class="sxs-lookup"><span data-stu-id="26d05-1443">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsArrange%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VerticalAlignmentProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty VerticalAlignmentProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty VerticalAlignmentProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.VerticalAlignmentProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly VerticalAlignmentProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ VerticalAlignmentProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable VerticalAlignmentProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.VerticalAlignmentProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-1444">Идентифицирует свойство зависимостей <see cref="P:System.Windows.FrameworkElement.VerticalAlignment" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1444">Identifies the <see cref="P:System.Windows.FrameworkElement.VerticalAlignment" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="VisualChildrenCount">
      <MemberSignature Language="C#" Value="protected override int VisualChildrenCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 VisualChildrenCount" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.VisualChildrenCount" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property VisualChildrenCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property int VisualChildrenCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.VisualChildrenCount : int" Usage="System.Windows.FrameworkElement.VisualChildrenCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-1445">Получает количество визуальных дочерних элементов внутри этого элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1445">Gets the number of visual child elements within this element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26d05-1446">Количество визуальных дочерних элементов для этого элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1446">The number of visual child elements for this element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1447"><xref:System.Windows.FrameworkElement> Реализация <xref:System.Windows.FrameworkElement.VisualChildrenCount%2A> всегда возвращает ноль или один.</span><span class="sxs-lookup"><span data-stu-id="26d05-1447">The <xref:System.Windows.FrameworkElement> implementation of <xref:System.Windows.FrameworkElement.VisualChildrenCount%2A> always returns either zero or one.</span></span> <span data-ttu-id="26d05-1448">Классы, которые обслуживают коллекции дочерних визуальных элементов, который может превышать один необходимо переопределить это свойство и <xref:System.Windows.FrameworkElement.GetVisualChild%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-1448">Classes that maintain a visual child collection that might exceed one must override both this property and <xref:System.Windows.FrameworkElement.GetVisualChild%2A>.</span></span>  
  
 <span data-ttu-id="26d05-1449">Это свойство обычно используется для определения верхней границы текущей коллекции дочерних для целей реализации переопределения макета (<xref:System.Windows.FrameworkElement.MeasureOverride%2A>, <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>).</span><span class="sxs-lookup"><span data-stu-id="26d05-1449">This property is generally used to determine the upper bounds of the current child collection for purposes of implementing the layout overrides (<xref:System.Windows.FrameworkElement.MeasureOverride%2A>, <xref:System.Windows.FrameworkElement.ArrangeOverride%2A>).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="26d05-1450">В следующем примере показано, как пользовательский декоративный элемент использует значения, объявленные с <xref:System.Windows.Media.VisualCollection> он поддерживает для нескольких визуальных дочерних элементов и сообщает эти значения с помощью переопределений из <xref:System.Windows.FrameworkElement.VisualChildrenCount%2A> и <xref:System.Windows.FrameworkElement.GetVisualChild%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-1450">The following example shows how a custom adorner uses the values declared by a <xref:System.Windows.Media.VisualCollection> that it maintains for its multiple visual children and reports these values through overrides of <xref:System.Windows.FrameworkElement.VisualChildrenCount%2A> and <xref:System.Windows.FrameworkElement.GetVisualChild%2A>.</span></span>  
  
 [!code-csharp[Adorners_ResizingAdorner#FEVisualOverridesPre](~/samples/snippets/csharp/VS_Snippets_Wpf/Adorners_ResizingAdorner/CSharp/ResizingAdorner.cs#fevisualoverridespre)]
 [!code-vb[Adorners_ResizingAdorner#FEVisualOverridesPre](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Adorners_ResizingAdorner/visualbasic/resizingadorner.vb#fevisualoverridespre)]  
[!code-csharp[Adorners_ResizingAdorner#FEVisualOverrides](~/samples/snippets/csharp/VS_Snippets_Wpf/Adorners_ResizingAdorner/CSharp/ResizingAdorner.cs#fevisualoverrides)]
[!code-vb[Adorners_ResizingAdorner#FEVisualOverrides](~/samples/snippets/visualbasic/VS_Snippets_Wpf/Adorners_ResizingAdorner/visualbasic/resizingadorner.vb#fevisualoverrides)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="26d05-1451">
            <para>Если ваш класс поддерживает несколько визуальный дочерний элемент в коллекцию дочерних элементов, переопределите это свойство, чтобы возвращать число элементов в этой коллекции. Это необходимо сделать, даже если сам объект коллекции возвращает счетчик. Логику макета элемента на уровне платформы WPF предполагает, что все элементы будут возвращать допустимое значение счетчика через их <see cref="P:System.Windows.FrameworkElement.VisualChildrenCount" /> свойство.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1451">
              <para>If your class supports more than one visual child in a child element collection, override this property to return the count of elements in that collection. You must do this even if the collection object itself returns a count. Element layout logic at the WPF framework level presumes that all elements will return a valid count through their <see cref="P:System.Windows.FrameworkElement.VisualChildrenCount" /> property.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public double Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance float64 Width" />
      <MemberSignature Language="DocId" Value="P:System.Windows.FrameworkElement.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Double" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property double Width { double get(); void set(double value); };" />
      <MemberSignature Language="F#" Value="member this.Width : double with get, set" Usage="System.Windows.FrameworkElement.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.LengthConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2">
          <AttributeName>System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-1452">Получение или установка ширины элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1452">Gets or sets the width of the element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="26d05-1453">Ширина элемента в [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1453">The width of the element, in [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)].</span>
          </span>
          <span data-ttu-id="26d05-1454">Значение по умолчанию — <see cref="F:System.Double.NaN" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1454">The default value is <see cref="F:System.Double.NaN" />.</span>
          </span>
          <span data-ttu-id="26d05-1455">Это значение должно быть не меньше 0,0.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1455">This value must be equal to or greater than 0.0.</span>
          </span>
          <span data-ttu-id="26d05-1456">Сведения о верхней границе см. в разделе "Примечания".</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1456">See Remarks for upper bound information.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="26d05-1457">Это один из трех свойств на <xref:System.Windows.FrameworkElement> , укажите сведения ширины.</span><span class="sxs-lookup"><span data-stu-id="26d05-1457">This is one of three properties on <xref:System.Windows.FrameworkElement> that specify width information.</span></span>  <span data-ttu-id="26d05-1458">Два других <xref:System.Windows.FrameworkElement.MinWidth%2A> и <xref:System.Windows.FrameworkElement.MaxWidth%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-1458">The other two are <xref:System.Windows.FrameworkElement.MinWidth%2A> and <xref:System.Windows.FrameworkElement.MaxWidth%2A>.</span></span>  <span data-ttu-id="26d05-1459">Если возникает конфликт между этими значениями, порядок приложения для определения фактическую ширину первого <xref:System.Windows.FrameworkElement.MinWidth%2A> необходимо обработать, затем <xref:System.Windows.FrameworkElement.MaxWidth%2A>и, наконец, если каждый из них выходят за границы, <xref:System.Windows.FrameworkElement.Width%2A>.</span><span class="sxs-lookup"><span data-stu-id="26d05-1459">If there is a conflict between these values, the order of application for actual width determination is first <xref:System.Windows.FrameworkElement.MinWidth%2A> must be honored, then <xref:System.Windows.FrameworkElement.MaxWidth%2A>, and finally if each of these are within bounds, <xref:System.Windows.FrameworkElement.Width%2A>.</span></span>  
  
 <span data-ttu-id="26d05-1460">Возвращаемое значение этого свойства всегда является таким же, как любое значение, которое было задано.</span><span class="sxs-lookup"><span data-stu-id="26d05-1460">The return value of this property is always the same as any value that was set to it.</span></span> <span data-ttu-id="26d05-1461">В свою очередь, значение <xref:System.Windows.FrameworkElement.ActualWidth%2A> могут отличаться.</span><span class="sxs-lookup"><span data-stu-id="26d05-1461">In contrast, the value of the <xref:System.Windows.FrameworkElement.ActualWidth%2A> may vary.</span></span> <span data-ttu-id="26d05-1462">Макет может отклонить предлагаемый размер для какой-либо причине.</span><span class="sxs-lookup"><span data-stu-id="26d05-1462">The layout may have rejected the suggested size for some reason.</span></span> <span data-ttu-id="26d05-1463">Кроме того, сама система структуры работает асинхронно относительно набор системных свойств <xref:System.Windows.FrameworkElement.Width%2A> и может не обработать конкретное изменение свойства размера еще.</span><span class="sxs-lookup"><span data-stu-id="26d05-1463">Also, the layout system itself works asynchronously relative to the property system set of <xref:System.Windows.FrameworkElement.Width%2A> and may not have processed that particular sizing property change yet.</span></span>  
  
 <span data-ttu-id="26d05-1464">В дополнение к приемлемым <xref:System.Double> значения, это свойство также может быть <xref:System.Double.NaN?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="26d05-1464">In addition to acceptable <xref:System.Double> values, this property can also be <xref:System.Double.NaN?displayProperty=nameWithType>.</span></span> <span data-ttu-id="26d05-1465">Это, как указать поведение автоматического изменения размеров.</span><span class="sxs-lookup"><span data-stu-id="26d05-1465">This is how you specify auto sizing behavior.</span></span> <span data-ttu-id="26d05-1466">В [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] значение в строку «Auto» (без учета регистра) чтобы включить автоматическое изменение размеров.</span><span class="sxs-lookup"><span data-stu-id="26d05-1466">In [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] you set the value to the string "Auto" (case insensitive) to enable the auto sizing behavior.</span></span> <span data-ttu-id="26d05-1467">Автоматическое изменение размеров предполагает, что элемент заполнит по ширине к нему.</span><span class="sxs-lookup"><span data-stu-id="26d05-1467">Auto sizing behavior implies that the element will fill the width available to it.</span></span> <span data-ttu-id="26d05-1468">Тем не менее, обратите внимание, что определенные элементы управления передают значения по умолчанию в их стили по умолчанию, которые отключают автоматическое изменение размеров, если не нужно специально включить ее.</span><span class="sxs-lookup"><span data-stu-id="26d05-1468">Note however that specific controls frequently supply default values in their default styles that will disable the auto sizing behavior unless it is specifically re-enabled.</span></span>  
  
 <span data-ttu-id="26d05-1469">В дополнение к проверке подлинности, имеется значение недетерминированные верхней границы для <xref:System.Windows.FrameworkElement.Width%2A> , обеспечивается системой макета (это очень много, размер которых превышает <xref:System.Single.MaxValue?displayProperty=nameWithType> но меньше, чем <xref:System.Double.MaxValue?displayProperty=nameWithType>).</span><span class="sxs-lookup"><span data-stu-id="26d05-1469">In addition to the validation check, there is a nondeterministic upper value bound for <xref:System.Windows.FrameworkElement.Width%2A> that is enforced by the layout system (this is a very large number, larger than <xref:System.Single.MaxValue?displayProperty=nameWithType> but smaller than <xref:System.Double.MaxValue?displayProperty=nameWithType>).</span></span> <span data-ttu-id="26d05-1470">Если вы превысите это ограничение, элемент не будет отображаться, и исключение не создается.</span><span class="sxs-lookup"><span data-stu-id="26d05-1470">If you exceed this bound, the element will not render, and no exception is thrown.</span></span> <span data-ttu-id="26d05-1471">Не устанавливайте <xref:System.Windows.FrameworkElement.Width%2A> значение значительно больше, чем максимальный размер любого возможного визуального дисплея, или может превысить эту недетерминированную верхнюю границу.</span><span class="sxs-lookup"><span data-stu-id="26d05-1471">Do not set <xref:System.Windows.FrameworkElement.Width%2A> to a value that is significantly larger than the maximum size of any possible visual display, or you may exceed this nondeterministic upper bound.</span></span>  
  
<a name="xamlAttributeUsage_Width"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="26d05-1472">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="26d05-1472">XAML Attribute Usage</span></span>  
  
```  
<object Width="double"/>  
- or –  
<object Width ="qualifiedDouble"/>  
- or -  
<object Width ="Auto"/>  
```  
  
<a name="xamlValues_Width"></a>   
## <a name="xaml-values"></a><span data-ttu-id="26d05-1473">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="26d05-1473">XAML Values</span></span>  
 <span data-ttu-id="26d05-1474">*double*</span><span class="sxs-lookup"><span data-stu-id="26d05-1474">*double*</span></span>  
 <xref:System.Double>  
  
 <span data-ttu-id="26d05-1475">Строковое представление <xref:System.Double> значение, равное или больше 0,0.</span><span class="sxs-lookup"><span data-stu-id="26d05-1475">String representation of a <xref:System.Double> value equal to or greater than 0.0.</span></span> <span data-ttu-id="26d05-1476">Сведения о верхней границе см. в разделе "Примечания".</span><span class="sxs-lookup"><span data-stu-id="26d05-1476">See Remarks for upper bound information.</span></span> <span data-ttu-id="26d05-1477">Это значение интерпретируется как [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] измерения.</span><span class="sxs-lookup"><span data-stu-id="26d05-1477">This value is interpreted as a [!INCLUDE[TLA#tla_dipixel](~/includes/tlasharptla-dipixel-md.md)] measurement.</span></span> <span data-ttu-id="26d05-1478">Строки не нужно явно указывать десятичных запятых.</span><span class="sxs-lookup"><span data-stu-id="26d05-1478">Strings need not explicitly include decimal points.</span></span> <span data-ttu-id="26d05-1479">Для экземпляра значение `1` приемлемо.</span><span class="sxs-lookup"><span data-stu-id="26d05-1479">For instance a value of `1` is acceptable.</span></span>  
  
 <span data-ttu-id="26d05-1480">*qualifiedDouble*</span><span class="sxs-lookup"><span data-stu-id="26d05-1480">*qualifiedDouble*</span></span>  
 <span data-ttu-id="26d05-1481">Объект *двойные* значение как описано выше, за которым следует один из следующих строк объявления единицы измерения: `px`, `in`, `cm`, `pt`.</span><span class="sxs-lookup"><span data-stu-id="26d05-1481">A *double* value as described above, followed by one of the following unit declaration strings: `px`, `in`, `cm`, `pt`.</span></span>  
  
 <span data-ttu-id="26d05-1482">`px` (по умолчанию) [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span><span class="sxs-lookup"><span data-stu-id="26d05-1482">`px` (default) is [!INCLUDE[TLA#tla_dipixel#plural](~/includes/tlasharptla-dipixelsharpplural-md.md)]</span></span>  
  
 <span data-ttu-id="26d05-1483">`in` дюймах; 1 in == 96 точек</span><span class="sxs-lookup"><span data-stu-id="26d05-1483">`in` is inches; 1in==96px</span></span>  
  
 <span data-ttu-id="26d05-1484">`cm` сантиметрах; 1см==(96/2,54) px</span><span class="sxs-lookup"><span data-stu-id="26d05-1484">`cm` is centimeters; 1cm==(96/2.54) px</span></span>  
  
 <span data-ttu-id="26d05-1485">`pt` точках; 1точка==(96/72) px</span><span class="sxs-lookup"><span data-stu-id="26d05-1485">`pt` is points; 1pt==(96/72) px</span></span>  
  
 `Auto`  
 <span data-ttu-id="26d05-1486">Включает автоматическое определение размера.</span><span class="sxs-lookup"><span data-stu-id="26d05-1486">Enables autosizing behavior.</span></span> <span data-ttu-id="26d05-1487">См. заметки.</span><span class="sxs-lookup"><span data-stu-id="26d05-1487">See Remarks.</span></span>  
  
<a name="dependencyPropertyInfo_Width"></a>   
## <a name="dependency-property-information"></a><span data-ttu-id="26d05-1488">Сведения о свойстве зависимостей</span><span class="sxs-lookup"><span data-stu-id="26d05-1488">Dependency Property Information</span></span>  
  
|||  
|-|-|  
|<span data-ttu-id="26d05-1489">Поле идентификатора</span><span class="sxs-lookup"><span data-stu-id="26d05-1489">Identifier field</span></span>|<xref:System.Windows.FrameworkElement.WidthProperty>|  
|<span data-ttu-id="26d05-1490">Значение свойства метаданных `true`</span><span class="sxs-lookup"><span data-stu-id="26d05-1490">Metadata properties set to `true`</span></span>|<xref:System.Windows.FrameworkPropertyMetadata.AffectsMeasure%2A>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WidthProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty WidthProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty WidthProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.FrameworkElement.WidthProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly WidthProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ WidthProperty;" />
      <MemberSignature Language="F#" Value=" staticval mutable WidthProperty : System.Windows.DependencyProperty" Usage="System.Windows.FrameworkElement.WidthProperty" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="26d05-1491">Идентифицирует свойство зависимостей <see cref="P:System.Windows.FrameworkElement.Width" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="26d05-1491">Identifies the <see cref="P:System.Windows.FrameworkElement.Width" /> dependency property.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>