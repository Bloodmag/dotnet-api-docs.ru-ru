<Type Name="Freezable" FullName="System.Windows.Freezable">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="12a1be02c542dfe0d4b2b31c8c4e0fbee60ca7d5" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37549385" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Freezable : System.Windows.DependencyObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit Freezable extends System.Windows.DependencyObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.Freezable" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Freezable&#xA;Inherits DependencyObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class Freezable abstract : System::Windows::DependencyObject" />
  <TypeSignature Language="F#" Value="type Freezable = class&#xA;    inherit DependencyObject" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.DependencyObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="ecfa5-101">Defines an object that has a modifiable state and a read-only (frozen) state.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ecfa5-101">Defines an object that has a modifiable state and a read-only (frozen) state.</span>
      </span>
      <span data-ttu-id="ecfa5-102">Classes that derive from <see cref="T:System.Windows.Freezable" /> provide detailed change notification, can be made immutable, and can clone themselves.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ecfa5-102">Classes that derive from <see cref="T:System.Windows.Freezable" /> provide detailed change notification, can be made immutable, and can clone themselves.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecfa5-103"><xref:System.Windows.Freezable> Класс предоставляет специальные функции, которые могут помочь повысить производительность приложений при работе с объектами, которые могут изменять или копировать.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-103">The <xref:System.Windows.Freezable> class provides special features that can help improve application performance when using objects that are expensive to modify or copy.</span></span> <span data-ttu-id="ecfa5-104">Примеры <xref:System.Windows.Freezable> объектам относятся следующие:</span><span class="sxs-lookup"><span data-stu-id="ecfa5-104">Examples of <xref:System.Windows.Freezable> objects include the following:</span></span>  
  
-   <xref:System.Windows.Media.Brush>  
  
-   <xref:System.Windows.Media.Pen>  
  
-   <xref:System.Windows.Media.Geometry>  
  
-   <xref:System.Windows.Media.Transform>  
  
-   <xref:System.Windows.Media.Animation.AnimationTimeline>  
  
## <a name="deriving-from-freezable"></a><span data-ttu-id="ecfa5-105">Наследование от класса Freezable</span><span class="sxs-lookup"><span data-stu-id="ecfa5-105">Deriving From Freezable</span></span>  
 <span data-ttu-id="ecfa5-106">Класс, производный от <xref:System.Windows.Freezable> поддерживает следующие функции:</span><span class="sxs-lookup"><span data-stu-id="ecfa5-106">A class that derives from <xref:System.Windows.Freezable> gains the following features:</span></span>  
  
-   <span data-ttu-id="ecfa5-107">Особые состояния: состояние только для чтения (зафиксированное) и состояние для записи.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-107">Special states: a read-only (frozen) state and a writable state.</span></span>  
  
-   <span data-ttu-id="ecfa5-108">Потокобезопасность: зафиксированный <xref:System.Windows.Freezable> объект может использоваться несколькими потоками.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-108">Thread safety: a frozen <xref:System.Windows.Freezable> object can be shared across threads.</span></span>  
  
-   <span data-ttu-id="ecfa5-109">Подробные уведомления об изменениях: в отличие от других <xref:System.Windows.DependencyObject> объектов, <xref:System.Windows.Freezable> объект предоставляет уведомления об изменениях, при изменении значений вложенных свойств.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-109">Detailed change notification: Unlike other <xref:System.Windows.DependencyObject> objects, a <xref:System.Windows.Freezable> object provides change notifications when sub-property values change.</span></span>  
  
-   <span data-ttu-id="ecfa5-110">Удобное клонирование: Freezable класс уже реализовал несколько методов, которые обеспечивают большую глубину клонирования.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-110">Easy cloning: the Freezable class has already implemented several methods that produce deep clones.</span></span>  
  
 <span data-ttu-id="ecfa5-111">Сведения об использовании и создании собственных <xref:System.Windows.Freezable> объектов, см. в разделе [Freezable Общие сведения об объектах](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ecfa5-111">For information on using and creating your own <xref:System.Windows.Freezable> objects, see [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="ecfa5-112">Любые открытые <see langword="static" /> члены этого типа являются потокобезопасными.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ecfa5-112">Any public <see langword="static" /> members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="ecfa5-113">Потокобезопасность членов экземпляров не гарантируется.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ecfa5-113">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="ecfa5-114">Когда <see cref="P:System.Windows.Freezable.IsFrozen" /> свойство <see langword="false" />, <see cref="T:System.Windows.Freezable" /> объектов может осуществляться только из потока, в котором он был создан.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ecfa5-114">When the <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="false" />, a <see cref="T:System.Windows.Freezable" /> object can be accessed only from the thread on which it was created.</span>
      </span>
      <span data-ttu-id="ecfa5-115">Попытка доступа к нему из другой поток вызывает <see cref="T:System.InvalidOperationException" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ecfa5-115">Attempting to access it from another thread throws an <see cref="T:System.InvalidOperationException" />.</span>
      </span>
      <span data-ttu-id="ecfa5-116">
        <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> И <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> методы предоставляют поддержку для маршалинга в нужный поток.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ecfa5-116">The <see cref="Overload:System.Windows.Threading.Dispatcher.Invoke" /> and <see cref="Overload:System.Windows.Threading.Dispatcher.BeginInvoke" /> methods provide support for marshalling to the correct thread.</span>
      </span>
      <span data-ttu-id="ecfa5-117">При их <see cref="P:System.Windows.Freezable.IsFrozen" /> свойство <see langword="true" />, <see cref="T:System.Windows.Freezable" /> объекты доступны из любого потока.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ecfa5-117">When their <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true" />, <see cref="T:System.Windows.Freezable" /> objects are free-threaded.</span>
      </span>
      <span data-ttu-id="ecfa5-118">Дополнительные сведения см. в разделе [Freezable Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md) объектов.</span>
      <span class="sxs-lookup">
        <span data-stu-id="ecfa5-118">For more information, see [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span>
      </span>
    </threadsafe>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Freezable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Freezable();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ecfa5-119">Initializes a new instance of a <see cref="T:System.Windows.Freezable" /> derived class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-119">Initializes a new instance of a <see cref="T:System.Windows.Freezable" /> derived class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecfa5-120">Это защищенный конструктор абстрактного класса.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-120">This is the protected-accessibility constructor of an abstract class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanFreeze">
      <MemberSignature Language="C#" Value="public bool CanFreeze { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanFreeze" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Freezable.CanFreeze" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CanFreeze As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CanFreeze { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanFreeze : bool" Usage="System.Windows.Freezable.CanFreeze" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ecfa5-121">Gets a value that indicates whether the object can be made unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-121">Gets a value that indicates whether the object can be made unmodifiable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ecfa5-122">
            <see langword="true" /> Если текущий объект можно сделать нередактируемым, или уже является неизменяемым; в противном случае <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-122">
              <see langword="true" /> if the current object can be made unmodifiable or is already unmodifiable; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ecfa5-123">
            <para>В этой реализации метода используется <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> метод с <paramref name="isChecking" /> присвоено <see langword="true" /> для определения ли <see cref="T:System.Windows.Freezable" /> может быть сделан неизменяемым. Чтобы изменить способ, это свойство работает в производном классе, переопределять <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> метод.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-123">
              <para>This method implementation uses the <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> method with <paramref name="isChecking" /> set to <see langword="true" /> to determine whether a <see cref="T:System.Windows.Freezable" /> can be made unmodifiable. To modify the way this property behaves in a derived class, override the <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> method.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Changed">
      <MemberSignature Language="C#" Value="public event EventHandler Changed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Changed" />
      <MemberSignature Language="DocId" Value="E:System.Windows.Freezable.Changed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Changed As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ Changed;" />
      <MemberSignature Language="F#" Value="member this.Changed : EventHandler " Usage="member this.Changed : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ecfa5-124">Occurs when the <see cref="T:System.Windows.Freezable" /> or an object it contains is modified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-124">Occurs when the <see cref="T:System.Windows.Freezable" /> or an object it contains is modified.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecfa5-125">При попытке добавления или удаления обработчиков событий в том случае, если текущий объект не является изменяемым (когда <xref:System.Windows.Freezable.IsFrozen%2A> свойство `true`), создается исключение.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-125">If you attempt to add or remove event handlers when the current object is not modifiable (when the <xref:System.Windows.Freezable.IsFrozen%2A> property is `true`), an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public System.Windows.Freezable Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Freezable Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Freezable ^ Clone();" />
      <MemberSignature Language="F#" Value="member this.Clone : unit -&gt; System.Windows.Freezable" Usage="freezable.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ecfa5-126">Creates a modifiable clone of the <see cref="T:System.Windows.Freezable" />, making deep copies of the object's values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-126">Creates a modifiable clone of the <see cref="T:System.Windows.Freezable" />, making deep copies of the object's values.</span>
          </span>
          <span data-ttu-id="ecfa5-127">When copying the object's dependency properties, this method copies expressions (which might no longer resolve) but not animations or their current values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-127">When copying the object's dependency properties, this method copies expressions (which might no longer resolve) but not animations or their current values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ecfa5-128">A modifiable clone of the current object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-128">A modifiable clone of the current object.</span>
          </span>
          <span data-ttu-id="ecfa5-129">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true." /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-129">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true." /></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecfa5-130"><xref:System.Windows.Freezable.Clone%2A> И <xref:System.Windows.Freezable.CloneCurrentValue%2A> методы производят изменяемые клоны замороженный <xref:System.Windows.Freezable> объектов (методы также клонировать <xref:System.Windows.Freezable> объекты, которые не зафиксированы).</span><span class="sxs-lookup"><span data-stu-id="ecfa5-130">The <xref:System.Windows.Freezable.Clone%2A> and <xref:System.Windows.Freezable.CloneCurrentValue%2A> methods produce modifiable clones of frozen <xref:System.Windows.Freezable> objects (the methods also clone <xref:System.Windows.Freezable> objects that are not frozen).</span></span> <span data-ttu-id="ecfa5-131">Копия является фактически глубокую копию текущего объекта.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-131">The clone is effectively a deep copy of the current object.</span></span>  
  
 <span data-ttu-id="ecfa5-132">В следующей таблице перечислены различия между <xref:System.Windows.Freezable.Clone%2A> и <xref:System.Windows.Freezable.CloneCurrentValue%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-132">The following table summarizes the differences between the <xref:System.Windows.Freezable.Clone%2A> and <xref:System.Windows.Freezable.CloneCurrentValue%2A> methods.</span></span>  
  
|<span data-ttu-id="ecfa5-133">Действие</span><span class="sxs-lookup"><span data-stu-id="ecfa5-133">Action</span></span>|<span data-ttu-id="ecfa5-134">Поведение метода клона</span><span class="sxs-lookup"><span data-stu-id="ecfa5-134">Clone method behavior</span></span>|<span data-ttu-id="ecfa5-135">Поведение метода CloneCurrentValue</span><span class="sxs-lookup"><span data-stu-id="ecfa5-135">CloneCurrentValue method behavior</span></span>|  
|------------|---------------------------|---------------------------------------|  
|<span data-ttu-id="ecfa5-136">Копирует свойство зависимостей, которое содержит выражение</span><span class="sxs-lookup"><span data-stu-id="ecfa5-136">Copying a dependency property that has an expression</span></span>|<span data-ttu-id="ecfa5-137">Выражение копируется, но могут уже не быть разрешимыми.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-137">The expression is copied, but might no longer resolve.</span></span> <span data-ttu-id="ecfa5-138">Дополнительные сведения см. в разделе [Общие сведения об объектах класса Freezable](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ecfa5-138">For more information, see [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span></span>|<span data-ttu-id="ecfa5-139">Копируется текущее значение выражения, но не само выражение.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-139">The current value of the expression is copied, but not the expression itself.</span></span>|  
|<span data-ttu-id="ecfa5-140">Копирование также анимированными свойствами зависимостей</span><span class="sxs-lookup"><span data-stu-id="ecfa5-140">Copying an animated dependency property</span></span>|<span data-ttu-id="ecfa5-141">Копируется базовое значение свойства (не анимационные).</span><span class="sxs-lookup"><span data-stu-id="ecfa5-141">The property's base (non-animated) value is copied.</span></span> <span data-ttu-id="ecfa5-142">Анимации не копируются.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-142">Animations are not copied.</span></span>|<span data-ttu-id="ecfa5-143">Копируется текущее анимированное значение свойства.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-143">The property's current animated value is copied.</span></span> <span data-ttu-id="ecfa5-144">Анимации не копируются.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-144">Animations are not copied.</span></span>|  
  
 <span data-ttu-id="ecfa5-145">Обратите внимание, что неопределенные свойства не копируются.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-145">Note that unset properties are not copied.</span></span> <span data-ttu-id="ecfa5-146">Если не задано свойство имеет значение по умолчанию, который является зафиксированного <xref:System.Windows.Freezable>, что значение свойства остается фиксированным, в противном случае редактируется.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-146">If an unset property has a default value that is a frozen <xref:System.Windows.Freezable>, that property value remains frozen in the otherwise modifiable clone.</span></span>  
  
## <a name="move-a-freezable-between-threads"></a><span data-ttu-id="ecfa5-147">Переместить Freezable между потоками</span><span class="sxs-lookup"><span data-stu-id="ecfa5-147">Move a Freezable Between Threads</span></span>  
 <span data-ttu-id="ecfa5-148">Этот метод может быть полезен при перемещении <xref:System.Windows.Freezable> между потоками.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-148">This method can be useful for moving a <xref:System.Windows.Freezable> between threads.</span></span> <span data-ttu-id="ecfa5-149">Во-первых, <xref:System.Windows.Freezable> нередактируемым, вызвав его <xref:System.Windows.Freezable.Freeze%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-149">First, make the <xref:System.Windows.Freezable> unmodifiable by calling its <xref:System.Windows.Freezable.Freeze%2A> method.</span></span> <span data-ttu-id="ecfa5-150">Теперь можно получить доступ к другим потоком <xref:System.Windows.Freezable> и сделать локальный <xref:System.Windows.Freezable.Clone%2A> , можно получить доступ.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-150">Now another thread can access the <xref:System.Windows.Freezable> and make a local <xref:System.Windows.Freezable.Clone%2A> that it can access.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ecfa5-151">
            <para>Этот метод использует <see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" /> для создания клона. Чтобы изменить поведение этого метода в производном классе, переопределять <see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" /> метод.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-151">
              <para>This method uses <see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" /> to produce the clone. To modify the behavior of this method in a derived class, override the <see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValue" />
        <altmember cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="CloneCore">
      <MemberSignature Language="C#" Value="protected virtual void CloneCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CloneCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CloneCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CloneCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member CloneCore : System.Windows.Freezable -&gt; unit&#xA;override this.CloneCore : System.Windows.Freezable -&gt; unit" Usage="freezable.CloneCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">
          <span data-ttu-id="ecfa5-152">The object to clone.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-152">The object to clone.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecfa5-153">Makes the instance a clone (deep copy) of the specified <see cref="T:System.Windows.Freezable" /> using base (non-animated) property values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-153">Makes the instance a clone (deep copy) of the specified <see cref="T:System.Windows.Freezable" /> using base (non-animated) property values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecfa5-154">Этот метод вызывается <xref:System.Windows.Freezable.Clone%2A> метода и не должен вызываться непосредственно из программного кода, за исключением при вызове базовой реализации при переопределении данного метода.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-154">This method is called by the <xref:System.Windows.Freezable.Clone%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="ecfa5-155">Чтобы создать изменяемая копия текущего объекта, вызовите <xref:System.Windows.Freezable.Clone%2A> вместо прямого вызова этого метода.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-155">To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.Clone%2A> instead of calling this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ecfa5-156">
            <para>Если вы наследуете от <see cref="T:System.Windows.Freezable" />, может потребоваться переопределить этот метод. Причины для переопределения включают следующее:-производный класс включает данные, которые не предоставляются через свойства зависимостей.  -Производного класса необходимо выполнить дополнительную инициализацию работы, которая не может быть выполнен, просто переопределив метод <see cref="M:System.Windows.Freezable.CreateInstanceCore" />. Например, это применимо, если производный класс реализует <see cref="T:System.ComponentModel.ISupportInitialize" />.  Классы, в которых хранятся все свои данные в свойствах зависимости и, не обязательно для выполнения дополнительной инициализации не требуется переопределять <see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />.  Очень важно, что все реализации вызывать базовую реализацию этого метода. Реализации должны выполнять работу, выполняемую в реализации по умолчанию не только. Реализация по умолчанию делает глубокие копии все записи, локально заданного свойства, включая внутренние выражения.  Если объект имеет свойства зависимостей с привязкой к данным, выражения копируются, но могут уже не быть разрешимыми. Дополнительные сведения об объектах клонирования привязкой к данным см. в разделе [Freezable Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md) объектов. Если объект имеет анимированные свойства зависимостей, копируется базовое значение (не анимационные) из этих свойств. Анимации не копируются.  Обратите внимание, что неопределенные свойства не копируются, а также доступны только для чтения. Если такое свойство имеет значение по умолчанию, который является зафиксированного <see cref="T:System.Windows.Freezable" />, что значение свойства остается фиксированным, в противном случае редактируется.  В следующем списке перечислены ожидаемое поведение для этого метода:-создается копия содержит копии всех <see cref="T:System.Windows.Freezable" /> вложенные объекты.  -Свойства unset, только для чтения, не копируются.  -Выражения копируются.  -Ни один из этих вложенных объектов фиксируются при создании.  -Сама копия не зафиксирован.  -Анимации не копируются.  -Только базовые значения свойств являются копируются, а не текущие анимированные значения.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-156">
              <para>If you derive from <see cref="T:System.Windows.Freezable" />, you may need to override this method. Reasons to override include the following:  -   Your derived class has data that is not exposed via dependency properties.  -   Your derived class must perform extra initialization work that cannot be accomplished by simply overriding <see cref="M:System.Windows.Freezable.CreateInstanceCore" />. For example, this applies if your derived class implements <see cref="T:System.ComponentModel.ISupportInitialize" />.  Classes that store all their data in dependency properties and that do not need to perform extra initialization work do not need to override <see cref="M:System.Windows.Freezable.CloneCore(System.Windows.Freezable)" />.  It is essential that all implementations call the base implementation of this method. Implementations should only perform work that is not performed by the default implementation. The default implementation makes deep copies of all writable, locally set properties, including internal expressions.  If the object has data-bound dependency properties, the expressions are copied but might no longer resolve. For more information about cloning data-bound objects, see [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md). If the object has animated dependency properties, the base (non-animated) value of those properties is copied. Animations are not copied.  Note that unset properties are not copied, nor are read-only properties. If such a property has a default value that is a frozen <see cref="T:System.Windows.Freezable" />, that property value remains frozen in the otherwise modifiable clone.  The following list summarizes the expected behavior for this method:  -   The copy produced contains copies of all <see cref="T:System.Windows.Freezable" /> sub-objects.  -   Unset and read-only properties are not copied.  -   Expressions are copied.  -   None of these sub-objects are frozen on creation.  -   The copy itself is not frozen.  -   Animations are not copied.  -   Only property base values are copied, not current animated values.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.Clone" />
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValue">
      <MemberSignature Language="C#" Value="public System.Windows.Freezable CloneCurrentValue ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Freezable CloneCurrentValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.CloneCurrentValue" />
      <MemberSignature Language="VB.NET" Value="Public Function CloneCurrentValue () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Freezable ^ CloneCurrentValue();" />
      <MemberSignature Language="F#" Value="member this.CloneCurrentValue : unit -&gt; System.Windows.Freezable" Usage="freezable.CloneCurrentValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ecfa5-157">Creates a modifiable clone (deep copy) of the <see cref="T:System.Windows.Freezable" /> using its current values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-157">Creates a modifiable clone (deep copy) of the <see cref="T:System.Windows.Freezable" /> using its current values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ecfa5-158">A modifiable clone of the current object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-158">A modifiable clone of the current object.</span>
          </span>
          <span data-ttu-id="ecfa5-159">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true." /></span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-159">The cloned object's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="false" /> even if the source's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is <see langword="true." /></span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecfa5-160"><xref:System.Windows.Freezable.Clone%2A> И <xref:System.Windows.Freezable.CloneCurrentValue%2A> методы производят изменяемые клоны замороженный <xref:System.Windows.Freezable> объектов (методы также клонировать <xref:System.Windows.Freezable> объекты, которые не зафиксированы).</span><span class="sxs-lookup"><span data-stu-id="ecfa5-160">The <xref:System.Windows.Freezable.Clone%2A> and <xref:System.Windows.Freezable.CloneCurrentValue%2A> methods produce modifiable clones of frozen <xref:System.Windows.Freezable> objects (the methods also clone <xref:System.Windows.Freezable> objects that are not frozen).</span></span> <span data-ttu-id="ecfa5-161">Копия является фактически глубокую копию текущего объекта.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-161">The clone is effectively a deep copy of the current object.</span></span>  
  
 <span data-ttu-id="ecfa5-162">В следующей таблице перечислены различия между <xref:System.Windows.Freezable.Clone%2A> и <xref:System.Windows.Freezable.CloneCurrentValue%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-162">The following table summarizes the differences between the <xref:System.Windows.Freezable.Clone%2A> and <xref:System.Windows.Freezable.CloneCurrentValue%2A> methods.</span></span>  
  
|<span data-ttu-id="ecfa5-163">Действие</span><span class="sxs-lookup"><span data-stu-id="ecfa5-163">Action</span></span>|<span data-ttu-id="ecfa5-164">Поведение метода клона</span><span class="sxs-lookup"><span data-stu-id="ecfa5-164">Clone method behavior</span></span>|<span data-ttu-id="ecfa5-165">Поведение метода CloneCurrentValue</span><span class="sxs-lookup"><span data-stu-id="ecfa5-165">CloneCurrentValue method behavior</span></span>|  
|------------|---------------------------|---------------------------------------|  
|<span data-ttu-id="ecfa5-166">Копирует свойство зависимостей, которое содержит выражение</span><span class="sxs-lookup"><span data-stu-id="ecfa5-166">Copying a dependency property that has an expression</span></span>|<span data-ttu-id="ecfa5-167">Выражение копируется, но могут уже не быть разрешимыми.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-167">The expression is copied, but might no longer resolve.</span></span> <span data-ttu-id="ecfa5-168">Дополнительные сведения см. в разделе [Общие сведения об объектах класса Freezable](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span><span class="sxs-lookup"><span data-stu-id="ecfa5-168">For more information, see [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md).</span></span>|<span data-ttu-id="ecfa5-169">Копируется текущее значение выражения, но не само выражение.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-169">The current value of the expression is copied, but not the expression itself.</span></span>|  
|<span data-ttu-id="ecfa5-170">Копирование также анимированными свойствами зависимостей</span><span class="sxs-lookup"><span data-stu-id="ecfa5-170">Copying an animated dependency property</span></span>|<span data-ttu-id="ecfa5-171">Копируется базовое значение свойства (не анимационные).</span><span class="sxs-lookup"><span data-stu-id="ecfa5-171">The property's base (non-animated) value is copied.</span></span> <span data-ttu-id="ecfa5-172">Анимации не копируются.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-172">Animations are not copied.</span></span>|<span data-ttu-id="ecfa5-173">Копируется текущее анимированное значение свойства.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-173">The property's current animated value is copied.</span></span> <span data-ttu-id="ecfa5-174">Анимации не копируются.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-174">Animations are not copied.</span></span>|  
  
 <span data-ttu-id="ecfa5-175">Обратите внимание, что неопределенные свойства не копируются.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-175">Note that unset properties are not copied.</span></span> <span data-ttu-id="ecfa5-176">Если не задано свойство имеет значение по умолчанию, который является зафиксированного <xref:System.Windows.Freezable>, что значение свойства остается фиксированным, в противном случае редактируется.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-176">If an unset property has a default value that is a frozen <xref:System.Windows.Freezable>, that property value remains frozen in the otherwise modifiable clone.</span></span>  
  
## <a name="move-a-freezable-between-threads"></a><span data-ttu-id="ecfa5-177">Переместить Freezable между потоками</span><span class="sxs-lookup"><span data-stu-id="ecfa5-177">Move a Freezable Between Threads</span></span>  
 <span data-ttu-id="ecfa5-178">Этот метод может быть полезен при перемещении <xref:System.Windows.Freezable> между потоками.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-178">This method can be useful for moving a <xref:System.Windows.Freezable> between threads.</span></span> <span data-ttu-id="ecfa5-179">Во-первых, <xref:System.Windows.Freezable> нередактируемым, используя его <xref:System.Windows.Freezable.Freeze%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-179">First, make the <xref:System.Windows.Freezable> unmodifiable by using its <xref:System.Windows.Freezable.Freeze%2A> method.</span></span> <span data-ttu-id="ecfa5-180">Теперь можно получить доступ к другим потоком <xref:System.Windows.Freezable> и локального клона, можно получить доступ.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-180">Now another thread can access the <xref:System.Windows.Freezable> and make a local clone that it can access.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ecfa5-181">
            <para>Этот метод использует <see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" /> метод для создания клона; <see cref="T:System.Windows.Freezable" /> разработчиков, переопределить <see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" /> необходимо убедиться, что копия не является фиксированной при создании.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-181">
              <para>This method uses the <see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" /> method to produce the clone; <see cref="T:System.Windows.Freezable" /> implementers who override <see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" /> must ensure that the copy is not frozen on creation.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="CloneCurrentValueCore">
      <MemberSignature Language="C#" Value="protected virtual void CloneCurrentValueCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CloneCurrentValueCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CloneCurrentValueCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CloneCurrentValueCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member CloneCurrentValueCore : System.Windows.Freezable -&gt; unit&#xA;override this.CloneCurrentValueCore : System.Windows.Freezable -&gt; unit" Usage="freezable.CloneCurrentValueCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">
          <span data-ttu-id="ecfa5-182">The <see cref="T:System.Windows.Freezable" /> to be cloned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-182">The <see cref="T:System.Windows.Freezable" /> to be cloned.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecfa5-183">Makes the instance a modifiable clone (deep copy) of the specified <see cref="T:System.Windows.Freezable" /> using current property values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-183">Makes the instance a modifiable clone (deep copy) of the specified <see cref="T:System.Windows.Freezable" /> using current property values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecfa5-184">Этот метод вызывается <xref:System.Windows.Freezable.CloneCurrentValue%2A> метода и не должен вызываться непосредственно из программного кода, за исключением при вызове базовой реализации при переопределении данного метода.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-184">This method is called by the <xref:System.Windows.Freezable.CloneCurrentValue%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="ecfa5-185">Чтобы создать изменяемая копия текущего объекта, вызовите <xref:System.Windows.Freezable.CloneCurrentValue%2A> вместо прямого вызова этого метода.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-185">To create a modifiable copy of the current object, call <xref:System.Windows.Freezable.CloneCurrentValue%2A> instead of calling this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ecfa5-186">
            <para>Если вы наследуете от <see cref="T:System.Windows.Freezable" />, может потребоваться переопределить этот метод. Причины для переопределения включают следующее:-производный класс включает данные, которые не предоставляются через свойства зависимостей.  -Производного класса необходимо выполнить дополнительную инициализацию работы, которая не может быть выполнен, просто переопределив метод <see cref="M:System.Windows.Freezable.CreateInstanceCore" />. Например, это применимо, если производный класс реализует <see cref="T:System.ComponentModel.ISupportInitialize" />.  Классы, в которых хранятся все свои данные в свойствах зависимости и, не обязательно для выполнения дополнительной инициализации не требуется переопределять <see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />.  Очень важно, что все реализации вызывать базовую реализацию этого метода. Реализации должны выполнять работу, выполняемую в реализации по умолчанию не только. Реализация по умолчанию делает глубокие копии все записи, локально заданного свойства. Если объект содержит свойств зависимостей с помощью выражения (например, привязка данных), но не само выражение копируется текущее значение выражения.  Если объект имеет анимированные свойства зависимостей, копируется текущее анимированное значение этих свойств, но не сами анимации.  Обратите внимание, что неопределенные свойства не копируются, а также доступны только для чтения. Если такое свойство имеет значение по умолчанию, который является зафиксированного <see cref="T:System.Windows.Freezable" />, что значение свойства остается фиксированным, в противном случае редактируется.  В следующем списке перечислены ожидаемое поведение для этого метода.  — Копирование созданных содержит копии всех <see cref="T:System.Windows.Freezable" /> вложенные объекты.  -Свойства unset, только для чтения, не копируются.  — Если свойство анимируется, его текущее значение копируется, но не сама анимация.  -Ни один из этих вложенных объектов фиксируются при создании.  -Сама копия не зафиксирован.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-186">
              <para>If you derive from <see cref="T:System.Windows.Freezable" />, you may need to override this method. Reasons to override include the following:  -   Your derived class has data that is not exposed via dependency properties.  -   Your derived class must perform extra initialization work that cannot be accomplished by simply overriding <see cref="M:System.Windows.Freezable.CreateInstanceCore" />. For example, this applies if your derived class implements <see cref="T:System.ComponentModel.ISupportInitialize" />.  Classes that store all their data in dependency properties and that do not need to perform extra initialization work do not need to override <see cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />.  It is essential that all implementations call the base implementation of this method. Implementations should only perform work that is not performed by the default implementation. The default implementation makes deep copies of all writable, locally set properties. If the object contains dependency properties with expressions (such as a data binding), the current value of the expression is copied but not the expression itself.  If the object has animated dependency properties, the current animated value of those properties is copied, but the animations are not.  Note that unset properties are not copied, nor are read-only properties. If such a property has a default value that is a frozen <see cref="T:System.Windows.Freezable" />, that property value remains frozen in the otherwise modifiable clone.  The following list summarizes the expected behavior for this method.  -   The copy produced contains copies of all <see cref="T:System.Windows.Freezable" /> sub-objects.  -   Unset and read-only properties are not copied.  -   If a property is animated, its current value is copied, but the animation itself is not.  -   None of these sub-objects are frozen on creation.  -   The copy itself is not frozen.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValue" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="protected System.Windows.Freezable CreateInstance ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Windows.Freezable CreateInstance() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.CreateInstance" />
      <MemberSignature Language="VB.NET" Value="Protected Function CreateInstance () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Windows::Freezable ^ CreateInstance();" />
      <MemberSignature Language="F#" Value="member this.CreateInstance : unit -&gt; System.Windows.Freezable" Usage="freezable.CreateInstance " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ecfa5-187">Initializes a new instance of the <see cref="T:System.Windows.Freezable" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-187">Initializes a new instance of the <see cref="T:System.Windows.Freezable" /> class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ecfa5-188">The new instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-188">The new instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecfa5-189">Это защищенный метод, и фактические реализации отдельных объектов для поведения зависят от переопределения <xref:System.Windows.Freezable.CreateInstanceCore%2A> метод, который внутренне вызывает этот метод.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-189">This is a protected method, and the actual object-specific implementations for the behavior are dependent on the override implementation of the <xref:System.Windows.Freezable.CreateInstanceCore%2A> method, which this method calls internally.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Freezable.CreateInstanceCore" />
      </Docs>
    </Member>
    <Member MemberName="CreateInstanceCore">
      <MemberSignature Language="C#" Value="protected abstract System.Windows.Freezable CreateInstanceCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Freezable CreateInstanceCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.CreateInstanceCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function CreateInstanceCore () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Windows::Freezable ^ CreateInstanceCore();" />
      <MemberSignature Language="F#" Value="abstract member CreateInstanceCore : unit -&gt; System.Windows.Freezable" Usage="freezable.CreateInstanceCore " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ecfa5-190">When implemented in a derived class, creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-190">When implemented in a derived class, creates a new instance of the <see cref="T:System.Windows.Freezable" /> derived class.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ecfa5-191">The new instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-191">The new instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecfa5-192">Не вызывайте этот метод напрямую (за исключением случаев вызова базового метода в реализации).</span><span class="sxs-lookup"><span data-stu-id="ecfa5-192">Do not call this method directly (except when calling base in an implementation).</span></span> <span data-ttu-id="ecfa5-193">Этот метод вызывается функцией <xref:System.Windows.Freezable.CreateInstance%2A> метод всякий раз, когда новый экземпляр класса <xref:System.Windows.Freezable> создается.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-193">This method is called internally by the <xref:System.Windows.Freezable.CreateInstance%2A> method whenever a new instance of the <xref:System.Windows.Freezable> is created.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ecfa5-194">Пример типичной реализации <xref:System.Windows.Freezable.CreateInstanceCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-194">The following example shows a typical implementation of <xref:System.Windows.Freezable.CreateInstanceCore%2A>.</span></span>  
  
 [!code-csharp[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/csharp/VS_Snippets_Wpf/freezablesample_procedural/CSharp/freezablesample.cs#createinstancecoreexample)]
 [!code-vb[freezablesample_procedural#CreateInstanceCoreExample](~/samples/snippets/visualbasic/VS_Snippets_Wpf/freezablesample_procedural/visualbasic/freezablesample.vb#createinstancecoreexample)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ecfa5-195">
            <para>Каждый <see cref="T:System.Windows.Freezable" /> производный класс должен реализовывать этот метод. Типичная реализация — это просто вызов конструктора по умолчанию и возвращается результат.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-195">
              <para>Every <see cref="T:System.Windows.Freezable" /> derived class must implement this method. A typical implementation is to simply call the default constructor and return the result.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.CreateInstance" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Freeze">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ecfa5-196">Makes a <see cref="T:System.Windows.Freezable" /> object unmodifiable and sets its <see cref="P:System.Windows.Freezable.IsFrozen" /> property to <see langword="true" />, or tests whether a <see cref="T:System.Windows.Freezable" /> object can be made unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-196">Makes a <see cref="T:System.Windows.Freezable" /> object unmodifiable and sets its <see cref="P:System.Windows.Freezable.IsFrozen" /> property to <see langword="true" />, or tests whether a <see cref="T:System.Windows.Freezable" /> object can be made unmodifiable.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Freeze">
      <MemberSignature Language="C#" Value="public void Freeze ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Freeze() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.Freeze" />
      <MemberSignature Language="VB.NET" Value="Public Sub Freeze ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Freeze();" />
      <MemberSignature Language="F#" Value="member this.Freeze : unit -&gt; unit" Usage="freezable.Freeze " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ecfa5-197">Makes the current object unmodifiable and sets its <see cref="P:System.Windows.Freezable.IsFrozen" /> property to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-197">Makes the current object unmodifiable and sets its <see cref="P:System.Windows.Freezable.IsFrozen" /> property to <see langword="true" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecfa5-198">Чтобы защититься от <xref:System.InvalidOperationException> при вызове этого метода, проверьте <xref:System.Windows.Freezable.CanFreeze%2A> свойства, чтобы определить ли <xref:System.Windows.Freezable> может быть сделан неизменяемым перед вызовом этого метода.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-198">To avoid the possibility of an <xref:System.InvalidOperationException> when calling this method, check the <xref:System.Windows.Freezable.CanFreeze%2A> property to determine whether the <xref:System.Windows.Freezable> can be made unmodifiable before calling this method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ecfa5-199">The <see cref="T:System.Windows.Freezable" /> cannot be made unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-199">The <see cref="T:System.Windows.Freezable" /> cannot be made unmodifiable.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="ecfa5-200">
            <para>Этот метод использует <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> метод для приготовления <see cref="T:System.Windows.Freezable" /> неизменяемым. Чтобы изменить блокированием, переопределить <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> метод.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-200">
              <para>This method uses the <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> method to make the <see cref="T:System.Windows.Freezable" /> unmodifiable. To modify freezing behavior, override the <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="Freeze">
      <MemberSignature Language="C#" Value="protected internal static bool Freeze (System.Windows.Freezable freezable, bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblystatic hidebysig bool Freeze(class System.Windows.Freezable freezable, bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; static bool Freeze(System::Windows::Freezable ^ freezable, bool isChecking);" />
      <MemberSignature Language="F#" Value="static member Freeze : System.Windows.Freezable * bool -&gt; bool" Usage="System.Windows.Freezable.Freeze (freezable, isChecking)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="freezable" Type="System.Windows.Freezable" />
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="freezable">
          <span data-ttu-id="ecfa5-201">The object to check or make unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-201">The object to check or make unmodifiable.</span>
          </span>
          <span data-ttu-id="ecfa5-202">If <c>isChecking</c> is <see langword="true" />, the object is checked to determine whether it can be made unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-202">If <c>isChecking</c> is <see langword="true" />, the object is checked to determine whether it can be made unmodifiable.</span>
          </span>
          <span data-ttu-id="ecfa5-203">If <c>isChecking</c> is <see langword="false" />, the object is made unmodifiable, if possible.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-203">If <c>isChecking</c> is <see langword="false" />, the object is made unmodifiable, if possible.</span>
          </span>
        </param>
        <param name="isChecking">
          <span data-ttu-id="ecfa5-204">
            <see langword="true" /> to return an indication of whether the object can be frozen (without actually freezing it); <see langword="false" /> to actually freeze the object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-204">
              <see langword="true" /> to return an indication of whether the object can be frozen (without actually freezing it); <see langword="false" /> to actually freeze the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecfa5-205">If the <paramref name="isChecking" /> parameter is <see langword="true" />, this method indicates whether the specified <see cref="T:System.Windows.Freezable" /> can be made unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-205">If the <paramref name="isChecking" /> parameter is <see langword="true" />, this method indicates whether the specified <see cref="T:System.Windows.Freezable" /> can be made unmodifiable.</span>
          </span>
          <span data-ttu-id="ecfa5-206">If the <paramref name="isChecking" /> parameter is <see langword="false" />, this method attempts to make the specified <see cref="T:System.Windows.Freezable" /> unmodifiable and indicates whether the operation succeeded.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-206">If the <paramref name="isChecking" /> parameter is <see langword="false" />, this method attempts to make the specified <see cref="T:System.Windows.Freezable" /> unmodifiable and indicates whether the operation succeeded.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ecfa5-207">If <paramref name="isChecking" /> is <see langword="true" />, this method returns <see langword="true" /> if the specified <see cref="T:System.Windows.Freezable" /> can be made unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-207">If <paramref name="isChecking" /> is <see langword="true" />, this method returns <see langword="true" /> if the specified <see cref="T:System.Windows.Freezable" /> can be made unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</span>
          </span>
          <span data-ttu-id="ecfa5-208">If <paramref name="isChecking" /> is <see langword="false" />, this method returns <see langword="true" /> if the specified <see cref="T:System.Windows.Freezable" /> is now unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-208">If <paramref name="isChecking" /> is <see langword="false" />, this method returns <see langword="true" /> if the specified <see cref="T:System.Windows.Freezable" /> is now unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecfa5-209">Этот метод не вызывается, если при наследовании от <xref:System.Windows.Freezable> и переопределение <xref:System.Windows.Freezable.FreezeCore%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-209">Do not call this method unless you are deriving from <xref:System.Windows.Freezable> and overriding the <xref:System.Windows.Freezable.FreezeCore%2A> method.</span></span>  <span data-ttu-id="ecfa5-210">Этот метод может использоваться в <xref:System.Windows.Freezable.FreezeCore%2A> метод, чтобы закрепить данные-члены класса, которые сами <xref:System.Windows.Freezable> объектов.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-210">This method may be used in the <xref:System.Windows.Freezable.FreezeCore%2A> method to freeze class data members that are themselves <xref:System.Windows.Freezable> objects.</span></span>  
  
 <span data-ttu-id="ecfa5-211">Можно снова вызвать этот метод для <xref:System.Windows.Freezable> объект, который уже был заморожен (неизменяемым).</span><span class="sxs-lookup"><span data-stu-id="ecfa5-211">It is alright to call this method again on a <xref:System.Windows.Freezable> object that is already frozen (unmodifiable).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ecfa5-212">When <paramref name="isChecking" /> is <see langword="false" />, the attempt to make <paramref name="freezable" /> unmodifiable was unsuccessful; the object is now in an unknown state (it might be partially frozen).</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-212">When <paramref name="isChecking" /> is <see langword="false" />, the attempt to make <paramref name="freezable" /> unmodifiable was unsuccessful; the object is now in an unknown state (it might be partially frozen).</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="ecfa5-213">
            <para>Этот метод использует <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> метод для приготовления <see cref="T:System.Windows.Freezable" /> неизменяемым. Чтобы изменить блокированием, переопределить <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> метод.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-213">
              <para>This method uses the <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> method to make the <see cref="T:System.Windows.Freezable" /> unmodifiable. To modify freezing behavior, override the <see cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" /> method.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.FreezeCore(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="FreezeCore">
      <MemberSignature Language="C#" Value="protected virtual bool FreezeCore (bool isChecking);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool FreezeCore(bool isChecking) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.FreezeCore(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FreezeCore (isChecking As Boolean) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool FreezeCore(bool isChecking);" />
      <MemberSignature Language="F#" Value="abstract member FreezeCore : bool -&gt; bool&#xA;override this.FreezeCore : bool -&gt; bool" Usage="freezable.FreezeCore isChecking" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="isChecking" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="isChecking">
          <span data-ttu-id="ecfa5-214">
            <see langword="true" /> to return an indication of whether the object can be frozen (without actually freezing it); <see langword="false" /> to actually freeze the object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-214">
              <see langword="true" /> to return an indication of whether the object can be frozen (without actually freezing it); <see langword="false" /> to actually freeze the object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecfa5-215">Makes the <see cref="T:System.Windows.Freezable" /> object unmodifiable or tests whether it can be made unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-215">Makes the <see cref="T:System.Windows.Freezable" /> object unmodifiable or tests whether it can be made unmodifiable.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ecfa5-216">If <paramref name="isChecking" /> is <see langword="true" />, this method returns <see langword="true" /> if the <see cref="T:System.Windows.Freezable" /> can be made unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-216">If <paramref name="isChecking" /> is <see langword="true" />, this method returns <see langword="true" /> if the <see cref="T:System.Windows.Freezable" /> can be made unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</span>
          </span>
          <span data-ttu-id="ecfa5-217">If <paramref name="isChecking" /> is <see langword="false" />, this method returns <see langword="true" /> if the if the specified <see cref="T:System.Windows.Freezable" /> is now unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-217">If <paramref name="isChecking" /> is <see langword="false" />, this method returns <see langword="true" /> if the if the specified <see cref="T:System.Windows.Freezable" /> is now unmodifiable, or <see langword="false" /> if it cannot be made unmodifiable.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecfa5-218">Не вызывайте этот метод напрямую (за исключением случаев вызова базового метода в реализации).</span><span class="sxs-lookup"><span data-stu-id="ecfa5-218">Do not call this method directly (except when calling base in an implementation).</span></span> <span data-ttu-id="ecfa5-219">Этот метод вызывается функцией <xref:System.Windows.Freezable.CanFreeze%2A> свойства (с `isChecking` равным `true`) и <xref:System.Windows.Freezable.Freeze%2A> метод (с `isChecking` равным `false`).</span><span class="sxs-lookup"><span data-stu-id="ecfa5-219">This method is called internally by the <xref:System.Windows.Freezable.CanFreeze%2A> property (with `isChecking` equal to `true`) and the <xref:System.Windows.Freezable.Freeze%2A> method (with `isChecking` equal to `false`).</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ecfa5-220">
            <para>
              <see cref="T:System.Windows.Freezable" /> реализации должны переопределять этот метод, если класс содержит данные, которые не хранятся с использованием свойств зависимостей.  Типичная реализация будет вызывать базовый, а затем вызовите статический <see cref="M:System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)" /> метод на всех <see cref="T:System.Windows.Freezable" /> типизированные свойства, которые содержит класс, возвращая <see langword="true" /> только в том случае, если все свойства были заморожены (или может быть заморожены в случае указания <see langword="true" /> для <paramref name="isChecking" />).</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-220">
              <para>
                <see cref="T:System.Windows.Freezable" /> implementers must override this method when the class contains data that is not stored using dependency properties.  A typical implementation would call base, then call the static <see cref="M:System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)" /> method on all <see cref="T:System.Windows.Freezable" /> typed properties that the class contains, returning <see langword="true" /> only if all properties were frozen (or could have been frozen, in the case of specifying <see langword="true" /> for <paramref name="isChecking" />).</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.Freeze" />
        <altmember cref="P:System.Windows.Freezable.CanFreeze" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozen">
      <MemberSignature Language="C#" Value="public System.Windows.Freezable GetAsFrozen ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Freezable GetAsFrozen() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.GetAsFrozen" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAsFrozen () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Freezable ^ GetAsFrozen();" />
      <MemberSignature Language="F#" Value="member this.GetAsFrozen : unit -&gt; System.Windows.Freezable" Usage="freezable.GetAsFrozen " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ecfa5-221">Creates a frozen copy of the <see cref="T:System.Windows.Freezable" />, using base (non-animated) property values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-221">Creates a frozen copy of the <see cref="T:System.Windows.Freezable" />, using base (non-animated) property values.</span>
          </span>
          <span data-ttu-id="ecfa5-222">Because the copy is frozen, any frozen sub-objects are copied by reference.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-222">Because the copy is frozen, any frozen sub-objects are copied by reference.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ecfa5-223">A frozen copy of the <see cref="T:System.Windows.Freezable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-223">A frozen copy of the <see cref="T:System.Windows.Freezable" />.</span>
          </span>
          <span data-ttu-id="ecfa5-224">The copy's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is set to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-224">The copy's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is set to <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecfa5-225">Следует проверить <xref:System.Windows.Freezable.CanFreeze%2A> свойство перед вызовом этого метода, чтобы убедиться, что <xref:System.Windows.Freezable> может быть зафиксирована.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-225">You should check the <xref:System.Windows.Freezable.CanFreeze%2A> property before calling this method to verify that the <xref:System.Windows.Freezable> can be frozen.</span></span> <span data-ttu-id="ecfa5-226">С помощью этого метода похоже на создание копий с помощью <xref:System.Windows.Freezable.Clone%2A> фиксирование и затем с помощью <xref:System.Windows.Freezable.Freeze%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-226">Using this method is similar to creating a copy using the <xref:System.Windows.Freezable.Clone%2A> and then freezing it with the <xref:System.Windows.Freezable.Freeze%2A> method.</span></span>  
  
 <span data-ttu-id="ecfa5-227"><xref:System.Windows.Freezable.GetAsFrozen%2A> И <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> методы может повысить производительность копирования, так как они не клонируйте <xref:System.Windows.Freezable> подчиненных объектах, уже зафиксированы; они только скопировать их по ссылке.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-227">The <xref:System.Windows.Freezable.GetAsFrozen%2A> and <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> methods can improve copying performance because they do not clone <xref:System.Windows.Freezable> sub-objects that are already frozen; they only copy them by reference.</span></span>  
  
 <span data-ttu-id="ecfa5-228">В следующей таблице перечислены различия между <xref:System.Windows.Freezable.GetAsFrozen%2A> и <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-228">The following table summarizes the differences between the <xref:System.Windows.Freezable.GetAsFrozen%2A> and <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> methods.</span></span>  
  
|<span data-ttu-id="ecfa5-229">Действие</span><span class="sxs-lookup"><span data-stu-id="ecfa5-229">Action</span></span>|<span data-ttu-id="ecfa5-230">Поведение метода GetAsFrozen</span><span class="sxs-lookup"><span data-stu-id="ecfa5-230">GetAsFrozen method behavior</span></span>|<span data-ttu-id="ecfa5-231">Поведение метода GetCurrentValueAsFrozen</span><span class="sxs-lookup"><span data-stu-id="ecfa5-231">GetCurrentValueAsFrozen method behavior</span></span>|  
|------------|---------------------------------|---------------------------------------------|  
|<span data-ttu-id="ecfa5-232">Копирует свойство зависимостей, которое содержит выражение</span><span class="sxs-lookup"><span data-stu-id="ecfa5-232">Copying a dependency property that has an expression</span></span>|<span data-ttu-id="ecfa5-233">Метод вызывает <xref:System.InvalidOperationException> , так как он не может <xref:System.Windows.Freezable.Freeze%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-233">The method throws an <xref:System.InvalidOperationException> because it cannot <xref:System.Windows.Freezable.Freeze%2A> the property.</span></span>|<span data-ttu-id="ecfa5-234">Копируется текущее значение выражения, но не само выражение.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-234">The current value of the expression is copied, but not the expression itself.</span></span>|  
|<span data-ttu-id="ecfa5-235">Копирование также анимированными свойствами зависимостей</span><span class="sxs-lookup"><span data-stu-id="ecfa5-235">Copying an animated dependency property</span></span>|<span data-ttu-id="ecfa5-236">Копируется базовое значение свойства (не анимационные).</span><span class="sxs-lookup"><span data-stu-id="ecfa5-236">The property's base (non-animated) value is copied.</span></span> <span data-ttu-id="ecfa5-237">Анимации не копируются.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-237">Animations are not copied.</span></span>|<span data-ttu-id="ecfa5-238">Копируется текущее анимированное значение свойства.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-238">The property's current animated value is copied.</span></span> <span data-ttu-id="ecfa5-239">Анимации не копируются.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-239">Animations are not copied.</span></span>|  
  
 <span data-ttu-id="ecfa5-240">Обратите внимание, что неопределенные свойства не копируются, а также доступны только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-240">Note that unset properties are not copied, nor are read-only properties.</span></span>  
  
 <span data-ttu-id="ecfa5-241">Чтобы создать копию <xref:System.Windows.Freezable> то есть не зафиксирована, используйте <xref:System.Windows.Freezable.Clone%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-241">To create a copy of the <xref:System.Windows.Freezable> that is not frozen, use the <xref:System.Windows.Freezable.Clone%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ecfa5-242">The <see cref="T:System.Windows.Freezable" /> cannot be frozen because it contains expressions or animated properties.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-242">The <see cref="T:System.Windows.Freezable" /> cannot be frozen because it contains expressions or animated properties.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="ecfa5-243">
            <para>Этот метод использует виртуальный <see cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" /> метод для создания клона.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-243">
              <para>This method uses the virtual <see cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" /> method to produce the clone.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="GetAsFrozenCore">
      <MemberSignature Language="C#" Value="protected virtual void GetAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member GetAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="freezable.GetAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">
          <span data-ttu-id="ecfa5-244">The instance to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-244">The instance to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecfa5-245">Makes the instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" /> using base (non-animated) property values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-245">Makes the instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" /> using base (non-animated) property values.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecfa5-246">Этот метод вызывается <xref:System.Windows.Freezable.GetAsFrozen%2A> метода и не должен вызываться непосредственно из программного кода, за исключением при вызове базовой реализации при переопределении данного метода.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-246">This method is called by the <xref:System.Windows.Freezable.GetAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="ecfa5-247">Чтобы создать фиксированную копию текущего объекта, вызовите <xref:System.Windows.Freezable.GetAsFrozen%2A> вместо прямого вызова этого метода.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-247">To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetAsFrozen%2A> instead of calling this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ecfa5-248">
            <para>Если вы наследуете от <see cref="T:System.Windows.Freezable" /> может потребоваться переопределить этот метод. Причины для переопределения включают следующее:-производный класс включает данные, которые не предоставляются через свойства зависимостей.  -Производного класса необходимо выполнить дополнительную инициализацию работы, которая не может быть выполнен, просто переопределив метод <see cref="M:System.Windows.Freezable.CreateInstanceCore" />. Например, это применимо, если производный класс реализует <see cref="T:System.ComponentModel.ISupportInitialize" />.  Классы, в которых хранятся все свои данные в свойствах зависимости и, не обязательно для выполнения дополнительной инициализации не требуется переопределять <see cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />.  Очень важно, что все реализации вызывать базовую реализацию этого метода. Реализации должны выполнять работу, выполняемую в реализации по умолчанию не только. Реализация по умолчанию делает глубокие копии любой нефиксированных объектах Freezable и неполные копии всех остальных, локально набор свойств, содержащихся в нем. Если объект имеет свойства зависимостей с привязкой к данным, выражения копируются, но могут уже не быть разрешимыми; Дополнительные сведения об объектах клонирования привязкой к данным см. в разделе [Freezable Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md) объектов. Если объект имеет анимированные свойства зависимостей, копируются базовые (не анимационные) значения этих свойств. Анимации не копируются.  Обратите внимание, что неопределенные свойства не копируются, а также доступны только для чтения.  При переопределении этого метода необходимо вызвать базовую реализацию.  Не нужно <see cref="M:System.Windows.Freezable.Freeze" /> значения, они копируются.  Результат заморожен <see cref="M:System.Windows.Freezable.GetAsFrozen" /> перед возвращением.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-248">
              <para>If you derive from <see cref="T:System.Windows.Freezable" /> you may need to override this method. Reasons to override include the following:  -   Your derived class has data that is not exposed via dependency properties.  -   Your derived class must perform extra initialization work that cannot be accomplished by simply overriding <see cref="M:System.Windows.Freezable.CreateInstanceCore" />. For example, this applies if your derived class implements <see cref="T:System.ComponentModel.ISupportInitialize" />.  Classes that store all their data in dependency properties and that do not need to perform extra initialization work do not need to override <see cref="M:System.Windows.Freezable.GetAsFrozenCore(System.Windows.Freezable)" />.  It is essential that all implementations call the base implementation of this method. Implementations should only perform work that is not performed by the default implementation. The default implementation makes deep copies of any unfrozen freezables and shallow copies of all other writable, locally set properties it contains. If the object has data-bound dependency properties, the expressions are copied but might no longer resolve; for more information about cloning data-bound objects, see [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md). If the object has animated dependency properties, the base (non-animated) values of those properties are copied. Animations are not copied.  Note that unset properties are not copied, nor are read-only properties.  If you do override this method, you must call the base implementation.  You do not need to <see cref="M:System.Windows.Freezable.Freeze" /> values as they are copied.  The result is frozen by <see cref="M:System.Windows.Freezable.GetAsFrozen" /> before being returned.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.GetAsFrozen" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozen">
      <MemberSignature Language="C#" Value="public System.Windows.Freezable GetCurrentValueAsFrozen ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Windows.Freezable GetCurrentValueAsFrozen() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.GetCurrentValueAsFrozen" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCurrentValueAsFrozen () As Freezable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Windows::Freezable ^ GetCurrentValueAsFrozen();" />
      <MemberSignature Language="F#" Value="member this.GetCurrentValueAsFrozen : unit -&gt; System.Windows.Freezable" Usage="freezable.GetCurrentValueAsFrozen " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Freezable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ecfa5-249">Creates a frozen copy of the <see cref="T:System.Windows.Freezable" /> using current property values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-249">Creates a frozen copy of the <see cref="T:System.Windows.Freezable" /> using current property values.</span>
          </span>
          <span data-ttu-id="ecfa5-250">Because the copy is frozen, any frozen sub-objects are copied by reference.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-250">Because the copy is frozen, any frozen sub-objects are copied by reference.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="ecfa5-251">A frozen copy of the <see cref="T:System.Windows.Freezable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-251">A frozen copy of the <see cref="T:System.Windows.Freezable" />.</span>
          </span>
          <span data-ttu-id="ecfa5-252">The copy's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is set to <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-252">The copy's <see cref="P:System.Windows.Freezable.IsFrozen" /> property is set to <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecfa5-253">С помощью этого метода похоже на создание копий с помощью <xref:System.Windows.Freezable.CloneCurrentValue%2A> фиксирование и затем с помощью <xref:System.Windows.Freezable.Freeze%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-253">Using this method is similar to creating a copy using the <xref:System.Windows.Freezable.CloneCurrentValue%2A> and then freezing it with the <xref:System.Windows.Freezable.Freeze%2A> method.</span></span>  
  
 <span data-ttu-id="ecfa5-254"><xref:System.Windows.Freezable.GetAsFrozen%2A> И <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> методы может повысить производительность копирования, так как они не клонируйте <xref:System.Windows.Freezable> подчиненных объектах, уже зафиксированы; они только скопировать их по ссылке.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-254">The <xref:System.Windows.Freezable.GetAsFrozen%2A> and <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> methods can improve copying performance because they do not clone <xref:System.Windows.Freezable> sub-objects that are already frozen; they only copy them by reference.</span></span>  
  
 <span data-ttu-id="ecfa5-255">В следующей таблице перечислены различия между <xref:System.Windows.Freezable.GetAsFrozen%2A> и <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> методы.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-255">The following table summarizes the differences between the <xref:System.Windows.Freezable.GetAsFrozen%2A> and <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> methods.</span></span>  
  
|<span data-ttu-id="ecfa5-256">Действие</span><span class="sxs-lookup"><span data-stu-id="ecfa5-256">Action</span></span>|<span data-ttu-id="ecfa5-257">Поведение метода GetAsFrozen</span><span class="sxs-lookup"><span data-stu-id="ecfa5-257">GetAsFrozen method behavior</span></span>|<span data-ttu-id="ecfa5-258">Поведение метода GetCurrentValueAsFrozen</span><span class="sxs-lookup"><span data-stu-id="ecfa5-258">GetCurrentValueAsFrozen method behavior</span></span>|  
|------------|---------------------------------|---------------------------------------------|  
|<span data-ttu-id="ecfa5-259">Копирует свойство зависимостей, которое содержит выражение</span><span class="sxs-lookup"><span data-stu-id="ecfa5-259">Copying a dependency property that has an expression</span></span>|<span data-ttu-id="ecfa5-260">Метод вызывает <xref:System.InvalidOperationException> , так как он не может <xref:System.Windows.Freezable.Freeze%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-260">The method throws an <xref:System.InvalidOperationException> because it cannot <xref:System.Windows.Freezable.Freeze%2A> the property.</span></span>|<span data-ttu-id="ecfa5-261">Копируется текущее значение выражения, но не само выражение.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-261">The current value of the expression is copied, but not the expression itself.</span></span>|  
|<span data-ttu-id="ecfa5-262">Копирование также анимированными свойствами зависимостей</span><span class="sxs-lookup"><span data-stu-id="ecfa5-262">Copying an animated dependency property</span></span>|<span data-ttu-id="ecfa5-263">Копируется базовое значение свойства (не анимационные).</span><span class="sxs-lookup"><span data-stu-id="ecfa5-263">The property's base (non-animated) value is copied.</span></span> <span data-ttu-id="ecfa5-264">Анимации не копируются.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-264">Animations are not copied.</span></span>|<span data-ttu-id="ecfa5-265">Копируется текущее анимированное значение свойства.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-265">The property's current animated value is copied.</span></span> <span data-ttu-id="ecfa5-266">Анимации не копируются.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-266">Animations are not copied.</span></span>|  
  
 <span data-ttu-id="ecfa5-267">Обратите внимание, что неопределенные свойства не копируются, а также доступны только для чтения.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-267">Note that unset properties are not copied, nor are read-only properties.</span></span>  
  
 <span data-ttu-id="ecfa5-268">Чтобы создать копию <xref:System.Windows.Freezable> то есть не зафиксирована, используйте <xref:System.Windows.Freezable.CloneCurrentValue%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-268">To create a copy of the <xref:System.Windows.Freezable> that is not frozen, use the <xref:System.Windows.Freezable.CloneCurrentValue%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ecfa5-269">
            <para>Этот метод использует виртуальный <see cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" /> метод для создания клона.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-269">
              <para>This method uses the virtual <see cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" /> method to produce the clone.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValue" />
      </Docs>
    </Member>
    <Member MemberName="GetCurrentValueAsFrozenCore">
      <MemberSignature Language="C#" Value="protected virtual void GetCurrentValueAsFrozenCore (System.Windows.Freezable sourceFreezable);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void GetCurrentValueAsFrozenCore(class System.Windows.Freezable sourceFreezable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub GetCurrentValueAsFrozenCore (sourceFreezable As Freezable)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void GetCurrentValueAsFrozenCore(System::Windows::Freezable ^ sourceFreezable);" />
      <MemberSignature Language="F#" Value="abstract member GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit&#xA;override this.GetCurrentValueAsFrozenCore : System.Windows.Freezable -&gt; unit" Usage="freezable.GetCurrentValueAsFrozenCore sourceFreezable" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceFreezable" Type="System.Windows.Freezable" />
      </Parameters>
      <Docs>
        <param name="sourceFreezable">
          <span data-ttu-id="ecfa5-270">The <see cref="T:System.Windows.Freezable" /> to copy and freeze.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-270">The <see cref="T:System.Windows.Freezable" /> to copy and freeze.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecfa5-271">Makes the current instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-271">Makes the current instance a frozen clone of the specified <see cref="T:System.Windows.Freezable" />.</span>
          </span>
          <span data-ttu-id="ecfa5-272">If the object has animated dependency properties, their current animated values are copied.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-272">If the object has animated dependency properties, their current animated values are copied.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecfa5-273">Этот метод вызывается <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> метода и не должен вызываться непосредственно из программного кода, за исключением при вызове базовой реализации при переопределении данного метода.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-273">This method is called by the <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> method and should not be called directly from your code, except when calling the base implementation while overriding this method.</span></span> <span data-ttu-id="ecfa5-274">Чтобы создать фиксированную копию текущего объекта, вызовите <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> вместо прямого вызова этого метода.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-274">To create a frozen copy of the current object, call <xref:System.Windows.Freezable.GetCurrentValueAsFrozen%2A> instead of calling this method directly.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ecfa5-275">
            <para>Если вы наследуете от <see cref="T:System.Windows.Freezable" />, может потребоваться переопределить этот метод. Причины для переопределения включают следующее:-производный класс включает данные, которые не предоставляются через свойства зависимостей.  -Производного класса необходимо выполнить дополнительную инициализацию работы, которая не может быть выполнен, просто переопределив метод <see cref="M:System.Windows.Freezable.CreateInstanceCore" />. Например, это применимо, если производный класс реализует <see cref="T:System.ComponentModel.ISupportInitialize" />.  Классы, в которых хранятся все свои данные в свойствах зависимости и, не обязательно для выполнения дополнительной инициализации не требуется переопределять <see cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />.  Очень важно, что все реализации вызывать базовую реализацию этого метода. Реализации должны выполнять работу, выполняемую в реализации по умолчанию не только. Реализация по умолчанию создает новую <see cref="T:System.Windows.Freezable" /> с помощью <see cref="M:System.Windows.Freezable.CreateInstance" /> метод и делает глубокие копии нефиксированных объектах Freezable и неполные копии всех остальных, локально установить свойства, он содержит. Если объект имеет свойства зависимостей с привязкой к данным, привязки данных копируются, но могут уже не быть разрешимыми; Дополнительные сведения об объектах клонирования привязкой к данным см. в разделе [Freezable Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md) объектов. Если объект имеет анимированные свойства зависимостей, копируется текущее анимированное значение этих свойств, но не сами анимации.  Свойства зависимостей только для чтения в <see cref="T:System.Windows.Freezable" /> не копируются данной реализацией по умолчанию.  При переопределении этого метода необходимо вызвать базовую реализацию.  Не нужно <see cref="M:System.Windows.Freezable.Freeze" /> значения, они копируются.  Результат заморожен <see cref="M:System.Windows.Freezable.GetAsFrozen" /> перед возвращением.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-275">
              <para>If you derive from <see cref="T:System.Windows.Freezable" />, you may need to override this method. Reasons to override include the following:  -   Your derived class has data that is not exposed via dependency properties.  -   Your derived class must perform extra initialization work that cannot be accomplished by simply overriding <see cref="M:System.Windows.Freezable.CreateInstanceCore" />. For example, this applies if your derived class implements <see cref="T:System.ComponentModel.ISupportInitialize" />.  Classes that store all their data in dependency properties and that do not need to perform extra initialization work do not need to override <see cref="M:System.Windows.Freezable.GetCurrentValueAsFrozenCore(System.Windows.Freezable)" />.  It is essential that all implementations call the base implementation of this method. Implementations should only perform work that is not performed by the default implementation. The default implementation creates a new <see cref="T:System.Windows.Freezable" /> using the <see cref="M:System.Windows.Freezable.CreateInstance" /> method and makes deep copies of unfrozen freezables and shallow copies of all other writable, locally set properties it contains. If the object has data-bound dependency properties, the data bindings are copied but might no longer resolve; for more information about cloning data-bound objects, see [Freezable Objects Overview](~/docs/framework/wpf/advanced/freezable-objects-overview.md). If the object has animated dependency properties, the current animated value of those properties is copied, but the animations are not.  Read-only dependency properties within a <see cref="T:System.Windows.Freezable" /> are not copied by this default implementation.  If you do override this method, you must call the base implementation.  You do not need to <see cref="M:System.Windows.Freezable.Freeze" /> values as they are copied.  The result is frozen by <see cref="M:System.Windows.Freezable.GetAsFrozen" /> before being returned.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.CloneCurrentValueCore(System.Windows.Freezable)" />
      </Docs>
    </Member>
    <Member MemberName="IsFrozen">
      <MemberSignature Language="C#" Value="public bool IsFrozen { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFrozen" />
      <MemberSignature Language="DocId" Value="P:System.Windows.Freezable.IsFrozen" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFrozen As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFrozen { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFrozen : bool" Usage="System.Windows.Freezable.IsFrozen" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ecfa5-276">Gets a value that indicates whether the object is currently modifiable.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-276">Gets a value that indicates whether the object is currently modifiable.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ecfa5-277">
            <see langword="true" /> Если объект заморожен и не может быть изменен; <see langword="false" /> Если объект может быть изменен.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-277">
              <see langword="true" /> if the object is frozen and cannot be modified; <see langword="false" /> if the object can be modified.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecfa5-278">Попытка изменить объект при его <xref:System.Windows.Freezable.IsFrozen%2A> свойство `true` вызывает <xref:System.InvalidOperationException>.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-278">Attempting to modify an object when its <xref:System.Windows.Freezable.IsFrozen%2A> property is `true` throws an <xref:System.InvalidOperationException>.</span></span>  
  
 <span data-ttu-id="ecfa5-279">Это свойство только для чтения с точки зрения объектной модели.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-279">This property is read-only from the object model perspective.</span></span> <span data-ttu-id="ecfa5-280">Некоторые сведения о <xref:System.Windows.Freezable> поведения могут содержать «задает <xref:System.Windows.Freezable.IsFrozen%2A> для `true`"или подобный язык при обсуждении поведение других методов <xref:System.Windows.Freezable>, но это поведение происходит внутренне в экземпляры классов, Если методы экземпляра манипулировать закрытые переменные, которые существуют в абстрактный класс.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-280">Some of the documentation about <xref:System.Windows.Freezable> behaviors may mention "sets <xref:System.Windows.Freezable.IsFrozen%2A> to `true`" or similar language when discussing the behavior of other methods of <xref:System.Windows.Freezable>, but this behavior is happening internally in the class instances, when methods of the instance manipulate the private variables that exist within the abstract class.</span></span> <span data-ttu-id="ecfa5-281">Чтобы задать значение этого свойства, следует вызвать <xref:System.Windows.Freezable.Freeze%2A>.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-281">To set the value of this property, you should call <xref:System.Windows.Freezable.Freeze%2A>.</span></span> <span data-ttu-id="ecfa5-282">Это одноразовая операция для изменения эффективного <xref:System.Windows.Freezable.IsFrozen%2A> свойства из первоначальное значение по умолчанию `false` состояние `true` состояние.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-282">This effectively is a one-time operation to change the <xref:System.Windows.Freezable.IsFrozen%2A> property from the initial default `false` state to the `true` state.</span></span> <span data-ttu-id="ecfa5-283">Нет отсутствуют доступные средства для задания значения обратно в `false`.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-283">There is no available means to set the value back to `false`.</span></span> <span data-ttu-id="ecfa5-284">Вместо этого можно изменить любое глубокое копирование из исходного (см. в разделе <xref:System.Windows.Freezable.Clone%2A> метод).</span><span class="sxs-lookup"><span data-stu-id="ecfa5-284">Instead, you could change any deep copy made from the original (see the <xref:System.Windows.Freezable.Clone%2A> method).</span></span> <span data-ttu-id="ecfa5-285">Это сделано намеренно и поведение любого производного класса при применении к вариантам где <xref:System.Windows.Freezable> шаблон полезен.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-285">This is by design and is how any derived class should behave when applied to the cases where the <xref:System.Windows.Freezable> pattern is useful.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.OnChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnChanged();" />
      <MemberSignature Language="F#" Value="abstract member OnChanged : unit -&gt; unit&#xA;override this.OnChanged : unit -&gt; unit" Usage="freezable.OnChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ecfa5-286">Called when the current <see cref="T:System.Windows.Freezable" /> object is modified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-286">Called when the current <see cref="T:System.Windows.Freezable" /> object is modified.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecfa5-287">Этот метод вызывается всякий раз, когда <xref:System.Windows.Freezable.Changed> событием.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-287">This method is called whenever the <xref:System.Windows.Freezable.Changed> event occurs.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ecfa5-288">
            <para>При реализации класса, производного от <see cref="T:System.Windows.Freezable" />, могут переопределять этот метод для выполнения задачи.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-288">
              <para>When you implement a class that derives from <see cref="T:System.Windows.Freezable" />, you may override this method to perform tasks.</para>
            </span>
          </span>
        </block>
        <altmember cref="E:System.Windows.Freezable.Changed" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OnFreezablePropertyChanged">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="ecfa5-289">Ensures that appropriate context pointers are established for a data member of type <see cref="T:System.Windows.DependencyObject" /> that has just been modified.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-289">Ensures that appropriate context pointers are established for a data member of type <see cref="T:System.Windows.DependencyObject" /> that has just been modified.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OnFreezablePropertyChanged">
      <MemberSignature Language="C#" Value="protected void OnFreezablePropertyChanged (System.Windows.DependencyObject oldValue, System.Windows.DependencyObject newValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnFreezablePropertyChanged(class System.Windows.DependencyObject oldValue, class System.Windows.DependencyObject newValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnFreezablePropertyChanged (oldValue As DependencyObject, newValue As DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnFreezablePropertyChanged(System::Windows::DependencyObject ^ oldValue, System::Windows::DependencyObject ^ newValue);" />
      <MemberSignature Language="F#" Value="member this.OnFreezablePropertyChanged : System.Windows.DependencyObject * System.Windows.DependencyObject -&gt; unit" Usage="freezable.OnFreezablePropertyChanged (oldValue, newValue)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="System.Windows.DependencyObject" />
        <Parameter Name="newValue" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="oldValue">
          <span data-ttu-id="ecfa5-290">The previous value of the data member.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-290">The previous value of the data member.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="ecfa5-291">The current value of the data member.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-291">The current value of the data member.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecfa5-292">Ensures that appropriate context pointers are established for a <see cref="T:System.Windows.DependencyObjectType" /> data member that has just been set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-292">Ensures that appropriate context pointers are established for a <see cref="T:System.Windows.DependencyObjectType" /> data member that has just been set.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecfa5-293">Этот метод должен вызываться <xref:System.Windows.Freezable> наследники каждый раз <xref:System.Windows.DependencyObject> член данных, не хранятся в виде <xref:System.Windows.DependencyProperty> имеет значение.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-293">This method should be called by <xref:System.Windows.Freezable> inheritors each time a <xref:System.Windows.DependencyObject> data member that is not stored as a <xref:System.Windows.DependencyProperty> is set.</span></span>  
  
 <span data-ttu-id="ecfa5-294">Этот метод не должен вызываться для <xref:System.Windows.DependencyObject> данные-члены, которые хранятся с использованием <xref:System.Windows.DependencyProperty>.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-294">This method does not need to be called for <xref:System.Windows.DependencyObject> data members that are stored using a <xref:System.Windows.DependencyProperty>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnFreezablePropertyChanged">
      <MemberSignature Language="C#" Value="protected void OnFreezablePropertyChanged (System.Windows.DependencyObject oldValue, System.Windows.DependencyObject newValue, System.Windows.DependencyProperty property);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnFreezablePropertyChanged(class System.Windows.DependencyObject oldValue, class System.Windows.DependencyObject newValue, class System.Windows.DependencyProperty property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnFreezablePropertyChanged (oldValue As DependencyObject, newValue As DependencyObject, property As DependencyProperty)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnFreezablePropertyChanged(System::Windows::DependencyObject ^ oldValue, System::Windows::DependencyObject ^ newValue, System::Windows::DependencyProperty ^ property);" />
      <MemberSignature Language="F#" Value="member this.OnFreezablePropertyChanged : System.Windows.DependencyObject * System.Windows.DependencyObject * System.Windows.DependencyProperty -&gt; unit" Usage="freezable.OnFreezablePropertyChanged (oldValue, newValue, property)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldValue" Type="System.Windows.DependencyObject" />
        <Parameter Name="newValue" Type="System.Windows.DependencyObject" />
        <Parameter Name="property" Type="System.Windows.DependencyProperty" />
      </Parameters>
      <Docs>
        <param name="oldValue">
          <span data-ttu-id="ecfa5-295">The previous value of the data member.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-295">The previous value of the data member.</span>
          </span>
        </param>
        <param name="newValue">
          <span data-ttu-id="ecfa5-296">The current value of the data member.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-296">The current value of the data member.</span>
          </span>
        </param>
        <param name="property">
          <span data-ttu-id="ecfa5-297">The property that changed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-297">The property that changed.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecfa5-298">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-298">This member supports the [!INCLUDE[TLA#tla_winclient](~/includes/tlasharptla-winclient-md.md)] infrastructure and is not intended to be used directly from your code.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPropertyChanged">
      <MemberSignature Language="C#" Value="protected override void OnPropertyChanged (System.Windows.DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnPropertyChanged(valuetype System.Windows.DependencyPropertyChangedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnPropertyChanged (e As DependencyPropertyChangedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnPropertyChanged(System::Windows::DependencyPropertyChangedEventArgs e);" />
      <MemberSignature Language="F#" Value="override this.OnPropertyChanged : System.Windows.DependencyPropertyChangedEventArgs -&gt; unit" Usage="freezable.OnPropertyChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.DependencyPropertyChangedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ecfa5-299">Event data that contains information about which property changed, and its old and new values.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-299">Event data that contains information about which property changed, and its old and new values.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ecfa5-300">Overrides the <see cref="T:System.Windows.DependencyObject" /> implementation of <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" /> to also invoke any <see cref="E:System.Windows.Freezable.Changed" /> handlers in response to a changing dependency property of type <see cref="T:System.Windows.Freezable" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-300">Overrides the <see cref="T:System.Windows.DependencyObject" /> implementation of <see cref="M:System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)" /> to also invoke any <see cref="E:System.Windows.Freezable.Changed" /> handlers in response to a changing dependency property of type <see cref="T:System.Windows.Freezable" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecfa5-301">Данные события содержат сведения о только <xref:System.Windows.Freezable> сам.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-301">The event data contains information about only the <xref:System.Windows.Freezable> itself.</span></span> <span data-ttu-id="ecfa5-302">Все сведения о подчиненных свойств должен быть получен с помощью <xref:System.Windows.Freezable.Changed> обработчиков.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-302">Any sub-property information must be obtained through the <xref:System.Windows.Freezable.Changed> handlers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadPreamble">
      <MemberSignature Language="C#" Value="protected void ReadPreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ReadPreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.ReadPreamble" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ReadPreamble ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ReadPreamble();" />
      <MemberSignature Language="F#" Value="member this.ReadPreamble : unit -&gt; unit" Usage="freezable.ReadPreamble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ecfa5-303">Ensures that the <see cref="T:System.Windows.Freezable" /> is being accessed from a valid thread.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-303">Ensures that the <see cref="T:System.Windows.Freezable" /> is being accessed from a valid thread.</span>
          </span>
          <span data-ttu-id="ecfa5-304">Inheritors of <see cref="T:System.Windows.Freezable" /> must call this method at the beginning of any [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] that reads data members that are not dependency properties.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-304">Inheritors of <see cref="T:System.Windows.Freezable" /> must call this method at the beginning of any [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] that reads data members that are not dependency properties.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ecfa5-305">
            <para>Классы, производные от <see cref="T:System.Windows.Freezable" /> должны вызывать <see cref="M:System.Windows.Freezable.ReadPreamble" /> метод, перед тем как пытаться доступ к любым элементам, которые не являются свойствами зависимостей. <see cref="M:System.Windows.Freezable.WritePreamble" /> Метод должен вызываться перед записью таких членов.  Этот метод фактически ничего не делает больше, чем вызов <see cref="M:System.Windows.Threading.DispatcherObject.VerifyAccess" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-305">
              <para>Classes that derive from <see cref="T:System.Windows.Freezable" /> should call the <see cref="M:System.Windows.Freezable.ReadPreamble" /> method before they attempt to access any members that are not dependency properties. The <see cref="M:System.Windows.Freezable.WritePreamble" /> method should be called before any such members are written to.  This method effectively does nothing more than call <see cref="M:System.Windows.Threading.DispatcherObject.VerifyAccess" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.WritePreamble" />
      </Docs>
    </Member>
    <Member MemberName="WritePostscript">
      <MemberSignature Language="C#" Value="protected void WritePostscript ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WritePostscript() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.WritePostscript" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WritePostscript ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WritePostscript();" />
      <MemberSignature Language="F#" Value="member this.WritePostscript : unit -&gt; unit" Usage="freezable.WritePostscript " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ecfa5-306">Raises the <see cref="E:System.Windows.Freezable.Changed" /> event for the <see cref="T:System.Windows.Freezable" /> and invokes its <see cref="M:System.Windows.Freezable.OnChanged" /> method.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-306">Raises the <see cref="E:System.Windows.Freezable.Changed" /> event for the <see cref="T:System.Windows.Freezable" /> and invokes its <see cref="M:System.Windows.Freezable.OnChanged" /> method.</span>
          </span>
          <span data-ttu-id="ecfa5-307">Classes that derive from <see cref="T:System.Windows.Freezable" /> should call this method at the end of any API that modifies class members that are not stored as dependency properties.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-307">Classes that derive from <see cref="T:System.Windows.Freezable" /> should call this method at the end of any API that modifies class members that are not stored as dependency properties.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="ecfa5-308">
            <para>Классы, производные от <see cref="T:System.Windows.Freezable" /> следует вызывать этот метод в конце любого API, который изменяет член класса, который не хранятся в виде <see cref="T:System.Windows.DependencyProperty" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-308">
              <para>Classes that derive from <see cref="T:System.Windows.Freezable" /> should call this method at the end of any API that modifies a class member that is not stored as a <see cref="T:System.Windows.DependencyProperty" />.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="WritePreamble">
      <MemberSignature Language="C#" Value="protected void WritePreamble ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void WritePreamble() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.Freezable.WritePreamble" />
      <MemberSignature Language="VB.NET" Value="Protected Sub WritePreamble ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void WritePreamble();" />
      <MemberSignature Language="F#" Value="member this.WritePreamble : unit -&gt; unit" Usage="freezable.WritePreamble " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ecfa5-309">Verifies that the <see cref="T:System.Windows.Freezable" /> is not frozen and that it is being accessed from a valid threading context.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-309">Verifies that the <see cref="T:System.Windows.Freezable" /> is not frozen and that it is being accessed from a valid threading context.</span>
          </span>
          <span data-ttu-id="ecfa5-310">
            <see cref="T:System.Windows.Freezable" /> inheritors should call this method at the beginning of any [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] that writes to data members that are not dependency properties.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-310">
              <see cref="T:System.Windows.Freezable" /> inheritors should call this method at the beginning of any [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)] that writes to data members that are not dependency properties.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ecfa5-311">Этот метод вызывает метод <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> чтобы убедиться в том контексте потоков доступен, и выдает исключение, если <xref:System.Windows.Freezable> экземпляр уже был заморожен.</span><span class="sxs-lookup"><span data-stu-id="ecfa5-311">This method calls <xref:System.Windows.Threading.DispatcherObject.VerifyAccess%2A> to verify the threading context is accessible, and it throws an exception if the <xref:System.Windows.Freezable> instance is already frozen.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="ecfa5-312">The <see cref="T:System.Windows.Freezable" /> instance is frozen and cannot have its members written to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-312">The <see cref="T:System.Windows.Freezable" /> instance is frozen and cannot have its members written to.</span>
          </span>
        </exception>
        <block subset="none" type="overrides">
          <span data-ttu-id="ecfa5-313">
            <para>Классы, производные от <see cref="T:System.Windows.Freezable" /> должны вызывать <see cref="M:System.Windows.Freezable.WritePreamble" /> перед попыткой записи к любым элементам, которые не являются свойствами зависимостей. При вызове метода <see cref="M:System.Windows.Freezable.WritePreamble" /> в [! INCLUDE[TLA#tla_api](~/includes/tlasharptla-API-MD.MD)], можно опустить вызова <see cref="M:System.Windows.Freezable.ReadPreamble" />.</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="ecfa5-313">
              <para>Classes that derive from <see cref="T:System.Windows.Freezable" /> should call <see cref="M:System.Windows.Freezable.WritePreamble" /> before attempting to write to any members that are not dependency properties. If you call <see cref="M:System.Windows.Freezable.WritePreamble" /> in an [!INCLUDE[TLA#tla_api](~/includes/tlasharptla-api-md.md)], you can omit a call to <see cref="M:System.Windows.Freezable.ReadPreamble" />.</para>
            </span>
          </span>
        </block>
        <altmember cref="M:System.Windows.Freezable.ReadPreamble" />
      </Docs>
    </Member>
  </Members>
</Type>