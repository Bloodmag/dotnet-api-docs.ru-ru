<Type Name="NameScope" FullName="System.Windows.NameScope">
  <TypeSignature Language="C#" Value="public class NameScope : System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt;, System.Collections.Generic.IDictionary&lt;string,object&gt;, System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt;, System.Windows.Markup.INameScopeDictionary" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit NameScope extends System.Object implements class System.Collections.Generic.ICollection`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt;, class System.Collections.Generic.IDictionary`2&lt;string, object&gt;, class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt;, class System.Collections.IEnumerable, class System.Windows.Markup.INameScope, class System.Windows.Markup.INameScopeDictionary" />
  <TypeSignature Language="DocId" Value="T:System.Windows.NameScope" />
  <TypeSignature Language="VB.NET" Value="Public Class NameScope&#xA;Implements ICollection(Of KeyValuePair(Of String, Object)), IDictionary(Of String, Object), IEnumerable(Of KeyValuePair(Of String, Object)), INameScopeDictionary" />
  <TypeSignature Language="C++ CLI" Value="public ref class NameScope : System::Collections::Generic::ICollection&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt;, System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt;, System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt;, System::Windows::Markup::INameScopeDictionary" />
  <AssemblyInfo>
    <AssemblyName>WindowsBase</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Windows.Markup.INameScopeDictionary</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("PresentationFramework, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="a1cf3-101">Реализует базовую поддержку WPF для методов <see cref="T:System.Windows.Markup.INameScope" />, используемых для хранения или извлечения сопоставлений "имя-объект" в определенной области имен XAML.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-101">Implements base WPF support for the <see cref="T:System.Windows.Markup.INameScope" /> methods that store or retrieve name-object mappings into a particular XAML namescope.</span></span> <span data-ttu-id="a1cf3-102">Добавляет поддержку присоединенных свойств для упрощения динамического получения или задания имен области имен XAML на уровне элемента...</span><span class="sxs-lookup"><span data-stu-id="a1cf3-102">Adds attached property support to make it simpler to get or set XAML namescope names dynamically at the element level..</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cf3-103">Этот класс реализует встроенную поддержку области имен XAML для WPF обработки XAML.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-103">This class implements built-in XAML namescope support for WPF treatment of XAML.</span></span> <span data-ttu-id="a1cf3-104"><xref:System.Windows.NameScope> используется для создания начальной области имен XAML при анализе XAML, например при создании экземпляров стилей и шаблонов.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-104"><xref:System.Windows.NameScope> assists in creation of initial XAML namescopes based on parsing XAML, such as when instantiating styles and templates.</span></span> <span data-ttu-id="a1cf3-105">Оно также поддерживает создание пространств имен XAML процессами, происходящими вне стандартной загрузки XAML элементов с реализацией XAML в WPF процессора.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-105">It also supports creation of XAML namescopes by processes that occur outside of normal XAML loading of elements by the WPF XAML processor implementation.</span></span>  
  
 <span data-ttu-id="a1cf3-106"><xref:System.Windows.NameScope> — обычно больше подходит для предоставления инфраструктуры, чем для типичных сценариев пользовательского кода, которые предполагают работу с областью видимости имен XAML.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-106"><xref:System.Windows.NameScope> is generally more devoted to supplying infrastructure than for common user code scenarios that involve working with a XAML namescope.</span></span> <span data-ttu-id="a1cf3-107">В большинстве случаев <xref:System.Windows.FrameworkElement.FindName%2A> методов, предоставляемых на <xref:System.Windows.FrameworkElement> и <xref:System.Windows.FrameworkContentElement> , более соответствующие методы для вызова для поиска элементов по имени, определенные в XAML.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-107">For most scenarios, the <xref:System.Windows.FrameworkElement.FindName%2A> methods exposed on <xref:System.Windows.FrameworkElement> and <xref:System.Windows.FrameworkContentElement> are more appropriate methods to call to search for elements by XAML-defined name.</span></span> <span data-ttu-id="a1cf3-108"><xref:System.Windows.FrameworkElement.Name%2A> Свойств, предоставляемых <xref:System.Windows.FrameworkElement> и <xref:System.Windows.FrameworkContentElement> являются свойствами больше подходит для использования при задании первоначальное имя как атрибуты разметки.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-108">The <xref:System.Windows.FrameworkElement.Name%2A> properties exposed by <xref:System.Windows.FrameworkElement> and <xref:System.Windows.FrameworkContentElement> are more appropriate properties to use to set the initial name as markup attributes.</span></span>  
  
 <span data-ttu-id="a1cf3-109">Различные методы <xref:System.Windows.NameScope> используются базовые элементы и другие классы, поддерживающие области имен XAML для поддержки <xref:System.Windows.Markup.INameScope.RegisterName%2A> и <xref:System.Windows.Markup.INameScope.FindName%2A>.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-109">The various methods of <xref:System.Windows.NameScope> are used by base elements and other classes that maintain XAML namescopes in order to support <xref:System.Windows.Markup.INameScope.RegisterName%2A> and <xref:System.Windows.Markup.INameScope.FindName%2A>.</span></span> <span data-ttu-id="a1cf3-110">Обычно используется API-интерфейса <xref:System.Windows.NameScope> только в том случае, если замены или дополнения поведения базового элемента, как они обрабатывают области видимости имен XAML для корневых элементов XAML-страницы, а также как часть шаблонов (которым с помощью отдельной области имен XAML от остальной части страница «»).</span><span class="sxs-lookup"><span data-stu-id="a1cf3-110">You generally use the API in the <xref:System.Windows.NameScope> class only if you are replacing or augmenting the base element behavior for how they process XAML namescopes for root elements of a XAML page, and as part of templates (which use a separate XAML namescope from the rest of the page).</span></span>  
  
 <span data-ttu-id="a1cf3-111">В [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], <xref:System.Windows.NameScope> предоставляет коллекцию таким образом, чтобы получить доступ к коллекции имен, которые исходят из пространства имен XAML, включая добавление через вызовы реализации интерфейса <xref:System.Windows.NameScope.Add%2A> метод.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-111">In [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)], <xref:System.Windows.NameScope> provides collection interface implementations such that you can access the collections of names that are held by a XAML namescope, including adding to it through calls to an <xref:System.Windows.NameScope.Add%2A> method.</span></span>  
  
 <span data-ttu-id="a1cf3-112">Дополнительные сведения о концепции области видимости имен XAML см. в разделе [области имен XAML WPF](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span><span class="sxs-lookup"><span data-stu-id="a1cf3-112">For more information on XAML namescope concepts, see [WPF XAML Namescopes](~/docs/framework/wpf/advanced/wpf-xaml-namescopes.md).</span></span>  
  
 <span data-ttu-id="a1cf3-113">Имена в области имен XAML должны использовать определенную грамматику, которая ограничивает строки, можно использовать для входных данных <xref:System.Windows.NameScope> API.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-113">Names in a XAML namescope must use a particular grammar that restricts the strings you might use for inputs of <xref:System.Windows.NameScope> API.</span></span> <span data-ttu-id="a1cf3-114">В разделе [Грамматика XamlName](~/docs/framework/xaml-services/xamlname-grammar.md).</span><span class="sxs-lookup"><span data-stu-id="a1cf3-114">See [XamlName Grammar](~/docs/framework/xaml-services/xamlname-grammar.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Windows.Markup.INameScope" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NameScope ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NameScope();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1cf3-115">Инициализирует новый экземпляр класса <see cref="T:System.Windows.NameScope" />.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-115">Initializes a new instance of the <see cref="T:System.Windows.NameScope" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a1cf3-116">Добавляет элемент в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-116">Adds an item to the collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Collections.Generic.KeyValuePair&lt;string,object&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.Add(System.Collections.Generic.KeyValuePair{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (item As KeyValuePair(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt; item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="a1cf3-117">Объект <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (ключ — <see cref="T:System.String" />, значение — <see cref="T:System.Object" />), представляющий сопоставление имен для добавления в область видимости имен XAML.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-117">A <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (key is <see cref="T:System.String" />, value is <see cref="T:System.Object" />) that represents the name mapping to add to the XAML namescope.</span></span></param>
        <summary><span data-ttu-id="a1cf3-118">Добавляет элемент в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-118">Adds an item to the collection.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a1cf3-119">Один или оба компонента <paramref name="item" /> имеют значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-119">Either or both components of <paramref name="item" /> are <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string key, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(string key, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.Add(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (key As String, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(System::String ^ key, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Add(`0,`1)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="a1cf3-120">Строковый ключ, представляющий собой имя в добавляемом сопоставлении области видимости имен XAML.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-120">The string key, which is the name of the XAML namescope mapping to add.</span></span></param>
        <param name="value"><span data-ttu-id="a1cf3-121">Значение-объект, представляющее собой ссылку на объект в добавляемом сопоставлении области видимости имен XAML.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-121">The object value, which is the object reference of the XAML namescope mapping to add.</span></span></param>
        <summary><span data-ttu-id="a1cf3-122">Добавляет элемент в коллекцию.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-122">Adds an item to the collection.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cf3-123">Этот метод в основном обертывает <xref:System.Windows.NameScope.Add%2A> , нет необходимости включать <xref:System.Collections.Generic.KeyValuePair%602> типа в использовании веб.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-123">This method basically wraps <xref:System.Windows.NameScope.Add%2A> so that it is not necessary to involve the <xref:System.Collections.Generic.KeyValuePair%602> type in your usage.</span></span>  
  
 <span data-ttu-id="a1cf3-124">Имена в области имен XAML должны использовать определенную грамматику, которая ограничивает строки, можно использовать для входных данных <xref:System.Windows.NameScope> API.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-124">Names in a XAML namescope must use a particular grammar that restricts the strings you might use for inputs of <xref:System.Windows.NameScope> API.</span></span> <span data-ttu-id="a1cf3-125">В разделе [Грамматика XamlName](~/docs/framework/xaml-services/xamlname-grammar.md).</span><span class="sxs-lookup"><span data-stu-id="a1cf3-125">See [XamlName Grammar](~/docs/framework/xaml-services/xamlname-grammar.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a1cf3-126">Параметр <paramref name="key" /> или <paramref name="value" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-126"><paramref name="key" /> or <paramref name="value" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1cf3-127">Удаляет все элементы из коллекции.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-127">Removes all items from the collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Collections.Generic.KeyValuePair&lt;string,object&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.Contains(System.Collections.Generic.KeyValuePair{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (item As KeyValuePair(Of String, Object)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt; item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="a1cf3-128">Искомый элемент коллекции, заданный в виде <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (ключ — <see cref="T:System.String" />, значение — <see cref="T:System.Object" />).</span><span class="sxs-lookup"><span data-stu-id="a1cf3-128">The item to find in the collection, specified as a <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (key is <see cref="T:System.String" />, value is <see cref="T:System.Object" />).</span></span></param>
        <summary><span data-ttu-id="a1cf3-129">Определяет, содержит ли коллекция указанный элемент.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-129">Determines whether the collection contains a specified item.</span></span></summary>
        <returns>
          <span data-ttu-id="a1cf3-130">Значение <see langword="true" />, если указанный параметр <see cref="T:System.Collections.Generic.KeyValuePair`2" /> обозначает имя существующего сопоставления в данной области <see cref="T:System.Windows.NameScope" />.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-130"><see langword="true" /> if the specified <see cref="T:System.Collections.Generic.KeyValuePair`2" /> identifies an existing mapping in this <see cref="T:System.Windows.NameScope" /> .</span></span> <span data-ttu-id="a1cf3-131">Значение <see langword="false" />, если заданного ключа <see cref="T:System.Collections.Generic.KeyValuePair`2" /> не существует в текущей области <see cref="T:System.Windows.NameScope" />.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-131"><see langword="false" /> if the specified <see cref="T:System.Collections.Generic.KeyValuePair`2" /> does not exist in the current <see cref="T:System.Windows.NameScope" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cf3-132">Обычно вас интересуют только уже определен имя области имен XAML, и он сопоставляется значение ссылки какой объект не имеет значения.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-132">Generally you are only interested in whether a name is already defined in the XAML namescope, and what object reference value it is mapped to is immaterial.</span></span> <span data-ttu-id="a1cf3-133">В этом сценарии можно вызвать <xref:System.Windows.NameScope.ContainsKey%2A> вместо него.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-133">For this scenario, you can call <xref:System.Windows.NameScope.ContainsKey%2A> instead.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a1cf3-134">Свойство <paramref name="key" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-134"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ContainsKey">
      <MemberSignature Language="C#" Value="public bool ContainsKey (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool ContainsKey(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.ContainsKey(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ContainsKey (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool ContainsKey(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.ContainsKey(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="a1cf3-135">Искомый строковый ключ.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-135">The string key to find.</span></span></param>
        <summary><span data-ttu-id="a1cf3-136">Возвращает значение, указывающее, существует ли заданное имя в данном объекте <see cref="T:System.Windows.NameScope" />.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-136">Returns whether a provided name already exists in this <see cref="T:System.Windows.NameScope" />.</span></span></summary>
        <returns>
          <span data-ttu-id="a1cf3-137">Значение <see langword="true" />, если указанный параметр <paramref name="key" /> обозначает имя существующего сопоставления в данной области <see cref="T:System.Windows.NameScope" />.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-137"><see langword="true" /> if the specified <paramref name="key" /> identifies a name for an existing mapping in this <see cref="T:System.Windows.NameScope" />.</span></span> <span data-ttu-id="a1cf3-138">Значение <see langword="false" />, если заданного ключа <paramref name="key" /> не существует в текущей области <see cref="T:System.Windows.NameScope" />.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-138"><see langword="false" /> if the specified <paramref name="key" /> does not exist in the current <see cref="T:System.Windows.NameScope" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cf3-139">Имена в области имен XAML должны использовать определенную грамматику, которая ограничивает строки, можно использовать для входных данных <xref:System.Windows.NameScope> API.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-139">Names in a XAML namescope must use a particular grammar that restricts the strings you might use for inputs of <xref:System.Windows.NameScope> API.</span></span> <span data-ttu-id="a1cf3-140">В разделе [Грамматика XamlName](~/docs/framework/xaml-services/xamlname-grammar.md).</span><span class="sxs-lookup"><span data-stu-id="a1cf3-140">See [XamlName Grammar](~/docs/framework/xaml-services/xamlname-grammar.md).</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a1cf3-141">Свойство <paramref name="key" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-141"><paramref name="key" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Collections.Generic.KeyValuePair&lt;string,object&gt;[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.CopyTo(System.Collections.Generic.KeyValuePair{System.String,System.Object}[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As KeyValuePair(Of String, Object)(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ array, int arrayIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><span data-ttu-id="a1cf3-142">Одномерный массив, в который копируются элементы коллекции. Его индексация должна начинаться с нуля.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-142">The one-dimensional array that is the destination of the elements copied from the collection The array must have zero-based indexing.</span></span></param>
        <param name="arrayIndex"><span data-ttu-id="a1cf3-143">Отсчитываемый от нуля индекс в <c>массиве</c> с которого начинается копирование.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-143">The zero-based index in <c>array</c> at which copying begins.</span></span></param>
        <summary><span data-ttu-id="a1cf3-144">Копирует элементы коллекции в массив начиная с определенного индекса в массиве.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-144">Copies the elements of the collection to an array, starting at a particular array index.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Windows.NameScope.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1cf3-145">Возвращает число элементов в коллекции сопоставленных имен в данном объекте <see cref="T:System.Windows.NameScope" />.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-145">Returns the number of items in the collection of mapped names in this <see cref="T:System.Windows.NameScope" />.</span></span></summary>
        <value><span data-ttu-id="a1cf3-146">Количество элементов в коллекции.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-146">The number of items in the collection.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FindName">
      <MemberSignature Language="C#" Value="public object FindName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object FindName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.FindName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindName (name As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ FindName(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.INameScope.FindName(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a1cf3-147">Часть имени существующего сопоставления для извлекаемой части объекта.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-147">Name portion of an existing mapping to retrieve the object portion for.</span></span></param>
        <summary><span data-ttu-id="a1cf3-148">Возвращает соответствующий объект в области видимости имен XAML, поддерживаемой данным объектом <see cref="T:System.Windows.NameScope" />, на основании заданной строки имени.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-148">Returns the corresponding object in the XAML namescope maintained by this <see cref="T:System.Windows.NameScope" />, based on a provided name string.</span></span></summary>
        <returns><span data-ttu-id="a1cf3-149">Запрошенный объект, сопоставленный заданному параметром <paramref name="name" /> имени.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-149">The requested object that is mapped with <paramref name="name" />.</span></span> <span data-ttu-id="a1cf3-150">Может возвратить значение <see langword="null" />, если параметр <paramref name="name" /> был предоставлен в виде <see langword="null" /> или пустой строки, или если соответствующий объект не был обнаружен.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-150">Can return <see langword="null" /> if <paramref name="name" /> was provided as <see langword="null" /> or empty string, or if no matching object was found.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cf3-151">Некоторые базовые элементы (<xref:System.Windows.FrameworkElement>, <xref:System.Windows.FrameworkElement>) также предоставляют `FindName` метод с одинаковой функциональностью.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-151">Several base elements (<xref:System.Windows.FrameworkElement>, <xref:System.Windows.FrameworkElement>) also expose a `FindName` method with identical functionality.</span></span> <span data-ttu-id="a1cf3-152">Версии базовых элементов выполняют поиск области видимости имен XAML обычной логического дерева, двигаясь корневого элемента.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-152">The base element versions perform a XAML namescope search within the conventional logical tree, working towards the root element.</span></span> <span data-ttu-id="a1cf3-153">После определения области имен XAML для запрошенного имени запрашивается этой области имен XAML.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-153">Once the XAML namescope is determined, that XAML namescope is queried for the requested name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.FrameworkElement.FindName(System.String)" />
        <altmember cref="M:System.Windows.FrameworkContentElement.FindName(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetNameScope">
      <MemberSignature Language="C#" Value="public static System.Windows.Markup.INameScope GetNameScope (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.Markup.INameScope GetNameScope(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.GetNameScope(System.Windows.DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::Markup::INameScope ^ GetNameScope(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Markup.INameScope</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject"><span data-ttu-id="a1cf3-154">Объект, из которого возвращается область имен XAML.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-154">The object to get the XAML namescope from.</span></span></param>
        <summary><span data-ttu-id="a1cf3-155">Предоставляет метод доступа get вложенного свойства зависимостей для вложенного свойства зависимостей <see cref="P:System.Windows.NameScope.NameScope" />.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-155">Provides the attached property get accessor for the <see cref="P:System.Windows.NameScope.NameScope" /> attached property.</span></span></summary>
        <returns><span data-ttu-id="a1cf3-156">Область видимости имен XAML, в виде экземпляра <see cref="T:System.Windows.Markup.INameScope" />.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-156">A XAML namescope, as an <see cref="T:System.Windows.Markup.INameScope" /> instance.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cf3-157">Этот метод предназначен для реализации обоих `get` метод доступа для использования <xref:System.Windows.NameScope.NameScope%2A> как вложенное свойство при использовании XAML, а также для предоставления метода доступа для реализации эквивалентной операции в коде.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-157">The purpose of this method is both to implement the `get` accessor for using <xref:System.Windows.NameScope.NameScope%2A> as an attached property in XAML usage, and to provide the accessor for performing the equivalent operation in code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a1cf3-158">Свойство <paramref name="dependencyObject" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-158"><paramref name="dependencyObject" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Windows.Markup.INameScope" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Windows.NameScope.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1cf3-159">Возвращает значение, указывающее, является ли коллекция доступной только для чтения.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-159">Gets a value indicating whether the collection is read-only.</span></span></summary>
        <value><span data-ttu-id="a1cf3-160">Всегда возвращает значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-160">Always returns <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public object this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Windows.NameScope.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public Property Item(key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ key); void set(System::String ^ key, System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Item(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="a1cf3-161">Строковое имя для сопоставления имени XAML, которое требуется получить или задать.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-161">The string name for the XAML name mapping to get or set.</span></span></param>
        <summary><span data-ttu-id="a1cf3-162">Получает или задает элемент с заданным ключом.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-162">Gets or sets the item with the specified key.</span></span></summary>
        <value><span data-ttu-id="a1cf3-163">Значение объекта, сопоставленное имени XAML, переданному в виде параметра <paramref name="key" />.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-163">The value of the object mapped by the XAML name provided as <paramref name="key" />.</span></span></value>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a1cf3-164"><paramref name="key" /> предоставляется в виде <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-164"><paramref name="key" /> is provided as <see langword="null" />.</span></span>  
  
 <span data-ttu-id="a1cf3-165">- или -</span><span class="sxs-lookup"><span data-stu-id="a1cf3-165">-or-</span></span>  
  
 <span data-ttu-id="a1cf3-166">Для операции установки <paramref name="value" /> задается как <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-166"><paramref name="value" /> is provided as <see langword="null" /> for a set operation.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Keys">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;string&gt; Keys { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;string&gt; Keys" />
      <MemberSignature Language="DocId" Value="P:System.Windows.NameScope.Keys" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Keys As ICollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ Keys { System::Collections::Generic::ICollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Keys</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1cf3-167">Получает коллекцию ключей в словаре <see cref="T:System.Windows.NameScope" />.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-167">Gets a collection of the keys in the <see cref="T:System.Windows.NameScope" /> dictionary.</span></span></summary>
        <value><span data-ttu-id="a1cf3-168">Коллекция ключей в словаре <see cref="T:System.Windows.NameScope" />.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-168">A collection of the keys in the <see cref="T:System.Windows.NameScope" /> dictionary.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NameScope">
      <MemberSignature Language="C#" Value="see GetNameScope, and SetNameScope" />
      <MemberSignature Language="ILAsm" Value="see GetNameScope, and SetNameScope" />
      <MemberSignature Language="DocId" Value="P:System.Windows.NameScope.NameScope" />
      <MemberSignature Language="VB.NET" Value="see GetNameScope, and SetNameScope" />
      <MemberType>AttachedProperty</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NameScopeProperty">
      <MemberSignature Language="C#" Value="public static readonly System.Windows.DependencyProperty NameScopeProperty;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly class System.Windows.DependencyProperty NameScopeProperty" />
      <MemberSignature Language="DocId" Value="F:System.Windows.NameScope.NameScopeProperty" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NameScopeProperty As DependencyProperty " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::Windows::DependencyProperty ^ NameScopeProperty;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.DependencyProperty</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1cf3-169">Идентифицирует присоединенное свойство <see cref="P:System.Windows.NameScope.NameScope" />.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-169">Identifies the <see cref="P:System.Windows.NameScope.NameScope" /> attached property.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RegisterName">
      <MemberSignature Language="C#" Value="public void RegisterName (string name, object scopedElement);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RegisterName(string name, object scopedElement) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.RegisterName(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RegisterName (name As String, scopedElement As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RegisterName(System::String ^ name, System::Object ^ scopedElement);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.INameScope.RegisterName(System.String,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="scopedElement" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a1cf3-170">Имя, используемое для сопоставления указанного объекта.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-170">The name to use for mapping the given object.</span></span></param>
        <param name="scopedElement"><span data-ttu-id="a1cf3-171">Объект для сопоставления с заданным именем.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-171">The object to be mapped to the provided name.</span></span></param>
        <summary><span data-ttu-id="a1cf3-172">Регистрирует новую пару "имя-объект" в текущем пространстве имен XAML.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-172">Registers a new name-object pair into the current XAML namescope.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a1cf3-173"><paramref name="name" /> или <paramref name="scopedElement" /> предоставлен в виде <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-173"><paramref name="name" /> or <paramref name="scopedElement" /> was provided as <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a1cf3-174"><paramref name="name" /> предоставлен в виде пустой строки</span><span class="sxs-lookup"><span data-stu-id="a1cf3-174"><paramref name="name" /> was provided as empty string</span></span>  
  
 <span data-ttu-id="a1cf3-175">\- или -</span><span class="sxs-lookup"><span data-stu-id="a1cf3-175">\- or -</span></span>  
  
 <span data-ttu-id="a1cf3-176">Предоставленный <paramref name="name" /> был отвергнут анализатором, так как содержал символы, недопустимые для имени XAML</span><span class="sxs-lookup"><span data-stu-id="a1cf3-176"><paramref name="name" /> provided was rejected by the parser, because it contained characters that are invalid for a XAML name</span></span>  
  
 <span data-ttu-id="a1cf3-177">\- или -</span><span class="sxs-lookup"><span data-stu-id="a1cf3-177">\- or -</span></span>  
  
 <span data-ttu-id="a1cf3-178">Предоставленный <paramref name="name" /> приведет к регистрации дублирующегося имени.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-178"><paramref name="name" /> provided would result in a duplicate name registration.</span></span></exception>
        <altmember cref="T:System.Windows.Markup.INameScope" />
        <altmember cref="M:System.Windows.FrameworkElement.RegisterName(System.String,System.Object)" />
        <altmember cref="M:System.Windows.FrameworkContentElement.RegisterName(System.String,System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Remove">
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a1cf3-179">Удаляет из коллекции определенный объект.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-179">Removes the specific object from the collection.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (System.Collections.Generic.KeyValuePair&lt;string,object&gt; item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.Remove(System.Collections.Generic.KeyValuePair{System.String,System.Object})" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (item As KeyValuePair(Of String, Object)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt; item);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;" />
      </Parameters>
      <Docs>
        <param name="item"><span data-ttu-id="a1cf3-180">Объект для удаления из коллекции, заданный в виде <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (ключ — <see cref="T:System.String" />, значение — <see cref="T:System.Object" />).</span><span class="sxs-lookup"><span data-stu-id="a1cf3-180">The object to remove from the collection, specified as a <see cref="T:System.Collections.Generic.KeyValuePair`2" /> (key is <see cref="T:System.String" />, value is <see cref="T:System.Object" />).</span></span></param>
        <summary><span data-ttu-id="a1cf3-181">Удаляет из коллекции определенный объект.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-181">Removes the specific object from the collection.</span></span></summary>
        <returns>
          <span data-ttu-id="a1cf3-182">Значение <see langword="true" />, если элемент был успешно удален из коллекции; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-182"><see langword="true" /> if item was successfully removed from the collection, otherwise <see langword="false" />.</span></span> <span data-ttu-id="a1cf3-183">Также возвращает значение <see langword="false" />, если элемент не был найден в коллекции.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-183">Also returns <see langword="false" /> if the item was not found in the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cf3-184">Так как <xref:System.Windows.NameScope> представляет собой словарь отсутствует понятие первое вхождение; любой заданной <xref:System.Collections.Generic.KeyValuePair%602> гарантированно уникальным.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-184">Because <xref:System.Windows.NameScope> is a dictionary there is no concept of first occurrence; any given <xref:System.Collections.Generic.KeyValuePair%602> is guaranteed unique.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (string key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(string key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.Remove(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (key As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(System::String ^ key);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IDictionary`2.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="a1cf3-185">Строковый ключ, представляющий собой имя в удаляемом сопоставлении области видимости имен XAML.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-185">The string key, which is the name of the XAML namescope mapping to remove.</span></span></param>
        <summary><span data-ttu-id="a1cf3-186">Удаляет из коллекции сопоставление для заданного имени.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-186">Removes a mapping for a specified name from the collection.</span></span></summary>
        <returns>
          <span data-ttu-id="a1cf3-187">Значение <see langword="true" />, если элемент был успешно удален из коллекции; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-187"><see langword="true" /> if item was successfully removed from the collection, otherwise <see langword="false" />.</span></span> <span data-ttu-id="a1cf3-188">Также возвращает значение <see langword="false" />, если элемент не был найден в коллекции.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-188">Also returns <see langword="false" /> if the item was not found in the collection.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cf3-189">Этот метод в основном обертывает <xref:System.Windows.NameScope.UnregisterName%2A>возвращается `false` в случаях, когда в противном случае вызвало бы исключения в <xref:System.Windows.NameScope.UnregisterName%2A>.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-189">This method basically wraps <xref:System.Windows.NameScope.UnregisterName%2A>, returning `false` in cases that otherwise would have raised exceptions in <xref:System.Windows.NameScope.UnregisterName%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetNameScope">
      <MemberSignature Language="C#" Value="public static void SetNameScope (System.Windows.DependencyObject dependencyObject, System.Windows.Markup.INameScope value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void SetNameScope(class System.Windows.DependencyObject dependencyObject, class System.Windows.Markup.INameScope value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.SetNameScope(System.Windows.DependencyObject,System.Windows.Markup.INameScope)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void SetNameScope(System::Windows::DependencyObject ^ dependencyObject, System::Windows::Markup::INameScope ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
        <Parameter Name="value" Type="System.Windows.Markup.INameScope" />
      </Parameters>
      <Docs>
        <param name="dependencyObject"><span data-ttu-id="a1cf3-190">Объект, для которого необходимо изменить область имен XAML.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-190">Object to change XAML namescope for.</span></span></param>
        <param name="value"><span data-ttu-id="a1cf3-191">Новая область имен XAML, полученная с помощью приведения к интерфейсу.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-191">The new XAML namescope, using an interface cast.</span></span></param>
        <summary><span data-ttu-id="a1cf3-192">Предоставляет метод доступа set вложенного свойства зависимостей для вложенного свойства зависимостей <see cref="P:System.Windows.NameScope.NameScope" />.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-192">Provides the attached property set accessor for the <see cref="P:System.Windows.NameScope.NameScope" /> attached property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cf3-193">Этот метод предназначен как для работы в качестве `set` метод доступа для использования <xref:System.Windows.NameScope.NameScope%2A> как вложенное свойство при использовании XAML, а также для предоставления метода доступа для реализации эквивалентной операции в коде.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-193">The purpose of this method is both to act as the `set` accessor for using <xref:System.Windows.NameScope.NameScope%2A> as an attached property in XAML usage, and to provide the accessor for performing the equivalent operation in code.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a1cf3-194">Свойство <paramref name="dependencyObject" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-194"><paramref name="dependencyObject" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Windows.Markup.INameScope" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; IEnumerable&lt;KeyValuePair&lt;string,object&gt;&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.System#Collections#Generic#IEnumerable&lt;System#Collections#Generic#KeyValuePair&lt;System#String,System#Object&gt;&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of String, Object)) Implements IEnumerable(Of KeyValuePair(Of String, Object)).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="a1cf3-195">Возвращает перечислитель, который осуществляет итерацию по коллекции.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-195">Returns an enumerator that iterates through a collection.</span></span></summary>
        <returns><span data-ttu-id="a1cf3-196">Перечислитель, который осуществляет перебор коллекции.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-196">An enumerator that iterates through a collection.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetValue">
      <MemberSignature Language="C#" Value="public bool TryGetValue (string key, out object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryGetValue(string key, [out] object&amp; value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.TryGetValue(System.String,System.Object@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetValue (key As String, ByRef value As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryGetValue(System::String ^ key, [Runtime::InteropServices::Out] System::Object ^ % value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key"><span data-ttu-id="a1cf3-197">Ключ значения, которое необходимо получить.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-197">The key of the value to get.</span></span></param>
        <param name="value"><span data-ttu-id="a1cf3-198">При возвращении метода содержит значение, связанное с заданным ключом, если ключ найден; в противном случае содержит пустой объект.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-198">When this method returns, contains the value associated with the specified key, if the key is found; otherwise, a null object.</span></span> <span data-ttu-id="a1cf3-199">Этот параметр передается неинициализированным.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-199">This parameter is passed uninitialized.</span></span></param>
        <summary><span data-ttu-id="a1cf3-200">Возвращает значение, связанное с заданным ключом.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-200">Gets the value associated with the specified key.</span></span></summary>
        <returns><span data-ttu-id="a1cf3-201">Значение true, если объект <see cref="T:System.Windows.NameScope" /> содержит сопоставление для имени, переданного в виде параметра <paramref name="key" />.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-201">true if the <see cref="T:System.Windows.NameScope" /> contains a mapping for the name provided as <paramref name="key" />.</span></span> <span data-ttu-id="a1cf3-202">В противном случае — значение false.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-202">Otherwise, false.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="UnregisterName">
      <MemberSignature Language="C#" Value="public void UnregisterName (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UnregisterName(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.NameScope.UnregisterName(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub UnregisterName (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UnregisterName(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Windows.Markup.INameScope.UnregisterName(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="a1cf3-203">Имя удаляемого сопоставления.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-203">The name of the mapping to remove.</span></span></param>
        <summary><span data-ttu-id="a1cf3-204">Удаляет сопоставление имени и объекта из области имен XAML.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-204">Removes a name-object mapping from the XAML namescope.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a1cf3-205">Перед вызовом этого метода, можно использовать <xref:System.Windows.NameScope.FindName%2A> для определения наличия конкретного сопоставления имен объектов.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-205">Before calling this method, you can use <xref:System.Windows.NameScope.FindName%2A> to determine whether a specific name-object mapping exists.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="a1cf3-206"><paramref name="name" /> предоставлен в виде пустой строки.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-206"><paramref name="name" /> was provided as empty string.</span></span>  
  
 <span data-ttu-id="a1cf3-207">\- или -</span><span class="sxs-lookup"><span data-stu-id="a1cf3-207">\- or -</span></span>  
  
 <span data-ttu-id="a1cf3-208">Предоставленный <paramref name="name" /> не зарегистрирован.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-208"><paramref name="name" /> provided had not been registered.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="a1cf3-209">Свойство <paramref name="name" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-209"><paramref name="name" /> is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Windows.Markup.INameScope" />
        <altmember cref="M:System.Windows.FrameworkElement.UnregisterName(System.String)" />
        <altmember cref="M:System.Windows.FrameworkContentElement.UnregisterName(System.String)" />
        <altmember cref="M:System.Windows.NameScope.RegisterName(System.String,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;object&gt; Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.ICollection`1&lt;object&gt; Values" />
      <MemberSignature Language="DocId" Value="P:System.Windows.NameScope.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As ICollection(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::ICollection&lt;System::Object ^&gt; ^ Values { System::Collections::Generic::ICollection&lt;System::Object ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.IDictionary`2.Values</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>WindowsBase</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a1cf3-210">Получает коллекцию значений в словаре <see cref="T:System.Windows.NameScope" />.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-210">Gets a collection of the values in the <see cref="T:System.Windows.NameScope" /> dictionary.</span></span></summary>
        <value><span data-ttu-id="a1cf3-211">Коллекция значений в словаре <see cref="T:System.Windows.NameScope" />.</span><span class="sxs-lookup"><span data-stu-id="a1cf3-211">A collection of the values in the <see cref="T:System.Windows.NameScope" /> dictionary.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>