<Type Name="PresentationSource" FullName="System.Windows.PresentationSource">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="d67ea1e465aa4e0b5a78b34ceb8f9bf32ea9bd1b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class PresentationSource : System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract PresentationSource extends System.Windows.Threading.DispatcherObject" />
  <TypeSignature Language="DocId" Value="T:System.Windows.PresentationSource" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class PresentationSource&#xA;Inherits DispatcherObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class PresentationSource abstract : System::Windows::Threading::DispatcherObject" />
  <AssemblyInfo>
    <AssemblyName>PresentationCore</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Windows.Threading.DispatcherObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="cec51-101">Предоставляет абстрактную базу для классов, представляющих содержимое на основе другой технологии как часть скрипта взаимодействия.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cec51-101">Provides an abstract base for classes that present content from another technology as part of an interoperation scenario.</span>
      </span>
      <span data-ttu-id="cec51-102">Кроме того, данный класс предоставляет статические методы для работы с такими источниками, а также базовую архитектуру презентации визуального слоя.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cec51-102">In addition, this class provides static methods for working with these sources, as well as the basic visual-layer presentation architecture.</span>
      </span>
    </summary>
    <remarks>To be added.</remarks>
    <permission cref="T:System.Security.Permissions.UIPermission">
      <span data-ttu-id="cec51-103">наследование от этого класса.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cec51-103">to derive from this class.</span>
      </span>
      <span data-ttu-id="cec51-104">Связанное перечисление: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
      <span class="sxs-lookup">
        <span data-stu-id="cec51-104">Associated enumeration: <see cref="F:System.Security.Permissions.PermissionState.Unrestricted" />.</span>
      </span>
    </permission>
    <altmember cref="T:System.Windows.Interop.HwndSource" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected PresentationSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; PresentationSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cec51-105">При вызове конструктором производного класса обеспечивает инициализацию значений базового класса.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cec51-105">Provides initialization for base class values when called by the constructor of a derived class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSource">
      <MemberSignature Language="C#" Value="protected void AddSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void AddSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.AddSource" />
      <MemberSignature Language="VB.NET" Value="Protected Sub AddSource ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void AddSource();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cec51-106">Добавляет экземпляр производного класса <see cref="T:System.Windows.PresentationSource" /> в список известных источников презентаций.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cec51-106">Adds a <see cref="T:System.Windows.PresentationSource" /> derived class instance to the list of known presentation sources.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cec51-107">Этот метод должен вызываться производными классами для указания, что они должны отслеживаться.</span><span class="sxs-lookup"><span data-stu-id="cec51-107">This method should be called by derived classes to indicate that they need to be tracked.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddSourceChangedHandler">
      <MemberSignature Language="C#" Value="public static void AddSourceChangedHandler (System.Windows.IInputElement element, System.Windows.SourceChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void AddSourceChangedHandler(class System.Windows.IInputElement element, class System.Windows.SourceChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub AddSourceChangedHandler (element As IInputElement, handler As SourceChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void AddSourceChangedHandler(System::Windows::IInputElement ^ element, System::Windows::SourceChangedEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="element" Type="System.Windows.IInputElement" />
        <Parameter Name="handler" Type="System.Windows.SourceChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="element">
          <span data-ttu-id="cec51-108">Элемент, в который добавляется обработчик.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cec51-108">The element to add the handler to.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="cec51-109">Добавляемая реализация обработчика.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cec51-109">The hander implementation to add.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cec51-110">Добавляет обработчик событий <see langword="SourceChanged" /> в предоставленный элемент.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cec51-110">Adds a handler for the <see langword="SourceChanged" /> event to the provided element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cec51-111">Несмотря на то, какие состояния блока синтаксиса для данного события, нет, не допустимых [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] прикрепленное свойство.</span><span class="sxs-lookup"><span data-stu-id="cec51-111">Despite what the syntax block for this event states, there is no legitimate [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)] attached property usage.</span></span> <span data-ttu-id="cec51-112">Не следует пытаться добавить обработчики в [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], и в коде обработчики должны размещаться только на объекты, которые служат в качестве узлов для представления (<xref:System.Windows.PresentationSource> ) содержимое.</span><span class="sxs-lookup"><span data-stu-id="cec51-112">You should not attempt to add handlers in [!INCLUDE[TLA#tla_xaml](~/includes/tlasharptla-xaml-md.md)], and handlers in code should only be placed on objects that serve as hosts for presentation (<xref:System.Windows.PresentationSource> ) content.</span></span> <span data-ttu-id="cec51-113">Такие обработчики должен быть присоединен во время инициализации объекта и необходимо явно удалять в методе Dispose или эквивалентный объект очистки.</span><span class="sxs-lookup"><span data-stu-id="cec51-113">Such handlers should only be attached during object initialization, and should be explicitly removed in a Dispose method or equivalent object cleanup.</span></span>  
  
 <span data-ttu-id="cec51-114">Несмотря на то, что это перенаправленного события, существуют специальные ограничения на это событие, отличающиеся от обычного поведения маршрутизируемых событий, из-за относительно небольшого числа элементов в сценарии типичного приложения, которые будут затронуты обработки такой событие.</span><span class="sxs-lookup"><span data-stu-id="cec51-114">Even though this is a routed event, there are special restrictions placed on this event that differ from normal routed event behavior, due to the relatively small number of elements in a typical application scenario that would concern themselves with handling this event.</span></span>  
  
-   <span data-ttu-id="cec51-115">Нельзя использовать <xref:System.Windows.UIElement> или <xref:System.Windows.ContentElement> <xref:System.Windows.UIElement.AddHandler%2A> методы для добавления обработчиков.</span><span class="sxs-lookup"><span data-stu-id="cec51-115">You cannot use the <xref:System.Windows.UIElement> or <xref:System.Windows.ContentElement> <xref:System.Windows.UIElement.AddHandler%2A> methods to add handlers.</span></span> <span data-ttu-id="cec51-116">Необходимо использовать <xref:System.Windows.PresentationSource.AddSourceChangedHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="cec51-116">You must use <xref:System.Windows.PresentationSource.AddSourceChangedHandler%2A>.</span></span>  
  
-   <span data-ttu-id="cec51-117">[!INCLUDE[TLA#tla_cshrp](~/includes/tlasharptla-cshrp-md.md)] `+=` И `-=` синтаксиса обработчика событий и связанные с языком синтаксисы обработчиков, не поддерживается, так как событие само по себе не представляется как public.</span><span class="sxs-lookup"><span data-stu-id="cec51-117">The [!INCLUDE[TLA#tla_cshrp](~/includes/tlasharptla-cshrp-md.md)] `+=` and `-=` event handler syntaxes, and related language specific handler syntaxes, are not supported, because the event itself is not exposed as public.</span></span> <span data-ttu-id="cec51-118">Только <xref:System.Windows.PresentationSource> служебные методы для добавления и удаления обработчиков напрямую поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="cec51-118">Only the <xref:System.Windows.PresentationSource> utility methods for adding and removing the handlers directly are supported.</span></span>  
  
-   <span data-ttu-id="cec51-119">Обработчики класса не допускаются.</span><span class="sxs-lookup"><span data-stu-id="cec51-119">Class handlers are not allowed.</span></span> <span data-ttu-id="cec51-120">В частности, не удается вызвать <xref:System.Windows.EventManager.RegisterClassHandler%2A> для данного события в конструкторе класса, поскольку несмотря на то, что поле идентификатора существует для SourceChanged, идентификатор не является общедоступным.</span><span class="sxs-lookup"><span data-stu-id="cec51-120">Specifically, you cannot call <xref:System.Windows.EventManager.RegisterClassHandler%2A> against this event in a class constructor because although an identifier field exists for SourceChanged, the identifier is not public.</span></span>  
  
-   <span data-ttu-id="cec51-121">Все зарегистрированные обработчики получат событие SourceChanged, даже если один из обработчиков попытается пометить аргументы как обработанное.</span><span class="sxs-lookup"><span data-stu-id="cec51-121">All registered handlers will receive the SourceChanged event even if one of the handlers attempts to mark the arguments as handled.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="cec51-122">для вызова или реализации этого метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cec51-122">to call or implement this method.</span>
          </span>
          <span data-ttu-id="cec51-123">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cec51-123">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="ClearContentRenderedListeners">
      <MemberSignature Language="C#" Value="protected void ClearContentRenderedListeners ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void ClearContentRenderedListeners() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.ClearContentRenderedListeners" />
      <MemberSignature Language="VB.NET" Value="Protected Sub ClearContentRenderedListeners ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void ClearContentRenderedListeners();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cec51-124">Задает для списка прослушивателей события <see cref="E:System.Windows.PresentationSource.ContentRendered" /> значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cec51-124">Sets the list of listeners for the <see cref="E:System.Windows.PresentationSource.ContentRendered" /> event to <see langword="null" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Windows.PresentationSource.ContentRendered" />
      </Docs>
    </Member>
    <Member MemberName="CompositionTarget">
      <MemberSignature Language="C#" Value="public System.Windows.Media.CompositionTarget CompositionTarget { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.CompositionTarget CompositionTarget" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PresentationSource.CompositionTarget" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CompositionTarget As CompositionTarget" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Windows::Media::CompositionTarget ^ CompositionTarget { System::Windows::Media::CompositionTarget ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.CompositionTarget</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cec51-125">Возвращает целевой визуальный объект для визуальных объектов, представляемых в источнике.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cec51-125">Gets the visual target for the visuals being presented in the source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cec51-126">Целевой визуальный объект (экземпляр производного класса <see cref="T:System.Windows.Media.CompositionTarget" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="cec51-126">A visual target (instance of a <see cref="T:System.Windows.Media.CompositionTarget" /> derived class).</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cec51-127">Возврат этого свойства зависит от реализации <xref:System.Windows.PresentationSource.GetCompositionTargetCore%2A>.</span><span class="sxs-lookup"><span data-stu-id="cec51-127">The return of this property relies on an implementation of <xref:System.Windows.PresentationSource.GetCompositionTargetCore%2A>.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="cec51-128">Производные классы могут выбирать скрытие это свойство предоставляет значение определенного типа.</span>
            <span class="sxs-lookup">
              <span data-stu-id="cec51-128">Derived classes can choose to shadow this property to offer a type-specific value.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ContentRendered">
      <MemberSignature Language="C#" Value="public event EventHandler ContentRendered;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ContentRendered" />
      <MemberSignature Language="DocId" Value="E:System.Windows.PresentationSource.ContentRendered" />
      <MemberSignature Language="VB.NET" Value="Public Event ContentRendered As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ContentRendered;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cec51-129">Происходит, когда содержимое отрисовано и готово к взаимодействию с пользователем.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cec51-129">Occurs when content is rendered and ready for user interaction.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CurrentSources">
      <MemberSignature Language="C#" Value="public static System.Collections.IEnumerable CurrentSources { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Collections.IEnumerable CurrentSources" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PresentationSource.CurrentSources" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property CurrentSources As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Collections::IEnumerable ^ CurrentSources { System::Collections::IEnumerable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cec51-130">Возвращает список источников.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cec51-130">Returns a list of sources.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cec51-131">Список слабых ссылок.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cec51-131">A list of weak references.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cec51-132">Возвращаемый список поддерживает перечислитель по копии только для чтения, поточно ориентированного список источников, как они добавлены с классом <xref:System.Windows.PresentationSource.AddSource%2A>.</span><span class="sxs-lookup"><span data-stu-id="cec51-132">The returned list supports an enumerator over a read-only, thread-safe copy of the list of sources as added with <xref:System.Windows.PresentationSource.AddSource%2A>.</span></span>  
  
 <span data-ttu-id="cec51-133">Перечислитель пропускает мертвой слабыми ссылками в списке.</span><span class="sxs-lookup"><span data-stu-id="cec51-133">The enumerator skips any dead weak references in the list.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="cec51-134">Для получения источников.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cec51-134">to get sources.</span>
          </span>
          <span data-ttu-id="cec51-135">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cec51-135">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="FromDependencyObject">
      <MemberSignature Language="C#" Value="public static System.Windows.PresentationSource FromDependencyObject (System.Windows.DependencyObject dependencyObject);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.PresentationSource FromDependencyObject(class System.Windows.DependencyObject dependencyObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.FromDependencyObject(System.Windows.DependencyObject)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::PresentationSource ^ FromDependencyObject(System::Windows::DependencyObject ^ dependencyObject);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PresentationSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dependencyObject" Type="System.Windows.DependencyObject" />
      </Parameters>
      <Docs>
        <param name="dependencyObject">
          <span data-ttu-id="cec51-136">Объект <see cref="T:System.Windows.DependencyObject" />, источник которого требуется найти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cec51-136">The <see cref="T:System.Windows.DependencyObject" /> to find the source for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cec51-137">Возвращает источник, в котором представлен предоставляемый <see cref="T:System.Windows.DependencyObject" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cec51-137">Returns the source in which a provided <see cref="T:System.Windows.DependencyObject" /> is presented.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cec51-138">
            <see cref="T:System.Windows.PresentationSource" />, в котором представляется объект зависимости.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cec51-138">The <see cref="T:System.Windows.PresentationSource" /> in which the dependency object is being presented.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="cec51-139">для вызова или реализации этого метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cec51-139">to call or implement this method.</span>
          </span>
          <span data-ttu-id="cec51-140">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cec51-140">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="FromVisual">
      <MemberSignature Language="C#" Value="public static System.Windows.PresentationSource FromVisual (System.Windows.Media.Visual visual);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Windows.PresentationSource FromVisual(class System.Windows.Media.Visual visual) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.FromVisual(System.Windows.Media.Visual)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Windows::PresentationSource ^ FromVisual(System::Windows::Media::Visual ^ visual);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.PresentationSource</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="visual" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="visual">
          <span data-ttu-id="cec51-141">Объект <see cref="T:System.Windows.Media.Visual" />, источник которого требуется найти.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cec51-141">The <see cref="T:System.Windows.Media.Visual" /> to find the source for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cec51-142">Возвращает источник, в котором представлен предоставляемый <see cref="T:System.Windows.Media.Visual" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cec51-142">Returns the source in which a provided <see cref="T:System.Windows.Media.Visual" /> is presented.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cec51-143">Объект <see cref="T:System.Windows.PresentationSource" />, в котором представляется визуальный объект, или значение <see langword="null" />, если <paramref name="visual" /> удаляется.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cec51-143">The <see cref="T:System.Windows.PresentationSource" /> in which the visual is being presented, or <see langword="null" /> if <paramref name="visual" /> is disposed.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="cec51-144">Свойство <paramref name="visual" /> имеет значение <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cec51-144">
              <paramref name="visual" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="cec51-145">для вызова или реализации этого метода.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cec51-145">to call or implement this method.</span>
          </span>
          <span data-ttu-id="cec51-146">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cec51-146">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
    <Member MemberName="GetCompositionTargetCore">
      <MemberSignature Language="C#" Value="protected abstract System.Windows.Media.CompositionTarget GetCompositionTargetCore ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Windows.Media.CompositionTarget GetCompositionTargetCore() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.GetCompositionTargetCore" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetCompositionTargetCore () As CompositionTarget" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Windows::Media::CompositionTarget ^ GetCompositionTargetCore();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Windows.Media.CompositionTarget</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cec51-147">При переопределении в производном классе, возвращает целевой визуальный объект для заданного источника.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cec51-147">When overridden in a derived class, returns a visual target for the given source.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="cec51-148">Возвращает <see cref="T:System.Windows.Media.CompositionTarget" />, являющийся целевым объектом для отрисовки.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cec51-148">Returns a <see cref="T:System.Windows.Media.CompositionTarget" /> that is target for rendering the visual.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="cec51-149">Переопределите этот метод, чтобы объявить значение, <see cref="P:System.Windows.PresentationSource.CompositionTarget" /> возвращает свойство только для чтения.</span>
            <span class="sxs-lookup">
              <span data-stu-id="cec51-149">Override this method to declare the value that the <see cref="P:System.Windows.PresentationSource.CompositionTarget" /> read-only property will return.</span>
            </span>
            <span data-ttu-id="cec51-150">Переопределения должны возвращать экземпляров определенного типа <see cref="T:System.Windows.Media.CompositionTarget" /> производный тип класса, который используется для взаимодействия сценария.</span>
            <span class="sxs-lookup">
              <span data-stu-id="cec51-150">Your override should return type-specific instances of the <see cref="T:System.Windows.Media.CompositionTarget" /> derived class type that is used for your interoperation scenario.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="IsDisposed">
      <MemberSignature Language="C#" Value="public abstract bool IsDisposed { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDisposed" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PresentationSource.IsDisposed" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property IsDisposed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property bool IsDisposed { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cec51-151">При переопределении в производном классе возвращает значение, объявляющее, удален ли объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cec51-151">When overridden in a derived class, gets a value that declares whether the object is disposed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cec51-152">Значение <see langword="true" />, если объект удален; в противном случае — значение <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cec51-152">
              <see langword="true" /> if the object is disposed; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <block subset="none" type="overrides">
          <para>
            <span data-ttu-id="cec51-153">Производные классы должны быть реализованы <see cref="T:System.IDisposable" /> или предоставить эквивалентное поведение.</span>
            <span class="sxs-lookup">
              <span data-stu-id="cec51-153">Derived classes are expected to implement <see cref="T:System.IDisposable" /> or provide equivalent behavior.</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="RemoveSource">
      <MemberSignature Language="C#" Value="protected void RemoveSource ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RemoveSource() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.RemoveSource" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RemoveSource ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RemoveSource();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="cec51-154">Удаляет экземпляр производного класса <see cref="T:System.Windows.PresentationSource" /> из списка известных источников презентаций.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cec51-154">Removes a <see cref="T:System.Windows.PresentationSource" /> derived class instance from the list of known presentation sources.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="RemoveSourceChangedHandler">
      <MemberSignature Language="C#" Value="public static void RemoveSourceChangedHandler (System.Windows.IInputElement e, System.Windows.SourceChangedEventHandler handler);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RemoveSourceChangedHandler(class System.Windows.IInputElement e, class System.Windows.SourceChangedEventHandler handler) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.RemoveSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RemoveSourceChangedHandler (e As IInputElement, handler As SourceChangedEventHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RemoveSourceChangedHandler(System::Windows::IInputElement ^ e, System::Windows::SourceChangedEventHandler ^ handler);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Windows.IInputElement" />
        <Parameter Name="handler" Type="System.Windows.SourceChangedEventHandler" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="cec51-155">Элемент, из которого удаляется обработчик.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cec51-155">The element to remove the handler from.</span>
          </span>
        </param>
        <param name="handler">
          <span data-ttu-id="cec51-156">Удаляемая реализация обработчика.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cec51-156">The handler implementation to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cec51-157">Удаляет обработчик событий <see langword="SourceChanged" /> из предоставленного элемента.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cec51-157">Removes a handler for the <see langword="SourceChanged" /> event from the provided element.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cec51-158">Несмотря на то, что это перенаправленного события, существуют специальные ограничения на это событие, отличающиеся от обычного поведения маршрутизируемых событий, из-за относительно небольшого числа элементов в сценарии типичного приложения, которые будут затронуты обработки такой событие.</span><span class="sxs-lookup"><span data-stu-id="cec51-158">Even though this is a routed event, there are special restrictions placed on this event that differ from normal routed event behavior, due to the relatively small number of elements in a typical application scenario that would concern themselves with handling this event.</span></span>  
  
-   <span data-ttu-id="cec51-159">Нельзя использовать <xref:System.Windows.UIElement> или <xref:System.Windows.ContentElement> <xref:System.Windows.UIElement.RemoveHandler%2A> методов для удаления обработчиков.</span><span class="sxs-lookup"><span data-stu-id="cec51-159">You cannot use the <xref:System.Windows.UIElement> or <xref:System.Windows.ContentElement> <xref:System.Windows.UIElement.RemoveHandler%2A> methods to remove handlers.</span></span> <span data-ttu-id="cec51-160">Необходимо использовать <xref:System.Windows.PresentationSource.RemoveSourceChangedHandler%2A>.</span><span class="sxs-lookup"><span data-stu-id="cec51-160">You must use <xref:System.Windows.PresentationSource.RemoveSourceChangedHandler%2A>.</span></span>  
  
-   <span data-ttu-id="cec51-161">[!INCLUDE[TLA#tla_cshrp](~/includes/tlasharptla-cshrp-md.md)] `+=` И `-=` синтаксиса обработчика событий и других синтаксисов обработчик конкретного языка не поддерживается, так как событие само по себе не представляется как public.</span><span class="sxs-lookup"><span data-stu-id="cec51-161">The [!INCLUDE[TLA#tla_cshrp](~/includes/tlasharptla-cshrp-md.md)] `+=` and `-=` event handler syntaxes, and other language specific handler syntaxes, are not supported, because the event itself is not exposed as public.</span></span> <span data-ttu-id="cec51-162">Только <xref:System.Windows.PresentationSource> служебные методы для добавления и удаления обработчиков напрямую поддерживаются.</span><span class="sxs-lookup"><span data-stu-id="cec51-162">Only the <xref:System.Windows.PresentationSource> utility methods for adding and removing the handlers directly are supported.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.PresentationSource.AddSourceChangedHandler(System.Windows.IInputElement,System.Windows.SourceChangedEventHandler)" />
      </Docs>
    </Member>
    <Member MemberName="RootChanged">
      <MemberSignature Language="C#" Value="protected void RootChanged (System.Windows.Media.Visual oldRoot, System.Windows.Media.Visual newRoot);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void RootChanged(class System.Windows.Media.Visual oldRoot, class System.Windows.Media.Visual newRoot) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PresentationSource.RootChanged(System.Windows.Media.Visual,System.Windows.Media.Visual)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub RootChanged (oldRoot As Visual, newRoot As Visual)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void RootChanged(System::Windows::Media::Visual ^ oldRoot, System::Windows::Media::Visual ^ newRoot);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Security.SecurityTreatAsSafe</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="oldRoot" Type="System.Windows.Media.Visual" />
        <Parameter Name="newRoot" Type="System.Windows.Media.Visual" />
      </Parameters>
      <Docs>
        <param name="oldRoot">
          <span data-ttu-id="cec51-163">Старый корневой объект <see cref="T:System.Windows.Media.Visual" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cec51-163">The old root <see cref="T:System.Windows.Media.Visual" />.</span>
          </span>
        </param>
        <param name="newRoot">
          <span data-ttu-id="cec51-164">Новый корневой объект <see cref="T:System.Windows.Media.Visual" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cec51-164">The new root <see cref="T:System.Windows.Media.Visual" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="cec51-165">Обеспечивает уведомление об изменении корневого объекта <see cref="T:System.Windows.Media.Visual" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cec51-165">Provides notification that the root <see cref="T:System.Windows.Media.Visual" /> has changed.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="cec51-166">Производные классы должны вызывать этот метод, чтобы указать, что их корневой <xref:System.Windows.Media.Visual> изменилось.</span><span class="sxs-lookup"><span data-stu-id="cec51-166">Derived classes should call this method to indicate that their root <xref:System.Windows.Media.Visual> has changed.</span></span>  
  
 <span data-ttu-id="cec51-167">Вызов этого метода вызывает два события времени жизни объектов на указанных корневых визуальных только в том случае, если эти корневые объекты являются <xref:System.Windows.FrameworkElement> производных классов.</span><span class="sxs-lookup"><span data-stu-id="cec51-167">Calling this method causes two object lifetime events to be raised on the specified root visuals, if and only if those root visuals are <xref:System.Windows.FrameworkElement> derived classes.</span></span>  
  
-   <span data-ttu-id="cec51-168">Старый корневой визуальный вызовет <xref:System.Windows.FrameworkElement.Unloaded> событие и обработает свое дерево элементов в нисходящем порядке, широковещательная рассылка это событие для каждого дочернего элемента.</span><span class="sxs-lookup"><span data-stu-id="cec51-168">The old root visual will raise the <xref:System.Windows.FrameworkElement.Unloaded> event, and will process its tree of elements downward, broadcasting this event to each child element.</span></span>  
  
-   <span data-ttu-id="cec51-169">Создает новый корневой визуальный <xref:System.Windows.FrameworkElement.Loaded> событие и обработает свое дерево элементов в нисходящем порядке, широковещательная рассылка это событие для каждого дочернего элемента.</span><span class="sxs-lookup"><span data-stu-id="cec51-169">The new root visual will raise the <xref:System.Windows.FrameworkElement.Loaded> event, and will process its tree of elements downward, broadcasting this event to each child element.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RootVisual">
      <MemberSignature Language="C#" Value="public abstract System.Windows.Media.Visual RootVisual { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Windows.Media.Visual RootVisual" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PresentationSource.RootVisual" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Property RootVisual As Visual" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Windows::Media::Visual ^ RootVisual { System::Windows::Media::Visual ^ get(); void set(System::Windows::Media::Visual ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationCore</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Windows.Media.Visual</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="cec51-170">При переопределении в производном классе возвращает или задает корневой визуальный объект, представляемый в источнике.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cec51-170">When overridden in a derived class, gets or sets the root visual being presented in the source.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="cec51-171">Корневой визуальный объект.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cec51-171">The root visual.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <permission cref="T:System.Security.Permissions.UIPermission">
          <span data-ttu-id="cec51-172">Чтобы переопределить свойство (<see langword="InheritanceDemand" />).</span>
          <span class="sxs-lookup">
            <span data-stu-id="cec51-172">to override the property (<see langword="InheritanceDemand" />).</span>
          </span>
          <span data-ttu-id="cec51-173">Связанное перечисление: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="cec51-173">Associated enumeration: <see cref="F:System.Security.Permissions.UIPermissionWindow.AllWindows" />.</span>
          </span>
        </permission>
      </Docs>
    </Member>
  </Members>
</Type>