<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="PropertyPath.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac58557652b4b165aa49213450463eba1ffb0a2f7de.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">8557652b4b165aa49213450463eba1ffb0a2f7de</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.PropertyPath">
          <source>Implements a data structure for describing a property as a path below another property, or below an owning type.</source>
          <target state="translated">Реализует структуру данных для описания свойства как пути под другим свойством или под типом-владельцем.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.PropertyPath">
          <source>Property paths are used in data binding to objects, and in storyboards and timelines for animations.</source>
          <target state="translated">Пути свойств используются в привязках данных к объектам, а также в раскадровках и временных шкалах для анимации.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PropertyPath">
          <source>This class contains a string <ph id="ph1">&lt;xref:System.Windows.PropertyPath.Path%2A&gt;</ph>, and list of dependency properties that are the <ph id="ph2">&lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt;</ph> into the string <ph id="ph3">&lt;xref:System.Windows.PropertyPath.Path%2A&gt;</ph>.</source>
          <target state="translated">Этот класс содержит строку <ph id="ph1">&lt;xref:System.Windows.PropertyPath.Path%2A&gt;</ph>и список свойств зависимостей, которые являются <ph id="ph2">&lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt;</ph> в строку <ph id="ph3">&lt;xref:System.Windows.PropertyPath.Path%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PropertyPath">
          <source><ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> supports two modes of behavior:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> поддерживает два режима работы:</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PropertyPath">
          <source><bpt id="p1">**</bpt>Source mode<ept id="p1">**</ept> describes a path to a property that is used as a source for some other operation.</source>
          <target state="translated"><bpt id="p1">**</bpt>Режим источника<ept id="p1">**</ept> описывает путь к свойству, используемый в качестве источника для другой операции.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PropertyPath">
          <source>This mode is used by the <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> class to support data binding.</source>
          <target state="translated">Этот режим используется по <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> класс для поддержки привязки данных.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PropertyPath">
          <source><bpt id="p1">**</bpt>Target mode<ept id="p1">**</ept> describes a path to a property that will be set as a target property.</source>
          <target state="translated"><bpt id="p1">**</bpt>Режим целевого<ept id="p1">**</ept> описывает путь к свойству, будет установлен в качестве целевого свойства.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PropertyPath">
          <source>This mode is used by animation in support of storyboard and timeline setters.</source>
          <target state="translated">Этот режим используется для поддержки раскадровки и временная шкала задания.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PropertyPath">
          <source>For instance, <ph id="ph1">`Background.Opacity`</ph> is a two-step path.</source>
          <target state="translated">Например <ph id="ph1">`Background.Opacity`</ph> представляет собой двухэтапный путь.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PropertyPath">
          <source>This path implies: first, find the <ph id="ph1">`Background`</ph> property of an object, get the value object that the <ph id="ph2">`Background`</ph> property is set to, and then get the value of the <ph id="ph3">`Opacity`</ph> property on that object.</source>
          <target state="translated">Этот путь подразумевает: во-первых, найти <ph id="ph1">`Background`</ph> свойство объекта, получается значение, <ph id="ph2">`Background`</ph> свойство имеет значение, а затем получить значение <ph id="ph3">`Opacity`</ph> свойства для этого объекта.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PropertyPath">
          <source>XAML Attribute Usage</source>
          <target state="translated">Использование атрибута XAML</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PropertyPath">
          <source>XAML Values</source>
          <target state="translated">Значения XAML</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PropertyPath">
          <source><bpt id="p1">*</bpt>propertyPath<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>propertyPath<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PropertyPath">
          <source>A string that is evaluated to be either a simple or complex property path.</source>
          <target state="translated">Строка, вычисляемое для быть путем простого или сложного свойства.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.PropertyPath">
          <source>The syntax for setting a <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> in <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> is versatile but complex, and is described in the separate topic <bpt id="p1">[</bpt>PropertyPath XAML Syntax<ept id="p1">](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md)</ept>.</source>
          <target state="translated">Синтаксис параметра <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> в <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> является универсальным, но сложные и рассматривается в отдельном разделе <bpt id="p1">[</bpt>XAML синтаксическая конструкция PropertyPath<ept id="p1">](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md)</ept>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="T:System.Windows.PropertyPath">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.PropertyPath" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Windows.PropertyPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>A property path that either describes a path to a <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph> property, or a single dependency property.</source>
          <target state="translated">Путь свойства, описывающий путь к свойству <ph id="ph1">[!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)]</ph>, или же единому свойству зависимостей.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.PropertyPath" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Windows.PropertyPath" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>This constructor has two completely different usages depending on whether it is being used for a source-mode property path for a binding, or for a target-mode single-step property path for a storyboard target.</source>
          <target state="translated">Этот конструктор имеет два разных применения в зависимости от того, является ли он используется для пути свойства режим источника привязки, или режим целевого пути свойства для раскадровки цели.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>If using this <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> in source mode for a binding, <ph id="ph2">`parameter`</ph> is a string representing a property name, or can be a string that describes a "step-through" path to the property in the <ph id="ph3">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> object model of the object that is being used as the source for a binding.</source>
          <target state="translated">Если с помощью этого <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> в режиме исходного кода для привязки и <ph id="ph2">`parameter`</ph> является строка, представляющая имя свойства, или может быть строка, описывающая «промежуточный» путь к свойству в <ph id="ph3">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> объектной модели объекта, который используется в качестве источника для привязки.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>For a binding property path, the character that identifies a "step" is a dot (.).</source>
          <target state="translated">Для привязки пути свойства символ, «шаг», точка (.).</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>Indexer references (including multiple indexers, and type differentiation) are also supported.</source>
          <target state="translated">Также поддерживаются ссылки индексаторов (включая множественные индексаторы и разграничение типа).</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>For more details on the syntax of the string as specifically used by the <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> object, see <ph id="ph2">&lt;xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Дополнительные сведения о синтаксисе строки, используемые особо <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> см. в разделе <ph id="ph2">&lt;xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>A property used as a binding source need not be a dependency property.</source>
          <target state="translated">Свойство, используемое как источник привязки не должны быть свойством зависимостей.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>If the binding updates two-way, the property referenced must be read-write.</source>
          <target state="translated">Если привязка, ссылочное свойство, заданное необходимо чтения и записи.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>Also note that the binding target does have to be a dependency property.</source>
          <target state="translated">Также Обратите внимание, что целевой объект привязки для свойства зависимостей.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>For details, see <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>Общие сведения о привязке данных<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>If using this <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> in target mode for a single-step path for a storyboard target, <ph id="ph2">`parameter`</ph> is generally provided as type <ph id="ph3">&lt;xref:System.Windows.DependencyProperty&gt;</ph>.</source>
          <target state="translated">Если с помощью этого <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> в целевом режиме один шаг пути для раскадровки цели <ph id="ph2">`parameter`</ph> обычно предоставляется в качестве типа <ph id="ph3">&lt;xref:System.Windows.DependencyProperty&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>You can also specify a string that is the <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.Name%2A&gt;</ph>.</source>
          <target state="translated">Можно также указать строку, являющуюся <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.Name%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>Either of these evaluate to the same result, because it is stored internally as a string.</source>
          <target state="translated">Любой из этих иметь тот же результат, так как он внутренне хранятся в виде строки.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>A provided <ph id="ph1">&lt;xref:System.Windows.DependencyProperty&gt;</ph> is converted to a string through <ph id="ph2">&lt;xref:System.Windows.Markup.DependencyPropertyConverter&gt;</ph>.</source>
          <target state="translated">Предоставленный <ph id="ph1">&lt;xref:System.Windows.DependencyProperty&gt;</ph> преобразуется в строке с помощью <ph id="ph2">&lt;xref:System.Windows.Markup.DependencyPropertyConverter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Markup.DependencyPropertyConverter&gt;</ph> supports a qualified naming format for dependency properties, so you can specify a <bpt id="p1">*</bpt>typeName<ept id="p1">*</ept>.<bpt id="p2">*</bpt>propertyName<ept id="p2">*</ept> qualified dependency property name string to the <ph id="ph2">&lt;xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType&gt;</ph> constructor in code.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Markup.DependencyPropertyConverter&gt;</ph> Поддерживает формат полного имени для свойства зависимостей, поэтому можно указать <bpt id="p1">*</bpt>typeName<ept id="p1">*</ept>.<bpt id="p2">*</bpt> propertyName<ept id="p2">*</ept> полное имя строки зависимостей свойства <ph id="ph2">&lt;xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType&gt;</ph> конструктор в коде.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>The qualified path to the dependency property identifier is a different concept than a complex path.</source>
          <target state="translated">Полный путь для идентификатора свойства зависимости имеет отношения от сложного пути.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.Object)">
          <source>A complex-path <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> should instead be created with the <ph id="ph2">&lt;xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType&gt;</ph> constructor.</source>
          <target state="translated">Комплексное path <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> вместо должна быть создана с <ph id="ph2">&lt;xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType&gt;</ph> конструктор.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])">
          <source>A string that specifies the <ph id="ph1">&lt;see cref="P:System.Windows.PropertyPath.Path" /&gt;</ph>, in a tokenized format.</source>
          <target state="translated">Строка, указывающая <ph id="ph1">&lt;see cref="P:System.Windows.PropertyPath.Path" /&gt;</ph>, в размеченном формате.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])">
          <source>An array of objects that sets the <ph id="ph1">&lt;see cref="P:System.Windows.PropertyPath.PathParameters" /&gt;</ph>.</source>
          <target state="translated">Массив объектов, задающий <ph id="ph1">&lt;see cref="P:System.Windows.PropertyPath.PathParameters" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Windows.PropertyPath" /&gt;</ph> class, with the provided pathing token string and parameters.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Windows.PropertyPath" /&gt;</ph> с заданной строкой пути и внутренним и параметрами.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])">
          <source>This signature is generally only used for target-mode <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> usages with complex paths.</source>
          <target state="translated">Эта подпись обычно используется только для режима целевой <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> использования сложных путями.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])">
          <source>This constructor supports <ph id="ph1">`params`</ph> for the <ph id="ph2">`pathParameters`</ph> constructor argument.</source>
          <target state="translated">Этот конструктор поддерживает <ph id="ph1">`params`</ph> для <ph id="ph2">`pathParameters`</ph> аргумента конструктора.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])">
          <source>Therefore you can specify the contents of <ph id="ph1">`pathParameters`</ph> as a series of comma-separated constructor arguments that populate the array, rather than needing to dimension an array and then populate it with the <ph id="ph2">`pathParameters`</ph> items.</source>
          <target state="translated">Таким образом можно задать содержимое <ph id="ph1">`pathParameters`</ph> как ряд аргументов конструктора, разделенных запятыми, которые заполняют массив, а не вводить измерения массива и заполните его с <ph id="ph2">`pathParameters`</ph> элементов.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])">
          <source>Each item you specify must be one of the following types: <ph id="ph1">&lt;xref:System.Windows.DependencyProperty&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.PropertyInfo&gt;</ph>, <ph id="ph3">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</source>
          <target state="translated">Каждый элемент в указании должен быть один из следующих типов: <ph id="ph1">&lt;xref:System.Windows.DependencyProperty&gt;</ph>, <ph id="ph2">&lt;xref:System.Reflection.PropertyInfo&gt;</ph>, <ph id="ph3">&lt;xref:System.ComponentModel.PropertyDescriptor&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])">
          <source>For more information on the requirements of the parameters, see <ph id="ph1">&lt;xref:System.Windows.PropertyPath.Path%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt;</ph>.</source>
          <target state="translated">Дополнительные сведения о требованиях к параметров см. в разделе <ph id="ph1">&lt;xref:System.Windows.PropertyPath.Path%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="P:System.Windows.PropertyPath.Path">
          <source>Gets or sets the string that describes the path.</source>
          <target state="translated">Получает или задает строку, описывающую путь.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>The string that describes the path.</source>
          <target state="translated">Строка, описывающая путь.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>The string contained in this property has three completely different meanings depending on whether a <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> is being used for a source-mode property path for a binding, for a target-mode single-step property path for a storyboard target, or for a complex path for a storyboard target.</source>
          <target state="translated">Строка, содержащаяся в это свойство имеет три абсолютно разные значения в зависимости от того, следует ли <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> используется для пути свойства режим источника для привязки, режим целевого пути свойства для раскадровки цели или сложным путь для раскадровки цели.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>If using this <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> in source mode for a binding, <ph id="ph2">&lt;xref:System.Windows.PropertyPath.Path%2A&gt;</ph> is a string representing a property name, or can be a string that describes a "step-through" path to the property in the <ph id="ph3">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> object model of the object that is being used as the source for a binding.</source>
          <target state="translated">Если с помощью этого <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> в режиме исходного кода для привязки и <ph id="ph2">&lt;xref:System.Windows.PropertyPath.Path%2A&gt;</ph> является строка, представляющая имя свойства, или может быть строка, описывающая «промежуточный» путь к свойству в <ph id="ph3">[!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)]</ph> объектной модели объекта, который используется в качестве источника для привязки.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>For a binding property path, the character that identifies a "step" is a dot (.).</source>
          <target state="translated">Для привязки пути свойства символ, «шаг», точка (.).</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>Indexer references (including multiple indexers, and type differentiation) are also supported.</source>
          <target state="translated">Также поддерживаются ссылки индексаторов (включая множественные индексаторы и разграничение типа).</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>For more details on the syntax of the string as specifically used by the <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> object, see <ph id="ph2">&lt;xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Дополнительные сведения о синтаксисе строки, используемые особо <ph id="ph1">&lt;xref:System.Windows.Data.Binding&gt;</ph> см. в разделе <ph id="ph2">&lt;xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>A property used as a binding source need not be a dependency property.</source>
          <target state="translated">Свойство, используемое как источник привязки не должны быть свойством зависимостей.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>If the binding updates two-way, the property source must be read-write.</source>
          <target state="translated">Двойной привязке источником свойства требуется ли чтения и записи.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>Also note that the binding target does have to be a dependency property.</source>
          <target state="translated">Также Обратите внимание, что целевой объект привязки для свойства зависимостей.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>For details, see <bpt id="p1">[</bpt>Data Binding Overview<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>Общие сведения о привязке данных<ept id="p1">](~/docs/framework/wpf/data/data-binding-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>If using this <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> in target mode for a single-step path for a storyboard target, <ph id="ph2">&lt;xref:System.Windows.PropertyPath&gt;</ph> is a string that is a <bpt id="p1">*</bpt>typeName<ept id="p1">*</ept>.<bpt id="p2">*</bpt>propertyName<ept id="p2">*</ept> qualified dependency property name string.</source>
          <target state="translated">Если с помощью этого <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> в целевом режиме один шаг пути для раскадровки цели <ph id="ph2">&lt;xref:System.Windows.PropertyPath&gt;</ph> является строкой, которая является <bpt id="p1">*</bpt>typeName<ept id="p1">*</ept>.<bpt id="p2">*</bpt> propertyName<ept id="p2">*</ept> указанием строки имя свойства зависимостей.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>If using this <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> for a complex path for a storyboard target, <ph id="ph2">&lt;xref:System.Windows.PropertyPath.Path%2A&gt;</ph> is a tokenized string format that describes the relationships of the various objects given in the <ph id="ph3">&lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt;</ph>.</source>
          <target state="translated">Если с помощью этого <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> сложного пути для раскадровки цели <ph id="ph2">&lt;xref:System.Windows.PropertyPath.Path%2A&gt;</ph> является токенами строковый формат, который описывает связи для различных объектов, приведенные в <ph id="ph3">&lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>Each item in the array is specified in this format by the array index for the item enclosed in parentheses.</source>
          <target state="translated">Каждый элемент в массиве задается в формате индекса массива для элемента, заключенный в круглые скобки.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>For example, to specify the first item in the array, the string token is <ph id="ph1">`(0)`</ph>.</source>
          <target state="translated">Например, для указания первого элемента в массиве, из маркера строки является <ph id="ph1">`(0)`</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>Relationships between items ("steps" in the path) are specified by a dot (.).</source>
          <target state="translated">Отношения между элементами («действия» в пути) указываются через точку (.).</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>The property forward of the dot is the first step in the path, the property after is the second step, and so on (you can specify steps beyond two).</source>
          <target state="translated">Свойство точки является первым шагом в пути, свойство после является вторым шагом и т. д (можно указать помимо двух шагов).</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>The last step in the chain always represents the property being animated.</source>
          <target state="translated">Последний шаг в цепочке всегда представляет анимируемого свойства.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>Items within collection properties are accessed with an indexer syntax, with the index within square brackets ([ and ]).</source>
          <target state="translated">Свойствам коллекции осуществляется с помощью синтаксиса индексатора, с указанием индекса в квадратных скобках ([и]).</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>The indexer is additive to the token representing the property.</source>
          <target state="translated">Индексатор находится прибавляется к символу, представляющий свойство.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>For example, the following is a two-step path, with the token combination in the first step specifying the second item from within the collection of that property: <ph id="ph1">`(0)[1].(1)`</ph> .</source>
          <target state="translated">Например, ниже приведен два пути, с комбинацией символов в первом шаге, указывая второй элемент из коллекции этого свойства: <ph id="ph1">`(0)[1].(1)`</ph> .</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>You cannot use an indexer on the last property in the chain; you cannot animate the actual collection position, you must animate a property on that object.</source>
          <target state="translated">Нельзя использовать индексатор в последнее свойство в цепочке; не удается анимировать позицию фактической коллекции, необходимо анимировать свойство для этого объекта.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>The path string for a <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> is typically established through the constructors: the <ph id="ph2">&lt;xref:System.Windows.PropertyPath.%23ctor%28System.Object%29&gt;</ph> signature for bindings or single-step storyboard targets, the <ph id="ph3">&lt;xref:System.Windows.PropertyPath.%23ctor%28System.String%2CSystem.Object%5B%5D%29&gt;</ph> signature for multi-step storyboard targets.</source>
          <target state="translated">Строка пути для <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> обычно устанавливается посредством конструкторы: <ph id="ph2">&lt;xref:System.Windows.PropertyPath.%23ctor%28System.Object%29&gt;</ph> подпись для привязки или цели storyboard один шаг <ph id="ph3">&lt;xref:System.Windows.PropertyPath.%23ctor%28System.String%2CSystem.Object%5B%5D%29&gt;</ph> подписи многоэтапной раскадровки целей.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source><bpt id="p1">**</bpt>XAML:<ept id="p1">**</ept> When you use a <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> to describe a property reference in <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, as an attribute value, the string that you specify is first handled by a type converter (<ph id="ph3">&lt;xref:System.Windows.PropertyPathConverter&gt;</ph>).</source>
          <target state="translated"><bpt id="p1">**</bpt>XAML:<ept id="p1">**</ept> при использовании <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> для описания ссылка на свойство в <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, как строка, которую вы укажите значение атрибута, сначала обрабатывается преобразователя типов (<ph id="ph3">&lt;xref:System.Windows.PropertyPathConverter&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>This type converter then processes the string and based on its syntax will call one of the <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> constructor signatures.</source>
          <target state="translated">Этот преобразователь типов, затем обрабатывает строку и на основе ее синтаксиса вызывается один из <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> сигнатур конструкторов.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>This indirection through the type converter handling an attribute value is generally how you use <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> in <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, rather than declaring a <ph id="ph3">&lt;xref:System.Windows.PropertyPath&gt;</ph> object element and then applying specific values to attributes such as <ph id="ph4">&lt;xref:System.Windows.PropertyPath.Path%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt;</ph>.</source>
          <target state="translated">Это косвенное обращение через преобразователь типов, обработки значения атрибута обычно является использование <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> в <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, вместо того чтобы объявление <ph id="ph3">&lt;xref:System.Windows.PropertyPath&gt;</ph> объекта элемента, а затем применяются определенные значения для атрибутов такие как <ph id="ph4">&lt;xref:System.Windows.PropertyPath.Path%2A&gt;</ph> и <ph id="ph5">&lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>For more information, see <bpt id="p1">[</bpt>PropertyPath XAML Syntax<ept id="p1">](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>XAML синтаксическая конструкция PropertyPath<ept id="p1">](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md)</ept>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>XAML Text Usage</source>
          <target state="translated">Использование текста XAML</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>Members of the <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> type are not typically set in a direct <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> syntax.</source>
          <target state="translated">Члены <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> типа обычно не заданы в прямой <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> синтаксиса.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.Path">
          <source>See Remarks.</source>
          <target state="translated">См. заметки.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>Gets the list of parameters to use when the path refers to indexed parameters.</source>
          <target state="translated">Получает список параметров для использования, когда путь относится к индексированным параметрам.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>The parameter list.</source>
          <target state="translated">Список параметров.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>The properties for a <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> are typically established through the constructors.</source>
          <target state="translated">Свойства <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> обычно устанавливается посредством конструкторов.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>For setting <ph id="ph1">&lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt;</ph>, the <ph id="ph2">&lt;xref:System.Windows.PropertyPath.%23ctor%2A&gt;</ph> constructor is particularly convenient because the <ph id="ph3">`pathParameters`</ph> constructor argument is designated as <ph id="ph4">`params`</ph>, meaning that you do not need to create or dimension an array for construction.</source>
          <target state="translated">Для параметра <ph id="ph1">&lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Windows.PropertyPath.%23ctor%2A&gt;</ph> конструктор особенно удобно, так как <ph id="ph3">`pathParameters`</ph> используется в качестве аргумента конструктора <ph id="ph4">`params`</ph>, то есть не требуется для создания или измерения массива для построения.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>You simply specify each member of the array as an additional parameter.</source>
          <target state="translated">Просто укажите каждый элемент массива как дополнительный параметр.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>If the final property that is the target is a <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> type, that value will be cloned.</source>
          <target state="translated">Если последнее свойство, которое является целевым <ph id="ph1">&lt;xref:System.Windows.Freezable&gt;</ph> тип, что значение будет клонирован.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>For details, see <bpt id="p1">[</bpt>Storyboards Overview<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>Общие<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>The actual evaluation of the property chain is performed by the storyboard animation mechanisms.</source>
          <target state="translated">Само вычисление цепочки свойств выполняет раскадровки для анимации.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>At the <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> level, no validation is performed to make sure that the steps of the path connect at all.</source>
          <target state="translated">В <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> уровня, проверка не выполняется для убедитесь, что все подключения действия пути.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>For instance, you can construct a property path that has <ph id="ph1">&lt;xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType&gt;</ph> as the first step, and <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.FlowDirectionProperty?displayProperty=nameWithType&gt;</ph> as the second step.</source>
          <target state="translated">Например, можно создать путь к свойству, которое имеет <ph id="ph1">&lt;xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType&gt;</ph> в качестве первого шага и <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.FlowDirectionProperty?displayProperty=nameWithType&gt;</ph> на втором этапе.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>But such a property path would fail if actually applied as a target, because the Brush type that fills <ph id="ph1">&lt;xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType&gt;</ph> does not have a <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.FlowDirection%2A?displayProperty=nameWithType&gt;</ph> property.</source>
          <target state="translated">Путь свойства будет выполнен, если фактического применения в качестве целевого объекта, так как тип кисти, заливки, но <ph id="ph1">&lt;xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType&gt;</ph> не имеет <ph id="ph2">&lt;xref:System.Windows.FrameworkElement.FlowDirection%2A?displayProperty=nameWithType&gt;</ph> свойства.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>Invalid property paths fail silently.</source>
          <target state="translated">Недопустимые пути свойств не без вмешательства пользователя.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>For more information, see <bpt id="p1">[</bpt>Storyboards Overview<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>Общие сведения о Storyboard<ept id="p1">](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source><bpt id="p1">**</bpt>XAML:<ept id="p1">**</ept> When you use a <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> to describe a property reference in <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, as an attribute value, the string that you specify is first handled by a type converter (<ph id="ph3">&lt;xref:System.Windows.PropertyPathConverter&gt;</ph>).</source>
          <target state="translated"><bpt id="p1">**</bpt>XAML:<ept id="p1">**</ept> при использовании <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> для описания ссылка на свойство в <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, как строка, которую вы укажите значение атрибута, сначала обрабатывается преобразователя типов (<ph id="ph3">&lt;xref:System.Windows.PropertyPathConverter&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>This type converter then processes the string and based on its syntax will call one of the <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> constructor signatures.</source>
          <target state="translated">Этот преобразователь типов, затем обрабатывает строку и на основе ее синтаксиса вызывается один из <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> сигнатур конструкторов.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>This indirection through the type converter handling an attribute value is generally how you use <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> in <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, rather than declaring a <ph id="ph3">&lt;xref:System.Windows.PropertyPath&gt;</ph> object element and then applying specific values to attributes such as <ph id="ph4">&lt;xref:System.Windows.PropertyPath.Path%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt;</ph>.</source>
          <target state="translated">Это косвенное обращение через преобразователь типов, обработки значения атрибута обычно является использование <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> в <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph>, вместо того чтобы объявление <ph id="ph3">&lt;xref:System.Windows.PropertyPath&gt;</ph> объекта элемента, а затем применяются определенные значения для атрибутов такие как <ph id="ph4">&lt;xref:System.Windows.PropertyPath.Path%2A&gt;</ph> и <ph id="ph5">&lt;xref:System.Windows.PropertyPath.PathParameters%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>For more information, see <bpt id="p1">[</bpt>PropertyPath XAML Syntax<ept id="p1">](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>XAML синтаксическая конструкция PropertyPath<ept id="p1">](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md)</ept>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>XAML Text Usage</source>
          <target state="translated">Использование текста XAML</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>Members of the <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> type are not typically set in a direct <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> syntax.</source>
          <target state="translated">Члены <ph id="ph1">&lt;xref:System.Windows.PropertyPath&gt;</ph> типа обычно не заданы в прямой <ph id="ph2">[!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)]</ph> синтаксиса.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Windows.PropertyPath.PathParameters">
          <source>See Remarks.</source>
          <target state="translated">См. заметки.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>