<Type Name="PropertyPath" FullName="System.Windows.PropertyPath">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8557652b4b165aa49213450463eba1ffb0a2f7de" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class PropertyPath" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit PropertyPath extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Windows.PropertyPath" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class PropertyPath" />
  <TypeSignature Language="C++ CLI" Value="public ref class PropertyPath sealed" />
  <AssemblyInfo>
    <AssemblyName>PresentationFramework</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Windows.PropertyPathConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="577d6-101">Реализует структуру данных для описания свойства как пути под другим свойством или под типом-владельцем.</span>
      <span class="sxs-lookup">
        <span data-stu-id="577d6-101">Implements a data structure for describing a property as a path below another property, or below an owning type.</span>
      </span>
      <span data-ttu-id="577d6-102">Пути свойств используются в привязках данных к объектам, а также в раскадровках и временных шкалах для анимации.</span>
      <span class="sxs-lookup">
        <span data-stu-id="577d6-102">Property paths are used in data binding to objects, and in storyboards and timelines for animations.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="577d6-103">Этот класс содержит строку <xref:System.Windows.PropertyPath.Path%2A>и список свойств зависимостей, которые являются <xref:System.Windows.PropertyPath.PathParameters%2A> в строку <xref:System.Windows.PropertyPath.Path%2A>.</span><span class="sxs-lookup"><span data-stu-id="577d6-103">This class contains a string <xref:System.Windows.PropertyPath.Path%2A>, and list of dependency properties that are the <xref:System.Windows.PropertyPath.PathParameters%2A> into the string <xref:System.Windows.PropertyPath.Path%2A>.</span></span>  
  
 <span data-ttu-id="577d6-104"><xref:System.Windows.PropertyPath> поддерживает два режима работы:</span><span class="sxs-lookup"><span data-stu-id="577d6-104"><xref:System.Windows.PropertyPath> supports two modes of behavior:</span></span>  
  
 <span data-ttu-id="577d6-105">**Режим источника** описывает путь к свойству, используемый в качестве источника для другой операции.</span><span class="sxs-lookup"><span data-stu-id="577d6-105">**Source mode** describes a path to a property that is used as a source for some other operation.</span></span> <span data-ttu-id="577d6-106">Этот режим используется по <xref:System.Windows.Data.Binding> класс для поддержки привязки данных.</span><span class="sxs-lookup"><span data-stu-id="577d6-106">This mode is used by the <xref:System.Windows.Data.Binding> class to support data binding.</span></span>  
  
 <span data-ttu-id="577d6-107">**Режим целевого** описывает путь к свойству, будет установлен в качестве целевого свойства.</span><span class="sxs-lookup"><span data-stu-id="577d6-107">**Target mode** describes a path to a property that will be set as a target property.</span></span> <span data-ttu-id="577d6-108">Этот режим используется для поддержки раскадровки и временная шкала задания.</span><span class="sxs-lookup"><span data-stu-id="577d6-108">This mode is used by animation in support of storyboard and timeline setters.</span></span>  
  
 <span data-ttu-id="577d6-109">Например `Background.Opacity` представляет собой двухэтапный путь.</span><span class="sxs-lookup"><span data-stu-id="577d6-109">For instance, `Background.Opacity` is a two-step path.</span></span> <span data-ttu-id="577d6-110">Этот путь подразумевает: во-первых, найти `Background` свойство объекта, получается значение, `Background` свойство имеет значение, а затем получить значение `Opacity` свойства для этого объекта.</span><span class="sxs-lookup"><span data-stu-id="577d6-110">This path implies: first, find the `Background` property of an object, get the value object that the `Background` property is set to, and then get the value of the `Opacity` property on that object.</span></span>  
  
<a name="xamlAttributeUsage_PropertyPath"></a>   
## <a name="xaml-attribute-usage"></a><span data-ttu-id="577d6-111">Использование атрибута XAML</span><span class="sxs-lookup"><span data-stu-id="577d6-111">XAML Attribute Usage</span></span>  
  
```  
<object property="propertyPath" .../>  
```  
  
<a name="xamlValues_PropertyPath"></a>   
## <a name="xaml-values"></a><span data-ttu-id="577d6-112">Значения XAML</span><span class="sxs-lookup"><span data-stu-id="577d6-112">XAML Values</span></span>  
 <span data-ttu-id="577d6-113">*propertyPath*</span><span class="sxs-lookup"><span data-stu-id="577d6-113">*propertyPath*</span></span>  
 <span data-ttu-id="577d6-114">Строка, вычисляемое для быть путем простого или сложного свойства.</span><span class="sxs-lookup"><span data-stu-id="577d6-114">A string that is evaluated to be either a simple or complex property path.</span></span> <span data-ttu-id="577d6-115">Синтаксис параметра <xref:System.Windows.PropertyPath> в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] является универсальным, но сложные и рассматривается в отдельном разделе [XAML синтаксическая конструкция PropertyPath](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).</span><span class="sxs-lookup"><span data-stu-id="577d6-115">The syntax for setting a <xref:System.Windows.PropertyPath> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] is versatile but complex, and is described in the separate topic [PropertyPath XAML Syntax](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="577d6-116">Инициализирует новый экземпляр класса <see cref="T:System.Windows.PropertyPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="577d6-116">Initializes a new instance of the <see cref="T:System.Windows.PropertyPath" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyPath (object parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PropertyPath.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (parameter As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyPath(System::Object ^ parameter);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="parameter" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="parameter">
          <span data-ttu-id="577d6-117">Путь свойства, описывающий путь к свойству [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)], или же единому свойству зависимостей.</span>
          <span class="sxs-lookup">
            <span data-stu-id="577d6-117">A property path that either describes a path to a [!INCLUDE[TLA#tla_clr](~/includes/tlasharptla-clr-md.md)] property, or a single dependency property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="577d6-118">Инициализирует новый экземпляр класса <see cref="T:System.Windows.PropertyPath" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="577d6-118">Initializes a new instance of the <see cref="T:System.Windows.PropertyPath" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="577d6-119">Этот конструктор имеет два разных применения в зависимости от того, является ли он используется для пути свойства режим источника привязки, или режим целевого пути свойства для раскадровки цели.</span><span class="sxs-lookup"><span data-stu-id="577d6-119">This constructor has two completely different usages depending on whether it is being used for a source-mode property path for a binding, or for a target-mode single-step property path for a storyboard target.</span></span>  
  
 <span data-ttu-id="577d6-120">Если с помощью этого <xref:System.Windows.PropertyPath> в режиме исходного кода для привязки и `parameter` является строка, представляющая имя свойства, или может быть строка, описывающая «промежуточный» путь к свойству в [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] объектной модели объекта, который используется в качестве источника для привязки.</span><span class="sxs-lookup"><span data-stu-id="577d6-120">If using this <xref:System.Windows.PropertyPath> in source mode for a binding, `parameter` is a string representing a property name, or can be a string that describes a "step-through" path to the property in the [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object model of the object that is being used as the source for a binding.</span></span> <span data-ttu-id="577d6-121">Для привязки пути свойства символ, «шаг», точка (.).</span><span class="sxs-lookup"><span data-stu-id="577d6-121">For a binding property path, the character that identifies a "step" is a dot (.).</span></span> <span data-ttu-id="577d6-122">Также поддерживаются ссылки индексаторов (включая множественные индексаторы и разграничение типа).</span><span class="sxs-lookup"><span data-stu-id="577d6-122">Indexer references (including multiple indexers, and type differentiation) are also supported.</span></span> <span data-ttu-id="577d6-123">Дополнительные сведения о синтаксисе строки, используемые особо <xref:System.Windows.Data.Binding> см. в разделе <xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="577d6-123">For more details on the syntax of the string as specifically used by the <xref:System.Windows.Data.Binding> object, see <xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="577d6-124">Свойство, используемое как источник привязки не должны быть свойством зависимостей.</span><span class="sxs-lookup"><span data-stu-id="577d6-124">A property used as a binding source need not be a dependency property.</span></span> <span data-ttu-id="577d6-125">Если привязка, ссылочное свойство, заданное необходимо чтения и записи.</span><span class="sxs-lookup"><span data-stu-id="577d6-125">If the binding updates two-way, the property referenced must be read-write.</span></span> <span data-ttu-id="577d6-126">Также Обратите внимание, что целевой объект привязки для свойства зависимостей.</span><span class="sxs-lookup"><span data-stu-id="577d6-126">Also note that the binding target does have to be a dependency property.</span></span> <span data-ttu-id="577d6-127">Дополнительные сведения см. в разделе [Общие сведения о привязке данных](~/docs/framework/wpf/data/data-binding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="577d6-127">For details, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 <span data-ttu-id="577d6-128">Если с помощью этого <xref:System.Windows.PropertyPath> в целевом режиме один шаг пути для раскадровки цели `parameter` обычно предоставляется в качестве типа <xref:System.Windows.DependencyProperty>.</span><span class="sxs-lookup"><span data-stu-id="577d6-128">If using this <xref:System.Windows.PropertyPath> in target mode for a single-step path for a storyboard target, `parameter` is generally provided as type <xref:System.Windows.DependencyProperty>.</span></span> <span data-ttu-id="577d6-129">Можно также указать строку, являющуюся <xref:System.Windows.DependencyProperty.Name%2A>.</span><span class="sxs-lookup"><span data-stu-id="577d6-129">You can also specify a string that is the <xref:System.Windows.DependencyProperty.Name%2A>.</span></span> <span data-ttu-id="577d6-130">Любой из этих иметь тот же результат, так как он внутренне хранятся в виде строки.</span><span class="sxs-lookup"><span data-stu-id="577d6-130">Either of these evaluate to the same result, because it is stored internally as a string.</span></span> <span data-ttu-id="577d6-131">Предоставленный <xref:System.Windows.DependencyProperty> преобразуется в строке с помощью <xref:System.Windows.Markup.DependencyPropertyConverter>.</span><span class="sxs-lookup"><span data-stu-id="577d6-131">A provided <xref:System.Windows.DependencyProperty> is converted to a string through <xref:System.Windows.Markup.DependencyPropertyConverter>.</span></span> <span data-ttu-id="577d6-132"><xref:System.Windows.Markup.DependencyPropertyConverter> Поддерживает формат полного имени для свойства зависимостей, поэтому можно указать *typeName*.* propertyName* полное имя строки зависимостей свойства <xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType> конструктор в коде.</span><span class="sxs-lookup"><span data-stu-id="577d6-132">The <xref:System.Windows.Markup.DependencyPropertyConverter> supports a qualified naming format for dependency properties, so you can specify a *typeName*.*propertyName* qualified dependency property name string to the <xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType> constructor in code.</span></span> <span data-ttu-id="577d6-133">Полный путь для идентификатора свойства зависимости имеет отношения от сложного пути.</span><span class="sxs-lookup"><span data-stu-id="577d6-133">The qualified path to the dependency property identifier is a different concept than a complex path.</span></span> <span data-ttu-id="577d6-134">Комплексное path <xref:System.Windows.PropertyPath> вместо должна быть создана с <xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType> конструктор.</span><span class="sxs-lookup"><span data-stu-id="577d6-134">A complex-path <xref:System.Windows.PropertyPath> should instead be created with the <xref:System.Windows.PropertyPath.%23ctor%2A?displayProperty=nameWithType> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Data.Binding" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PropertyPath (string path, params object[] pathParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string path, object[] pathParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Windows.PropertyPath.#ctor(System.String,System.Object[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (path As String, ParamArray pathParameters As Object())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PropertyPath(System::String ^ path, ... cli::array &lt;System::Object ^&gt; ^ pathParameters);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
        <Parameter Name="pathParameters" Type="System.Object[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="path">
          <span data-ttu-id="577d6-135">Строка, указывающая <see cref="P:System.Windows.PropertyPath.Path" />, в размеченном формате.</span>
          <span class="sxs-lookup">
            <span data-stu-id="577d6-135">A string that specifies the <see cref="P:System.Windows.PropertyPath.Path" />, in a tokenized format.</span>
          </span>
        </param>
        <param name="pathParameters">
          <span data-ttu-id="577d6-136">Массив объектов, задающий <see cref="P:System.Windows.PropertyPath.PathParameters" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="577d6-136">An array of objects that sets the <see cref="P:System.Windows.PropertyPath.PathParameters" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="577d6-137">Инициализирует новый экземпляр класса <see cref="T:System.Windows.PropertyPath" /> с заданной строкой пути и внутренним и параметрами.</span>
          <span class="sxs-lookup">
            <span data-stu-id="577d6-137">Initializes a new instance of the <see cref="T:System.Windows.PropertyPath" /> class, with the provided pathing token string and parameters.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="577d6-138">Эта подпись обычно используется только для режима целевой <xref:System.Windows.PropertyPath> использования сложных путями.</span><span class="sxs-lookup"><span data-stu-id="577d6-138">This signature is generally only used for target-mode <xref:System.Windows.PropertyPath> usages with complex paths.</span></span>  
  
 <span data-ttu-id="577d6-139">Этот конструктор поддерживает `params` для `pathParameters` аргумента конструктора.</span><span class="sxs-lookup"><span data-stu-id="577d6-139">This constructor supports `params` for the `pathParameters` constructor argument.</span></span> <span data-ttu-id="577d6-140">Таким образом можно задать содержимое `pathParameters` как ряд аргументов конструктора, разделенных запятыми, которые заполняют массив, а не вводить измерения массива и заполните его с `pathParameters` элементов.</span><span class="sxs-lookup"><span data-stu-id="577d6-140">Therefore you can specify the contents of `pathParameters` as a series of comma-separated constructor arguments that populate the array, rather than needing to dimension an array and then populate it with the `pathParameters` items.</span></span> <span data-ttu-id="577d6-141">Каждый элемент в указании должен быть один из следующих типов: <xref:System.Windows.DependencyProperty>, <xref:System.Reflection.PropertyInfo>, <xref:System.ComponentModel.PropertyDescriptor>.</span><span class="sxs-lookup"><span data-stu-id="577d6-141">Each item you specify must be one of the following types: <xref:System.Windows.DependencyProperty>, <xref:System.Reflection.PropertyInfo>, <xref:System.ComponentModel.PropertyDescriptor>.</span></span>  
  
 <span data-ttu-id="577d6-142">Дополнительные сведения о требованиях к параметров см. в разделе <xref:System.Windows.PropertyPath.Path%2A> и <xref:System.Windows.PropertyPath.PathParameters%2A>.</span><span class="sxs-lookup"><span data-stu-id="577d6-142">For more information on the requirements of the parameters, see <xref:System.Windows.PropertyPath.Path%2A> and <xref:System.Windows.PropertyPath.PathParameters%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Path">
      <MemberSignature Language="C#" Value="public string Path { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Path" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PropertyPath.Path" />
      <MemberSignature Language="VB.NET" Value="Public Property Path As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Path { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="577d6-143">Получает или задает строку, описывающую путь.</span>
          <span class="sxs-lookup">
            <span data-stu-id="577d6-143">Gets or sets the string that describes the path.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="577d6-144">Строка, описывающая путь.</span>
          <span class="sxs-lookup">
            <span data-stu-id="577d6-144">The string that describes the path.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="577d6-145">Строка, содержащаяся в это свойство имеет три абсолютно разные значения в зависимости от того, следует ли <xref:System.Windows.PropertyPath> используется для пути свойства режим источника для привязки, режим целевого пути свойства для раскадровки цели или сложным путь для раскадровки цели.</span><span class="sxs-lookup"><span data-stu-id="577d6-145">The string contained in this property has three completely different meanings depending on whether a <xref:System.Windows.PropertyPath> is being used for a source-mode property path for a binding, for a target-mode single-step property path for a storyboard target, or for a complex path for a storyboard target.</span></span>  
  
 <span data-ttu-id="577d6-146">Если с помощью этого <xref:System.Windows.PropertyPath> в режиме исходного кода для привязки и <xref:System.Windows.PropertyPath.Path%2A> является строка, представляющая имя свойства, или может быть строка, описывающая «промежуточный» путь к свойству в [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] объектной модели объекта, который используется в качестве источника для привязки.</span><span class="sxs-lookup"><span data-stu-id="577d6-146">If using this <xref:System.Windows.PropertyPath> in source mode for a binding, <xref:System.Windows.PropertyPath.Path%2A> is a string representing a property name, or can be a string that describes a "step-through" path to the property in the [!INCLUDE[TLA2#tla_clr](~/includes/tla2sharptla-clr-md.md)] object model of the object that is being used as the source for a binding.</span></span> <span data-ttu-id="577d6-147">Для привязки пути свойства символ, «шаг», точка (.).</span><span class="sxs-lookup"><span data-stu-id="577d6-147">For a binding property path, the character that identifies a "step" is a dot (.).</span></span> <span data-ttu-id="577d6-148">Также поддерживаются ссылки индексаторов (включая множественные индексаторы и разграничение типа).</span><span class="sxs-lookup"><span data-stu-id="577d6-148">Indexer references (including multiple indexers, and type differentiation) are also supported.</span></span> <span data-ttu-id="577d6-149">Дополнительные сведения о синтаксисе строки, используемые особо <xref:System.Windows.Data.Binding> см. в разделе <xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="577d6-149">For more details on the syntax of the string as specifically used by the <xref:System.Windows.Data.Binding> object, see <xref:System.Windows.Data.Binding.Path%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="577d6-150">Свойство, используемое как источник привязки не должны быть свойством зависимостей.</span><span class="sxs-lookup"><span data-stu-id="577d6-150">A property used as a binding source need not be a dependency property.</span></span> <span data-ttu-id="577d6-151">Двойной привязке источником свойства требуется ли чтения и записи.</span><span class="sxs-lookup"><span data-stu-id="577d6-151">If the binding updates two-way, the property source must be read-write.</span></span> <span data-ttu-id="577d6-152">Также Обратите внимание, что целевой объект привязки для свойства зависимостей.</span><span class="sxs-lookup"><span data-stu-id="577d6-152">Also note that the binding target does have to be a dependency property.</span></span> <span data-ttu-id="577d6-153">Дополнительные сведения см. в разделе [Общие сведения о привязке данных](~/docs/framework/wpf/data/data-binding-overview.md).</span><span class="sxs-lookup"><span data-stu-id="577d6-153">For details, see [Data Binding Overview](~/docs/framework/wpf/data/data-binding-overview.md).</span></span>  
  
 <span data-ttu-id="577d6-154">Если с помощью этого <xref:System.Windows.PropertyPath> в целевом режиме один шаг пути для раскадровки цели <xref:System.Windows.PropertyPath> является строкой, которая является *typeName*.* propertyName* указанием строки имя свойства зависимостей.</span><span class="sxs-lookup"><span data-stu-id="577d6-154">If using this <xref:System.Windows.PropertyPath> in target mode for a single-step path for a storyboard target, <xref:System.Windows.PropertyPath> is a string that is a *typeName*.*propertyName* qualified dependency property name string.</span></span>  
  
 <span data-ttu-id="577d6-155">Если с помощью этого <xref:System.Windows.PropertyPath> сложного пути для раскадровки цели <xref:System.Windows.PropertyPath.Path%2A> является токенами строковый формат, который описывает связи для различных объектов, приведенные в <xref:System.Windows.PropertyPath.PathParameters%2A>.</span><span class="sxs-lookup"><span data-stu-id="577d6-155">If using this <xref:System.Windows.PropertyPath> for a complex path for a storyboard target, <xref:System.Windows.PropertyPath.Path%2A> is a tokenized string format that describes the relationships of the various objects given in the <xref:System.Windows.PropertyPath.PathParameters%2A>.</span></span>  
  
-   <span data-ttu-id="577d6-156">Каждый элемент в массиве задается в формате индекса массива для элемента, заключенный в круглые скобки.</span><span class="sxs-lookup"><span data-stu-id="577d6-156">Each item in the array is specified in this format by the array index for the item enclosed in parentheses.</span></span> <span data-ttu-id="577d6-157">Например, для указания первого элемента в массиве, из маркера строки является `(0)`.</span><span class="sxs-lookup"><span data-stu-id="577d6-157">For example, to specify the first item in the array, the string token is `(0)`.</span></span>  
  
-   <span data-ttu-id="577d6-158">Отношения между элементами («действия» в пути) указываются через точку (.).</span><span class="sxs-lookup"><span data-stu-id="577d6-158">Relationships between items ("steps" in the path) are specified by a dot (.).</span></span> <span data-ttu-id="577d6-159">Свойство точки является первым шагом в пути, свойство после является вторым шагом и т. д (можно указать помимо двух шагов).</span><span class="sxs-lookup"><span data-stu-id="577d6-159">The property forward of the dot is the first step in the path, the property after is the second step, and so on (you can specify steps beyond two).</span></span> <span data-ttu-id="577d6-160">Последний шаг в цепочке всегда представляет анимируемого свойства.</span><span class="sxs-lookup"><span data-stu-id="577d6-160">The last step in the chain always represents the property being animated.</span></span>  
  
-   <span data-ttu-id="577d6-161">Свойствам коллекции осуществляется с помощью синтаксиса индексатора, с указанием индекса в квадратных скобках ([и]).</span><span class="sxs-lookup"><span data-stu-id="577d6-161">Items within collection properties are accessed with an indexer syntax, with the index within square brackets ([ and ]).</span></span> <span data-ttu-id="577d6-162">Индексатор находится прибавляется к символу, представляющий свойство.</span><span class="sxs-lookup"><span data-stu-id="577d6-162">The indexer is additive to the token representing the property.</span></span> <span data-ttu-id="577d6-163">Например, ниже приведен два пути, с комбинацией символов в первом шаге, указывая второй элемент из коллекции этого свойства: `(0)[1].(1)` .</span><span class="sxs-lookup"><span data-stu-id="577d6-163">For example, the following is a two-step path, with the token combination in the first step specifying the second item from within the collection of that property: `(0)[1].(1)` .</span></span> <span data-ttu-id="577d6-164">Нельзя использовать индексатор в последнее свойство в цепочке; не удается анимировать позицию фактической коллекции, необходимо анимировать свойство для этого объекта.</span><span class="sxs-lookup"><span data-stu-id="577d6-164">You cannot use an indexer on the last property in the chain; you cannot animate the actual collection position, you must animate a property on that object.</span></span>  
  
 <span data-ttu-id="577d6-165">Строка пути для <xref:System.Windows.PropertyPath> обычно устанавливается посредством конструкторы: <xref:System.Windows.PropertyPath.%23ctor%28System.Object%29> подпись для привязки или цели storyboard один шаг <xref:System.Windows.PropertyPath.%23ctor%28System.String%2CSystem.Object%5B%5D%29> подписи многоэтапной раскадровки целей.</span><span class="sxs-lookup"><span data-stu-id="577d6-165">The path string for a <xref:System.Windows.PropertyPath> is typically established through the constructors: the <xref:System.Windows.PropertyPath.%23ctor%28System.Object%29> signature for bindings or single-step storyboard targets, the <xref:System.Windows.PropertyPath.%23ctor%28System.String%2CSystem.Object%5B%5D%29> signature for multi-step storyboard targets.</span></span>  
  
 <span data-ttu-id="577d6-166">**XAML:** при использовании <xref:System.Windows.PropertyPath> для описания ссылка на свойство в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], как строка, которую вы укажите значение атрибута, сначала обрабатывается преобразователя типов (<xref:System.Windows.PropertyPathConverter>).</span><span class="sxs-lookup"><span data-stu-id="577d6-166">**XAML:** When you use a <xref:System.Windows.PropertyPath> to describe a property reference in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], as an attribute value, the string that you specify is first handled by a type converter (<xref:System.Windows.PropertyPathConverter>).</span></span> <span data-ttu-id="577d6-167">Этот преобразователь типов, затем обрабатывает строку и на основе ее синтаксиса вызывается один из <xref:System.Windows.PropertyPath> сигнатур конструкторов.</span><span class="sxs-lookup"><span data-stu-id="577d6-167">This type converter then processes the string and based on its syntax will call one of the <xref:System.Windows.PropertyPath> constructor signatures.</span></span> <span data-ttu-id="577d6-168">Это косвенное обращение через преобразователь типов, обработки значения атрибута обычно является использование <xref:System.Windows.PropertyPath> в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], вместо того чтобы объявление <xref:System.Windows.PropertyPath> объекта элемента, а затем применяются определенные значения для атрибутов такие как <xref:System.Windows.PropertyPath.Path%2A> и <xref:System.Windows.PropertyPath.PathParameters%2A>.</span><span class="sxs-lookup"><span data-stu-id="577d6-168">This indirection through the type converter handling an attribute value is generally how you use <xref:System.Windows.PropertyPath> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], rather than declaring a <xref:System.Windows.PropertyPath> object element and then applying specific values to attributes such as <xref:System.Windows.PropertyPath.Path%2A> and <xref:System.Windows.PropertyPath.PathParameters%2A>.</span></span> <span data-ttu-id="577d6-169">Дополнительные сведения см. в разделе [XAML синтаксическая конструкция PropertyPath](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).</span><span class="sxs-lookup"><span data-stu-id="577d6-169">For more information, see [PropertyPath XAML Syntax](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).</span></span>  
  
<a name="xamlTextUsage_Path"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="577d6-170">Использование текста XAML</span><span class="sxs-lookup"><span data-stu-id="577d6-170">XAML Text Usage</span></span>  
 <span data-ttu-id="577d6-171">Члены <xref:System.Windows.PropertyPath> типа обычно не заданы в прямой [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] синтаксиса.</span><span class="sxs-lookup"><span data-stu-id="577d6-171">Members of the <xref:System.Windows.PropertyPath> type are not typically set in a direct [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax.</span></span> <span data-ttu-id="577d6-172">См. заметки.</span><span class="sxs-lookup"><span data-stu-id="577d6-172">See Remarks.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PathParameters">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;object&gt; PathParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;object&gt; PathParameters" />
      <MemberSignature Language="DocId" Value="P:System.Windows.PropertyPath.PathParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PathParameters As Collection(Of Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::Object ^&gt; ^ PathParameters { System::Collections::ObjectModel::Collection&lt;System::Object ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>PresentationFramework</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.Object&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="577d6-173">Получает список параметров для использования, когда путь относится к индексированным параметрам.</span>
          <span class="sxs-lookup">
            <span data-stu-id="577d6-173">Gets the list of parameters to use when the path refers to indexed parameters.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="577d6-174">Список параметров.</span>
          <span class="sxs-lookup">
            <span data-stu-id="577d6-174">The parameter list.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="577d6-175">Свойства <xref:System.Windows.PropertyPath> обычно устанавливается посредством конструкторов.</span><span class="sxs-lookup"><span data-stu-id="577d6-175">The properties for a <xref:System.Windows.PropertyPath> are typically established through the constructors.</span></span> <span data-ttu-id="577d6-176">Для параметра <xref:System.Windows.PropertyPath.PathParameters%2A>, <xref:System.Windows.PropertyPath.%23ctor%2A> конструктор особенно удобно, так как `pathParameters` используется в качестве аргумента конструктора `params`, то есть не требуется для создания или измерения массива для построения.</span><span class="sxs-lookup"><span data-stu-id="577d6-176">For setting <xref:System.Windows.PropertyPath.PathParameters%2A>, the <xref:System.Windows.PropertyPath.%23ctor%2A> constructor is particularly convenient because the `pathParameters` constructor argument is designated as `params`, meaning that you do not need to create or dimension an array for construction.</span></span> <span data-ttu-id="577d6-177">Просто укажите каждый элемент массива как дополнительный параметр.</span><span class="sxs-lookup"><span data-stu-id="577d6-177">You simply specify each member of the array as an additional parameter.</span></span>  
  
 <span data-ttu-id="577d6-178">Если последнее свойство, которое является целевым <xref:System.Windows.Freezable> тип, что значение будет клонирован.</span><span class="sxs-lookup"><span data-stu-id="577d6-178">If the final property that is the target is a <xref:System.Windows.Freezable> type, that value will be cloned.</span></span> <span data-ttu-id="577d6-179">Дополнительные сведения см. в разделе [Общие](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).</span><span class="sxs-lookup"><span data-stu-id="577d6-179">For details, see [Storyboards Overview](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).</span></span>  
  
 <span data-ttu-id="577d6-180">Само вычисление цепочки свойств выполняет раскадровки для анимации.</span><span class="sxs-lookup"><span data-stu-id="577d6-180">The actual evaluation of the property chain is performed by the storyboard animation mechanisms.</span></span> <span data-ttu-id="577d6-181">В <xref:System.Windows.PropertyPath> уровня, проверка не выполняется для убедитесь, что все подключения действия пути.</span><span class="sxs-lookup"><span data-stu-id="577d6-181">At the <xref:System.Windows.PropertyPath> level, no validation is performed to make sure that the steps of the path connect at all.</span></span> <span data-ttu-id="577d6-182">Например, можно создать путь к свойству, которое имеет <xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType> в качестве первого шага и <xref:System.Windows.FrameworkElement.FlowDirectionProperty?displayProperty=nameWithType> на втором этапе.</span><span class="sxs-lookup"><span data-stu-id="577d6-182">For instance, you can construct a property path that has <xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType> as the first step, and <xref:System.Windows.FrameworkElement.FlowDirectionProperty?displayProperty=nameWithType> as the second step.</span></span> <span data-ttu-id="577d6-183">Путь свойства будет выполнен, если фактического применения в качестве целевого объекта, так как тип кисти, заливки, но <xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType> не имеет <xref:System.Windows.FrameworkElement.FlowDirection%2A?displayProperty=nameWithType> свойства.</span><span class="sxs-lookup"><span data-stu-id="577d6-183">But such a property path would fail if actually applied as a target, because the Brush type that fills <xref:System.Windows.Controls.Control.BackgroundProperty?displayProperty=nameWithType> does not have a <xref:System.Windows.FrameworkElement.FlowDirection%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="577d6-184">Недопустимые пути свойств не без вмешательства пользователя.</span><span class="sxs-lookup"><span data-stu-id="577d6-184">Invalid property paths fail silently.</span></span> <span data-ttu-id="577d6-185">Дополнительные сведения см. в разделе [Общие сведения о Storyboard](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).</span><span class="sxs-lookup"><span data-stu-id="577d6-185">For more information, see [Storyboards Overview](~/docs/framework/wpf/graphics-multimedia/storyboards-overview.md).</span></span>  
  
 <span data-ttu-id="577d6-186">**XAML:** при использовании <xref:System.Windows.PropertyPath> для описания ссылка на свойство в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], как строка, которую вы укажите значение атрибута, сначала обрабатывается преобразователя типов (<xref:System.Windows.PropertyPathConverter>).</span><span class="sxs-lookup"><span data-stu-id="577d6-186">**XAML:** When you use a <xref:System.Windows.PropertyPath> to describe a property reference in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], as an attribute value, the string that you specify is first handled by a type converter (<xref:System.Windows.PropertyPathConverter>).</span></span> <span data-ttu-id="577d6-187">Этот преобразователь типов, затем обрабатывает строку и на основе ее синтаксиса вызывается один из <xref:System.Windows.PropertyPath> сигнатур конструкторов.</span><span class="sxs-lookup"><span data-stu-id="577d6-187">This type converter then processes the string and based on its syntax will call one of the <xref:System.Windows.PropertyPath> constructor signatures.</span></span> <span data-ttu-id="577d6-188">Это косвенное обращение через преобразователь типов, обработки значения атрибута обычно является использование <xref:System.Windows.PropertyPath> в [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], вместо того чтобы объявление <xref:System.Windows.PropertyPath> объекта элемента, а затем применяются определенные значения для атрибутов такие как <xref:System.Windows.PropertyPath.Path%2A> и <xref:System.Windows.PropertyPath.PathParameters%2A>.</span><span class="sxs-lookup"><span data-stu-id="577d6-188">This indirection through the type converter handling an attribute value is generally how you use <xref:System.Windows.PropertyPath> in [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)], rather than declaring a <xref:System.Windows.PropertyPath> object element and then applying specific values to attributes such as <xref:System.Windows.PropertyPath.Path%2A> and <xref:System.Windows.PropertyPath.PathParameters%2A>.</span></span> <span data-ttu-id="577d6-189">Дополнительные сведения см. в разделе [XAML синтаксическая конструкция PropertyPath](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).</span><span class="sxs-lookup"><span data-stu-id="577d6-189">For more information, see [PropertyPath XAML Syntax](~/docs/framework/wpf/advanced/propertypath-xaml-syntax.md).</span></span>  
  
<a name="xamlTextUsage_PathParameters"></a>   
## <a name="xaml-text-usage"></a><span data-ttu-id="577d6-190">Использование текста XAML</span><span class="sxs-lookup"><span data-stu-id="577d6-190">XAML Text Usage</span></span>  
 <span data-ttu-id="577d6-191">Члены <xref:System.Windows.PropertyPath> типа обычно не заданы в прямой [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] синтаксиса.</span><span class="sxs-lookup"><span data-stu-id="577d6-191">Members of the <xref:System.Windows.PropertyPath> type are not typically set in a direct [!INCLUDE[TLA2#tla_xaml](~/includes/tla2sharptla-xaml-md.md)] syntax.</span></span> <span data-ttu-id="577d6-192">См. заметки.</span><span class="sxs-lookup"><span data-stu-id="577d6-192">See Remarks.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>