<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ValidateValueCallback.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac589aba3c617b357a974c2d5eb1f15d2f3c4cb20ba.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">89aba3c617b357a974c2d5eb1f15d2f3c4cb20ba</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Windows.ValidateValueCallback">
          <source>The value to be validated.</source>
          <target state="translated">Значение, подлежащий проверке.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Windows.ValidateValueCallback">
          <source>Represents a method used as a callback that validates the effective value of a  dependency property.</source>
          <target state="translated">Представляет метод, используемый как обратный вызов, проверяющий фактическое значение свойства зависимостей.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Windows.ValidateValueCallback">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value was validated; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the submitted value was invalid.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> если значение допустимо; <ph id="ph2">&lt;see langword="false" /&gt;</ph> если значение не является допустимым.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ValidateValueCallback">
          <source>Callbacks based on this delegate are used by certain signatures of <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.Register%2A?displayProperty=nameWithType&gt;</ph> and related methods, such as <ph id="ph2">&lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;</ph> and read-only equivalents.</source>
          <target state="translated">Обратные вызовы на этот делегат основе используются определенные сигнатуры <ph id="ph1">&lt;xref:System.Windows.DependencyProperty.Register%2A?displayProperty=nameWithType&gt;</ph> и связанные методы, такие как <ph id="ph2">&lt;xref:System.Windows.DependencyProperty.RegisterAttached%2A&gt;</ph> и эквиваленты только для чтения.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ValidateValueCallback">
          <source>You should use signatures that take the <ph id="ph1">`validateValueCallback`</ph> parameter if you want specific validation of the property value each time that its effective is set.</source>
          <target state="translated">Следует использовать сигнатуры, принимающие <ph id="ph1">`validateValueCallback`</ph> параметра, если определенные проверку значения свойства при каждом его эффективного необходимо.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ValidateValueCallback">
          <source>You should then implement this callback such that it performs the actual validation of the proposed value.</source>
          <target state="translated">Таким образом, что выполняется фактическая проверка предложенное значение следует реализовать этот обратный вызов.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ValidateValueCallback">
          <source>The callback should return <ph id="ph1">`true`</ph> if the value submitted to the callback is valid, and <ph id="ph2">`false`</ph> otherwise.</source>
          <target state="translated">Обратный вызов должен вернуть <ph id="ph1">`true`</ph> Если значение, переданное методу обратного вызова является допустимым, и <ph id="ph2">`false`</ph> в противном случае.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ValidateValueCallback">
          <source>A <ph id="ph1">`false`</ph> value will produce an exception in the specific portion of the property system where the invalid property set was attempted, so your application should be prepared to handle these exceptions.</source>
          <target state="translated">Объект <ph id="ph1">`false`</ph> значение будет создавать исключение в особой части системы свойств, где была предпринята попытка присвоить недопустимое значение, поэтому приложение должно быть подготовлено к обрабатывать эти исключения.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ValidateValueCallback">
          <source>Validation callbacks are stored on dependency property identifiers, rather than dependency property metadata.</source>
          <target state="translated">Обратные вызовы проверки хранятся идентификаторы свойств зависимостей, а не метаданные свойства зависимостей.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ValidateValueCallback">
          <source>Your validation callback does not have access to a specific instance of a <ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph> on which the property is set, and can only influence what values are accepted for the property in general.</source>
          <target state="translated">Ответ проверки не имеет доступа к определенному экземпляру <ph id="ph1">&lt;xref:System.Windows.DependencyObject&gt;</ph> на это свойство и может влиять только на какие значения допустимы для свойства в целом.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ValidateValueCallback">
          <source>If you need a callback that can change property values based on a specific instance, you should use a combination of a <ph id="ph1">&lt;xref:System.Windows.CoerceValueCallback&gt;</ph> and <ph id="ph2">&lt;xref:System.Windows.PropertyChangedCallback&gt;</ph> callbacks as applied to the property metadata of your property.</source>
          <target state="translated">Если вам требуется обратный вызов, который можно изменить значения свойств в зависимости от конкретного экземпляра, следует использовать сочетание <ph id="ph1">&lt;xref:System.Windows.CoerceValueCallback&gt;</ph> и <ph id="ph2">&lt;xref:System.Windows.PropertyChangedCallback&gt;</ph> обратные вызовы применительно к свойствам метаданных свойства.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ValidateValueCallback">
          <source>You might also apply these callbacks to related properties that should influence your property's value.</source>
          <target state="translated">Можно также применить эти обратные вызовы к свойствам, которые должны влиять на значения свойства.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ValidateValueCallback">
          <source>For details, see <bpt id="p1">[</bpt>Dependency Property Callbacks and Validation<ept id="p1">](~/docs/framework/wpf/advanced/dependency-property-callbacks-and-validation.md)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>обратных вызовах свойства зависимости и проверки<ept id="p1">](~/docs/framework/wpf/advanced/dependency-property-callbacks-and-validation.md)</ept>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ValidateValueCallback">
          <source>The following example includes an implementation of this callback to validate a range of values for a custom dependency property.</source>
          <target state="translated">Следующий пример содержит реализацию этого обратного вызова для проверки диапазона значений для настраиваемого свойства зависимости.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Windows.ValidateValueCallback">
          <source>In this case the property value expects an enumeration, and the validation assures that the provided value evaluates to a member of that enumeration.</source>
          <target state="translated">В этом случае значение свойства принимает перечисление, а проверка гарантирует, что полученные значения являются членами указанного перечисления.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>