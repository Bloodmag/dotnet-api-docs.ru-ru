<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="WorkflowPersistenceService.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ec1eb1e036001431540c10b6cc57bb283cfb6ce8.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ec1eb1e036001431540c10b6cc57bb283cfb6ce8</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>The abstract base class from which all persistence services are derived.</source>
          <target state="translated">Абстрактный базовый класс, производными которого являются все службы постоянного хранения.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>When certain conditions occur while the workflow is running, the workflow runtime engine persists state information about the workflow instance.</source>
          <target state="translated">При возникновении определенных условий во время выполнения рабочего процесса подсистема среды выполнения рабочих процессов сохраняет сведения о состоянии экземпляра рабочего процесса.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>Persistence can occur, for example, when an atomic transaction finishes, when the workflow instance becomes idle, when the host calls <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=nameWithType&gt;</ph> on the workflow instance, or when a workflow instance is terminated or finishes.</source>
          <target state="translated">Постоянное хранение может возникнуть, например, при завершении атомарной транзакции при освобождении экземпляра рабочего процесса, когда основное приложение вызывает <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowInstance.Unload%2A?displayProperty=nameWithType&gt;</ph> в экземпляре рабочего процесса или при прерывании или завершении экземпляра рабочего процесса.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>When the workflow runtime engine semantics dictate that persistence should occur, the workflow runtime engine calls methods that are supplied by a persistence service to save state information about the workflow instance.</source>
          <target state="translated">Когда семантика подсистемы среды выполнения рабочих процессов предписывает необходимость появления постоянного хранения, подсистема среды выполнения рабочих процессов вызывает методы, предоставленные службой постоянного хранения для сохранения сведений о состоянии экземпляра рабочего процесса.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>Likewise, when the workflow runtime engine needs to restore a previously persisted workflow instance, it calls methods that are supplied by the persistence service to load this state information.</source>
          <target state="translated">Подобным образом, когда подсистеме среды выполнения рабочих процессов необходимо восстановить ранее сохраненный экземпляр рабочего процесса, она вызывает методы, предоставленные службой постоянного хранения для загрузки этих сведений о состоянии.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>The workflow runtime engine handles all the semantics regarding when to perform persistence.</source>
          <target state="translated">Подсистема среды выполнения рабочих процессов обрабатывает всю семантику относительно времени выполнения сохранения.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>The persistence service handles actually saving and loading the workflow state information to or from a data store.</source>
          <target state="translated">Служба постоянного хранения обрабатывает фактически сохранение и загрузку сведений о состоянии рабочего процесса в хранилище данных или из него.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>You can create a persistence service by deriving a class from the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> class.</source>
          <target state="translated">Службу постоянного хранения можно создать путем наследования класса от класса <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>You can add your persistence service to the workflow runtime engine by calling <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> or by making an appropriate entry in the application configuration file.</source>
          <target state="translated">Службу постоянного хранения можно добавить в подсистему среды выполнения рабочих процессов путем вызова метода <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.AddService%2A&gt;</ph> или путем создания соответствующей записи в файле конфигурации приложения.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> should only contain one persistence service.</source>
          <target state="translated">В классе <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime&gt;</ph> должна содержаться только одна служба постоянного хранения.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>Windows Workflow Foundation provides the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</ph> class, an out-of-box persistence service, which you can use as is or extend.</source>
          <target state="translated">Windows Workflow Foundation предоставляет класс <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.SqlWorkflowPersistenceService&gt;</ph>, готовую службу постоянного хранения, которую можно использовать как есть или же ее можно расширить.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>The workflow runtime engine has semantics for locking workflow state information for use in environments where persistence services that run in different processes might have access to a single data store.</source>
          <target state="translated">Подсистема среды выполнения рабочих процессов имеет семантику для блокировки сведений о состоянии рабочего процесса для использования в средах, где службы постоянного хранения, выполняемые в разных процессах, могут иметь доступ к одному хранилищу данных.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>The <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> class provides the capability to support this functionality of the workflow runtime engine by providing a parameter to <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;</ph> that specifies whether the state information of a workflow instance should be unlocked in the data store, and by providing a method <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A&gt;</ph> to unlock previously locked workflow state information.</source>
          <target state="translated">Класс <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService&gt;</ph> предоставляет возможность поддержки этой функциональной возможности подсистемы среды выполнения рабочих процессов, предоставляя параметр для <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;</ph>, который указывает, должны ли сведения о состоянии экземпляра рабочего процесса быть разблокированы в хранилище данных, или предоставляя метод <ph id="ph3">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A&gt;</ph> для разблокирования ранее заблокированных сведений о состоянии рабочего процесса.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>In a persistence service that implements locking, a call to <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt;</ph> should lock the state information for a workflow instance.</source>
          <target state="translated">В службе постоянного хранения, реализующей блокировку, вызов <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt;</ph> должен заблокировать сведения о состоянии для экземпляра рабочего процесса.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>Your persistence service should throw a <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;</ph> if it fails to save state information to its data store or load state information from its data store.</source>
          <target state="translated">Служба постоянного хранения должна вызвать исключение <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;</ph>, если ей не удается сохранить сведения о состоянии в хранилище данных или загрузить сведения о состоянии из хранилища данных.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>The workflow runtime engine expects this behavior.</source>
          <target state="translated">Подсистема среды выполнения рабочих процессов предполагает следующее поведение.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>A batching mechanism is provided for services that use a durable store to save workflow state information.</source>
          <target state="translated">Механизм пакетирования предоставляется для служб, использующих постоянное хранилище для хранения сведений о состоянии рабочего процесса.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>It is important in these cases to maintain consistency between the durable store that is used by the persistence service and the internal state of the workflow runtime engine.</source>
          <target state="translated">В таких случаях часто бывает важным обеспечение согласованности между постоянным хранилищем, используемым службой постоянного хранения, и внутренним состоянием подсистемы среды выполнения рабочих процессов.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>You can add functionality defined by the <ph id="ph1">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> interface to your service, and then participate in workflow transaction batching provided by the <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph> by adding changes to your data store as work items to the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;</ph>.</source>
          <target state="translated">Можно добавить функциональные возможности, определенные интерфейсом <ph id="ph1">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> для службы, а затем принять участие в пакетировании транзакции рабочего процесса, предоставленном <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowCommitWorkBatchService&gt;</ph>, путем добавления изменения в хранилище данных в качестве рабочих элементов в <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>The durable store itself should implement the <ph id="ph1">&lt;xref:System.Transactions.IEnlistmentNotification&gt;</ph> interface, so that workflow information is not persisted incorrectly in the event of a transaction rollback.</source>
          <target state="translated">Само постоянное хранилище должно реализовать интерфейс <ph id="ph1">&lt;xref:System.Transactions.IEnlistmentNotification&gt;</ph>, так что сведения о рабочем процессе не сохраняются неправильным образом в событии отката транзакции.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;</ph>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.#ctor">
          <source>When implemented in a derived class, initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService" /&gt;</ph> class.</source>
          <target state="translated">При реализации в производном классе инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.Hosting.WorkflowPersistenceService" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.#ctor">
          <source>The following example demonstrates creating an instance of the <ph id="ph1">`SqlWorkflowPersistenceService`</ph> class (derived from <ph id="ph2">`WorkflowPersistenceService`</ph>).</source>
          <target state="translated">В следующем примере показано создание экземпляра класса <ph id="ph1">`SqlWorkflowPersistenceService`</ph> (производного от <ph id="ph2">`WorkflowPersistenceService`</ph>).</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.#ctor">
          <source>This example is from the Nested Exception Handlers SDK sample, from the Program.cs class.</source>
          <target state="translated">Данный пример является частью образца SDK «Nested Exception Handlers» из класса Program.cs.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.#ctor">
          <source>For more information, see the <bpt id="p1">[</bpt>Nested Exception Handlers Sample<ept id="p1">](http://msdn.microsoft.com/library/d1da0209-842b-41c8-9b7c-0cbaa1034265)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>вложенные образец обработчики исключений<ept id="p1">](http://msdn.microsoft.com/library/d1da0209-842b-41c8-9b7c-0cbaa1034265)</ept>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm(System.Workflow.ComponentModel.Activity)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> whose serialized form is requested.</source>
          <target state="translated">Тип <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph>, сериализованная форма которого запрашивается.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm(System.Workflow.ComponentModel.Activity)">
          <source>Retrieves the serialized default form of the <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph>.</source>
          <target state="translated">Получает сериализованную форму по умолчанию <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetDefaultSerializedForm(System.Workflow.ComponentModel.Activity)">
          <source>The serialized default form of the <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph>.</source>
          <target state="translated">Сериализованная форма по умолчанию <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked(System.Workflow.ComponentModel.Activity)">
          <source>The root activity of the workflow instance.</source>
          <target state="translated">Корневое действие экземпляра рабочего процесса.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked(System.Workflow.ComponentModel.Activity)">
          <source>Indicates whether the given activity is blocked.</source>
          <target state="translated">Указывает, является ли данное действие заблокированным.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetIsBlocked(System.Workflow.ComponentModel.Activity)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the given activity is blocked; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, если данное действие является заблокированным; в противном случае — <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo(System.Workflow.ComponentModel.Activity)">
          <source>The root activity of the workflow instance.</source>
          <target state="translated">Корневое действие экземпляра рабочего процесса.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo(System.Workflow.ComponentModel.Activity)">
          <source>Retrieves the termination or suspend information of the given activity.</source>
          <target state="translated">Получает сведения о прекращении или приостановке данного действия.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetSuspendOrTerminateInfo(System.Workflow.ComponentModel.Activity)">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that contains the termination or suspend information.</source>
          <target state="translated">Тип <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>, который содержит сведения о прекращении или приостановке.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus(System.Workflow.ComponentModel.Activity)">
          <source>The root activity of the workflow instance.</source>
          <target state="translated">Корневое действие экземпляра рабочего процесса.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus(System.Workflow.ComponentModel.Activity)">
          <source>Retrieves the status of the workflow.</source>
          <target state="translated">Получает состояние рабочего процесса.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus(System.Workflow.ComponentModel.Activity)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowStatus" /&gt;</ph> enumeration value that denotes the status of the workflow.</source>
          <target state="translated">Значение перечисления <ph id="ph1">&lt;see cref="T:System.Workflow.Runtime.WorkflowStatus" /&gt;</ph>, обозначающее состояние рабочего процесса.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> of the completed scope.</source>
          <target state="translated">Тип <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> завершенной области.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> that represents the activity that encloses the completed scope.</source>
          <target state="translated">Тип <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph>, представляющий действие, заключающее завершенную область.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)">
          <source>When implemented in a derived class, loads the specified completed scope back into memory.</source>
          <target state="translated">При реализации в производном классе загружает заданную завершенную область обратно в память.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> that represents the completed scope.</source>
          <target state="translated">Тип <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph>, представляющий завершенную область.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)">
          <source>The workflow runtime engine uses <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A&gt;</ph> to implement compensation.</source>
          <target state="translated">Подсистема среды выполнения рабочих процессов использует <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A&gt;</ph> для реализации компенсации.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)">
          <source>You must restore an identical copy of the completed scope.</source>
          <target state="translated">Необходимо восстановить идентичную копию завершенной области.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)">
          <source>To do this, you must restore a valid <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> from your representation of the completed scope in the data store.</source>
          <target state="translated">Для этого необходимо восстановить допустимый тип <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> из представления завершенной области в хранилище данных.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)">
          <source>Then you must pass this <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> to one of the overloaded methods of <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Activity.Load%2A&gt;</ph> to perform deserialization of the scope.</source>
          <target state="translated">Затем необходимо передать этот тип <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> одному из перегруженных методов <ph id="ph2">&lt;xref:System.Workflow.ComponentModel.Activity.Load%2A&gt;</ph> для выполнения десериализации области.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)">
          <source>If your persistence service cannot load the completed scope from its data store, it should throw a <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;</ph> with an appropriate message.</source>
          <target state="translated">Если служба постоянного хранения не может загрузить завершенную область из хранилища данных, необходимо вызывать исключение <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;</ph> с помощью соответствующего сообщения.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)">
          <source>The following example demonstrates an implementation of the <ph id="ph1">`LoadCompletedContextActivity`</ph> method.</source>
          <target state="translated">В следующем примере показана реализация метода <ph id="ph1">`LoadCompletedContextActivity`</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)">
          <source>This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</source>
          <target state="translated">Данный пример кода является частью примера «Custom Persistence Service» из файла FilePersistenceService.cs.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity(System.Guid,System.Workflow.ComponentModel.Activity)">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>пример службы сохраняемости пользовательского<ept id="p1">](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)</ept>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> of the root activity of the workflow instance.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Guid" /&gt;</ph> корневого действия экземпляра рабочего процесса.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>When implemented in a derived class, loads the specified state of the workflow instance back into memory.</source>
          <target state="translated">При реализации в производном классе загружает заданное состояние экземпляра рабочего процесса обратно в память.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> that represents the root activity of the workflow instance.</source>
          <target state="translated">Объект класса <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph>, представляющий корневое действие экземпляра рабочего процесса.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>You must restore an identical copy of the activity.</source>
          <target state="translated">Необходимо восстановить идентичную копию действия.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>To do this, you must restore a valid <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> from your representation of the workflow instance in the data store; then you must pass this <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> to one of the overloaded <ph id="ph3">&lt;xref:System.Workflow.ComponentModel.Activity.Load%2A&gt;</ph> methods to deserialize the workflow instance state.</source>
          <target state="translated">Для этого необходимо восстановить допустимый тип <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> из представления экземпляра рабочего процесса в хранилище данных; затем необходимо передать этот тип <ph id="ph2">&lt;xref:System.IO.Stream&gt;</ph> одному из перегруженных методов <ph id="ph3">&lt;xref:System.Workflow.ComponentModel.Activity.Load%2A&gt;</ph> для десериализации состояния экземпляра рабочего процесса.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>If your persistence service cannot load the workflow instance state from its data store, it should throw a <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;</ph> with an appropriate message.</source>
          <target state="translated">Если служба постоянного хранения не может загрузить состояние экземпляра рабочего процесса из хранилища данных, необходимо вызвать исключение <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;</ph> с помощью соответствующего сообщения.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>The workflow runtime engine implements locking semantics to restrict access to a workflow instance state that is saved in a data store.</source>
          <target state="translated">Подсистема среды выполнения рабочих процессов реализует семантику блокировки для ограничения доступа к состоянию экземпляра рабочего процесса, сохраненного в хранилище данных.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>This can be accessed by persistence services that run in multiple processes.</source>
          <target state="translated">К нему можно получить доступ с помощью служб постоянного хранения, выполняемых в нескольких процессах.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>The locking semantics are designed to prevent persistence services that run in two different processes from loading the same workflow instance into memory at the same time.</source>
          <target state="translated">Семантика блокировки разработана, чтобы предотвратить службы постоянного хранения, выполняемых в двух разных процессах, от одновременной загрузки одного экземпляра рабочего процесса в память.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>Depending on the type of environment that your persistence service is designed to support, you may choose whether to support this functionality.</source>
          <target state="translated">В зависимости от типа среды, для поддержки которой разработана служба постоянного хранения, можно выбрать, поддерживать ли эту функциональную возможность.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>If you choose to support the runtime locking semantics, and if this workflow instance state has been previously locked by another process, then you should throw a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowOwnershipException&gt;</ph>.</source>
          <target state="translated">При выборе поддержки семантики блокировки среды выполнения, если данное состояние экземпляра рабочего процесса было ранее заблокировано другим процессом, необходимо вызвать исключение <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowOwnershipException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>Otherwise, you should lock access to the workflow instance state in your data store.</source>
          <target state="translated">В противном случае необходимо заблокировать доступ к состоянию экземпляра рабочего процесса в хранилище данных.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>The workflow instance state can be unlocked by a call to <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A&gt;</ph> or a call to <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;</ph> with the unlock parameter set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Состояние экземпляра рабочего процесса может быть разблокировано путем вызова <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState%2A&gt;</ph> или вызова <ph id="ph2">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;</ph> с параметром разблокировки с заданным значением <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>The following example demonstrates an implementation of the <ph id="ph1">`LoadWorkflowInstanceState`</ph> method.</source>
          <target state="translated">В следующем примере показана реализация метода <ph id="ph1">`LoadWorkflowInstanceState`</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</source>
          <target state="translated">Данный пример кода является частью примера «Custom Persistence Service» из файла FilePersistenceService.cs.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState(System.Guid)">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>пример службы сохраняемости пользовательского<ept id="p1">](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)</ept>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(System.Byte[],System.Workflow.ComponentModel.Activity)">
          <source>The serialized form of <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph>.</source>
          <target state="translated">Сериализованная форма <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(System.Byte[],System.Workflow.ComponentModel.Activity)">
          <source>The outer <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph>, containing the <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> to restore.</source>
          <target state="translated">Внешний класс <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph>, содержащий <ph id="ph2">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> для восстановления.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(System.Byte[],System.Workflow.ComponentModel.Activity)">
          <source>Restores the <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> from its serialized form.</source>
          <target state="translated">Восстанавливает <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> из сериализованной формы.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(System.Byte[],System.Workflow.ComponentModel.Activity)">
          <source>The restored <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph>.</source>
          <target state="translated">Восстановленный класс <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(System.Byte[],System.Workflow.ComponentModel.Activity)">
          <source>The following example demonstrates an implementation of the <ph id="ph1">`RestoreFromDefaultSerializedForm`</ph> method.</source>
          <target state="translated">В следующем примере показана реализация метода <ph id="ph1">`RestoreFromDefaultSerializedForm`</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(System.Byte[],System.Workflow.ComponentModel.Activity)">
          <source>This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</source>
          <target state="translated">Данный пример кода является частью примера «Custom Persistence Service» из файла FilePersistenceService.cs.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.RestoreFromDefaultSerializedForm(System.Byte[],System.Workflow.ComponentModel.Activity)">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>пример службы сохраняемости пользовательского<ept id="p1">](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)</ept>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> that represents the completed scope.</source>
          <target state="translated">Тип <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph>, представляющий завершенную область.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>When implemented in a derived class, saves the specified completed scope to a data store.</source>
          <target state="translated">При реализации в производном классе сохраняет заданную завершенную область в хранилище данных.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>The workflow runtime engine saves the state of completed scope activities in order to implement compensation.</source>
          <target state="translated">Подсистема среды выполнения рабочих процессов сохраняет состояние действий завершенной области для реализации компенсации.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>You must call one of the overloaded <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Activity.Save%2A&gt;</ph> methods to serialize <ph id="ph2">`activity`</ph> into a <ph id="ph3">&lt;xref:System.IO.Stream&gt;</ph>; you may then choose to additionally process the <ph id="ph4">&lt;xref:System.IO.Stream&gt;</ph> before writing it to your data store.</source>
          <target state="translated">Необходимо вызвать один из перегруженных методов <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Activity.Save%2A&gt;</ph> для сериализации <ph id="ph2">`activity`</ph> в <ph id="ph3">&lt;xref:System.IO.Stream&gt;</ph>; затем можно выбрать дополнительную обработку <ph id="ph4">&lt;xref:System.IO.Stream&gt;</ph> перед записью в хранилище данных.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>However, when the workflow runtime engine calls <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A&gt;</ph>, you must restore an identical copy of the activity.</source>
          <target state="translated">Однако при вызове <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A&gt;</ph> подсистемой среды выполнения рабочих процессов необходимо восстановить идентичную копию действия.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>You must be able to associate the completed scope with its enclosing workflow instance to mark the scope as unneeded in your data store when the workflow instance finishes or is terminated.</source>
          <target state="translated">Необходимо иметь возможность связать завершенную область с включающим экземпляром рабочего процесса для отметки области в качестве ненужной в хранилище данных при завершении или прерывании экземпляра рабочего процесса.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>Therefore, you should also save the <ph id="ph1">&lt;xref:System.Guid&gt;</ph> of the workflow instance that is associated with the completed scope; this can be obtained from the <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph> associated with <ph id="ph4">`activity`</ph>.</source>
          <target state="translated">Поэтому также необходимо сохранить тип <ph id="ph1">&lt;xref:System.Guid&gt;</ph> экземпляра рабочего процесса, связанный с завершенной областью; это можно сделать из свойства <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowInstance.InstanceId%2A&gt;</ph> типа <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowInstance&gt;</ph>, связанного с <ph id="ph4">`activity`</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A&gt;</ph> takes the <ph id="ph2">&lt;xref:System.Guid&gt;</ph> of the completed scope as a parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadCompletedContextActivity%2A&gt;</ph> принимает <ph id="ph2">&lt;xref:System.Guid&gt;</ph> завершенной области в качестве параметра.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>Therefore, you must also save the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.ActivityExecutionContext.ContextGuid%2A&gt;</ph> property associated with <ph id="ph2">`activity`</ph>.</source>
          <target state="translated">Поэтому также необходимо сохранить свойство <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.ActivityExecutionContext.ContextGuid%2A&gt;</ph>, связанное с <ph id="ph2">`activity`</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>This property can be referenced through the <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty&gt;</ph> field of <ph id="ph2">`activity`</ph>.</source>
          <target state="translated">На это свойство можно указать ссылкой через поле <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty&gt;</ph><ph id="ph2">`activity`</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>If you are implementing a persistence service that uses a durable store, to maintain consistency with the internal state of the workflow runtime engine, you should participate in workflow transaction batching to defer the actual write to your durable store until a workflow commit point.</source>
          <target state="translated">При реализации службы постоянного хранения, использующей постоянное хранилище, для поддержки целостности с внутренним состоянием подсистемы среды выполнения рабочих процессов необходимо принять участие в пакетировании транзакции рабочего процесса, чтобы отложить фактическую запись в постоянное хранилище до точки фиксации рабочего процесса.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>To participate in batching, add a work item to the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;</ph> property that represents the pending changes to the database, and implement the <ph id="ph2">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> interface in your persistence service.</source>
          <target state="translated">Для принятия участия в пакетировании добавьте рабочий элемент в свойство <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;</ph>, представляющее ожидающие изменения, в базу данных и реализуйте интерфейс <ph id="ph2">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> в службе постоянного хранения.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>If you cannot save the completed scope to your data store, you should throw a <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;</ph> with an appropriate error message.</source>
          <target state="translated">Если завершенную область невозможно сохранить в хранилище данных, необходимо вызвать исключение <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;</ph> с соответствующим сообщением об ошибке.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>The following example demonstrates an implementation of the <ph id="ph1">`SaveCompletedContextActivity`</ph> method.</source>
          <target state="translated">В следующем примере показана реализация метода <ph id="ph1">`SaveCompletedContextActivity`</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</source>
          <target state="translated">Данный пример кода является частью примера «Custom Persistence Service» из файла FilePersistenceService.cs.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveCompletedContextActivity(System.Workflow.ComponentModel.Activity)">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>пример службы сохраняемости пользовательского<ept id="p1">](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)</ept>.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>The root activity of the workflow instance.</source>
          <target state="translated">Корневое действие экземпляра рабочего процесса.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the workflow instance should not be locked; <ph id="ph2">&lt;see langword="false" /&gt;</ph> if the workflow instance should be locked.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph>, если экземпляр рабочего процесса не должен быть заблокирован; <ph id="ph2">&lt;see langword="false" /&gt;</ph>, если экземпляр рабочего процесса должен быть заблокирован.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>When implemented in a derived class, saves the workflow instance state to a data store.</source>
          <target state="translated">При реализации в производном классе сохраняет состояние экземпляра рабочего процесса в хранилище данных.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>You must call one of the overloaded <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Activity.Save%2A&gt;</ph> methods to serialize <ph id="ph2">`rootActivity`</ph> into a <ph id="ph3">&lt;xref:System.IO.Stream&gt;</ph>.</source>
          <target state="translated">Необходимо вызвать один из перегруженных методов <ph id="ph1">&lt;xref:System.Workflow.ComponentModel.Activity.Save%2A&gt;</ph> для сериализации <ph id="ph2">`rootActivity`</ph> в <ph id="ph3">&lt;xref:System.IO.Stream&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>You can then choose to additionally process the <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> before writing it to your data store.</source>
          <target state="translated">Затем можно выбрать дополнительную обработку <ph id="ph1">&lt;xref:System.IO.Stream&gt;</ph> перед записью в хранилище данных.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>However, when the workflow runtime engine calls <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt;</ph>, you must restore an identical copy of the root activity.</source>
          <target state="translated">Однако при вызове <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt;</ph> подсистемой среды выполнения рабочих процессов необходимо восстановить идентичную копию корневого действия.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>If you cannot save the workflow instance state to your data store, you should throw a <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;</ph> with an appropriate error message.</source>
          <target state="translated">Если состояние экземпляра рабочего процесса невозможно сохранить в хранилище данных, необходимо вызвать исключение <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.PersistenceException&gt;</ph> с соответствующим сообщением об ошибке.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>The workflow runtime engine provides locking semantics to restrict access to a workflow instance state that is saved in the data store.</source>
          <target state="translated">Подсистема среды выполнения рабочих процессов обеспечивает семантику блокировки для ограничения доступа к состоянию экземпляра рабочего процесса, сохраненного в хранилище данных.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>This can be accessed by the persistence services running in multiple hosts and pointing to the same data store.</source>
          <target state="translated">К нему можно получить доступ с помощью служб постоянного хранения, выполняемых в разных ведущих приложениях и указывающих на одно хранилище данных.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>The locking semantics are designed to prevent persistence services that run in two different workflow runtimes from loading the same workflow instance into memory at the same time.</source>
          <target state="translated">Семантика блокировки разработана, чтобы предотвратить службы постоянного хранения, выполняемых в двух разных средах выполнения рабочих процессов, от одновременной загрузки одного экземпляра рабочего процесса в память.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>Depending on the type of environment your persistence service is designed to support, you can choose whether to support this functionality.</source>
          <target state="translated">В зависимости от типа среды, для поддержки которой разработана служба постоянного хранения, можно выбрать, поддерживать ли эту функциональную возможность.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>If you choose to support the runtime locking semantics, then, if a persistence service tries to save a workflow instance state that has been previously locked by another persistence service, you should throw a <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowOwnershipException&gt;</ph>.</source>
          <target state="translated">При выборе поддержки семантики блокировки среды выполнения, если служба постоянного хранения пытается сохранить экземпляр рабочего процесса, который ранее был заблокирован другой службой постоянного хранения, необходимо вызвать исключение <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowOwnershipException&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>If <ph id="ph1">`unlock`</ph> is <ph id="ph2">`true`</ph>, you should unlock access to the workflow instance state after you save it.</source>
          <target state="translated">Если для <ph id="ph1">`unlock`</ph> задано значение <ph id="ph2">`true`</ph>, необходимо разблокировать доступ к состоянию экземпляра рабочего процесса после его сохранения.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt;</ph> takes the <ph id="ph2">&lt;xref:System.Guid&gt;</ph> of the workflow instance as a parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.LoadWorkflowInstanceState%2A&gt;</ph> принимает <ph id="ph2">&lt;xref:System.Guid&gt;</ph> экземпляра рабочего процесса в качестве параметра.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>Therefore, you should save this <ph id="ph1">&lt;xref:System.Guid&gt;</ph>.</source>
          <target state="translated">Поэтому необходимо сохранить <ph id="ph1">&lt;xref:System.Guid&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>You can also use this <ph id="ph1">&lt;xref:System.Guid&gt;</ph> to associate the workflow instance with the saved states of its completed scopes.</source>
          <target state="translated">Также можно использовать этот тип <ph id="ph1">&lt;xref:System.Guid&gt;</ph>, чтобы связать экземпляр рабочего процесса с сохраненными состояниями завершенных областей.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>You must do this because you must be able to mark these completed scopes as unneeded when the workflow instance completes.</source>
          <target state="translated">Это необходимо сделать, поскольку необходимо иметь возможность пометить эти завершенные области в качестве ненужных при завершении экземпляра рабочего процесса.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>The workflow runtime engine calls <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;</ph> a final time when the workflow instance is completed or terminated.</source>
          <target state="translated">Подсистема среды выполнения рабочих процессов вызывает <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;</ph> в последний раз при завершении или прерывании экземпляра рабочего процесса.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>Therefore, if <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus%2A&gt;</ph> is equal to <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowStatus.Completed&gt;</ph> or <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowStatus.Terminated&gt;</ph>, you can safely delete the workflow instance and all its associated completed scopes from your data store.</source>
          <target state="translated">Поэтому если <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.GetWorkflowStatus%2A&gt;</ph> равно <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowStatus.Completed&gt;</ph> или <ph id="ph3">&lt;xref:System.Workflow.Runtime.WorkflowStatus.Terminated&gt;</ph>, можно безопасно удалить экземпляр рабочего процесса и все связанные завершенные области из хранилища данных.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>Alternatively, you can subscribe to the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph> or <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt;</ph> events to determine when it is safe to delete records associated with the workflow instance.</source>
          <target state="translated">В качестве альтернативы можно подписаться на события <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowCompleted&gt;</ph> или <ph id="ph2">&lt;xref:System.Workflow.Runtime.WorkflowRuntime.WorkflowTerminated&gt;</ph>, чтобы определить, когда можно безопасно удалить записи, связанные с экземпляром рабочего процесса.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>Whether you actually delete the records from your data store depends on your implementation.</source>
          <target state="translated">Фактическое удаление записей из хранилища данных зависит от реализации.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>If you implement a persistence service that uses a durable store, then, to maintain consistency with the internal state of the workflow runtime engine, you should participate in workflow transaction batching to defer the actual write to your durable store until a workflow commit point.</source>
          <target state="translated">При реализации службы постоянного хранения, использующей постоянное хранилище, для поддержки целостности с внутренним состоянием подсистемы среды выполнения рабочих процессов необходимо принять участие в пакетировании транзакции рабочего процесса, чтобы отложить фактическую запись в постоянное хранилище до точки фиксации рабочего процесса.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>To participate in batching, add a work item that represents the pending changes to your durable store to the <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;</ph> property, and implement the <ph id="ph2">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> interface in your persistence service.</source>
          <target state="translated">Для принятия участия в пакетировании добавьте рабочий элемент, представляющий ожидающие изменения, в постоянное хранилище в свойство <ph id="ph1">&lt;xref:System.Workflow.Runtime.WorkflowEnvironment.WorkBatch%2A&gt;</ph> и реализуйте интерфейс <ph id="ph2">&lt;xref:System.Workflow.Runtime.IPendingWork&gt;</ph> в службе постоянного хранения.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>The following example demonstrates an implementation of the <ph id="ph1">`SaveWorkflowInstanceState`</ph> method.</source>
          <target state="translated">В следующем примере показана реализация метода <ph id="ph1">`SaveWorkflowInstanceState`</ph>.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</source>
          <target state="translated">Данный пример кода является частью примера «Custom Persistence Service» из файла FilePersistenceService.cs.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState(System.Workflow.ComponentModel.Activity,System.Boolean)">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>пример службы сохраняемости пользовательского<ept id="p1">](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)</ept>.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle(System.Workflow.ComponentModel.Activity)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph> that represents the completed scope.</source>
          <target state="translated">Тип <ph id="ph1">&lt;see cref="T:System.Workflow.ComponentModel.Activity" /&gt;</ph>, представляющий завершенную область.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle(System.Workflow.ComponentModel.Activity)">
          <source>Determines whether a workflow should be unloaded when idle.</source>
          <target state="translated">Определяет, необходима ли выгрузка незанятого рабочего процесса.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle(System.Workflow.ComponentModel.Activity)">
          <source>If <ph id="ph1">&lt;see langword="true" /&gt;</ph>, the workflow runtime engine unloads the specified workflow when it becomes idle.</source>
          <target state="translated">Если <ph id="ph1">&lt;see langword="true" /&gt;</ph>, подсистема среды выполнения рабочих процессов выгружает заданный рабочий процесс при его освобождении.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle(System.Workflow.ComponentModel.Activity)">
          <source>The following example demonstrates an implementation of the <ph id="ph1">`UnloadOnIdle`</ph> method.</source>
          <target state="translated">В следующем примере показана реализация метода <ph id="ph1">`UnloadOnIdle`</ph>.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle(System.Workflow.ComponentModel.Activity)">
          <source>This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</source>
          <target state="translated">Данный пример кода является частью примера «Custom Persistence Service» из файла FilePersistenceService.cs.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnloadOnIdle(System.Workflow.ComponentModel.Activity)">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>пример службы сохраняемости пользовательского<ept id="p1">](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)</ept>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)">
          <source>The root activity of the workflow instance.</source>
          <target state="translated">Корневое действие экземпляра рабочего процесса.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)">
          <source>When overridden in a derived class, unlocks the workflow instance state.</source>
          <target state="translated">При переопределении в производном классе разблокирует состояние экземпляра рабочего процесса.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)">
          <source>This method is abstract, so it does not contain a default implementation on locking and unlocking.</source>
          <target state="translated">Данный метод является абстрактным, так что он не содержит реализации по умолчанию для блокировки и разблокировки.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)">
          <source>While implementing a custom persistence service, if you want to implement a locking scheme you will need to override this method and provide a locking-unlocking mechanism in the <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;</ph> method based on the value of the unlock parameter.</source>
          <target state="translated">При реализации пользовательской службы постоянного хранения при необходимости реализовать схему блокировки необходимо переопределить данный метод и предоставить механизм блокировки-разблокировки в методе <ph id="ph1">&lt;xref:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.SaveWorkflowInstanceState%2A&gt;</ph>, основанном на значении параметра разблокировки.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)">
          <source>The following example demonstrates an implementation of the <ph id="ph1">`UnlockWorkflowInstanceState`</ph> method.</source>
          <target state="translated">В следующем примере показана реализация метода <ph id="ph1">`UnlockWorkflowInstanceState`</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)">
          <source>This example is from the Custom Persistence Service sample, from the FilePersistenceService.cs file.</source>
          <target state="translated">Данный пример кода является частью примера «Custom Persistence Service» из файла FilePersistenceService.cs.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Workflow.Runtime.Hosting.WorkflowPersistenceService.UnlockWorkflowInstanceState(System.Workflow.ComponentModel.Activity)">
          <source>For more information, see <bpt id="p1">[</bpt>Custom Persistence Service Sample<ept id="p1">](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>пример службы сохраняемости пользовательского<ept id="p1">](http://msdn.microsoft.com/library/869dfadf-5298-4551-bc80-f4cf7918729d)</ept>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>