<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XamlMemberInvoker.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac506593ac583c0f24c3b973fbdbfba42e69f84af7c.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">06593ac583c0f24c3b973fbdbfba42e69f84af7c</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xaml.Schema.XamlMemberInvoker">
          <source>Provides an extension point that can access member characteristics of a XAML member through techniques other than reflection.</source>
          <target state="translated">Предоставляет точку расширения, которая может осуществлять доступ к характеристикам XAML-члена с использованием методик, отличных от отражения.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.Schema.XamlMemberInvoker">
          <source>The purpose of <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> is to enable an extensible XAML type system, schema, and a working run time that does not rely as fully on CLR features such as CLR attributes, reflection information through <ph id="ph2">&lt;xref:System.Type&gt;</ph> and <ph id="ph3">&lt;xref:System.Reflection.MemberInfo&gt;</ph>, and so on.</source>
          <target state="translated">Назначение <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> является расширяемой системой типов XAML, схемы и рабочего времени, который как полностью зависит от функций среды CLR, такие как атрибуты среды CLR, отражения сведений с помощью выполнения <ph id="ph2">&lt;xref:System.Type&gt;</ph> и <ph id="ph3">&lt;xref:System.Reflection.MemberInfo&gt;</ph>, и т. д.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.Schema.XamlMemberInvoker">
          <source>Subclasses of <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> are used as input parameters for the alternate constructors of XAML schema classes such as <ph id="ph2">&lt;xref:System.Xaml.XamlMember&gt;</ph>.</source>
          <target state="translated">Подклассы <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> используются в качестве входных параметров для альтернативного конструкторы классов схемы XAML например <ph id="ph2">&lt;xref:System.Xaml.XamlMember&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.Schema.XamlMemberInvoker">
          <source>You subclass <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> and pass the <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> through to the base constructor.</source>
          <target state="translated">Подкласс вы <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> и передать <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> через конструктора базового класса.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.Schema.XamlMemberInvoker">
          <source>Along with defining a <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> for the constructor, you must also provide overrides for at least some of the <ph id="ph2">`Lookup`</ph> methods of <ph id="ph3">&lt;xref:System.Xaml.XamlMember&gt;</ph>.</source>
          <target state="translated">А также определение <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> конструктора, необходимо также указать переопределения для по крайней мере часть <ph id="ph2">`Lookup`</ph> методы <ph id="ph3">&lt;xref:System.Xaml.XamlMember&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.Schema.XamlMemberInvoker">
          <source><ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> has a default implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> имеет реализацию по умолчанию.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.Schema.XamlMemberInvoker">
          <source>The default implementation follows a similar model to the default implementation of XAML schema types <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> and <ph id="ph2">&lt;xref:System.Xaml.XamlMember&gt;</ph>: the CLR type system is used for instantiation, values and lookups, including using CLR attributes, <ph id="ph3">&lt;xref:System.Type&gt;</ph> and <ph id="ph4">&lt;xref:System.Reflection.MemberInfo&gt;</ph>, and so on.</source>
          <target state="translated">Реализация по умолчанию соответствует аналогичной модели в реализации типов схемы XAML по умолчанию <ph id="ph1">&lt;xref:System.Xaml.XamlType&gt;</ph> и <ph id="ph2">&lt;xref:System.Xaml.XamlMember&gt;</ph>: в системе типов среды CLR используется для создания экземпляра, значения и уточняющие запросы, включая использование атрибутов CLR <ph id="ph3">&lt;xref:System.Type&gt;</ph> и <ph id="ph4">&lt;xref:System.Reflection.MemberInfo&gt;</ph>, и т. д.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.Schema.XamlMemberInvoker">
          <source><ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> provides methods for basic get and set operations (<ph id="ph2">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A&gt;</ph>; <ph id="ph3">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> Предоставляет методы для основных get и set-операции (<ph id="ph2">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A&gt;</ph>; <ph id="ph3">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.Schema.XamlMemberInvoker">
          <source>It also provides the properties <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A&gt;</ph>, but these are not virtual.</source>
          <target state="translated">Он также предоставляет свойства <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A&gt;</ph>, но они не являются виртуальными.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.Schema.XamlMemberInvoker">
          <source>It may be possible to obtain a <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> value that represents a XAML directive, which is implemented as a private class in the System.Xaml implementation.</source>
          <target state="translated">Можно получить <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> значение, которое представляет собой директиву XAML, который реализуется как закрытый класс в сборке System.Xaml реализации.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.Schema.XamlMemberInvoker">
          <source>If you attempt to call <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A&gt;</ph> on this invoker, an exception is thrown.</source>
          <target state="translated">При попытке вызвать <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A&gt;</ph> или <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A&gt;</ph> на данное средство вызова создается исключение.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="T:System.Xaml.Schema.XamlMemberInvoker">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Schema.XamlMemberInvoker.#ctor">
          <source>The default implementation is empty.</source>
          <target state="translated">Реализация по умолчанию является пустой.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Schema.XamlMemberInvoker.#ctor">
          <source>This constructor is invoked internally to provide a value for <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A&gt;</ph>.</source>
          <target state="translated">Этот конструктор вызывается внутренним образом для предоставления значения для <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Schema.XamlMemberInvoker.#ctor">
          <source>For a <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> subclass, it is expected that you either use the <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29&gt;</ph> signature for construction or provide an override that calls <ph id="ph3">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29&gt;</ph> as base.</source>
          <target state="translated">Для <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> подкласс, он должен либо использовать <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29&gt;</ph> подпись для построения или переопределить, вызывающий <ph id="ph3">&lt;xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29&gt;</ph> базовым.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Schema.XamlMemberInvoker.#ctor">
          <source>Providing the <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> implements a default pattern where <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> is immutable.</source>
          <target state="translated">Предоставление <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> реализует по умолчанию шаблон where <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> является неизменяемым.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.#ctor(System.Xaml.XamlMember)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> value for the specific XAML member relevant to this <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> для определенного XAML-члена, соответствующего данному объекту <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.#ctor(System.Xaml.XamlMember)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> class, based on a provided <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</source>
          <target state="translated">Инициализирует новый экземпляр <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> на основе заданного <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Schema.XamlMemberInvoker.#ctor(System.Xaml.XamlMember)">
          <source>This constructor is called internally based on the <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> where the <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> is used for construction.</source>
          <target state="translated">Данный конструктор вызывается внутренним образом на основе <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> где <ph id="ph2">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> используется для построения.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.#ctor(System.Xaml.XamlMember)">
          <source><ph id="ph1">&lt;paramref name="member" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="member" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)">
          <source>An instance of the owner type for the member.</source>
          <target state="translated">Экземпляр типа владельца для члена.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)">
          <source>Gets a value of the relevant property from an instance.</source>
          <target state="translated">Получает значение соответствующего свойства из элемента.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)">
          <source>The requested property value.</source>
          <target state="translated">Запрашиваемое значение свойства.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)">
          <source><ph id="ph1">&lt;paramref name="instance" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="instance" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)">
          <source>Invoked this method on a <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> that is based on an unknown <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</source>
          <target state="translated">Вызывает этот метод в объекте <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>, основанном на неизвестном типе <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)">
          <source><bpt id="p1">**</bpt>-or-<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>-или-<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)">
          <source>Invoked this method on a write-only member.</source>
          <target state="translated">Этот метод вызван для члена, доступного только на запись.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)">
          <source><bpt id="p1">**</bpt>-or-<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>-или-<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)">
          <source><ph id="ph1">&lt;see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)">
          <source>The base implementation includes a call to the internal helper <bpt id="p1">&lt;c&gt;</bpt>ThrowIfUnknown<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Базовая реализация включает вызов внутренний вспомогательный <bpt id="p1">&lt;c&gt;</bpt>ThrowIfUnknown<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)">
          <source>This helper always throws for cases where a <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> is based on an unknown <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>, which includes cases where the <ph id="ph3">&lt;see cref="P:System.Xaml.XamlMember.UnderlyingMember" /&gt;</ph> of the <ph id="ph4">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> is <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Этого вспомогательного объекта всегда создает исключение для случаев, где <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> основан на неизвестном <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>, включая ситуации, когда <ph id="ph3">&lt;see cref="P:System.Xaml.XamlMember.UnderlyingMember" /&gt;</ph> из <ph id="ph4">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> — <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)">
          <source>The base implementation throws if <ph id="ph1">&lt;see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Базовая реализация вызывает исключение, если <ph id="ph1">&lt;see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /&gt;</ph> — <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)">
          <source>For static properties (<ph id="ph1">&lt;see cref="P:System.Reflection.MethodBase.IsStatic" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph> per <ph id="ph3">&lt;see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /&gt;</ph>) the default implementation calls <ph id="ph4">&lt;see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /&gt;</ph> on <ph id="ph5">&lt;see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /&gt;</ph> passing <ph id="ph6">&lt;see langword="null" /&gt;</ph> as the first parameter and packaged <ph id="ph7">&lt;paramref name="instance" /&gt;</ph> in the second.</source>
          <target state="translated">Для статических свойств (<ph id="ph1">&lt;see cref="P:System.Reflection.MethodBase.IsStatic" /&gt;</ph> — <ph id="ph2">&lt;see langword="true" /&gt;</ph> на <ph id="ph3">&lt;see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /&gt;</ph>) по умолчанию реализация вызывает <ph id="ph4">&lt;see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /&gt;</ph> на <ph id="ph5">&lt;see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /&gt;</ph> передачи <ph id="ph6">&lt;see langword="null" /&gt;</ph> как первый параметр и упакованных <ph id="ph7">&lt;paramref name="instance" /&gt;</ph> за секунду.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)">
          <source>For non-static properties, it calls <ph id="ph1">&lt;see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /&gt;</ph> and forwards the <ph id="ph2">&lt;paramref name="instance" /&gt;</ph> as the first parameter and an empty package as the second parameter.</source>
          <target state="translated">Применительно к статическим свойствам, он вызывает <ph id="ph1">&lt;see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /&gt;</ph> и пересылает <ph id="ph2">&lt;paramref name="instance" /&gt;</ph> как первый параметр и пустой пакет в качестве второго параметра.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)">
          <source>An instance of the owner type for the member.</source>
          <target state="translated">Экземпляр типа владельца для члена.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)">
          <source>The property value to set.</source>
          <target state="translated">Задаваемое значение свойства.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)">
          <source>Sets a value of the relevant property on an instance.</source>
          <target state="translated">Задает значение соответствующего свойства в элементе.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)">
          <source><ph id="ph1">&lt;paramref name="instance" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="instance" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)">
          <source>Invoked this method on a <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> that is based on an unknown <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</source>
          <target state="translated">Вызывает этот метод в объекте <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>, основанном на неизвестном типе <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)">
          <source><bpt id="p1">**</bpt>-or-<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>-или-<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)">
          <source>Invoked this method on a read-only member.</source>
          <target state="translated">Этот метод вызван для члена, доступного только для чтения.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)">
          <source><bpt id="p1">**</bpt>-or-<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>-или-<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)">
          <source><ph id="ph1">&lt;see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)">
          <source>The base implementation includes a call to the internal helper <bpt id="p1">&lt;c&gt;</bpt>ThrowIfUnknown<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated">Базовая реализация включает вызов внутренний вспомогательный <bpt id="p1">&lt;c&gt;</bpt>ThrowIfUnknown<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)">
          <source>This helper always throws for cases where a <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> is based on an unknown <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>, which includes cases where the <ph id="ph3">&lt;see cref="P:System.Xaml.XamlMember.UnderlyingMember" /&gt;</ph> of the <ph id="ph4">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> is <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Этого вспомогательного объекта всегда создает исключение для случаев, где <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> основан на неизвестном <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>, включая ситуации, когда <ph id="ph3">&lt;see cref="P:System.Xaml.XamlMember.UnderlyingMember" /&gt;</ph> из <ph id="ph4">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> — <ph id="ph5">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)">
          <source>The base implementation throws if <ph id="ph1">&lt;see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Базовая реализация вызывает исключение, если <ph id="ph1">&lt;see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /&gt;</ph> — <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)">
          <source>For static properties (<ph id="ph1">&lt;see cref="P:System.Reflection.MethodBase.IsStatic" /&gt;</ph> is <ph id="ph2">&lt;see langword="true" /&gt;</ph> per <ph id="ph3">&lt;see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /&gt;</ph>) the default implementation calls <ph id="ph4">&lt;see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /&gt;</ph> on <ph id="ph5">&lt;see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /&gt;</ph> passing <ph id="ph6">&lt;see langword="null" /&gt;</ph> as the first parameter and packaging <ph id="ph7">&lt;paramref name="instance" /&gt;</ph> and <ph id="ph8">&lt;paramref name="value" /&gt;</ph> as the second parameter.</source>
          <target state="translated">Для статических свойств (<ph id="ph1">&lt;see cref="P:System.Reflection.MethodBase.IsStatic" /&gt;</ph> — <ph id="ph2">&lt;see langword="true" /&gt;</ph> на <ph id="ph3">&lt;see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /&gt;</ph>) по умолчанию реализация вызывает <ph id="ph4">&lt;see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /&gt;</ph> на <ph id="ph5">&lt;see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /&gt;</ph> передачи <ph id="ph6">&lt;see langword="null" /&gt;</ph> как первый параметр и упаковка <ph id="ph7">&lt;paramref name="instance" /&gt;</ph> и <ph id="ph8">&lt;paramref name="value" /&gt;</ph> как Второй параметр.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)">
          <source>For non-static properties, it calls <ph id="ph1">&lt;see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /&gt;</ph> and forwards <ph id="ph2">&lt;paramref name="instance" /&gt;</ph> as first parameter and <ph id="ph3">&lt;paramref name="value" /&gt;</ph> as second parameter.</source>
          <target state="translated">Применительно к статическим свойствам, он вызывает <ph id="ph1">&lt;see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /&gt;</ph> и пересылает <ph id="ph2">&lt;paramref name="instance" /&gt;</ph> как первый параметр и <ph id="ph3">&lt;paramref name="value" /&gt;</ph> в качестве второго параметра.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(System.Object)">
          <source>The instance with the property to be examined for persistence.</source>
          <target state="translated">Экземпляр со свойством, возможность сохранения которого нужно проверить.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(System.Object)">
          <source>Indicates whether the value needs to be persisted by serialization processes.</source>
          <target state="translated">Указывает, нужно ли сохранять значение с помощью процессов сериализации.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(System.Object)">
          <source>A value of the enumeration.</source>
          <target state="translated">Значение перечисления.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(System.Object)">
          <source>The default implementation returns <ph id="ph1">&lt;xref:System.Xaml.Schema.ShouldSerializeResult.Default&gt;</ph> if the XAML member itself is <ph id="ph2">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph>, or if no CLR-reflection relevant <ph id="ph3">`ShouldSerialize`</ph> method is found on the underlying member through default reflection.</source>
          <target state="translated">Реализация по умолчанию возвращает <ph id="ph1">&lt;xref:System.Xaml.Schema.ShouldSerializeResult.Default&gt;</ph> Если доступен сам член XAML <ph id="ph2">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph>, или если нет CLR-отражения соответствующие <ph id="ph3">`ShouldSerialize`</ph> найти метод на базовый член отражения по умолчанию.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> for the CLR method that gets values for the property that is relevant for this <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>.</source>
          <target state="translated">Получает <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> для метода CLR, который получает значения свойства, соответствующего данному объекту <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> for the CLR method that gets values for the property that is relevant for this <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> для метода CLR, который получает значения свойства, соответствующего данному объекту <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>, или <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter">
          <source>This property relies on calling <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A&gt;</ph> on the constructing <ph id="ph2">&lt;xref:System.Xaml.XamlMember&gt;</ph>.</source>
          <target state="translated">Это свойство основывается на вызове <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A&gt;</ph> о построении <ph id="ph2">&lt;xref:System.Xaml.XamlMember&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter">
          <source>For an unknown <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph>, or for cases where <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A&gt;</ph> returns <ph id="ph3">`null`</ph>, this property returns <ph id="ph4">`null`</ph>.</source>
          <target state="translated">Для неизвестных <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph>, или в случаях, где <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A&gt;</ph> возвращает <ph id="ph3">`null`</ph>, это свойство возвращает <ph id="ph4">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> for the CLR method that sets values for the property that is relevant for this <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>.</source>
          <target state="translated">Получает <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> для метода CLR, который задает значения свойства, соответствующего данному объекту <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter">
          <source>The <ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> for the CLR method that sets values for the property that is relevant for this <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>, or <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Reflection.MethodInfo" /&gt;</ph> для метода CLR, который задает значения свойства, соответствующего данному объекту <ph id="ph2">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>, или <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter">
          <source>This property relies on calling <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A&gt;</ph> on the constructing <ph id="ph2">&lt;xref:System.Xaml.XamlMember&gt;</ph>.</source>
          <target state="translated">Это свойство основывается на вызове <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A&gt;</ph> о построении <ph id="ph2">&lt;xref:System.Xaml.XamlMember&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter">
          <source>For an unknown <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph>, or for cases where <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A&gt;</ph> returns <ph id="ph3">`null`</ph>, this property returns <ph id="ph4">`null`</ph>.</source>
          <target state="translated">Для неизвестных <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph>, или в случаях, где <ph id="ph2">&lt;xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A&gt;</ph> возвращает <ph id="ph3">`null`</ph>, это свойство возвращает <ph id="ph4">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="P:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker">
          <source>Provides a static value that represents an unknown, not fully implemented <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>.</source>
          <target state="translated">Предоставляет статическое значение, представляющее неизвестный, не реализованный полностью <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker">
          <source>A static value that represents an unknown, not fully implemented <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>.</source>
          <target state="translated">Статическое значение, представляющее неизвестный, не реализованный полностью <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker">
          <source>Supplying this value for a <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> parameter of System.Xaml defined API will typically cause the called code to throw exceptions.</source>
          <target state="translated">Это значение для указания <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> API определен параметр System.Xaml обычно вызывает выполнение вызываемого кода могут вызывать исключения.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>