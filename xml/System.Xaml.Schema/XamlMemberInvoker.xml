<Type Name="XamlMemberInvoker" FullName="System.Xaml.Schema.XamlMemberInvoker">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="06593ac583c0f24c3b973fbdbfba42e69f84af7c" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30720208" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlMemberInvoker" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlMemberInvoker extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.Schema.XamlMemberInvoker" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlMemberInvoker" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlMemberInvoker" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>Предоставляет точку расширения, которая может осуществлять доступ к характеристикам XAML-члена с использованием методик, отличных от отражения.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Назначение <xref:System.Xaml.Schema.XamlMemberInvoker> является расширяемой системой типов XAML, схемы и рабочего времени, который как полностью зависит от функций среды CLR, такие как атрибуты среды CLR, отражения сведений с помощью выполнения <xref:System.Type> и <xref:System.Reflection.MemberInfo>, и т. д. Подклассы <xref:System.Xaml.Schema.XamlMemberInvoker> используются в качестве входных параметров для альтернативного конструкторы классов схемы XAML например <xref:System.Xaml.XamlMember>. Подкласс вы <xref:System.Xaml.XamlMember> и передать <xref:System.Xaml.Schema.XamlMemberInvoker> через конструктора базового класса. А также определение <xref:System.Xaml.Schema.XamlMemberInvoker> конструктора, необходимо также указать переопределения для по крайней мере часть `Lookup` методы <xref:System.Xaml.XamlMember>.  
  
 <xref:System.Xaml.Schema.XamlMemberInvoker> имеет реализацию по умолчанию. Реализация по умолчанию соответствует аналогичной модели в реализации типов схемы XAML по умолчанию <xref:System.Xaml.XamlType> и <xref:System.Xaml.XamlMember>: в системе типов среды CLR используется для создания экземпляра, значения и уточняющие запросы, включая использование атрибутов CLR <xref:System.Type> и <xref:System.Reflection.MemberInfo>, и т. д.  
  
 <xref:System.Xaml.Schema.XamlMemberInvoker> Предоставляет методы для основных get и set-операции (<xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A>; <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A>). Он также предоставляет свойства <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> и <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A>, но они не являются виртуальными.  
  
> [!NOTE]
>  Можно получить <xref:System.Xaml.Schema.XamlMemberInvoker> значение, которое представляет собой директиву XAML, который реализуется как закрытый класс в сборке System.Xaml реализации. При попытке вызвать <xref:System.Xaml.Schema.XamlMemberInvoker.GetValue%2A> или <xref:System.Xaml.Schema.XamlMemberInvoker.SetValue%2A> на данное средство вызова создается исключение.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlMemberInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlMemberInvoker();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализация по умолчанию является пустой.  
  
 Этот конструктор вызывается внутренним образом для предоставления значения для <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A>. Для <xref:System.Xaml.Schema.XamlMemberInvoker> подкласс, он должен либо использовать <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> подпись для построения или переопределить, вызывающий <xref:System.Xaml.Schema.XamlMemberInvoker.%23ctor%28System.Xaml.XamlMember%29> базовым. Предоставление <xref:System.Xaml.XamlMember> реализует по умолчанию шаблон where <xref:System.Xaml.Schema.XamlMemberInvoker> является неизменяемым.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMemberInvoker (System.Xaml.XamlMember member);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xaml.XamlMember member) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.#ctor(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (member As XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMemberInvoker(System::Xaml::XamlMember ^ member);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="member" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="member">Значение <see cref="T:System.Xaml.XamlMember" /> для определенного XAML-члена, соответствующего данному объекту <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</param>
        <summary>Инициализирует новый экземпляр <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> на основе заданного <see cref="T:System.Xaml.XamlMember" />.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Данный конструктор вызывается внутренним образом на основе <xref:System.Xaml.XamlMember> где <xref:System.Xaml.Schema.XamlMemberInvoker> используется для построения.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="member" /> имеет значение <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public virtual object GetValue (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object GetValue(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.GetValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValue (instance As Object) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ GetValue(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">Экземпляр типа владельца для члена.</param>
        <summary>Получает значение соответствующего свойства из элемента.</summary>
        <returns>Запрашиваемое значение свойства.</returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="instance" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">Вызывает этот метод в объекте <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, основанном на неизвестном типе <see cref="T:System.Xaml.XamlMember" />.  
  
 **-или-**  
  
 Этот метод вызван для члена, доступного только на запись.  
  
 **-или-**  
  
 Свойство <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> имеет значение <see langword="null" />.</exception>
        <block subset="none" type="overrides">
          <para>Базовая реализация включает вызов внутренний вспомогательный <c>ThrowIfUnknown</c>. Этого вспомогательного объекта всегда создает исключение для случаев, где <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> основан на неизвестном <see cref="T:System.Xaml.XamlMember" />, включая ситуации, когда <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> из <see cref="T:System.Xaml.XamlMember" /> — <see langword="null" />.  
  
 Базовая реализация вызывает исключение, если <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> — <see langword="null" />.  
  
 Для статических свойств (<see cref="P:System.Reflection.MethodBase.IsStatic" /> — <see langword="true" /> на <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />) по умолчанию реализация вызывает <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> на <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" /> передачи <see langword="null" /> как первый параметр и упакованных <paramref name="instance" /> за секунду. Применительно к статическим свойствам, он вызывает <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> и пересылает <paramref name="instance" /> как первый параметр и пустой пакет в качестве второго параметра.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public virtual void SetValue (object instance, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void SetValue(object instance, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.SetValue(System.Object,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub SetValue (instance As Object, value As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void SetValue(System::Object ^ instance, System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">Экземпляр типа владельца для члена.</param>
        <param name="value">Задаваемое значение свойства.</param>
        <summary>Задает значение соответствующего свойства в элементе.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          Свойство <paramref name="instance" /> имеет значение <see langword="null" />.</exception>
        <exception cref="T:System.NotSupportedException">Вызывает этот метод в объекте <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, основанном на неизвестном типе <see cref="T:System.Xaml.XamlMember" />.  
  
 **-или-**  
  
 Этот метод вызван для члена, доступного только для чтения.  
  
 **-или-**  
  
 Свойство <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> имеет значение <see langword="null" />.</exception>
        <block subset="none" type="overrides">
          <para>Базовая реализация включает вызов внутренний вспомогательный <c>ThrowIfUnknown</c>. Этого вспомогательного объекта всегда создает исключение для случаев, где <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> основан на неизвестном <see cref="T:System.Xaml.XamlMember" />, включая ситуации, когда <see cref="P:System.Xaml.XamlMember.UnderlyingMember" /> из <see cref="T:System.Xaml.XamlMember" /> — <see langword="null" />.  
  
 Базовая реализация вызывает исключение, если <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> — <see langword="null" />.  
  
 Для статических свойств (<see cref="P:System.Reflection.MethodBase.IsStatic" /> — <see langword="true" /> на <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />) по умолчанию реализация вызывает <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> на <see cref="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" /> передачи <see langword="null" /> как первый параметр и упаковка <paramref name="instance" /> и <paramref name="value" /> как Второй параметр. Применительно к статическим свойствам, он вызывает <see cref="M:System.Reflection.MethodBase.Invoke(System.Object,System.Object[])" /> и пересылает <paramref name="instance" /> как первый параметр и <paramref name="value" /> в качестве второго параметра.</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ShouldSerializeValue">
      <MemberSignature Language="C#" Value="public virtual System.Xaml.Schema.ShouldSerializeResult ShouldSerializeValue (object instance);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Xaml.Schema.ShouldSerializeResult ShouldSerializeValue(object instance) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.Schema.XamlMemberInvoker.ShouldSerializeValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ShouldSerializeValue (instance As Object) As ShouldSerializeResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Xaml::Schema::ShouldSerializeResult ShouldSerializeValue(System::Object ^ instance);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.ShouldSerializeResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instance" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="instance">Экземпляр со свойством, возможность сохранения которого нужно проверить.</param>
        <summary>Указывает, нужно ли сохранять значение с помощью процессов сериализации.</summary>
        <returns>Значение перечисления.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализация по умолчанию возвращает <xref:System.Xaml.Schema.ShouldSerializeResult.Default> Если доступен сам член XAML <xref:System.Xaml.XamlMember.IsUnknown%2A>, или если нет CLR-отражения соответствующие `ShouldSerialize` найти метод на базовый член отражения по умолчанию.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingGetter">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo UnderlyingGetter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo UnderlyingGetter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingGetter As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ UnderlyingGetter { System::Reflection::MethodInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает <see cref="T:System.Reflection.MethodInfo" /> для метода CLR, который получает значения свойства, соответствующего данному объекту <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
        <value>
          <see cref="T:System.Reflection.MethodInfo" /> для метода CLR, который получает значения свойства, соответствующего данному объекту <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, или <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство основывается на вызове <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> о построении <xref:System.Xaml.XamlMember>. Для неизвестных <xref:System.Xaml.XamlMember>, или в случаях, где <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A> возвращает `null`, это свойство возвращает `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingSetter">
      <MemberSignature Language="C#" Value="public System.Reflection.MethodInfo UnderlyingSetter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MethodInfo UnderlyingSetter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingSetter As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MethodInfo ^ UnderlyingSetter { System::Reflection::MethodInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает <see cref="T:System.Reflection.MethodInfo" /> для метода CLR, который задает значения свойства, соответствующего данному объекту <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
        <value>
          <see cref="T:System.Reflection.MethodInfo" /> для метода CLR, который задает значения свойства, соответствующего данному объекту <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, или <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство основывается на вызове <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> о построении <xref:System.Xaml.XamlMember>. Для неизвестных <xref:System.Xaml.XamlMember>, или в случаях, где <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A> возвращает `null`, это свойство возвращает `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnknownInvoker">
      <MemberSignature Language="C#" Value="public static System.Xaml.Schema.XamlMemberInvoker UnknownInvoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.Xaml.Schema.XamlMemberInvoker UnknownInvoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly Property UnknownInvoker As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::Xaml::Schema::XamlMemberInvoker ^ UnknownInvoker { System::Xaml::Schema::XamlMemberInvoker ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Предоставляет статическое значение, представляющее неизвестный, не реализованный полностью <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</summary>
        <value>Статическое значение, представляющее неизвестный, не реализованный полностью <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это значение для указания <xref:System.Xaml.Schema.XamlMemberInvoker> API определен параметр System.Xaml обычно вызывает выполнение вызываемого кода могут вызывать исключения.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>