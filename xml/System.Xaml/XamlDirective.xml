<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XamlDirective.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a2eac5472d3696b1d538c311c8dde96426e0fb73.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a2eac5472d3696b1d538c311c8dde96426e0fb73</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlDirective">
          <source>Provides the XAML type system identifier for a member if the member is also a XAML directive.</source>
          <target state="translated">Предоставляет системный идентификатор типа XAML для члена, если он также является директивой XAML.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlDirective">
          <source>XAML readers and XAML writers use the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> identifier during processing of member nodes.</source>
          <target state="translated">Средства чтения и записи XAML используют идентификатор <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> при обработке узлов членов.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlDirective">
          <source>The identifier is used when the XAML reader is positioned on a <ph id="ph1">&lt;see cref="F:System.Xaml.XamlNodeType.StartMember" /&gt;</ph> and <ph id="ph2">&lt;see cref="P:System.Xaml.XamlMember.IsDirective" /&gt;</ph> is <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Идентификатор используется, когда средство чтения XAML размещается на объект <ph id="ph1">&lt;see cref="F:System.Xaml.XamlNodeType.StartMember" /&gt;</ph> и свойство <ph id="ph2">&lt;see cref="P:System.Xaml.XamlMember.IsDirective" /&gt;</ph> имеет значение <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> provides expected values for the XAML type system when the member is a XAML directive.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> предоставляет ожидаемые значения для системы типов XAML, когда член класса представляет собой директиву XAML.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source>By definition, a XAML directive has characteristics that always return the same results for a subset of the <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> properties, and the same XAML type system information is reported for all possible XAML directives.</source>
          <target state="translated">По определению собой директиву XAML имеет характеристики, которые всегда возвращают одинаковые результаты для подмножества <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> свойства и того же информации о системе типов XAML регистрируется для всех возможных директив XAML.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source>The reporting of XAML type system characteristics that are specific to directives is accomplished by internal behavior or through overrides of <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> <ph id="ph2">`Lookup*`</ph> virtual members in the <ph id="ph3">&lt;xref:System.Xaml.XamlDirective&gt;</ph> class.</source>
          <target state="translated">Reporting характеристик системы типов XAML, характерные для директивы достигается с внутреннее поведение или с помощью переопределений <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> <ph id="ph2">`Lookup*`</ph> виртуальные члены в <ph id="ph3">&lt;xref:System.Xaml.XamlDirective&gt;</ph> класса.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source>The following list shows the returned results of a XAML directive for <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> when the member is actually a <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph>:</source>
          <target state="translated">В следующем списке приведены возвращаемых результатов директивы XAML для <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> при элемент на самом деле <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph>:</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupCustomAttributeProvider%2A&gt;</ph> is always <ph id="ph2">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupCustomAttributeProvider%2A&gt;</ph> всегда <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.DeferringLoader%2A&gt;</ph> is always <ph id="ph2">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlMember.DeferringLoader%2A&gt;</ph> всегда <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.DependsOn%2A&gt;</ph> is always <ph id="ph2">`null`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlMember.DependsOn%2A&gt;</ph> всегда <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsAmbient%2A&gt;</ph> is always <ph id="ph2">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsAmbient%2A&gt;</ph> всегда <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsAttachable%2A&gt;</ph> is always <ph id="ph2">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsAttachable%2A&gt;</ph> всегда <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsDirective%2A&gt;</ph> is always <ph id="ph2">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsDirective%2A&gt;</ph> всегда <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsEvent%2A&gt;</ph> is always <ph id="ph2">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsEvent%2A&gt;</ph> всегда <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsReadOnly%2A&gt;</ph> is always <ph id="ph2">`false`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsReadOnly%2A&gt;</ph> всегда <ph id="ph2">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsReadPublic%2A&gt;</ph> is always <ph id="ph2">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsReadPublic%2A&gt;</ph> всегда <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;</ph> is always <ph id="ph2">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsWritePublic%2A&gt;</ph> всегда <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source>Also, the internal backing for <ph id="ph1">&lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;</ph> remains unset and returns <ph id="ph2">`null`</ph>.</source>
          <target state="translated">Кроме того, внутренняя резервное копирование для <ph id="ph1">&lt;xref:System.Xaml.XamlMember.DeclaringType%2A&gt;</ph> остается не задано и возвращает <ph id="ph2">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> is a <ph id="ph2">&lt;xref:System.Xaml.XamlMember&gt;</ph> subclass.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> — <ph id="ph2">&lt;xref:System.Xaml.XamlMember&gt;</ph> подкласс.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source>As with <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph>, <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> has security considerations regarding how the XAML type system reports access.</source>
          <target state="translated">Как и в <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph>, <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> имеет вопросы безопасности, касающиеся как в системе типов XAML отчетов access.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlDirective">
          <source>See <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph>.</source>
          <target state="translated">См. раздел <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlDirective">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.#ctor(System.String,System.String)">
          <source>The primary XAML namespace where this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> can exist.</source>
          <target state="translated">Первичное пространство имен XAML, в котором может существовать данный объект <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.#ctor(System.String,System.String)">
          <source>The identifying name of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</source>
          <target state="translated">Идентификационное имя объекта <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.#ctor(System.String,System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> class, specifying values for a name and a single XAML namespace.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>, указывая значения имени и единственного пространства имен XAML.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.#ctor(System.String,System.String)">
          <source>Use this signature only when you want or expect <ph id="ph1">&lt;see cref="P:System.Xaml.XamlMember.IsUnknown" /&gt;</ph> to report <ph id="ph2">&lt;see langword="true" /&gt;</ph> for the directive.</source>
          <target state="translated">Используйте эту сигнатуру, если вы хотите, чтобы для этой директивы свойство <ph id="ph1">&lt;see cref="P:System.Xaml.XamlMember.IsUnknown" /&gt;</ph> имело значение <ph id="ph2">&lt;see langword="true" /&gt;</ph>, или ожидаете этого.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.#ctor(System.String,System.String)">
          <source>This signature of the constructor always generates an identifier for the directive where <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph> reports <ph id="ph2">`true`</ph> for the XAML type system.</source>
          <target state="translated">Эта подпись конструктора всегда создает идентификатор для директивы где <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph> отчеты <ph id="ph2">`true`</ph> система типов XAML.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.#ctor(System.String,System.String)">
          <source>If the necessary information is available (the backing type and a text syntax information item for conversion) and you want an identifier that can apply the directive, use the <ph id="ph1">&lt;xref:System.Xaml.XamlDirective.%23ctor%2A?displayProperty=nameWithType&gt;</ph> constructor signature instead.</source>
          <target state="translated">Если необходимые сведения недоступны (базовый тип и информационной единицы синтаксиса текст для преобразования) и требуется идентификатор, который можно применить директиву, используйте <ph id="ph1">&lt;xref:System.Xaml.XamlDirective.%23ctor%2A?displayProperty=nameWithType&gt;</ph> сигнатуры конструктора вместо.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.#ctor(System.String,System.String)">
          <source>If you use this signature, the <ph id="ph1">&lt;xref:System.Xaml.XamlDirective.AllowedLocation%2A&gt;</ph> value for the instance is <ph id="ph2">&lt;xref:System.Xaml.Schema.AllowedMemberLocations.Any&gt;</ph>; and the <ph id="ph3">&lt;xref:System.Xaml.XamlMember.Type%2A&gt;</ph> value and <ph id="ph4">&lt;xref:System.Xaml.XamlMember.TypeConverter%2A&gt;</ph> value are both <ph id="ph5">`null`</ph>.</source>
          <target state="translated">При использовании этой подписи <ph id="ph1">&lt;xref:System.Xaml.XamlDirective.AllowedLocation%2A&gt;</ph> для экземпляра равно <ph id="ph2">&lt;xref:System.Xaml.Schema.AllowedMemberLocations.Any&gt;</ph>; и <ph id="ph3">&lt;xref:System.Xaml.XamlMember.Type%2A&gt;</ph> значение и <ph id="ph4">&lt;xref:System.Xaml.XamlMember.TypeConverter%2A&gt;</ph> значение присутствуют <ph id="ph5">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)">
          <source>A set of XAML namespaces where this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> can exist, passed as an enumerable set of the identifier strings.</source>
          <target state="translated">Набор пространств имен XAML, в которых может существовать данный объект <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>, переданный в виде перечисляемого набора строк идентификатора.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)">
          <source>The identifying name of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</source>
          <target state="translated">Идентификационное имя объекта <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)">
          <source>The XAML type that backs the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</source>
          <target state="translated">Тип XAML, лежащий в основе объекта <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)">
          <source>The type converter that this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> uses for text syntax conversion.</source>
          <target state="translated">Преобразователь типов, используемый данным объектом <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> для преобразования синтаксиса текста.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)">
          <source>A value of the <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.AllowedMemberLocations" /&gt;</ph> enumeration.</source>
          <target state="translated">Значение перечисления <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.AllowedMemberLocations" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> class, specifying values for each per-case value of a <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>, указывая значения для каждого из возможных значений по вариантам объекта <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)">
          <source>You must use this constructor to generate a <ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> that does not report <ph id="ph2">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph> as <ph id="ph3">`true`</ph>.</source>
          <target state="translated">Необходимо использовать этот конструктор для создания <ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> , которые не сообщают об <ph id="ph2">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph> как <ph id="ph3">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.#ctor(System.Collections.Generic.IEnumerable{System.String},System.String,System.Xaml.XamlType,System.Xaml.Schema.XamlValueConverter{System.ComponentModel.TypeConverter},System.Xaml.Schema.AllowedMemberLocations)">
          <source>The <ph id="ph1">&lt;paramref name="xamlType" /&gt;</ph> parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="xamlType" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlDirective.AllowedLocation">
          <source>Gets a value that specifies the XAML node types where the directive can be specified.</source>
          <target state="translated">Возвращает значение, указывающее типы узлов XAML, в которых может быть задана эта директива.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlDirective.AllowedLocation">
          <source>A value of the enumeration.</source>
          <target state="translated">Значение перечисления.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlDirective.AllowedLocation">
          <source>The default is the enumeration default, which is <ph id="ph1">&lt;see cref="F:System.Xaml.Schema.AllowedMemberLocations.None" /&gt;</ph>.</source>
          <target state="translated">Значение по умолчанию — значение перечисления по умолчанию, то есть <ph id="ph1">&lt;see cref="F:System.Xaml.Schema.AllowedMemberLocations.None" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlDirective.AllowedLocation">
          <source>You can set this value in the <ph id="ph1">&lt;xref:System.Xaml.XamlDirective.%23ctor%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%2CSystem.Xaml.XamlType%2CSystem.Xaml.Schema.XamlValueConverter%7BSystem.ComponentModel.TypeConverter%7D%2CSystem.Xaml.Schema.AllowedMemberLocations%29&gt;</ph> constructor signature.</source>
          <target state="translated">Это значение можно задать в <ph id="ph1">&lt;xref:System.Xaml.XamlDirective.%23ctor%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%2CSystem.Xaml.XamlType%2CSystem.Xaml.Schema.XamlValueConverter%7BSystem.ComponentModel.TypeConverter%7D%2CSystem.Xaml.Schema.AllowedMemberLocations%29&gt;</ph> сигнатуры конструктора.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlDirective.AllowedLocation">
          <source>If you construct by using the <ph id="ph1">&lt;xref:System.Xaml.XamlDirective.%23ctor%28System.String%2CSystem.String%29&gt;</ph> constructor signature, the <ph id="ph2">&lt;xref:System.Xaml.XamlDirective.AllowedLocation%2A&gt;</ph> value for the instance is <ph id="ph3">&lt;xref:System.Xaml.Schema.AllowedMemberLocations.Any&gt;</ph>.</source>
          <target state="translated">При построении с помощью <ph id="ph1">&lt;xref:System.Xaml.XamlDirective.%23ctor%28System.String%2CSystem.String%29&gt;</ph> сигнатуры конструктора <ph id="ph2">&lt;xref:System.Xaml.XamlDirective.AllowedLocation%2A&gt;</ph> для экземпляра равно <ph id="ph3">&lt;xref:System.Xaml.Schema.AllowedMemberLocations.Any&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlDirective.AllowedLocation">
          <source>However, the instance always reports <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph> as <ph id="ph2">`true`</ph>.</source>
          <target state="translated">Однако экземпляр всегда сообщает <ph id="ph1">&lt;xref:System.Xaml.XamlMember.IsUnknown%2A&gt;</ph> как <ph id="ph2">`true`</ph>.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlDirective.AllowedLocation">
          <source>This behavior typically affects attempts to write object graphs and also affects other practical uses of a <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> value.</source>
          <target state="translated">Такое поведение обычно влияет на попытки записи графов объектов и также влияет на другие практический опыт использования <ph id="ph1">&lt;xref:System.Xaml.XamlMember&gt;</ph> значение.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlDirective.AllowedLocation">
          <source>You typically would not construct a XAML directive case where <ph id="ph1">&lt;xref:System.Xaml.XamlDirective.AllowedLocation%2A&gt;</ph> is <ph id="ph2">&lt;xref:System.Xaml.Schema.AllowedMemberLocations.None?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Вы обычно не построить обращения директивы XAML где <ph id="ph1">&lt;xref:System.Xaml.XamlDirective.AllowedLocation%2A&gt;</ph> — <ph id="ph2">&lt;xref:System.Xaml.Schema.AllowedMemberLocations.None?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.GetHashCode">
          <source>Returns the hash code for this object.</source>
          <target state="translated">Возвращает хэш-код для этого объекта.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.GetHashCode">
          <source>An integer hash code.</source>
          <target state="translated">Целочисленный хэш-код.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.GetXamlNamespaces">
          <source>Returns a list of XAML namespaces where this XAML member can exist.</source>
          <target state="translated">Возвращает список пространств имен XAML, в которых может существовать этот член XAML.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.GetXamlNamespaces">
          <source>A list of XAML namespace identifiers, as strings.</source>
          <target state="translated">Список идентификаторов пространства имен XAML в виде строк.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.GetXamlNamespaces">
          <source>The XAML namespace identifiers are strings that typically appear in the Uniform Resource Identifier (URI) string form according to the usual conventions for XAML and XML namespaces.</source>
          <target state="translated">Идентификаторы пространства имен XAML — это строки, которые обычно отображаются в виде строки универсальный код ресурса (URI) в соответствии с обычными соглашениями для пространства имен XAML и XML.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.GetXamlNamespaces">
          <source>If the list contains more than one item, the first item in the set is usually the relevant primary XAML namespace for processing purposes, and the other items are alternates.</source>
          <target state="translated">Если список содержит более одного элемента, первый элемент в наборе обычно соответствующие основного пространства имен XAML для целей обработки, и другие элементы представляют собой альтернативы.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.GetXamlNamespaces">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A?displayProperty=nameWithType&gt;</ph> relies on this ordering.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A?displayProperty=nameWithType&gt;</ph> использует этот порядок.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupCustomAttributeProvider">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.Reflection.ICustomAttributeProvider" /&gt;</ph> implementation.</source>
          <target state="translated">Возвращает реализацию объекта <ph id="ph1">&lt;see cref="T:System.Reflection.ICustomAttributeProvider" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupCustomAttributeProvider">
          <source>This implementation always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Данная реализация всегда возвращает значение <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupCustomAttributeProvider">
          <source>Always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Всегда возвращает значение <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupCustomAttributeProvider">
          <source>Because a XAML directive cannot have custom attributes, this implementation always returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Поскольку директива XAML не может иметь настраиваемые атрибуты, данная реализация всегда возвращает <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupCustomAttributeProvider">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> запечатывает данного виртуального члена; Таким образом, все <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> типы и все стандартные директивы XAML необходимо использовать это поведение.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupDeferringLoader">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> object, which is used during deferred loading of XAML-declared objects.</source>
          <target state="translated">Возвращает объект <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>, используемый в ходе отложенной загрузки объектов, объявленных в XAML.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupDeferringLoader">
          <source>This implementation always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Данная реализация всегда возвращает значение <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupDeferringLoader">
          <source>Always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Всегда возвращает значение <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupDeferringLoader">
          <source>Because a directive cannot have deferred loading, this implementation always returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Так как директива не отложенную загрузку, данная реализация всегда возвращает <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupDeferringLoader">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> запечатывает данного виртуального члена; Таким образом, все <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> типы и все стандартные директивы XAML необходимо использовать это поведение.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupDependsOn">
          <source>Returns a list of <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> objects.</source>
          <target state="translated">Возвращает список объектов <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupDependsOn">
          <source>The list reports the members where dependency relationships for initialization order exist relative to this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</source>
          <target state="translated">Список сообщает об членах, в которых существуют отношения зависимости для порядка инициализации относительно данного объекта <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupDependsOn">
          <source>This implementation always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Данная реализация всегда возвращает значение <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupDependsOn">
          <source>Always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Всегда возвращает значение <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupDependsOn">
          <source>Because a XAML directive cannot have initialization order, this implementation always returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Поскольку директива XAML не может иметь порядок инициализации, данная реализация всегда возвращает <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupDependsOn">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> запечатывает данного виртуального члена; Таким образом, все <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> типы и все стандартные директивы XAML необходимо использовать это поведение.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupInvoker">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> that is associated with a <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</source>
          <target state="translated">Возвращает объект <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph>, связанный с директивой <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupInvoker">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> information for this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</source>
          <target state="translated">Сведения <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlMemberInvoker" /&gt;</ph> для данного объекта <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupInvoker">
          <source>This method may be invoked by calls to <ph id="ph1">&lt;xref:System.Xaml.XamlMember.Invoker%2A&gt;</ph>.</source>
          <target state="translated">Этот метод может вызываться вызовы <ph id="ph1">&lt;xref:System.Xaml.XamlMember.Invoker%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupInvoker">
          <source>This implementation returns an internal static <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> value that is specific to directives in the XAML type system.</source>
          <target state="translated">Эта реализация возвращает внутренний статический <ph id="ph1">&lt;xref:System.Xaml.Schema.XamlMemberInvoker&gt;</ph> значение, характерное для директивы в системе типов XAML.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupInvoker">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> запечатывает данного виртуального члена; Таким образом, все <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> типы и все стандартные директивы XAML необходимо использовать это поведение.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupIsAmbient">
          <source>Returns whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> is reported as an ambient property.</source>
          <target state="translated">Возвращает значение, указывающее, рассматривается ли данный объект <ph id="ph1">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> как внешнее свойство.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupIsAmbient">
          <source>Always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Всегда возвращает значение <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupIsAmbient">
          <source>Because a XAML directive cannot be an ambient type, this implementation always returns <ph id="ph1">`false`</ph>.</source>
          <target state="translated">Поскольку директива XAML не может быть внешним типом, данная реализация всегда возвращает <ph id="ph1">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupIsAmbient">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> запечатывает данного виртуального члена; Таким образом, все <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> типы и все стандартные директивы XAML необходимо использовать это поведение.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupIsEvent">
          <source>Returns whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> represents an event.</source>
          <target state="translated">Возвращает значение, указывающее, представляет ли данный объект <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> событие.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupIsEvent">
          <source>Always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Всегда возвращает значение <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupIsEvent">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> запечатывает данного виртуального члена; Таким образом, все <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> типы и все стандартные директивы XAML необходимо использовать это поведение.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupIsReadOnly">
          <source>Returns whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> represents an intended read-only property.</source>
          <target state="translated">Возвращает значение, указывающее, представляет ли объект <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> требуемое свойство только для чтения.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupIsReadOnly">
          <source>Always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Всегда возвращает значение <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupIsReadOnly">
          <source>By definition, directives are settable.</source>
          <target state="translated">По определению директивы являются настраиваемыми.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupIsReadOnly">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> запечатывает данного виртуального члена; Таким образом, все <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> типы и все стандартные директивы XAML необходимо использовать это поведение.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupIsReadPublic">
          <source>Returns whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> represents a property that has a public <ph id="ph2">&lt;see langword="get" /&gt;</ph> accessor.</source>
          <target state="translated">Возвращает значение, указывающее, представляет ли объект <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> свойство, имеющее открытый метод доступа <ph id="ph2">&lt;see langword="get" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupIsReadPublic">
          <source>Always returns <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Всегда возвращает значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupIsReadPublic">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> запечатывает данного виртуального члена; Таким образом, все <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> типы и все стандартные директивы XAML необходимо использовать это поведение.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupIsUnknown">
          <source>Returns whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> represents a member that is not resolvable by the backing system that is used for type and member resolution.</source>
          <target state="translated">Возвращает значение, указывающее, представляет ли данный объект <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> член, который не может быть разрешен в базовой системе, используемой для разрешения типов и членов.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupIsUnknown">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> represents a non-resolvable member; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если данный объект <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> представляет неразрешимый член; в противном случае — значение <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupIsUnknown">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> implementation only calls base and does nothing more.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> Реализация вызывает базовый и ничего более.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupIsUnknown">
          <source>The base implementation returns the results in this order: the results are based on internal reflection; or the results are based on checking for a null value of the <ph id="ph1">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph>.</source>
          <target state="translated">Базовая реализация возвращает результаты в следующем порядке: результаты зависят от внутреннего отражения; или результаты основаны на поиск в нулевое значение <ph id="ph1">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupIsUnknown">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> implementation seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> Реализацию запечатывает это виртуальный член; таким образом, все <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> типы и все стандартные директивы XAML необходимо использовать это поведение.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupIsWriteOnly">
          <source>Returns whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> represents an intended write-only property.</source>
          <target state="translated">Возвращает значение, указывающее, представляет ли объект <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> требуемое свойство, доступное только на запись.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupIsWriteOnly">
          <source>Always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Всегда возвращает значение <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupIsWriteOnly">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> запечатывает данного виртуального члена; Таким образом, все <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> типы и все стандартные директивы XAML необходимо использовать это поведение.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupIsWritePublic">
          <source>Returns whether this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> represents a property that has a public <ph id="ph2">&lt;see langword="set" /&gt;</ph> accessor.</source>
          <target state="translated">Возвращает значение, указывающее, представляет ли объект <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> свойство, имеющее открытый метод доступа <ph id="ph2">&lt;see langword="set" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupIsWritePublic">
          <source>Always returns <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">Всегда возвращает значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupIsWritePublic">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> запечатывает данного виртуального члена; Таким образом, все <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> типы и все стандартные директивы XAML необходимо использовать это поведение.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupTargetType">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> of the type where the <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> can exist.</source>
          <target state="translated">Возвращает объект <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> того типа, в котором может существовать объект <ph id="ph2">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupTargetType">
          <source>This implementation always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Данная реализация всегда возвращает значение <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupTargetType">
          <source>Always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Всегда возвращает значение <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupTargetType">
          <source>Target types are not relevant for directives; therefore, this implementation always returns <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Типы целевых объектов не применимо к директивы; Таким образом, данная реализация всегда возвращает <ph id="ph1">`null`</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupTargetType">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> запечатывает данного виртуального члена; Таким образом, все <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> типы и все стандартные директивы XAML необходимо использовать это поведение.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupType">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> of the type that is used by the member.</source>
          <target state="translated">Возвращает объект <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> того типа, который используется данным членом.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupType">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> of the type that is used by the member.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> того типа, который используется данным членом.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupType">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> implementation only calls base and does nothing more.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> Реализация вызывает базовый и ничего более.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupType">
          <source>The base implementation returns results based either on internal reflection, or checking for a null value of <ph id="ph1">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph>, processing in that order.</source>
          <target state="translated">Базовая реализация возвращает результаты на основе внутреннего отражения, либо значение null для проверки <ph id="ph1">&lt;xref:System.Xaml.XamlMember.UnderlyingMember%2A&gt;</ph>, обработку в указанном порядке.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupType">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> запечатывает данного виртуального члена; Таким образом, все <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> типы и все стандартные директивы XAML необходимо использовать это поведение.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupType">
          <source>See Remarks in <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupType%2A?displayProperty=nameWithType&gt;</ph> for more information about what information <ph id="ph2">&lt;xref:System.Xaml.XamlMember.Type%2A&gt;</ph> carries.</source>
          <target state="translated">Можно найти в заметках <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupType%2A?displayProperty=nameWithType&gt;</ph> Дополнительные сведения о сведениях <ph id="ph2">&lt;xref:System.Xaml.XamlMember.Type%2A&gt;</ph> выполняет.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupTypeConverter">
          <source>Returns a type converter implementation that is associated with this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</source>
          <target state="translated">Возвращает реализацию преобразователя типов, связанного с данным объектом <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupTypeConverter">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> instance that has <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> constraint; or <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Экземпляр <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph>, связанный ограничением <ph id="ph2">&lt;see cref="T:System.ComponentModel.TypeConverter" /&gt;</ph> или значение <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupTypeConverter">
          <source>The <ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> implementation only calls base and does nothing more.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> Реализация вызывает базовый и ничего более.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupTypeConverter">
          <source>See <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupTypeConverter%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">См. раздел <ph id="ph1">&lt;xref:System.Xaml.XamlMember.LookupTypeConverter%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupTypeConverter">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> запечатывает данного виртуального члена; Таким образом, все <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> типы и все стандартные директивы XAML необходимо использовать это поведение.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupUnderlyingGetter">
          <source>Returns a <ph id="ph1">&lt;see langword="get" /&gt;</ph> accessor that is associated with this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</source>
          <target state="translated">Возвращает метод доступа <ph id="ph1">&lt;see langword="get" /&gt;</ph>, связанный с данным объектом <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupUnderlyingGetter">
          <source>This implementation always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Данная реализация всегда возвращает значение <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupUnderlyingGetter">
          <source>Always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Всегда возвращает значение <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupUnderlyingGetter">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> запечатывает данного виртуального члена; Таким образом, все <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> типы и все стандартные директивы XAML необходимо использовать это поведение.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupUnderlyingMember">
          <source>Returns a CLR reflection <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph> that is associated with this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</source>
          <target state="translated">Возвращает отражение среды CLR <ph id="ph1">&lt;see cref="T:System.Reflection.MemberInfo" /&gt;</ph>, связанное с данным объектом <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupUnderlyingMember">
          <source>This implementation always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Данная реализация всегда возвращает значение <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupUnderlyingMember">
          <source>Always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Всегда возвращает значение <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupUnderlyingMember">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> запечатывает данного виртуального члена; Таким образом, все <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> типы и все стандартные директивы XAML необходимо использовать это поведение.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupUnderlyingSetter">
          <source>Returns a <ph id="ph1">&lt;see langword="set" /&gt;</ph> accessor that is associated with this <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</source>
          <target state="translated">Возвращает метод доступа <ph id="ph1">&lt;see langword="set" /&gt;</ph>, связанный с данным объектом <ph id="ph2">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupUnderlyingSetter">
          <source>This implementation always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Данная реализация всегда возвращает значение <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.LookupUnderlyingSetter">
          <source>Always returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Всегда возвращает значение <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.LookupUnderlyingSetter">
          <source><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> seals this virtual member; therefore, all <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> types and all predefined XAML directives must use this behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> запечатывает данного виртуального члена; Таким образом, все <ph id="ph2">&lt;xref:System.Xaml.XamlDirective&gt;</ph> типы и все стандартные директивы XAML необходимо использовать это поведение.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.ToString">
          <source>Returns a string representation of this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</source>
          <target state="translated">Возвращает строковое представление данного объекта <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlDirective.ToString">
          <source>A string representation of this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</source>
          <target state="translated">Строковое представление данного объекта <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.ToString">
          <source>If XAML namespace information is available, this implementation returns a string combination of <ph id="ph1">&lt;xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Xaml.XamlMember.Name%2A&gt;</ph>.</source>
          <target state="translated">Если сведения о пространстве имен XAML, эта реализация возвращает строку сочетание <ph id="ph1">&lt;xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A&gt;</ph> и <ph id="ph2">&lt;xref:System.Xaml.XamlMember.Name%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlDirective.ToString">
          <source>If XAML namespace information is unavailable, this implementation returns <ph id="ph1">&lt;xref:System.Xaml.XamlMember.Name%2A&gt;</ph>.</source>
          <target state="translated">Если сведения о пространстве имен XAML недоступен, эта реализация возвращает <ph id="ph1">&lt;xref:System.Xaml.XamlMember.Name%2A&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>