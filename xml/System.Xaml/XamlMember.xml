<Type Name="XamlMember" FullName="System.Xaml.XamlMember">
  <TypeSignature Language="C#" Value="public class XamlMember : IEquatable&lt;System.Xaml.XamlMember&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlMember extends System.Object implements class System.IEquatable`1&lt;class System.Xaml.XamlMember&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlMember" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlMember&#xA;Implements IEquatable(Of XamlMember)" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlMember : IEquatable&lt;System::Xaml::XamlMember ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Xaml.XamlMember&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="7efc6-101">Предоставляет системный идентификатор типа языка XAML для членов типов XAML.</span><span class="sxs-lookup"><span data-stu-id="7efc6-101">Provides the XAML type system identifier for members of XAML types.</span></span> <span data-ttu-id="7efc6-102">Этот идентификатор используется средствами чтения и записи XAML во время обработки узлов членов (когда средство чтения XAML находится в поле <see cref="F:System.Xaml.XamlNodeType.StartMember" />). Кроме того, он используется для общей логики системы типов XAML.</span><span class="sxs-lookup"><span data-stu-id="7efc6-102">The identifier is used by XAML readers and XAML writers during processing of member nodes (when the XAML reader is positioned on a <see cref="F:System.Xaml.XamlNodeType.StartMember" />) and also for general XAML type system logic.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-103"><xref:System.Xaml.XamlMember> можно использовать три методологии для возврата сведений о члене XAML: стандартные общие отражения среды CLR (CLR); метод ссылки — только для отражения, вызов внутренней флаги API-интерфейсы, использовать оптимизированные для бита; или переопределений виртуального вызова `Lookup*` API, предоставляемые возможности <xref:System.Xaml.XamlMember> подклассов.</span><span class="sxs-lookup"><span data-stu-id="7efc6-103"><xref:System.Xaml.XamlMember> can use three methodologies for returning information about a XAML member: standard common language runtime (CLR) reflection; a reference-only reflection technique calling internal APIs that use optimized bit flags; or calling into virtual overrides of the `Lookup*` API that is provided by possible <xref:System.Xaml.XamlMember> subclasses.</span></span> <span data-ttu-id="7efc6-104">В большинстве случаев API служб XAML .NET Framework и <xref:System.Xaml.XamlMember> API, использовать контекст схемы XAML по умолчанию.</span><span class="sxs-lookup"><span data-stu-id="7efc6-104">For most uses of .NET Framework XAML Services APIs and the <xref:System.Xaml.XamlMember> API, you use the default XAML schema context.</span></span> <span data-ttu-id="7efc6-105">Контекст схемы XAML по умолчанию для служб XAML .NET Framework использует для системы типов среды CLR.</span><span class="sxs-lookup"><span data-stu-id="7efc6-105">The default XAML schema context for .NET Framework XAML Services uses CLR backing for the type system.</span></span> <span data-ttu-id="7efc6-106">Это позволяет средств чтения и записи XAML для работы с любой тип или член, определенный в, или в противном случае можно, среда CLR и его методами отражения.</span><span class="sxs-lookup"><span data-stu-id="7efc6-106">This enables the XAML readers and XAML writers to work with any type or member that is defined in, or otherwise available to, the CLR and its reflection techniques.</span></span>  
  
## <a name="lookup-apis-and-xamlmember-derived-classes"></a><span data-ttu-id="7efc6-107">API поиска \* и XamlMember производные классы</span><span class="sxs-lookup"><span data-stu-id="7efc6-107">Lookup\* APIs and XamlMember Derived Classes</span></span>  
 <span data-ttu-id="7efc6-108"><xref:System.Xaml.XamlMember> определяет несколько виртуальных членов, которые производные классы могут переопределить.</span><span class="sxs-lookup"><span data-stu-id="7efc6-108"><xref:System.Xaml.XamlMember> defines several virtual members that derived classes might override.</span></span> <span data-ttu-id="7efc6-109">Эти элементы имеют имена, всегда начинаются со строки, `Lookup`.</span><span class="sxs-lookup"><span data-stu-id="7efc6-109">These members have names that always start with the string `Lookup`.</span></span> <span data-ttu-id="7efc6-110">В оставшейся части API имя затем ссылки на свойство, которое влияет виртуальный метод.</span><span class="sxs-lookup"><span data-stu-id="7efc6-110">The remainder of the API name then references the property that the virtual method influences.</span></span> <span data-ttu-id="7efc6-111">Например <xref:System.Xaml.XamlMember> производный класс может переопределить <xref:System.Xaml.XamlMember.LookupTargetType%2A> для оказания влияния на какие свойства определяемого пользователем базового <xref:System.Xaml.XamlMember.TargetType%2A> возвращает в производном классе.</span><span class="sxs-lookup"><span data-stu-id="7efc6-111">For example, a <xref:System.Xaml.XamlMember> derived class might override <xref:System.Xaml.XamlMember.LookupTargetType%2A> to influence what the base-defined property <xref:System.Xaml.XamlMember.TargetType%2A> returns in a derived class.</span></span> <span data-ttu-id="7efc6-112">Можно предсказать возвращаемые значения таких свойств в <xref:System.Xaml.XamlMember> или существующих производных классов из документации для соответствующего `Lookup*` методы.</span><span class="sxs-lookup"><span data-stu-id="7efc6-112">You can predict return values for such properties in <xref:System.Xaml.XamlMember> or existing derived classes by reading the documentation for the relevant `Lookup*` methods.</span></span>  
  
 <span data-ttu-id="7efc6-113">Назначение `Lookup*` методы — предоставить метод расширения XAML тип системы, включающей <xref:System.Xaml.XamlMember> базового класса.</span><span class="sxs-lookup"><span data-stu-id="7efc6-113">The purpose of the `Lookup*` methods is to provide a XAML type system extension technique that incorporates the <xref:System.Xaml.XamlMember> base class.</span></span> <span data-ttu-id="7efc6-114">Путем наследования от <xref:System.Xaml.XamlMember> и переопределение `Lookup` виртуальные члены можно определить концепции элемента XAML для схемы XAML в системе типов XAML без привязки к особенностям система резервных типов или технологии.</span><span class="sxs-lookup"><span data-stu-id="7efc6-114">By deriving from <xref:System.Xaml.XamlMember> and overriding the `Lookup` virtual members, you can define the concept of a XAML member for a XAML schema in a XAML type system without being tied to the specifics of a backing type system or technology.</span></span> <span data-ttu-id="7efc6-115">Можно также использовать предоставленный контекст схемы XAML в этой схеме и по-прежнему возвращать нужных результатов.</span><span class="sxs-lookup"><span data-stu-id="7efc6-115">You can also use a provided XAML schema context under this scheme and still return the results you want.</span></span>  
  
 <span data-ttu-id="7efc6-116">Например, рассмотрим <xref:System.Xaml.XamlMember> свойства <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-116">As an example, consider the <xref:System.Xaml.XamlMember> property <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</span></span> <span data-ttu-id="7efc6-117">Это свойство информирует вызывающие объекты, что операции, например, с помощью <xref:System.Xaml.XamlWriter> для сериализации могут записывать значение для этого элемента на целевом объекте.</span><span class="sxs-lookup"><span data-stu-id="7efc6-117">This property informs callers that operations such as using a <xref:System.Xaml.XamlWriter> for serialization can write a value for this member on a target object.</span></span> <span data-ttu-id="7efc6-118">В реализации по умолчанию выполняется определение, является ли элемент для записи, используя методы отражения для резервный CLR <xref:System.Type> и его членах ( <xref:System.Reflection.MemberInfo>).</span><span class="sxs-lookup"><span data-stu-id="7efc6-118">In the default implementation, the determination of whether the member is writable is made by using reflection techniques against the backing CLR <xref:System.Type> and its members (the <xref:System.Reflection.MemberInfo>).</span></span> <span data-ttu-id="7efc6-119">Таким образом по умолчанию в системе типов XAML зависит от системы типов CLR.</span><span class="sxs-lookup"><span data-stu-id="7efc6-119">Therefore, by default, the XAML type system depends on the CLR type system.</span></span> <span data-ttu-id="7efc6-120">Тем не менее, можно удалить эту зависимость для XAML тип системы создания отчетов из <xref:System.Xaml.XamlMember.IsWritePublic%2A> путем переопределения API <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-120">However, you can remove this dependency for your XAML type system reporting of <xref:System.Xaml.XamlMember.IsWritePublic%2A> by overriding the API <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A>.</span></span> <span data-ttu-id="7efc6-121">В рамках переопределения, можно использовать другие определения, такие как метаданные, специфичные для технологии, главная таблица подстановки, оптимизированный для фиксированного словаря XAML или ряд других стратегий для определения, является ли член XAML для записи в вашей Словарный состав языка XAML.</span><span class="sxs-lookup"><span data-stu-id="7efc6-121">Within your override, you can use other determinations, such as metadata that is specific to your technology, a master lookup table that is optimized for a fixed XAML vocabulary, or a variety of other strategies for determining whether a XAML member is writable in your XAML vocabulary.</span></span>  
  
## <a name="constructing-xamlmember-without-xaml-schema-context"></a><span data-ttu-id="7efc6-122">Создав XamlMember без контекста схемы XAML</span><span class="sxs-lookup"><span data-stu-id="7efc6-122">Constructing XamlMember Without XAML Schema Context</span></span>  
 <span data-ttu-id="7efc6-123">Большинство конструкторов <xref:System.Xaml.XamlMember> требуют <xref:System.Xaml.XamlSchemaContext> как часть их инициализации.</span><span class="sxs-lookup"><span data-stu-id="7efc6-123">Most constructors of <xref:System.Xaml.XamlMember> require a <xref:System.Xaml.XamlSchemaContext> as part of their initialization.</span></span> <span data-ttu-id="7efc6-124"><xref:System.Xaml.XamlSchemaContext> Также необходим для многих внутренней <xref:System.Xaml.XamlSchemaContext> операций, таких как получения информации, перенаправление из резервного типа.</span><span class="sxs-lookup"><span data-stu-id="7efc6-124">The <xref:System.Xaml.XamlSchemaContext> is also necessary for many internal <xref:System.Xaml.XamlSchemaContext> operations, such as obtaining information that is being forwarded from the backing type.</span></span> <span data-ttu-id="7efc6-125">При работе с <xref:System.Xaml.XamlMember> API, обычно имеется <xref:System.Xaml.XamlSchemaContext> , которое доступно из окружающей конструкция например <xref:System.Xaml.XamlWriter>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-125">When you are working with the <xref:System.Xaml.XamlMember> API, you typically have a <xref:System.Xaml.XamlSchemaContext> that is available from a surrounding construct such as a <xref:System.Xaml.XamlWriter>.</span></span> <span data-ttu-id="7efc6-126">В этом случае можно передать <xref:System.Xaml.XamlSchemaContext> ссылаться через все XAML типа системные вызовы, требующие контекст схемы XAML.</span><span class="sxs-lookup"><span data-stu-id="7efc6-126">In this case, you can pass the <xref:System.Xaml.XamlSchemaContext> reference through to all XAML type system calls that require a XAML schema context.</span></span>  
  
 <span data-ttu-id="7efc6-127">Один определенный конструктор <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>, не требует <xref:System.Xaml.XamlSchemaContext>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-127">One specific constructor, <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29>, does not require a <xref:System.Xaml.XamlSchemaContext>.</span></span> <span data-ttu-id="7efc6-128">Тем не менее <xref:System.Xaml.XamlMember> , создаваемое с <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> подпись возвращает `true` для <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-128">However, a <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="7efc6-129">Для пути загрузки, который включает в себя <xref:System.Xaml.XamlObjectWriter>, такой член не может быть записан в граф объектов.</span><span class="sxs-lookup"><span data-stu-id="7efc6-129">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, such a member cannot be written into an object graph.</span></span> <span data-ttu-id="7efc6-130">С помощью реализации служб .NET Framework XAML, <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> вызова создается исключение <xref:System.Xaml.XamlObjectWriterException> при соответствующие <xref:System.Xaml.XamlMember> отчеты `true` для <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-130">Using the .NET Framework XAML services implementation, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="7efc6-131">Не следует создавать <xref:System.Xaml.XamlMember> , имеет значение `true` для <xref:System.Xaml.XamlMember.IsUnknown%2A> Если ваша реализация может обрабатывать исключения из <xref:System.Xaml.XamlObjectWriter>, или у вас есть другие способы настройки <xref:System.Xaml.XamlObjectWriter> поведение.</span><span class="sxs-lookup"><span data-stu-id="7efc6-131">You should not construct a <xref:System.Xaml.XamlMember> that has a value of `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior.</span></span> <span data-ttu-id="7efc6-132">Например один или несколько из следующих может быть верно для реализации:</span><span class="sxs-lookup"><span data-stu-id="7efc6-132">For example, one or more of the  following might be true of your implementation:</span></span>  
  
-   <span data-ttu-id="7efc6-133">Контекст схемы XAML доступен в более поздней версии.</span><span class="sxs-lookup"><span data-stu-id="7efc6-133">The XAML schema context is available later.</span></span>  
  
-   <span data-ttu-id="7efc6-134">Можно использовать шаблон вызова члена.</span><span class="sxs-lookup"><span data-stu-id="7efc6-134">You use a member invoker pattern.</span></span>  
  
-   <span data-ttu-id="7efc6-135">Намеренно переопределить <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> в пользовательский модуль записи XAML.</span><span class="sxs-lookup"><span data-stu-id="7efc6-135">You deliberately override <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> in a custom XAML writer.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xaml.XamlType" />
    <altmember cref="T:System.Xaml.XamlDirective" />
    <altmember cref="T:System.Xaml.XamlObjectWriter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7efc6-136">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-136">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.EventInfo eventInfo, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::EventInfo ^ eventInfo, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventInfo" Type="System.Reflection.EventInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="eventInfo"><span data-ttu-id="7efc6-137">Объект <see cref="T:System.Reflection.EventInfo" /> системы типов среды CLR, представляющий член события.</span><span class="sxs-lookup"><span data-stu-id="7efc6-137">The CLR type system <see cref="T:System.Reflection.EventInfo" /> that represents the event member.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="7efc6-138">Контекст <see cref="T:System.Xaml.XamlSchemaContext" />, определяющий член.</span><span class="sxs-lookup"><span data-stu-id="7efc6-138">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <summary><span data-ttu-id="7efc6-139">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" /> объектами <see cref="T:System.Reflection.EventInfo" /> и <see cref="T:System.Xaml.XamlSchemaContext" /> системы типов среды CLR.</span><span class="sxs-lookup"><span data-stu-id="7efc6-139">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using CLR type system <see cref="T:System.Reflection.EventInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-140">Этот конструктор используется, если элемент представляет событие (свойство точки подключения обработчика событий).</span><span class="sxs-lookup"><span data-stu-id="7efc6-140">Use this constructor if the member represents an event (event handler connection-point property).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.PropertyInfo propertyInfo, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::PropertyInfo ^ propertyInfo, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="propertyInfo"><span data-ttu-id="7efc6-141">Объект <see cref="T:System.Reflection.PropertyInfo" /> системы типов среды CLR, представляющий член свойства.</span><span class="sxs-lookup"><span data-stu-id="7efc6-141">The CLR type system <see cref="T:System.Reflection.PropertyInfo" /> that represents the property member.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="7efc6-142">Контекст <see cref="T:System.Xaml.XamlSchemaContext" />, определяющий член.</span><span class="sxs-lookup"><span data-stu-id="7efc6-142">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <summary><span data-ttu-id="7efc6-143">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" /> объектами <see cref="T:System.Reflection.PropertyInfo" /> и <see cref="T:System.Xaml.XamlSchemaContext" /> системы типов среды CLR.</span><span class="sxs-lookup"><span data-stu-id="7efc6-143">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using CLR type system <see cref="T:System.Reflection.PropertyInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-144">Этот конструктор используется, если элемент представляет свойство (специально не является подключением обработчика событий).</span><span class="sxs-lookup"><span data-stu-id="7efc6-144">Use this constructor if the member represents a property (and specifically is not an event handler connection).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.EventInfo eventInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.EventInfo eventInfo, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.EventInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::EventInfo ^ eventInfo, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="eventInfo" Type="System.Reflection.EventInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="eventInfo"><span data-ttu-id="7efc6-145">Объект <see cref="T:System.Reflection.EventInfo" /> системы типов среды CLR, представляющий член события.</span><span class="sxs-lookup"><span data-stu-id="7efc6-145">The CLR type system <see cref="T:System.Reflection.EventInfo" /> that represents the event member.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="7efc6-146">Контекст <see cref="T:System.Xaml.XamlSchemaContext" />, определяющий член.</span><span class="sxs-lookup"><span data-stu-id="7efc6-146">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <param name="invoker"><span data-ttu-id="7efc6-147">Реализация <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, которая обрабатывает вызовы отражения во время выполнения, адресованные объекту <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-147">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time reflection calls against the <see cref="T:System.Xaml.XamlMember" />.</span></span></param>
        <summary><span data-ttu-id="7efc6-148">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" /> объектами <see cref="T:System.Reflection.EventInfo" /> и <see cref="T:System.Xaml.XamlSchemaContext" /> системы типов среды CLR, включая сведения объекта <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-148">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using CLR type system <see cref="T:System.Reflection.EventInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-149">Этот конструктор используется, если элемент представляет событие (или свойство точки подключения обработчика событий).</span><span class="sxs-lookup"><span data-stu-id="7efc6-149">Use this constructor if the member represents an event (or an event handler connection-point property).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (System.Reflection.PropertyInfo propertyInfo, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Reflection.PropertyInfo propertyInfo, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.Reflection.PropertyInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::Reflection::PropertyInfo ^ propertyInfo, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="propertyInfo" Type="System.Reflection.PropertyInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="propertyInfo"><span data-ttu-id="7efc6-150">Объект <see cref="T:System.Reflection.PropertyInfo" /> системы типов среды CLR, представляющий член свойства.</span><span class="sxs-lookup"><span data-stu-id="7efc6-150">The CLR type system <see cref="T:System.Reflection.PropertyInfo" /> that represents the property member.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="7efc6-151">Контекст <see cref="T:System.Xaml.XamlSchemaContext" />, определяющий член.</span><span class="sxs-lookup"><span data-stu-id="7efc6-151">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <param name="invoker"><span data-ttu-id="7efc6-152">Реализация <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, которая обрабатывает вызовы времени выполнения, адресованные объекту <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-152">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time invocation calls against the <see cref="T:System.Xaml.XamlMember" />.</span></span></param>
        <summary><span data-ttu-id="7efc6-153">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" /> объектами <see cref="T:System.Reflection.PropertyInfo" /> и <see cref="T:System.Xaml.XamlSchemaContext" /> отражения, включая сведения объекта <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-153">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using reflection <see cref="T:System.Reflection.PropertyInfo" /> and a <see cref="T:System.Xaml.XamlSchemaContext" />, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-154">Этот конструктор используется только в том случае, если элемент представляет свойство и не является подключением обработчика событий.</span><span class="sxs-lookup"><span data-stu-id="7efc6-154">Use this constructor only if the member represents a property and if it is not an event handler connection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachableEventName, class System.Reflection.MethodInfo adder, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachableEventName As String, adder As MethodInfo, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachableEventName, System::Reflection::MethodInfo ^ adder, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attachableEventName" Type="System.String" />
        <Parameter Name="adder" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="attachableEventName"><span data-ttu-id="7efc6-155">Строковое имя присоединяемого события.</span><span class="sxs-lookup"><span data-stu-id="7efc6-155">The string name of the attachable event.</span></span></param>
        <param name="adder"><span data-ttu-id="7efc6-156">Объект <see cref="T:System.Reflection.MethodInfo" /> системы типов среды CLR для метода <see langword="Add" /> обработчика базовой реализации присоединяемого члена.</span><span class="sxs-lookup"><span data-stu-id="7efc6-156">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the handler <see langword="Add" /> method of the attachable member's backing implementation.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="7efc6-157">Контекст <see cref="T:System.Xaml.XamlSchemaContext" />, определяющий член.</span><span class="sxs-lookup"><span data-stu-id="7efc6-157">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <summary><span data-ttu-id="7efc6-158">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" /> для объекта <see cref="T:System.Xaml.XamlMember" />, представляющего присоединяемое событие.</span><span class="sxs-lookup"><span data-stu-id="7efc6-158">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable event.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-159">Этот конструктор используется, если элемент представляет элемент вложенного события.</span><span class="sxs-lookup"><span data-stu-id="7efc6-159">Use this constructor if the member represents an attachable event member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string name, System.Xaml.XamlType declaringType, bool isAttachable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, class System.Xaml.XamlType declaringType, bool isAttachable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, declaringType As XamlType, isAttachable As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ name, System::Xaml::XamlType ^ declaringType, bool isAttachable);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="declaringType" Type="System.Xaml.XamlType" />
        <Parameter Name="isAttachable" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name"><span data-ttu-id="7efc6-160">Строковое имя члена.</span><span class="sxs-lookup"><span data-stu-id="7efc6-160">The string name of the member.</span></span></param>
        <param name="declaringType"><span data-ttu-id="7efc6-161">Сведения <see cref="T:System.Xaml.XamlType" /> для объявляемого типа.</span><span class="sxs-lookup"><span data-stu-id="7efc6-161">The <see cref="T:System.Xaml.XamlType" /> information for the declaring type.</span></span></param>
        <param name="isAttachable">
          <span data-ttu-id="7efc6-162">Значение <see langword="true" />, если необходимо указать, что член является присоединяемым; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-162"><see langword="true" /> to indicate that the member is attachable; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="7efc6-163">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" />, используя строковое имя и сведения об объявляющем типе <see cref="T:System.Xaml.XamlType" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-163">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class using a string name and declaring <see cref="T:System.Xaml.XamlType" /> information.</span></span> <span data-ttu-id="7efc6-164">Объект <see cref="T:System.Xaml.XamlMember" />, созданный с данной сигнатурой, имеет значительные ограничения.</span><span class="sxs-lookup"><span data-stu-id="7efc6-164">A <see cref="T:System.Xaml.XamlMember" /> that is constructed with this signature has significant limitations.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-165">Объект <xref:System.Xaml.XamlMember> , создаваемое с <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> подпись возвращает `true` для <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-165">A <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="7efc6-166">Для пути загрузки, который включает в себя <xref:System.Xaml.XamlObjectWriter>, такой член не может быть записан в граф объектов.</span><span class="sxs-lookup"><span data-stu-id="7efc6-166">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, such a member cannot be written into an object graph.</span></span> <span data-ttu-id="7efc6-167">С помощью реализации служб XAML .NET Framework, <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> вызова создается исключение <xref:System.Xaml.XamlObjectWriterException> при соответствующие <xref:System.Xaml.XamlMember> отчеты `true` для <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-167">Using the .NET Framework XAML Services implementation, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="7efc6-168">Не следует создавать <xref:System.Xaml.XamlMember> с <xref:System.Xaml.XamlMember.IsUnknown%2A> `true` Если ваша реализация может обрабатывать исключения из <xref:System.Xaml.XamlObjectWriter>, или у вас есть другие способы настройки <xref:System.Xaml.XamlObjectWriter> поведение.</span><span class="sxs-lookup"><span data-stu-id="7efc6-168">You should not construct a <xref:System.Xaml.XamlMember> with <xref:System.Xaml.XamlMember.IsUnknown%2A>`true` unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior.</span></span> <span data-ttu-id="7efc6-169">Например один или несколько из следующих может быть верно для реализации:</span><span class="sxs-lookup"><span data-stu-id="7efc6-169">For example, one or more of the following might be true of your implementation:</span></span>  
  
-   <span data-ttu-id="7efc6-170">Контекст схемы XAML доступен в более поздней версии.</span><span class="sxs-lookup"><span data-stu-id="7efc6-170">The XAML schema context is available later.</span></span>  
  
-   <span data-ttu-id="7efc6-171">Можно использовать шаблон вызова члена.</span><span class="sxs-lookup"><span data-stu-id="7efc6-171">You use a member invoker pattern.</span></span>  
  
-   <span data-ttu-id="7efc6-172">Намеренно переопределить <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> в пользовательский модуль записи XAML.</span><span class="sxs-lookup"><span data-stu-id="7efc6-172">You deliberately override <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> in a custom XAML writer.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7efc6-173">Параметр <paramref name="name" /> или <paramref name="declaringType" /> имеет значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-173"><paramref name="name" /> or <paramref name="declaringType" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachablePropertyName, class System.Reflection.MethodInfo getter, class System.Reflection.MethodInfo setter, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachablePropertyName As String, getter As MethodInfo, setter As MethodInfo, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachablePropertyName, System::Reflection::MethodInfo ^ getter, System::Reflection::MethodInfo ^ setter, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attachablePropertyName" Type="System.String" />
        <Parameter Name="getter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="setter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="attachablePropertyName"><span data-ttu-id="7efc6-174">Строковое имя присоединяемого свойства.</span><span class="sxs-lookup"><span data-stu-id="7efc6-174">The string name of the attachable property.</span></span></param>
        <param name="getter"><span data-ttu-id="7efc6-175">Объект <see cref="T:System.Reflection.MethodInfo" /> системы типов среды CLR для метода доступа <see langword="get" /> базовой реализации присоединяемого члена.</span><span class="sxs-lookup"><span data-stu-id="7efc6-175">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="get" /> accessor of the attachable member's backing implementation.</span></span></param>
        <param name="setter"><span data-ttu-id="7efc6-176">Объект <see cref="T:System.Reflection.MethodInfo" /> системы типов среды CLR для метода доступа <see langword="set" /> базовой реализации присоединяемого члена.</span><span class="sxs-lookup"><span data-stu-id="7efc6-176">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="set" /> accessor of the attachable member's backing implementation.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="7efc6-177">Контекст <see cref="T:System.Xaml.XamlSchemaContext" />, определяющий член.</span><span class="sxs-lookup"><span data-stu-id="7efc6-177">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <summary><span data-ttu-id="7efc6-178">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" /> для объекта <see cref="T:System.Xaml.XamlMember" />, представляющего присоединяемое свойство.</span><span class="sxs-lookup"><span data-stu-id="7efc6-178">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable property.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-179">Этот конструктор используется, если элемент представляет присоединяемое свойство.</span><span class="sxs-lookup"><span data-stu-id="7efc6-179">Use this constructor if the member represents an attachable property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachableEventName, System.Reflection.MethodInfo adder, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachableEventName, class System.Reflection.MethodInfo adder, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachableEventName As String, adder As MethodInfo, schemaContext As XamlSchemaContext, invoker As XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachableEventName, System::Reflection::MethodInfo ^ adder, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attachableEventName" Type="System.String" />
        <Parameter Name="adder" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="attachableEventName"><span data-ttu-id="7efc6-180">Строковое имя присоединяемого события.</span><span class="sxs-lookup"><span data-stu-id="7efc6-180">The string name of the attachable event.</span></span></param>
        <param name="adder"><span data-ttu-id="7efc6-181">Объект <see cref="T:System.Reflection.MethodInfo" /> системы типов среды CLR для метода <see langword="Add" /> обработчика базовой реализации присоединяемого члена.</span><span class="sxs-lookup"><span data-stu-id="7efc6-181">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the handler <see langword="Add" /> method of the attachable member's backing implementation.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="7efc6-182">Контекст <see cref="T:System.Xaml.XamlSchemaContext" />, определяющий член.</span><span class="sxs-lookup"><span data-stu-id="7efc6-182">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <param name="invoker"><span data-ttu-id="7efc6-183">Реализация <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, которая обрабатывает вызовы времени выполнения, адресованные объекту <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-183">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time invocation calls against the <see cref="T:System.Xaml.XamlMember" />.</span></span></param>
        <summary><span data-ttu-id="7efc6-184">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" /> для объекта <see cref="T:System.Xaml.XamlMember" />, представляющего присоединяемое событие, включая сведения объекта <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-184">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable event, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-185">Этот конструктор используется, если элемент представляет элемент вложенного события.</span><span class="sxs-lookup"><span data-stu-id="7efc6-185">Use this constructor if the member represents an attachable event member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlMember (string attachablePropertyName, System.Reflection.MethodInfo getter, System.Reflection.MethodInfo setter, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlMemberInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string attachablePropertyName, class System.Reflection.MethodInfo getter, class System.Reflection.MethodInfo setter, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlMemberInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlMemberInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (attachablePropertyName As String, getter As MethodInfo, setter As MethodInfo, schemaContext As XamlSchemaContext, invoker As XamlMemberInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlMember(System::String ^ attachablePropertyName, System::Reflection::MethodInfo ^ getter, System::Reflection::MethodInfo ^ setter, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlMemberInvoker ^ invoker);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="attachablePropertyName" Type="System.String" />
        <Parameter Name="getter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="setter" Type="System.Reflection.MethodInfo" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlMemberInvoker" />
      </Parameters>
      <Docs>
        <param name="attachablePropertyName"><span data-ttu-id="7efc6-186">Строковое имя присоединяемого свойства.</span><span class="sxs-lookup"><span data-stu-id="7efc6-186">The string name of the attachable property.</span></span></param>
        <param name="getter"><span data-ttu-id="7efc6-187">Объект <see cref="T:System.Reflection.MethodInfo" /> системы типов среды CLR для метода доступа <see langword="get" /> базовой реализации присоединяемого члена.</span><span class="sxs-lookup"><span data-stu-id="7efc6-187">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="get" /> accessor of the attachable member's backing implementation.</span></span></param>
        <param name="setter"><span data-ttu-id="7efc6-188">Объект <see cref="T:System.Reflection.MethodInfo" /> системы типов среды CLR для метода доступа <see langword="set" /> базовой реализации присоединяемого члена.</span><span class="sxs-lookup"><span data-stu-id="7efc6-188">The CLR type system <see cref="T:System.Reflection.MethodInfo" /> for the <see langword="set" /> accessor of the attachable member's backing implementation.</span></span></param>
        <param name="schemaContext"><span data-ttu-id="7efc6-189">Контекст <see cref="T:System.Xaml.XamlSchemaContext" />, определяющий член.</span><span class="sxs-lookup"><span data-stu-id="7efc6-189">The <see cref="T:System.Xaml.XamlSchemaContext" /> context that qualifies the member.</span></span></param>
        <param name="invoker"><span data-ttu-id="7efc6-190">Реализация <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, которая обрабатывает вызовы времени выполнения, адресованные объекту <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-190">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that handles run-time invocation calls against the <see cref="T:System.Xaml.XamlMember" />.</span></span></param>
        <summary><span data-ttu-id="7efc6-191">Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlMember" /> для объекта <see cref="T:System.Xaml.XamlMember" />, представляющего присоединяемое свойство, включая сведения объекта <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-191">Initializes a new instance of the <see cref="T:System.Xaml.XamlMember" /> class for a <see cref="T:System.Xaml.XamlMember" /> that represents an attachable property, including <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-192">Этот конструктор используется, если элемент представляет элемент вложенного свойства.</span><span class="sxs-lookup"><span data-stu-id="7efc6-192">Use this constructor if the member represents an attachable property member.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeclaringType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType DeclaringType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType DeclaringType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DeclaringType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeclaringType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ DeclaringType { System::Xaml::XamlType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7efc6-193">Получает объект <see cref="T:System.Xaml.XamlType" /> для типа, который объявляет член, связанный с этим объектом <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-193">Gets the <see cref="T:System.Xaml.XamlType" /> for the type that declares the member that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <value><span data-ttu-id="7efc6-194">Объект <see cref="T:System.Xaml.XamlType" /> для типа, который объявляет член, связанный с этим объектом <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-194">The <see cref="T:System.Xaml.XamlType" /> for the type that declares the member that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-195">Это значение обычно устанавливается во время инициализации и обычно не `null`.</span><span class="sxs-lookup"><span data-stu-id="7efc6-195">This value is typically set during initialization and is usually not `null`.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7efc6-196"><xref:System.Xaml.XamlMember.DeclaringType%2A> данные могут передаваться в конструкторами для инициализации.</span><span class="sxs-lookup"><span data-stu-id="7efc6-196"><xref:System.Xaml.XamlMember.DeclaringType%2A> information can be passed in by constructors for initialization.</span></span> <span data-ttu-id="7efc6-197">Посредством вызова непосредственно базовых конструкторов, инициализация для <xref:System.Xaml.XamlMember> производных классов может пропускать некоторые проверки значения, которые выполняются в базовом классе.</span><span class="sxs-lookup"><span data-stu-id="7efc6-197">By calling directly into base constructors, initialization for <xref:System.Xaml.XamlMember> derived classes can omit some of the value-checks that are made in the base class.</span></span> <span data-ttu-id="7efc6-198">Таким образом производная инициализация можно изменить сведения о связях обнаруженную члена типа члена XAML, чтобы он больше не согласовывался ожидаемым способом с информацией о его базового объявления CLR в системе типов.</span><span class="sxs-lookup"><span data-stu-id="7efc6-198">Therefore, the derived initialization can change the reported type-member relationship information of a XAML member so that it no longer aligns in an expected way with the type system information of its underlying CLR declaration.</span></span> <span data-ttu-id="7efc6-199">Для каких-либо критическим с точки зрения безопасности проверок объявления информации о типах используйте базовый тип CLR.</span><span class="sxs-lookup"><span data-stu-id="7efc6-199">For any security-critical checks of declaring type information, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferringLoader">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; DeferringLoader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; DeferringLoader" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeferringLoader As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ DeferringLoader { System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7efc6-200">Получает объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, используемый для отложенной загрузки объектов, объявленных в языке XAML.</span><span class="sxs-lookup"><span data-stu-id="7efc6-200">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for deferred loading of XAML declared objects.</span></span></summary>
        <value><span data-ttu-id="7efc6-201">Объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.Xaml.XamlDeferringLoader" /> для универсального класса.</span><span class="sxs-lookup"><span data-stu-id="7efc6-201">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Xaml.XamlDeferringLoader" /> constraint on the generic.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-202">Вызов <xref:System.Xaml.XamlMember.DeferringLoader%2A> вызывает <xref:System.Xaml.XamlMember.LookupDeferringLoader%2A> или конкретного переопределения этого метода.</span><span class="sxs-lookup"><span data-stu-id="7efc6-202">Calling <xref:System.Xaml.XamlMember.DeferringLoader%2A> invokes <xref:System.Xaml.XamlMember.LookupDeferringLoader%2A> or a specific override of that method.</span></span> <span data-ttu-id="7efc6-203">Это происходит в случаях, когда логика начального внутреннего отражения не уже задал сведения.</span><span class="sxs-lookup"><span data-stu-id="7efc6-203">This behavior occurs in cases where the initial internal reflection logic has not already set the information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DependsOn">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; DependsOn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlMember&gt; DependsOn" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.DependsOn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DependsOn As IList(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ DependsOn { System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7efc6-204">Получает список объектов <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-204">Gets a list of <see cref="T:System.Xaml.XamlMember" /> objects.</span></span> <span data-ttu-id="7efc6-205">Эти объекты сообщают о членах, в которых существуют отношения зависимости для порядка инициализации относительно данного объекта <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-205">These report the members where dependency relationships for initialization order exist relative to this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <value><span data-ttu-id="7efc6-206">Список объектов <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-206">A list of <see cref="T:System.Xaml.XamlMember" /> objects.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-207">Вызов <xref:System.Xaml.XamlMember.DependsOn%2A> вызывает <xref:System.Xaml.XamlMember.LookupDependsOn%2A> или конкретного переопределения этого метода.</span><span class="sxs-lookup"><span data-stu-id="7efc6-207">Calling <xref:System.Xaml.XamlMember.DependsOn%2A> invokes <xref:System.Xaml.XamlMember.LookupDependsOn%2A> or a specific override of that method.</span></span> <span data-ttu-id="7efc6-208">Это происходит в случаях, когда логика начального внутреннего отражения не уже задал сведения.</span><span class="sxs-lookup"><span data-stu-id="7efc6-208">This behavior occurs in cases where the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="7efc6-209">`DependsOn` Применить шаблон к вариантам модели объекта, которые намеренно противоречат общему правилу XAML.</span><span class="sxs-lookup"><span data-stu-id="7efc6-209">The `DependsOn` pattern can be applied to object model cases that deliberately contradict a general XAML rule.</span></span> <span data-ttu-id="7efc6-210">Общее правило XAML: члены типа, которые передаются как текст инициализации (или методом фабрики в XAML 2009) должно иметь возможность назначаться в любом порядке.</span><span class="sxs-lookup"><span data-stu-id="7efc6-210">The general XAML rule is that members of a type that are not passed as initialization text (or by a factory method in XAML 2009) must be able to be assigned in any order.</span></span> <span data-ttu-id="7efc6-211">Применяя `DependsOn` узор к члену, можно указать средству записи XAML всегда обработать указанный член перед этим членом.</span><span class="sxs-lookup"><span data-stu-id="7efc6-211">By applying a `DependsOn` pattern to a member, you can instruct XAML writers to always process the referenced member before this member.</span></span> <span data-ttu-id="7efc6-212">Можно применить этот шаблон в ситуациях, где значение текущего элемента требует контекста или другие сведения, которые доступны только после установки другого элемента.</span><span class="sxs-lookup"><span data-stu-id="7efc6-212">You can apply this pattern in situations where the value of the current member requires context or other information that is only available after the other member is set.</span></span>  
  
 <span data-ttu-id="7efc6-213">`DependsOn` Шаблон быть применен внимательно и зарезервирован для сценариев свойств, где он служит архитектурной цели.</span><span class="sxs-lookup"><span data-stu-id="7efc6-213">The `DependsOn` pattern should be applied judiciously and reserved for property scenarios where it serves an architectural purpose.</span></span> <span data-ttu-id="7efc6-214">Большое количество зависимостей которые потенциально могут замедлить обработку XAML.</span><span class="sxs-lookup"><span data-stu-id="7efc6-214">Large numbers of dependencies have the potential to slow down XAML processing.</span></span> <span data-ttu-id="7efc6-215">Кроме того существует возможность создать циклические зависимости, в этом случае поведение обработки XAML не определено.</span><span class="sxs-lookup"><span data-stu-id="7efc6-215">Also, it is possible to produce circular dependencies, in which case the XAML processing behavior is undefined.</span></span>  
  
 <span data-ttu-id="7efc6-216">Пример `DependsOn` сценарии из WPF включают некоторые свойства на <xref:System.Windows.Controls.ControlTemplate> и <xref:System.Windows.DataTemplate>на <xref:System.Windows.Trigger>, а затем на <xref:System.Windows.Setter>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-216">Example `DependsOn` scenarios from WPF include certain properties on <xref:System.Windows.Controls.ControlTemplate> and <xref:System.Windows.DataTemplate>, on <xref:System.Windows.Trigger>, and on <xref:System.Windows.Setter>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.DependsOnAttribute" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7efc6-217">Позволяет определить, равен ли текущий объект другому объекту.</span><span class="sxs-lookup"><span data-stu-id="7efc6-217">Indicates whether the current object is equal to another object.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="7efc6-218">Объект, который требуется сравнить с данным объектом.</span><span class="sxs-lookup"><span data-stu-id="7efc6-218">The object to compare with this object.</span></span></param>
        <summary><span data-ttu-id="7efc6-219">Позволяет определить, равен ли текущий объект другому объекту.</span><span class="sxs-lookup"><span data-stu-id="7efc6-219">Indicates whether the current object is equal to another object.</span></span></summary>
        <returns>
          <span data-ttu-id="7efc6-220"><see langword="true" />, если текущий объект эквивалентен параметру <paramref name="obj" />, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-220"><see langword="true" /> if the current object is equal to the <paramref name="obj" /> parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Xaml.XamlMember other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Xaml.XamlMember other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.Equals(System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Xaml::XamlMember ^ other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="7efc6-221">Объект, который требуется сравнить с данным объектом.</span><span class="sxs-lookup"><span data-stu-id="7efc6-221">An object to compare with this object.</span></span></param>
        <summary><span data-ttu-id="7efc6-222">Указывает, эквивалентен ли текущий объект другому объекту того же типа.</span><span class="sxs-lookup"><span data-stu-id="7efc6-222">Indicates whether the current object is equal to another object of the same type.</span></span></summary>
        <returns>
          <span data-ttu-id="7efc6-223"><see langword="true" />, если текущий объект эквивалентен параметру <paramref name="other" />, в противном случае — <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-223"><see langword="true" /> if the current object is equal to the <paramref name="other" /> parameter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7efc6-224">Возвращает хэш-код для этого объекта.</span><span class="sxs-lookup"><span data-stu-id="7efc6-224">Returns the hash code for this object.</span></span></summary>
        <returns><span data-ttu-id="7efc6-225">Целочисленный хэш-код.</span><span class="sxs-lookup"><span data-stu-id="7efc6-225">An integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlNamespaces">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; GetXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.GetXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXamlNamespaces () As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetXamlNamespaces();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7efc6-226">Возвращает список пространств имен XAML, в которых может существовать этот член XAML.</span><span class="sxs-lookup"><span data-stu-id="7efc6-226">Returns a list of XAML namespaces where this XAML member can exist.</span></span></summary>
        <returns><span data-ttu-id="7efc6-227">Список идентификаторов пространства имен XAML в виде строк.</span><span class="sxs-lookup"><span data-stu-id="7efc6-227">A list of XAML namespace identifiers as strings.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-228">Реализация по умолчанию возвращает <xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=nameWithType> в результате вызова <xref:System.Xaml.XamlMember.DeclaringType%2A> , связанного с данным <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-228">The default implementation returns the <xref:System.Xaml.XamlType.GetXamlNamespaces%2A?displayProperty=nameWithType> call result from the <xref:System.Xaml.XamlMember.DeclaringType%2A> that is associated with this <xref:System.Xaml.XamlMember>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoker">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlMemberInvoker Invoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlMemberInvoker Invoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Invoker" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Invoker As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlMemberInvoker ^ Invoker { System::Xaml::Schema::XamlMemberInvoker ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7efc6-229">Получает реализацию объекта <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, связанную с данным типом <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-229">Gets the <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <value><span data-ttu-id="7efc6-230">Реализация объекта <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, связанная с данным типом <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-230">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-231">`Invoker` Шаблон — это сложная службе расширения системы типов XAML.</span><span class="sxs-lookup"><span data-stu-id="7efc6-231">The `Invoker` pattern is an advanced XAML type system extension technique.</span></span> <span data-ttu-id="7efc6-232">`Invoker` Шаблон предоставляет способ вставки поведение сопоставления типов другую схему, используя при этом по-прежнему определения системы типов XAML в службах XAML .NET Framework.</span><span class="sxs-lookup"><span data-stu-id="7efc6-232">The `Invoker` pattern provides a way to inject different schema type mapping behavior, while still using XAML type system definitions from .NET Framework XAML Services.</span></span>  
  
 <span data-ttu-id="7efc6-233">Если <xref:System.Xaml.XamlMember.LookupInvoker%2A> переопределить возвращает `null`, или если реализация по умолчанию возвращает `null` , так как он не имеет <xref:System.Xaml.XamlMember.UnderlyingMember%2A> для этого <xref:System.Xaml.XamlMember>, <xref:System.Xaml.XamlMember.Invoker%2A> возвращает <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-233">If a <xref:System.Xaml.XamlMember.LookupInvoker%2A> override returns `null`, or if the default implementation returns `null` because it lacks the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> for this <xref:System.Xaml.XamlMember>, the <xref:System.Xaml.XamlMember.Invoker%2A> property returns <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="7efc6-234">Значение по умолчанию — <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-234"><xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> is the default.</span></span> <span data-ttu-id="7efc6-235">Это верно для большинства операций, с помощью служб XAML .NET Framework и контекст схемы XAML по умолчанию и где переопределить конкретные `Invoker` шаблоны передаются для построения сущностей системы типов XAML.</span><span class="sxs-lookup"><span data-stu-id="7efc6-235">This is true for most operations that use .NET Framework XAML Services and the default XAML schema context, and where no specific override `Invoker` patterns are passed for construction of XAML type system entities.</span></span>  
  
 <span data-ttu-id="7efc6-236">Вызов <xref:System.Xaml.XamlMember.Invoker%2A> вызывает <xref:System.Xaml.XamlMember.LookupInvoker%2A> или конкретного переопределения этого метода.</span><span class="sxs-lookup"><span data-stu-id="7efc6-236">Calling <xref:System.Xaml.XamlMember.Invoker%2A> invokes <xref:System.Xaml.XamlMember.LookupInvoker%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAmbient">
      <MemberSignature Language="C#" Value="public bool IsAmbient { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAmbient" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsAmbient" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAmbient As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAmbient { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7efc6-237">Получает значение, указывающее, представляет ли этот объект <see cref="T:System.Xaml.XamlMember" /> внешнее свойство.</span><span class="sxs-lookup"><span data-stu-id="7efc6-237">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is reported as an ambient property.</span></span></summary>
        <value>
          <span data-ttu-id="7efc6-238">Значение <see langword="true" />, если об объекте <see cref="T:System.Xaml.XamlMember" /> сообщается, что он является внешним свойством; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-238"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is reported as an ambient property; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-239">Вызов <xref:System.Xaml.XamlMember.IsAmbient%2A> вызывает <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> или конкретного переопределения этого метода.</span><span class="sxs-lookup"><span data-stu-id="7efc6-239">Calling <xref:System.Xaml.XamlMember.IsAmbient%2A> invokes <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> or a specific override of that method.</span></span> <span data-ttu-id="7efc6-240">Это происходит в реализациях, когда логика начального внутреннего отражения не уже задал сведения.</span><span class="sxs-lookup"><span data-stu-id="7efc6-240">This behavior occurs in implementations where the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="7efc6-241">Проверка внешних свойств обычно являются частью логики обработки XAML, чтобы убедиться в том, что объекты и значения, которые зависят от использования окружения для уточнения типа может работать неправильно.</span><span class="sxs-lookup"><span data-stu-id="7efc6-241">Checking for ambient properties is are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly.</span></span> <span data-ttu-id="7efc6-242">API-интерфейсы служб XAML .NET Framework и контекст схемы XAML по умолчанию заполняет значение в зависимости от однозначного соответствия с <xref:System.Windows.Markup.AmbientAttribute>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-242">The .NET Framework XAML Services APIs and the default XAML schema context populates this value based on attribution with <xref:System.Windows.Markup.AmbientAttribute>.</span></span> <span data-ttu-id="7efc6-243">Реализация по умолчанию <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> использует этот существующие <xref:System.Windows.Markup.AmbientAttribute> прием и она вернет `true` Если <xref:System.Windows.Markup.AmbientAttribute> существует в объявлении члена.</span><span class="sxs-lookup"><span data-stu-id="7efc6-243">The default implementation of <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> uses this existing <xref:System.Windows.Markup.AmbientAttribute> technique, and it returns `true` if <xref:System.Windows.Markup.AmbientAttribute> exists on a member declaration.</span></span>  
  
 <span data-ttu-id="7efc6-244"><xref:System.Windows.Markup.AmbientAttribute> найти членов из нескольких типов WPF, которые включают <xref:System.Windows.Application>, <xref:System.Windows.Setter>, и <xref:System.Windows.Style>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-244"><xref:System.Windows.Markup.AmbientAttribute> is found on members of several WPF types, which include <xref:System.Windows.Application>, <xref:System.Windows.Setter>, and <xref:System.Windows.Style>.</span></span> <span data-ttu-id="7efc6-245">Он находится на <xref:System.Windows.ResourceDictionary> тип, который описывающая, что любой элемент, использует <xref:System.Windows.ResourceDictionary> как его тип должен считаться окружающим даже если специально не установлен атрибут элемента.</span><span class="sxs-lookup"><span data-stu-id="7efc6-245">It is also found on the <xref:System.Windows.ResourceDictionary> type, which connotes that any member that uses <xref:System.Windows.ResourceDictionary> as its type should be considered ambient even if the member is not specifically attributed.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.AmbientAttribute" />
      </Docs>
    </Member>
    <Member MemberName="IsAttachable">
      <MemberSignature Language="C#" Value="public bool IsAttachable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAttachable" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsAttachable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAttachable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAttachable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7efc6-246">Получает значение, указывающее, является ли этот объект <see cref="T:System.Xaml.XamlMember" /> присоединяемым членом.</span><span class="sxs-lookup"><span data-stu-id="7efc6-246">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is an attachable member.</span></span></summary>
        <value>
          <span data-ttu-id="7efc6-247">Значение <see langword="true" />, если этот объект <see cref="T:System.Xaml.XamlMember" /> является присоединяемым членом; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-247"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is an attachable member; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-248"><xref:System.Xaml.XamlMember.IsAttachable%2A> Значение инициализируется в зависимости от того, какой конструктор использовался для создания <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-248">The <xref:System.Xaml.XamlMember.IsAttachable%2A> value is initialized based on which constructor was used to construct a <xref:System.Xaml.XamlMember>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDirective">
      <MemberSignature Language="C#" Value="public bool IsDirective { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDirective" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsDirective" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDirective As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDirective { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7efc6-249">Получает значение, указывающее, является ли этот объект <see cref="T:System.Xaml.XamlMember" /> директивой XAML.</span><span class="sxs-lookup"><span data-stu-id="7efc6-249">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is a XAML directive.</span></span></summary>
        <value>
          <span data-ttu-id="7efc6-250">Значение <see langword="true" />, если объект <see cref="T:System.Xaml.XamlMember" /> является директивой XAML; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-250"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is a XAML directive; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-251"><xref:System.Xaml.XamlMember.IsDirective%2A> Значение инициализируется в зависимости от того, какой конструктор использовался для создания <xref:System.Xaml.XamlMember>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-251">The <xref:System.Xaml.XamlMember.IsDirective%2A> value is initialized based on which constructor was used to construct a <xref:System.Xaml.XamlMember>.</span></span> <span data-ttu-id="7efc6-252">Базовый <xref:System.Xaml.XamlMember> конструкторы инициализируют, чтобы <xref:System.Xaml.XamlMember.IsDirective%2A> — `false`.</span><span class="sxs-lookup"><span data-stu-id="7efc6-252">The base <xref:System.Xaml.XamlMember> constructors initialize so that <xref:System.Xaml.XamlMember.IsDirective%2A> is `false`.</span></span> <span data-ttu-id="7efc6-253">Тем не менее <xref:System.Xaml.XamlDirective> класса ( <xref:System.Xaml.XamlMember> производный класс) инициализирует, чтобы <xref:System.Xaml.XamlMember.IsDirective%2A> — `true`.</span><span class="sxs-lookup"><span data-stu-id="7efc6-253">However, the <xref:System.Xaml.XamlDirective> class (a <xref:System.Xaml.XamlMember> derived class) initializes so that <xref:System.Xaml.XamlMember.IsDirective%2A> is `true`.</span></span>  
  
 <span data-ttu-id="7efc6-254">Если нужно включить в отчет <xref:System.Xaml.XamlMember.IsDirective%2A> как `true` для вызова пользовательского класса схемы XAML для элементов XAML, убедитесь в том, являются производными от <xref:System.Xaml.XamlDirective> , так как это не единственный способ включить это поведение.</span><span class="sxs-lookup"><span data-stu-id="7efc6-254">If you want to report <xref:System.Xaml.XamlMember.IsDirective%2A> as `true` to callers of a custom XAML schema class for XAML members, make sure you derive from <xref:System.Xaml.XamlDirective> because that is the only way to enable that behavior.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsEvent">
      <MemberSignature Language="C#" Value="public bool IsEvent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEvent" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsEvent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsEvent As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsEvent { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7efc6-255">Получает значение, указывающее, действительно ли этот объект <see cref="T:System.Xaml.XamlMember" /> представляет член события.</span><span class="sxs-lookup"><span data-stu-id="7efc6-255">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents an event member.</span></span></summary>
        <value>
          <span data-ttu-id="7efc6-256">Значение <see langword="true" />, если этот объект <see cref="T:System.Xaml.XamlMember" /> представляет событие; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-256"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents an event; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-257">Вызов <xref:System.Xaml.XamlMember.IsEvent%2A> вызывает <xref:System.Xaml.XamlMember.LookupIsEvent%2A> или конкретного переопределения этого метода.</span><span class="sxs-lookup"><span data-stu-id="7efc6-257">Calling <xref:System.Xaml.XamlMember.IsEvent%2A> invokes <xref:System.Xaml.XamlMember.LookupIsEvent%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameValid">
      <MemberSignature Language="C#" Value="public bool IsNameValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameValid" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsNameValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameValid { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7efc6-258">Получает значение, указывающее, инициализирован ли этот объект <see cref="T:System.Xaml.XamlMember" /> допустимой строкой <see langword="xamlName" /> в качестве значения его свойства <see cref="P:System.Xaml.XamlMember.Name" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-258">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> is initialized with a valid <see langword="xamlName" /> string as its <see cref="P:System.Xaml.XamlMember.Name" />.</span></span></summary>
        <value>
          <span data-ttu-id="7efc6-259">Значение <see langword="true" />, если этот объект <see cref="T:System.Xaml.XamlMember" /> инициализирован допустимой строкой <see langword="xamlName" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-259"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> is initialized with a valid <see langword="xamlName" /> string; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7efc6-260">Получает значение, указывающее, действительно ли этот объект <see cref="T:System.Xaml.XamlMember" /> представляет член, доступный только для чтения.</span><span class="sxs-lookup"><span data-stu-id="7efc6-260">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a read-only member.</span></span></summary>
        <value>
          <span data-ttu-id="7efc6-261">Значение <see langword="true" />, если этот объект <see cref="T:System.Xaml.XamlMember" /> представляет член, доступный только для чтения; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-261"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a read-only member; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-262">Вызов <xref:System.Xaml.XamlMember.IsReadOnly%2A> вызывает <xref:System.Xaml.XamlMember.LookupIsReadOnly%2A> или конкретного переопределения этого метода.</span><span class="sxs-lookup"><span data-stu-id="7efc6-262">Calling <xref:System.Xaml.XamlMember.IsReadOnly%2A> invokes <xref:System.Xaml.XamlMember.LookupIsReadOnly%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadPublic">
      <MemberSignature Language="C#" Value="public bool IsReadPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadPublic" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsReadPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadPublic { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7efc6-263">Получает значение, указывающее, представляет ли объект <see cref="T:System.Xaml.XamlMember" /> член с доступным для вызова открытым методом доступа <see langword="get" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-263">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a member with a callable public <see langword="get" /> accessor.</span></span></summary>
        <value>
          <span data-ttu-id="7efc6-264">Значение <see langword="true" />, если этот объект <see cref="T:System.Xaml.XamlMember" /> представляет доступный для вызова открытый метод доступа <see langword="get" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-264"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a callable public <see langword="get" /> accessor; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-265"><xref:System.Xaml.XamlMember.IsReadPublic%2A> Значение проверок, будет ли <xref:System.Xaml.XamlMember.DeclaringType%2A> является открытым.</span><span class="sxs-lookup"><span data-stu-id="7efc6-265">The <xref:System.Xaml.XamlMember.IsReadPublic%2A> value checks whether the <xref:System.Xaml.XamlMember.DeclaringType%2A> is public.</span></span> <span data-ttu-id="7efc6-266">Если <xref:System.Xaml.XamlMember.DeclaringType%2A> не является открытым, `get` метод доступа не может быть вызван удобный и <xref:System.Xaml.XamlMember.IsReadPublic%2A> возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="7efc6-266">If <xref:System.Xaml.XamlMember.DeclaringType%2A> is nonpublic, the `get` accessor is not callable in a practical way, and <xref:System.Xaml.XamlMember.IsReadPublic%2A> returns `false`.</span></span>  
  
 <span data-ttu-id="7efc6-267">Вызов <xref:System.Xaml.XamlMember.IsReadPublic%2A> вызывает <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> или конкретного переопределения этого метода.</span><span class="sxs-lookup"><span data-stu-id="7efc6-267">Calling <xref:System.Xaml.XamlMember.IsReadPublic%2A> invokes <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> or a specific override of that method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7efc6-268"><xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> Метод является виртуальным и поэтому могут переопределяться.</span><span class="sxs-lookup"><span data-stu-id="7efc6-268">The <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="7efc6-269">Переопределение имеет возможность изменить (намеренно или иным способом) доступа член XAML, чтобы он больше не согласовывался ожидаемым способом с доступа к информации о системе типов из его базового объявления CLR.</span><span class="sxs-lookup"><span data-stu-id="7efc6-269">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="7efc6-270">Для проверок уровни доступа к критическим с точки зрения безопасности используйте базовый тип CLR.</span><span class="sxs-lookup"><span data-stu-id="7efc6-270">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnknown">
      <MemberSignature Language="C#" Value="public bool IsUnknown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnknown" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsUnknown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUnknown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnknown { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7efc6-271">Получает значение, указывающее, является ли этот член неразрешимым в базовой системе, используемой для разрешения типов и членов.</span><span class="sxs-lookup"><span data-stu-id="7efc6-271">Gets a value that indicates whether the member is not resolvable by the backing system that is used for type and member resolution.</span></span></summary>
        <value>
          <span data-ttu-id="7efc6-272">Значение <see langword="true" />, если этот член невозможно разрешить; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-272"><see langword="true" /> if the member is not resolvable; <see langword="false" /> if the member is resolvable.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-273">Объект <xref:System.Xaml.XamlMember> , создаваемое с <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> подпись возвращает `true` для <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-273">A <xref:System.Xaml.XamlMember> that is constructed with the <xref:System.Xaml.XamlMember.%23ctor%28System.String%2CSystem.Xaml.XamlType%2CSystem.Boolean%29> signature returns `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="7efc6-274">Для пути загрузки, который включает в себя <xref:System.Xaml.XamlObjectWriter>, <xref:System.Xaml.XamlMember> с `true` для <xref:System.Xaml.XamlMember.IsUnknown%2A> не может быть записан в граф объектов.</span><span class="sxs-lookup"><span data-stu-id="7efc6-274">For a load path that involves <xref:System.Xaml.XamlObjectWriter>, a <xref:System.Xaml.XamlMember> with `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> cannot be written into an object graph.</span></span> <span data-ttu-id="7efc6-275">В реализации по умолчанию в API служб XAML .NET Framework <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> вызова создается исключение <xref:System.Xaml.XamlObjectWriterException> при соответствующие <xref:System.Xaml.XamlMember> отчеты `true` для <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-275">Under the default implementations in .NET Framework XAML Services APIs, the <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A?displayProperty=nameWithType> call throws a <xref:System.Xaml.XamlObjectWriterException> when the relevant <xref:System.Xaml.XamlMember> reports `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span>  
  
 <span data-ttu-id="7efc6-276">Не следует создавать <xref:System.Xaml.XamlMember> , имеет значение `true` для <xref:System.Xaml.XamlMember.IsUnknown%2A> Если ваша реализация может обрабатывать исключения из <xref:System.Xaml.XamlObjectWriter>, или у вас есть другие способы настройки <xref:System.Xaml.XamlObjectWriter> поведение.</span><span class="sxs-lookup"><span data-stu-id="7efc6-276">You should not construct a <xref:System.Xaml.XamlMember> that has a value of `true` for <xref:System.Xaml.XamlMember.IsUnknown%2A> unless your implementation can handle the exceptions from <xref:System.Xaml.XamlObjectWriter>, or you have other ways to adjust the <xref:System.Xaml.XamlObjectWriter> behavior.</span></span>  
  
 <span data-ttu-id="7efc6-277">Вызов <xref:System.Xaml.XamlMember.IsUnknown%2A> вызывает <xref:System.Xaml.XamlMember.LookupIsUnknown%2A> или конкретного переопределения этого метода.</span><span class="sxs-lookup"><span data-stu-id="7efc6-277">Calling <xref:System.Xaml.XamlMember.IsUnknown%2A> invokes <xref:System.Xaml.XamlMember.LookupIsUnknown%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWriteOnly">
      <MemberSignature Language="C#" Value="public bool IsWriteOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWriteOnly" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsWriteOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWriteOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWriteOnly { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7efc6-278">Получает значение, указывающее, действительно ли этот объект <see cref="T:System.Xaml.XamlMember" /> представляет член, доступный только для записи.</span><span class="sxs-lookup"><span data-stu-id="7efc6-278">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a write-only member.</span></span></summary>
        <value>
          <span data-ttu-id="7efc6-279">Значение <see langword="true" />, если этот объект <see cref="T:System.Xaml.XamlMember" /> представляет член, доступный только для записи; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-279"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a write-only member; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-280">Вызов <xref:System.Xaml.XamlMember.IsWriteOnly%2A> вызывает <xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A> или конкретного переопределения этого метода.</span><span class="sxs-lookup"><span data-stu-id="7efc6-280">Calling <xref:System.Xaml.XamlMember.IsWriteOnly%2A> invokes <xref:System.Xaml.XamlMember.LookupIsWriteOnly%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsWritePublic">
      <MemberSignature Language="C#" Value="public bool IsWritePublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWritePublic" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.IsWritePublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWritePublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWritePublic { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7efc6-281">Получает значение, указывающее, представляет ли объект <see cref="T:System.Xaml.XamlMember" /> член с доступным для вызова открытым методом доступа <see langword="set" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-281">Gets a value that indicates whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that has a callable public <see langword="set" /> accessor.</span></span></summary>
        <value>
          <span data-ttu-id="7efc6-282">Значение <see langword="true" />, если этот объект <see cref="T:System.Xaml.XamlMember" /> представляет доступный для вызова открытый метод доступа <see langword="set" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-282"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a callable public <see langword="set" /> accessor; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-283"><xref:System.Xaml.XamlMember.IsWritePublic%2A> Значение считает ли <xref:System.Xaml.XamlMember.DeclaringType%2A> является общим как часть определения.</span><span class="sxs-lookup"><span data-stu-id="7efc6-283">The <xref:System.Xaml.XamlMember.IsWritePublic%2A> value considers whether the <xref:System.Xaml.XamlMember.DeclaringType%2A> is public as part of the determination.</span></span> <span data-ttu-id="7efc6-284">Если <xref:System.Xaml.XamlMember.DeclaringType%2A> не является открытым, `set` метод доступа не может быть вызван удобный и <xref:System.Xaml.XamlMember.IsWritePublic%2A> возвращает `false`.</span><span class="sxs-lookup"><span data-stu-id="7efc6-284">If <xref:System.Xaml.XamlMember.DeclaringType%2A> is nonpublic, the `set` accessor is not callable in a practical way, and <xref:System.Xaml.XamlMember.IsWritePublic%2A> returns `false`.</span></span>  
  
 <span data-ttu-id="7efc6-285">Вызов <xref:System.Xaml.XamlMember.IsWritePublic%2A> вызывает <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> или конкретного переопределения этого метода.</span><span class="sxs-lookup"><span data-stu-id="7efc6-285">Calling <xref:System.Xaml.XamlMember.IsWritePublic%2A> invokes <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> or a specific override of that method.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7efc6-286"><xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> Метод является виртуальным и поэтому могут переопределяться.</span><span class="sxs-lookup"><span data-stu-id="7efc6-286">The <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="7efc6-287">Переопределение имеет возможность изменить (намеренно или иным способом) доступа член XAML, чтобы он больше не согласовывался ожидаемым способом с доступа к информации о системе типов из его базового объявления CLR.</span><span class="sxs-lookup"><span data-stu-id="7efc6-287">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="7efc6-288">Для проверок уровни доступа к критическим с точки зрения безопасности используйте базовый тип CLR.</span><span class="sxs-lookup"><span data-stu-id="7efc6-288">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCustomAttributeProvider">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupCustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupCustomAttributeProvider () As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::ICustomAttributeProvider ^ LookupCustomAttributeProvider();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7efc6-289">При реализации в производном классе возвращает реализацию класса <see cref="T:System.Reflection.ICustomAttributeProvider" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-289">When implemented in a derived class, returns an <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span></span></summary>
        <returns><span data-ttu-id="7efc6-290">Реализация <see cref="T:System.Reflection.ICustomAttributeProvider" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-290">An <see cref="T:System.Reflection.ICustomAttributeProvider" /> implementation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-291">Переопределите этот метод для предоставления внутреннее отражение альтернативным способом получения значений атрибутов CLR.</span><span class="sxs-lookup"><span data-stu-id="7efc6-291">Override this method to provide the internal reflection with an alternative way to obtain CLR attribute values.</span></span> <span data-ttu-id="7efc6-292">В отсутствие переопределения внутренний рефлектор использует типичные логику отражения среды CLR, например вызовы <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-292">In the absence of an override, the internal reflector uses typical CLR reflection logic such as calls to <xref:System.Reflection.CustomAttributeData.GetCustomAttributes%2A>.</span></span>  
  
 <span data-ttu-id="7efc6-293">Реализация по умолчанию возвращает значение `null`.</span><span class="sxs-lookup"><span data-stu-id="7efc6-293">The default implementation returns `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupDeferringLoader">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupDeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupDeferringLoader () As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ LookupDeferringLoader();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7efc6-294">Возвращает объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, используемый для отложенной загрузки объектов, объявленных в XAML.</span><span class="sxs-lookup"><span data-stu-id="7efc6-294">Returns a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for deferred loading of XAML declared objects.</span></span></summary>
        <returns><span data-ttu-id="7efc6-295">Объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.Xaml.XamlDeferringLoader" /> на универсальный класс.</span><span class="sxs-lookup"><span data-stu-id="7efc6-295">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> that has a <see cref="T:System.Xaml.XamlDeferringLoader" /> constraint on the generic.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-296">Этот метод вызывается, когда вызывающий объект получает значение из <xref:System.Xaml.XamlMember.DeferringLoader%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="7efc6-296">This method is invoked when a caller gets a value from the <xref:System.Xaml.XamlMember.DeferringLoader%2A> property.</span></span> <span data-ttu-id="7efc6-297">Переопределите этот метод, если требуется <xref:System.Xaml.XamlMember.DeferringLoader%2A> для возврата значение, отличное от значения, включаемые внутреннего отражения по умолчанию, и если предоставляется пользовательский <xref:System.Xaml.Schema.XamlMemberInvoker> сведения.</span><span class="sxs-lookup"><span data-stu-id="7efc6-297">Override this method if you want <xref:System.Xaml.XamlMember.DeferringLoader%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.</span></span>  
  
 <span data-ttu-id="7efc6-298">Реализация по умолчанию возвращает объект, либо путем чтения <xref:System.Windows.Markup.XamlDeferLoadAttribute> или с помощью <xref:System.Xaml.XamlDeferringLoader> из объявляющего типа.</span><span class="sxs-lookup"><span data-stu-id="7efc6-298">The default implementation returns an object either by reading <xref:System.Windows.Markup.XamlDeferLoadAttribute> or using a <xref:System.Xaml.XamlDeferringLoader> from the declaring type.</span></span> <span data-ttu-id="7efc6-299">Если ни один объект не доступен, этот метод может возвращать `null`.</span><span class="sxs-lookup"><span data-stu-id="7efc6-299">If neither object is available, this method might return `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DeferringLoader" />
      </Docs>
    </Member>
    <Member MemberName="LookupDependsOn">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt; LookupDependsOn ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlMember&gt; LookupDependsOn() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupDependsOn" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupDependsOn () As IList(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlMember ^&gt; ^ LookupDependsOn();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7efc6-300">Возвращает список объектов <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-300">Returns a list of <see cref="T:System.Xaml.XamlMember" /> objects.</span></span> <span data-ttu-id="7efc6-301">Элементы списка сообщают о членах, в которых существуют отношения зависимости для порядка инициализации относительно данного объекта <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-301">Items in the list report the members where dependency relationships for initialization order exist relative to this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="7efc6-302">Список объектов <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-302">A list of <see cref="T:System.Xaml.XamlMember" /> objects.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-303">Этот метод вызывается, когда вызывающий объект получает значение из <xref:System.Xaml.XamlMember.DependsOn%2A> свойство.</span><span class="sxs-lookup"><span data-stu-id="7efc6-303">This method is invoked when a caller gets a value from the <xref:System.Xaml.XamlMember.DependsOn%2A> property.</span></span> <span data-ttu-id="7efc6-304">Переопределите этот метод, если требуется <xref:System.Xaml.XamlMember.DependsOn%2A> для возврата значение, отличное от значения, включаемые внутреннего отражения по умолчанию, и если предоставляется пользовательский <xref:System.Xaml.Schema.XamlMemberInvoker> сведения.</span><span class="sxs-lookup"><span data-stu-id="7efc6-304">Override this method if you want <xref:System.Xaml.XamlMember.DependsOn%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.</span></span>  
  
 <span data-ttu-id="7efc6-305">Этот случай с атрибута реализации чтения и записи WPF XAML <xref:System.Windows.Markup.DependsOnAttribute>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-305">The WPF XAML reader and writer implementations attribute this case with <xref:System.Windows.Markup.DependsOnAttribute>.</span></span> <span data-ttu-id="7efc6-306">Реализация по умолчанию использует этот существующий <xref:System.Windows.Markup.DependsOnAttribute> метод.</span><span class="sxs-lookup"><span data-stu-id="7efc6-306">The default implementation uses this existing <xref:System.Windows.Markup.DependsOnAttribute> technique.</span></span>  
  
 <span data-ttu-id="7efc6-307">Переопределите этот метод, если вы не используете <xref:System.Windows.Markup.DependsOnAttribute> для этой цели и намерены заменить этот прием для указания порядка обработки свойств собственной методикой.</span><span class="sxs-lookup"><span data-stu-id="7efc6-307">Override this method if you are not using <xref:System.Windows.Markup.DependsOnAttribute> for this purpose and intend to replace that technique for indicating property processing order with your own technique.</span></span> <span data-ttu-id="7efc6-308">Если вы не собираетесь поддерживать порядка обработки свойств, можно использовать реализация по умолчанию, поскольку он не возвращает результатов, который подходит.</span><span class="sxs-lookup"><span data-stu-id="7efc6-308">If you do not intend to support a property processing order, you can use the default implementation because it returns no results, which is appropriate.</span></span>  
  
 <span data-ttu-id="7efc6-309">Список доступен только для чтения.</span><span class="sxs-lookup"><span data-stu-id="7efc6-309">The list is read-only.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.DependsOn" />
      </Docs>
    </Member>
    <Member MemberName="LookupInvoker">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlMemberInvoker LookupInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlMemberInvoker LookupInvoker() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupInvoker" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupInvoker () As XamlMemberInvoker" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlMemberInvoker ^ LookupInvoker();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlMemberInvoker</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7efc6-310">Возвращает объект <see cref="T:System.Xaml.Schema.XamlMemberInvoker" />, связанный с данным типом <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-310">Returns a <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="7efc6-311">Сведения объекта <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> для этого объекта <see cref="T:System.Xaml.XamlMember" /> или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-311">The <see cref="T:System.Xaml.Schema.XamlMemberInvoker" /> information for this <see cref="T:System.Xaml.XamlMember" />; or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-312">Этот метод вызывается путем вызова метода <xref:System.Xaml.XamlMember.Invoker%2A>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-312">This method is invoked by calls to <xref:System.Xaml.XamlMember.Invoker%2A>.</span></span>  
  
 <span data-ttu-id="7efc6-313">Реализация по умолчанию не требует <xref:System.Xaml.XamlMember> создаваться с помощью одного из конструкторов, передайте первоначальный <xref:System.Xaml.Schema.XamlMemberInvoker>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-313">The default implementation does not require that a <xref:System.Xaml.XamlMember> be constructed by using one of the constructors that pass an initial <xref:System.Xaml.Schema.XamlMemberInvoker>.</span></span> <span data-ttu-id="7efc6-314">Тем не менее <xref:System.Xaml.XamlMember.UnderlyingMember%2A> значение должно существовать для <xref:System.Xaml.XamlMember>; в противном случае реализация по умолчанию возвращает `null`.</span><span class="sxs-lookup"><span data-stu-id="7efc6-314">However, an <xref:System.Xaml.XamlMember.UnderlyingMember%2A> value must exist for the <xref:System.Xaml.XamlMember>; otherwise, the default implementation returns `null`.</span></span>  
  
 <span data-ttu-id="7efc6-315">Переопределите этот метод, если вы наследуете от <xref:System.Xaml.Schema.XamlMemberInvoker> и должны возвращать производного класса.</span><span class="sxs-lookup"><span data-stu-id="7efc6-315">Override this method if you also derive from <xref:System.Xaml.Schema.XamlMemberInvoker> and intend to return the derived class.</span></span> <span data-ttu-id="7efc6-316">Если возвращается `null`, <xref:System.Xaml.XamlMember.Invoker%2A> возвращает <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> вызывающим объектам.</span><span class="sxs-lookup"><span data-stu-id="7efc6-316">If you return `null`, <xref:System.Xaml.XamlMember.Invoker%2A> returns <xref:System.Xaml.Schema.XamlMemberInvoker.UnknownInvoker%2A?displayProperty=nameWithType> to callers.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Invoker" />
        <altmember cref="T:System.Xaml.Schema.XamlMemberInvoker" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsAmbient">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsAmbient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsAmbient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsAmbient" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsAmbient () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsAmbient();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7efc6-317">Возвращает значение, указывающее, рассматривается ли данный объект <see cref="T:System.Xaml.XamlMember" /> как внешнее свойство.</span><span class="sxs-lookup"><span data-stu-id="7efc6-317">Returns whether this <see cref="T:System.Xaml.XamlMember" /> is reported as an ambient property.</span></span></summary>
        <returns>
          <span data-ttu-id="7efc6-318">Значение <see langword="true" />, если необходимо объявить этот объект <see cref="T:System.Xaml.XamlMember" /> внешним свойством; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-318"><see langword="true" /> to report this <see cref="T:System.Xaml.XamlMember" /> as an ambient property; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-319">Этот метод вызывается внутренних вызовов, которые проверяют окружения сведения о свойстве XAML.</span><span class="sxs-lookup"><span data-stu-id="7efc6-319">This method is invoked by internal calls that check for ambient XAML property information.</span></span> <span data-ttu-id="7efc6-320">Поведение внешнее свойство учитывается в поведении открытого API средств чтения и записи XAML.</span><span class="sxs-lookup"><span data-stu-id="7efc6-320">Ambient property behavior is accounted for in the public API behavior of XAML readers and XAML writers.</span></span> <span data-ttu-id="7efc6-321">Внутренние вызовы, которые ссылаются на <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> обычно являются частью логики обработки XAML, чтобы убедиться в том, что объекты и значения, которые зависят от использования окружения для уточнения типа может работать неправильно.</span><span class="sxs-lookup"><span data-stu-id="7efc6-321">The internal calls that reference <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> are usually part of XAML processing logic to make sure that objects and values that rely on ambient usage for type qualification can function correctly.</span></span> <span data-ttu-id="7efc6-322">Реализация по умолчанию служб XAML .NET Framework использует атрибуты для получения этих сведений из отражения резервных типов среды CLR.</span><span class="sxs-lookup"><span data-stu-id="7efc6-322">The default .NET Framework XAML Services implementation uses CLR attributing to obtain this information from reflection over backing types.</span></span> <span data-ttu-id="7efc6-323">В частности, реализация по умолчанию проверяет наличие <xref:System.Windows.Markup.AmbientAttribute> и возвращает `true` для <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> Если <xref:System.Windows.Markup.AmbientAttribute> существует для определения члена.</span><span class="sxs-lookup"><span data-stu-id="7efc6-323">Specifically, the default implementation checks for <xref:System.Windows.Markup.AmbientAttribute> and returns `true` for <xref:System.Xaml.XamlMember.LookupIsAmbient%2A> if <xref:System.Windows.Markup.AmbientAttribute> exists on a member definition.</span></span>  
  
 <span data-ttu-id="7efc6-324">Переопределите этот метод, если вы не используете <xref:System.Windows.Markup.AmbientAttribute> для этой цели и намерены заменить этот прием для указания свойства окружения XAML с помощью собственного метода.</span><span class="sxs-lookup"><span data-stu-id="7efc6-324">Override this method if you are not using <xref:System.Windows.Markup.AmbientAttribute> for this purpose and intend to replace that technique for indicating ambient XAML properties with your own technique.</span></span>  
  
 <span data-ttu-id="7efc6-325">Пример API-интерфейсы с WPF, атрибут с <xref:System.Windows.Markup.AmbientAttribute> , <xref:System.Windows.Trigger.Property%2A?displayProperty=nameWithType> и <xref:System.Windows.Style.BasedOn%2A?displayProperty=nameWithType>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-325">Example APIs from WPF that attribute with <xref:System.Windows.Markup.AmbientAttribute> are <xref:System.Windows.Trigger.Property%2A?displayProperty=nameWithType> and <xref:System.Windows.Style.BasedOn%2A?displayProperty=nameWithType>.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Windows.Markup.AmbientAttribute" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsEvent">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsEvent () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsEvent();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7efc6-326">Возвращает значение, указывающее, представляет ли данный объект <see cref="T:System.Xaml.XamlMember" /> событие.</span><span class="sxs-lookup"><span data-stu-id="7efc6-326">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents an event.</span></span></summary>
        <returns>
          <span data-ttu-id="7efc6-327">Значение <see langword="true" />, если необходимо объявить, что этот объект <see cref="T:System.Xaml.XamlMember" /> представляет событие; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-327"><see langword="true" /> to report that this <see cref="T:System.Xaml.XamlMember" /> represents an event; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-328">Реализация проверок по умолчанию ли <xref:System.Xaml.XamlMember.UnderlyingMember%2A> относится к типу <xref:System.Reflection.EventInfo>и если это так, возвращает `true`.</span><span class="sxs-lookup"><span data-stu-id="7efc6-328">The default implementation checks whether <xref:System.Xaml.XamlMember.UnderlyingMember%2A> is of type <xref:System.Reflection.EventInfo>, and if it is, returns `true`.</span></span>  
  
 <span data-ttu-id="7efc6-329">Этот метод вызывается, когда вызывающий объект получает значение из <xref:System.Xaml.XamlMember.IsEvent%2A>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-329">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsEvent%2A>.</span></span> <span data-ttu-id="7efc6-330">Переопределите этот метод, если вы хотите сообщить о результатах универсальный для всего <xref:System.Xaml.XamlMember> производного класса, или если специализированные метаданные, можно интерпретировать для определения XAML тип представления систем для каждого случая.</span><span class="sxs-lookup"><span data-stu-id="7efc6-330">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsEvent" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadOnly">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsReadOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsReadOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsReadOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsReadOnly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7efc6-331">Возвращает значение, указывающее, представляет ли объект <see cref="T:System.Xaml.XamlMember" /> требуемое свойство только для чтения.</span><span class="sxs-lookup"><span data-stu-id="7efc6-331">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents an intended read-only property.</span></span></summary>
        <returns>
          <span data-ttu-id="7efc6-332">Значение <see langword="true" />, если необходимо объявить, что этот объект <see cref="T:System.Xaml.XamlMember" /> представляет ожидаемое свойство, доступное только для чтения; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-332"><see langword="true" /> to report this <see cref="T:System.Xaml.XamlMember" /> as an intended read-only property; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-333">Реализация по умолчанию возвращает `true` Если <xref:System.Xaml.XamlMember.UnderlyingMember%2A> существует, но открытый `set` доступа не существует для него, что определяется внутреннего отражения.</span><span class="sxs-lookup"><span data-stu-id="7efc6-333">The default implementation returns `true` if <xref:System.Xaml.XamlMember.UnderlyingMember%2A> exists, but a public `set` accessor does not exist for it, as determined by internal reflection.</span></span>  
  
 <span data-ttu-id="7efc6-334">Этот метод вызывается, когда вызывающий объект получает значение из <xref:System.Xaml.XamlMember.IsReadOnly%2A>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-334">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsReadOnly%2A>.</span></span> <span data-ttu-id="7efc6-335">Переопределите этот метод, если вы хотите сообщить о результатах универсальный для всего <xref:System.Xaml.XamlMember> производного класса, или если специализированные метаданные, можно интерпретировать для определения XAML тип представления систем для каждого случая.</span><span class="sxs-lookup"><span data-stu-id="7efc6-335">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available that can be interpreted to determine XAML type system representations on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsReadPublic">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsReadPublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsReadPublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsReadPublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsReadPublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsReadPublic();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7efc6-336">Возвращает значение, указывающее, представляет ли объект <see cref="T:System.Xaml.XamlMember" /> свойство, имеющее открытый метод доступа <see langword="get" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-336">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a property that has a public <see langword="get" /> accessor.</span></span></summary>
        <returns>
          <span data-ttu-id="7efc6-337">Значение <see langword="true" />, если этот объект <see cref="T:System.Xaml.XamlMember" /> представляет свойство, имеющее открытый метод доступа <see langword="get" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-337"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a property that has a public <see langword="get" /> accessor; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-338">Реализация по умолчанию возвращает результаты, либо на основе внутреннего отражения, либо отрицательными значениями <xref:System.Xaml.XamlMember.IsWriteOnly%2A>, обработку в указанном порядке.</span><span class="sxs-lookup"><span data-stu-id="7efc6-338">The default implementation returns results based either on internal reflection or the negation of <xref:System.Xaml.XamlMember.IsWriteOnly%2A>, processing in that order.</span></span>  
  
 <span data-ttu-id="7efc6-339"><xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> Возвращает, находится ли сам элемент открытый; он возвращает `true` для открытого члена на nonpublic, объявляющий тип.</span><span class="sxs-lookup"><span data-stu-id="7efc6-339"><xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> returns whether the member itself is public; it returns `true` for a public member on a nonpublic declaring type.</span></span> <span data-ttu-id="7efc6-340">Используйте <xref:System.Xaml.XamlMember.IsReadPublic%2A> вместо этого, если требуется, чтобы учитывать видимость объявляющего типа.</span><span class="sxs-lookup"><span data-stu-id="7efc6-340">Use <xref:System.Xaml.XamlMember.IsReadPublic%2A> instead, if you also want to consider the visibility of the declaring type.</span></span>  
  
 <span data-ttu-id="7efc6-341">Этот метод вызывается, когда вызывающий объект получает значение из <xref:System.Xaml.XamlMember.IsReadPublic%2A>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-341">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsReadPublic%2A>.</span></span> <span data-ttu-id="7efc6-342">Переопределите этот метод, если вы хотите сообщить о результатах универсальный для всего <xref:System.Xaml.XamlMember> производного класса, или если специализированные метаданные, доступные для определение для каждого случая.</span><span class="sxs-lookup"><span data-stu-id="7efc6-342">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7efc6-343"><xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> Метод является виртуальным и поэтому могут переопределяться.</span><span class="sxs-lookup"><span data-stu-id="7efc6-343">The <xref:System.Xaml.XamlMember.LookupIsReadPublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="7efc6-344">Переопределение имеет возможность изменить (намеренно или иным способом) доступа член XAML, чтобы он больше не согласовывался ожидаемым способом с доступа к информации о системе типов из его базового объявления CLR.</span><span class="sxs-lookup"><span data-stu-id="7efc6-344">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="7efc6-345">Для проверок уровни доступа к критическим с точки зрения безопасности используйте базовый тип CLR.</span><span class="sxs-lookup"><span data-stu-id="7efc6-345">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsReadPublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsUnknown">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsUnknown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsUnknown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsUnknown" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsUnknown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsUnknown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7efc6-346">Возвращает значение, указывающее, представляет ли данный объект <see cref="T:System.Xaml.XamlMember" /> член, который не может быть разрешен в базовой системе, используемой для разрешения типов и членов.</span><span class="sxs-lookup"><span data-stu-id="7efc6-346">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that is not resolvable by the backing system that is used for type and member resolution.</span></span></summary>
        <returns>
          <span data-ttu-id="7efc6-347">Значение <see langword="true" />, если данный объект <see cref="T:System.Xaml.XamlMember" /> представляет неразрешимый член; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-347"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a non-resolvable member; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-348">Этот метод может быть вызывается, когда вызывающий объект возвращает значение из <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-348">This method may be invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsUnknown%2A>.</span></span> <span data-ttu-id="7efc6-349">Реализация по умолчанию возвращает результаты, основанного на любом внутреннего отражения или проверке `null` значение <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, обработку в указанном порядке.</span><span class="sxs-lookup"><span data-stu-id="7efc6-349">The default implementation returns results that are based on either internal reflection or checking for a `null` value of <xref:System.Xaml.XamlMember.UnderlyingMember%2A>, processing in that order.</span></span>  
  
 <span data-ttu-id="7efc6-350">Переопределите этот метод, если вы хотите сообщить о результатах универсальный для всего <xref:System.Xaml.XamlMember> производного класса, или если специализированные метаданные, доступные для определение для каждого случая.</span><span class="sxs-lookup"><span data-stu-id="7efc6-350">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsUnknown" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsWriteOnly">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsWriteOnly ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsWriteOnly() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsWriteOnly" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsWriteOnly () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsWriteOnly();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7efc6-351">Возвращает значение, указывающее, действительно ли этот объект <see cref="T:System.Xaml.XamlMember" /> представляет член, имеющий открытый метод доступа <see langword="set" />, но не имеющий открытого метода доступа <see langword="get" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-351">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that has a public <see langword="set" /> accessor but not a public <see langword="get" /> accessor.</span></span></summary>
        <returns>
          <span data-ttu-id="7efc6-352">Значение <see langword="true" />, если этот объект <see cref="T:System.Xaml.XamlMember" /> представляет член, доступный только для записи; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-352"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a write-only member; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-353">Реализация по умолчанию возвращает `true` Если <xref:System.Xaml.XamlMember.UnderlyingMember%2A> существует, имеет открытый `set` метода доступа и закрытого `get` метод доступа, как определено внутреннего отражения.</span><span class="sxs-lookup"><span data-stu-id="7efc6-353">The default implementation returns `true` if an <xref:System.Xaml.XamlMember.UnderlyingMember%2A> exists that has a public `set` accessor and a nonpublic `get` accessor, as determined by internal reflection.</span></span>  
  
 <span data-ttu-id="7efc6-354">Этот метод вызывается, когда вызывающий объект получает значение из <xref:System.Xaml.XamlMember.IsWriteOnly%2A>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-354">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsWriteOnly%2A>.</span></span> <span data-ttu-id="7efc6-355">Переопределите этот метод, если вы хотите сообщить о результатах универсальный для всего <xref:System.Xaml.XamlMember> производного класса, или если специализированные метаданные, доступные для определение для каждого случая.</span><span class="sxs-lookup"><span data-stu-id="7efc6-355">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWriteOnly" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsWritePublic">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsWritePublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsWritePublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupIsWritePublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsWritePublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsWritePublic();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7efc6-356">Возвращает значение, указывающее, действительно ли этот объект <see cref="T:System.Xaml.XamlMember" /> представляет член, имеющий открытый метод доступа <see langword="set" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-356">Returns whether this <see cref="T:System.Xaml.XamlMember" /> represents a member that has a public <see langword="set" /> accessor.</span></span></summary>
        <returns>
          <span data-ttu-id="7efc6-357">Значение <see langword="true" />, если этот объект <see cref="T:System.Xaml.XamlMember" /> представляет член, доступный для записи; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-357"><see langword="true" /> if this <see cref="T:System.Xaml.XamlMember" /> represents a writable member; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-358">Реализация по умолчанию возвращает результаты на основе внутреннего отражения или отрицательными значениями <xref:System.Xaml.XamlMember.IsReadOnly%2A>, обработку в указанном порядке.</span><span class="sxs-lookup"><span data-stu-id="7efc6-358">The default implementation returns results based  either internal reflection or the negation of <xref:System.Xaml.XamlMember.IsReadOnly%2A>, processing in that order.</span></span>  
  
 <span data-ttu-id="7efc6-359">Этот метод вызывается, когда вызывающий объект получает значение из <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-359">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.IsWritePublic%2A>.</span></span> <span data-ttu-id="7efc6-360">Переопределите этот метод, если вы хотите сообщить о результатах универсальный для всего <xref:System.Xaml.XamlMember> производного класса, или если специализированные метаданные, доступные для определение для каждого случая.</span><span class="sxs-lookup"><span data-stu-id="7efc6-360">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7efc6-361"><xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> Метод является виртуальным и поэтому могут переопределяться.</span><span class="sxs-lookup"><span data-stu-id="7efc6-361">The <xref:System.Xaml.XamlMember.LookupIsWritePublic%2A> method is virtual and therefore, can be overridden.</span></span> <span data-ttu-id="7efc6-362">Переопределение имеет возможность изменить (намеренно или иным способом) доступа член XAML, чтобы он больше не согласовывался ожидаемым способом с доступа к информации о системе типов из его базового объявления CLR.</span><span class="sxs-lookup"><span data-stu-id="7efc6-362">The override has the potential to change (maliciously or otherwise) the reported access information of a XAML member so that it no longer aligns in an expected way with the type system access information of its underlying CLR declaration.</span></span> <span data-ttu-id="7efc6-363">Для проверок уровни доступа к критическим с точки зрения безопасности используйте базовый тип CLR.</span><span class="sxs-lookup"><span data-stu-id="7efc6-363">For any security-critical checks of access levels, use the underlying CLR type instead.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.IsWritePublic" />
      </Docs>
    </Member>
    <Member MemberName="LookupMarkupExtensionBracketCharacters">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IReadOnlyDictionary&lt;char,char&gt; LookupMarkupExtensionBracketCharacters ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;char, char&gt; LookupMarkupExtensionBracketCharacters() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupMarkupExtensionBracketCharacters" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupMarkupExtensionBracketCharacters () As IReadOnlyDictionary(Of Char, Char)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ LookupMarkupExtensionBracketCharacters();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.Char,System.Char&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7efc6-364">Возвращает символы открывающей и закрывающей скобок для расширения разметки.</span><span class="sxs-lookup"><span data-stu-id="7efc6-364">Returns the opening and closing bracket characters for a markup extension.</span></span></summary>
        <returns><span data-ttu-id="7efc6-365">Коллекция, содержащая символы открывающих и закрывающих скобок.</span><span class="sxs-lookup"><span data-stu-id="7efc6-365">A collection containing the opening and closing bracket characters.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupTargetType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupTargetType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupTargetType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupTargetType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTargetType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupTargetType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7efc6-366">Возвращает объект <see cref="T:System.Xaml.XamlType" /> того типа, в котором может существовать объект <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-366">Returns the <see cref="T:System.Xaml.XamlType" /> of the type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span></span></summary>
        <returns><span data-ttu-id="7efc6-367">Тип, в котором может существовать объект <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-367">The type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-368">Реализация по умолчанию различаются присоединяемого и неприсоединяемого члены.</span><span class="sxs-lookup"><span data-stu-id="7efc6-368">The default implementation distinguishes between attachable and non-attachable members.</span></span> <span data-ttu-id="7efc6-369">Для неприсоединяемого элементов <xref:System.Xaml.XamlMember.LookupTargetType%2A> всегда возвращает <xref:System.Xaml.XamlMember.DeclaringType%2A>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-369">For non-attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> always returns <xref:System.Xaml.XamlMember.DeclaringType%2A>.</span></span> <span data-ttu-id="7efc6-370">Для прикрепляемые члены <xref:System.Xaml.XamlMember.LookupTargetType%2A> возвращает результат на основании проверки <xref:System.Xaml.XamlMember.UnderlyingMember%2A> тип параметра метода доступа и интерпретирует тип, основанный на контекст схемы XAML.</span><span class="sxs-lookup"><span data-stu-id="7efc6-370">For attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> returns a result based on examining the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> accessor parameter type and interprets that type based on XAML schema context.</span></span>  
  
 <span data-ttu-id="7efc6-371">Этот метод вызывается, когда вызывающий объект получает значение из <xref:System.Xaml.XamlMember.TargetType%2A>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-371">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.TargetType%2A>.</span></span> <span data-ttu-id="7efc6-372">Переопределите этот метод, если вы хотите сообщить о результатах универсальный для всего <xref:System.Xaml.XamlMember> производного класса, или если специализированные метаданные, доступные для определение для каждого случая.</span><span class="sxs-lookup"><span data-stu-id="7efc6-372">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.TargetType" />
      </Docs>
    </Member>
    <Member MemberName="LookupType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7efc6-373">Возвращает объект <see cref="T:System.Xaml.XamlType" /> того типа, который используется данным членом.</span><span class="sxs-lookup"><span data-stu-id="7efc6-373">Returns the <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span></span></summary>
        <returns><span data-ttu-id="7efc6-374">Объект <see cref="T:System.Xaml.XamlType" /> того типа, который используется данным членом.</span><span class="sxs-lookup"><span data-stu-id="7efc6-374">The <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-375">Этот метод вызывается, когда вызывающий объект получает значение из <xref:System.Xaml.XamlMember.Type%2A>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-375">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.Type%2A>.</span></span> <span data-ttu-id="7efc6-376">Переопределите этот метод, если требуется <xref:System.Xaml.XamlMember.Type%2A> для возврата значение, отличное от значения, включаемые внутреннего отражения по умолчанию, и если предоставляется пользовательский <xref:System.Xaml.Schema.XamlMemberInvoker> сведения.</span><span class="sxs-lookup"><span data-stu-id="7efc6-376">Override this method if you want <xref:System.Xaml.XamlMember.Type%2A> to return a value that differs from the value that is enabled by default internal reflection, and if you are also providing custom <xref:System.Xaml.Schema.XamlMemberInvoker> information.</span></span>  
  
 <span data-ttu-id="7efc6-377">Реализация по умолчанию использует разных путей кода и концептуальные значения для возвращаемого <xref:System.Xaml.XamlType> , зависит ли это <xref:System.Xaml.XamlMember> представляет свойство, метод или событие.</span><span class="sxs-lookup"><span data-stu-id="7efc6-377">The default implementation uses different code paths and conceptual meanings for the returned <xref:System.Xaml.XamlType> that is based on whether this <xref:System.Xaml.XamlMember> represents a property, method, or event.</span></span>  
  
-   <span data-ttu-id="7efc6-378">Для свойства, возвращаемый <xref:System.Xaml.XamlType> — тип, который задает свойство или возвращаемое свойство.</span><span class="sxs-lookup"><span data-stu-id="7efc6-378">For a property, the returned <xref:System.Xaml.XamlType> is the type that sets the property or is returned by the property.</span></span>  
  
-   <span data-ttu-id="7efc6-379">Для события, возвращенный <xref:System.Xaml.XamlType> тип обработчика событий (делегат в реализации CLR).</span><span class="sxs-lookup"><span data-stu-id="7efc6-379">For an event, the returned <xref:System.Xaml.XamlType> is the required event handler type (a delegate in a CLR implementation).</span></span>  
  
-   <span data-ttu-id="7efc6-380">Для метода <xref:System.Xaml.XamlType> является тип возвращаемого значения.</span><span class="sxs-lookup"><span data-stu-id="7efc6-380">For a method, <xref:System.Xaml.XamlType> is the return type.</span></span>  
  
 <span data-ttu-id="7efc6-381">В каждом случае контекст схемы XAML используется для определения типа XAML с базовым системным типом.</span><span class="sxs-lookup"><span data-stu-id="7efc6-381">In each case, XAML schema context is used to evaluate the XAML type from the underlying system type.</span></span>  
  
 <span data-ttu-id="7efc6-382">Этот метод вызывается, когда вызывающий объект получает значение из <xref:System.Xaml.XamlMember.Type%2A>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-382">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.Type%2A>.</span></span> <span data-ttu-id="7efc6-383">Переопределите этот метод, если вы хотите сообщить о результатах универсальный для всего <xref:System.Xaml.XamlMember> производного класса, или если специализированные метаданные, доступные для определение для каждого случая.</span><span class="sxs-lookup"><span data-stu-id="7efc6-383">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.Type" />
      </Docs>
    </Member>
    <Member MemberName="LookupTypeConverter">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; LookupTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; LookupTypeConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupTypeConverter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTypeConverter () As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ LookupTypeConverter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7efc6-384">Возвращает реализацию преобразователя типов, связанного с данным объектом <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-384">Returns a type converter implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="7efc6-385">Экземпляр <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.ComponentModel.TypeConverter" /> или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-385">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> instance with <see cref="T:System.ComponentModel.TypeConverter" /> constraint; or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-386">Реализация по умолчанию использует следующую логику и порядок обработки:</span><span class="sxs-lookup"><span data-stu-id="7efc6-386">The default implementation uses the following logic and processing order:</span></span>  
  
-   <span data-ttu-id="7efc6-387">Если присвоение атрибутов существует на уровне элементов (<xref:System.ComponentModel.TypeConverterAttribute>), сведения об атрибутах используется для вызова <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> в контексте схемы XAML.</span><span class="sxs-lookup"><span data-stu-id="7efc6-387">If attributing exists at the member level (<xref:System.ComponentModel.TypeConverterAttribute>), the attribute information is used for a call to <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> against the XAML schema context.</span></span>  
  
-   <span data-ttu-id="7efc6-388">Если <xref:System.Xaml.XamlMember.Type%2A> является допустимым, возвращается преобразователь типов, связанный с типом.</span><span class="sxs-lookup"><span data-stu-id="7efc6-388">If <xref:System.Xaml.XamlMember.Type%2A> is valid, a type converter that is associated with the type is returned.</span></span>  
  
-   <span data-ttu-id="7efc6-389">Если член является событием, возвращается преобразователь типов конкретного события.</span><span class="sxs-lookup"><span data-stu-id="7efc6-389">If the member is an event, an event-specific type converter is returned.</span></span>  
  
 <span data-ttu-id="7efc6-390">Этот метод вызывается, когда вызывающий объект получает значение из <xref:System.Xaml.XamlMember.TypeConverter%2A>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-390">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.TypeConverter%2A>.</span></span> <span data-ttu-id="7efc6-391">Переопределите этот метод, если вы хотите сообщить о результатах универсальный для всего <xref:System.Xaml.XamlMember> производного класса, или если специализированные метаданные, доступные для определение для каждого случая.</span><span class="sxs-lookup"><span data-stu-id="7efc6-391">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.TypeConverter" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingGetter">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MethodInfo LookupUnderlyingGetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MethodInfo LookupUnderlyingGetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingGetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingGetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MethodInfo ^ LookupUnderlyingGetter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7efc6-392">Возвращает метод доступа <see langword="get" />, связанный с данным объектом <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-392">Returns a <see langword="get" /> accessor that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="7efc6-393">Объект <see cref="T:System.Reflection.MethodInfo" /> для связанного метода доступа <see langword="get" /> или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-393">The <see cref="T:System.Reflection.MethodInfo" /> for the associated <see langword="get" /> accessor; or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-394">Реализация по умолчанию интерпретирует <xref:System.Xaml.XamlMember.UnderlyingMember%2A> свойство как <xref:System.Reflection.PropertyInfo> и возвращает значение <xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=nameWithType> (с параметром в `true`), это означает, что возвращаемый метод может быть закрытым.</span><span class="sxs-lookup"><span data-stu-id="7efc6-394">The default implementation interprets the <xref:System.Xaml.XamlMember.UnderlyingMember%2A> property as <xref:System.Reflection.PropertyInfo> and returns the value of <xref:System.Reflection.PropertyInfo.GetGetMethod%2A?displayProperty=nameWithType> (with the parameter set to `true`), which means that the returned method can be nonpublic.</span></span> <span data-ttu-id="7efc6-395">Это поведение может привести к `null` для определенных вариантов.</span><span class="sxs-lookup"><span data-stu-id="7efc6-395">This behavior can result in `null` for certain cases.</span></span> <span data-ttu-id="7efc6-396">включая случаи, когда связанный метод доступа не существует или член не является свойством.</span><span class="sxs-lookup"><span data-stu-id="7efc6-396">including cases where no associated accessor exists or the member is not a property.</span></span>  
  
 <span data-ttu-id="7efc6-397">Этот метод вызывается, когда вызывающий объект получает значение из <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> свойства в связанном <xref:System.Xaml.Schema.XamlMemberInvoker>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-397">This method is invoked when a caller gets a value from the <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingGetter%2A> property on an associated <xref:System.Xaml.Schema.XamlMemberInvoker>.</span></span> <span data-ttu-id="7efc6-398">Переопределите этот метод, если вы хотите сообщить о результатах универсальный для всего <xref:System.Xaml.XamlMember> производного класса, или если специализированные метаданные, доступные для определение для каждого случая.</span><span class="sxs-lookup"><span data-stu-id="7efc6-398">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span> <span data-ttu-id="7efc6-399">Убедитесь, что для реализации <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, и <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> , чтобы все они возвращают связанные результаты.</span><span class="sxs-lookup"><span data-stu-id="7efc6-399">Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingMember">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MemberInfo LookupUnderlyingMember ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MemberInfo LookupUnderlyingMember() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingMember" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingMember () As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MemberInfo ^ LookupUnderlyingMember();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7efc6-400">Возвращает объект <see cref="T:System.Reflection.MemberInfo" /> системы типов среды CLR, связанный с данным объектом <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-400">Returns a CLR type system <see cref="T:System.Reflection.MemberInfo" /> that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="7efc6-401">Объект <see cref="T:System.Reflection.MemberInfo" /> системы типов среды CLR, связанный с данным объектом <see cref="T:System.Xaml.XamlMember" />, или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-401">A CLR type system <see cref="T:System.Reflection.MemberInfo" /> object that is associated with this <see cref="T:System.Xaml.XamlMember" />; or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-402">Реализация по умолчанию возвращает базовые сведения о членстве, зависит от конструкции.</span><span class="sxs-lookup"><span data-stu-id="7efc6-402">The default implementation returns the underlying member information, which is based on construction.</span></span> <span data-ttu-id="7efc6-403">Если <xref:System.Reflection.MemberInfo> объект создан с сигнатурой, которая не предоставляет достаточно сведений, чтобы задать базовый член, этот метод возвращает `null`.</span><span class="sxs-lookup"><span data-stu-id="7efc6-403">If the <xref:System.Reflection.MemberInfo> object is constructed with a signature that does not provide enough information to set the underlying member, this method returns `null`.</span></span>  
  
 <span data-ttu-id="7efc6-404">Если базовый член был задан во время конструирования, нет необходимости вызывать этот метод.</span><span class="sxs-lookup"><span data-stu-id="7efc6-404">If an underlying member was set during construction, you should not need to call this method.</span></span>  
  
 <span data-ttu-id="7efc6-405">Этот метод вызывается, когда вызывающий объект получает значение из <xref:System.Xaml.XamlMember.UnderlyingMember%2A>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-405">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.UnderlyingMember%2A>.</span></span> <span data-ttu-id="7efc6-406">Переопределите этот метод, если вы хотите сообщить о результатах универсальный для всего <xref:System.Xaml.XamlMember> производного класса, или если специализированные метаданные, доступные для определение для каждого случая.</span><span class="sxs-lookup"><span data-stu-id="7efc6-406">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span> <span data-ttu-id="7efc6-407">Убедитесь, что для реализации <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, и <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> , чтобы все они возвращают связанные результаты.</span><span class="sxs-lookup"><span data-stu-id="7efc6-407">Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.UnderlyingMember" />
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingSetter">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.MethodInfo LookupUnderlyingSetter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.MethodInfo LookupUnderlyingSetter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupUnderlyingSetter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingSetter () As MethodInfo" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::MethodInfo ^ LookupUnderlyingSetter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.MethodInfo</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7efc6-408">Возвращает метод доступа <see langword="set" />, связанный с данным объектом <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-408">Returns a <see langword="set" /> accessor that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="7efc6-409">Объект <see cref="T:System.Reflection.MethodInfo" /> для связанного метода доступа <see langword="set" /> или значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-409">The <see cref="T:System.Reflection.MethodInfo" /> for the associated <see langword="set" /> accessor; or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-410">Реализация по умолчанию интерпретирует <xref:System.Xaml.XamlMember.UnderlyingMember%2A> как <xref:System.Reflection.PropertyInfo> и возвращает значение <xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=nameWithType> (с параметром в `true`), это означает, что возвращаемый метод может быть закрытым.</span><span class="sxs-lookup"><span data-stu-id="7efc6-410">The default implementation interprets <xref:System.Xaml.XamlMember.UnderlyingMember%2A> as <xref:System.Reflection.PropertyInfo> and returns the value of <xref:System.Reflection.PropertyInfo.GetSetMethod%2A?displayProperty=nameWithType> (with the parameter set to `true`), which means that the returned method can be nonpublic.</span></span> <span data-ttu-id="7efc6-411">Это может привести к `null` некоторые случаи, включая случаи, когда такой метод доступа отсутствует или член не является свойством.</span><span class="sxs-lookup"><span data-stu-id="7efc6-411">This can result in `null` for certain cases, including cases where there is no such accessor, or the member is not a property.</span></span>  
  
 <span data-ttu-id="7efc6-412">Этот метод вызывается, когда вызывающий объект получает значение из <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> в связанном <xref:System.Xaml.Schema.XamlMemberInvoker>. Переопределите этот метод, если вы хотите сообщить о результатах универсальный для всего <xref:System.Xaml.XamlMember> производного класса, или если специализированные метаданные, доступные для определение для каждого случая.</span><span class="sxs-lookup"><span data-stu-id="7efc6-412">This method is invoked when a caller gets a value from <xref:System.Xaml.Schema.XamlMemberInvoker.UnderlyingSetter%2A> on an associated <xref:System.Xaml.Schema.XamlMemberInvoker>.Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span> <span data-ttu-id="7efc6-413">Убедитесь, что для реализации <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, и <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> , чтобы все они возвращают связанные результаты.</span><span class="sxs-lookup"><span data-stu-id="7efc6-413">Make sure to implement <xref:System.Xaml.XamlMember.LookupUnderlyingGetter%2A>, <xref:System.Xaml.XamlMember.LookupUnderlyingSetter%2A>, and <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> so that they all return correlated results.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupValueSerializer">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.LookupValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupValueSerializer () As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ LookupValueSerializer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7efc6-414">Возвращает реализацию сериализатора значений, связанную с данным объектом <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-414">Returns a value serializer implementation that is associated with this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="7efc6-415">Экземпляр <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.Windows.Markup.ValueSerializer" /> или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-415">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> instance with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint, or <see langword="null" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-416">Реализация по умолчанию использует следующую логику и порядок обработки:</span><span class="sxs-lookup"><span data-stu-id="7efc6-416">The default implementation uses the following logic and processing order:</span></span>  
  
-   <span data-ttu-id="7efc6-417">Если присвоение атрибутов существует на уровне элементов (<xref:System.Windows.Markup.ValueSerializerAttribute>), сведения об атрибутах используется для вызова <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> в контексте схемы XAML.</span><span class="sxs-lookup"><span data-stu-id="7efc6-417">If attributing exists at the member level (<xref:System.Windows.Markup.ValueSerializerAttribute>), the attribute information is used for a call to <xref:System.Xaml.XamlSchemaContext.GetValueConverter%2A> against the XAML schema context.</span></span>  
  
-   <span data-ttu-id="7efc6-418">Если <xref:System.Xaml.XamlMember.Type%2A> является допустимым, возвращается преобразователь значений, связанный с типом.</span><span class="sxs-lookup"><span data-stu-id="7efc6-418">If <xref:System.Xaml.XamlMember.Type%2A> is valid, a value converter that is associated with the type is returned.</span></span>  
  
-   <span data-ttu-id="7efc6-419">Если предыдущие условия не применяются, `null` возвращается.</span><span class="sxs-lookup"><span data-stu-id="7efc6-419">If the previous conditions do not apply, `null` is returned.</span></span>  
  
 <span data-ttu-id="7efc6-420">Этот метод вызывается, когда вызывающий объект получает значение из <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-420">This method is invoked when a caller gets a value from <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</span></span> <span data-ttu-id="7efc6-421">Переопределите этот метод, если вы хотите сообщить о результатах универсальный для всего <xref:System.Xaml.XamlMember> производного класса, или если специализированные метаданные, доступные для определение для каждого случая.</span><span class="sxs-lookup"><span data-stu-id="7efc6-421">Override this method if you want to report uniform results for an entire <xref:System.Xaml.XamlMember> derived class, or if you have specialized metadata available to determine this on a per-case basis.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlMember.ValueSerializer" />
      </Docs>
    </Member>
    <Member MemberName="MarkupExtensionBracketCharacters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IReadOnlyDictionary&lt;char,char&gt; MarkupExtensionBracketCharacters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IReadOnlyDictionary`2&lt;char, char&gt; MarkupExtensionBracketCharacters" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.MarkupExtensionBracketCharacters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MarkupExtensionBracketCharacters As IReadOnlyDictionary(Of Char, Char)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ MarkupExtensionBracketCharacters { System::Collections::Generic::IReadOnlyDictionary&lt;char, char&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IReadOnlyDictionary&lt;System.Char,System.Char&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7efc6-422">Определяет символы открывающей и закрывающей скобок для расширения разметки.</span><span class="sxs-lookup"><span data-stu-id="7efc6-422">Defines the opening and closing bracket characters for a markup extension.</span></span></summary>
        <value><span data-ttu-id="7efc6-423">Коллекция, содержащая символы открывающих и закрывающих скобок.</span><span class="sxs-lookup"><span data-stu-id="7efc6-423">A collection containing the opening and closing bracket characters.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7efc6-424">Получает строковое представление имени <see langword="xamlName" />, объявляющего этот объект <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-424">Gets the <see langword="xamlName" /> name string that declares this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <value><span data-ttu-id="7efc6-425">Строковое представление имени <see langword="xamlName" />, объявляющего этот объект <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-425">The <see langword="xamlName" /> name string that declares this <see cref="T:System.Xaml.XamlMember" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-426">Это значение всегда устанавливается во время построения.</span><span class="sxs-lookup"><span data-stu-id="7efc6-426">This value is always set during construction.</span></span> <span data-ttu-id="7efc6-427">Конструкторы, которые реализуются <xref:System.Xaml.XamlMember> обычно выдал исключение если начальное имя не указано; таким образом, не ожидается, что это свойство, чтобы быть `null` или является пустой строкой, при использовании служб XAML .NET Framework по умолчанию в реализации.</span><span class="sxs-lookup"><span data-stu-id="7efc6-427">The constructors that are implemented by <xref:System.Xaml.XamlMember> typically throw an exception if an initial name is not specified; therefore, do not expect this property to be `null` or an empty string, if you are using default .NET Framework XAML Services implementations.</span></span>  
  
 <span data-ttu-id="7efc6-428">[Грамматика XamlName](~/docs/framework/xaml-services/xamlname-grammar.md) и правила именования для членов и типов CLR не образуют точного пересечения.</span><span class="sxs-lookup"><span data-stu-id="7efc6-428">[XamlName Grammar](~/docs/framework/xaml-services/xamlname-grammar.md) and naming rules for CLR type and members are not an exact intersect.</span></span> <span data-ttu-id="7efc6-429">Это можно объявить имя члена, который является допустимым в среде CLR, но не является допустимым в области имен XAML.</span><span class="sxs-lookup"><span data-stu-id="7efc6-429">It is possible to declare a member name that is legal under CLR but not valid under XAML naming.</span></span> <span data-ttu-id="7efc6-430">По возможности следует избегать такой ситуации.</span><span class="sxs-lookup"><span data-stu-id="7efc6-430">You should avoid this situation if possible.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Xaml.XamlMember xamlMember1, class System.Xaml.XamlMember xamlMember2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.op_Equality(System.Xaml.XamlMember,System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (xamlMember1 As XamlMember, xamlMember2 As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Xaml::XamlMember ^ xamlMember1, System::Xaml::XamlMember ^ xamlMember2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlMember1" Type="System.Xaml.XamlMember" />
        <Parameter Name="xamlMember2" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="xamlMember1"><span data-ttu-id="7efc6-431"><see cref="T:System.Xaml.XamlMember" /> или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-431">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span></span></param>
        <param name="xamlMember2"><span data-ttu-id="7efc6-432"><see cref="T:System.Xaml.XamlMember" /> или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-432">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="7efc6-433">Определяет, совпадают ли значения двух указанных объектов <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-433">Determines whether two specified <see cref="T:System.Xaml.XamlMember" /> objects have the same value.</span></span></summary>
        <returns>
          <span data-ttu-id="7efc6-434">Значение <see langword="true" />, если значение параметра <paramref name="xamlMember1" /> совпадает со значением <paramref name="xamlMember2" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-434"><see langword="true" /> if the value of <paramref name="xamlMember1" /> is the same as the value of <paramref name="xamlMember2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Xaml.XamlMember xamlMember1, System.Xaml.XamlMember xamlMember2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Xaml.XamlMember xamlMember1, class System.Xaml.XamlMember xamlMember2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.op_Inequality(System.Xaml.XamlMember,System.Xaml.XamlMember)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (xamlMember1 As XamlMember, xamlMember2 As XamlMember) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Xaml::XamlMember ^ xamlMember1, System::Xaml::XamlMember ^ xamlMember2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlMember1" Type="System.Xaml.XamlMember" />
        <Parameter Name="xamlMember2" Type="System.Xaml.XamlMember" />
      </Parameters>
      <Docs>
        <param name="xamlMember1"><span data-ttu-id="7efc6-435"><see cref="T:System.Xaml.XamlMember" /> или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-435">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span></span></param>
        <param name="xamlMember2"><span data-ttu-id="7efc6-436"><see cref="T:System.Xaml.XamlMember" /> или <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-436">A <see cref="T:System.Xaml.XamlMember" /> or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="7efc6-437">Определяет, различаются ли значения двух указанных объектов <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-437">Determines whether two specified <see cref="T:System.Xaml.XamlMember" /> objects have different values.</span></span></summary>
        <returns>
          <span data-ttu-id="7efc6-438">Значение <see langword="true" />, если значение параметра <paramref name="xamlMember1" /> отличается от значения параметра <paramref name="xamlMember2" />; в противном случае — значение <see langword="false" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-438"><see langword="true" /> if the value of <paramref name="xamlMember1" /> differs from the value of <paramref name="xamlMember2" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredXamlNamespace">
      <MemberSignature Language="C#" Value="public string PreferredXamlNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredXamlNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.PreferredXamlNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredXamlNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PreferredXamlNamespace { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7efc6-439">Получает URI одного пространства имен XAML, определяющий первичное пространство имен XAML для этого объекта <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-439">Gets the single XAML namespace URI that identifies the primary XAML namespace for this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <value><span data-ttu-id="7efc6-440">Идентификатор первичного пространства имен XAML для этого объекта <see cref="T:System.Xaml.XamlMember" /> в виде строки.</span><span class="sxs-lookup"><span data-stu-id="7efc6-440">The identifier for the primary XAML namespace for this <see cref="T:System.Xaml.XamlMember" />, as a string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-441"><xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> Свойство содержит то же значение, что и вызов метода <xref:System.Xaml.XamlMember.GetXamlNamespaces%2A> и получения первой строки значений из этого списка.</span><span class="sxs-lookup"><span data-stu-id="7efc6-441">The <xref:System.Xaml.XamlMember.PreferredXamlNamespace%2A> property provides the same value as calling <xref:System.Xaml.XamlMember.GetXamlNamespaces%2A> and then getting the first value string from the returned list.</span></span> <span data-ttu-id="7efc6-442">Предпочтительный пространства имен XAML можно использовать при записи элемента обратно в текст или другие представления, которые сохраняют сведения о пространстве имен XAML.</span><span class="sxs-lookup"><span data-stu-id="7efc6-442">The preferred XAML namespace should be used when writing the member back to text or other representations that preserve XAML namespace information.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SerializationVisibility">
      <MemberSignature Language="C#" Value="public System.ComponentModel.DesignerSerializationVisibility SerializationVisibility { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ComponentModel.DesignerSerializationVisibility SerializationVisibility" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.SerializationVisibility" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SerializationVisibility As DesignerSerializationVisibility" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ComponentModel::DesignerSerializationVisibility SerializationVisibility { System::ComponentModel::DesignerSerializationVisibility get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.DesignerSerializationVisibility</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7efc6-443">Получает значение <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />, указывающее, как визуальный конструктор должен обрабатывать этот член.</span><span class="sxs-lookup"><span data-stu-id="7efc6-443">Gets a <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> value, which indicates how a visual designer should process the member.</span></span></summary>
        <value><span data-ttu-id="7efc6-444">Значение перечисления <see cref="T:System.ComponentModel.DesignerSerializationVisibility" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-444">A value of the <see cref="T:System.ComponentModel.DesignerSerializationVisibility" /> enumeration.</span></span> <span data-ttu-id="7efc6-445">Значение по умолчанию: <see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-445">The default is <see cref="F:System.ComponentModel.DesignerSerializationVisibility.Visible" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType TargetType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType TargetType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.TargetType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TargetType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ TargetType { System::Xaml::XamlType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7efc6-446">Получает объект <see cref="T:System.Xaml.XamlType" /> того типа, в котором может существовать объект <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-446">Gets the <see cref="T:System.Xaml.XamlType" /> of the type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span></span></summary>
        <value><span data-ttu-id="7efc6-447">Тип, в котором может существовать объект <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-447">The type where the <see cref="T:System.Xaml.XamlMember" /> can exist.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-448">Возвращаемое значение отличается для членов присоединяемого и неприсоединяемого.</span><span class="sxs-lookup"><span data-stu-id="7efc6-448">The returned value is different for attachable and non-attachable members.</span></span> <span data-ttu-id="7efc6-449">Для неприсоединяемого элементов <xref:System.Xaml.XamlMember.TargetType%2A> возвращает <xref:System.Xaml.XamlMember.DeclaringType%2A>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-449">For non-attachable members, <xref:System.Xaml.XamlMember.TargetType%2A> returns <xref:System.Xaml.XamlMember.DeclaringType%2A>.</span></span> <span data-ttu-id="7efc6-450">Для прикрепляемые члены <xref:System.Xaml.XamlMember.LookupTargetType%2A> возвращает результат, основанный на следующую логику:</span><span class="sxs-lookup"><span data-stu-id="7efc6-450">For attachable members, <xref:System.Xaml.XamlMember.LookupTargetType%2A> returns a result that is based on this logic:</span></span>  
  
-   <span data-ttu-id="7efc6-451">Если отражение не может разрешить резервирование (<xref:System.Xaml.XamlMember.IsUnknown%2A> `true`), этот метод возвращает внутреннюю константу, представляющее тип универсального объекта.</span><span class="sxs-lookup"><span data-stu-id="7efc6-451">If reflection cannot resolve a backing (<xref:System.Xaml.XamlMember.IsUnknown%2A> `true`), this method returns an internal constant that represents a generic object type.</span></span>  
  
-   <span data-ttu-id="7efc6-452">Если предыдущее условие не применяется, <xref:System.Xaml.XamlMember.LookupTargetType%2A> вызывается.</span><span class="sxs-lookup"><span data-stu-id="7efc6-452">If the previous condition does not apply, <xref:System.Xaml.XamlMember.LookupTargetType%2A> is called.</span></span> <span data-ttu-id="7efc6-453">Реализация по умолчанию возвращает <xref:System.Xaml.XamlType> , основанный на изучение методы, которые реализуют `get` и `set` методы доступа.</span><span class="sxs-lookup"><span data-stu-id="7efc6-453">The default implementation returns a <xref:System.Xaml.XamlType> that is based on examining the methods that implement the `get` and `set` accessors.</span></span> <span data-ttu-id="7efc6-454">Класс может переопределить <xref:System.Xaml.XamlMember.LookupTargetType%2A> использовать другое поведение других метаданных, forms, может сообщить о целевых типов присоединяемых членов.</span><span class="sxs-lookup"><span data-stu-id="7efc6-454">A class might override <xref:System.Xaml.XamlMember.LookupTargetType%2A> to use a different behavior such as other metadata forms that might report target types for attachable members.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlMember.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7efc6-455">Возвращает строковое представление данного объекта <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-455">Returns a string representation of this <see cref="T:System.Xaml.XamlMember" />.</span></span></summary>
        <returns><span data-ttu-id="7efc6-456">Строковое представление данного объекта <see cref="T:System.Xaml.XamlMember" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-456">A string representation of this <see cref="T:System.Xaml.XamlMember" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-457">Эта реализация возвращает <xref:System.Xaml.XamlMember.Name%2A>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-457">This implementation returns <xref:System.Xaml.XamlMember.Name%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType Type { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType Type" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.Type" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Type As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ Type { System::Xaml::XamlType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7efc6-458">Получает объект <see cref="T:System.Xaml.XamlType" /> того типа, который используется данным членом.</span><span class="sxs-lookup"><span data-stu-id="7efc6-458">Gets the <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span></span></summary>
        <value><span data-ttu-id="7efc6-459">Объект <see cref="T:System.Xaml.XamlType" /> того типа, который используется данным членом.</span><span class="sxs-lookup"><span data-stu-id="7efc6-459">The <see cref="T:System.Xaml.XamlType" /> of the type that is used by the member.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-460">Вызов <xref:System.Xaml.XamlMember.Type%2A> вызывает <xref:System.Xaml.XamlMember.LookupType%2A> или конкретного переопределения этого метода.</span><span class="sxs-lookup"><span data-stu-id="7efc6-460">Calling <xref:System.Xaml.XamlMember.Type%2A> invokes <xref:System.Xaml.XamlMember.LookupType%2A> or a specific override of that method.</span></span> <span data-ttu-id="7efc6-461">Это происходит, когда логика начального внутреннего отражения уже не задано сведения.</span><span class="sxs-lookup"><span data-stu-id="7efc6-461">This occurs when the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="7efc6-462">В поведении по умолчанию (без <xref:System.Xaml.XamlMember.LookupType%2A> переопределения), возвращаемый <xref:System.Xaml.XamlType> может иметь разные значения концептуальной.</span><span class="sxs-lookup"><span data-stu-id="7efc6-462">In the default behavior (no <xref:System.Xaml.XamlMember.LookupType%2A> override), the returned <xref:System.Xaml.XamlType> can have different conceptual meanings.</span></span> <span data-ttu-id="7efc6-463">Применяемое значение зависит от того это <xref:System.Xaml.XamlMember> представляет свойство, метод или событие, как показано в следующем списке:</span><span class="sxs-lookup"><span data-stu-id="7efc6-463">Which meaning applies depends on whether this <xref:System.Xaml.XamlMember> represents a property, method, or event, as the following list shows:</span></span>  
  
-   <span data-ttu-id="7efc6-464">Для свойства, возвращаемый <xref:System.Xaml.XamlType> — тип, который задает свойство или возвращаемое свойство.</span><span class="sxs-lookup"><span data-stu-id="7efc6-464">For a property, the returned <xref:System.Xaml.XamlType> is the type that sets the property or is returned by the property.</span></span>  
  
-   <span data-ttu-id="7efc6-465">Для события, возвращенный <xref:System.Xaml.XamlType> тип обработчика событий (делегат в реализации CLR).</span><span class="sxs-lookup"><span data-stu-id="7efc6-465">For an event, the returned <xref:System.Xaml.XamlType> is the required event handler type (a delegate in a CLR implementation).</span></span>  
  
-   <span data-ttu-id="7efc6-466">Для метода <xref:System.Xaml.XamlType> имеет тип возвращаемого значения этого метода, который может быть `null`.</span><span class="sxs-lookup"><span data-stu-id="7efc6-466">For a method, <xref:System.Xaml.XamlType> is the return type of that method, which may be `null`.</span></span>  
  
 <span data-ttu-id="7efc6-467">В каждом случае контекст схемы XAML используется для определения типа XAML из резервного типа.</span><span class="sxs-lookup"><span data-stu-id="7efc6-467">In each case, the XAML schema context is used to evaluate the XAML type from the backing type.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeConverter">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; TypeConverter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; TypeConverter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.TypeConverter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeConverter As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ TypeConverter { System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7efc6-468">Получает объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, который может использоваться для создания конструкции преобразователя типов для объектов, объявленных в языке XAML.</span><span class="sxs-lookup"><span data-stu-id="7efc6-468">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which can be used for type conversion construction of XAML declared objects.</span></span></summary>
        <value><span data-ttu-id="7efc6-469">Значение <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.ComponentModel.TypeConverter" /> для универсального класса.</span><span class="sxs-lookup"><span data-stu-id="7efc6-469">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> value, with a <see cref="T:System.ComponentModel.TypeConverter" /> constraint on the generic.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-470">Вызов <xref:System.Xaml.XamlMember.TypeConverter%2A> вызывает <xref:System.Xaml.XamlMember.LookupTypeConverter%2A> или конкретного переопределения этого метода.</span><span class="sxs-lookup"><span data-stu-id="7efc6-470">Calling <xref:System.Xaml.XamlMember.TypeConverter%2A> invokes <xref:System.Xaml.XamlMember.LookupTypeConverter%2A> or a specific override of that method.</span></span> <span data-ttu-id="7efc6-471">Это происходит, когда логика начального внутреннего отражения уже не задано сведения.</span><span class="sxs-lookup"><span data-stu-id="7efc6-471">This behavior occurs when the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="7efc6-472">Реализации, которые возвращают свойство отличное от null значение для <xref:System.Xaml.XamlMember.TypeConverter%2A> не обязательно являются рабочего <xref:System.ComponentModel.TypeConverter>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-472">Implementations that return a non-null property value for <xref:System.Xaml.XamlMember.TypeConverter%2A> are not necessarily a working <xref:System.ComponentModel.TypeConverter>.</span></span> <span data-ttu-id="7efc6-473">Ниже приведен список возможных возвращаемых значений от null для <xref:System.Xaml.XamlMember.TypeConverter%2A> и возможных значений:</span><span class="sxs-lookup"><span data-stu-id="7efc6-473">The following is a list of possible non-null return values for <xref:System.Xaml.XamlMember.TypeConverter%2A> and what these values represent:</span></span>  
  
-   <span data-ttu-id="7efc6-474">Возвращаемое значение сообщает преобразователь типов, который имеет атрибут членом или общем в конечный тип преобразователя.</span><span class="sxs-lookup"><span data-stu-id="7efc6-474">The return value reports a type converter that is attributed specifically to that member or more generally to the target type of the converter.</span></span> <span data-ttu-id="7efc6-475">Такое поведение обычно какие большинство системами типов XAML и искать обработчики XAML для создания экземпляра преобразователя типов и вызов его методов.</span><span class="sxs-lookup"><span data-stu-id="7efc6-475">This behavior is typically what most XAML type systems and XAML processors look for in order to instantiate a type converter and invoke its methods.</span></span>  
  
-   <span data-ttu-id="7efc6-476">Возвращаемое значение сообщает преобразователь встроенных значений.</span><span class="sxs-lookup"><span data-stu-id="7efc6-476">The return value reports a built-in value converter.</span></span> <span data-ttu-id="7efc6-477">Эти конвертеры существуют для определенных внутренних операций, выполняемых модулем записи XAML.</span><span class="sxs-lookup"><span data-stu-id="7efc6-477">These converters exist for certain internal operations that are performed by a XAML writer.</span></span> <span data-ttu-id="7efc6-478">В частности эти встроенные преобразователи значений преобразовать необработанные строковые значения атрибута в примитивы уровня языка XAML.</span><span class="sxs-lookup"><span data-stu-id="7efc6-478">In particular, these built-in value converters convert the raw attribute string values to the XAML language-level primitives.</span></span> <span data-ttu-id="7efc6-479">Для реализации служб XAML .NET Framework эти встроенные преобразования типа часто пересылают в преобразователь типов, который определен в сборке System.</span><span class="sxs-lookup"><span data-stu-id="7efc6-479">For the .NET Framework XAML Services implementation, these built-in type conversions often forward to a type converter that is defined in the System assembly.</span></span> <span data-ttu-id="7efc6-480">Например, преобразование для <xref:System.Int32> значение встроен перенаправленных преобразования и, следовательно, <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A> значение ссылки <xref:System.ComponentModel.Int32Converter>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-480">For example, a conversion for an <xref:System.Int32> value has built-in forwarded conversion, and therefore, the <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterType%2A> value references <xref:System.ComponentModel.Int32Converter>.</span></span>  
  
-   <span data-ttu-id="7efc6-481">Возвращаемое значение сообщает об особом случае неограниченной объектной модели; то есть <xref:System.Xaml.XamlMember> имеет <xref:System.Xaml.XamlMember.Type%2A> значение <xref:System.Object>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-481">The return value reports the special case of an unconstrained object model; that is, the <xref:System.Xaml.XamlMember> has a <xref:System.Xaml.XamlMember.Type%2A> value of <xref:System.Object>.</span></span> <span data-ttu-id="7efc6-482">В этом случае <xref:System.Xaml.Schema.XamlValueConverter%601> сообщает, что <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=nameWithType> — {`Object}`.</span><span class="sxs-lookup"><span data-stu-id="7efc6-482">In this case, the <xref:System.Xaml.Schema.XamlValueConverter%601> reports that the <xref:System.Xaml.Schema.XamlValueConverter%601.Name%2A?displayProperty=nameWithType> is {`Object}`.</span></span> <span data-ttu-id="7efc6-483">Тем не менее <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> — `null` , так как не фактический тип или экземпляр доступен для выполнения данного преобразования.</span><span class="sxs-lookup"><span data-stu-id="7efc6-483">However, <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A> is `null` because no actual type or instance is available to perform this conversion.</span></span> <span data-ttu-id="7efc6-484">Вместо этого поведение модели объекта не удается определить до времени выполнения, когда среда выполнения определенной технологии определяет обработку его графа объектов.</span><span class="sxs-lookup"><span data-stu-id="7efc6-484">Instead, the object model behavior cannot be determined until run time, when the runtime of the specific technology determines the handling of its object graph.</span></span>  
  
 <span data-ttu-id="7efc6-485">Если можно получить доступ к рабочей <xref:System.ComponentModel.TypeConverter> из <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>, можно вызывать его методы преобразования.</span><span class="sxs-lookup"><span data-stu-id="7efc6-485">If you can access a working <xref:System.ComponentModel.TypeConverter> from <xref:System.Xaml.Schema.XamlValueConverter%601.ConverterInstance%2A>, you can invoke its conversion methods.</span></span> <span data-ttu-id="7efc6-486">Тем не менее многие методы преобразования зависит от контекста службы.</span><span class="sxs-lookup"><span data-stu-id="7efc6-486">However, many conversion methods rely on service context.</span></span> <span data-ttu-id="7efc6-487">Если у вас тот же контекст службы, доступные, ожидаемый преобразователем для стандартной роли записи объектов для графов объектов, методы преобразователя можно вызывать исключения.</span><span class="sxs-lookup"><span data-stu-id="7efc6-487">If you do not have the same service context available that the type converter expects for its typical role of writing objects for object graphs, the converter methods can throw exceptions.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingMember">
      <MemberSignature Language="C#" Value="public System.Reflection.MemberInfo UnderlyingMember { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.MemberInfo UnderlyingMember" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.UnderlyingMember" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingMember As MemberInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Reflection::MemberInfo ^ UnderlyingMember { System::Reflection::MemberInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Reflection.MemberInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7efc6-488">Получает объект <see cref="T:System.Reflection.MemberInfo" /> системы типов среды CLR, доступный для члена, который создан объектом <see cref="T:System.Reflection.PropertyInfo" />, <see cref="T:System.Reflection.MethodInfo" /> или <see cref="T:System.Reflection.EventInfo" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-488">Gets the CLR type system <see cref="T:System.Reflection.MemberInfo" /> that is available for a member that is constructed by <see cref="T:System.Reflection.PropertyInfo" />, <see cref="T:System.Reflection.MethodInfo" />, or <see cref="T:System.Reflection.EventInfo" />.</span></span></summary>
        <value><span data-ttu-id="7efc6-489">Сведения объекта <see cref="T:System.Reflection.MemberInfo" /> системы типов среды CLR, преобразованные из исходных параметров конструктора.</span><span class="sxs-lookup"><span data-stu-id="7efc6-489">CLR type system <see cref="T:System.Reflection.MemberInfo" /> information, as cast from the initial constructor parameters.</span></span> <span data-ttu-id="7efc6-490">Объект <see cref="T:System.Xaml.XamlMember" />, созданный с сигнатурой <see cref="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" />, возвращает значение <see langword="null" />.</span><span class="sxs-lookup"><span data-stu-id="7efc6-490">A <see cref="T:System.Xaml.XamlMember" /> that is constructed with the <see cref="M:System.Xaml.XamlMember.#ctor(System.String,System.Xaml.XamlType,System.Boolean)" /> signature returns <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-491">Вызов <xref:System.Xaml.XamlMember.UnderlyingMember%2A> вызывает <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> или конкретного переопределения этого метода.</span><span class="sxs-lookup"><span data-stu-id="7efc6-491">Calling <xref:System.Xaml.XamlMember.UnderlyingMember%2A> invokes <xref:System.Xaml.XamlMember.LookupUnderlyingMember%2A> or a specific override of that method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueSerializer">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; ValueSerializer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; ValueSerializer" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlMember.ValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueSerializer As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ ValueSerializer { System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7efc6-492">Получает объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, используемый для сериализации значений объектов, объявленных в языке XAML.</span><span class="sxs-lookup"><span data-stu-id="7efc6-492">Gets a <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> object, which is used for value serialization of XAML declared objects.</span></span></summary>
        <value><span data-ttu-id="7efc6-493">Объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.Windows.Markup.ValueSerializer" /> для универсального класса.</span><span class="sxs-lookup"><span data-stu-id="7efc6-493">A <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> with <see cref="T:System.Windows.Markup.ValueSerializer" /> constraint on the generic.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7efc6-494">Вызов <xref:System.Xaml.XamlMember.ValueSerializer%2A> вызывает <xref:System.Xaml.XamlMember.LookupValueSerializer%2A> или конкретного переопределения этого метода.</span><span class="sxs-lookup"><span data-stu-id="7efc6-494">Calling <xref:System.Xaml.XamlMember.ValueSerializer%2A> invokes <xref:System.Xaml.XamlMember.LookupValueSerializer%2A> or a specific override of that method.</span></span> <span data-ttu-id="7efc6-495">Это происходит, когда логика начального внутреннего отражения уже не задано сведения.</span><span class="sxs-lookup"><span data-stu-id="7efc6-495">This behavior occurs when the initial internal reflection logic has not already set the information.</span></span>  
  
 <span data-ttu-id="7efc6-496">Не все варианты, возвращающие свойство ненулевое значение для <xref:System.Xaml.XamlMember.ValueSerializer%2A> обязательно являются рабочего <xref:System.Windows.Markup.ValueSerializer>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-496">Not all cases that return a non-null property value for <xref:System.Xaml.XamlMember.ValueSerializer%2A> are necessarily a working <xref:System.Windows.Markup.ValueSerializer>.</span></span> <span data-ttu-id="7efc6-497">В разделе <xref:System.Xaml.XamlMember.TypeConverter%2A>; те же рекомендации применяются для <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</span><span class="sxs-lookup"><span data-stu-id="7efc6-497">See <xref:System.Xaml.XamlMember.TypeConverter%2A>; the same considerations apply to <xref:System.Xaml.XamlMember.ValueSerializer%2A>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>