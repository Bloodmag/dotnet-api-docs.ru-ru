<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XamlSchemaContext.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c3cb020dadf6911a6184d7c73f01746771d9bdf1.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c3cb020dadf6911a6184d7c73f01746771d9bdf1</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlSchemaContext">
          <source>Defines a reusable context for interpreting or mapping XAML types, and the types in the assemblies that underlie them.</source>
          <target state="translated">Определяет контекст с возможностью многократного использования для интерпретации или сопоставления типов XAML и типов в базовых сборках.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>A XAML schema context provides a layer of abstraction between a schema or vocabulary for XAML, and a specific parser implementation.</source>
          <target state="translated">Контекст схемы XAML предоставляет уровень абстракции между схемой и словарем для XAML и конкретной реализацией синтаксического анализатора.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>By inserting the concept of a schema context, the schema can be used with different XAML parsers, and the schema context fills in the details that are needed to interact with a specific XAML parser.</source>
          <target state="translated">Вставляя концепцию контекст схемы, схема может использоваться с различными анализаторами XAML и контекст схемы заполняет подробные сведения, необходимые для взаимодействия с конкретным анализатором XAML.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>For example, the XAML schema context provides query APIs that relate to XAML concepts or to the CLR binding to the XAML type system.</source>
          <target state="translated">Например контекст схемы XAML предоставляет API-интерфейсы, которые связаны с понятиями XAML или с привязкой CLR к системе типов XAML запроса.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>The XAML schema context is also responsible for maintaining the assembly list of loaded assemblies, which defines where a XAML parser looks for backing types.</source>
          <target state="translated">Контекст схемы XAML также отвечает за обслуживание списка загруженных сборок, который определяет, где синтаксического анализа XAML ищет резервных типов.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>In an <ph id="ph1">&lt;see cref="T:System.AppDomain" /&gt;</ph>, a <ph id="ph2">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> can be shared between multiple callers, which include both full and partial trust callers.</source>
          <target state="translated">В <ph id="ph1">&lt;see cref="T:System.AppDomain" /&gt;</ph>, <ph id="ph2">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> может совместно использоваться несколькими вызывающих объектов, которые одновременно включать полный и частично доверенных вызывающих.</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>This situation exists in frameworks such as WPF, which provide partial-trust access to XAML loading for portions of the WPF application model.</source>
          <target state="translated">Такой ситуации существует на платформах, например WPF, которые предоставляют частичным доверием доступ в XAML загрузки для части модели приложения WPF.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>The default <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> implementation provides safeguards in this scenario by keeping all its properties and settings immutable.</source>
          <target state="translated">Значение по умолчанию <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> реализация обеспечивает защиту в этом сценарии, оставляя его свойства и параметры неизменяемыми.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>Derived implementations should also consider following this model of immutability for properties and settings of a XAML schema context.</source>
          <target state="translated">В производных реализациях следует также учитывать следующие этой модели неизменности для свойств и параметров контекста схемы XAML.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> base class is designed so that lookups have no externally observable side effects.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> Базовый класс разработан таким образом, поиск не имеют извне побочных эффектов.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>The types that are referenced by <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> APIs in the base class, such as <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> or <ph id="ph3">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>, also produce no side effects from lookups.</source>
          <target state="translated">Типы, на которые ссылается <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> API-интерфейсы в базовом классе, такие как <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph>, также позволяет создавать без побочных эффектов из уточняющих запросов.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>All data that is needed to make a schema determination should be available from the construction and settings of the <ph id="ph1">&lt;see cref="T:System.AppDomain" /&gt;</ph>.</source>
          <target state="translated">Все данные, необходимые для определения схемы должны быть доступны из конструирования и настроек <ph id="ph1">&lt;see cref="T:System.AppDomain" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>Notice that no lookup APIs rely on explicitly passed-in services; their input relies on string input only.</source>
          <target state="translated">Обратите внимание, что API поиска и не полагаться на явно переданные службы; входные данные основывается только на строки.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> base class, and <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> are all thread safe in their base implementations.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> Базового класса, и <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> и <ph id="ph3">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> безопасны всех потоков в их базовой реализации.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xaml.XamlSchemaContext">
          <source>If you derive from <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> or derive XAML type system classes such as <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> , you can choose whether your classes will behave as thread safe.</source>
          <target state="translated">Если вы наследуете от <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> или наследовать классы системы типов XAML, например <ph id="ph2">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> и <ph id="ph3">&lt;see cref="T:System.Xaml.XamlMember" /&gt;</ph> , можно ли ваши классы ведет себя как потокобезопасным.</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlSchemaContext">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
          <source>An enumerable set of assembly information items.</source>
          <target state="translated">Перечисляемый набор элементов сведений о сборках.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
          <source>Each assembly information item is specified by an <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> value.</source>
          <target state="translated">Каждый элемент сведений о сборках определяется значением <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly})">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> class, based on a set of reference assemblies.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> на основе набора базовых сборок.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)">
          <source>The settings object to use to construct the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>.</source>
          <target state="translated">Объект параметров, используемый для создания объекта <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> class, based on a settings object.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> на основе объекта параметров.</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)">
          <source>The settings object stores information about text converter and markup extension specifics for the schema context.</source>
          <target state="translated">Объект параметров хранит сведения о текстовом преобразователе и особенностях расширения разметки для контекста схемы.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Xaml.XamlSchemaContextSettings)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContextSettings&gt;</ph>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContextSettings&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)">
          <source>An enumerable set of assembly information.</source>
          <target state="translated">Перечисляемый набор сведений о сборках.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)">
          <source>Each assembly information item is specified by an <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> value.</source>
          <target state="translated">Каждый элемент сведений о сборках определяется значением <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)">
          <source>The settings object to use to construct the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>.</source>
          <target state="translated">Объект параметров, используемый для создания объекта <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.#ctor(System.Collections.Generic.IEnumerable{System.Reflection.Assembly},System.Xaml.XamlSchemaContextSettings)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> class, based on a set of reference assemblies and a settings object.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> на основе набора базовых сборок и объекта параметров.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.Finalize">
          <source>Provides a nonstandard <ph id="ph1">&lt;see langword="Finalize" /&gt;</ph> implementation that does not invoke <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</source>
          <target state="translated">Предоставляет нестандартную реализацию метода <ph id="ph1">&lt;see langword="Finalize" /&gt;</ph>, которая не вызывает метод <ph id="ph2">&lt;see langword="Dispose" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.Finalize">
          <source>XAML schema contexts should not be disposed by automatic garbage collection or by manual operations.</source>
          <target state="translated">Не следует высвобождать контекстами схемы XAML, автоматическая сборка мусора или ручных операций.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.Finalize">
          <source>Although XAML schema contexts  have no unmanaged resources, <ph id="ph1">&lt;xref:System.Windows.Markup.XamlDeferLoadAttribute&gt;</ph> properties might still be active, and disposing a XAML schema context can interfere with the related defer-load operation.</source>
          <target state="translated">Несмотря на то, что контексты схемы XAML имеют не неуправляемые ресурсы, <ph id="ph1">&lt;xref:System.Windows.Markup.XamlDeferLoadAttribute&gt;</ph> свойства по-прежнему может быть активным и disposing контекст схемы XAML могут помешать операции связанные отложенной загрузки.</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.Finalize">
          <source><ph id="ph1">&lt;xref:System.AppDomain.AssemblyLoad&gt;</ph> event handlers, which are hooked internally as weak references, are cleaned up by this implementation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AppDomain.AssemblyLoad&gt;</ph> обработчики событий, которые выполняются внутри как слабые ссылки, будут удалены в данной реализации.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces">
          <source>Gets a value that specifies whether a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup API.</source>
          <target state="translated">Получает значение, указывающее, использует ли схема XAML и ее контекст полные имена сборок в значениях, возвращаемых API поиска.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a XAML schema and its context use fully qualified assembly names in the values that are returned by the lookup APIs; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если схема XAML и ее контекст используют полные имена сборок в значениях, возвращаемых API поиска; в противном случае — значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces">
          <source>This property returns the <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=nameWithType&gt;</ph> value that is established in the settings for the <ph id="ph2">&lt;xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29&gt;</ph> constructor signature.</source>
          <target state="translated">Это свойство возвращает <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=nameWithType&gt;</ph> значение, которое установлено в параметрах <ph id="ph2">&lt;xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29&gt;</ph> сигнатуры конструктора.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces">
          <source>If other signatures were used for construction or if <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=nameWithType&gt;</ph> is not specifically set to <ph id="ph2">`true`</ph>, the value of this property is <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Если другие подписи использовались для построения или <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContextSettings.FullyQualifyAssemblyNamesInClrNamespaces%2A?displayProperty=nameWithType&gt;</ph> не задали явным образом <ph id="ph2">`true`</ph>, значение этого свойства — <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces">
          <source>The value of this property influences the strings that are returned by <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces%2A&gt;</ph>.</source>
          <target state="translated">Значение этого свойства влияет на строки, возвращаемые <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces">
          <source>If <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the assembly portion of the string reports the equivalent of <ph id="ph3">&lt;xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">Если <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext.FullyQualifyAssemblyNamesInClrNamespaces%2A&gt;</ph> — <ph id="ph2">`true`</ph>, сборки части строки сообщает эквивалент <ph id="ph3">&lt;xref:System.Reflection.Assembly.FullName%2A?displayProperty=nameWithType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces">
          <source>Searches the assemblies that are held by this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> and returns a set of namespaces.</source>
          <target state="translated">Производит поиск в сборках, содержащихся в этом объекте <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>, и возвращает набор пространств имен.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces">
          <source>An enumerable set of namespace identifiers.</source>
          <target state="translated">Перечислимый набор идентификаторов пространств имен.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces">
          <source>These identifiers are provided as strings.</source>
          <target state="translated">Эти идентификаторы предоставляются в виде строк.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces">
          <source>This method only searches the reference assemblies if they are passed in through construction or property setting.</source>
          <target state="translated">Этот метод ищет ссылочные сборки только в том случае, если они передаются через конструкции или значение свойства.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.GetAllXamlNamespaces">
          <source>If no assemblies are established as reference assemblies, the logic of this method examines all loaded assemblies where this <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext&gt;</ph> is active.</source>
          <target state="translated">Если ни одна из сборок не установлена как ссылочные сборки, логика этот метод проверяет все сборки, загруженные где это <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext&gt;</ph> активен.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)">
          <source>The XAML namespace to return types for.</source>
          <target state="translated">Пространство имен XAML, для которого требуется вернуть типы.</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)">
          <source>Searches the assemblies that are held by this <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph> and returns a set of types from the specified XAML namespace.</source>
          <target state="translated">Производит поиск в сборках, содержащихся в этом объекте <ph id="ph1">&lt;see cref="T:System.Xaml.XamlSchemaContext" /&gt;</ph>, и возвращает набор типов из указанного пространства имен XAML.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)">
          <source>An enumerable set of XAML types.</source>
          <target state="translated">Перечисляемый набор типов XAML.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetAllXamlTypes(System.String)">
          <source>Each XAML type in the set is represented by a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> object.</source>
          <target state="translated">Каждый тип XAML в наборе представляется объектом <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)">
          <source>The XAML namespace to get the preferred prefix for.</source>
          <target state="translated">Пространство имен XAML, для которого требуется получить предпочтительный префикс.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)">
          <source>Gets a string that is reported as the preferred prefix for consumers to use when they map the specified XAML namespace.</source>
          <target state="translated">Получает строку, которая предоставляется как предпочтительный префикс для использования потребителями при сопоставлении указанного пространства имен XAML.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)">
          <source>A string that consumers should use when they map the specified XAML namespace for markup use.</source>
          <target state="translated">Строка, которую потребители должны использовать при сопоставлении указанного пространства имен XAML для целей разметки.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)">
          <source>The most immediate consumer of the information is typically a XAML writer.</source>
          <target state="translated">Наиболее непосредственным потребителем информации обычно является средство записи XAML.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)">
          <source>Other indirect consumers include design tools.</source>
          <target state="translated">К другим косвенным потребителям относятся средства разработки.</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)">
          <source>As part of the XAML binding for the common language runtime (CLR), you can specify this information by applying <ph id="ph1">&lt;xref:System.Windows.Markup.XmlnsPrefixAttribute&gt;</ph> at the assembly level.</source>
          <target state="translated">В рамках привязки XAML для общеязыковой среды выполнения (CLR), можно указать эти сведения, применяя <ph id="ph1">&lt;xref:System.Windows.Markup.XmlnsPrefixAttribute&gt;</ph> на уровне сборки.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetPreferredPrefix(System.String)">
          <source><ph id="ph1">&lt;paramref name="xmlns" /&gt;</ph> is null.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="xmlns" /&gt;</ph> имеет значение null.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)">
          <source>The specific converter base class.</source>
          <target state="translated">Базовый класс конкретного преобразователя.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)">
          <source>The converter implementation.</source>
          <target state="translated">Реализация преобразователя.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)">
          <source>The desired destination type for the converter.</source>
          <target state="translated">Требуемый тип назначения для преобразователя.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)">
          <source>Returns a value converter that can convert to the requested <ph id="ph1">&lt;paramref name="targetType" /&gt;</ph>.</source>
          <target state="translated">Возвращает преобразователь значений, который может производить преобразование в запрошенный тип <ph id="ph1">&lt;paramref name="targetType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetValueConverter``1(System.Type,System.Xaml.XamlType)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> with a constraint that matches the constraint that is put on the method call.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Xaml.Schema.XamlValueConverter`1" /&gt;</ph> с ограничением, соответствующим ограничению, наложенному при вызове метода.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)">
          <source>The XAML namespace that contains the named directive.</source>
          <target state="translated">Пространство имен XAML, содержащее именованную директиву.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)">
          <source>The name of the directive to obtain.</source>
          <target state="translated">Имя получаемой директивы.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> value that represents a directive, either for the XAML language or for a particular implementation.</source>
          <target state="translated">Возвращает значение <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>, представляющее директиву для языка XAML или для конкретной реализации.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph> object that represents the requested directive.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Xaml.XamlDirective" /&gt;</ph>, представляющий запрашиваемую директиву.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)">
          <source>Override this method if you create a derived class from <ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> as part of a XAML type system extension scenario.</source>
          <target state="translated">Переопределите этот метод, если вы создаете класс, производный от <ph id="ph1">&lt;xref:System.Xaml.XamlDirective&gt;</ph> в рамках сценария расширения системы типов XAML.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlDirective(System.String,System.String)">
          <source><ph id="ph1">&lt;paramref name="xamlNamespace" /&gt;</ph> or <ph id="ph2">&lt;paramref name="name" /&gt;</ph> is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Параметр <ph id="ph1">&lt;paramref name="xamlNamespace" /&gt;</ph> или <ph id="ph2">&lt;paramref name="name" /&gt;</ph> имеет значение <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="T:System.Xaml.XamlSchemaContext">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> that is based on either a CLR or XAML type identifier.</source>
          <target state="translated">Возвращает тип <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>, основанный на идентификаторе типа среды CLR или языка XAML.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Type)">
          <source>The type to get a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> for.</source>
          <target state="translated">Тип, для которого требуется получить объект <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Type)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> that is based on a CLR type identifier.</source>
          <target state="translated">Возвращает тип <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>, основанный на идентификаторе типа среды CLR.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> that matches the input <ph id="ph2">&lt;paramref name="type" /&gt;</ph>.</source>
          <target state="translated">Тип <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>, соответствующий входному параметру <ph id="ph2">&lt;paramref name="type" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Type)">
          <source>This overload assumes that you are using the CLR for the backing type system.</source>
          <target state="translated">Эта перегрузка предполагает, что вы используете среду CLR для системы резервных типов.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Type)">
          <source>If you are not using the CLR type system, use <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext.GetXamlType%28System.Xaml.Schema.XamlTypeName%29&gt;</ph>.</source>
          <target state="translated">Если вы не используете системе типов среды CLR, используйте <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContext.GetXamlType%28System.Xaml.Schema.XamlTypeName%29&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Type)">
          <source><ph id="ph1">&lt;paramref name="type" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="type" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)">
          <source>The XAML type name to get a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> for.</source>
          <target state="translated">Имя типа XAML, для которого требуется получить объект <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> that is based on a XAML system type name.</source>
          <target state="translated">Возвращает объект <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>, основанный на имени системного типа XAML.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> that matches the input <ph id="ph2">&lt;paramref name="xamlTypeName" /&gt;</ph>.</source>
          <target state="translated">Тип <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>, соответствующий входному параметру <ph id="ph2">&lt;paramref name="xamlTypeName" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)">
          <source>A component of <ph id="ph1">&lt;paramref name="xamlTypeName" /&gt;</ph> (<ph id="ph2">&lt;see cref="P:System.Xaml.Schema.XamlTypeName.Name" /&gt;</ph> or <ph id="ph3">&lt;see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" /&gt;</ph>) is <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Компонент <ph id="ph1">&lt;paramref name="xamlTypeName" /&gt;</ph> (<ph id="ph2">&lt;see cref="P:System.Xaml.Schema.XamlTypeName.Name" /&gt;</ph> или <ph id="ph3">&lt;see cref="P:System.Xaml.Schema.XamlTypeName.Namespace" /&gt;</ph>) имеет значение <ph id="ph4">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.Xaml.Schema.XamlTypeName)">
          <source><ph id="ph1">&lt;paramref name="xamlTypeName" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="xamlTypeName" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])">
          <source>The XAML namespace that contains the desired type.</source>
          <target state="translated">Пространство имен XAML, содержащее необходимый тип.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])">
          <source>The string name of the desired type.</source>
          <target state="translated">Строковое представление имени требуемого типа.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])">
          <source>The initialization type arguments for a generic type.</source>
          <target state="translated">Аргументы типа инициализации для универсального типа.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> that is based on a XAML namespace and a string for the type name.</source>
          <target state="translated">Возвращает тип <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> на основе пространства имен XAML и строки имени типа.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])">
          <source>This signature can specify the type arguments for cases where the desired type is a generic type.</source>
          <target state="translated">Данная сигнатура может указывать аргументы типа в случаях, когда целевой тип является универсальным.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.GetXamlType(System.String,System.String,System.Xaml.XamlType[])">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph> that matches the input criteria.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Xaml.XamlType" /&gt;</ph>, соответствующий входным критериям.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)">
          <source>The name of the assembly to load.</source>
          <target state="translated">Имя загружаемой сборки.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)">
          <source>Called when operations use this schema context to resolve an assembly that is required in order to resolve the XAML namespaces that it contains.</source>
          <target state="translated">Вызывается, когда операции используют этот контекст схемы для разрешения сборки, необходимой для разрешения содержащихся в ней пространств имен XAML.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)">
          <source>The resolved assembly.</source>
          <target state="translated">Разрешаемая сборка.</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)">
          <source>The underlying assembly resolution technique, which is an internal API, has built-in tolerances for different string forms of an assembly name as based on the <ph id="ph1">&lt;xref:System.Reflection.AssemblyName&gt;</ph> construction behavior.</source>
          <target state="translated">Техника разрешения базовой сборки, который является внутренним API, имеет встроенные отклонения для других форм строк имени сборки на основе <ph id="ph1">&lt;xref:System.Reflection.AssemblyName&gt;</ph> поведение конструктора.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)">
          <source>The purpose of this API is to enable first-opportunity resolution against known sets of assemblies, such as against reference assemblies instead of against a global assembly cache.</source>
          <target state="translated">Этот API предназначен для включения разрешения первой возможности для известных наборов сборок, таких как сборки ссылок, а не к глобальный кэш сборок.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.OnAssemblyResolve(System.String)">
          <source>If the list of reference assemblies is populated, the default implementation can access the known reference assemblies.</source>
          <target state="translated">Если заполнен список ссылочных сборок, реализация по умолчанию можно получить доступ к известных ссылочные сборки.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlSchemaContext.ReferenceAssemblies">
          <source>Gets an enumerable set of reference assemblies for the XAML schema context.</source>
          <target state="translated">Возвращает перечисляемый набор базовых сборок для контекста схемы XAML.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.ReferenceAssemblies">
          <source>An enumerable set of reference assemblies for the schema context.</source>
          <target state="translated">Перечислимый набор базовых сборок для контекста схемы.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.ReferenceAssemblies">
          <source>Each assembly information item is specified by an <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph> value.</source>
          <target state="translated">Каждый элемент сведений о сборках определяется значением <ph id="ph1">&lt;see cref="T:System.Reflection.Assembly" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source>Gets a value that specifies whether a XAML schema and its context support markup extensions that have two constructors with the same arity (number of input parameters).</source>
          <target state="translated">Получает значение, указывающее, поддерживают ли схема XAML и ее контекст расширения разметки, имеющие два конструктора с одинаковой арностью (количеством входных параметров).</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the schema context permits markup extensions that have duplicate arity; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если контекст схемы допускает расширения разметки с дублирующей арностью; в противном случае — значение <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение по умолчанию: <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source>This property returns the <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=nameWithType&gt;</ph> value that is established in the settings for the <ph id="ph2">&lt;xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29&gt;</ph> constructor signature.</source>
          <target state="translated">Это свойство возвращает <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=nameWithType&gt;</ph> значение, которое установлено в параметрах <ph id="ph2">&lt;xref:System.Xaml.XamlSchemaContext.%23ctor%28System.Xaml.XamlSchemaContextSettings%29&gt;</ph> сигнатуры конструктора.</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source>If other signatures are used for construction or if <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=nameWithType&gt;</ph> is not specifically set to <ph id="ph2">`true`</ph>, the value of this property is <ph id="ph3">`false`</ph>.</source>
          <target state="translated">Если другие подписи используются для построения или <ph id="ph1">&lt;xref:System.Xaml.XamlSchemaContextSettings.SupportMarkupExtensionsWithDuplicateArity%2A?displayProperty=nameWithType&gt;</ph> не задали явным образом <ph id="ph2">`true`</ph>, значение этого свойства — <ph id="ph3">`false`</ph>.</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source>Duplicate arity of markup extensions is not specifically addressed by the XAML specification [MS-XAML], section 6.6.7.2.</source>
          <target state="translated">Дублирующая арность расширений разметки не устраняется конкретно спецификацией XAML [MS-XAML], раздел 6.6.7.2.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source>This is because formation of the XAML information item for a markup extension is identical regardless of duplicate arity that might exist in the markup extension implementation.</source>
          <target state="translated">Это происходит потому, формирования элемента XAML сведения для расширения разметки идентичен независимо от того, дублирующая арность, который может существовать в реализации расширения разметки.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source>Only the actual invocation of the markup extension and its <ph id="ph1">`ProvideValue`</ph> exposes any issues associated with duplicate arity.</source>
          <target state="translated">Фактический вызов расширения разметки и его <ph id="ph1">`ProvideValue`</ph> предоставляет все проблемы, связанные с дублирующей арности.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source>Behavior for handling duplicate arity is thus undefined and is left up to each implementing XAML schema context and its XAML writer integration.</source>
          <target state="translated">Поведение обработки дублирующая арность таким образом не определено и остается до каждой реализации контекста схемы XAML и его интеграции средства записи XAML.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source>The default XAML schema context as implemented for .NET Framework XAML Services operations does not support duplicate arity; various .NET Framework XAML Services APIs will throw exceptions when processing markup extension usage with underlying duplicate arity.</source>
          <target state="translated">Контекст схемы XAML по умолчанию реализация для операций служб XAML .NET Framework не поддерживает арностью; При обработке расширения разметки с базовой двойной арностью различные API служб XAML .NET Framework будет вызывать исключения.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity">
          <source>For more information about defining markup extensions, see <bpt id="p1">[</bpt>Markup Extensions for XAML Overview<ept id="p1">](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md)</ept>.</source>
          <target state="translated">Дополнительные сведения об определении расширений разметки см. в разделе <bpt id="p1">[</bpt>расширения разметки для XAML Обзор<ept id="p1">](~/docs/framework/xaml-services/markup-extensions-for-xaml-overview.md)</ept>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source>The <ph id="ph1">&lt;see langword="xmlns" /&gt;</ph> string for the XAML namespace to be checked for a compatible result.</source>
          <target state="translated">Строка <ph id="ph1">&lt;see langword="xmlns" /&gt;</ph> для пространства имен XAML, которое требуется проверить на совместимый результат.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source>When this method returns, the <ph id="ph1">&lt;see langword="xmlns" /&gt;</ph> string for a compatible XAML namespace request.</source>
          <target state="translated">При возвращении данного метода содержит строку <ph id="ph1">&lt;see langword="xmlns" /&gt;</ph> для запроса совместимого пространства имен XAML.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source>This might be identical to <bpt id="p1">&lt;c&gt;</bpt>xamlNamespace<ept id="p1">&lt;/c&gt;</ept> if the method returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Если метод возвращает значение <ph id="ph1">&lt;see langword="false" /&gt;</ph>, эта строка может быть идентична значению <bpt id="p1">&lt;c&gt;</bpt>xamlNamespace<ept id="p1">&lt;/c&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source>Returns the success or failure of a request for a compatible XAML namespace.</source>
          <target state="translated">Возвращает данные об успехе или неудаче запроса для совместимого пространства имен XAML.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source>A successful request reports that XAML namespace as an out parameter.</source>
          <target state="translated">Успешный запрос сообщает пространство имен XAML в виде параметра вывода.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="compatibleNamespace" /&gt;</ph> contains a usable result; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">Значение <ph id="ph1">&lt;see langword="true" /&gt;</ph>, если параметр <ph id="ph2">&lt;paramref name="compatibleNamespace" /&gt;</ph> содержит пригодный к использованию результат; в противном случае — значение <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source>Internally, this method uses the following lookup order:</source>
          <target state="translated">Изнутри этот метод использует следующий порядок подстановки:</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source>An internally implemented compatibility dictionary, which may have been populated by an earlier lookup.</source>
          <target state="translated">Словарь внутренне реализованный совместимости заполнен предыдущими просмотрами.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source>The <ph id="ph1">&lt;xref:System.Windows.Markup.XmlnsCompatibleWithAttribute&gt;</ph> parameter evaluation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Windows.Markup.XmlnsCompatibleWithAttribute&gt;</ph> Оценки параметра.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source>If no other compatible namespace is discovered and this method returns <ph id="ph1">`false`</ph>, the <ph id="ph2">`compatibleNamespace`</ph> parameter output might have the same value as the <ph id="ph3">`xamlNamespace`</ph> input.</source>
          <target state="translated">Если обнаруживается нет совместимых имен, и этот метод возвращает <ph id="ph1">`false`</ph>, <ph id="ph2">`compatibleNamespace`</ph> выходной параметр может иметь то же значение, что <ph id="ph3">`xamlNamespace`</ph> ввода.</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" uid="M:System.Xaml.XamlSchemaContext.TryGetCompatibleXamlNamespace(System.String,System.String@)">
          <source><ph id="ph1">&lt;paramref name="xamlNamespace" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">Свойство <ph id="ph1">&lt;paramref name="xamlNamespace" /&gt;</ph> имеет значение <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>