<Type Name="XamlType" FullName="System.Xaml.XamlType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="88e26b430c3cc3e4fb759456e24937af285897b6" />
    <Meta Name="ms.sourcegitcommit" Value="4b4804968da1dfdf71c501075a5b66957b54f2e8" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ru-RU" />
    <Meta Name="ms.lasthandoff" Value="04/27/2018" />
    <Meta Name="ms.locfileid" Value="32037856" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XamlType : IEquatable&lt;System.Xaml.XamlType&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XamlType extends System.Object implements class System.IEquatable`1&lt;class System.Xaml.XamlType&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Xaml.XamlType" />
  <TypeSignature Language="VB.NET" Value="Public Class XamlType&#xA;Implements IEquatable(Of XamlType)" />
  <TypeSignature Language="C++ CLI" Value="public ref class XamlType : IEquatable&lt;System::Xaml::XamlType ^&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Xaml</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Xaml.XamlType&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>Сообщает сведения о типах языка XAML в составе общей системы языка XAML, реализованной в службах XAML платформы .NET Framework.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Многие API в <xref:System.Xaml.XamlType> предоставляют сведения о типах XAML, где они сообщают на концепцию аналогична определенным разделам спецификации [MS-XAML].  
  
 <xref:System.Xaml.XamlType> широко используется в API служб XAML .NET Framework для создания отчетов сведения о типе XAML. <xref:System.Xaml.XamlType> Предоставляет сведения, которые могут потребоваться для получения сведений о типе XAML для работы с экземпляром или для доступа к его членам из потока узлов XAML или представления XAML. Его reporting аналогично тому, как <xref:System.Type> в среде CLR типов системы вместе с классами отражения, такие как <xref:System.Reflection.MemberInfo>, содержат сведения о типа CLR и их использование.  
  
 Чтобы расширить возможности системы типов XAML, можно наследовать от <xref:System.Xaml.XamlType>. Чтобы сделать таким образом, необходимо также реализовать <xref:System.Xaml.Schema.XamlTypeInvoker>. <xref:System.Xaml.Schema.XamlTypeInvoker> Позволяет обобщенный системы типов XAML для работы в системе типов резервного указываются как часть вызова поведения. Определенные пользовательские <xref:System.Xaml.Schema.XamlTypeInvoker> предоставляет способ уменьшения зависимостей на системе типов среды CLR, которые используются по умолчанию <xref:System.Xaml.XamlType> поведение.  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlType" />.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlType (Type underlyingType, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type underlyingType, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (underlyingType As Type, schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlType(Type ^ underlyingType, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="underlyingType" Type="System.Type" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="underlyingType">Базовый тип среды CLR <see cref="T:System.Type" /> для создаваемого типа XAML.</param>
        <param name="schemaContext">Контекст схемы XAML для средств чтения и записи XAML.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlType" /> на основе сведений о базовом типе среды CLR.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Одно или несколько значений <paramref name="underlyingType" /> или <paramref name="schemaContext" /> равны <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected XamlType (string typeName, System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; typeArguments, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string typeName, class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; typeArguments, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (typeName As String, typeArguments As IList(Of XamlType), schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; XamlType(System::String ^ typeName, System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ typeArguments, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="typeName">Имя создаваемого типа.</param>
        <param name="typeArguments">Аргументы типа для объекта <see cref="T:System.Xaml.XamlType" />, представляющего универсальный тип. Может (нередко) иметь значение <see langword="null" />, указывающее, что представленный тип не является универсальным.</param>
        <param name="schemaContext">Контекст схемы XAML для средств чтения и записи XAML.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlType" /> на основе строки имени для типа.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор является защищенным. Нет текущих открытых производных классов существуют, использующих этот конкретный путь для создания. Как потребитель существующего <xref:System.Xaml.XamlType>, необходимо использовать другие сигнатур конструкторов (<xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%2CSystem.Xaml.Schema.XamlTypeInvoker%29>, <xref:System.Xaml.XamlType.%23ctor%28System.Type%2CSystem.Xaml.XamlSchemaContext%29>, или <xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29>) для инициализации <xref:System.Xaml.XamlType> объекта.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Одно или несколько значений <paramref name="typeName" /> или <paramref name="schemaContext" /> равны <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlType (Type underlyingType, System.Xaml.XamlSchemaContext schemaContext, System.Xaml.Schema.XamlTypeInvoker invoker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Type underlyingType, class System.Xaml.XamlSchemaContext schemaContext, class System.Xaml.Schema.XamlTypeInvoker invoker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.Type,System.Xaml.XamlSchemaContext,System.Xaml.Schema.XamlTypeInvoker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (underlyingType As Type, schemaContext As XamlSchemaContext, invoker As XamlTypeInvoker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlType(Type ^ underlyingType, System::Xaml::XamlSchemaContext ^ schemaContext, System::Xaml::Schema::XamlTypeInvoker ^ invoker);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="underlyingType" Type="System.Type" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
        <Parameter Name="invoker" Type="System.Xaml.Schema.XamlTypeInvoker" />
      </Parameters>
      <Docs>
        <param name="underlyingType">Базовый тип для создаваемого типа языка XAML.</param>
        <param name="schemaContext">Контекст схемы XAML для средства чтения XAML.</param>
        <param name="invoker">Реализация <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />, которая обрабатывает вызовы отражения во время выполнения, адресованные объекту <see cref="T:System.Xaml.XamlType" />.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlType" /> на основе сведений о базовом типе и реализации <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />.</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">Одно или несколько значений <paramref name="underlyingType" /> или <paramref name="schemaContext" /> равны <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XamlType (string unknownTypeNamespace, string unknownTypeName, System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; typeArguments, System.Xaml.XamlSchemaContext schemaContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string unknownTypeNamespace, string unknownTypeName, class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; typeArguments, class System.Xaml.XamlSchemaContext schemaContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.#ctor(System.String,System.String,System.Collections.Generic.IList{System.Xaml.XamlType},System.Xaml.XamlSchemaContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (unknownTypeNamespace As String, unknownTypeName As String, typeArguments As IList(Of XamlType), schemaContext As XamlSchemaContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XamlType(System::String ^ unknownTypeNamespace, System::String ^ unknownTypeName, System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ typeArguments, System::Xaml::XamlSchemaContext ^ schemaContext);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="unknownTypeNamespace" Type="System.String" />
        <Parameter Name="unknownTypeName" Type="System.String" />
        <Parameter Name="typeArguments" Type="System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;" />
        <Parameter Name="schemaContext" Type="System.Xaml.XamlSchemaContext" />
      </Parameters>
      <Docs>
        <param name="unknownTypeNamespace">Пространство имен XAML для типа в виде строки.</param>
        <param name="unknownTypeName">Имя типа в предоставленном пространстве имен XAML <c>unknownTypeNamespace</c>.</param>
        <param name="typeArguments">Аргументы типа для объекта <see cref="T:System.Xaml.XamlType" />, представляющего универсальный тип. Может (нередко) иметь значение <see langword="null" />, указывающее, что представленный тип не является универсальным.</param>
        <param name="schemaContext">Контекст схемы XAML для средств чтения и записи XAML.</param>
        <summary>Инициализирует новый экземпляр класса <see cref="T:System.Xaml.XamlType" /> на основе пространства имен XAML и строки имени для типа. Этот конструктор предназначен исключительно для анализа и записи в узлы XAML использований типов, о которых известно, что они не зарезервированы в базовой системе типов и контексте схемы XAML.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот конструктор используется только для типов «unknown» где недоступна тип XAML, который сопоставляется базовый системный тип. Этот конструктор не может создать результирующий где <xref:System.Xaml.XamlType.IsUnknown%2A?displayProperty=nameWithType> — `true`. Вместо этого reflector логику по умолчанию отчеты базовый тип, что <xref:System.Xaml.XamlLanguage.Object%2A?displayProperty=nameWithType>. Тем не менее, это может измениться из-за <xref:System.Xaml.XamlType.LookupIsUnknown%2A> переопределения.  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Одно или несколько значений <paramref name="unknownTypeNamespace" />, <paramref name="unknownTypeName" /> или <paramref name="schemaContext" /> равны <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="AllowedContentTypes">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; AllowedContentTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; AllowedContentTypes" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.AllowedContentTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AllowedContentTypes As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ AllowedContentTypes { System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает коллекцию только для чтения, содержащую типы, которые могут использоваться в качестве значения свойства <see cref="P:System.Xaml.XamlType.ContentProperty" /> для этого класса <see cref="T:System.Xaml.XamlType" />.</summary>
        <value>Доступная только для чтения коллекция возможных типов содержимого.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Типы, которые можно назначить конкретный тип содержимого (например, может быть назначен для базового типа, который имеет недопустимый тип содержимого) не считаются нескольких целях <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.  
  
 Если не используется отражение метод внутренней CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства можно вызвать <xref:System.Xaml.XamlType.LookupAllowedContentTypes%2A> переопределяет на <xref:System.Xaml.XamlType> производных классов.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType BaseType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType BaseType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.BaseType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ BaseType { System::Xaml::XamlType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает тип <see cref="T:System.Xaml.XamlType" /> для непосредственного базового типа данного типа XAML. Определение этого значения основано на базовом типе данного типа <see cref="T:System.Xaml.XamlType" /> и контексте схемы.</summary>
        <value>Тип <see cref="T:System.Xaml.XamlType" /> для непосредственного базового типа данного типа XAML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если не используется отражение метод внутренней CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства можно вызвать <xref:System.Xaml.XamlType.LookupBaseType%2A> переопределяет на <xref:System.Xaml.XamlType> производных классов. Дополнительные сведения о возвращаемых значениях и другие правила поведения см. в документации для <xref:System.Xaml.XamlType.LookupBaseType%2A> для данного типа. По умолчанию <xref:System.Xaml.XamlType.BaseType%2A> возвращает внутреннюю константу, представляющий <xref:System.Object> Если <xref:System.Xaml.XamlType.UnderlyingType%2A> — `null`.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.LookupBaseType%2A> является виртуальным и поэтому могут переопределяться. Переопределение обладает потенциалом (вредоносных целях или иным способом) для изменения сведений о которой тип о типе XAML, чтобы он больше не согласовывался ожидаемым способом с информацией о его базового типа CLR в системе типов. Для проверок операций присваивания и доступа к критическим с точки зрения безопасности используйте базовый тип CLR.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CanAssignTo">
      <MemberSignature Language="C#" Value="public virtual bool CanAssignTo (System.Xaml.XamlType xamlType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CanAssignTo(class System.Xaml.XamlType xamlType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.CanAssignTo(System.Xaml.XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CanAssignTo(System::Xaml::XamlType ^ xamlType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType">Тип, который надо сравнить с текущим типом <see cref="T:System.Xaml.XamlType" />.</param>
        <summary>Возвращает значение, указывающее, содержит ли экземпляр данного типа <see cref="T:System.Xaml.XamlType" /> заданный тип <see cref="T:System.Xaml.XamlType" /> в своем списке присваиваемых типов.</summary>
        <returns>
          Значение <see langword="true" />, если тип <paramref name="xamlType" /> содержится в списке присваиваемых типов; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Несмотря на то, что может быть назначен тип не имеет возможности ссылочного типа, его можно использовать для назначения. Например можно использовать назначение, чтобы установить соответствия типов для значений свойства. Понятие назначаемых типов в XAML похоже приведения с повышением в системе типов среды CLR. Например, в системе типов CLR, каждый тип имеет <xref:System.Object> в своем списке назначаемых типов.  
  
 Если один из двух <xref:System.Xaml.XamlType> экземпляров, которые используются для сравнения имеет <xref:System.Xaml.XamlType.IsUnknown%2A> равно `true`, этот метод имеет специальный Неизвестный режим, который возвращает `true` Если два <xref:System.Xaml.XamlType> экземпляра эквивалентны.  
  
 Реализация по умолчанию использует CLR <xref:System.Type> из <xref:System.Xaml.XamlType.UnderlyingType%2A> для этого <xref:System.Xaml.XamlType> , а входные данные <xref:System.Xaml.XamlType>и вызывает метод <xref:System.Type.IsAssignableFrom%2A>. Переопределите этот метод, если требуется, для определения различных типов может быть назначен.  
  
 Передача пустого `xamlType` не вызывает исключение и всегда возвращает `false`.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.CanAssignTo%2A> является виртуальным и поэтому могут переопределяться. Переопределение обладает потенциалом (вредоносных целях или иным способом) чтобы изменить возможности назначения типа XAML таким образом, чтобы он больше не согласовывался ожидаемым способом с поведением приведение типа его базового типа CLR. Для проверок операций присваивания и доступа к критическим с точки зрения безопасности используйте базовый тип CLR.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConstructionRequiresArguments">
      <MemberSignature Language="C#" Value="public bool ConstructionRequiresArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConstructionRequiresArguments" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ConstructionRequiresArguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ConstructionRequiresArguments As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConstructionRequiresArguments { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, должен ли данный тип <see cref="T:System.Xaml.XamlType" /> иметь аргументы (универсальные ограничения с использованием <see langword="x:TypeArguments" />, текста инициализации или других технологии языка XAML) для создания допустимого экземпляра этого типа.</summary>
        <value>
          Значение <see langword="true" />, если для создания экземпляра требуется некоторое значение аргумента; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если не используется отражение метод внутренней CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства можно вызвать <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> переопределяет на <xref:System.Xaml.XamlType> производных классов. Дополнительные сведения о возвращаемых значениях и другие правила поведения см. в документации для <xref:System.Xaml.XamlType.LookupConstructionRequiresArguments%2A> для данного типа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentProperty">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember ContentProperty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlMember ContentProperty" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ContentProperty" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentProperty As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlMember ^ ContentProperty { System::Xaml::XamlMember ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает сведения <see cref="T:System.Xaml.XamlMember" /> для свойства содержимого данного типа <see cref="T:System.Xaml.XamlType" />.</summary>
        <value>
          Сведения <see cref="T:System.Xaml.XamlMember" /> для свойства содержимого данного типа <see cref="T:System.Xaml.XamlType" />. Может принимать значение <see langword="null" />, если свойство содержимого отсутствует.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если с помощью привязки или резервном системы типов среды CLR, свойством содержимого XAML можно указать для типа, применяя <xref:System.Windows.Markup.ContentPropertyAttribute> в определение типа.  
  
 Это свойство выравнивается по `[content property]` элемента сведения в соответствии со спецификацией [MS-XAML].  
  
 Если не используется отражение метод внутренней CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства можно вызвать <xref:System.Xaml.XamlType.LookupContentProperty%2A> переопределяет на <xref:System.Xaml.XamlType> производных классов. Дополнительные сведения о возвращаемых значениях и другие правила поведения см. в документации для <xref:System.Xaml.XamlType.LookupContentProperty%2A> для данного типа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContentWrappers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; ContentWrappers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; ContentWrappers" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ContentWrappers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ContentWrappers As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ ContentWrappers { System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает типы, используемые для создания оболочки свойства содержимого, если оно не удовлетворяет требованию строгого соответствия типов, например строки в строго типизированной коллекции <see langword="Collection&lt;T&gt;" />.</summary>
        <value>Доступная только для чтения коллекция возможных типов оболочки содержимого или значение <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если нет учетной записи, для которой более соответствия типов оболочек, это свойство является `null`.  
  
 Типы, которые интерпретируются как <xref:System.Xaml.XamlType.CanAssignTo%2A> для конкретного типа содержимого не учитываются несколько типов в целях <xref:System.Xaml.XamlType.ContentWrappers%2A>.  
  
 В привязке CLR для <xref:System.Xaml> и <xref:System.Xaml.XamlType>, тип оболочка содержимого XAML может указывать на тип в качестве <xref:System.Windows.Markup.ContentWrapperAttribute>.  
  
 Если не используется отражение метод внутренней CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства можно вызвать <xref:System.Xaml.XamlType.LookupContentWrappers%2A> переопределяет на <xref:System.Xaml.XamlType> производных классов. Дополнительные сведения о возвращаемых значениях и другие правила поведения см. в документации для <xref:System.Xaml.XamlType.LookupContentWrappers%2A> для данного типа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeferringLoader">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; DeferringLoader { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; DeferringLoader" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.DeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeferringLoader As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ DeferringLoader { System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, представляющий поведение преобразования отложенной загрузки для этого типа.</summary>
        <value>Объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.Xaml.XamlDeferringLoader" />, представляющим поведение отложенной загрузки для данного типа.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Поведение шаблона XAML в WPF является примером поведения отложенной загрузки.  
  
 Если не используется отражение метод внутренней CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства можно вызвать <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> переопределяет на <xref:System.Xaml.XamlType> производных классов. Дополнительные сведения о возвращаемых значениях и другие правила поведения см. в документации для <xref:System.Xaml.XamlType.LookupDeferringLoader%2A> для данного типа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Позволяет определить, равен ли текущий объект другому объекту.</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">Объект, который требуется сравнить с данным объектом.</param>
        <summary>Позволяет определить, равен ли текущий объект другому объекту.</summary>
        <returns>
          <see langword="true" />, если текущий объект эквивалентен параметру <paramref name="obj" />, в противном случае — <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (System.Xaml.XamlType other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(class System.Xaml.XamlType other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.Equals(System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (other As XamlType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::Xaml::XamlType ^ other);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="other">Объект, который требуется сравнить с данным объектом.</param>
        <summary>Указывает, эквивалентен ли текущий объект другому объекту того же типа.</summary>
        <returns>
          <see langword="true" />, если текущий объект эквивалентен параметру <paramref name="other" />, в противном случае — <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAliasedProperty">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember GetAliasedProperty (System.Xaml.XamlDirective directive);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlMember GetAliasedProperty(class System.Xaml.XamlDirective directive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAliasedProperty(System.Xaml.XamlDirective)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAliasedProperty (directive As XamlDirective) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlMember ^ GetAliasedProperty(System::Xaml::XamlDirective ^ directive);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directive" Type="System.Xaml.XamlDirective" />
      </Parameters>
      <Docs>
        <param name="directive">Директива, для которой требуется найти член с псевдонимом.</param>
        <summary>Возвращает элемент XAML, который связан псевдонимом с директивой XAML посредством данного типа <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Член с псевдонимом, если он найден; в противном случае — значение <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если не используется отражение метод внутренней CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого метода можно вызвать <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> переопределяет на <xref:System.Xaml.XamlType> производных классов. Дополнительные сведения о возвращаемых значениях и другие правила поведения см. в документации для <xref:System.Xaml.XamlType.LookupAliasedProperty%2A> для данного типа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllAttachableMembers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt; GetAllAttachableMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class System.Xaml.XamlMember&gt; GetAllAttachableMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAllAttachableMembers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllAttachableMembers () As ICollection(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;System::Xaml::XamlMember ^&gt; ^ GetAllAttachableMembers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает коллекцию, содержащую все присоединяемые свойства, предоставляемые этим классом <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Коллекция, содержащая ноль или более значений <see cref="T:System.Xaml.XamlMember" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Каждый <xref:System.Xaml.XamlMember> в возвращаемой коллекции содержат значения, которые поддерживают концепцию, <xref:System.Xaml.XamlMember> является присоединяемого члена. Например, члены должны возвращать `true` для <xref:System.Xaml.XamlMember.IsAttachable%2A>, тип для <xref:System.Xaml.XamlMember.TargetType%2A>, и т. д.  
  
 Если не используется отражение метод внутренней CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого метода можно вызвать <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> переопределяет на <xref:System.Xaml.XamlType> производных классов. Дополнительные сведения о возвращаемых значениях и другие правила поведения см. в документации для <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> для данного типа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAllMembers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt; GetAllMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.ICollection`1&lt;class System.Xaml.XamlMember&gt; GetAllMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAllMembers" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAllMembers () As ICollection(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::ICollection&lt;System::Xaml::XamlMember ^&gt; ^ GetAllMembers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.ICollection&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает коллекцию, содержащую все члены, предоставляемые данным объектом <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Коллекция, содержащая ноль или более значений <see cref="T:System.Xaml.XamlMember" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызов этого метода можно вызвать <xref:System.Xaml.XamlType.LookupAllMembers%2A> переопределяет на <xref:System.Xaml.XamlType> производных классов.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetAttachableMember">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember GetAttachableMember (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlMember GetAttachableMember(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetAttachableMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAttachableMember (name As String) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlMember ^ GetAttachableMember(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Имя присоединяемого элемента в следующем формате: <c>ownerTypeName.MemberName</c>.</param>
        <summary>Возвращает элемент <see cref="T:System.Xaml.XamlMember" />, который представляет определенный именованный присоединяемый элемент <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Объект <see cref="T:System.Xaml.XamlMember" /> для запрошенного присоединяемого элемента или значение <see langword="null" />, если присоединяемого элемента с таким именем не существует.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Вызов этого метода можно вызвать <xref:System.Xaml.XamlType.LookupAttachableMember%2A> переопределяет на <xref:System.Xaml.XamlType> производных классов.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.LookupAttachableMember%2A> является виртуальным и поэтому могут переопределяться. Переопределение может стать (вредоносных целях или иным способом) для изменения сообщаемые члены типа XAML, чтобы они больше не были выровнены с ожидаемым образом <xref:System.ComponentModel.TypeDescriptor> `Get*` сведения о базовый тип CLR. Для проверок критическим с точки зрения безопасности элементов отчетов используйте базовый тип CLR.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает хэш-код для этого объекта.</summary>
        <returns>Целочисленный хэш-код.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetMember">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlMember GetMember (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xaml.XamlMember GetMember(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetMember (name As String) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xaml::XamlMember ^ GetMember(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Имя (в виде строки) члена, который требуется получить.</param>
        <summary>Возвращает член <see cref="T:System.Xaml.XamlMember" /> для определенного именованного члена из данного типа <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Сведения <see cref="T:System.Xaml.XamlMember" /> для члена, если он найден; в противном случае — значение <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Значение `name` должно быть неполным. Имена с указанием типа, указывающие присоединенного члена, которые передаются <xref:System.Xaml.XamlType.GetAttachableMember%2A> вместо него. Не следует использовать имена; членов с префиксами префикс зависит от конкретной ситуации использования и в системе типов XAML не может знать контекст такого использования и способ сопоставления префикса.  
  
 Вызов этого метода можно вызвать <xref:System.Xaml.XamlType.LookupMember%2A> переопределяет на <xref:System.Xaml.XamlType> производных классов.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.LookupMember%2A> является виртуальным и поэтому могут переопределяться. Переопределение может стать (вредоносных целях или иным способом) для изменения сообщаемые члены типа XAML, чтобы они больше не были выровнены с ожидаемым образом <xref:System.ComponentModel.TypeDescriptor> `Get*` сведения о базовый тип CLR. Для проверок критическим с точки зрения безопасности элементов отчетов используйте базовый тип CLR.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetPositionalParameters">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; GetPositionalParameters (int parameterCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; GetPositionalParameters(int32 parameterCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetPositionalParameters(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetPositionalParameters (parameterCount As Integer) As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ GetPositionalParameters(int parameterCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterCount">Количество (арность) определенного режима синтаксиса или конструктора, о котором требуется получить сведения.</param>
        <summary>Для типов расширения разметки возвращает типы позиционных параметров, поддерживаемых в конкретном употреблении расширения разметки для данного типа <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Список значений <see cref="T:System.Xaml.XamlType" />, где каждый объект <see cref="T:System.Xaml.XamlType" /> является типом для этой позиции в синтаксисе. При передаче входных данных разметки в расширение разметки необходимо задавать типы в том же порядке.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот API используется только, если этот <xref:System.Xaml.XamlType> представляет расширение разметки (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> — `true`).  
  
 Входные данные `parameterCount` не предназначен для запрашивания типа конкретного позиционного параметра. Он предназначен для указания арности использования расширения разметки. Использование расширения разметки часто имеет несколько «подписи» и используется различная арность (число) позиционных параметров для различения. Однако можно настроить контекст схемы, чтобы разрешить дублирование арностей и использовать типы позиционных параметров дифференцирования. Дополнительные сведения см. в разделе <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>. Для конкретной арности (количества) позиции и типы параметров могут различаться. Чтобы получить позиционные тип конкретной арности использования расширения разметки, сначала вызовите <xref:System.Xaml.XamlType.GetPositionalParameters%2A> Указание количества арности. Затем получите элемент в этой позиции из возвращенной коллекции.  
  
 Вызов этого метода можно вызвать <xref:System.Xaml.XamlType.LookupPositionalParameters%2A> переопределяет на <xref:System.Xaml.XamlType> производных классов.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetXamlNamespaces">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IList&lt;string&gt; GetXamlNamespaces ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;string&gt; GetXamlNamespaces() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.GetXamlNamespaces" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetXamlNamespaces () As IList(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IList&lt;System::String ^&gt; ^ GetXamlNamespaces();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает список строковых идентификаторов для пространств имен языка XAML, в которые входит этот тип.</summary>
        <returns>Список строковых значений, в котором каждая строка является URI-идентификатором для пространства имен языка XAML.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Стандартные идентификаторы пространства имен XAML — это строки, в виде URI.  
  
 Реализация по умолчанию проверяет следующие действия: Пространство имен, указанное в конструкции (<xref:System.Xaml.XamlType.%23ctor%28System.String%2CSystem.String%2CSystem.Collections.Generic.IList%7BSystem.Xaml.XamlType%7D%2CSystem.Xaml.XamlSchemaContext%29> только подпись); и пространства имен, которые доступны из контекста схемы. Если все элементы данного `null`, создается новый список, содержащий одну пустую строку. Можно переопределить этот метод, чтобы изменить методологию подстановки.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Invoker">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlTypeInvoker Invoker { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlTypeInvoker Invoker" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.Invoker" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Invoker As XamlTypeInvoker" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlTypeInvoker ^ Invoker { System::Xaml::Schema::XamlTypeInvoker ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlTypeInvoker</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает реализацию объекта <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />, связанную с данным типом <see cref="T:System.Xaml.XamlType" />.</summary>
        <value>Реализация объекта <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />, связанная с данным типом <see cref="T:System.Xaml.XamlType" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если не используется отражение метод внутренней CLR по умолчанию для <xref:System.Xaml.XamlType>, вызов <xref:System.Xaml.XamlType.Invoker%2A> можно вызвать либо <xref:System.Xaml.XamlType.LookupInvoker%2A> или конкретного переопределения этого метода. Дополнительные сведения о возвращаемых значениях и другие правила поведения см. в документации для <xref:System.Xaml.XamlType.LookupInvoker%2A> для данного типа.  
  
 Если <xref:System.Xaml.XamlType.LookupInvoker%2A> переопределить возвращает `null`, или если реализация по умолчанию возвращает `null` из-за недостатка <xref:System.Xaml.XamlType.UnderlyingType%2A> для этого <xref:System.Xaml.XamlType>, затем <xref:System.Xaml.XamlType.Invoker%2A> возвращает <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsAmbient">
      <MemberSignature Language="C#" Value="public bool IsAmbient { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsAmbient" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsAmbient" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsAmbient As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsAmbient { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> внешний тип в соответствии с определением языка XAML.</summary>
        <value>
          Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет внешний тип; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если не используется отражение метод внутренней CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства можно вызвать <xref:System.Xaml.XamlType.LookupIsAmbient%2A> переопределяет на <xref:System.Xaml.XamlType> производных классов. Дополнительные сведения о возвращаемых значениях и другие правила поведения см. в документации для <xref:System.Xaml.XamlType.LookupIsAmbient%2A> для данного типа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsArray">
      <MemberSignature Language="C#" Value="public bool IsArray { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsArray" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsArray" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsArray As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsArray { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> массив.</summary>
        <value>
          Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет массив; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если не используется отражение метод внутренней CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства можно вызвать <xref:System.Xaml.XamlType.LookupCollectionKind%2A> переопределяет на <xref:System.Xaml.XamlType> производных классов. Дополнительные сведения о возвращаемых значениях и другие правила поведения см. в документации для <xref:System.Xaml.XamlType.LookupCollectionKind%2A> для данного типа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsCollection">
      <MemberSignature Language="C#" Value="public bool IsCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCollection" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCollection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCollection { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> коллекцию.</summary>
        <value>
          Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет коллекцию; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если не используется отражение метод внутренней CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства можно вызвать <xref:System.Xaml.XamlType.LookupCollectionKind%2A> переопределяет на <xref:System.Xaml.XamlType> производных классов. Дополнительные сведения о возвращаемых значениях и другие правила поведения см. в документации для <xref:System.Xaml.XamlType.LookupCollectionKind%2A> для данного типа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsConstructible">
      <MemberSignature Language="C#" Value="public bool IsConstructible { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsConstructible" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsConstructible" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsConstructible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsConstructible { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> конструируемый тип в соответствии с определением языка XAML.</summary>
        <value>
          Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет конструируемый тип; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство выравнивается по `[is default constructible]` элемента сведения в соответствии со спецификацией [MS-XAML].  
  
 Если не используется отражение метод внутренней CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства можно вызвать <xref:System.Xaml.XamlType.LookupIsConstructible%2A> переопределяет на <xref:System.Xaml.XamlType> производных классов. Дополнительные сведения о возвращаемых значениях и другие правила поведения см. в документации для <xref:System.Xaml.XamlType.LookupIsConstructible%2A> для данного типа.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlType.ConstructionRequiresArguments" />
      </Docs>
    </Member>
    <Member MemberName="IsDictionary">
      <MemberSignature Language="C#" Value="public bool IsDictionary { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDictionary" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsDictionary" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsDictionary As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsDictionary { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> словарь в соответствии с определением языка XAML.</summary>
        <value>
          Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет словарь; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство выравнивается по `[is dictionary]` элемента сведения в соответствии со спецификацией [MS-XAML].  
  
 Если не используется отражение метод внутренней CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства можно вызвать <xref:System.Xaml.XamlType.LookupCollectionKind%2A> переопределяет на <xref:System.Xaml.XamlType> производных классов. Дополнительные сведения о возвращаемых значениях и другие правила поведения см. в документации для <xref:System.Xaml.XamlType.LookupCollectionKind%2A> для данного типа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsGeneric">
      <MemberSignature Language="C#" Value="public bool IsGeneric { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsGeneric" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsGeneric" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsGeneric As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsGeneric { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, представляет ли этот данный тип <see cref="T:System.Xaml.XamlType" /> универсальный тип.</summary>
        <value>
          Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет универсальный тип; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство является свойством вспомогательный, которое проверяет наличие в нулевое значение <xref:System.Xaml.XamlType.TypeArguments%2A>. Не зависит `Lookup` метод, связанных с <xref:System.Xaml.XamlType.IsGeneric%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMarkupExtension">
      <MemberSignature Language="C#" Value="public bool IsMarkupExtension { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMarkupExtension" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsMarkupExtension" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsMarkupExtension As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsMarkupExtension { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> расширение разметки.</summary>
        <value>
          Значение <see langword="true" />, если этот класс <see cref="T:System.Xaml.XamlType" /> представляет расширение разметки; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 В терминах спецификации XAML, этот тип должен быть назначен `x:MarkupExtension` для возврата `true` для <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.  
  
 Если не используется отражение метод внутренней CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства можно вызвать <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> переопределяет на <xref:System.Xaml.XamlType> производных классов. Дополнительные сведения о возвращаемых значениях и другие правила поведения см. в документации для <xref:System.Xaml.XamlType.LookupIsMarkupExtension%2A> для данного типа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameScope">
      <MemberSignature Language="C#" Value="public bool IsNameScope { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameScope" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsNameScope" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameScope As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameScope { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> область имен XAML в соответствии с определением языка XAML.</summary>
        <value>
          Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет область имен XAML; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Пространства имен XAML обеспечивает уникальность имени свойства или свойств, используемых для `x:Name`  /  `[name property]`. Если <xref:System.Xaml.XamlType.IsNameScope%2A> — `true`, должна существовать некоторый механизм для обеспечения уникальности и следует оценить с точки зрения этот тип-владелец пространства имен XAML. Область имен XAML затем расширяет содержимое типа пока не будет обнаружен другой тип-владелец области видимости имен XAML.  
  
 Это свойство выравнивается по `[is name scope]` элемента сведения в соответствии со спецификацией [MS-XAML].  
  
 Если не используется отражение метод внутренней CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства можно вызвать <xref:System.Xaml.XamlType.LookupIsNameScope%2A> переопределяет на <xref:System.Xaml.XamlType> производных классов.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNameValid">
      <MemberSignature Language="C#" Value="public bool IsNameValid { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNameValid" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsNameValid" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNameValid As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNameValid { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, инициализирован ли данный тип <see cref="T:System.Xaml.XamlType" /> с использованием допустимой строки <see langword="xamlName" /> в качестве его свойства <see cref="P:System.Xaml.XamlType.Name" />.</summary>
        <value>
          Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> инициализирован с использованием допустимой строки <see langword="xamlName" />; в противном случае — значение <see langword="false" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsNullable">
      <MemberSignature Language="C#" Value="public bool IsNullable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsNullable" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsNullable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsNullable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsNullable { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> тип, допускающий значение null, в соответствии с определением языка XAML.</summary>
        <value>
          Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет тип, допускающий значение null; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство выравнивается по `[is nullable]` элемента сведения в соответствии со спецификацией [MS-XAML].  
  
 Если не используется отражение метод внутренней CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства можно вызвать <xref:System.Xaml.XamlType.LookupIsNullable%2A> переопределяет на <xref:System.Xaml.XamlType> производных классов.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsPublic">
      <MemberSignature Language="C#" Value="public bool IsPublic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsPublic" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsPublic" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsPublic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsPublic { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> открытый тип в соответствующей системе типов.</summary>
        <value>
          Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет открытый тип; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если не используется отражение метод внутренней CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства можно вызвать <xref:System.Xaml.XamlType.LookupIsPublic%2A> переопределяет на <xref:System.Xaml.XamlType> производных классов.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.LookupIsPublic%2A> является виртуальным и поэтому могут переопределяться. Переопределение обладает потенциалом (вредоносных целях или иным способом) для изменения доступа сведения о типе XAML, чтобы он больше не согласовывался ожидаемым способом с системы и доступа к информации о типе его базового типа CLR. Для проверок операций присваивания и доступа к критическим с точки зрения безопасности используйте базовый тип CLR.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUnknown">
      <MemberSignature Language="C#" Value="public bool IsUnknown { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUnknown" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsUnknown" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUnknown As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUnknown { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> тип, который не может быть разрешен в базовой системе типов.</summary>
        <value>
          Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет неразрешимый тип; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если не используется отражение метод внутренней CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства можно вызвать <xref:System.Xaml.XamlType.LookupIsUnknown%2A> переопределяет на <xref:System.Xaml.XamlType> производных классов.  
  
 Для пути загрузки, который включает в себя <xref:System.Xaml.XamlObjectWriter>, <xref:System.Xaml.XamlType> с `true` для <xref:System.Xaml.XamlType.IsUnknown%2A> не может быть записан в граф объектов. В реализации по умолчанию в <xref:System.Xaml> , <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A?displayProperty=nameWithType> вызова создается исключение <xref:System.Xaml.XamlObjectWriterException> при соответствующие <xref:System.Xaml.XamlType> отчеты `true` для <xref:System.Xaml.XamlType.IsUnknown%2A>. Не следует передавать <xref:System.Xaml.XamlType> с <xref:System.Xaml.XamlType.IsUnknown%2A> как `true` Если вы не готовы к обработке исключений из <xref:System.Xaml.XamlObjectWriter>, или у вас есть другие способы настройки <xref:System.Xaml.XamlObjectWriter> поведение или поток узлов XAML перед записью объекта граф.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsUsableDuringInitialization">
      <MemberSignature Language="C#" Value="public bool IsUsableDuringInitialization { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsUsableDuringInitialization" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsUsableDuringInitialization" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsUsableDuringInitialization As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsUsableDuringInitialization { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, которое показывает, выполняется ли построение данного типа <see cref="T:System.Xaml.XamlType" /> сверху вниз во время инициализации XAML.</summary>
        <value>
          Значение <see langword="true" />, если этот класс <see cref="T:System.Xaml.XamlType" /> строится сверху вниз в ходе инициализации XAML; в противном случае — значение <see langword="false" />. Значение по умолчанию: <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Сверху вниз — метафора, приблизительно описывающая поведение процессора XAML при создании графа объектов. При построении сверху вниз, создается экземпляр типа, подключенный к родительскому элементу, а затем настраиваются его свойства. Построение сверху вниз позволяет избежать вызова обработчиков измененных свойств несколько раз. Такая обработка приведет к нарушению графа объектов и таким образом, устраняет несколько вызовов обработчика и предоставляет оптимизировать производительность при запуске графа объектов.  
  
 Если не используется отражение метод внутренней CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства можно вызвать <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> переопределяет на <xref:System.Xaml.XamlType> производных классов. Дополнительные сведения о возвращаемых значениях и другие правила поведения см. в документации для <xref:System.Xaml.XamlType.LookupUsableDuringInitialization%2A> для данного типа.  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Windows.Markup.XamlReader.LoadAsync(System.IO.Stream)" />
        <altmember cref="P:System.Windows.FrameworkElement.IsInitialized" />
      </Docs>
    </Member>
    <Member MemberName="IsWhitespaceSignificantCollection">
      <MemberSignature Language="C#" Value="public bool IsWhitespaceSignificantCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsWhitespaceSignificantCollection" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsWhitespaceSignificantCollection" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsWhitespaceSignificantCollection As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsWhitespaceSignificantCollection { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> коллекцию значащих символов пробелов в соответствии с определением XML.</summary>
        <value>
          Значение <see langword="true" />, если этот тип <see cref="T:System.Xaml.XamlType" /> представляет коллекцию значащих символов пробелов; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если не используется отражение метод внутренней CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства можно вызвать <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> переопределяет на <xref:System.Xaml.XamlType> производных классов. Дополнительные сведения о возвращаемых значениях и другие правила поведения см. в документации для <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> для данного типа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsXData">
      <MemberSignature Language="C#" Value="public bool IsXData { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsXData" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.IsXData" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsXData As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsXData { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> XML-<see langword="XDATA" /> в соответствии с определением XAML.</summary>
        <value>
          Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет <see langword="XDATA" />; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство выравнивается по `[is xdata]` элемента сведения в соответствии со спецификацией [MS-XAML].  
  
 Если не используется отражение метод внутренней CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства можно вызвать <xref:System.Xaml.XamlType.LookupIsXData%2A> переопределяет на <xref:System.Xaml.XamlType> производных классов. Дополнительные сведения о возвращаемых значениях и другие правила поведения см. в документации для <xref:System.Xaml.XamlType.LookupIsXData%2A> для данного типа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType ItemType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType ItemType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ItemType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ ItemType { System::Xaml::XamlType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, предоставляющее сведения о типе для свойства <see langword="Items" /> данного типа <see cref="T:System.Xaml.XamlType" />.</summary>
        <value>Объект <see cref="T:System.Xaml.XamlType" /> для типа элементов в коллекции или значение <see langword="null" />, если данный тип <see cref="T:System.Xaml.XamlType" /> не представляет коллекцию.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство применяется, только если этот <xref:System.Xaml.XamlType> представляет коллекцию (<xref:System.Xaml.XamlType.IsCollection%2A> — `true`). `Items` Задано любое свойство содержит элементов в коллекции или массиве этого типа.  
  
 Если не используется отражение метод внутренней CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства можно вызвать <xref:System.Xaml.XamlType.LookupItemType%2A> переопределяет на <xref:System.Xaml.XamlType> производных классов. Дополнительные сведения о возвращаемых значениях и другие правила поведения см. в документации для <xref:System.Xaml.XamlType.LookupItemType%2A> для данного типа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="KeyType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType KeyType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType KeyType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.KeyType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property KeyType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ KeyType { System::Xaml::XamlType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, предоставляющее сведения о типе для свойства ключа данного типа <see cref="T:System.Xaml.XamlType" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет словарь.</summary>
        <value>Объект <see cref="T:System.Xaml.XamlType" /> для типа ключа для использования словаря или значение <see langword="null" />, если данный тип <see cref="T:System.Xaml.XamlType" /> не представляет словарь.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство применяется, только если этот <xref:System.Xaml.XamlType> представляет словарь (<xref:System.Xaml.XamlType.IsDictionary%2A> — `true`).  
  
 Если не используется отражение метод внутренней CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства можно вызвать <xref:System.Xaml.XamlType.LookupKeyType%2A> переопределяет на <xref:System.Xaml.XamlType> производных классов. Дополнительные сведения о возвращаемых значениях и другие правила поведения см. в документации для <xref:System.Xaml.XamlType.LookupKeyType%2A> для данного типа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAliasedProperty">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupAliasedProperty (System.Xaml.XamlDirective directive);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupAliasedProperty(class System.Xaml.XamlDirective directive) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAliasedProperty(System.Xaml.XamlDirective)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAliasedProperty (directive As XamlDirective) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupAliasedProperty(System::Xaml::XamlDirective ^ directive);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="directive" Type="System.Xaml.XamlDirective" />
      </Parameters>
      <Docs>
        <param name="directive">Директива, для которой требуется найти член с псевдонимом.</param>
        <summary>Возвращает элемент XAML, который связан псевдонимом с директивой XAML посредством данного типа <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Член с псевдонимом, если он найден; в противном случае — значение <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод можно вызвать, если вызывающий объект возвращает значение из <xref:System.Xaml.XamlType.GetAliasedProperty%2A>.  
  
 Реализация по умолчанию может возвращать результаты для следующих директив XAML: `Key`; `Name`; `Uid`; и `xml:lang`. Значения для этих зависят от базового отражения и по-прежнему могут возвращать `null` если связанное свойство не найден.  
  
 Переопределите этот метод, если не полагаться на внутреннее отражение CLR по умолчанию и использует метаданные или другие методы для создания отчетов о системе типов XAML или информации о схеме для типа.  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xaml.XamlDirective" />
        <altmember cref="T:System.Xaml.XamlLanguage" />
      </Docs>
    </Member>
    <Member MemberName="LookupAllAttachableMembers">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt; LookupAllAttachableMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlMember&gt; LookupAllAttachableMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAllAttachableMembers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAllAttachableMembers () As IEnumerable(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlMember ^&gt; ^ LookupAllAttachableMembers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает перечисляемый набор, содержащий все присоединяемые свойства, которые предоставляются данным классом <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Перечисляемый набор, содержащий ноль или более значений <see cref="T:System.Xaml.XamlMember" />, или значение <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод можно вызвать, если вызывающий объект возвращает значение из <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A>.  
  
 Несмотря на то что <xref:System.Xaml.XamlType.GetAllAttachableMembers%2A> возвращает универсальную коллекцию, это `Lookup` метод возвращает универсальный перечислимый набор.  
  
 Реализация по умолчанию использует внутреннее отражение CLR. Когда <xref:System.Xaml.XamlType.UnderlyingType%2A> — `null`, реализация по умолчанию можно использовать <xref:System.Xaml.XamlType.BaseType%2A>, если он доступен. Это поведение вызывает <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> рекурсивно, чтобы попытаться найти является допустимым базовым типом и возвращает `null` Если допустимый базовый тип не существует.  
  
 Переопределите этот метод, если не полагаться на внутреннее отражение CLR по умолчанию и использует метаданные или другие методы для создания отчетов о системе типов XAML или информации о схеме для типа. Возвращаемое значение null необходимо зарезервировать для случаев, где нельзя определить из-за отсутствия поддержки тип системы, или отражения. Если тип является допустимым и доступны отражения или другие методы, но тип не имеет присоединяемых членов, взамен следует возвращать пустой <xref:System.Collections.Generic.IEnumerable%601> значение.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAllMembers">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt; LookupAllMembers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerable`1&lt;class System.Xaml.XamlMember&gt; LookupAllMembers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAllMembers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAllMembers () As IEnumerable(Of XamlMember)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IEnumerable&lt;System::Xaml::XamlMember ^&gt; ^ LookupAllMembers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Xaml.XamlMember&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает перечисляемый набор, содержащий все члены, предоставляемые данным классом <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Перечисляемый набор, содержащий ноль или более значений <see cref="T:System.Xaml.XamlMember" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод можно вызвать, если вызывающий объект возвращает значение из <xref:System.Xaml.XamlType.GetAllMembers%2A>.  
  
 Несмотря на то что <xref:System.Xaml.XamlType.GetAllMembers%2A> возвращает универсальную коллекцию, это `Lookup` метод возвращает универсальный перечислимый набор.  
  
 Реализация по умолчанию использует внутреннее отражение CLR. Для случаев, где <xref:System.Xaml.XamlType.UnderlyingType%2A> — `null`, реализация по умолчанию можно использовать <xref:System.Xaml.XamlType.BaseType%2A>, если он доступен. Это поведение вызывает <xref:System.Xaml.XamlType.LookupAllMembers%2A> рекурсивно, чтобы попытаться найти является допустимым базовым типом и возвращает `null` Если допустимый базовый тип не существует.  
  
 Переопределите этот метод, если не полагаться на внутреннее отражение CLR по умолчанию и использует метаданные или другие методы для создания отчетов о системе типов XAML или информации о схеме для типа. Возвращаемое значение null необходимо зарезервировать для случаев, где нельзя определить из-за отсутствия поддержки тип системы, или отражения. Если тип является допустимым, доступны отражения или другие методы; Если тип не имеет членов, взамен следует возвращать пустой <xref:System.Collections.Generic.IEnumerable%601> значение.  
  
 Возвращаемые значения для <xref:System.Xaml.XamlType.LookupAllMembers%2A> и <xref:System.Xaml.XamlType.LookupAllAttachableMembers%2A> должен быть взаимно исключают друг друга. Если у вас есть ситуации, когда резервный тип системного свойства может поддерживать использование стандартных экземпляров, а также использования присоединения, этот элемент, должна быть зарегистрирована как два разных <xref:System.Xaml.XamlMember> значений, в которых отображаются в списке присоединяемого и другую в одно значение Список стандартных элементов.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAllowedContentTypes">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; LookupAllowedContentTypes ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; LookupAllowedContentTypes() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAllowedContentTypes" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAllowedContentTypes () As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ LookupAllowedContentTypes();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает список типов, которые могут использоваться в качестве значения <see cref="P:System.Xaml.XamlType.ContentProperty" /> для данного типа <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Список возможных типов содержимого.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод можно вызвать, если вызывающий объект возвращает значение из <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.  
  
 Типы, которые интерпретируются как <xref:System.Xaml.XamlType.CanAssignTo%2A> для конкретного типа содержимого не учитываются несколько типов в целях <xref:System.Xaml.XamlType.AllowedContentTypes%2A>.  
  
 Реализация по умолчанию можно использовать другие свойства <xref:System.Xaml.XamlType> (<xref:System.Xaml.XamlType.ContentWrappers%2A>, <xref:System.Xaml.XamlType.ContentProperty%2A>, или <xref:System.Xaml.XamlType.ItemType%2A>) для получения результата. `Lookup` Переопределяет для вышеуказанных свойство также может вызываться в этом определении.  
  
 Переопределите этот метод, если не полагаться на внутреннее отражение CLR по умолчанию и использует метаданные или другие методы для создания отчетов о системе типов XAML или информации о схеме для типа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupAttachableMember">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupAttachableMember (string name);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupAttachableMember(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupAttachableMember(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupAttachableMember (name As String) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupAttachableMember(System::String ^ name);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">Имя присоединяемого элемента в следующем формате: <c>ownerTypeName.MemberName</c>.</param>
        <summary>Возвращает <see cref="T:System.Xaml.XamlMember" /> для конкретного именованного присоединяемого элемента из этого <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Объект <see cref="T:System.Xaml.XamlMember" /> для запрошенного присоединяемого элемента или значение <see langword="null" />, если присоединяемого элемента с таким именем не существует.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод можно вызвать, если вызывающий объект возвращает значение из <xref:System.Xaml.XamlType.GetAttachableMember%2A>.  
  
 Реализация по умолчанию использует внутреннее отражение CLR. Когда <xref:System.Xaml.XamlType.UnderlyingType%2A> — `null`, реализация по умолчанию можно использовать <xref:System.Xaml.XamlType.BaseType%2A>, если он доступен. Это поведение вызывает <xref:System.Xaml.XamlType.LookupAttachableMember%2A> рекурсивно, чтобы попытаться найти является допустимым базовым типом и возвращает `null` Если допустимый базовый тип не существует.  
  
 Переопределите этот метод, если не полагаться на внутреннее отражение CLR по умолчанию и использует метаданные или другие методы для создания отчетов о системе типов XAML или информации о схеме для типа.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.LookupAttachableMember%2A> является виртуальным и поэтому могут переопределяться. Переопределение может стать (вредоносных целях или иным способом) для изменения сообщаемые члены типа XAML, чтобы они больше не были выровнены с ожидаемым образом <xref:System.ComponentModel.TypeDescriptor> `Get*` сведения о базовый тип CLR. Для проверок критическим с точки зрения безопасности элементов отчетов используйте базовый тип CLR.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupBaseType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupBaseType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupBaseType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupBaseType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupBaseType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupBaseType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Xaml.XamlType" /> для непосредственного базового типа данного типа XAML. Определение этого значения основано на базовом типе данного типа <see cref="T:System.Xaml.XamlType" /> и контексте схемы.</summary>
        <returns>Тип <see cref="T:System.Xaml.XamlType" /> для непосредственного базового типа данного типа XAML.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод можно вызвать, если вызывающий объект возвращает значение из <xref:System.Xaml.XamlType.BaseType%2A>.  
  
 Реализация по умолчанию может возвращать внутреннюю константу, представляющий <xref:System.Object> Если <xref:System.Xaml.XamlType.UnderlyingType%2A> — `null`.  
  
 Переопределите этот метод, если не полагаться на внутреннее отражение CLR по умолчанию и использует метаданные или другие методы для создания отчетов о системе типов XAML или информации о схеме для типа.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.LookupBaseType%2A> является виртуальным и поэтому могут переопределяться. Переопределение обладает потенциалом (вредоносных целях или иным способом) для изменения сведений о которой тип о типе XAML, чтобы он больше не согласовывался ожидаемым способом с информацией о его базового типа CLR в системе типов. Для проверок операций присваивания и доступа к критическим с точки зрения безопасности используйте базовый тип CLR.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCollectionKind">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlCollectionKind LookupCollectionKind ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance valuetype System.Xaml.Schema.XamlCollectionKind LookupCollectionKind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupCollectionKind" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupCollectionKind () As XamlCollectionKind" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlCollectionKind LookupCollectionKind();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlCollectionKind</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает значение перечисления <see cref="T:System.Xaml.Schema.XamlCollectionKind" />, объявляющее, какой конкретный тип коллекции используется этим типом <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Значение перечисления <see cref="T:System.Xaml.Schema.XamlCollectionKind" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод вызывается внутренний закрытый метод (ни один public `CollectionKind` или `GetCollectionKind` API существует на <xref:System.Xaml.XamlType>).  
  
 Реализация по умолчанию использует внутреннее отражение CLR. Для случаев, где <xref:System.Xaml.XamlType.UnderlyingType%2A> — `null`, реализация по умолчанию можно использовать <xref:System.Xaml.XamlType.BaseType%2A>, если он доступен. Это поведение косвенно вызывает <xref:System.Xaml.XamlType.LookupCollectionKind%2A> рекурсивно, чтобы попытаться найти является допустимым базовым типом; он возвращает <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType> Если допустимый базовый тип не существует. Как правило, реализация по умолчанию пытается найти `Add` метод базового типа с помощью отражения. Если найден, <xref:System.Reflection.MethodInfo> из `Add` метод является достаточно информации для определения того, какие <xref:System.Xaml.Schema.XamlCollectionKind> должно возвращаться значение. В противном случае возвращает значение <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType>.  
  
 Переопределите этот метод, если не полагаться на внутреннее отражение CLR по умолчанию и использует метаданные или другие методы для создания отчетов о системе типов XAML или информации о схеме для типа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupConstructionRequiresArguments">
      <MemberSignature Language="C#" Value="protected virtual bool LookupConstructionRequiresArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupConstructionRequiresArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupConstructionRequiresArguments" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupConstructionRequiresArguments () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupConstructionRequiresArguments();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает значение, указывающее, должен ли этот класс <see cref="T:System.Xaml.XamlType" /> иметь аргументы (универсальные ограничения с помощью <see langword="x:TypeArguments" />, текст инициализации или другие технологии языка XAML) для создания допустимого экземпляра этого типа.</summary>
        <returns>
          Значение <see langword="true" />, если для создания экземпляра требуется некоторое значение аргумента; в противном случае — значение false.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод можно вызвать, если вызывающий объект возвращает значение из <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>.  
  
 Реализация по умолчанию возвращает `false` система типов для типов, считающихся типов значений в среде CLR. Для, отличные от типов значений, отражение CLR <xref:System.Reflection.ConstructorInfo> используется для определения того, что существует конструктор по умолчанию.  
  
 Переопределите этот метод, если не полагаться на внутреннее отражение CLR по умолчанию и использует метаданные или другие методы для создания отчетов о системе типов XAML или информации о схеме для типа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupContentProperty">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupContentProperty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupContentProperty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupContentProperty" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupContentProperty () As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupContentProperty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает сведения <see cref="T:System.Xaml.XamlMember" /> для свойства содержимого этого класса <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>
          Сведения <see cref="T:System.Xaml.XamlMember" /> для свойства содержимого данного типа <see cref="T:System.Xaml.XamlType" />. Может иметь значение <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод можно вызвать, если вызывающий объект возвращает значение из <xref:System.Xaml.XamlType.ContentProperty%2A>.  
  
 Реализация по умолчанию проверяет наличие <xref:System.Windows.Markup.ContentPropertyAttribute> в определении типа. Можно также проверить <xref:System.Xaml.XamlType.BaseType%2A> для атрибута, если атрибут не найден в непосредственном базовом типе. Если эти проверки не обнаруживают типа содержимого, реализация по умолчанию возвращает `null`.  
  
 Переопределите этот метод, если не полагаться на внутреннее отражение CLR по умолчанию и использует метаданные или другие методы для создания отчетов о системе типов XAML или информации о схеме для типа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupContentWrappers">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; LookupContentWrappers ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; LookupContentWrappers() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupContentWrappers" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupContentWrappers () As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ LookupContentWrappers();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Получает список значений <see cref="T:System.Xaml.XamlType" />, представляющих оболочки содержимого для этого класса <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Список значений <see cref="T:System.Xaml.XamlType" />, представляющих оболочки содержимого для этого класса <see cref="T:System.Xaml.XamlType" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Оболочка содержимого — это класс, который представляет тип коллекции содержимого, когда типы, используемые в этой коллекции не являются смежными системе типов. Типы элементов коллекции для содержимого оболочки должны быть ограничены определенным образом помимо <xref:System.Object> или нейтральным эквивалентом объекта. Тем не менее это ограничение применяется только намеренно или в целях свойств, использующих этот тип, а не в системе типов. Для типа может существовать более одного оболочка содержимого.  
  
 Пример класса и сценарий из реализации XAML в WPF см. в разделе <xref:System.Windows.Documents.InlineCollection>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupCustomAttributeProvider">
      <MemberSignature Language="C#" Value="protected virtual System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Reflection.ICustomAttributeProvider LookupCustomAttributeProvider() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupCustomAttributeProvider" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupCustomAttributeProvider () As ICustomAttributeProvider" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Reflection::ICustomAttributeProvider ^ LookupCustomAttributeProvider();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.ICustomAttributeProvider</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>При реализации в производном классе возвращает реализацию класса <see cref="T:System.Reflection.ICustomAttributeProvider" />.</summary>
        <returns>Реализация <see cref="T:System.Reflection.ICustomAttributeProvider" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Переопределите этот метод для предоставления внутреннее отражение альтернативным способом получения значений атрибутов CLR. В отсутствие переопределения внутренний рефлектор использует типичные логику отражения среды CLR.  
  
 Реализация по умолчанию возвращает значение `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupDeferringLoader">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Xaml.XamlDeferringLoader&gt; LookupDeferringLoader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupDeferringLoader" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupDeferringLoader () As XamlValueConverter(Of XamlDeferringLoader)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Xaml::XamlDeferringLoader ^&gt; ^ LookupDeferringLoader();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Xaml.XamlDeferringLoader&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" />, используемый для отложенной загрузки объектов, объявленных в языке XAML.</summary>
        <returns>Объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.Xaml.XamlDeferringLoader" /> на универсальный класс.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод можно вызвать, если вызывающий объект возвращает значение из <xref:System.Xaml.XamlType.DeferringLoader%2A>. Переопределите этот метод, если требуется <xref:System.Xaml.XamlType.DeferringLoader%2A> для возвращаемых другое значение включено по умолчанию внутреннего отражения и также предоставляют пользовательские <xref:System.Xaml.Schema.XamlTypeInvoker> сведения.  
  
 Реализация по умолчанию возвращает объект на основе чтения <xref:System.Windows.Markup.XamlDeferLoadAttribute>. Можно также проверить <xref:System.Xaml.XamlType.BaseType%2A> для атрибута, если атрибут не найден в непосредственном базовом типе. Если значение недоступно, этот метод возвращает `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupInvoker">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlTypeInvoker LookupInvoker ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlTypeInvoker LookupInvoker() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupInvoker" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupInvoker () As XamlTypeInvoker" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlTypeInvoker ^ LookupInvoker();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlTypeInvoker</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Xaml.Schema.XamlTypeInvoker" />, связанный с данным типом <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Сведения <see cref="T:System.Xaml.Schema.XamlTypeInvoker" /> для данного типа <see cref="T:System.Xaml.XamlType" />; в противном случае — значение <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод может вызываться путем вызова метода <xref:System.Xaml.XamlType.Invoker%2A>.  
  
 Реализация по умолчанию не требует <xref:System.Xaml.XamlType> создаваться с помощью одного из конструкторов, передайте первоначальный <xref:System.Xaml.Schema.XamlTypeInvoker>. Тем не менее <xref:System.Xaml.XamlType.UnderlyingType%2A> значение должно существовать для <xref:System.Xaml.XamlType>; в противном случае реализация по умолчанию возвращает `null`.  
  
 Переопределите этот метод, если также создать класс, производный от <xref:System.Xaml.Schema.XamlTypeInvoker> и должны возвращать производного класса. Если возвращается `null`, <xref:System.Xaml.XamlType.Invoker%2A> возвращает <xref:System.Xaml.Schema.XamlTypeInvoker.UnknownInvoker%2A?displayProperty=nameWithType> вызывающим объектам.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsAmbient">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsAmbient ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsAmbient() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsAmbient" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsAmbient () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsAmbient();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> внешний тип в соответствии с определением языка XAML.</summary>
        <returns>
          Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет внешний тип; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод может вызываться путем вызова метода <xref:System.Xaml.XamlType.IsAmbient%2A>.  
  
 Реализация по умолчанию использует отражение CLR на <xref:System.Xaml.XamlType.UnderlyingType%2A> и может проверить базовые типы. Эта реализация проверяет наличие <xref:System.Windows.Markup.AmbientAttribute> , применяется для определения соответствующего типа на уровне класса и возвращающий `true` в этом случае. Во всех остальных случаях возвращать `false`.  
  
 Переопределите этот метод, если требуется <xref:System.Xaml.XamlType.IsAmbient%2A> для возвращаемых другое значение включено по умолчанию внутреннего отражения.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsConstructible">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsConstructible ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsConstructible() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsConstructible" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsConstructible () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsConstructible();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> конструируемый тип в соответствии с определением языка XAML.</summary>
        <returns>
          Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет конструируемый тип; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод может вызываться путем вызова метода <xref:System.Xaml.XamlType.IsConstructible%2A>.  
  
 Реализация по умолчанию использует отражение CLR на <xref:System.Xaml.XamlType.UnderlyingType%2A>. Тип должен быть конкретный невложенных и закрытые. Реализация по умолчанию проверяет, является ли тип типом значения и возвращают <xref:System.Xaml.XamlType.ConstructionRequiresArguments%2A>. Значение NULL, <xref:System.Xaml.XamlType.UnderlyingType%2A>, этот метод возвращает `true`.  
  
 Переопределите этот метод, если требуется <xref:System.Xaml.XamlType.IsConstructible%2A> для возвращаемых другое значение включено по умолчанию внутреннего отражения.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsMarkupExtension">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsMarkupExtension ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsMarkupExtension() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsMarkupExtension" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsMarkupExtension () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsMarkupExtension();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает значение, указывающее, представляет ли этот класс <see cref="T:System.Xaml.XamlType" /> расширение разметки.</summary>
        <returns>
          Значение <see langword="true" />, если этот класс <see cref="T:System.Xaml.XamlType" /> представляет расширение разметки; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод может вызываться путем вызова метода <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.  
  
 Реализация по умолчанию состоит только из этого вызова.  
  
 `return CanAssignTo(XamlLanguage.MarkupExtension);`  
  
 Переопределите этот метод, если требуется <xref:System.Xaml.XamlType.IsMarkupExtension%2A> для использования другой логикой.  
  
 В терминах спецификации XAML, этот тип должен быть назначен `x:MarkupExtension` для возврата `true` для <xref:System.Xaml.XamlType.IsMarkupExtension%2A>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsNameScope">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsNameScope ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsNameScope() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsNameScope" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsNameScope () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsNameScope();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> область имен XAML в соответствии с определением языка XAML.</summary>
        <returns>
          Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет область имен XAML; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод может вызываться путем вызова метода <xref:System.Xaml.XamlType.IsNameScope%2A>.  
  
 Реализация по умолчанию создает <xref:System.Xaml.XamlType.CanAssignTo%2A> косвенно вызывать по типу <xref:System.Windows.Markup.INameScope>. <xref:System.Windows.Markup.INameScope> — Это интерфейс, определенный в сборке WindowsBase.dll. Этот метод для идентификации области имен XAML используется одновременно реализации XAML в WPF и Windows Workflow Foundation.  
  
 Переопределите этот метод, если требуется <xref:System.Xaml.XamlType.IsNameScope%2A> для использования другой логикой.  
  
 Пространства имен XAML обеспечивает уникальность имени свойства или свойств, используемых для `x:Name`  /  `[name property]`. Если <xref:System.Xaml.XamlType.IsNameScope%2A> — `true`, то механизм для обеспечения уникальности должна существовать и следует оценить с точки зрения этот тип-владелец пространства имен XAML. Область имен XAML затем расширяет содержимое типа пока не будет обнаружен другой тип владельца области имен XAML.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xaml.XamlObjectWriter.RootNameScope" />
      </Docs>
    </Member>
    <Member MemberName="LookupIsNullable">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsNullable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsNullable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsNullable" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsNullable () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsNullable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> тип, допускающий значение null, в соответствии с определением языка XAML.</summary>
        <returns>
          Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет тип, допускающий значение null; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод может вызываться путем вызова метода <xref:System.Xaml.XamlType.IsNullable%2A>.  
  
 Реализация по умолчанию определяет исходя CLR core библиотеки допускает значения NULL концепции, проверяются согласно <xref:System.Xaml.XamlType.UnderlyingType%2A>. Значение NULL, <xref:System.Xaml.XamlType.UnderlyingType%2A>, она возвращает `true`.  
  
 Переопределите этот метод, если требуется <xref:System.Xaml.XamlType.IsNullable%2A> для использования другой логикой.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsPublic">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsPublic ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsPublic() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsPublic" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsPublic () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsPublic();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> открытый тип в соответствующей системе типов.</summary>
        <returns>
          Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет открытый тип; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод может вызываться путем вызова метода <xref:System.Xaml.XamlType.IsPublic%2A>.  
  
 Реализация по умолчанию использует отражение CLR в ненулевое значение <xref:System.Xaml.XamlType.UnderlyingType%2A>. Значение NULL, <xref:System.Xaml.XamlType.UnderlyingType%2A>, она возвращает `true`.  
  
 Переопределите этот метод, если требуется <xref:System.Xaml.XamlType.IsPublic%2A> для использования другой логикой.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.LookupIsPublic%2A> является виртуальным и поэтому могут переопределяться. Переопределение обладает потенциалом (вредоносных целях или иным способом) для изменения доступа сведения о типе XAML, чтобы он больше не согласовывался ожидаемым способом с системы или доступа к информации о типе его базового типа CLR. Для проверок операций присваивания и доступа к критическим с точки зрения безопасности используйте базовый тип CLR.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsUnknown">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsUnknown ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsUnknown() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsUnknown" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsUnknown () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsUnknown();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> тип, который не может быть разрешен в базовой системе типов.</summary>
        <returns>
          Значение <see langword="true" />, если этот тип <see cref="T:System.Xaml.XamlType" /> представляет неразрешимый тип; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод может вызываться путем вызова метода <xref:System.Xaml.XamlType.IsUnknown%2A>.  
  
 Реализация по умолчанию может использовать отражение среды CLR. Значение NULL, <xref:System.Xaml.XamlType.UnderlyingType%2A>, она возвращает `true`.  
  
 Переопределите этот метод, если требуется <xref:System.Xaml.XamlType.IsUnknown%2A> для использования другой логикой.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsWhitespaceSignificantCollection">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsWhitespaceSignificantCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsWhitespaceSignificantCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsWhitespaceSignificantCollection () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsWhitespaceSignificantCollection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает значение, указывающее, представляет ли этот тип <see cref="T:System.Xaml.XamlType" /> коллекцию, в которой учитываются символы пробелов, в соответствии с определением XML.</summary>
        <returns>
          Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет коллекцию, в которой учитываются символы пробелов; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод может вызываться путем вызова метода <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A>.  
  
 Реализация по умолчанию возвращает значение, основанное на чтение <xref:System.Windows.Markup.WhitespaceSignificantCollectionAttribute>. Можно также проверить <xref:System.Xaml.XamlType.BaseType%2A> для атрибута, если атрибут не найден в непосредственном базовом типе. Если значение недоступно, возвращает `false`.  
  
 Переопределите этот метод, если требуется <xref:System.Xaml.XamlType.IsWhitespaceSignificantCollection%2A> для использования другой логикой.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupIsXData">
      <MemberSignature Language="C#" Value="protected virtual bool LookupIsXData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupIsXData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupIsXData" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupIsXData () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupIsXData();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает значение, указывающее, представляет ли данный тип <see cref="T:System.Xaml.XamlType" /> XML-<see langword="XDATA" /> в соответствии с определением языка XAML.</summary>
        <returns>
          Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> представляет <see langword="XDATA" />; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод может вызываться путем вызова метода <xref:System.Xaml.XamlType.IsXData%2A>.  
  
 Реализация по умолчанию создает <xref:System.Xaml.XamlType.CanAssignTo%2A> косвенно вызывать по типу <xref:System.Xml.Serialization.IXmlSerializable>.  
  
 Переопределите этот метод, если требуется <xref:System.Xaml.XamlType.IsXData%2A> для использования другой логикой.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupItemType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupItemType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupItemType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupItemType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupItemType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupItemType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает значение, предоставляющее сведения о типе для свойства <see langword="Items" /> данного типа <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Объект <see cref="T:System.Xaml.XamlType" /> для типа членов в коллекции или значение <see langword="null" />, если данный тип <see cref="T:System.Xaml.XamlType" /> не представляет коллекцию.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод может вызываться путем вызова метода <xref:System.Xaml.XamlType.ItemType%2A>.  
  
 Реализация по умолчанию можно использовать основные понятия отражения среды CLR, такие как проверка `Add` методу <xref:System.Reflection.MethodInfo> и с помощью <xref:System.Reflection.ParameterInfo>; проверка <xref:System.Xaml.XamlType.IsArray%2A>; и проверка <xref:System.Xaml.XamlType.BaseType%2A> и попытайтесь выполнить ту же логику.  
  
 Переопределите этот метод, если требуется <xref:System.Xaml.XamlType.ItemType%2A> для использования другой логикой. Ситуации, когда <xref:System.Xaml.XamlType.LookupCollectionKind%2A> возвращает <xref:System.Xaml.Schema.XamlCollectionKind.None?displayProperty=nameWithType> должен возвращать `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupKeyType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupKeyType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupKeyType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupKeyType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupKeyType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupKeyType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает значение, предоставляющее сведения о типе для свойства ключа этого класса <see cref="T:System.Xaml.XamlType" />, если этот класс <see cref="T:System.Xaml.XamlType" /> представляет словарь.</summary>
        <returns>Объект <see cref="T:System.Xaml.XamlType" /> для типа ключа для использования словаря или значение <see langword="null" />, если данный тип <see cref="T:System.Xaml.XamlType" /> не представляет словарь.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод может вызываться путем вызова метода <xref:System.Xaml.XamlType.KeyType%2A>.  
  
 Реализация по умолчанию можно использовать основные понятия отражения среды CLR, такие как проверка `Add` методу <xref:System.Reflection.MethodInfo> и с помощью <xref:System.Reflection.ParameterInfo>; и проверка <xref:System.Xaml.XamlType.BaseType%2A> и попытайтесь выполнить ту же логику.  
  
 Переопределите этот метод, если требуется <xref:System.Xaml.XamlType.KeyType%2A> для использования другой логикой. Ситуации, когда <xref:System.Xaml.XamlType.LookupCollectionKind%2A> не возвращает <xref:System.Xaml.Schema.XamlCollectionKind.Dictionary?displayProperty=nameWithType> должен возвращать `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupMarkupExtensionReturnType">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlType LookupMarkupExtensionReturnType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlType LookupMarkupExtensionReturnType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupMarkupExtensionReturnType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupMarkupExtensionReturnType () As XamlType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlType ^ LookupMarkupExtensionReturnType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает значение, предоставляющее сведения о типе для возвращенного <see langword="ProvideValue" /> данного типа <see cref="T:System.Xaml.XamlType" />, если он представляет расширение разметки.</summary>
        <returns>Объект <see cref="T:System.Xaml.XamlType" /> для возвращаемого типа для использования расширения разметки или значение <see langword="null" />, если данный тип <see cref="T:System.Xaml.XamlType" /> не представляет расширение разметки.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод может вызываться путем вызова метода <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A>.  
  
 Реализация по умолчанию возвращает <xref:System.Xaml.XamlType> на основании чтения <xref:System.Windows.Markup.MarkupExtensionReturnTypeAttribute>. Можно также проверить <xref:System.Xaml.XamlType.BaseType%2A> для атрибута, если атрибут не найден в непосредственном базовом типе. Если значение недоступно, возвращает `null`.  
  
 Переопределите этот метод, если требуется <xref:System.Xaml.XamlType.MarkupExtensionReturnType%2A> для использования другой логикой.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupMember">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.XamlMember LookupMember (string name, bool skipReadOnlyCheck);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.XamlMember LookupMember(string name, bool skipReadOnlyCheck) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupMember(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupMember (name As String, skipReadOnlyCheck As Boolean) As XamlMember" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::XamlMember ^ LookupMember(System::String ^ name, bool skipReadOnlyCheck);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlMember</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="skipReadOnlyCheck" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="name">Имя (в виде строки) члена, который требуется получить.</param>
        <param name="skipReadOnlyCheck">
          Значение <see langword="true" />, если необходимо возвратить член, даже если в этом члене задано значение <see langword="true" /> для свойства <see cref="P:System.Xaml.XamlMember.IsReadOnly" />. Значение <see langword="false" />, чтобы не возвращать член <see cref="P:System.Xaml.XamlMember.IsReadOnly" />. Значение по умолчанию: <see langword="false" />.</param>
        <summary>Возвращает член <see cref="T:System.Xaml.XamlMember" /> для определенного именованного члена из данного типа <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Сведения <see cref="T:System.Xaml.XamlMember" /> для члена, если он найден; в противном случае — значение <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод может вызываться путем вызова метода <xref:System.Xaml.XamlType.GetMember%2A>.  
  
 Реализация по умолчанию возвращает <xref:System.Xaml.XamlType> на основе внутреннего отражения среды CLR и вычисления относительно контекста схемы.  
  
 Переопределите этот метод, если требуется <xref:System.Xaml.XamlType.GetMember%2A> для использования другой логикой.  
  
> [!IMPORTANT]
>  <xref:System.Xaml.XamlType.LookupMember%2A> является виртуальным и поэтому могут переопределяться. Переопределение может стать (вредоносных целях или иным способом) для изменения сообщаемые члены типа XAML, чтобы они больше не были выровнены с ожидаемым образом <xref:System.ComponentModel.TypeDescriptor> `Get*` сведения о базовый тип CLR. Для проверок критическим с точки зрения безопасности элементов отчетов используйте базовый тип CLR.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupPositionalParameters">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; LookupPositionalParameters (int parameterCount);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; LookupPositionalParameters(int32 parameterCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupPositionalParameters(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupPositionalParameters (parameterCount As Integer) As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ LookupPositionalParameters(int parameterCount);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="parameterCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="parameterCount">Количество (арность) определенного режима синтаксиса или конструктора, о котором требуется получить сведения.</param>
        <summary>Для типов расширения разметки возвращает типы позиционных параметров, поддерживаемых в конкретном употреблении расширения разметки для данного типа <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Список значений <see cref="T:System.Xaml.XamlType" />, где каждый такой тип <see cref="T:System.Xaml.XamlType" /> является типом для этой позиции в синтаксисе. При передаче входных данных разметки в расширение разметки необходимо задавать эти типы в том же порядке.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод может вызываться путем вызова метода <xref:System.Xaml.XamlType.GetPositionalParameters%2A>.  
  
 Реализация по умолчанию использует внутреннее отражение информацию, основанную на поиске конструкторов и проверке арности. Переопределите этот метод, если требуется <xref:System.Xaml.XamlType.GetPositionalParameters%2A> для использования другой логикой.  
  
 Этот API используется только, если этот <xref:System.Xaml.XamlType> представляет расширение разметки (<xref:System.Xaml.XamlType.IsMarkupExtension%2A> — `true`).  
  
 Входные данные `parameterCount` не предназначен для запрашивания типа конкретного позиционного параметра. Он предназначен для указания арности использования расширения разметки. Использование расширения разметки часто имеется несколько сигнатур и используется различная арность (число) позиционных параметров для различения. Однако можно настроить контекст схемы, чтобы разрешить дублирование арностей и использовать типы позиционных параметров дифференцирования. Дополнительные сведения см. в разделе <xref:System.Xaml.XamlSchemaContext.SupportMarkupExtensionsWithDuplicateArity%2A>. Для конкретного количества арности позиции и типы параметров могут различаться. Чтобы получить позиционные тип конкретной арности использования расширения разметки, сначала вызовите <xref:System.Xaml.XamlType.GetPositionalParameters%2A> с количеством арности. Затем получите элемент в этой позиции из возвращенной коллекции.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupSetMarkupExtensionHandler">
      <MemberSignature Language="C#" Value="protected virtual EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; LookupSetMarkupExtensionHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt; LookupSetMarkupExtensionHandler() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupSetMarkupExtensionHandler" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupSetMarkupExtensionHandler () As EventHandler(Of XamlSetMarkupExtensionEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual EventHandler&lt;System::Windows::Markup::XamlSetMarkupExtensionEventArgs ^&gt; ^ LookupSetMarkupExtensionHandler();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetMarkupExtensionEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает обратный вызов обработчика, который нужно использовать для операций установки расширений разметки.</summary>
        <returns>Обратный вызов обработчика, который нужно использовать для операций установки расширения разметки.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализация по умолчанию возвращает значение, основанное на чтение <xref:System.Windows.Markup.XamlSetMarkupExtensionAttribute>. Можно также проверить <xref:System.Xaml.XamlType.BaseType%2A> для атрибута, если атрибут не найден в непосредственном базовом типе. Если значение недоступно, возвращает `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupSetTypeConverterHandler">
      <MemberSignature Language="C#" Value="protected virtual EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; LookupSetTypeConverterHandler ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.EventHandler`1&lt;class System.Windows.Markup.XamlSetTypeConverterEventArgs&gt; LookupSetTypeConverterHandler() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupSetTypeConverterHandler" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupSetTypeConverterHandler () As EventHandler(Of XamlSetTypeConverterEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual EventHandler&lt;System::Windows::Markup::XamlSetTypeConverterEventArgs ^&gt; ^ LookupSetTypeConverterHandler();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Windows.Markup.XamlSetTypeConverterEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает обработчик, используемый для вариантов установки преобразователя типов.</summary>
        <returns>Обработчик, используемый для вариантов установки преобразователя типов.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Реализация по умолчанию возвращает значение, основанное на чтение <xref:System.Windows.Markup.XamlSetTypeConverterAttribute>. Можно также проверить <xref:System.Xaml.XamlType.BaseType%2A> для атрибута, если атрибут не найден в непосредственном базовом типе. Если значение недоступно, возвращает `null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupTrimSurroundingWhitespace">
      <MemberSignature Language="C#" Value="protected virtual bool LookupTrimSurroundingWhitespace ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupTrimSurroundingWhitespace() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupTrimSurroundingWhitespace" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTrimSurroundingWhitespace () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupTrimSurroundingWhitespace();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает значение, указывающее, следует ли сериализовать данный <see cref="T:System.Xaml.XamlType" /> с использованием режима, удаляющего окружающие пробелы.</summary>
        <returns>
          Значение <see langword="true" />, если данный тип <see cref="T:System.Xaml.XamlType" /> следует сериализовать в режиме, удаляющем окружающие пробелы; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод может вызываться путем вызова метода <xref:System.Xaml.XamlType.TrimSurroundingWhitespace%2A>.  
  
 Реализация по умолчанию возвращает значение, основанное на чтение <xref:System.Windows.Markup.TrimSurroundingWhitespaceAttribute>. Можно также проверить <xref:System.Xaml.XamlType.BaseType%2A> для атрибута, если атрибут не найден в непосредственном базовом типе. Если значение недоступно, возвращает `false`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupTypeConverter">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; LookupTypeConverter ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; LookupTypeConverter() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupTypeConverter" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupTypeConverter () As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ LookupTypeConverter();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.ComponentModel.TypeConverter" />, представляющим поведение преобразования типов для значений данного типа <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.ComponentModel.TypeConverter" />, представляющий поведение преобразования типов для значений данного типа <see cref="T:System.Xaml.XamlType" />, или значение <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод может вызываться путем вызова метода <xref:System.Xaml.XamlType.TypeConverter%2A>.  
  
 Реализация по умолчанию возвращает значение, основанное на чтение <xref:System.ComponentModel.TypeConverterAttribute>. Реализация по умолчанию также можно проверить <xref:System.Xaml.XamlType.BaseType%2A> для атрибута, если атрибут не найден в непосредственном базовом типе. Он также включает специальную логику преобразования по умолчанию перечислений, общих типов значений и универсальных шаблонов. Если значение недоступно, возвращает `null`.  
  
 Переопределите этот метод, если требуется <xref:System.Xaml.XamlType.TypeConverter%2A> для использования другой логикой.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUnderlyingType">
      <MemberSignature Language="C#" Value="protected virtual Type LookupUnderlyingType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Type LookupUnderlyingType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupUnderlyingType" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUnderlyingType () As Type" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual Type ^ LookupUnderlyingType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает среду CLR <see cref="T:System.Type" />, которая является базовой для типа <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Среда CLR <see cref="T:System.Type" />, которая является базовой для типа <see cref="T:System.Xaml.XamlType" />, или значение <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод может вызываться путем вызова метода <xref:System.Xaml.XamlType.UnderlyingType%2A>.  
  
 Реализация по умолчанию возвращает внутреннее поле. Обычно это поле инициализируется во время создания и его значение основано на какой конструктор был вызван и предоставленные сведения.  
  
 Переопределите этот метод, если требуется <xref:System.Xaml.XamlType.UnderlyingType%2A> для использования другой логикой.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupUsableDuringInitialization">
      <MemberSignature Language="C#" Value="protected virtual bool LookupUsableDuringInitialization ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LookupUsableDuringInitialization() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupUsableDuringInitialization" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupUsableDuringInitialization () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LookupUsableDuringInitialization();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает значение, которое показывает, выполняется ли построение этого класса <see cref="T:System.Xaml.XamlType" /> сверху вниз при инициализации языка XAML.</summary>
        <returns>
          Значение <see langword="true" />, если этот класс <see cref="T:System.Xaml.XamlType" /> строится сверху вниз в ходе инициализации XAML; в противном случае — значение <see langword="false" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Сверху вниз — метафора, приблизительно описывающая поведение процессора XAML при создании графа объектов. При построении сверху вниз, создается экземпляр типа, подключенный к родительскому элементу, и настраиваются его свойства. Построение сверху вниз позволяет избежать вызова обработчиков измененных свойств несколько раз. Такая обработка приведет к нарушению графа объектов и таким образом, устраняет несколько вызовов обработчика и предоставляет оптимизировать производительность при запуске графа объектов.  
  
 Этот метод может вызываться путем вызова метода <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A>.  
  
 Реализация по умолчанию возвращает значение, основанное на чтение <xref:System.Windows.Markup.UsableDuringInitializationAttribute>. Можно также проверить <xref:System.Xaml.XamlType.BaseType%2A> для атрибута, если атрибут не найден в непосредственном базовом типе. Если значение недоступно, возвращает `false`.  
  
 Переопределите этот метод, если требуется <xref:System.Xaml.XamlType.IsUsableDuringInitialization%2A> для использования другой логикой.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LookupValueSerializer">
      <MemberSignature Language="C#" Value="protected virtual System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; LookupValueSerializer() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.LookupValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LookupValueSerializer () As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ LookupValueSerializer();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.Windows.Markup.ValueSerializer" />, представляющим поведение сериализации значений для значений данного типа <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.Windows.Markup.ValueSerializer" />, представляющий поведение сериализации значений для значений данного типа <see cref="T:System.Xaml.XamlType" />, или значение <see langword="null" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Этот метод может вызываться путем вызова метода <xref:System.Xaml.XamlType.ValueSerializer%2A>.  
  
 Реализация по умолчанию возвращает значение, основанное на чтение <xref:System.Windows.Markup.ValueSerializerAttribute>. Можно также проверить <xref:System.Xaml.XamlType.BaseType%2A> для атрибута, если атрибут не найден в непосредственном базовом типе. Он также включает специальную логику сериализации по умолчанию перечислений, общих типов значений или универсальных типов. Если значение недоступно, возвращает `null`.  
  
 Переопределите этот метод, если требуется <xref:System.Xaml.XamlType.ValueSerializer%2A> для использования другой логикой.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MarkupExtensionReturnType">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlType MarkupExtensionReturnType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlType MarkupExtensionReturnType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.MarkupExtensionReturnType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MarkupExtensionReturnType As XamlType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlType ^ MarkupExtensionReturnType { System::Xaml::XamlType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, предоставляющее сведения о типе для возвращенного значения <see langword="ProvideValue" /> данного типа <see cref="T:System.Xaml.XamlType" />, если он представляет расширение разметки.</summary>
        <value>Объект <see cref="T:System.Xaml.XamlType" /> для возвращаемого типа для использования расширения разметки или значение <see langword="null" />, если данный тип <see cref="T:System.Xaml.XamlType" /> не представляет расширение разметки.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Это свойство применяется, только если этот <xref:System.Xaml.XamlType> представляет расширение разметки (`x:MarkupExtension` находится в списке типов может быть назначен).  
  
 Если не используется отражение метод внутренней CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства можно вызвать <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> переопределяет на <xref:System.Xaml.XamlType> производных классов. Дополнительные сведения о возвращаемых значениях и другие правила поведения см. в документации для <xref:System.Xaml.XamlType.LookupMarkupExtensionReturnType%2A> для данного типа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.Name" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает строковое имя типа, представляемого данным типом <see cref="T:System.Xaml.XamlType" />.</summary>
        <value>Строковое представление имени этого типа XAML.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Обычно это свойство получает имя схемы создается (на <xref:System.Xaml.XamlType.%23ctor%2A> подписи), или имя <xref:System.Type>, если он создан с помощью конструктора нужные системы типов среды CLR.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Equality">
      <MemberSignature Language="C#" Value="public static bool operator == (System.Xaml.XamlType xamlType1, System.Xaml.XamlType xamlType2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Equality(class System.Xaml.XamlType xamlType1, class System.Xaml.XamlType xamlType2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.op_Equality(System.Xaml.XamlType,System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator == (xamlType1 As XamlType, xamlType2 As XamlType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator ==(System::Xaml::XamlType ^ xamlType1, System::Xaml::XamlType ^ xamlType2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType1" Type="System.Xaml.XamlType" />
        <Parameter Name="xamlType2" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType1">
          <see cref="T:System.Xaml.XamlType" /> или <see langword="null" />.</param>
        <param name="xamlType2">
          <see cref="T:System.Xaml.XamlType" /> или <see langword="null" />.</param>
        <summary>Определяет, совпадают ли значения двух указанных объектов <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>
          Значение <see langword="true" />, если значение параметра <paramref name="xamlType1" /> совпадает со значением <paramref name="xamlType2" />; в противном случае — значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="op_Inequality">
      <MemberSignature Language="C#" Value="public static bool operator != (System.Xaml.XamlType xamlType1, System.Xaml.XamlType xamlType2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig specialname bool op_Inequality(class System.Xaml.XamlType xamlType1, class System.Xaml.XamlType xamlType2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.op_Inequality(System.Xaml.XamlType,System.Xaml.XamlType)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Operator != (xamlType1 As XamlType, xamlType2 As XamlType) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool operator !=(System::Xaml::XamlType ^ xamlType1, System::Xaml::XamlType ^ xamlType2);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="xamlType1" Type="System.Xaml.XamlType" />
        <Parameter Name="xamlType2" Type="System.Xaml.XamlType" />
      </Parameters>
      <Docs>
        <param name="xamlType1">
          <see cref="T:System.Xaml.XamlType" /> или <see langword="null" />.</param>
        <param name="xamlType2">
          <see cref="T:System.Xaml.XamlType" /> или <see langword="null" />.</param>
        <summary>Определяет, различаются ли значения двух указанных объектов <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>
          Значение <see langword="true" />, если значение <paramref name="xamlType1" /> отличается от значения <paramref name="xamlType2" />; в противном случае — значение <see langword="false" />.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PreferredXamlNamespace">
      <MemberSignature Language="C#" Value="public string PreferredXamlNamespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PreferredXamlNamespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.PreferredXamlNamespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PreferredXamlNamespace As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ PreferredXamlNamespace { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает одно пространство имен XAML, являющееся первичным пространством имен XAML для данного типа <see cref="T:System.Xaml.XamlType" />.</summary>
        <value>Идентификатор первичного пространства имен XAML для данного типа XAML в виде строки.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Эта реализация содержит то же значение, что и вызов метода <xref:System.Xaml.XamlType.GetXamlNamespaces%2A> и получения первой строки значений из возвращенных перечислимый набор.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SchemaContext">
      <MemberSignature Language="C#" Value="public System.Xaml.XamlSchemaContext SchemaContext { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.XamlSchemaContext SchemaContext" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.SchemaContext" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SchemaContext As XamlSchemaContext" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::XamlSchemaContext ^ SchemaContext { System::Xaml::XamlSchemaContext ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.XamlSchemaContext</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает активный контекст <see cref="T:System.Xaml.XamlSchemaContext" /> для обработки этого класса <see cref="T:System.Xaml.XamlType" />.</summary>
        <value>Активный контекст <see cref="T:System.Xaml.XamlSchemaContext" /> для обработки этого класса <see cref="T:System.Xaml.XamlType" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlSchemaContext> является записью обязательный параметр при создании <xref:System.Xaml.XamlType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xaml.XamlType.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Возвращает строковое представление данного объекта <see cref="T:System.Xaml.XamlType" />.</summary>
        <returns>Строковое представление данного объекта <see cref="T:System.Xaml.XamlType" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Xaml.XamlType> Реализация <xref:System.Object.ToString%2A> возвращает <xref:System.Xaml.XamlType.Name%2A> свойство <xref:System.Xaml.XamlType>.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrimSurroundingWhitespace">
      <MemberSignature Language="C#" Value="public bool TrimSurroundingWhitespace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool TrimSurroundingWhitespace" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.TrimSurroundingWhitespace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TrimSurroundingWhitespace As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool TrimSurroundingWhitespace { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает значение, указывающее, имеет ли данный тип <see cref="T:System.Xaml.XamlType" /> поведение обработки пробелов для сериализации, выполняющее удаление окружающих пробелов из его содержимого.</summary>
        <value>
          Значение <see langword="true" />, если этот класс <see cref="T:System.Xaml.XamlType" /> представляет тип, в котором используется удаление пробелов; в противном случае — значение <see langword="false" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если не используется отражение метод внутренней CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства можно вызвать <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> переопределяет на <xref:System.Xaml.XamlType> производных классов. Дополнительные сведения о возвращаемых значениях и другие правила поведения см. в документации для <xref:System.Xaml.XamlType.LookupIsWhitespaceSignificantCollection%2A> для данного типа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeArguments">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt; TypeArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Xaml.XamlType&gt; TypeArguments" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.TypeArguments" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeArguments As IList(Of XamlType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ TypeArguments { System::Collections::Generic::IList&lt;System::Xaml::XamlType ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Xaml.XamlType&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает список типов аргументов для случаев, в которых данный тип <see cref="T:System.Xaml.XamlType" /> представляет универсальный тип.</summary>
        <value>Список типов аргументов или значение <see langword="null" />, если данный тип <see cref="T:System.Xaml.XamlType" /> не представляет универсальный тип.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Существуют некоторые сценарии для <xref:System.Xaml.XamlType> там, где вызов <xref:System.Xaml.XamlType.TypeArguments%2A> параметр Возвращает список, где типы по-прежнему открыты. В этом случае, один или несколько возвращаемого <xref:System.Xaml.XamlType> значения будут иметь значения заполнителя для <xref:System.Xaml.XamlType.Name%2A?displayProperty=nameWithType>, такие как `T`, чтобы представить универсального все еще открыт. Такая ситуация возникает, если вы получаете <xref:System.Xaml.XamlType> из вызова <xref:System.Xaml.XamlSchemaContext.GetXamlType%2A>, а не из реализации средства чтения XAML.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeConverter">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt; TypeConverter { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.ComponentModel.TypeConverter&gt; TypeConverter" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.TypeConverter" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeConverter As XamlValueConverter(Of TypeConverter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ TypeConverter { System::Xaml::Schema::XamlValueConverter&lt;System::ComponentModel::TypeConverter ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.ComponentModel.TypeConverter&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.ComponentModel.TypeConverter" />, представляющий поведение преобразования типов для значений данного типа <see cref="T:System.Xaml.XamlType" />.</summary>
        <value>Объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.ComponentModel.TypeConverter" />, представляющий поведение преобразования типов для значений данного типа <see cref="T:System.Xaml.XamlType" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если не используется отражение метод внутренней CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства можно вызвать <xref:System.Xaml.XamlType.LookupTypeConverter%2A> переопределяет на <xref:System.Xaml.XamlType> производных классов. Дополнительные сведения о возвращаемых значениях и другие правила поведения см. в документации для <xref:System.Xaml.XamlType.LookupTypeConverter%2A> для данного типа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UnderlyingType">
      <MemberSignature Language="C#" Value="public Type UnderlyingType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type UnderlyingType" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.UnderlyingType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UnderlyingType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ UnderlyingType { Type ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает среду CLR <see cref="T:System.Type" />, которая является базовой для типа <see cref="T:System.Xaml.XamlType" />.</summary>
        <value>Среда CLR <see cref="T:System.Type" />, являющаяся базовой для данного типа <see cref="T:System.Xaml.XamlType" />.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValueSerializer">
      <MemberSignature Language="C#" Value="public System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt; ValueSerializer { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xaml.Schema.XamlValueConverter`1&lt;class System.Windows.Markup.ValueSerializer&gt; ValueSerializer" />
      <MemberSignature Language="DocId" Value="P:System.Xaml.XamlType.ValueSerializer" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValueSerializer As XamlValueConverter(Of ValueSerializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ ValueSerializer { System::Xaml::Schema::XamlValueConverter&lt;System::Windows::Markup::ValueSerializer ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xaml</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xaml.Schema.XamlValueConverter&lt;System.Windows.Markup.ValueSerializer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Получает объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.Windows.Markup.ValueSerializer" />, представляющий поведение сериализации значений для значений данного типа <see cref="T:System.Xaml.XamlType" />.</summary>
        <value>Объект <see cref="T:System.Xaml.Schema.XamlValueConverter`1" /> с ограничением <see cref="T:System.Windows.Markup.ValueSerializer" />, представляющий поведение сериализации значений для значений данного типа <see cref="T:System.Xaml.XamlType" />, или значение <see langword="null" />.</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Если не используется отражение метод внутренней CLR по умолчанию для <xref:System.Xaml.XamlType>, вызовы этого свойства можно вызвать <xref:System.Xaml.XamlType.LookupValueSerializer%2A> переопределяет на <xref:System.Xaml.XamlType> производных классов. Дополнительные сведения о возвращаемых значениях и другие правила поведения см. в документации для <xref:System.Xaml.XamlType.LookupValueSerializer%2A> для данного типа.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>