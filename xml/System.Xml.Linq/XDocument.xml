<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XDocument.xml" source-language="en-US" target-language="ru-RU">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5d79ed174f5e5f1d678e11f3ea4857185ee811f59.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d79ed174f5e5f1d678e11f3ea4857185ee811f59</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XDocument">
          <source>Represents an XML document.</source>
          <target state="translated">Представляет XML-документ.</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XDocument">
          <source>For the components and usage of an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> object, see <bpt id="p1">&lt;see href="http://msdn.microsoft.com/library/90f78331-1be8-42fb-93e7-bd1325826467"&gt;</bpt>XDocument Class Overview<ept id="p1">&lt;/see&gt;</ept>.</source>
          <target state="translated">Информацию о компонентах и использовании объекта <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> см. в статье <bpt id="p1">&lt;see href="http://msdn.microsoft.com/library/90f78331-1be8-42fb-93e7-bd1325826467"&gt;</bpt>Общие сведения о классах XDocument<ept id="p1">&lt;/see&gt;</ept>.</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocument">
          <source>For details about the valid content of an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">Дополнительные сведения о допустимых содержимое <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>, в разделе <bpt id="p1">[</bpt>объектов допустимое содержимое XElement и XDocument<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocument">
          <source>The following example creates a document, and then adds a comment and an element to it.</source>
          <target state="translated">Следующий пример создает документ и затем добавляет к нему комментария и элемента.</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocument">
          <source>It then composes another document using the results of a query.</source>
          <target state="translated">Составляется другой документ с помощью результатов запроса.</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocument">
          <source>This example produces the following output:</source>
          <target state="translated">В этом примере выводятся следующие данные:</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XDocument">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocument">
          <source>Overloaded constructors enable you to create a new empty <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>; to create an <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> with some specified initial content; and to create an <ph id="ph3">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> as a copy of another <ph id="ph4">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> object.</source>
          <target state="translated">Перегруженные конструкторы позволяют создавать новый пустой <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>; создать <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> некоторые указанное начальное содержимое; и создать <ph id="ph3">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> как копию другой <ph id="ph4">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> объекта.</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocument">
          <source>There are not many scenarios that require you to create an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>.</source>
          <target state="translated">Ситуации, когда необходимо создавать документ <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>, встречаются нечасто.</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocument">
          <source>Instead, you can usually create your XML trees with an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> root node.</source>
          <target state="translated">Вместо этого обычно имеется возможность создавать XML-деревья с корневым узлом <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocument">
          <source>Unless you have a specific requirement to create a document (for example, because you have to create processing instructions and comments at the top level, or you have to support document types), it is often more convenient to use <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> as your root node.</source>
          <target state="translated">Если отсутствуют конкретные требования по созданию документа (вызванные, например, необходимостью создания инструкций по обработке и комментариев на верхнем уровне или необходимостью поддержки типов документов), часто бывает удобнее всего в качестве корневого узла использовать <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocument">
          <source>For details about the valid content of an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">Дополнительные сведения о допустимых содержимое <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>, в разделе <bpt id="p1">[</bpt>объектов допустимое содержимое XElement и XDocument<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocument">
          <source>The following example creates a document, and then adds a comment and an element to it.</source>
          <target state="translated">Следующий пример создает документ и затем добавляет к нему комментария и элемента.</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocument">
          <source>It then composes another document using the results of a query.</source>
          <target state="translated">Составляется другой документ с помощью результатов запроса.</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocument">
          <source>This example produces the following output:</source>
          <target state="translated">В этом примере выводятся следующие данные:</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> class.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.#ctor">
          <source>There are not many scenarios that require you to create an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>.</source>
          <target state="translated">Ситуации, когда необходимо создавать документ <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>, встречаются нечасто.</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.#ctor">
          <source>Instead, you can usually create your XML trees with an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> root node.</source>
          <target state="translated">Вместо этого обычно имеется возможность создавать XML-деревья с корневым узлом <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.#ctor">
          <source>Unless you have a specific requirement to create a document (for example, because you have to create processing instructions and comments at the top level, or you have to support document types), it is often more convenient to use <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> as your root node.</source>
          <target state="translated">Если отсутствуют конкретные требования по созданию документа (вызванные, например, необходимостью создания инструкций по обработке и комментариев на верхнем уровне или необходимостью поддержки типов документов), часто бывает удобнее всего в качестве корневого узла использовать <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.#ctor">
          <source>For details about the valid content of an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">Дополнительные сведения о допустимых содержимое <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>, в разделе <bpt id="p1">[</bpt>объектов допустимое содержимое XElement и XDocument<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.#ctor">
          <source>The following example creates a new document, and then adds a comment and an element to it.</source>
          <target state="translated">Следующий пример создает новый документ и затем добавляет к нему комментария и элемента.</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.#ctor">
          <source>This example produces the following output:</source>
          <target state="translated">В этом примере выводятся следующие данные:</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.#ctor(System.Object[])">
          <source>A parameter list of content objects to add to this document.</source>
          <target state="translated">Список параметров объектов содержимого для добавления в этот документ.</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.#ctor(System.Object[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> class with the specified content.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> с указанным содержимым.</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.#ctor(System.Object[])">
          <source>There are not many scenarios that require you to create an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>.</source>
          <target state="translated">Ситуации, когда необходимо создавать документ <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>, встречаются нечасто.</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.#ctor(System.Object[])">
          <source>Instead, you can usually create your XML trees with an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> root node.</source>
          <target state="translated">Вместо этого обычно имеется возможность создавать XML-деревья с корневым узлом <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.#ctor(System.Object[])">
          <source>Unless you have a specific requirement to create a document (for example, because you have to create processing instructions and comments at the top level, or you have to support document types), it is often more convenient to use <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> as your root node.</source>
          <target state="translated">Если отсутствуют конкретные требования по созданию документа (вызванные, например, необходимостью создания инструкций по обработке и комментариев на верхнем уровне или необходимостью поддержки типов документов), часто бывает удобнее всего в качестве корневого узла использовать <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.#ctor(System.Object[])">
          <source>For details about the valid content of an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">Дополнительные сведения о допустимых содержимое <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>, в разделе <bpt id="p1">[</bpt>объектов допустимое содержимое XElement и XDocument<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.#ctor(System.Object[])">
          <source>The following example creates a document, and then adds a comment and an element to it.</source>
          <target state="translated">Следующий пример создает документ и затем добавляет к нему комментария и элемента.</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.#ctor(System.Object[])">
          <source>It then composes another document using the results of a query.</source>
          <target state="translated">Составляется другой документ с помощью результатов запроса.</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.#ctor(System.Object[])">
          <source>This example produces the following output:</source>
          <target state="translated">В этом примере выводятся следующие данные:</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDocument)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> object that will be copied.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>, который будет копироваться.</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDocument)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> class from an existing <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> object.</source>
          <target state="translated">Инициализирует новый экземпляр класса <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> из существующего объекта <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDocument)">
          <source>You use this constructor to make a deep copy of an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>.</source>
          <target state="translated">Этот конструктор используется для создания глубокой копии <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDocument)">
          <source>This constructor traverses all nodes and attributes in the document specified in the <ph id="ph1">`other`</ph> parameter, and creates copies of all nodes as it assembles the newly initialized <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>.</source>
          <target state="translated">Этот конструктор обходит все узлы и атрибуты в документ, указанный в <ph id="ph1">`other`</ph> параметра и создает копии всех узлов по мере того как собирает новый инициализированный <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDeclaration,System.Object[])">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDeclaration" /&gt;</ph> for the document.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDeclaration" /&gt;</ph> для документа.</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDeclaration,System.Object[])">
          <source>The content of the document.</source>
          <target state="translated">Содержимое документа.</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDeclaration,System.Object[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XDeclaration" /&gt;</ph> and content.</source>
          <target state="translated">Инициализация нового экземпляра  класса <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> с указанным <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XDeclaration" /&gt;</ph> и содержимым.</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDeclaration,System.Object[])">
          <source>There are not many scenarios that require you to create an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>.</source>
          <target state="translated">Ситуации, когда необходимо создавать документ <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>, встречаются нечасто.</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDeclaration,System.Object[])">
          <source>Instead, you can usually create your XML trees with an <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> root node.</source>
          <target state="translated">Вместо этого обычно имеется возможность создавать XML-деревья с корневым узлом <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDeclaration,System.Object[])">
          <source>Unless you have a specific requirement to create a document (for example, because you have to create processing instructions and comments at the top level, or you have to support document types), it is often more convenient to use <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph> as your root node.</source>
          <target state="translated">Если отсутствуют конкретные требования по созданию документа (вызванные, например, необходимостью создания инструкций по обработке и комментариев на верхнем уровне или необходимостью поддержки типов документов), часто бывает удобнее всего в качестве корневого узла использовать <ph id="ph1">&lt;xref:System.Xml.Linq.XElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDeclaration,System.Object[])">
          <source>For details about the valid content of an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>, see <bpt id="p1">[</bpt>Valid Content of XElement and XDocument Objects<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</source>
          <target state="translated">Дополнительные сведения о допустимых содержимое <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>, в разделе <bpt id="p1">[</bpt>объектов допустимое содержимое XElement и XDocument<ept id="p1">](http://msdn.microsoft.com/library/aee2d319-5c5f-4b99-9bb4-2f58232577ae)</ept>.</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDeclaration,System.Object[])">
          <source>The following example uses this constructor to create a document.</source>
          <target state="translated">В следующем примере этот конструктор используется для создания документа.</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.#ctor(System.Xml.Linq.XDeclaration,System.Object[])">
          <source>This example produces the following output:</source>
          <target state="translated">В этом примере выводятся следующие данные:</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XDocument.Declaration">
          <source>Gets or sets the XML declaration for this document.</source>
          <target state="translated">Возвращает или задает объявление XML для этого документа.</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.Declaration">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDeclaration" /&gt;</ph> that contains the XML declaration for this document.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDeclaration" /&gt;</ph>, который содержит объявление XML для этого документа.</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.Declaration">
          <source>Sometimes you have to create an XML declaration for a document.</source>
          <target state="translated">Иногда можно использовать для создания XML-декларации для документа.</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.Declaration">
          <source>If you want to indicate that a document is standalone, you must use this property.</source>
          <target state="translated">Если вы хотите указать, что документ является автономной, необходимо использовать это свойство.</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.Declaration">
          <source>If you want to encode your document with an encoding other than utf-8, you can specify an encoding through the <ph id="ph1">&lt;xref:System.Xml.Linq.XDeclaration&gt;</ph>.</source>
          <target state="translated">Если требуется кодировать документ с использованием кодировки, отличного от utf-8, можно указать кодировку с помощью <ph id="ph1">&lt;xref:System.Xml.Linq.XDeclaration&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.Declaration">
          <source>Another approach for encoding a document is to specify the encoding on an <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> that you pass to LINQ to XML for writing.</source>
          <target state="translated">Другой подход для кодирования документа является указание кодировки в <ph id="ph1">&lt;xref:System.Xml.XmlWriter&gt;</ph> передать LINQ to XML для записи.</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.Declaration">
          <source>The following example uses this property to retrieve the XML declaration of a document.</source>
          <target state="translated">В следующем примере это свойство используется для извлечения объявления XML документа.</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.Declaration">
          <source>This example produces the following output:</source>
          <target state="translated">В этом примере выводятся следующие данные:</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XDocument.DocumentType">
          <source>Gets the Document Type Definition (DTD) for this document.</source>
          <target state="translated">Возвращает определение типа документа (DTD) для этого документа.</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.DocumentType">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocumentType" /&gt;</ph> that contains the DTD for this document.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocumentType" /&gt;</ph>, который содержит DTD для этого документа.</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.DocumentType">
          <source><ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> provides limited support for DTDs.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> предоставляет ограниченную поддержку DTD.</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.DocumentType">
          <source>You can populate an XML tree with an XML document that contains a DTD.</source>
          <target state="translated">Можно заполнить дерево XML-документа, содержащего DTD.</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.DocumentType">
          <source>The XML tree will then contain a <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.DocumentType%2A&gt;</ph> node.</source>
          <target state="translated">XML-дерево будет содержать <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.DocumentType%2A&gt;</ph> узла.</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.DocumentType">
          <source>When you serialize or save the tree, the DTD will also be serialized.</source>
          <target state="translated">При сериализации или сохранении дерева будут сериализованы и DTD.</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.DocumentType">
          <source><ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> will expand any entities in the DTD.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> будет расширяться все сущности в DTD.</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.DocumentType">
          <source>When you serialize or save the XML tree, the entity references are not saved; instead, the nodes are saved with the entity references replaced by the text of the entity.</source>
          <target state="translated">При сериализации или сохранении XML-дерева, ссылки на сущности не сохраняются; Вместо этого узлы сохраняются вместе с ссылки на сущности, заменяется текстом сущности.</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.DocumentType">
          <source>If the DTD contains default attributes, the attributes are created in the XML tree as ordinary attributes.</source>
          <target state="translated">Если DTD содержит атрибуты по умолчанию, атрибуты создаются в дереве XML как обычные атрибуты.</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.DocumentType">
          <source>By default, <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> does not validate a document based on its DTD.</source>
          <target state="translated">По умолчанию <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> не проверяет документ, основанный на его DTD.</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.DocumentType">
          <source>To validate a document based on a DTD, create an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> that will validate based on a DTD, and then create an XML tree from the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">Чтобы проверить документ, основанный на DTD, создать <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> , будет выполнять проверку на основании DTD и затем создать XML-дерева из <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.DocumentType">
          <source>The following example creates a document that contains an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocumentType&gt;</ph>.</source>
          <target state="translated">В следующем примере создается документ, содержащий <ph id="ph1">&lt;xref:System.Xml.Linq.XDocumentType&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.DocumentType">
          <source>Visual Basic does not support document types within XML literals.</source>
          <target state="translated">Visual Basic не поддерживает типы документов в XML-литералов.</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.DocumentType">
          <source>However, it is possible to create a document that contains a document type by first creating the document using XML literals, and then creating and adding an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocumentType&gt;</ph> node in the appropriate place in the XML tree.</source>
          <target state="translated">Тем не менее, существует возможность создать документ, который содержит тип документа путем создания документа с помощью XML-литералы и последующего создания и добавления <ph id="ph1">&lt;xref:System.Xml.Linq.XDocumentType&gt;</ph> узел в соответствующем месте в дереве XML.</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.DocumentType">
          <source>This example produces the following output:</source>
          <target state="translated">В этом примере выводятся следующие данные:</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XDocument">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> from a file specified by a URI, from an <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>, or from an <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">Создает новый элемент <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> из файла, заданного URI, из объекта <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> или из объекта <ph id="ph3">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocument">
          <source>Using one of the overloads of this method, you can load an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> from a file, a <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph>, or an <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">Используя одну из перегрузок этого метода, можно загрузить <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> из файла, <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph>, или <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocument">
          <source>To create an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> from a string that contains XML, use <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument.Parse%2A&gt;</ph>.</source>
          <target state="translated">Для создания <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> из строки, содержащей XML, используйте <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument.Parse%2A&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.IO.Stream)">
          <source>The stream that contains the XML data.</source>
          <target state="translated">Поток, содержащий XML-данные.</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.IO.Stream)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> instance by using the specified stream.</source>
          <target state="translated">Создает новый экземпляр <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> с помощью указанного потока.</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.IO.Stream)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> object that reads the data that is contained in the stream.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>, который считывает содержащиеся в потоке данные.</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.Stream)">
          <source>If you want to control load options, use the <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Load%2A&gt;</ph> overload that takes <ph id="ph2">&lt;xref:System.Xml.Linq.LoadOptions&gt;</ph> as a parameter.</source>
          <target state="translated">Если вы хотите контролировать параметры загрузки, используйте <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Load%2A&gt;</ph> перегрузку, принимающую <ph id="ph2">&lt;xref:System.Xml.Linq.LoadOptions&gt;</ph> как параметр.</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.Stream)">
          <source>The loading functionality of LINQ to XML is built upon <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">Функциональные возможности загрузки LINQ to XML построена на основе <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.Stream)">
          <source>Therefore, you might catch any exceptions that are thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload methods and the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> methods that read and parse the document.</source>
          <target state="translated">Таким образом, следует перехватывать все исключения, вызываемые <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> перегрузки методов и <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> методы, прочитать и проанализировать документ.</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.Stream)">
          <source>If you have to modify <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>, follow these steps:</source>
          <target state="translated">Если необходимо изменить <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>, выполните следующие действия:</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.Stream)">
          <source>Create an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> by calling one of the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> overloads that take <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> as a parameter.</source>
          <target state="translated">Создание <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> путем вызова одного из <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> перегрузок, принимающих <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> как параметр.</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.Stream)">
          <source>Pass the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> to one of the <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument.Load%2A&gt;</ph> overloads of <ph id="ph3">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> that takes <ph id="ph4">&lt;xref:System.Xml.XmlReader&gt;</ph> as a parameter.</source>
          <target state="translated">Передайте <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> к одному из <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument.Load%2A&gt;</ph> перегрузок <ph id="ph3">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> , который принимает <ph id="ph4">&lt;xref:System.Xml.XmlReader&gt;</ph> как параметр.</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> that contains the content for the <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>, включающий содержимое для документа <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> from a <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">Создает новый <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> из <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> that contains the contents of the specified <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated">Документ <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>, включающий содержимое указанного объекта <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader)">
          <source>LINQ to XML's loading functionality is built upon <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">LINQ для функциональных возможностей загрузки по XML построена на основе <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader)">
          <source>Therefore, you might catch any exceptions that are thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload methods and the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> methods that read and parse the document.</source>
          <target state="translated">Таким образом, следует перехватывать все исключения, вызываемые <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> перегрузки методов и <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> методы, прочитать и проанализировать документ.</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader)">
          <source>The following example creates a document from a <ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph>.</source>
          <target state="translated">В следующем примере создается документ из <ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader)">
          <source>This example produces the following output:</source>
          <target state="translated">В этом примере выводятся следующие данные:</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.String)">
          <source>A URI string that references the file to load into a new <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>.</source>
          <target state="translated">Строка URI, ссылающаяся на файл для загрузки в новый <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> from a file.</source>
          <target state="translated">Создает новый <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> из файла.</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> that contains the contents of the specified file.</source>
          <target state="translated">Элемент <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> с содержимым указанного файла.</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String)">
          <source>This method uses an underlying <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> to read the XML into an XML tree.</source>
          <target state="translated">Этот метод использует базовая <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> для чтения XML в XML-дерева.</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String)">
          <source>Use <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Parse%2A&gt;</ph> to create an <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> from a string that contains XML.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Parse%2A&gt;</ph> для создания <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> из строки, которая содержит XML-код.</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String)">
          <source>LINQ to XML's loading functionality is built upon <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">LINQ для функциональных возможностей загрузки по XML построена на основе <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String)">
          <source>Therefore, you might catch any exceptions that are thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload methods and the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> methods that read and parse the document.</source>
          <target state="translated">Таким образом, следует перехватывать все исключения, вызываемые <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> перегрузки методов и <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> методы, прочитать и проанализировать документ.</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String)">
          <source>The following example shows how to load an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> from a file.</source>
          <target state="translated">В следующем примере показано, как загрузить <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> из файла.</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String)">
          <source>This example uses the following XML document:</source>
          <target state="translated">В этом примере используется следующий XML-документ:</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String)">
          <source><bpt id="p1">[</bpt>Sample XML File: Typical Purchase Order (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/0606c09f-6e43-4f8d-95c8-e8e2e08d2348)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Пример XML-файла. Стандартный заказ на покупку (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/0606c09f-6e43-4f8d-95c8-e8e2e08d2348)</ept></target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String)">
          <source>This example produces the following output:</source>
          <target state="translated">В этом примере выводятся следующие данные:</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> that contains the content for the <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>, включающий содержимое для документа <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> from an <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">Создает новый документ <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> из объекта <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> that contains the contents of the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated">Документ <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>, включающий содержимое указанного объекта <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader)">
          <source>One possible use for this method is to create a copy of a DOM document in a LINQ to XML tree.</source>
          <target state="translated">Один из возможных способов использования этого метода является создание копии документа DOM в LINQ to XML-дерева.</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader)">
          <source>To do this, you create an <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> from a DOM document, and then use the <ph id="ph2">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> to create an <ph id="ph3">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>.</source>
          <target state="translated">Чтобы сделать это, создайте <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> из документа DOM, а затем использовать <ph id="ph2">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> для создания <ph id="ph3">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader)">
          <source>LINQ to XML's loading functionality is built upon <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">LINQ для функциональных возможностей загрузки по XML построена на основе <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader)">
          <source>Therefore, you might catch any exceptions that are thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload methods and the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> methods that read and parse the document.</source>
          <target state="translated">Таким образом, следует перехватывать все исключения, вызываемые <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> перегрузки методов и <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> методы, прочитать и проанализировать документ.</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader)">
          <source>The following example creates a DOM document, creates an <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> from the DOM document, creates an <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> using the <ph id="ph3">&lt;xref:System.Xml.XmlNodeReader&gt;</ph>.</source>
          <target state="translated">Следующий пример создает документ DOM, создает <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> из документа DOM, создает <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> с помощью <ph id="ph3">&lt;xref:System.Xml.XmlNodeReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader)">
          <source>This example produces the following output:</source>
          <target state="translated">В этом примере выводятся следующие данные:</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
          <source>The stream containing the XML data.</source>
          <target state="translated">Поток, содержащий данные XML.</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Linq.LoadOptions" /&gt;</ph> that specifies whether to load base URI and line information.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Xml.Linq.LoadOptions" /&gt;</ph>, указывающий, следует ли загружать базовый URI и сведения о строках.</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> instance by using the specified stream, optionally preserving white space, setting the base URI, and retaining line information.</source>
          <target state="translated">Создает новый экземпляр<ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>, используя указанный поток и при необходимости оставляя пустое пространство, задавая базовый URI и сохраняя сведения о строках.</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> object that reads the data that is contained in the stream.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>, который считывает содержащиеся в потоке данные.</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
          <source>The loading functionality of LINQ to XML is built upon <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">Функциональные возможности загрузки LINQ to XML построена на основе <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
          <source>Therefore, you might catch any exceptions that are thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload methods and the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> methods that read and parse the document.</source>
          <target state="translated">Таким образом, следует перехватывать все исключения, вызываемые <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> перегрузки методов и <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> методы, прочитать и проанализировать документ.</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
          <source>If you have to modify <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>, follow these steps:</source>
          <target state="translated">Если необходимо изменить <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>, выполните следующие действия:</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
          <source>Create an <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> by calling one of the <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> overloads that takes <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> as a parameter.</source>
          <target state="translated">Создание <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> путем вызова одного из <ph id="ph2">&lt;xref:System.Xml.XmlReader.Create%2A&gt;</ph> перегрузок, принимающих <ph id="ph3">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> как параметр.</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.Stream,System.Xml.Linq.LoadOptions)">
          <source>Pass the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> to one of the <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument.Load%2A&gt;</ph> overloads of <ph id="ph3">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> that takes <ph id="ph4">&lt;xref:System.Xml.XmlReader&gt;</ph> as a parameter.</source>
          <target state="translated">Передайте <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> к одному из <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument.Load%2A&gt;</ph> перегрузок <ph id="ph3">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> , который принимает <ph id="ph4">&lt;xref:System.Xml.XmlReader&gt;</ph> как параметр.</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph> that contains the content for the <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>, включающий содержимое для документа <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Linq.LoadOptions" /&gt;</ph> that specifies white space behavior, and whether to load base URI and line information.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.LoadOptions" /&gt;</ph>, указывающий поведение пустого пространства и необходимость загрузки базового URI и сведений о строке.</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> from a <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>, optionally preserving white space, setting the base URI, and retaining line information.</source>
          <target state="translated">Создает новый документ <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> из объекта <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>, при необходимости оставляя пустое пространство, задавая базовый URI и сохраняя сведения о строках.</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> that contains the XML that was read from the specified <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>, содержащий XML, считанный из указанного <ph id="ph2">&lt;see cref="T:System.IO.TextReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>If the source XML is indented, setting the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> causes the reader to read all white space in the source XML.</source>
          <target state="translated">Если источник XML с отступами, задание <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> флаг в <ph id="ph2">`options`</ph> вызывает модуль чтения для чтения все незначащие пробелы в XML-источник.</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>Nodes of type <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph> are created for both significant and insignificant white space.</source>
          <target state="translated">Узлы типа <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph> создаются для значащие и незначащие пробелы.</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>If the source XML is indented, not setting the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> causes the reader to ignore all of the insignificant white space in the source XML.</source>
          <target state="translated">Если источник XML с отступами, не задав <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> флаг в <ph id="ph2">`options`</ph> вызывает модуль чтения, пропустить все незначащие пробелы в исходном XML.</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>The XML tree is created without any text nodes for insignificant white space.</source>
          <target state="translated">Дерево XML создается без текстовых узлов для незначащие пробельные символы.</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>If the source XML is not indented, setting the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> has no effect.</source>
          <target state="translated">Если XML-источник не с отступом, задание <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> флаг в <ph id="ph2">`options`</ph> не делает ничего.</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>Significant white space is still preserved, and there are no spans of insignificant white space that could cause the creation of more white space text nodes.</source>
          <target state="translated">Значимые пробелы по-прежнему сохраняются, а незначащие пробельные символы, может привести к созданию дополнительных текстовых узлов пробелов, не произведено.</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>For more information, see <bpt id="p1">[</bpt>Preserving White Space while Loading or Parsing XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> and <bpt id="p2">[</bpt>Preserving White Space While Serializing<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>сохранения пробелов при загрузке или синтаксическом анализе XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> и <bpt id="p2">[</bpt>Сохранение пробелов при сериализации<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>Use <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Parse%2A&gt;</ph> to create an <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph> from a string that contains XML.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Parse%2A&gt;</ph> для создания <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph> из строки, которая содержит XML-код.</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>Setting <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetBaseUri&gt;</ph> is not valid when loading from a <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph>.</source>
          <target state="translated">Установка <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetBaseUri&gt;</ph> не является допустимым при загрузке из <ph id="ph2">&lt;xref:System.IO.TextReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>There is a performance penalty if you set the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph> flag.</source>
          <target state="translated">Производительность снижается, если задать <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph> флаг.</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>The line information is accurate immediately after loading the XML document.</source>
          <target state="translated">Сведения о строке является точным сразу после загрузки XML-документа.</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>If you modify the XML tree after loading the document, the line information may become meaningless.</source>
          <target state="translated">При изменении дерева XML после загрузки документа, сведения о строке могут стать бессмысленной.</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>LINQ to XML's loading functionality is built upon <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">LINQ для функциональных возможностей загрузки по XML построена на основе <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>Therefore, you might catch any exceptions that are thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload methods and the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> methods that read and parse the document.</source>
          <target state="translated">Таким образом, следует перехватывать все исключения, вызываемые <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> перегрузки методов и <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> методы, прочитать и проанализировать документ.</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>The following example creates a document from a <ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph>.</source>
          <target state="translated">В следующем примере создается документ из <ph id="ph1">&lt;xref:System.IO.StringReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.IO.TextReader,System.Xml.Linq.LoadOptions)">
          <source>This example produces the following output:</source>
          <target state="translated">В этом примере выводятся следующие данные:</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>A URI string that references the file to load into a new <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>.</source>
          <target state="translated">Строка URI, ссылающаяся на файл для загрузки в новый <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Linq.LoadOptions" /&gt;</ph> that specifies white space behavior, and whether to load base URI and line information.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.LoadOptions" /&gt;</ph>, указывающий поведение пустого пространства и необходимость загрузки базового URI и сведений о строке.</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> from a file, optionally preserving white space, setting the base URI, and retaining line information.</source>
          <target state="translated">Создает новый <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> из файла, при необходимости оставляя пустое пространство, задавая базовый URI и сохраняя сведения о строках.</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> that contains the contents of the specified file.</source>
          <target state="translated">Элемент <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> с содержимым указанного файла.</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>If the source XML is indented, setting the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> causes the reader to read all white space in the source XML.</source>
          <target state="translated">Если источник XML с отступами, задание <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> флаг в <ph id="ph2">`options`</ph> вызывает модуль чтения для чтения все незначащие пробелы в XML-источник.</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>Nodes of type <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph> are created for both significant and insignificant white space.</source>
          <target state="translated">Узлы типа <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph> создаются для значащие и незначащие пробелы.</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>If the source XML is indented, not setting the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> causes the reader to ignore all of the insignificant white space in the source XML.</source>
          <target state="translated">Если источник XML с отступами, не задав <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> флаг в <ph id="ph2">`options`</ph> вызывает модуль чтения, пропустить все незначащие пробелы в исходном XML.</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>The XML tree is created without any text nodes for insignificant white space.</source>
          <target state="translated">Дерево XML создается без текстовых узлов для незначащие пробельные символы.</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>If the source XML is not indented, setting the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> has no effect.</source>
          <target state="translated">Если XML-источник не с отступом, задание <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> флаг в <ph id="ph2">`options`</ph> не делает ничего.</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>Significant white space is still preserved, and there are no spans of insignificant white space that could cause the creation of more white space text nodes.</source>
          <target state="translated">Значимые пробелы по-прежнему сохраняются, а незначащие пробельные символы, может привести к созданию дополнительных текстовых узлов пробелов, не произведено.</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>For more information, see <bpt id="p1">[</bpt>Preserving White Space while Loading or Parsing XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> and <bpt id="p2">[</bpt>Preserving White Space While Serializing<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>сохранения пробелов при загрузке или синтаксическом анализе XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> и <bpt id="p2">[</bpt>Сохранение пробелов при сериализации<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>Use <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Parse%2A&gt;</ph> to create an <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> from a string that contains XML.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Parse%2A&gt;</ph> для создания <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> из строки, которая содержит XML-код.</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>There is a performance penalty if you set the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetBaseUri&gt;</ph> and the <ph id="ph2">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph> flags.</source>
          <target state="translated">Производительность снижается, если задать <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetBaseUri&gt;</ph> и <ph id="ph2">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph> флаги.</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>The base URI and the line information are accurate immediately after loading the XML document.</source>
          <target state="translated">Базовый URI и сведения о строке уточняются сразу после загрузки XML-документа.</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>If you modify the XML tree after loading the document, the base URI and line information may become meaningless.</source>
          <target state="translated">При изменении дерева XML после загрузки документа, базовый URI и сведения о строке могут стать бессмысленной.</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>LINQ to XML's loading functionality is built upon <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">LINQ для функциональных возможностей загрузки по XML построена на основе <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>Therefore, you might catch any exceptions that are thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload methods and the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> methods that read and parse the document.</source>
          <target state="translated">Таким образом, следует перехватывать все исключения, вызываемые <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> перегрузки методов и <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> методы, прочитать и проанализировать документ.</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>The following example shows how to load an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> from a file.</source>
          <target state="translated">В следующем примере показано, как загрузить <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> из файла.</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>This example uses the following XML document:</source>
          <target state="translated">В этом примере используется следующий XML-документ:</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source><bpt id="p1">[</bpt>Sample XML File: Typical Purchase Order (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/0606c09f-6e43-4f8d-95c8-e8e2e08d2348)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Пример XML-файла. Стандартный заказ на покупку (LINQ to XML)<ept id="p1">](http://msdn.microsoft.com/library/0606c09f-6e43-4f8d-95c8-e8e2e08d2348)</ept></target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.String,System.Xml.Linq.LoadOptions)">
          <source>This example produces the following output:</source>
          <target state="translated">В этом примере выводятся следующие данные:</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> that will be read for the content of the <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> будет прочтен для содержимого <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Linq.LoadOptions" /&gt;</ph> that specifies whether to load base URI and line information.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Xml.Linq.LoadOptions" /&gt;</ph>, указывающий, следует ли загружать базовый URI и сведения о строках.</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>Loads an <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> from an <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>, optionally setting the base URI, and retaining line information.</source>
          <target state="translated">Загружает <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> из <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>, при необходимости задавая базовый URI и сохраняя сведения о строках.</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> that contains the XML that was read from the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>, содержащий XML, считанный из указанного <ph id="ph2">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>By creating an <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> from a DOM document, and then using the <ph id="ph2">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> to create an <ph id="ph3">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, this method can be used to create a copy of a DOM document in a LINQ to XML tree.</source>
          <target state="translated">Создав <ph id="ph1">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> из документа DOM, а затем использовав <ph id="ph2">&lt;xref:System.Xml.XmlNodeReader&gt;</ph> создание <ph id="ph3">&lt;xref:System.Xml.Linq.XElement&gt;</ph>, этот метод можно использовать для создания копии документа DOM в LINQ to XML-дерева.</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>Use <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Parse%2A&gt;</ph> to create an <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> from a string that contains XML.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Parse%2A&gt;</ph> для создания <ph id="ph2">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> из строки, которая содержит XML-код.</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>Setting <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> is not valid when loading from a <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">Установка <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> не является допустимым при загрузке из <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> will be configured to either read whitespace or not.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> Будет настроен либо читать пустое пространство или нет.</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>The LINQ to XML tree will be populated with the whitespace nodes that the reader surfaces.</source>
          <target state="translated">LINQ to XML-дерево будет заполняться узлы пробелов, для чтения.</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>This will be the behavior regardless of whether <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> is set or not.</source>
          <target state="translated">Это будет поведение независимо от того, следует ли <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> установлен или нет.</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> may have a valid base URI or not.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> , Возможно, является допустимым базовым URI или нет.</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>If you set <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetBaseUri&gt;</ph>, the base URI will be set in the XML tree from the base URI that is reported by the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">Если задать <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetBaseUri&gt;</ph>, базовый URI будут устанавливаться в XML-дерево из базового URI, который сообщается с помощью <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> may have a valid line information or not.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> , Возможно, сведения действительной строкой или нет.</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>If you set <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph>, the line information will be set in the XML tree from the line information that is reported by the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">Если задать <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph>, сведения о строке задается в XML-дерево из информации о строке, полученных от <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>There is a performance penalty if you set the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph> flag.</source>
          <target state="translated">Производительность снижается, если задать <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph> флаг.</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>The line information is accurate immediately after loading the XML document.</source>
          <target state="translated">Сведения о строке является точным сразу после загрузки XML-документа.</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>If you modify the XML tree after loading the document, the line information may become meaningless.</source>
          <target state="translated">При изменении дерева XML после загрузки документа, сведения о строке могут стать бессмысленной.</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>LINQ to XML's loading functionality is built upon <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">LINQ для функциональных возможностей загрузки по XML построена на основе <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>Therefore, you might catch any exceptions that are thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload methods and the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> methods that read and parse the document.</source>
          <target state="translated">Таким образом, следует перехватывать все исключения, вызываемые <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> перегрузки методов и <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> методы, прочитать и проанализировать документ.</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>The following example loads the line information that it loads from the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">В следующем примере загружаются данные строки, которые загружаются из <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>It then prints the line information.</source>
          <target state="translated">Затем выводятся на печать сведения о строке.</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Load(System.Xml.XmlReader,System.Xml.Linq.LoadOptions)">
          <source>This example produces the following output:</source>
          <target state="translated">В этом примере выводятся следующие данные:</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XDocument.NodeType">
          <source>Gets the node type for this node.</source>
          <target state="translated">Возвращает тип узла для этого узла.</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.NodeType">
          <source>The node type.</source>
          <target state="translated">Тип узла.</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.NodeType">
          <source>For <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> objects, this value is <ph id="ph2">&lt;see cref="F:System.Xml.XmlNodeType.Document" /&gt;</ph>.</source>
          <target state="translated">Для объектов <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> это значение равно <ph id="ph2">&lt;see cref="F:System.Xml.XmlNodeType.Document" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.NodeType">
          <source>Because all classes that derive from <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> contain a <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.NodeType%2A&gt;</ph> property, you can write code that operates on collections of objects where the type of each is a subclass of <ph id="ph3">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.</source>
          <target state="translated">Так как все классы, производные от <ph id="ph1">&lt;xref:System.Xml.Linq.XObject&gt;</ph> содержат <ph id="ph2">&lt;xref:System.Xml.Linq.XObject.NodeType%2A&gt;</ph> свойства, можно написать код, который работает на коллекции объектов, где каждый тип является подклассом <ph id="ph3">&lt;xref:System.Xml.Linq.XObject&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.NodeType">
          <source>Your code can then test for the node type of each object in the collection.</source>
          <target state="translated">Затем код можно проверить тип узла каждого объекта в коллекции.</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.NodeType">
          <source>The following example shows the use of this property.</source>
          <target state="translated">В следующем примере показано использование этого свойства.</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.NodeType">
          <source>This example produces the following output:</source>
          <target state="translated">В этом примере выводятся следующие данные:</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XDocument">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> from a string, optionally preserving white space, setting the base URI, and retaining line information.</source>
          <target state="translated">Создает новый документ <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> из строки, при необходимости оставляя пустое пространство, задавая базовый URI и сохраняя сведения о строках.</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocument">
          <source>This method parses a string and creates an XML tree.</source>
          <target state="translated">Этот метод преобразует строку и создает XML-дерева.</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocument">
          <source>The following example creates a string that contains XML.</source>
          <target state="translated">В следующем примере создается строка, содержащая XML.</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocument">
          <source>It then parses the string into an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>.</source>
          <target state="translated">Затем он анализирует строку в <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Linq.XDocument">
          <source>This example produces the following output:</source>
          <target state="translated">В этом примере выводятся следующие данные:</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Parse(System.String)">
          <source>A string that contains XML.</source>
          <target state="translated">Строка, содержащая XML.</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Parse(System.String)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> from a string.</source>
          <target state="translated">Создает новый документ <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> из строки.</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Parse(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> populated from the string that contains XML.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> заполнен из строки, содержащей XML.</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String)">
          <source>This method does not preserve white space.</source>
          <target state="translated">Этот метод не сохраняет пробелы.</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String)">
          <source>If you want to preserve white space in the XML tree, use the overload of <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Parse%2A&gt;</ph> that takes <ph id="ph2">&lt;xref:System.Xml.Linq.LoadOptions&gt;</ph> as a parameter.</source>
          <target state="translated">Если вы хотите сохранить пробелы в XML-дерево, используйте перегруженный <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Parse%2A&gt;</ph> , который принимает <ph id="ph2">&lt;xref:System.Xml.Linq.LoadOptions&gt;</ph> как параметр.</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>Preserving White Space while Loading or Parsing XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> and <bpt id="p2">[</bpt>Preserving White Space While Serializing<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>сохранения пробелов при загрузке или синтаксическом анализе XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> и <bpt id="p2">[</bpt>Сохранение пробелов при сериализации<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String)">
          <source>LINQ to XML's loading functionality is built upon <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">LINQ для функциональных возможностей загрузки по XML построена на основе <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String)">
          <source>Therefore, you might catch any exceptions that are thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload methods and the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> methods that read and parse the document.</source>
          <target state="translated">Таким образом, следует перехватывать все исключения, вызываемые <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> перегрузки методов и <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> методы, прочитать и проанализировать документ.</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String)">
          <source>The following example creates a string that contains XML.</source>
          <target state="translated">В следующем примере создается строка, содержащая XML.</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String)">
          <source>It then parses the string into an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>.</source>
          <target state="translated">Затем он анализирует строку в <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String)">
          <source>This example produces the following output:</source>
          <target state="translated">В этом примере выводятся следующие данные:</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>A string that contains XML.</source>
          <target state="translated">Строка, содержащая XML.</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Linq.LoadOptions" /&gt;</ph> that specifies white space behavior, and whether to load base URI and line information.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.LoadOptions" /&gt;</ph>, указывающий поведение пустого пространства и необходимость загрузки базового URI и сведений о строке.</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>Creates a new <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> from a string, optionally preserving white space, setting the base URI, and retaining line information.</source>
          <target state="translated">Создает новый документ <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> из строки, при необходимости оставляя пустое пространство, задавая базовый URI и сохраняя сведения о строках.</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> populated from the string that contains XML.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> заполнен из строки, содержащей XML.</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>If the source XML is indented, setting the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> causes the reader to read all white space in the source XML.</source>
          <target state="translated">Если источник XML с отступами, задание <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> флаг в <ph id="ph2">`options`</ph> вызывает модуль чтения для чтения все незначащие пробелы в XML-источник.</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>Nodes of type <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph> are created for both significant and insignificant white space.</source>
          <target state="translated">Узлы типа <ph id="ph1">&lt;xref:System.Xml.Linq.XText&gt;</ph> создаются для значащие и незначащие пробелы.</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>If the source XML is indented, not setting the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> causes the reader to ignore all of the insignificant white space in the source XML.</source>
          <target state="translated">Если источник XML с отступами, не задав <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> флаг в <ph id="ph2">`options`</ph> вызывает модуль чтения, пропустить все незначащие пробелы в исходном XML.</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>The XML tree is created without any text nodes for insignificant white space.</source>
          <target state="translated">Дерево XML создается без текстовых узлов для незначащие пробельные символы.</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>If the source XML is not indented, setting the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> flag in <ph id="ph2">`options`</ph> has no effect.</source>
          <target state="translated">Если XML-источник не с отступом, задание <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.PreserveWhitespace&gt;</ph> флаг в <ph id="ph2">`options`</ph> не делает ничего.</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>Significant white space is still preserved, and there are no spans of insignificant white space that could cause the creation of more white space text nodes.</source>
          <target state="translated">Значимые пробелы по-прежнему сохраняются, а незначащие пробельные символы, может привести к созданию дополнительных текстовых узлов пробелов, не произведено.</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>For more information, see <bpt id="p1">[</bpt>Preserving White Space while Loading or Parsing XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> and <bpt id="p2">[</bpt>Preserving White Space While Serializing<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>сохранения пробелов при загрузке или синтаксическом анализе XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> и <bpt id="p2">[</bpt>Сохранение пробелов при сериализации<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>Setting <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetBaseUri&gt;</ph> is not valid when parsing from a <ph id="ph2">&lt;xref:System.String&gt;</ph>.</source>
          <target state="translated">Установка <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetBaseUri&gt;</ph> не является допустимым при синтаксическом анализе из <ph id="ph2">&lt;xref:System.String&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>There is a performance penalty if you set the <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph> flag.</source>
          <target state="translated">Производительность снижается, если задать <ph id="ph1">&lt;xref:System.Xml.Linq.LoadOptions.SetLineInfo&gt;</ph> флаг.</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>The line information is accurate immediately after loading the XML document.</source>
          <target state="translated">Сведения о строке является точным сразу после загрузки XML-документа.</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>If you modify the XML tree after loading the document, the line information may become meaningless.</source>
          <target state="translated">При изменении дерева XML после загрузки документа, сведения о строке могут стать бессмысленной.</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>LINQ to XML's loading functionality is built upon <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</source>
          <target state="translated">LINQ для функциональных возможностей загрузки по XML построена на основе <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>Therefore, you might catch any exceptions that are thrown by the <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> overload methods and the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> methods that read and parse the document.</source>
          <target state="translated">Таким образом, следует перехватывать все исключения, вызываемые <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> перегрузки методов и <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> методы, прочитать и проанализировать документ.</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>The following example parses a string into an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>.</source>
          <target state="translated">В следующем примере анализируется строка в <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Parse(System.String,System.Xml.Linq.LoadOptions)">
          <source>This example produces the following output:</source>
          <target state="translated">В этом примере выводятся следующие данные:</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="P:System.Xml.Linq.XDocument.Root">
          <source>Gets the root element of the XML Tree for this document.</source>
          <target state="translated">Возвращает корневой элемент дерева XML для этого документа.</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.Root">
          <source>The root <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> of the XML tree.</source>
          <target state="translated">Корень <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XElement" /&gt;</ph> дерева XML.</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.Root">
          <source>This property is useful when you want to compose <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> queries in the same context as when composing them for a tree rooted in <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph>.</source>
          <target state="translated">Это свойство полезно, если вы хотите создать <ph id="ph1">[!INCLUDE[sqltecxlinq](~/includes/sqltecxlinq-md.md)]</ph> запросы в том же контексте, как при их создании для дерева корень которого в <ph id="ph2">&lt;xref:System.Xml.Linq.XElement&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.Root">
          <source>See <bpt id="p1">[</bpt>Querying an XDocument vs. Querying an XElement<ept id="p1">](http://msdn.microsoft.com/library/d266f58d-f2f3-4668-b661-e716e658d13a)</ept> for more details.</source>
          <target state="translated">В разделе <bpt id="p1">[</bpt>запрос XDocument vs. Запросов к XElement<ept id="p1">](http://msdn.microsoft.com/library/d266f58d-f2f3-4668-b661-e716e658d13a)</ept> для получения дополнительных сведений.</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.Root">
          <source>The following example uses this property to get the root element of a document.</source>
          <target state="translated">В следующем примере это свойство используется для получения корневого элемента документа.</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Linq.XDocument.Root">
          <source>This example produces the following output:</source>
          <target state="translated">В этом примере выводятся следующие данные:</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="T:System.Xml.Linq.XDocument">
          <source>Serializes this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> to a file, a <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>, or an <ph id="ph3">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">Сериализует данный документ <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> в файл, <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> или <ph id="ph3">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Save(System.IO.Stream)">
          <source>The stream to output this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> to.</source>
          <target state="translated">Поток для вывода данного элемента <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Save(System.IO.Stream)">
          <source>Outputs this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> to the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</source>
          <target state="translated">Выводит этот документ <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> в указанный поток <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.Stream)">
          <source>The serialized XML will be indented.</source>
          <target state="translated">Будет иметь отступ сериализованный XML.</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.Stream)">
          <source>All insignificant white space will be removed, and additional white space will be added so that the XML will be properly indented.</source>
          <target state="translated">Будут удалены все незначащие пробельные символы и будут добавлены дополнительные пробелы, чтобы были правильными XML.</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.Stream)">
          <source>The behavior of this method is that insignificant white space will not be preserved.</source>
          <target state="translated">Поведение данного метода заключается в том, незначащий пробел не сохраняется.</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.Stream)">
          <source>If you want to control white space, use the overload of <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Save%2A&gt;</ph> that takes <ph id="ph2">&lt;xref:System.Xml.Linq.SaveOptions&gt;</ph> as a parameter.</source>
          <target state="translated">Если вы хотите управлять пробелов, используйте перегруженный <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Save%2A&gt;</ph> , который принимает <ph id="ph2">&lt;xref:System.Xml.Linq.SaveOptions&gt;</ph> как параметр.</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.Stream)">
          <source>Use the <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> option to save unindented XML.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> можно сохранить выровненных XML.</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.Stream)">
          <source>This will cause the writer to write all white spaces exactly as represented in the XML tree.</source>
          <target state="translated">Это вызовет в результате все пробелы в точности так, как представлено в дереве XML.</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.Stream)">
          <source>Use <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.OmitDuplicateNamespaces&gt;</ph> option if you want to remove duplicate namespace declarations.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.OmitDuplicateNamespaces&gt;</ph> вариант, если требуется удалить дубликаты объявлений пространств имен.</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter)">
          <source>A <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> will be written to.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>, в который будет записан элемент <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter)">
          <source>Serialize this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</source>
          <target state="translated">Сериализует данный документ <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> в <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter)">
          <source>The serialized XML will be indented.</source>
          <target state="translated">Будет иметь отступ сериализованный XML.</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter)">
          <source>All insignificant white space will be removed, and additional white space will be added so that the XML will be properly indented.</source>
          <target state="translated">Будут удалены все незначащие пробельные символы и будут добавлены дополнительные пробелы, чтобы были правильными XML.</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter)">
          <source>The behavior of this method is that insignificant white space will not be preserved.</source>
          <target state="translated">Поведение данного метода заключается в том, незначащий пробел не сохраняется.</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter)">
          <source>If you want to control white space, use the overload of <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Save%2A&gt;</ph> that takes <ph id="ph2">&lt;xref:System.Xml.Linq.SaveOptions&gt;</ph> as a parameter.</source>
          <target state="translated">Если вы хотите управлять пробелов, используйте перегруженный <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Save%2A&gt;</ph> , который принимает <ph id="ph2">&lt;xref:System.Xml.Linq.SaveOptions&gt;</ph> как параметр.</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter)">
          <source>For more information, see <bpt id="p1">[</bpt>Preserving White Space while Loading or Parsing XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> and <bpt id="p2">[</bpt>Preserving White Space While Serializing<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>сохранения пробелов при загрузке или синтаксическом анализе XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> и <bpt id="p2">[</bpt>Сохранение пробелов при сериализации<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>, saves the document to a <ph id="ph2">&lt;xref:System.IO.StringWriter&gt;</ph>, and then prints the string to the console.</source>
          <target state="translated">В следующем примере создается <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>, сохраняет документ в <ph id="ph2">&lt;xref:System.IO.StringWriter&gt;</ph>, а затем выводит на консоль строку.</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter)">
          <source>This example produces the following output:</source>
          <target state="translated">В этом примере выводятся следующие данные:</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Save(System.String)">
          <source>A string that contains the name of the file.</source>
          <target state="translated">Строка, которая содержит имя файла.</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Save(System.String)">
          <source>Serialize this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> to a file, overwriting an existing file, if it exists.</source>
          <target state="translated">Необходимо сериализовать этот объект <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> в файл, перезаписывая существующий файл, если имеется.</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.String)">
          <source>The serialized XML will be indented.</source>
          <target state="translated">Будет иметь отступ сериализованный XML.</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.String)">
          <source>All insignificant white space will be removed, and additional white space will be added so that the XML will be properly indented.</source>
          <target state="translated">Будут удалены все незначащие пробельные символы и будут добавлены дополнительные пробелы, чтобы были правильными XML.</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.String)">
          <source>The behavior of this method is that insignificant white space will not be preserved.</source>
          <target state="translated">Поведение данного метода заключается в том, незначащий пробел не сохраняется.</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.String)">
          <source>If you want to control white space, use the overload of <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Save%2A&gt;</ph> that takes <ph id="ph2">&lt;xref:System.Xml.Linq.SaveOptions&gt;</ph> as a parameter.</source>
          <target state="translated">Если вы хотите управлять пробелов, используйте перегруженный <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Save%2A&gt;</ph> , который принимает <ph id="ph2">&lt;xref:System.Xml.Linq.SaveOptions&gt;</ph> как параметр.</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.String)">
          <source>For more information, see <bpt id="p1">[</bpt>Preserving White Space while Loading or Parsing XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> and <bpt id="p2">[</bpt>Preserving White Space While Serializing<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>сохранения пробелов при загрузке или синтаксическом анализе XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> и <bpt id="p2">[</bpt>Сохранение пробелов при сериализации<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.String)">
          <source>The following example creates an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>, saves the document to a file, and then prints the file to the console.</source>
          <target state="translated">В следующем примере создается <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph>, сохраняет документ в файл, а затем выводит файл на консоль.</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.String)">
          <source>This example produces the following output:</source>
          <target state="translated">В этом примере выводятся следующие данные:</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Save(System.Xml.XmlWriter)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> that the <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> will be written to.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>, в который будет записан элемент <ph id="ph2">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Save(System.Xml.XmlWriter)">
          <source>Serialize this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> to an <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">Сериализует данный документ <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> в <ph id="ph2">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.Xml.XmlWriter)">
          <source>The following example shows how to save an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> to an <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</source>
          <target state="translated">В следующем примере демонстрируется, как сохранять <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> в <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.Xml.XmlWriter)">
          <source>This example produces the following output:</source>
          <target state="translated">В этом примере выводятся следующие данные:</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
          <source>The stream to output this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> to.</source>
          <target state="translated">Поток для вывода данного элемента <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Linq.SaveOptions" /&gt;</ph> that specifies formatting behavior.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Xml.Linq.SaveOptions" /&gt;</ph>, указывающий поведение форматирования.</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
          <source>Outputs this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> to the specified <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, optionally specifying formatting behavior.</source>
          <target state="translated">Выводит данный элемент <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> в указанный поток <ph id="ph2">&lt;see cref="T:System.IO.Stream" /&gt;</ph>, при необходимости задавая поведение форматирования.</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
          <source>By default the <ph id="ph1">`options`</ph> are set to <ph id="ph2">&lt;xref:System.Xml.Linq.SaveOptions.None&gt;</ph>.</source>
          <target state="translated">По умолчанию <ph id="ph1">`options`</ph> присваиваются <ph id="ph2">&lt;xref:System.Xml.Linq.SaveOptions.None&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
          <source>This option will remove all extraneous insignificant white space, and add appropriate insignificant white space so that the XML is properly indented.</source>
          <target state="translated">Этот параметр, удалите все лишние незначащие пробельные символы и добавить соответствующие незначащие пробелы, чтобы правильно структурированный XML.</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
          <source>If you want to save unindented XML, specify the <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> flag for <ph id="ph2">`options`</ph>.</source>
          <target state="translated">Если вы хотите сохранить выровненных XML, укажите <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> флаг, указывающий <ph id="ph2">`options`</ph>.</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
          <source>This will cause the writer to write all white spaces exactly as represented in the XML tree.</source>
          <target state="translated">Это вызовет в результате все пробелы в точности так, как представлено в дереве XML.</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.Stream,System.Xml.Linq.SaveOptions)">
          <source>Use <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.OmitDuplicateNamespaces&gt;</ph> option if you want to remove duplicate namespace declarations.</source>
          <target state="translated">Используйте <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.OmitDuplicateNamespaces&gt;</ph> вариант, если требуется удалить дубликаты объявлений пространств имен.</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>The <ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph> to output the XML to.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>, в который выводится XML.</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Linq.SaveOptions" /&gt;</ph> that specifies formatting behavior.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Xml.Linq.SaveOptions" /&gt;</ph>, указывающий поведение форматирования.</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>Serialize this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> to a <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>, optionally disabling formatting.</source>
          <target state="translated">Сериализует данный документ <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> в <ph id="ph2">&lt;see cref="T:System.IO.TextWriter" /&gt;</ph>, при необходимости выключая форматирование.</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>If you want to save unindented XML, specify the <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> flag for <ph id="ph2">`options`</ph>.</source>
          <target state="translated">Если вы хотите сохранить выровненных XML, укажите <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> флаг, указывающий <ph id="ph2">`options`</ph>.</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>This will cause the writer to write all white space exactly as represented in the XML tree.</source>
          <target state="translated">Это вызовет в результате все пробелы точно так, как представлено в дереве XML.</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>If you want to save indented XML, do not specify the <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> flag for <ph id="ph2">`options`</ph>.</source>
          <target state="translated">Если вы хотите сохранить XML с отступами, не указывайте <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> флаг, указывающий <ph id="ph2">`options`</ph>.</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>This will remove all extraneous insignificant white space, and add appropriate insignificant white space so that the XML is properly indented.</source>
          <target state="translated">Это удалит лишние незначащие пробельные символы и добавить соответствующие незначащие пробелы, чтобы правильно структурированный XML.</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>This is the default behavior, and the behavior of the overloads of the <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Save%2A&gt;</ph> methods that do not take <ph id="ph2">`options`</ph> as a parameter.</source>
          <target state="translated">Это поведение по умолчанию и поведение перегрузки <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Save%2A&gt;</ph> методы, которые не принимают <ph id="ph2">`options`</ph> как параметр.</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>For more information, see <bpt id="p1">[</bpt>Preserving White Space while Loading or Parsing XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> and <bpt id="p2">[</bpt>Preserving White Space While Serializing<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>сохранения пробелов при загрузке или синтаксическом анализе XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> и <bpt id="p2">[</bpt>Сохранение пробелов при сериализации<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>The following example shows two uses of this method.</source>
          <target state="translated">В следующем примере показано два способа использования этого метода.</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>The first use serializes the <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> with formatting.</source>
          <target state="translated">Сериализует первого использования <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> с форматированием.</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>The second preserves white space.</source>
          <target state="translated">Во втором сохраняется пустое пространство.</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>Because the document has no white space in it as constructed, preserving white space outputs the XML without any indenting.</source>
          <target state="translated">Так как в документе без пробелов в нем построенный, сохранение пустого пространства выводит XML без отступов.</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.IO.TextWriter,System.Xml.Linq.SaveOptions)">
          <source>This example produces the following output:</source>
          <target state="translated">В этом примере выводятся следующие данные:</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>A string that contains the name of the file.</source>
          <target state="translated">Строка, которая содержит имя файла.</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>A <ph id="ph1">&lt;see cref="T:System.Xml.Linq.SaveOptions" /&gt;</ph> that specifies formatting behavior.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Xml.Linq.SaveOptions" /&gt;</ph>, указывающий поведение форматирования.</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>Serialize this <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> to a file, optionally disabling formatting.</source>
          <target state="translated">Сериализует данный <ph id="ph1">&lt;see cref="T:System.Xml.Linq.XDocument" /&gt;</ph> в файл, при необходимости выключая форматирование.</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>If you want to save unindented XML, specify the <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> flag for <ph id="ph2">`options`</ph>.</source>
          <target state="translated">Если вы хотите сохранить выровненных XML, укажите <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> флаг, указывающий <ph id="ph2">`options`</ph>.</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>This will cause the writer to write all white space exactly as represented in the XML tree.</source>
          <target state="translated">Это вызовет в результате все пробелы точно так, как представлено в дереве XML.</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>If you want to save indented XML, do not specify the <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> flag for <ph id="ph2">`options`</ph>.</source>
          <target state="translated">Если вы хотите сохранить XML с отступами, не указывайте <ph id="ph1">&lt;xref:System.Xml.Linq.SaveOptions.DisableFormatting&gt;</ph> флаг, указывающий <ph id="ph2">`options`</ph>.</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>This will remove all extraneous insignificant white space, and add appropriate insignificant white space so that the XML is properly indented.</source>
          <target state="translated">Это удалит лишние незначащие пробельные символы и добавить соответствующие незначащие пробелы, чтобы правильно структурированный XML.</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>This is the default behavior, and the behavior of the overloads of the <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Save%2A&gt;</ph> methods that do not take <ph id="ph2">`options`</ph> as a parameter.</source>
          <target state="translated">Это поведение по умолчанию и поведение перегрузки <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument.Save%2A&gt;</ph> методы, которые не принимают <ph id="ph2">`options`</ph> как параметр.</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>For more information, see <bpt id="p1">[</bpt>Preserving White Space while Loading or Parsing XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> and <bpt id="p2">[</bpt>Preserving White Space While Serializing<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</source>
          <target state="translated">Дополнительные сведения см. в разделе <bpt id="p1">[</bpt>сохранения пробелов при загрузке или синтаксическом анализе XML<ept id="p1">](http://msdn.microsoft.com/library/093a7169-a04e-4638-b08c-d1cb98aa650d)</ept> и <bpt id="p2">[</bpt>Сохранение пробелов при сериализации<ept id="p2">](http://msdn.microsoft.com/library/fb146217-0a49-4efc-ac84-7265b91d3939)</ept>.</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>The following example shows two uses of this method.</source>
          <target state="translated">В следующем примере показано два способа использования этого метода.</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>The first use preserves white space.</source>
          <target state="translated">В первом сохраняется пустое пространство.</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>The second one serializes the <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> with indenting.</source>
          <target state="translated">Сериализует второй <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> с помощью отступов.</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.Save(System.String,System.Xml.Linq.SaveOptions)">
          <source>This example produces the following output:</source>
          <target state="translated">В этом примере выводятся следующие данные:</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph> into which this method will write.</source>
          <target state="translated">Объект <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>, в который данный метод будет выполнять запись.</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" uid="M:System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)">
          <source>Write this document to an <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</source>
          <target state="translated">Записывает данный документ в <ph id="ph1">&lt;see cref="T:System.Xml.XmlWriter" /&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)">
          <source>The following example shows how to write an <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> to an <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</source>
          <target state="translated">В следующем примере показан способ записи <ph id="ph1">&lt;xref:System.Xml.Linq.XDocument&gt;</ph> для <ph id="ph2">&lt;xref:System.Xml.XmlWriter&gt;</ph>.</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)">
          <source>Note that the example did not write an XML declaration.</source>
          <target state="translated">Обратите внимание, что примере не записывается объявление XML.</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Linq.XDocument.WriteTo(System.Xml.XmlWriter)">
          <source>This example produces the following output:</source>
          <target state="translated">В этом примере выводятся следующие данные:</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>